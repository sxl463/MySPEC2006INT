; ModuleID = 'milc.bc'
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, i8*, i8*, i8*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type { %struct._IO_marker*, %struct._IO_FILE*, i32 }
%struct.site = type { i16, i16, i16, i16, i8, i32, %struct.double_prn, i32, [4 x %struct.su3_matrix], [4 x %struct.anti_hermitmat], [4 x double], %struct.su3_vector, %struct.su3_vector, %struct.su3_vector, %struct.su3_vector, %struct.su3_vector, %struct.su3_vector, [4 x %struct.su3_vector], [4 x %struct.su3_vector], %struct.su3_vector, %struct.su3_matrix, %struct.su3_matrix }
%struct.double_prn = type { i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, double }
%struct.anti_hermitmat = type { %struct.complex, %struct.complex, %struct.complex, double, double, double, double }
%struct.complex = type { double, double }
%struct.su3_vector = type { [3 x %struct.complex] }
%struct.su3_matrix = type { [3 x [3 x %struct.complex]] }
%struct.gauge_file = type { %struct._IO_FILE*, %struct.gauge_header*, i8*, i32, i32*, i32, %struct.gauge_check }
%struct.gauge_header = type { i32, [64 x i8], [4 x i32], i32, i32 }
%struct.gauge_check = type { i32, i32 }
%struct.params = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, double, double, double, i32, double, double, double, i32, i32, i32, i32, i32, [256 x i8], [256 x i8] }
%struct.anon.138 = type { [7 x i32], i32, double, double }
%union.anon = type { double }
%struct.msg_tag = type { i32, i32, i8*, i32 }
%struct.su2_matrix = type { [2 x [2 x %struct.complex]] }
%struct.QCDheader = type { i32, i8**, i8** }
%union.anon.79 = type { i64 }
%struct.anon = type { i32, [200 x i8], i32, [2 x double] }
%struct.anon.0 = type { i16, i16, i16, i16, [4 x %struct.su3_matrix] }
%struct.anon.1 = type { i16, i16, i16, i16, [4 x %struct.su3_matrix] }
%struct.half_wilson_vector = type { [2 x %struct.su3_vector] }
%struct.double_complex = type { double, double }
%struct.wilson_vector = type { [4 x %struct.su3_vector] }

@.str = private unnamed_addr constant [13 x i8] c"magic_number\00", align 1
@.str1 = private unnamed_addr constant [11 x i8] c"time_stamp\00", align 1
@.str2 = private unnamed_addr constant [10 x i8] c"checksums\00", align 1
@.str3 = private unnamed_addr constant [3 x i8] c"nx\00", align 1
@.str4 = private unnamed_addr constant [3 x i8] c"ny\00", align 1
@.str5 = private unnamed_addr constant [3 x i8] c"nz\00", align 1
@.str6 = private unnamed_addr constant [3 x i8] c"nt\00", align 1
@.str7 = private unnamed_addr constant [19 x i8] c"action.description\00", align 1
@.str8 = private unnamed_addr constant [18 x i8] c"gauge.description\00", align 1
@.str9 = private unnamed_addr constant [13 x i8] c"gauge.beta11\00", align 1
@.str10 = private unnamed_addr constant [13 x i8] c"gauge.beta12\00", align 1
@.str11 = private unnamed_addr constant [17 x i8] c"gauge.tadpole.u0\00", align 1
@.str12 = private unnamed_addr constant [13 x i8] c"gauge.nloops\00", align 1
@.str13 = private unnamed_addr constant [12 x i8] c"gauge.nreps\00", align 1
@.str14 = private unnamed_addr constant [24 x i8] c"gauge.previous.filename\00", align 1
@.str15 = private unnamed_addr constant [26 x i8] c"gauge.previous.time_stamp\00", align 1
@.str16 = private unnamed_addr constant [25 x i8] c"gauge.previous.checksums\00", align 1
@.str17 = private unnamed_addr constant [22 x i8] c"gauge.fix.description\00", align 1
@.str18 = private unnamed_addr constant [20 x i8] c"gauge.fix.tolerance\00", align 1
@.str19 = private unnamed_addr constant [24 x i8] c"gauge.smear.description\00", align 1
@.str20 = private unnamed_addr constant [18 x i8] c"gauge.smear.steps\00", align 1
@.str21 = private unnamed_addr constant [19 x i8] c"gauge.smear.factor\00", align 1
@.str22 = private unnamed_addr constant [18 x i8] c"quark.description\00", align 1
@.str23 = private unnamed_addr constant [14 x i8] c"quark.flavors\00", align 1
@.str24 = private unnamed_addr constant [15 x i8] c"quark.flavors1\00", align 1
@.str25 = private unnamed_addr constant [15 x i8] c"quark.flavors2\00", align 1
@.str26 = private unnamed_addr constant [11 x i8] c"quark.mass\00", align 1
@.str27 = private unnamed_addr constant [12 x i8] c"quark.mass1\00", align 1
@.str28 = private unnamed_addr constant [12 x i8] c"quark.mass2\00", align 1
@.str29 = private unnamed_addr constant [12 x i8] c"quark.kappa\00", align 1
@.str30 = private unnamed_addr constant [14 x i8] c"quark.link.c1\00", align 1
@.str31 = private unnamed_addr constant [14 x i8] c"quark.link.c3\00", align 1
@.str32 = private unnamed_addr constant [16 x i8] c"quark.staple.w3\00", align 1
@.str33 = private unnamed_addr constant [16 x i8] c"quark.clover.c0\00", align 1
@.str34 = private unnamed_addr constant [16 x i8] c"quark.clover.u0\00", align 1
@.str35 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@gauge_info_keyword = internal global [36 x i8*] [i8* getelementptr inbounds ([13 x i8]* @.str, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8]* @.str1, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8]* @.str2, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8]* @.str3, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8]* @.str4, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8]* @.str5, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8]* @.str6, i32 0, i32 0), i8* getelementptr inbounds ([19 x i8]* @.str7, i32 0, i32 0), i8* getelementptr inbounds ([18 x i8]* @.str8, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8]* @.str9, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8]* @.str10, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8]* @.str11, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8]* @.str12, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8]* @.str13, i32 0, i32 0), i8* getelementptr inbounds ([24 x i8]* @.str14, i32 0, i32 0), i8* getelementptr inbounds ([26 x i8]* @.str15, i32 0, i32 0), i8* getelementptr inbounds ([25 x i8]* @.str16, i32 0, i32 0), i8* getelementptr inbounds ([22 x i8]* @.str17, i32 0, i32 0), i8* getelementptr inbounds ([20 x i8]* @.str18, i32 0, i32 0), i8* getelementptr inbounds ([24 x i8]* @.str19, i32 0, i32 0), i8* getelementptr inbounds ([18 x i8]* @.str20, i32 0, i32 0), i8* getelementptr inbounds ([19 x i8]* @.str21, i32 0, i32 0), i8* getelementptr inbounds ([18 x i8]* @.str22, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8]* @.str23, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8]* @.str24, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8]* @.str25, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8]* @.str26, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8]* @.str27, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8]* @.str28, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8]* @.str29, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8]* @.str30, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8]* @.str31, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8]* @.str32, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8]* @.str33, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8]* @.str34, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8]* @.str35, i32 0, i32 0)], align 16
@warms = internal global i32 0, align 4
@this_node = internal global i32 0, align 4
@.str36 = private unnamed_addr constant [19 x i8] c"WARMUPS COMPLETED\0A\00", align 1
@stdout = external global %struct._IO_FILE*
@trajecs = internal global i32 0, align 4
@propinterval = internal global i32 0, align 4
@lattice = internal global %struct.site* null, align 8
@mass = internal global double 0.000000e+00, align 8
@.str37 = private unnamed_addr constant [19 x i8] c"RUNNING COMPLETED\0A\00", align 1
@.str38 = private unnamed_addr constant [31 x i8] c"average cg iters for step= %e\0A\00", align 1
@.str39 = private unnamed_addr constant [18 x i8] c"total_iters = %d\0A\00", align 1
@total_iters = internal global i32 0, align 4
@saveflag = internal global i32 0, align 4
@savefile = internal global [256 x i8] zeroinitializer, align 16
@ensemble_id = internal global [256 x i8] zeroinitializer, align 16
@sequence_number = internal global i32 0, align 4
@nx = internal global i32 0, align 4
@ny = internal global i32 0, align 4
@nz = internal global i32 0, align 4
@nt = internal global i32 0, align 4
@volume = internal global i32 0, align 4
@iseed = internal global i32 0, align 4
@steps = internal global i32 0, align 4
@niter = internal global i32 0, align 4
@nflavors = internal global i32 0, align 4
@epsilon = internal global double 0.000000e+00, align 8
@beta = internal global double 0.000000e+00, align 8
@u0 = internal global double 0.000000e+00, align 8
@rsqmin = internal global double 0.000000e+00, align 8
@rsqprop = internal global double 0.000000e+00, align 8
@startflag = internal global i32 0, align 4
@startfile = internal global [256 x i8] zeroinitializer, align 16
@phases_in = internal global i32 0, align 4
@source_start = internal global i32 0, align 4
@source_inc = internal global i32 0, align 4
@n_sources = internal global i32 0, align 4
@sites_on_node = internal global i32 0, align 4
@even_sites_on_node = internal global i32 0, align 4
@odd_sites_on_node = internal global i32 0, align 4
@number_of_nodes = internal global i32 0, align 4
@valid_longlinks = internal global i32 0, align 4
@valid_fatlinks = internal global i32 0, align 4
@startlat_p = internal global %struct.gauge_file* null, align 8
@node_prn = internal global %struct.double_prn zeroinitializer, align 8
@gen_pt = internal global [16 x i8**] zeroinitializer, align 16
@t_longlink = internal global %struct.su3_matrix* null, align 8
@t_fatlink = internal global %struct.su3_matrix* null, align 8
@start_lat_hdr = internal global %struct.gauge_header zeroinitializer, align 4
@.str40 = private unnamed_addr constant [38 x i8] c"PBP: mass %e     %e  %e ( %d of %d )\0A\00", align 1
@.str141 = private unnamed_addr constant [38 x i8] c"FACTION: mass = %e,  %e ( %d of %d )\0A\00", align 1
@.str44 = private unnamed_addr constant [19 x i8] c"action.description\00", align 1
@.str145 = private unnamed_addr constant [3 x i8] c"%s\00", align 1
@.str246 = private unnamed_addr constant [32 x i8] c"\22Gauge plus fermion (improved)\22\00", align 1
@.str347 = private unnamed_addr constant [18 x i8] c"gauge.description\00", align 1
@.str448 = private unnamed_addr constant [13 x i8] c"gauge.nloops\00", align 1
@.str549 = private unnamed_addr constant [3 x i8] c"%d\00", align 1
@.str650 = private unnamed_addr constant [12 x i8] c"gauge.nreps\00", align 1
@.str751 = private unnamed_addr constant [13 x i8] c"gauge.beta11\00", align 1
@.str852 = private unnamed_addr constant [3 x i8] c"%f\00", align 1
@.str953 = private unnamed_addr constant [17 x i8] c"gauge.tadpole.u0\00", align 1
@.str1054 = private unnamed_addr constant [18 x i8] c"quark.description\00", align 1
@quark_action_description = internal global [72 x i8] c"\22O(a^2): couplings(pi)=0, Naik term, No O(a^2) errors, tadpole weights\22\00", align 16
@.str1155 = private unnamed_addr constant [14 x i8] c"quark.flavors\00", align 1
@.str1256 = private unnamed_addr constant [11 x i8] c"quark.mass\00", align 1
@.str57 = private unnamed_addr constant [14 x i8] c"Made lattice\0A\00", align 1
@.str158 = private unnamed_addr constant [17 x i8] c"Made nn gathers\0A\00", align 1
@.str259 = private unnamed_addr constant [18 x i8] c"Made 3nn gathers\0A\00", align 1
@.str360 = private unnamed_addr constant [16 x i8] c"Finished setup\0A\00", align 1
@.str461 = private unnamed_addr constant [29 x i8] c"SU3 with improved KS action\0A\00", align 1
@.str562 = private unnamed_addr constant [43 x i8] c"Microcanonical simulation with refreshing\0A\00", align 1
@.str663 = private unnamed_addr constant [16 x i8] c"MIMD version 6\0A\00", align 1
@.str764 = private unnamed_addr constant [29 x i8] c"Machine = %s, with %d nodes\0A\00", align 1
@.str865 = private unnamed_addr constant [13 x i8] c"R algorithm\0A\00", align 1
@.str966 = private unnamed_addr constant [9 x i8] c"nflavors\00", align 1
@par_buf = internal global %struct.params zeroinitializer, align 8
@.str1067 = private unnamed_addr constant [3 x i8] c"nx\00", align 1
@.str1168 = private unnamed_addr constant [3 x i8] c"ny\00", align 1
@.str1269 = private unnamed_addr constant [3 x i8] c"nz\00", align 1
@.str1370 = private unnamed_addr constant [3 x i8] c"nt\00", align 1
@.str1471 = private unnamed_addr constant [6 x i8] c"iseed\00", align 1
@.str1572 = private unnamed_addr constant [3 x i8] c"\0A\0A\00", align 1
@.str1673 = private unnamed_addr constant [6 x i8] c"warms\00", align 1
@.str1774 = private unnamed_addr constant [8 x i8] c"trajecs\00", align 1
@.str1875 = private unnamed_addr constant [18 x i8] c"traj_between_meas\00", align 1
@.str1976 = private unnamed_addr constant [5 x i8] c"beta\00", align 1
@.str2077 = private unnamed_addr constant [5 x i8] c"mass\00", align 1
@.str2178 = private unnamed_addr constant [3 x i8] c"u0\00", align 1
@.str2279 = private unnamed_addr constant [25 x i8] c"microcanonical_time_step\00", align 1
@.str2380 = private unnamed_addr constant [21 x i8] c"steps_per_trajectory\00", align 1
@.str2481 = private unnamed_addr constant [18 x i8] c"max_cg_iterations\00", align 1
@.str2582 = private unnamed_addr constant [15 x i8] c"error_per_site\00", align 1
@.str2683 = private unnamed_addr constant [21 x i8] c"error_for_propagator\00", align 1
@.str2784 = private unnamed_addr constant [29 x i8] c"third_neighb: bad direction\0A\00", align 1
@gf = internal global %struct.gauge_file* null, align 8
@.str95 = private unnamed_addr constant [32 x i8] c"LAYOUT = Hypercubes, options = \00", align 1
@.str196 = private unnamed_addr constant [11 x i8] c"EVENFIRST,\00", align 1
@.str297 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@squaresize = internal global [4 x i32] zeroinitializer, align 16
@nsquares = internal global [4 x i32] zeroinitializer, align 16
@.str398 = private unnamed_addr constant [61 x i8] c"LAYOUT: Can't lay out this lattice, not enough factors of 2\0A\00", align 1
@.str499 = private unnamed_addr constant [35 x i8] c"SORRY, CAN'T LAY OUT THIS LATTICE\0A\00", align 1
@.str102 = private unnamed_addr constant [61 x i8] c"Unitarity problem on node %d, site %d, dir %d, deviation=%f\0A\00", align 1
@.str1103 = private unnamed_addr constant [13 x i8] c"SU3 matrix:\0A\00", align 1
@.str2104 = private unnamed_addr constant [4 x i8] c"%f \00", align 1
@.str3105 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@.str4106 = private unnamed_addr constant [16 x i8] c"repeat in hex:\0A\00", align 1
@.str5107 = private unnamed_addr constant [6 x i8] c"%08x \00", align 1
@.str6108 = private unnamed_addr constant [6 x i8] c"  \0A \0A\00", align 1
@.str7109 = private unnamed_addr constant [52 x i8] c"Unitarity problem on node %d, maximum deviation=%f\0A\00", align 1
@.str110 = private unnamed_addr constant [32 x i8] c"plaquette: can't malloc su3mat\0A\00", align 1
@diffmat_offset = internal global i32 0, align 4
@diffmatp = internal global %struct.su3_matrix* null, align 8
@sumvec_offset = internal global i32 0, align 4
@sumvecp = internal global %struct.su3_vector* null, align 8
@.str111 = private unnamed_addr constant [32 x i8] c"gaugefix: Can't malloc diffmat\0A\00", align 1
@.str1112 = private unnamed_addr constant [31 x i8] c"gaugefix: Can't malloc sumvec\0A\00", align 1
@.str2113 = private unnamed_addr constant [55 x i8] c"GFIX: Ended at step %d. Av gf action %.8e, delta %.3e\0A\00", align 1
@.str114 = private unnamed_addr constant [54 x i8] c"save_lattice: ERROR: unknown type for saving lattice\0A\00", align 1
@.str1115 = private unnamed_addr constant [19 x i8] c"Time to save = %e\0A\00", align 1
@.str2116 = private unnamed_addr constant [19 x i8] c"CHECK PLAQ: %e %e\0A\00", align 1
@.str3117 = private unnamed_addr constant [34 x i8] c"reload_lattice: Bad startflag %d\0A\00", align 1
@.str4118 = private unnamed_addr constant [41 x i8] c"Time to reload gauge configuration = %e\0A\00", align 1
@.str5119 = private unnamed_addr constant [40 x i8] c"Unitarity checked.  Max deviation %.2e\0A\00", align 1
@.str6120 = private unnamed_addr constant [82 x i8] c"enter 'continue', 'fresh', 'reload_ascii', 'reload_serial', or 'reload_parallel'\0A\00", align 1
@.str7121 = private unnamed_addr constant [3 x i8] c"%s\00", align 1
@.str8122 = private unnamed_addr constant [64 x i8] c"ask_starting_lattice: ERROR IN INPUT: starting lattice command\0A\00", align 1
@.str9123 = private unnamed_addr constant [4 x i8] c"%s \00", align 1
@.str10124 = private unnamed_addr constant [6 x i8] c"fresh\00", align 1
@.str11125 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@.str12126 = private unnamed_addr constant [9 x i8] c"continue\00", align 1
@.str13127 = private unnamed_addr constant [13 x i8] c"reload_ascii\00", align 1
@.str14128 = private unnamed_addr constant [14 x i8] c"reload_serial\00", align 1
@.str15129 = private unnamed_addr constant [16 x i8] c"reload_parallel\00", align 1
@.str16130 = private unnamed_addr constant [69 x i8] c"ask_starting_lattice: ERROR IN INPUT: lattice_command %s is invalid\0A\00", align 1
@.str17131 = private unnamed_addr constant [39 x i8] c"enter name of file containing lattice\0A\00", align 1
@.str18132 = private unnamed_addr constant [54 x i8] c"ask_starting_lattice: ERROR IN INPUT: file name read\0A\00", align 1
@.str19133 = private unnamed_addr constant [4 x i8] c"%s\0A\00", align 1
@.str20134 = private unnamed_addr constant [142 x i8] c"'forget' lattice at end,  'save_ascii', 'save_serial', 'save_parallel', 'save_checkpoint', 'save_serial_archive', or 'save_parallel_archive'\0A\00", align 1
@.str21135 = private unnamed_addr constant [60 x i8] c"ask_ending_lattice: ERROR IN INPUT: ending lattice command\0A\00", align 1
@.str22136 = private unnamed_addr constant [11 x i8] c"save_ascii\00", align 1
@.str23137 = private unnamed_addr constant [12 x i8] c"save_serial\00", align 1
@.str24138 = private unnamed_addr constant [14 x i8] c"save_parallel\00", align 1
@.str25139 = private unnamed_addr constant [16 x i8] c"save_checkpoint\00", align 1
@.str26140 = private unnamed_addr constant [20 x i8] c"save_serial_archive\00", align 1
@.str27141 = private unnamed_addr constant [22 x i8] c"save_parallel_archive\00", align 1
@.str28142 = private unnamed_addr constant [7 x i8] c"forget\00", align 1
@.str29143 = private unnamed_addr constant [70 x i8] c"ask_ending_lattice: ERROR IN INPUT: %s is not a save lattice command\0A\00", align 1
@.str30144 = private unnamed_addr constant [16 x i8] c"enter filename\0A\00", align 1
@.str31145 = private unnamed_addr constant [51 x i8] c"ask_ending_lattice: ERROR IN INPUT: save filename\0A\00", align 1
@.str32146 = private unnamed_addr constant [33 x i8] c"unit gauge configuration loaded\0A\00", align 1
@.str33147 = private unnamed_addr constant [10 x i8] c"enter %s \00", align 1
@.str34148 = private unnamed_addr constant [4 x i8] c"%lf\00", align 1
@.str35149 = private unnamed_addr constant [7 x i8] c"%s %g\0A\00", align 1
@.str36150 = private unnamed_addr constant [20 x i8] c"Data format error.\0A\00", align 1
@.str37151 = private unnamed_addr constant [41 x i8] c"get_f: EOF on STDIN while expecting %s.\0A\00", align 1
@.str38152 = private unnamed_addr constant [36 x i8] c"get_f: Format error looking for %s\0A\00", align 1
@.str39153 = private unnamed_addr constant [49 x i8] c"get_f: ERROR IN INPUT: expected %s but found %s\0A\00", align 1
@.str40154 = private unnamed_addr constant [47 x i8] c"\0Aget_f: Expecting value for %s but found EOF.\0A\00", align 1
@.str41 = private unnamed_addr constant [43 x i8] c"\0Aget_f: Format error reading value for %s\0A\00", align 1
@.str42 = private unnamed_addr constant [4 x i8] c"%g\0A\00", align 1
@.str43 = private unnamed_addr constant [3 x i8] c"%d\00", align 1
@.str44155 = private unnamed_addr constant [7 x i8] c"%s %d\0A\00", align 1
@.str45 = private unnamed_addr constant [41 x i8] c"get_i: EOF on STDIN while expecting %s.\0A\00", align 1
@.str46 = private unnamed_addr constant [36 x i8] c"get_i: Format error looking for %s\0A\00", align 1
@.str47 = private unnamed_addr constant [49 x i8] c"get_i: ERROR IN INPUT: expected %s but found %s\0A\00", align 1
@.str48 = private unnamed_addr constant [47 x i8] c"\0Aget_i: Expecting value for %s but found EOF.\0A\00", align 1
@.str49 = private unnamed_addr constant [43 x i8] c"\0Aget_i: Format error reading value for %s\0A\00", align 1
@.str50 = private unnamed_addr constant [4 x i8] c"%d\0A\00", align 1
@.str51 = private unnamed_addr constant [7 x i8] c"%s %s\0A\00", align 1
@.str52 = private unnamed_addr constant [41 x i8] c"get_s: EOF on STDIN while expecting %s.\0A\00", align 1
@.str53 = private unnamed_addr constant [36 x i8] c"get_s: Format error looking for %s\0A\00", align 1
@.str54 = private unnamed_addr constant [49 x i8] c"get_s: ERROR IN INPUT: expected %s but found %s\0A\00", align 1
@.str55 = private unnamed_addr constant [47 x i8] c"\0Aget_s: Expecting value for %s but found EOF.\0A\00", align 1
@.str56 = private unnamed_addr constant [43 x i8] c"\0Aget_s: Format error reading value for %s\0A\00", align 1
@.str57156 = private unnamed_addr constant [41 x i8] c"type 0 for no prompts  or 1 for prompts\0A\00", align 1
@.str58 = private unnamed_addr constant [7 x i8] c"prompt\00", align 1
@.str59 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@.str60 = private unnamed_addr constant [2 x i8] c"1\00", align 1
@.str61 = private unnamed_addr constant [44 x i8] c"get_prompt: ERROR IN INPUT: initial prompt\0A\00", align 1
@.str171 = private unnamed_addr constant [3 x i8] c"%d\00", align 1
@.str1172 = private unnamed_addr constant [3 x i8] c"%x\00", align 1
@.str2173 = private unnamed_addr constant [4 x i8] c"%lf\00", align 1
@.str3174 = private unnamed_addr constant [4 x i8] c"%s\0A\00", align 1
@.str4175 = private unnamed_addr constant [25 x i8] c"reading Archive header:\0A\00", align 1
@.str5176 = private unnamed_addr constant [3 x i8] c"%s\00", align 1
@.str6177 = private unnamed_addr constant [12 x i8] c"END_HEADER\0A\00", align 1
@.str7178 = private unnamed_addr constant [31 x i8] c"%s: Node %d %s write error %d\0A\00", align 1
@.str8179 = private unnamed_addr constant [39 x i8] c"%s: Node %d %s descrip,write error %d\0A\00", align 1
@.str9180 = private unnamed_addr constant [30 x i8] c"%s: Node %d %s read error %d\0A\00", align 1
@pwrite_gauge_hdr.myname = private unnamed_addr constant [17 x i8] c"pwrite_gauge_hdr\00", align 16
@.str10181 = private unnamed_addr constant [13 x i8] c"magic_number\00", align 1
@.str11182 = private unnamed_addr constant [11 x i8] c"dimensions\00", align 1
@.str12183 = private unnamed_addr constant [11 x i8] c"time_stamp\00", align 1
@.str13184 = private unnamed_addr constant [6 x i8] c"order\00", align 1
@swrite_gauge_hdr.myname = private unnamed_addr constant [17 x i8] c"swrite_gauge_hdr\00", align 16
@.str14185 = private unnamed_addr constant [57 x i8] c"write_gauge_info_item: WARNING: keyword %s not in table\0A\00", align 1
@.str15186 = private unnamed_addr constant [5 x i8] c"%s =\00", align 1
@.str16187 = private unnamed_addr constant [5 x i8] c"[%d]\00", align 1
@.str17188 = private unnamed_addr constant [2 x i8] c" \00", align 1
@.str18189 = private unnamed_addr constant [2 x i8] c"s\00", align 1
@.str19190 = private unnamed_addr constant [2 x i8] c"d\00", align 1
@.str20191 = private unnamed_addr constant [2 x i8] c"e\00", align 1
@.str21192 = private unnamed_addr constant [2 x i8] c"f\00", align 1
@.str22193 = private unnamed_addr constant [2 x i8] c"g\00", align 1
@.str23194 = private unnamed_addr constant [50 x i8] c"write_gauge_info_item: Unrecognized data type %s\0A\00", align 1
@.str24195 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@.str25196 = private unnamed_addr constant [6 x i8] c".info\00", align 1
@.str26197 = private unnamed_addr constant [2 x i8] c"w\00", align 1
@.str27198 = private unnamed_addr constant [54 x i8] c"write_gauge_info_file: Can't open ascii info file %s\0A\00", align 1
@.str28199 = private unnamed_addr constant [5 x i8] c"\22%s\22\00", align 1
@.str29200 = private unnamed_addr constant [6 x i8] c"%x %x\00", align 1
@.str30201 = private unnamed_addr constant [10 x i8] c"checksums\00", align 1
@.str31202 = private unnamed_addr constant [3 x i8] c"nx\00", align 1
@.str32203 = private unnamed_addr constant [3 x i8] c"ny\00", align 1
@.str33204 = private unnamed_addr constant [3 x i8] c"nz\00", align 1
@.str34205 = private unnamed_addr constant [3 x i8] c"nt\00", align 1
@.str35206 = private unnamed_addr constant [20 x i8] c"Wrote info file %s\0A\00", align 1
@setup_input_gauge_file.myname = private unnamed_addr constant [23 x i8] c"setup_input_gauge_file\00", align 16
@.str36207 = private unnamed_addr constant [21 x i8] c"%s: Can't malloc gf\0A\00", align 1
@.str37208 = private unnamed_addr constant [21 x i8] c"%s: Can't malloc gh\0A\00", align 1
@setup_output_gauge_file.myname = private unnamed_addr constant [24 x i8] c"setup_output_gauge_file\00", align 16
@w_serial_i.myname = private unnamed_addr constant [11 x i8] c"w_serial_i\00", align 1
@.str38209 = private unnamed_addr constant [3 x i8] c"wb\00", align 1
@.str39210 = private unnamed_addr constant [42 x i8] c"%s: Node %d can't open file %s, error %d\0A\00", align 1
@read_checksum.myname = private unnamed_addr constant [14 x i8] c"read_checksum\00", align 1
@.str40211 = private unnamed_addr constant [9 x i8] c"checksum\00", align 1
@.str41212 = private unnamed_addr constant [54 x i8] c"%s: Checksum violation. Computed %x %x.  Read %x %x.\0A\00", align 1
@.str42213 = private unnamed_addr constant [20 x i8] c"Checksums %x %x OK\0A\00", align 1
@write_checksum.myname = private unnamed_addr constant [15 x i8] c"write_checksum\00", align 1
@.str43214 = private unnamed_addr constant [17 x i8] c"Checksums %x %x\0A\00", align 1
@.str44215 = private unnamed_addr constant [53 x i8] c"w_serial: Attempting serial write to parallel file \0A\00", align 1
@.str45216 = private unnamed_addr constant [36 x i8] c"w_serial: Node 0 can't malloc lbuf\0A\00", align 1
@.str46217 = private unnamed_addr constant [50 x i8] c"w_serial: Node %d fseeko failed error %d file %s\0A\00", align 1
@.str47218 = private unnamed_addr constant [62 x i8] c"w_serial: Node %d gauge configuration write error %d file %s\0A\00", align 1
@.str48219 = private unnamed_addr constant [54 x i8] c"Saved gauge configuration serially to binary file %s\0A\00", align 1
@.str49220 = private unnamed_addr constant [15 x i8] c"Time stamp %s\0A\00", align 1
@.str50221 = private unnamed_addr constant [55 x i8] c"w_serial_f: Attempting serial close on parallel file \0A\00", align 1
@.str51222 = private unnamed_addr constant [45 x i8] c"read_site_list: Can't malloc rank2rcv table\0A\00", align 1
@.str52223 = private unnamed_addr constant [49 x i8] c"read_site_list: Node %d site list read error %d\0A\00", align 1
@read_v3_gauge_hdr.myname = private unnamed_addr constant [18 x i8] c"read_v3_gauge_hdr\00", align 16
@.str53224 = private unnamed_addr constant [74 x i8] c"First 4 bytes were zero. Trying to interpret with 64 bit integer format.\0A\00", align 1
@.str54225 = private unnamed_addr constant [13 x i8] c"magic number\00", align 1
@.str55226 = private unnamed_addr constant [49 x i8] c"Reading as old-style gauge field configuration.\0A\00", align 1
@.str56227 = private unnamed_addr constant [67 x i8] c"Reading as old-style gauge field configuration with byte reversal\0A\00", align 1
@.str57228 = private unnamed_addr constant [39 x i8] c"read_v3_gauge_hdr: Can't byte reverse\0A\00", align 1
@.str58229 = private unnamed_addr constant [53 x i8] c"requires size of int32type(%d) = size of double(%d)\0A\00", align 1
@.str59230 = private unnamed_addr constant [49 x i8] c"read_v3_gauge_hdr: Incorrect lattice dimensions \00", align 1
@.str60231 = private unnamed_addr constant [4 x i8] c"%d \00", align 1
@.str61232 = private unnamed_addr constant [3 x i8] c"c1\00", align 1
@.str62 = private unnamed_addr constant [3 x i8] c"c2\00", align 1
@.str63 = private unnamed_addr constant [40 x i8] c"Old format header parameters are %f %f\0A\00", align 1
@read_1996_gauge_hdr.myname = private unnamed_addr constant [20 x i8] c"read_1996_gauge_hdr\00", align 16
@.str64 = private unnamed_addr constant [50 x i8] c"Reading as 1996-style gauge field configuration.\0A\00", align 1
@.str65 = private unnamed_addr constant [68 x i8] c"Reading as 1996-style gauge field configuration with byte reversal\0A\00", align 1
@.str66 = private unnamed_addr constant [41 x i8] c"read_1996_gauge_hdr: Can't byte reverse\0A\00", align 1
@.str67 = private unnamed_addr constant [51 x i8] c"read_1996_gauge_hdr: Incorrect lattice dimensions \00", align 1
@.str68 = private unnamed_addr constant [12 x i8] c"header size\00", align 1
@.str69 = private unnamed_addr constant [11 x i8] c"n_descript\00", align 1
@.str70 = private unnamed_addr constant [55 x i8] c"read_1996_gauge_hdr: gauge field descriptor length %d\0A\00", align 1
@.str71 = private unnamed_addr constant [29 x i8] c" exceeds allocated space %d\0A\00", align 1
@.str72 = private unnamed_addr constant [8 x i8] c"descrip\00", align 1
@.str73 = private unnamed_addr constant [26 x i8] c"gauge_field.descript: %s\0A\00", align 1
@.str74 = private unnamed_addr constant [8 x i8] c"n_param\00", align 1
@.str75 = private unnamed_addr constant [61 x i8] c"read_1996_gauge_hdr: gauge field parameter vector length %d\0A\00", align 1
@.str76 = private unnamed_addr constant [12 x i8] c"gauge param\00", align 1
@.str77 = private unnamed_addr constant [28 x i8] c"gauge_field.param[%d] = %f\0A\00", align 1
@read_gauge_hdr.myname = private unnamed_addr constant [15 x i8] c"read_gauge_hdr\00", align 1
@.str78 = private unnamed_addr constant [27 x i8] c"reading as archive format\0A\00", align 1
@.str79 = private unnamed_addr constant [46 x i8] c"reading as archive format with byte reversal\0A\00", align 1
@.str80 = private unnamed_addr constant [24 x i8] c"%s: Can't byte reverse\0A\00", align 1
@.str81 = private unnamed_addr constant [28 x i8] c"Reading with byte reversal\0A\00", align 1
@.str82 = private unnamed_addr constant [67 x i8] c"%s: Unrecognized magic number in gauge configuration file header.\0A\00", align 1
@.str83 = private unnamed_addr constant [25 x i8] c"Expected %x but read %x\0A\00", align 1
@.str84 = private unnamed_addr constant [25 x i8] c"Expected %s but read %s\0A\00", align 1
@stderr = external global %struct._IO_FILE*
@.str85 = private unnamed_addr constant [56 x i8] c"%s: Must use reload_serial with archive files for now.\0A\00", align 1
@.str86 = private unnamed_addr constant [12 x i8] c"DIMENSION_1\00", align 1
@.str87 = private unnamed_addr constant [24 x i8] c"DIMENSION_1 not present\00", align 1
@.str88 = private unnamed_addr constant [12 x i8] c"DIMENSION_2\00", align 1
@.str89 = private unnamed_addr constant [24 x i8] c"DIMENSION_2 not present\00", align 1
@.str90 = private unnamed_addr constant [12 x i8] c"DIMENSION_3\00", align 1
@.str91 = private unnamed_addr constant [24 x i8] c"DIMENSION_3 not present\00", align 1
@.str92 = private unnamed_addr constant [12 x i8] c"DIMENSION_4\00", align 1
@.str93 = private unnamed_addr constant [24 x i8] c"DIMENSION_4 not present\00", align 1
@.str94 = private unnamed_addr constant [9 x i8] c"CHECKSUM\00", align 1
@.str95233 = private unnamed_addr constant [21 x i8] c"CHECKSUM not present\00", align 1
@.str96 = private unnamed_addr constant [34 x i8] c"%s: Incorrect lattice dimensions \00", align 1
@.str97 = private unnamed_addr constant [11 x i8] c"time stamp\00", align 1
@.str98 = private unnamed_addr constant [16 x i8] c"order parameter\00", align 1
@.str99 = private unnamed_addr constant [3 x i8] c"rb\00", align 1
@.str100 = private unnamed_addr constant [50 x i8] c"r_serial_i: Node %d can't open file %s, error %d\0A\00", align 1
@r_serial.myname = private unnamed_addr constant [9 x i8] c"r_serial\00", align 1
@.str101 = private unnamed_addr constant [48 x i8] c"%s: Attempting serial read from parallel file \0A\00", align 1
@.str102234 = private unnamed_addr constant [31 x i8] c"%s: Node %d can't malloc lbuf\0A\00", align 1
@.str103 = private unnamed_addr constant [43 x i8] c"%s: Node 0 fseeko failed error %d file %s\0A\00", align 1
@.str104 = private unnamed_addr constant [55 x i8] c"%s: node %d gauge configuration read error %d file %s\0A\00", align 1
@.str105 = private unnamed_addr constant [59 x i8] c"Restored binary gauge configuration serially from file %s\0A\00", align 1
@r_serial_arch.myname = private unnamed_addr constant [14 x i8] c"r_serial_arch\00", align 1
@.str106 = private unnamed_addr constant [55 x i8] c"%s: Node %d can't malloc uin buffer to read timeslice\0A\00", align 1
@.str107 = private unnamed_addr constant [41 x i8] c"recompile with smaller read buffer: uin\0A\00", align 1
@.str108 = private unnamed_addr constant [60 x i8] c"Restored archive gauge configuration serially from file %s\0A\00", align 1
@.str109 = private unnamed_addr constant [56 x i8] c"Archive style checksum violation: computed %x, read %x\0A\00", align 1
@.str110235 = private unnamed_addr constant [32 x i8] c"Archive style checksum = %x OK\0A\00", align 1
@.str111236 = private unnamed_addr constant [55 x i8] c"r_serial_f: Attempting serial close on parallel file \0A\00", align 1
@.str112 = private unnamed_addr constant [44 x i8] c"write_site_list: node %d can't malloc cbuf\0A\00", align 1
@.str113 = private unnamed_addr constant [53 x i8] c"write_site_list: node %d g_seek %ld failed errno %d\0A\00", align 1
@.str114237 = private unnamed_addr constant [48 x i8] c"write_site_list: Node %d coords write error %d\0A\00", align 1
@.str115 = private unnamed_addr constant [53 x i8] c"parallel_open: Node %d can't open file %s, error %d\0A\00", align 1
@w_parallel_setup.myname = private unnamed_addr constant [17 x i8] c"w_parallel_setup\00", align 16
@.str116 = private unnamed_addr constant [47 x i8] c"%s: Attempting parallel write to serial file.\0A\00", align 1
@.str117 = private unnamed_addr constant [48 x i8] c"%s: Node %d g_seek %ld failed error %d file %s\0A\00", align 1
@w_parallel.myname = private unnamed_addr constant [11 x i8] c"w_parallel\00", align 1
@.str118 = private unnamed_addr constant [48 x i8] c"%s: site_block incommensurate with buffer size\0A\00", align 1
@.str119 = private unnamed_addr constant [56 x i8] c"%s: Node %d gauge configuration write error %d file %s\0A\00", align 1
@.str120 = private unnamed_addr constant [61 x i8] c"%s: Node %d g_seek %ld for checksum failed error %d file %s\0A\00", align 1
@.str121 = private unnamed_addr constant [57 x i8] c"Saved gauge configuration in parallel to binary file %s\0A\00", align 1
@w_checkpoint.myname = private unnamed_addr constant [13 x i8] c"w_checkpoint\00", align 1
@.str122 = private unnamed_addr constant [46 x i8] c"Saved gauge configuration checkpoint file %s\0A\00", align 1
@.str123 = private unnamed_addr constant [57 x i8] c"w_parallel_f: Attempting parallel close on serial file.\0A\00", align 1
@.str124 = private unnamed_addr constant [52 x i8] c"r_parallel_i: Node %d can't open file %s, error %d\0A\00", align 1
@r_parallel.myname = private unnamed_addr constant [11 x i8] c"r_parallel\00", align 1
@.str125 = private unnamed_addr constant [48 x i8] c"%s: Attempting parallel read from serial file.\0A\00", align 1
@.str126 = private unnamed_addr constant [37 x i8] c"BOTCH. Node %d received %d %d %d %d\0A\00", align 1
@.str127 = private unnamed_addr constant [62 x i8] c"Restored binary gauge configuration in parallel from file %s\0A\00", align 1
@.str128 = private unnamed_addr constant [60 x i8] c"%s: Node 0 g_seek %ld for checksum failed error %d file %s\0A\00", align 1
@.str129 = private unnamed_addr constant [57 x i8] c"r_parallel_f: Attempting parallel close on serial file.\0A\00", align 1
@.str130 = private unnamed_addr constant [2 x i8] c"r\00", align 1
@.str131 = private unnamed_addr constant [30 x i8] c"Can't open file %s, error %d\0A\00", align 1
@.str132 = private unnamed_addr constant [45 x i8] c"restore_ascii: Error reading version number\0A\00", align 1
@.str133 = private unnamed_addr constant [59 x i8] c"restore_ascii: Incorrect version number in lattice header\0A\00", align 1
@.str134 = private unnamed_addr constant [27 x i8] c"  read %d but expected %d\0A\00", align 1
@.str135 = private unnamed_addr constant [26 x i8] c"%*[ \0C\0A\0D\09\0B]%*[\22]%[^\22]%*[\22]\00", align 1
@.str136 = private unnamed_addr constant [41 x i8] c"restore_ascii: Error reading time stamp\0A\00", align 1
@.str137 = private unnamed_addr constant [24 x i8] c"count %d time_stamp %s\0A\00", align 1
@.str138 = private unnamed_addr constant [9 x i8] c"%d%d%d%d\00", align 1
@.str139 = private unnamed_addr constant [44 x i8] c"restore_ascii: Error in reading dimensions\0A\00", align 1
@.str140 = private unnamed_addr constant [51 x i8] c"restore_ascii: Incorrect lattice size %d,%d,%d,%d\0A\00", align 1
@.str141238 = private unnamed_addr constant [8 x i8] c"%lf%lf\0A\00", align 1
@.str142 = private unnamed_addr constant [38 x i8] c"restore_ascii: gauge link read error\0A\00", align 1
@.str143 = private unnamed_addr constant [50 x i8] c"Restored gauge configuration from ascii file  %s\0A\00", align 1
@.str144 = private unnamed_addr constant [4 x i8] c"%d\0A\00", align 1
@.str145239 = private unnamed_addr constant [33 x i8] c"Error in writing version number\0A\00", align 1
@.str146 = private unnamed_addr constant [6 x i8] c"\22%s\22\0A\00", align 1
@.str147 = private unnamed_addr constant [29 x i8] c"Error in writing time stamp\0A\00", align 1
@.str148 = private unnamed_addr constant [13 x i8] c"%d\09%d\09%d\09%d\0A\00", align 1
@.str149 = private unnamed_addr constant [29 x i8] c"Error in writing dimensions\0A\00", align 1
@.str150 = private unnamed_addr constant [11 x i8] c"%.7e\09%.7e\0A\00", align 1
@.str151 = private unnamed_addr constant [27 x i8] c"Write error in save_ascii\0A\00", align 1
@.str152 = private unnamed_addr constant [44 x i8] c"Saved gauge configuration to ascii file %s\0A\00", align 1
@.str153 = private unnamed_addr constant [12 x i8] c"trace = %f\0A\00", align 1
@.str154 = private unnamed_addr constant [15 x i8] c"chksum_x = %x\0A\00", align 1
@.str155 = private unnamed_addr constant [17 x i8] c"chksum_u = %12u\0A\00", align 1
@.str156 = private unnamed_addr constant [16 x i8] c"plaquette = %f\0A\00", align 1
@.str157 = private unnamed_addr constant [38 x i8] c"Writing archive format lattice to %s\0A\00", align 1
@.str158240 = private unnamed_addr constant [31 x i8] c"error opening output file: %s\0A\00", align 1
@.str159 = private unnamed_addr constant [14 x i8] c"BEGIN_HEADER\0A\00", align 1
@.str160 = private unnamed_addr constant [25 x i8] c"DATATYPE = 4D_SU3_GAUGE\0A\00", align 1
@.str161 = private unnamed_addr constant [18 x i8] c"DIMENSION_1 = %d\0A\00", align 1
@.str162 = private unnamed_addr constant [18 x i8] c"DIMENSION_2 = %d\0A\00", align 1
@.str163 = private unnamed_addr constant [18 x i8] c"DIMENSION_3 = %d\0A\00", align 1
@.str164 = private unnamed_addr constant [18 x i8] c"DIMENSION_4 = %d\0A\00", align 1
@.str165 = private unnamed_addr constant [15 x i8] c"CHECKSUM = %x\0A\00", align 1
@.str166 = private unnamed_addr constant [20 x i8] c"LINK_TRACE = %.10f\0A\00", align 1
@.str167 = private unnamed_addr constant [19 x i8] c"PLAQUETTE = %.10f\0A\00", align 1
@.str168 = private unnamed_addr constant [18 x i8] c"ENSEMBLE_ID = %s\0A\00", align 1
@.str169 = private unnamed_addr constant [22 x i8] c"SEQUENCE_NUMBER = %d\0A\00", align 1
@.str170 = private unnamed_addr constant [33 x i8] c"MILC_INFO = -------BEGIN-------\0A\00", align 1
@.str171241 = private unnamed_addr constant [33 x i8] c"MILC_INFO = --------END--------\0A\00", align 1
@.str172 = private unnamed_addr constant [29 x i8] c"can't malloc uout timeslice\0A\00", align 1
@.str173 = private unnamed_addr constant [18 x i8] c"fwrite bombed...\0A\00", align 1
@.str174 = private unnamed_addr constant [29 x i8] c"Wrote archive gauge file %s\0A\00", align 1
@.str175 = private unnamed_addr constant [49 x i8] c"Parallel archive saves are not implemented, yet\0A\00", align 1
@.str262 = private unnamed_addr constant [30 x i8] c"NODE %d: no room for lattice\0A\00", align 1
@.str1263 = private unnamed_addr constant [37 x i8] c"NODE %d: no room for pointer vector\0A\00", align 1
@.str2264 = private unnamed_addr constant [33 x i8] c"NODE %d: no room for t_longlink\0A\00", align 1
@.str3265 = private unnamed_addr constant [32 x i8] c"NODE %d: no room for t_fatlink\0A\00", align 1
@max_deviation = internal global double 0.000000e+00, align 8
@av_deviation = internal global double 0.000000e+00, align 8
@.str272 = private unnamed_addr constant [60 x i8] c"Unitarity problem on node %d, site %d, dir %d tolerance=%e\0A\00", align 1
@.str1273 = private unnamed_addr constant [13 x i8] c"SU3 matrix:\0A\00", align 1
@.str2274 = private unnamed_addr constant [4 x i8] c"%f \00", align 1
@.str3275 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@.str4276 = private unnamed_addr constant [16 x i8] c"repeat in hex:\0A\00", align 1
@.str5277 = private unnamed_addr constant [6 x i8] c"%08x \00", align 1
@.str6278 = private unnamed_addr constant [6 x i8] c"  \0A \0A\00", align 1
@.str7279 = private unnamed_addr constant [33 x i8] c"Unitarity error count exceeded.\0A\00", align 1
@.str8280 = private unnamed_addr constant [62 x i8] c"reunitarize: Node %d unitarity problem, maximum deviation=%e\0A\00", align 1
@gauge_action_nloops = internal global i32 3, align 4
@gauge_action_nreps = internal global i32 1, align 4
@make_loop_table.loop_ind = internal global [3 x [6 x i32]] [[6 x i32] [i32 0, i32 1, i32 7, i32 6, i32 -1, i32 -1], [6 x i32] [i32 0, i32 0, i32 1, i32 7, i32 7, i32 6], [6 x i32] [i32 0, i32 1, i32 2, i32 7, i32 6, i32 5]], align 16
@make_loop_table.loop_length_in = internal global [3 x i32] [i32 4, i32 6, i32 6], align 4
@loop_num = internal global [3 x i32] zeroinitializer, align 4
@loop_length = internal global [3 x i32] zeroinitializer, align 4
@loop_coeff = internal global [3 x [1 x double]] zeroinitializer, align 16
@gauge_action_description = internal global [128 x i8] zeroinitializer, align 16
@.str289 = private unnamed_addr constant [36 x i8] c"\22Symanzik 1x1 + 1x2 + 1x1x1 action\22\00", align 1
@.str1290 = private unnamed_addr constant [35 x i8] c"Symanzik 1x1 + 1x2 + 1x1x1 action\0A\00", align 1
@loop_char = internal global [16 x i32] zeroinitializer, align 16
@loop_table = internal global [3 x [16 x [6 x i32]]] zeroinitializer, align 16
@.str2291 = private unnamed_addr constant [25 x i8] c"OOPS: MAX_NUM too small\0A\00", align 1
@.str3292 = private unnamed_addr constant [55 x i8] c"loop coefficients: nloop rep loop_coeff  multiplicity\0A\00", align 1
@.str4293 = private unnamed_addr constant [42 x i8] c"                    %d %d      %e     %d\0A\00", align 1
@.str5294 = private unnamed_addr constant [13 x i8] c"PLAQ:\09%f\09%f\0A\00", align 1
@.str6295 = private unnamed_addr constant [15 x i8] c"P_LOOP:\09%e\09%e\0A\00", align 1
@.str7296 = private unnamed_addr constant [23 x i8] c"G_LOOP:  %d  %d  %d   \00", align 1
@.str8297 = private unnamed_addr constant [4 x i8] c"\09%e\00", align 1
@.str9298 = private unnamed_addr constant [4 x i8] c"\09( \00", align 1
@.str10299 = private unnamed_addr constant [4 x i8] c"%d \00", align 1
@.str11300 = private unnamed_addr constant [4 x i8] c" )\0A\00", align 1
@.str12301 = private unnamed_addr constant [13 x i8] c"GACTION: %e\0A\00", align 1
@.str13302 = private unnamed_addr constant [13 x i8] c",  L = %d )\0A\00", align 1
@loop_ind = internal global [3 x [6 x i32]] zeroinitializer, align 16
@loop_expect = internal global [3 x [1 x [16 x double]]] zeroinitializer, align 16
@.str309 = private unnamed_addr constant [18 x i8] c"Site %d %d %d %d\0A\00", align 1
@.str1310 = private unnamed_addr constant [16 x i8] c"%d %d\09%e\09%e\09%e\0A\00", align 1
@.str2311 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@.str314 = private unnamed_addr constant [7 x i8] c"BOTCH\0A\00", align 1
@.str1315 = private unnamed_addr constant [41 x i8] c"%d %d  ( %.4e , %.4e )  ( %.4e , %.4e )\0A\00", align 1
@.str2316 = private unnamed_addr constant [37 x i8] c"Inversion checked, frac. error = %e\0A\00", align 1
@.str319 = private unnamed_addr constant [4 x i8] c"%s\0A\00", align 1
@quark_action_description320 = internal global [72 x i8] c"\22O(a^2): couplings(pi)=0, Naik term, No O(a^2) errors, tadpole weights\22\00", align 16
@num_q_paths = internal global i32 0, align 4
@num_basic_paths = internal global i32 0, align 4
@.str1321 = private unnamed_addr constant [52 x i8] c"path coefficients: npath  path_coeff  multiplicity\0A\00", align 1
@quark_action_npaths = internal global i32 6, align 4
@path_coeff = internal global [6 x double] [double 6.250000e-01, double 0xBFA5555555555555, double -6.250000e-02, double 1.562500e-02, double 0xBF65555555555555, double -6.250000e-02], align 16
@path_length_in = internal global [6 x i32] [i32 1, i32 3, i32 3, i32 5, i32 7, i32 5], align 16
@act_path_coeff = internal global [6 x double] zeroinitializer, align 16
@path_ind = internal global [6 x [7 x i32]] [[7 x i32] [i32 0, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 0], [7 x i32] [i32 0, i32 0, i32 0, i32 -1, i32 -1, i32 -1, i32 0], [7 x i32] [i32 1, i32 0, i32 6, i32 -1, i32 -1, i32 -1, i32 0], [7 x i32] [i32 1, i32 2, i32 0, i32 5, i32 6, i32 -1, i32 0], [7 x i32] [i32 1, i32 2, i32 3, i32 0, i32 4, i32 5, i32 6], [7 x i32] [i32 1, i32 1, i32 0, i32 6, i32 6, i32 -1, i32 0]], align 16
@.str2322 = private unnamed_addr constant [39 x i8] c"                    %d      %e     %d\0A\00", align 1
@q_paths = internal global [688 x %struct.anon.138] zeroinitializer, align 16
@.str3323 = private unnamed_addr constant [25 x i8] c"OOPS: MAX_NUM too small\0A\00", align 1
@.str4324 = private unnamed_addr constant [39 x i8] c"BOTCH: load_longlinks needs phases in\0A\00", align 1
@.str5325 = private unnamed_addr constant [38 x i8] c"BOTCH: load_fatlinks needs phases in\0A\00", align 1
@path_num = internal global [6 x i32] zeroinitializer, align 16
@.str334 = private unnamed_addr constant [33 x i8] c"DUMMY: you fouled up the phases\0A\00", align 1
@gaussian_rand_no.iset = internal global i32 0, align 4
@gaussian_rand_no.gset = internal global double 0.000000e+00, align 8
@temp_not_allocated = internal global i32 1, align 4
@temp = internal global [9 x %struct.su3_vector*] zeroinitializer, align 16
@first_congrad = internal global i32 1, align 4
@ttt = internal global %struct.su3_vector* null, align 8
@cg_p = internal global %struct.su3_vector* null, align 8
@resid = internal global %struct.su3_vector* null, align 8
@t_dest = internal global %struct.su3_vector* null, align 8
@.str409 = private unnamed_addr constant [59 x i8] c"CG not converged after %d iterations, res. = %e wanted %e\0A\00", align 1
@neighbor = internal global i32** null, align 8
@n_gathers = internal global i32 0, align 4
@.str418 = private unnamed_addr constant [22 x i8] c"BOTCH: bad direction\0A\00", align 1
@.str1419 = private unnamed_addr constant [38 x i8] c"Too many gathers! change MAX_GATHERS\0A\00", align 1
@.str2420 = private unnamed_addr constant [38 x i8] c"NODE %d: no room for neighbor vector\0A\00", align 1
@.str3421 = private unnamed_addr constant [53 x i8] c"DUMMY! Your gather mapping does not stay in lattice\0A\00", align 1
@.str4422 = private unnamed_addr constant [38 x i8] c"It mapped %d %d %d %d to %d %d %d %d\0A\00", align 1
@.str5423 = private unnamed_addr constant [57 x i8] c"DUMMY! Your gather mapping does not obey claimed parity\0A\00", align 1
@.str6424 = private unnamed_addr constant [51 x i8] c"DUMMY! Your gather mapping is not its own inverse\0A\00", align 1
@.str7425 = private unnamed_addr constant [47 x i8] c"It's square mapped %d %d %d %d to %d %d %d %d\0A\00", align 1
@g_gather_flag = internal global i32 0, align 4
@.str8426 = private unnamed_addr constant [48 x i8] c"ERROR: node %d, two general_gathers() at once!\0A\00", align 1
@.str9427 = private unnamed_addr constant [27 x i8] c"BOTCH: this never happens\0A\00", align 1
@name = internal global [17 x i8] c"Scalar processor\00", align 16
@.str10428 = private unnamed_addr constant [8 x i8] c"%s: %s\0A\00", align 1
@.str11429 = private unnamed_addr constant [12 x i8] c"termination\00", align 1
@.str12430 = private unnamed_addr constant [26 x i8] c"Termination: status = %d\0A\00", align 1
@.str491 = private unnamed_addr constant [48 x i8] c"g_open: Node %d. Append not supported in PIOFS\0A\00", align 1
@.str1492 = private unnamed_addr constant [41 x i8] c"g_open: Node %d. mode %s not recognized\0A\00", align 1
@.str2493 = private unnamed_addr constant [37 x i8] c"g_open: Node %d error %d opening %s\0A\00", align 1
@.str3494 = private unnamed_addr constant [33 x i8] c"g_open: Node %d can't malloc fp\0A\00", align 1

; Function Attrs: nounwind uwtable
define i32 @main(i32 %argc, i8** %argv) #0 {
entry:
  %retval = alloca i32, align 4
  %argc.addr = alloca i32, align 4
  %argv.addr = alloca i8**, align 8
  %meascount = alloca i32, align 4
  %traj_done = alloca i32, align 4
  %prompt = alloca i32, align 4
  %s_iters = alloca i32, align 4
  %avs_iters = alloca i32, align 4
  %avspect_iters = alloca i32, align 4
  %avbcorr_iters = alloca i32, align 4
  %dtime = alloca double, align 8
  store i32 0, i32* %retval
  store i32 %argc, i32* %argc.addr, align 4
  store i8** %argv, i8*** %argv.addr, align 8
  %0 = load i32* %argc.addr, align 4
  %1 = load i8*** %argv.addr, align 8
  call void @initialize_machine(i32 %0, i8** %1)
  call void (...)* bitcast (void ()* @g_sync to void (...)*)()
  %call = call i32 (...)* bitcast (i32 ()* @setup to i32 (...)*)()
  store i32 %call, i32* %prompt, align 4
  br label %while.cond

while.cond:                                       ; preds = %if.end57, %entry
  %2 = load i32* %prompt, align 4
  %call1 = call i32 @readin(i32 %2)
  %cmp = icmp eq i32 %call1, 0
  br i1 %cmp, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  %call2 = call double (...)* bitcast (double ()* @dclock to double (...)*)()
  %sub = fsub double -0.000000e+00, %call2
  store double %sub, double* %dtime, align 8
  store i32 0, i32* %traj_done, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %while.body
  %3 = load i32* %traj_done, align 4
  %4 = load i32* @warms, align 4
  %cmp3 = icmp slt i32 %3, %4
  br i1 %cmp3, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %call4 = call i32 (...)* bitcast (i32 ()* @update to i32 (...)*)()
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %5 = load i32* %traj_done, align 4
  %inc = add nsw i32 %5, 1
  store i32 %inc, i32* %traj_done, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %6 = load i32* @this_node, align 4
  %cmp5 = icmp eq i32 %6, 0
  br i1 %cmp5, label %if.then, label %if.end

if.then:                                          ; preds = %for.end
  %call6 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([19 x i8]* @.str36, i32 0, i32 0))
  br label %if.end

if.end:                                           ; preds = %if.then, %for.end
  %7 = load %struct._IO_FILE** @stdout, align 8
  %call7 = call i32 @fflush(%struct._IO_FILE* %7)
  store i32 0, i32* %meascount, align 4
  store i32 0, i32* %avbcorr_iters, align 4
  store i32 0, i32* %avs_iters, align 4
  store i32 0, i32* %avspect_iters, align 4
  store i32 0, i32* %traj_done, align 4
  br label %for.cond8

for.cond8:                                        ; preds = %for.inc25, %if.end
  %8 = load i32* %traj_done, align 4
  %9 = load i32* @trajecs, align 4
  %cmp9 = icmp slt i32 %8, %9
  br i1 %cmp9, label %for.body10, label %for.end27

for.body10:                                       ; preds = %for.cond8
  %call11 = call i32 (...)* bitcast (i32 ()* @update to i32 (...)*)()
  store i32 %call11, i32* %s_iters, align 4
  %10 = load i32* %traj_done, align 4
  %11 = load i32* @propinterval, align 4
  %rem = srem i32 %10, %11
  %12 = load i32* @propinterval, align 4
  %sub12 = sub nsw i32 %12, 1
  %cmp13 = icmp eq i32 %rem, %sub12
  br i1 %cmp13, label %if.then14, label %if.end24

if.then14:                                        ; preds = %for.body10
  call void @rephase(i32 0)
  call void @g_measure()
  call void @rephase(i32 1)
  %13 = load %struct.site** @lattice, align 8
  %arrayidx = getelementptr inbounds %struct.site* %13, i64 0
  %phi = getelementptr inbounds %struct.site* %arrayidx, i32 0, i32 11
  %14 = bitcast %struct.su3_vector* %phi to i8*
  %15 = load %struct.site** @lattice, align 8
  %arrayidx15 = getelementptr inbounds %struct.site* %15, i64 0
  %16 = bitcast %struct.site* %arrayidx15 to i8*
  %sub.ptr.lhs.cast = ptrtoint i8* %14 to i64
  %sub.ptr.rhs.cast = ptrtoint i8* %16 to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %conv = trunc i64 %sub.ptr.sub to i32
  %17 = load %struct.site** @lattice, align 8
  %arrayidx16 = getelementptr inbounds %struct.site* %17, i64 0
  %xxx = getelementptr inbounds %struct.site* %arrayidx16, i32 0, i32 14
  %18 = bitcast %struct.su3_vector* %xxx to i8*
  %19 = load %struct.site** @lattice, align 8
  %arrayidx17 = getelementptr inbounds %struct.site* %19, i64 0
  %20 = bitcast %struct.site* %arrayidx17 to i8*
  %sub.ptr.lhs.cast18 = ptrtoint i8* %18 to i64
  %sub.ptr.rhs.cast19 = ptrtoint i8* %20 to i64
  %sub.ptr.sub20 = sub i64 %sub.ptr.lhs.cast18, %sub.ptr.rhs.cast19
  %conv21 = trunc i64 %sub.ptr.sub20 to i32
  %21 = load double* @mass, align 8
  call void @f_meas_imp(i32 %conv, i32 %conv21, double %21)
  %22 = load i32* %s_iters, align 4
  %23 = load i32* %avs_iters, align 4
  %add = add nsw i32 %23, %22
  store i32 %add, i32* %avs_iters, align 4
  %24 = load i32* %meascount, align 4
  %inc22 = add nsw i32 %24, 1
  store i32 %inc22, i32* %meascount, align 4
  %25 = load %struct._IO_FILE** @stdout, align 8
  %call23 = call i32 @fflush(%struct._IO_FILE* %25)
  br label %if.end24

if.end24:                                         ; preds = %if.then14, %for.body10
  br label %for.inc25

for.inc25:                                        ; preds = %if.end24
  %26 = load i32* %traj_done, align 4
  %inc26 = add nsw i32 %26, 1
  store i32 %inc26, i32* %traj_done, align 4
  br label %for.cond8

for.end27:                                        ; preds = %for.cond8
  %27 = load i32* @this_node, align 4
  %cmp28 = icmp eq i32 %27, 0
  br i1 %cmp28, label %if.then30, label %if.end32

if.then30:                                        ; preds = %for.end27
  %call31 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([19 x i8]* @.str37, i32 0, i32 0))
  br label %if.end32

if.end32:                                         ; preds = %if.then30, %for.end27
  %28 = load %struct._IO_FILE** @stdout, align 8
  %call33 = call i32 @fflush(%struct._IO_FILE* %28)
  %29 = load i32* %meascount, align 4
  %cmp34 = icmp sgt i32 %29, 0
  br i1 %cmp34, label %if.then36, label %if.end44

if.then36:                                        ; preds = %if.end32
  %30 = load i32* @this_node, align 4
  %cmp37 = icmp eq i32 %30, 0
  br i1 %cmp37, label %if.then39, label %if.end43

if.then39:                                        ; preds = %if.then36
  %31 = load i32* %avs_iters, align 4
  %conv40 = sitofp i32 %31 to double
  %32 = load i32* %meascount, align 4
  %conv41 = sitofp i32 %32 to double
  %div = fdiv double %conv40, %conv41
  %call42 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([31 x i8]* @.str38, i32 0, i32 0), double %div)
  br label %if.end43

if.end43:                                         ; preds = %if.then39, %if.then36
  br label %if.end44

if.end44:                                         ; preds = %if.end43, %if.end32
  %call45 = call double (...)* bitcast (double ()* @dclock to double (...)*)()
  %33 = load double* %dtime, align 8
  %add46 = fadd double %33, %call45
  store double %add46, double* %dtime, align 8
  %34 = load i32* @this_node, align 4
  %cmp47 = icmp eq i32 %34, 0
  br i1 %cmp47, label %if.then49, label %if.end51

if.then49:                                        ; preds = %if.end44
  %35 = load i32* @total_iters, align 4
  %call50 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([18 x i8]* @.str39, i32 0, i32 0), i32 %35)
  br label %if.end51

if.end51:                                         ; preds = %if.then49, %if.end44
  %36 = load %struct._IO_FILE** @stdout, align 8
  %call52 = call i32 @fflush(%struct._IO_FILE* %36)
  %37 = load i32* @saveflag, align 4
  %cmp53 = icmp ne i32 %37, 20
  br i1 %cmp53, label %if.then55, label %if.end57

if.then55:                                        ; preds = %if.end51
  call void @rephase(i32 0)
  %38 = load i32* @saveflag, align 4
  %call56 = call %struct.gauge_file* @save_lattice(i32 %38, i8* getelementptr inbounds ([256 x i8]* @savefile, i32 0, i32 0))
  call void @rephase(i32 1)
  br label %if.end57

if.end57:                                         ; preds = %if.then55, %if.end51
  br label %while.cond

while.end:                                        ; preds = %while.cond
  ret i32 0
}

declare i32 @printf(i8*, ...) #1

declare i32 @fflush(%struct._IO_FILE*) #1

; Function Attrs: nounwind uwtable
define internal void @f_meas_imp(i32 %phi_off, i32 %xxx_off, double %mass) #0 {
entry:
  %phi_off.addr = alloca i32, align 4
  %xxx_off.addr = alloca i32, align 4
  %mass.addr = alloca double, align 8
  %r_psi_bar_psi_even = alloca double, align 8
  %r_psi_bar_psi_odd = alloca double, align 8
  %r_ferm_action = alloca double, align 8
  %i = alloca i32, align 4
  %st = alloca %struct.site*, align 8
  %rpbp_e = alloca double, align 8
  %rpbp_o = alloca double, align 8
  %rfaction = alloca double, align 8
  %cc = alloca %struct.complex, align 8
  %npbp_reps = alloca i32, align 4
  %jpbp_reps = alloca i32, align 4
  %coerce = alloca %struct.complex, align 8
  %coerce17 = alloca %struct.complex, align 8
  %coerce29 = alloca %struct.complex, align 8
  store i32 %phi_off, i32* %phi_off.addr, align 4
  store i32 %xxx_off, i32* %xxx_off.addr, align 4
  store double %mass, double* %mass.addr, align 8
  store i32 1, i32* %npbp_reps, align 4
  %0 = load i32* @valid_longlinks, align 4
  %cmp = icmp eq i32 %0, 1
  br i1 %cmp, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  call void (...)* bitcast (void ()* @load_longlinks to void (...)*)()
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %1 = load i32* @valid_fatlinks, align 4
  %cmp1 = icmp eq i32 %1, 1
  br i1 %cmp1, label %if.end3, label %if.then2

if.then2:                                         ; preds = %if.end
  call void (...)* bitcast (void ()* @load_fatlinks to void (...)*)()
  br label %if.end3

if.end3:                                          ; preds = %if.then2, %if.end
  store i32 0, i32* %jpbp_reps, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc55, %if.end3
  %2 = load i32* %jpbp_reps, align 4
  %3 = load i32* %npbp_reps, align 4
  %cmp4 = icmp slt i32 %2, %3
  br i1 %cmp4, label %for.body, label %for.end57

for.body:                                         ; preds = %for.cond
  store double 0.000000e+00, double* %rfaction, align 8
  store double 0.000000e+00, double* %rpbp_o, align 8
  store double 0.000000e+00, double* %rpbp_e, align 8
  %4 = load i32* %phi_off.addr, align 4
  %5 = load double* %mass.addr, align 8
  call void @grsource_imp(i32 %4, double %5, i32 3)
  %6 = load %struct.site** @lattice, align 8
  %arrayidx = getelementptr inbounds %struct.site* %6, i64 0
  %g_rand = getelementptr inbounds %struct.site* %arrayidx, i32 0, i32 16
  %7 = bitcast %struct.su3_vector* %g_rand to i8*
  %8 = load %struct.site** @lattice, align 8
  %arrayidx5 = getelementptr inbounds %struct.site* %8, i64 0
  %9 = bitcast %struct.site* %arrayidx5 to i8*
  %sub.ptr.lhs.cast = ptrtoint i8* %7 to i64
  %sub.ptr.rhs.cast = ptrtoint i8* %9 to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %conv = trunc i64 %sub.ptr.sub to i32
  %10 = load i32* %xxx_off.addr, align 4
  %11 = load i32* %phi_off.addr, align 4
  %12 = load double* %mass.addr, align 8
  %call = call i32 @mat_invert_uml(i32 %conv, i32 %10, i32 %11, double %12)
  store i32 0, i32* %i, align 4
  %13 = load %struct.site** @lattice, align 8
  store %struct.site* %13, %struct.site** %st, align 8
  br label %for.cond6

for.cond6:                                        ; preds = %for.inc, %for.body
  %14 = load i32* %i, align 4
  %15 = load i32* @even_sites_on_node, align 4
  %cmp7 = icmp slt i32 %14, %15
  br i1 %cmp7, label %for.body9, label %for.end

for.body9:                                        ; preds = %for.cond6
  %16 = load %struct.site** %st, align 8
  %17 = bitcast %struct.site* %16 to i8*
  %18 = load i32* %phi_off.addr, align 4
  %idx.ext = sext i32 %18 to i64
  %add.ptr = getelementptr inbounds i8* %17, i64 %idx.ext
  %19 = bitcast i8* %add.ptr to %struct.su3_vector*
  %20 = load %struct.site** %st, align 8
  %21 = bitcast %struct.site* %20 to i8*
  %22 = load i32* %xxx_off.addr, align 4
  %idx.ext10 = sext i32 %22 to i64
  %add.ptr11 = getelementptr inbounds i8* %21, i64 %idx.ext10
  %23 = bitcast i8* %add.ptr11 to %struct.su3_vector*
  %call12 = call { double, double } @su3_dot(%struct.su3_vector* %19, %struct.su3_vector* %23)
  %24 = bitcast %struct.complex* %coerce to { double, double }*
  %25 = getelementptr { double, double }* %24, i32 0, i32 0
  %26 = extractvalue { double, double } %call12, 0
  store double %26, double* %25, align 1
  %27 = getelementptr { double, double }* %24, i32 0, i32 1
  %28 = extractvalue { double, double } %call12, 1
  store double %28, double* %27, align 1
  %29 = bitcast %struct.complex* %cc to i8*
  %30 = bitcast %struct.complex* %coerce to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %29, i8* %30, i64 16, i32 8, i1 false)
  %real = getelementptr inbounds %struct.complex* %cc, i32 0, i32 0
  %31 = load double* %real, align 8
  %32 = load double* %rfaction, align 8
  %add = fadd double %32, %31
  store double %add, double* %rfaction, align 8
  %33 = load %struct.site** %st, align 8
  %g_rand13 = getelementptr inbounds %struct.site* %33, i32 0, i32 16
  %34 = load %struct.site** %st, align 8
  %35 = bitcast %struct.site* %34 to i8*
  %36 = load i32* %xxx_off.addr, align 4
  %idx.ext14 = sext i32 %36 to i64
  %add.ptr15 = getelementptr inbounds i8* %35, i64 %idx.ext14
  %37 = bitcast i8* %add.ptr15 to %struct.su3_vector*
  %call16 = call { double, double } @su3_dot(%struct.su3_vector* %g_rand13, %struct.su3_vector* %37)
  %38 = bitcast %struct.complex* %coerce17 to { double, double }*
  %39 = getelementptr { double, double }* %38, i32 0, i32 0
  %40 = extractvalue { double, double } %call16, 0
  store double %40, double* %39, align 1
  %41 = getelementptr { double, double }* %38, i32 0, i32 1
  %42 = extractvalue { double, double } %call16, 1
  store double %42, double* %41, align 1
  %43 = bitcast %struct.complex* %cc to i8*
  %44 = bitcast %struct.complex* %coerce17 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %43, i8* %44, i64 16, i32 8, i1 false)
  %real18 = getelementptr inbounds %struct.complex* %cc, i32 0, i32 0
  %45 = load double* %real18, align 8
  %46 = load double* %rpbp_e, align 8
  %add19 = fadd double %46, %45
  store double %add19, double* %rpbp_e, align 8
  br label %for.inc

for.inc:                                          ; preds = %for.body9
  %47 = load i32* %i, align 4
  %inc = add nsw i32 %47, 1
  store i32 %inc, i32* %i, align 4
  %48 = load %struct.site** %st, align 8
  %incdec.ptr = getelementptr inbounds %struct.site* %48, i32 1
  store %struct.site* %incdec.ptr, %struct.site** %st, align 8
  br label %for.cond6

for.end:                                          ; preds = %for.cond6
  %49 = load i32* @even_sites_on_node, align 4
  store i32 %49, i32* %i, align 4
  %50 = load i32* %i, align 4
  %idxprom = sext i32 %50 to i64
  %51 = load %struct.site** @lattice, align 8
  %arrayidx20 = getelementptr inbounds %struct.site* %51, i64 %idxprom
  store %struct.site* %arrayidx20, %struct.site** %st, align 8
  br label %for.cond21

for.cond21:                                       ; preds = %for.inc32, %for.end
  %52 = load i32* %i, align 4
  %53 = load i32* @sites_on_node, align 4
  %cmp22 = icmp slt i32 %52, %53
  br i1 %cmp22, label %for.body24, label %for.end35

for.body24:                                       ; preds = %for.cond21
  %54 = load %struct.site** %st, align 8
  %g_rand25 = getelementptr inbounds %struct.site* %54, i32 0, i32 16
  %55 = load %struct.site** %st, align 8
  %56 = bitcast %struct.site* %55 to i8*
  %57 = load i32* %xxx_off.addr, align 4
  %idx.ext26 = sext i32 %57 to i64
  %add.ptr27 = getelementptr inbounds i8* %56, i64 %idx.ext26
  %58 = bitcast i8* %add.ptr27 to %struct.su3_vector*
  %call28 = call { double, double } @su3_dot(%struct.su3_vector* %g_rand25, %struct.su3_vector* %58)
  %59 = bitcast %struct.complex* %coerce29 to { double, double }*
  %60 = getelementptr { double, double }* %59, i32 0, i32 0
  %61 = extractvalue { double, double } %call28, 0
  store double %61, double* %60, align 1
  %62 = getelementptr { double, double }* %59, i32 0, i32 1
  %63 = extractvalue { double, double } %call28, 1
  store double %63, double* %62, align 1
  %64 = bitcast %struct.complex* %cc to i8*
  %65 = bitcast %struct.complex* %coerce29 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %64, i8* %65, i64 16, i32 8, i1 false)
  %real30 = getelementptr inbounds %struct.complex* %cc, i32 0, i32 0
  %66 = load double* %real30, align 8
  %67 = load double* %rpbp_o, align 8
  %add31 = fadd double %67, %66
  store double %add31, double* %rpbp_o, align 8
  br label %for.inc32

for.inc32:                                        ; preds = %for.body24
  %68 = load i32* %i, align 4
  %inc33 = add nsw i32 %68, 1
  store i32 %inc33, i32* %i, align 4
  %69 = load %struct.site** %st, align 8
  %incdec.ptr34 = getelementptr inbounds %struct.site* %69, i32 1
  store %struct.site* %incdec.ptr34, %struct.site** %st, align 8
  br label %for.cond21

for.end35:                                        ; preds = %for.cond21
  call void @g_doublesum(double* %rpbp_o)
  call void @g_doublesum(double* %rpbp_e)
  call void @g_doublesum(double* %rfaction)
  %70 = load double* %rpbp_o, align 8
  %71 = load i32* @volume, align 4
  %conv36 = sitofp i32 %71 to double
  %div = fdiv double 2.000000e+00, %conv36
  %mul = fmul double %70, %div
  store double %mul, double* %r_psi_bar_psi_odd, align 8
  %72 = load double* %rpbp_e, align 8
  %73 = load i32* @volume, align 4
  %conv37 = sitofp i32 %73 to double
  %div38 = fdiv double 2.000000e+00, %conv37
  %mul39 = fmul double %72, %div38
  store double %mul39, double* %r_psi_bar_psi_even, align 8
  %74 = load double* %rfaction, align 8
  %75 = load i32* @volume, align 4
  %conv40 = sitofp i32 %75 to double
  %div41 = fdiv double 1.000000e+00, %conv40
  %mul42 = fmul double %74, %div41
  store double %mul42, double* %r_ferm_action, align 8
  %76 = load i32* @this_node, align 4
  %cmp43 = icmp eq i32 %76, 0
  br i1 %cmp43, label %if.then45, label %if.end48

if.then45:                                        ; preds = %for.end35
  %77 = load double* %mass.addr, align 8
  %78 = load double* %r_psi_bar_psi_even, align 8
  %79 = load double* %r_psi_bar_psi_odd, align 8
  %80 = load i32* %jpbp_reps, align 4
  %add46 = add nsw i32 %80, 1
  %81 = load i32* %npbp_reps, align 4
  %call47 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([38 x i8]* @.str40, i32 0, i32 0), double %77, double %78, double %79, i32 %add46, i32 %81)
  br label %if.end48

if.end48:                                         ; preds = %if.then45, %for.end35
  %82 = load i32* @this_node, align 4
  %cmp49 = icmp eq i32 %82, 0
  br i1 %cmp49, label %if.then51, label %if.end54

if.then51:                                        ; preds = %if.end48
  %83 = load double* %mass.addr, align 8
  %84 = load double* %r_ferm_action, align 8
  %85 = load i32* %jpbp_reps, align 4
  %add52 = add nsw i32 %85, 1
  %86 = load i32* %npbp_reps, align 4
  %call53 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([38 x i8]* @.str141, i32 0, i32 0), double %83, double %84, i32 %add52, i32 %86)
  br label %if.end54

if.end54:                                         ; preds = %if.then51, %if.end48
  br label %for.inc55

for.inc55:                                        ; preds = %if.end54
  %87 = load i32* %jpbp_reps, align 4
  %inc56 = add nsw i32 %87, 1
  store i32 %inc56, i32* %jpbp_reps, align 4
  br label %for.cond

for.end57:                                        ; preds = %for.cond
  ret void
}

; Function Attrs: nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i32, i1) #2

; Function Attrs: nounwind uwtable
define internal void @write_appl_gauge_info(%struct._IO_FILE* %fp) #0 {
entry:
  %fp.addr = alloca %struct._IO_FILE*, align 8
  store %struct._IO_FILE* %fp, %struct._IO_FILE** %fp.addr, align 8
  %0 = load %struct._IO_FILE** %fp.addr, align 8
  %call = call i32 @write_gauge_info_item(%struct._IO_FILE* %0, i8* getelementptr inbounds ([19 x i8]* @.str44, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8]* @.str145, i32 0, i32 0), i8* getelementptr inbounds ([32 x i8]* @.str246, i32 0, i32 0), i32 0, i32 0)
  %1 = load %struct._IO_FILE** %fp.addr, align 8
  %call1 = call i32 @write_gauge_info_item(%struct._IO_FILE* %1, i8* getelementptr inbounds ([18 x i8]* @.str347, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8]* @.str145, i32 0, i32 0), i8* getelementptr inbounds ([128 x i8]* @gauge_action_description, i32 0, i32 0), i32 0, i32 0)
  %2 = load %struct._IO_FILE** %fp.addr, align 8
  %call2 = call i32 @write_gauge_info_item(%struct._IO_FILE* %2, i8* getelementptr inbounds ([13 x i8]* @.str448, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8]* @.str549, i32 0, i32 0), i8* bitcast (i32* @gauge_action_nloops to i8*), i32 0, i32 0)
  %3 = load %struct._IO_FILE** %fp.addr, align 8
  %call3 = call i32 @write_gauge_info_item(%struct._IO_FILE* %3, i8* getelementptr inbounds ([12 x i8]* @.str650, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8]* @.str549, i32 0, i32 0), i8* bitcast (i32* @gauge_action_nreps to i8*), i32 0, i32 0)
  %4 = load %struct._IO_FILE** %fp.addr, align 8
  %call4 = call i32 @write_gauge_info_item(%struct._IO_FILE* %4, i8* getelementptr inbounds ([13 x i8]* @.str751, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8]* @.str852, i32 0, i32 0), i8* bitcast (double* @beta to i8*), i32 0, i32 0)
  %5 = load %struct._IO_FILE** %fp.addr, align 8
  %call5 = call i32 @write_gauge_info_item(%struct._IO_FILE* %5, i8* getelementptr inbounds ([17 x i8]* @.str953, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8]* @.str852, i32 0, i32 0), i8* bitcast (double* @u0 to i8*), i32 0, i32 0)
  %6 = load %struct._IO_FILE** %fp.addr, align 8
  %call6 = call i32 @write_gauge_info_item(%struct._IO_FILE* %6, i8* getelementptr inbounds ([18 x i8]* @.str1054, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8]* @.str145, i32 0, i32 0), i8* getelementptr inbounds ([72 x i8]* @quark_action_description, i32 0, i32 0), i32 0, i32 0)
  %7 = load %struct._IO_FILE** %fp.addr, align 8
  %call7 = call i32 @write_gauge_info_item(%struct._IO_FILE* %7, i8* getelementptr inbounds ([14 x i8]* @.str1155, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8]* @.str549, i32 0, i32 0), i8* bitcast (i32* @nflavors to i8*), i32 0, i32 0)
  %8 = load %struct._IO_FILE** %fp.addr, align 8
  %call8 = call i32 @write_gauge_info_item(%struct._IO_FILE* %8, i8* getelementptr inbounds ([11 x i8]* @.str1256, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8]* @.str852, i32 0, i32 0), i8* bitcast (double* @mass to i8*), i32 0, i32 0)
  ret void
}

; Function Attrs: nounwind uwtable
define internal i32 @setup() #0 {
entry:
  %prompt = alloca i32, align 4
  %call = call i32 @initial_set()
  store i32 %call, i32* %prompt, align 4
  %0 = load i32* @iseed, align 4
  %1 = load i32* @volume, align 4
  %call1 = call i32 (...)* bitcast (i32 ()* @mynode to i32 (...)*)()
  %add = add nsw i32 %1, %call1
  call void @initialize_prn(%struct.double_prn* @node_prn, i32 %0, i32 %add)
  call void @setup_layout()
  call void (...)* bitcast (void ()* @make_lattice to void (...)*)()
  %2 = load i32* @this_node, align 4
  %cmp = icmp eq i32 %2, 0
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %call2 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([14 x i8]* @.str57, i32 0, i32 0))
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct._IO_FILE** @stdout, align 8
  %call3 = call i32 @fflush(%struct._IO_FILE* %3)
  call void (...)* bitcast (void ()* @make_nn_gathers to void (...)*)()
  %4 = load i32* @this_node, align 4
  %cmp4 = icmp eq i32 %4, 0
  br i1 %cmp4, label %if.then5, label %if.end7

if.then5:                                         ; preds = %if.end
  %call6 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([17 x i8]* @.str158, i32 0, i32 0))
  br label %if.end7

if.end7:                                          ; preds = %if.then5, %if.end
  %5 = load %struct._IO_FILE** @stdout, align 8
  %call8 = call i32 @fflush(%struct._IO_FILE* %5)
  call void @make_3n_gathers()
  %6 = load i32* @this_node, align 4
  %cmp9 = icmp eq i32 %6, 0
  br i1 %cmp9, label %if.then10, label %if.end12

if.then10:                                        ; preds = %if.end7
  %call11 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([18 x i8]* @.str259, i32 0, i32 0))
  br label %if.end12

if.end12:                                         ; preds = %if.then10, %if.end7
  %7 = load %struct._IO_FILE** @stdout, align 8
  %call13 = call i32 @fflush(%struct._IO_FILE* %7)
  call void (...)* bitcast (void ()* @phaseset to void (...)*)()
  %8 = load i32* @this_node, align 4
  %cmp14 = icmp eq i32 %8, 0
  br i1 %cmp14, label %if.then15, label %if.end17

if.then15:                                        ; preds = %if.end12
  %call16 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([16 x i8]* @.str360, i32 0, i32 0))
  br label %if.end17

if.end17:                                         ; preds = %if.then15, %if.end12
  %9 = load %struct._IO_FILE** @stdout, align 8
  %call18 = call i32 @fflush(%struct._IO_FILE* %9)
  %10 = load i32* %prompt, align 4
  ret i32 %10
}

; Function Attrs: nounwind uwtable
define internal i32 @initial_set() #0 {
entry:
  %prompt = alloca i32, align 4
  %status = alloca i32, align 4
  %call = call i32 (...)* bitcast (i32 ()* @mynode to i32 (...)*)()
  %cmp = icmp eq i32 %call, 0
  br i1 %cmp, label %if.then, label %if.end40

if.then:                                          ; preds = %entry
  %call1 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([29 x i8]* @.str461, i32 0, i32 0))
  %call2 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([43 x i8]* @.str562, i32 0, i32 0))
  %call3 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([16 x i8]* @.str663, i32 0, i32 0))
  %call4 = call i8* (...)* bitcast (i8* ()* @machine_type to i8* (...)*)()
  %call5 = call i32 (...)* bitcast (i32 ()* @numnodes to i32 (...)*)()
  %call6 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([29 x i8]* @.str764, i32 0, i32 0), i8* %call4, i32 %call5)
  %call7 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([13 x i8]* @.str865, i32 0, i32 0))
  %call8 = call i32 @get_prompt(i32* %prompt)
  store i32 %call8, i32* %status, align 4
  %0 = load i32* %status, align 4
  %cmp9 = icmp eq i32 %0, 0
  br i1 %cmp9, label %if.then10, label %if.end

if.then10:                                        ; preds = %if.then
  %1 = load i32* %prompt, align 4
  %call11 = call i32 @get_i(i32 %1, i8* getelementptr inbounds ([9 x i8]* @.str966, i32 0, i32 0), i32* getelementptr inbounds (%struct.params* @par_buf, i32 0, i32 6))
  %2 = load i32* %status, align 4
  %add = add nsw i32 %2, %call11
  store i32 %add, i32* %status, align 4
  br label %if.end

if.end:                                           ; preds = %if.then10, %if.then
  %3 = load i32* %status, align 4
  %cmp12 = icmp eq i32 %3, 0
  br i1 %cmp12, label %if.then13, label %if.end16

if.then13:                                        ; preds = %if.end
  %4 = load i32* %prompt, align 4
  %call14 = call i32 @get_i(i32 %4, i8* getelementptr inbounds ([3 x i8]* @.str1067, i32 0, i32 0), i32* getelementptr inbounds (%struct.params* @par_buf, i32 0, i32 1))
  %5 = load i32* %status, align 4
  %add15 = add nsw i32 %5, %call14
  store i32 %add15, i32* %status, align 4
  br label %if.end16

if.end16:                                         ; preds = %if.then13, %if.end
  %6 = load i32* %status, align 4
  %cmp17 = icmp eq i32 %6, 0
  br i1 %cmp17, label %if.then18, label %if.end21

if.then18:                                        ; preds = %if.end16
  %7 = load i32* %prompt, align 4
  %call19 = call i32 @get_i(i32 %7, i8* getelementptr inbounds ([3 x i8]* @.str1168, i32 0, i32 0), i32* getelementptr inbounds (%struct.params* @par_buf, i32 0, i32 2))
  %8 = load i32* %status, align 4
  %add20 = add nsw i32 %8, %call19
  store i32 %add20, i32* %status, align 4
  br label %if.end21

if.end21:                                         ; preds = %if.then18, %if.end16
  %9 = load i32* %status, align 4
  %cmp22 = icmp eq i32 %9, 0
  br i1 %cmp22, label %if.then23, label %if.end26

if.then23:                                        ; preds = %if.end21
  %10 = load i32* %prompt, align 4
  %call24 = call i32 @get_i(i32 %10, i8* getelementptr inbounds ([3 x i8]* @.str1269, i32 0, i32 0), i32* getelementptr inbounds (%struct.params* @par_buf, i32 0, i32 3))
  %11 = load i32* %status, align 4
  %add25 = add nsw i32 %11, %call24
  store i32 %add25, i32* %status, align 4
  br label %if.end26

if.end26:                                         ; preds = %if.then23, %if.end21
  %12 = load i32* %status, align 4
  %cmp27 = icmp eq i32 %12, 0
  br i1 %cmp27, label %if.then28, label %if.end31

if.then28:                                        ; preds = %if.end26
  %13 = load i32* %prompt, align 4
  %call29 = call i32 @get_i(i32 %13, i8* getelementptr inbounds ([3 x i8]* @.str1370, i32 0, i32 0), i32* getelementptr inbounds (%struct.params* @par_buf, i32 0, i32 4))
  %14 = load i32* %status, align 4
  %add30 = add nsw i32 %14, %call29
  store i32 %add30, i32* %status, align 4
  br label %if.end31

if.end31:                                         ; preds = %if.then28, %if.end26
  %15 = load i32* %status, align 4
  %cmp32 = icmp eq i32 %15, 0
  br i1 %cmp32, label %if.then33, label %if.end36

if.then33:                                        ; preds = %if.end31
  %16 = load i32* %prompt, align 4
  %call34 = call i32 @get_i(i32 %16, i8* getelementptr inbounds ([6 x i8]* @.str1471, i32 0, i32 0), i32* getelementptr inbounds (%struct.params* @par_buf, i32 0, i32 5))
  %17 = load i32* %status, align 4
  %add35 = add nsw i32 %17, %call34
  store i32 %add35, i32* %status, align 4
  br label %if.end36

if.end36:                                         ; preds = %if.then33, %if.end31
  %18 = load i32* %status, align 4
  %cmp37 = icmp sgt i32 %18, 0
  br i1 %cmp37, label %if.then38, label %if.else

if.then38:                                        ; preds = %if.end36
  store i32 1, i32* getelementptr inbounds (%struct.params* @par_buf, i32 0, i32 0), align 4
  br label %if.end39

if.else:                                          ; preds = %if.end36
  store i32 0, i32* getelementptr inbounds (%struct.params* @par_buf, i32 0, i32 0), align 4
  br label %if.end39

if.end39:                                         ; preds = %if.else, %if.then38
  br label %if.end40

if.end40:                                         ; preds = %if.end39, %entry
  call void @broadcast_bytes(i8* bitcast (%struct.params* @par_buf to i8*), i32 640)
  %19 = load i32* getelementptr inbounds (%struct.params* @par_buf, i32 0, i32 0), align 4
  %cmp41 = icmp ne i32 %19, 0
  br i1 %cmp41, label %if.then42, label %if.end43

if.then42:                                        ; preds = %if.end40
  call void @normal_exit(i32 0)
  br label %if.end43

if.end43:                                         ; preds = %if.then42, %if.end40
  %20 = load i32* getelementptr inbounds (%struct.params* @par_buf, i32 0, i32 1), align 4
  store i32 %20, i32* @nx, align 4
  %21 = load i32* getelementptr inbounds (%struct.params* @par_buf, i32 0, i32 2), align 4
  store i32 %21, i32* @ny, align 4
  %22 = load i32* getelementptr inbounds (%struct.params* @par_buf, i32 0, i32 3), align 4
  store i32 %22, i32* @nz, align 4
  %23 = load i32* getelementptr inbounds (%struct.params* @par_buf, i32 0, i32 4), align 4
  store i32 %23, i32* @nt, align 4
  %24 = load i32* getelementptr inbounds (%struct.params* @par_buf, i32 0, i32 5), align 4
  store i32 %24, i32* @iseed, align 4
  %25 = load i32* getelementptr inbounds (%struct.params* @par_buf, i32 0, i32 6), align 4
  store i32 %25, i32* @nflavors, align 4
  %call44 = call i32 (...)* bitcast (i32 ()* @mynode to i32 (...)*)()
  store i32 %call44, i32* @this_node, align 4
  %call45 = call i32 (...)* bitcast (i32 ()* @numnodes to i32 (...)*)()
  store i32 %call45, i32* @number_of_nodes, align 4
  %26 = load i32* @nx, align 4
  %27 = load i32* @ny, align 4
  %mul = mul nsw i32 %26, %27
  %28 = load i32* @nz, align 4
  %mul46 = mul nsw i32 %mul, %28
  %29 = load i32* @nt, align 4
  %mul47 = mul nsw i32 %mul46, %29
  store i32 %mul47, i32* @volume, align 4
  store i32 0, i32* @total_iters, align 4
  %30 = load i32* %prompt, align 4
  ret i32 %30
}

; Function Attrs: nounwind uwtable
define internal i32 @readin(i32 %prompt) #0 {
entry:
  %prompt.addr = alloca i32, align 4
  %status = alloca i32, align 4
  %x = alloca double, align 8
  store i32 %prompt, i32* %prompt.addr, align 4
  %0 = load i32* @this_node, align 4
  %cmp = icmp eq i32 %0, 0
  br i1 %cmp, label %if.then, label %if.end74

if.then:                                          ; preds = %entry
  %call = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([3 x i8]* @.str1572, i32 0, i32 0))
  store i32 0, i32* %status, align 4
  %1 = load i32* %status, align 4
  %cmp1 = icmp eq i32 %1, 0
  br i1 %cmp1, label %if.then2, label %if.end

if.then2:                                         ; preds = %if.then
  %2 = load i32* %prompt.addr, align 4
  %call3 = call i32 @get_i(i32 %2, i8* getelementptr inbounds ([6 x i8]* @.str1673, i32 0, i32 0), i32* getelementptr inbounds (%struct.params* @par_buf, i32 0, i32 7))
  %3 = load i32* %status, align 4
  %add = add nsw i32 %3, %call3
  store i32 %add, i32* %status, align 4
  br label %if.end

if.end:                                           ; preds = %if.then2, %if.then
  %4 = load i32* %status, align 4
  %cmp4 = icmp eq i32 %4, 0
  br i1 %cmp4, label %if.then5, label %if.end8

if.then5:                                         ; preds = %if.end
  %5 = load i32* %prompt.addr, align 4
  %call6 = call i32 @get_i(i32 %5, i8* getelementptr inbounds ([8 x i8]* @.str1774, i32 0, i32 0), i32* getelementptr inbounds (%struct.params* @par_buf, i32 0, i32 8))
  %6 = load i32* %status, align 4
  %add7 = add nsw i32 %6, %call6
  store i32 %add7, i32* %status, align 4
  br label %if.end8

if.end8:                                          ; preds = %if.then5, %if.end
  %7 = load i32* %status, align 4
  %cmp9 = icmp eq i32 %7, 0
  br i1 %cmp9, label %if.then10, label %if.end13

if.then10:                                        ; preds = %if.end8
  %8 = load i32* %prompt.addr, align 4
  %call11 = call i32 @get_i(i32 %8, i8* getelementptr inbounds ([18 x i8]* @.str1875, i32 0, i32 0), i32* getelementptr inbounds (%struct.params* @par_buf, i32 0, i32 10))
  %9 = load i32* %status, align 4
  %add12 = add nsw i32 %9, %call11
  store i32 %add12, i32* %status, align 4
  br label %if.end13

if.end13:                                         ; preds = %if.then10, %if.end8
  %10 = load i32* %status, align 4
  %cmp14 = icmp eq i32 %10, 0
  br i1 %cmp14, label %if.then15, label %if.end18

if.then15:                                        ; preds = %if.end13
  %11 = load i32* %prompt.addr, align 4
  %call16 = call i32 @get_f(i32 %11, i8* getelementptr inbounds ([5 x i8]* @.str1976, i32 0, i32 0), double* getelementptr inbounds (%struct.params* @par_buf, i32 0, i32 11))
  %12 = load i32* %status, align 4
  %add17 = add nsw i32 %12, %call16
  store i32 %add17, i32* %status, align 4
  br label %if.end18

if.end18:                                         ; preds = %if.then15, %if.end13
  %13 = load i32* %status, align 4
  %cmp19 = icmp eq i32 %13, 0
  br i1 %cmp19, label %if.then20, label %if.end23

if.then20:                                        ; preds = %if.end18
  %14 = load i32* %prompt.addr, align 4
  %call21 = call i32 @get_f(i32 %14, i8* getelementptr inbounds ([5 x i8]* @.str2077, i32 0, i32 0), double* getelementptr inbounds (%struct.params* @par_buf, i32 0, i32 12))
  %15 = load i32* %status, align 4
  %add22 = add nsw i32 %15, %call21
  store i32 %add22, i32* %status, align 4
  br label %if.end23

if.end23:                                         ; preds = %if.then20, %if.end18
  %16 = load i32* %status, align 4
  %cmp24 = icmp eq i32 %16, 0
  br i1 %cmp24, label %if.then25, label %if.end28

if.then25:                                        ; preds = %if.end23
  %17 = load i32* %prompt.addr, align 4
  %call26 = call i32 @get_f(i32 %17, i8* getelementptr inbounds ([3 x i8]* @.str2178, i32 0, i32 0), double* getelementptr inbounds (%struct.params* @par_buf, i32 0, i32 13))
  %18 = load i32* %status, align 4
  %add27 = add nsw i32 %18, %call26
  store i32 %add27, i32* %status, align 4
  br label %if.end28

if.end28:                                         ; preds = %if.then25, %if.end23
  %19 = load i32* %status, align 4
  %cmp29 = icmp eq i32 %19, 0
  br i1 %cmp29, label %if.then30, label %if.end33

if.then30:                                        ; preds = %if.end28
  %20 = load i32* %prompt.addr, align 4
  %call31 = call i32 @get_f(i32 %20, i8* getelementptr inbounds ([25 x i8]* @.str2279, i32 0, i32 0), double* getelementptr inbounds (%struct.params* @par_buf, i32 0, i32 17))
  %21 = load i32* %status, align 4
  %add32 = add nsw i32 %21, %call31
  store i32 %add32, i32* %status, align 4
  br label %if.end33

if.end33:                                         ; preds = %if.then30, %if.end28
  %22 = load i32* %status, align 4
  %cmp34 = icmp eq i32 %22, 0
  br i1 %cmp34, label %if.then35, label %if.end38

if.then35:                                        ; preds = %if.end33
  %23 = load i32* %prompt.addr, align 4
  %call36 = call i32 @get_i(i32 %23, i8* getelementptr inbounds ([21 x i8]* @.str2380, i32 0, i32 0), i32* getelementptr inbounds (%struct.params* @par_buf, i32 0, i32 9))
  %24 = load i32* %status, align 4
  %add37 = add nsw i32 %24, %call36
  store i32 %add37, i32* %status, align 4
  br label %if.end38

if.end38:                                         ; preds = %if.then35, %if.end33
  %25 = load i32* %status, align 4
  %cmp39 = icmp eq i32 %25, 0
  br i1 %cmp39, label %if.then40, label %if.end43

if.then40:                                        ; preds = %if.end38
  %26 = load i32* %prompt.addr, align 4
  %call41 = call i32 @get_i(i32 %26, i8* getelementptr inbounds ([18 x i8]* @.str2481, i32 0, i32 0), i32* getelementptr inbounds (%struct.params* @par_buf, i32 0, i32 14))
  %27 = load i32* %status, align 4
  %add42 = add nsw i32 %27, %call41
  store i32 %add42, i32* %status, align 4
  br label %if.end43

if.end43:                                         ; preds = %if.then40, %if.end38
  %28 = load i32* %status, align 4
  %cmp44 = icmp eq i32 %28, 0
  br i1 %cmp44, label %if.then45, label %if.end48

if.then45:                                        ; preds = %if.end43
  %29 = load i32* %prompt.addr, align 4
  %call46 = call i32 @get_f(i32 %29, i8* getelementptr inbounds ([15 x i8]* @.str2582, i32 0, i32 0), double* %x)
  %30 = load i32* %status, align 4
  %add47 = add nsw i32 %30, %call46
  store i32 %add47, i32* %status, align 4
  br label %if.end48

if.end48:                                         ; preds = %if.then45, %if.end43
  %31 = load i32* %status, align 4
  %cmp49 = icmp eq i32 %31, 0
  br i1 %cmp49, label %if.then50, label %if.end51

if.then50:                                        ; preds = %if.end48
  %32 = load double* %x, align 8
  %33 = load double* %x, align 8
  %mul = fmul double %32, %33
  store double %mul, double* getelementptr inbounds (%struct.params* @par_buf, i32 0, i32 15), align 8
  br label %if.end51

if.end51:                                         ; preds = %if.then50, %if.end48
  %34 = load i32* %status, align 4
  %cmp52 = icmp eq i32 %34, 0
  br i1 %cmp52, label %if.then53, label %if.end56

if.then53:                                        ; preds = %if.end51
  %35 = load i32* %prompt.addr, align 4
  %call54 = call i32 @get_f(i32 %35, i8* getelementptr inbounds ([21 x i8]* @.str2683, i32 0, i32 0), double* %x)
  %36 = load i32* %status, align 4
  %add55 = add nsw i32 %36, %call54
  store i32 %add55, i32* %status, align 4
  br label %if.end56

if.end56:                                         ; preds = %if.then53, %if.end51
  %37 = load i32* %status, align 4
  %cmp57 = icmp eq i32 %37, 0
  br i1 %cmp57, label %if.then58, label %if.end60

if.then58:                                        ; preds = %if.end56
  %38 = load double* %x, align 8
  %39 = load double* %x, align 8
  %mul59 = fmul double %38, %39
  store double %mul59, double* getelementptr inbounds (%struct.params* @par_buf, i32 0, i32 16), align 8
  br label %if.end60

if.end60:                                         ; preds = %if.then58, %if.end56
  %40 = load i32* %status, align 4
  %cmp61 = icmp eq i32 %40, 0
  br i1 %cmp61, label %if.then62, label %if.end65

if.then62:                                        ; preds = %if.end60
  %41 = load i32* %prompt.addr, align 4
  %call63 = call i32 @ask_starting_lattice(i32 %41, i32* getelementptr inbounds (%struct.params* @par_buf, i32 0, i32 21), i8* getelementptr inbounds (%struct.params* @par_buf, i32 0, i32 23, i32 0))
  %42 = load i32* %status, align 4
  %add64 = add nsw i32 %42, %call63
  store i32 %add64, i32* %status, align 4
  br label %if.end65

if.end65:                                         ; preds = %if.then62, %if.end60
  %43 = load i32* %status, align 4
  %cmp66 = icmp eq i32 %43, 0
  br i1 %cmp66, label %if.then67, label %if.end70

if.then67:                                        ; preds = %if.end65
  %44 = load i32* %prompt.addr, align 4
  %call68 = call i32 @ask_ending_lattice(i32 %44, i32* getelementptr inbounds (%struct.params* @par_buf, i32 0, i32 22), i8* getelementptr inbounds (%struct.params* @par_buf, i32 0, i32 24, i32 0))
  %45 = load i32* %status, align 4
  %add69 = add nsw i32 %45, %call68
  store i32 %add69, i32* %status, align 4
  br label %if.end70

if.end70:                                         ; preds = %if.then67, %if.end65
  %46 = load i32* %status, align 4
  %cmp71 = icmp sgt i32 %46, 0
  br i1 %cmp71, label %if.then72, label %if.else

if.then72:                                        ; preds = %if.end70
  store i32 1, i32* getelementptr inbounds (%struct.params* @par_buf, i32 0, i32 0), align 4
  br label %if.end73

if.else:                                          ; preds = %if.end70
  store i32 0, i32* getelementptr inbounds (%struct.params* @par_buf, i32 0, i32 0), align 4
  br label %if.end73

if.end73:                                         ; preds = %if.else, %if.then72
  br label %if.end74

if.end74:                                         ; preds = %if.end73, %entry
  call void @broadcast_bytes(i8* bitcast (%struct.params* @par_buf to i8*), i32 640)
  %47 = load i32* getelementptr inbounds (%struct.params* @par_buf, i32 0, i32 0), align 4
  %cmp75 = icmp ne i32 %47, 0
  br i1 %cmp75, label %if.then76, label %if.end77

if.then76:                                        ; preds = %if.end74
  call void @normal_exit(i32 0)
  br label %if.end77

if.end77:                                         ; preds = %if.then76, %if.end74
  %48 = load i32* getelementptr inbounds (%struct.params* @par_buf, i32 0, i32 7), align 4
  store i32 %48, i32* @warms, align 4
  %49 = load i32* getelementptr inbounds (%struct.params* @par_buf, i32 0, i32 8), align 4
  store i32 %49, i32* @trajecs, align 4
  %50 = load i32* getelementptr inbounds (%struct.params* @par_buf, i32 0, i32 9), align 4
  store i32 %50, i32* @steps, align 4
  %51 = load i32* getelementptr inbounds (%struct.params* @par_buf, i32 0, i32 10), align 4
  store i32 %51, i32* @propinterval, align 4
  %52 = load i32* getelementptr inbounds (%struct.params* @par_buf, i32 0, i32 14), align 4
  store i32 %52, i32* @niter, align 4
  %53 = load double* getelementptr inbounds (%struct.params* @par_buf, i32 0, i32 15), align 8
  store double %53, double* @rsqmin, align 8
  %54 = load double* getelementptr inbounds (%struct.params* @par_buf, i32 0, i32 16), align 8
  store double %54, double* @rsqprop, align 8
  %55 = load double* getelementptr inbounds (%struct.params* @par_buf, i32 0, i32 17), align 8
  store double %55, double* @epsilon, align 8
  %56 = load double* getelementptr inbounds (%struct.params* @par_buf, i32 0, i32 11), align 8
  store double %56, double* @beta, align 8
  %57 = load double* getelementptr inbounds (%struct.params* @par_buf, i32 0, i32 12), align 8
  store double %57, double* @mass, align 8
  %58 = load double* getelementptr inbounds (%struct.params* @par_buf, i32 0, i32 13), align 8
  store double %58, double* @u0, align 8
  %59 = load i32* getelementptr inbounds (%struct.params* @par_buf, i32 0, i32 21), align 4
  store i32 %59, i32* @startflag, align 4
  %60 = load i32* getelementptr inbounds (%struct.params* @par_buf, i32 0, i32 22), align 4
  store i32 %60, i32* @saveflag, align 4
  %call78 = call i8* @strcpy(i8* getelementptr inbounds ([256 x i8]* @startfile, i32 0, i32 0), i8* getelementptr inbounds (%struct.params* @par_buf, i32 0, i32 23, i32 0)) #2
  %call79 = call i8* @strcpy(i8* getelementptr inbounds ([256 x i8]* @savefile, i32 0, i32 0), i8* getelementptr inbounds (%struct.params* @par_buf, i32 0, i32 24, i32 0)) #2
  %61 = load i32* @startflag, align 4
  %cmp80 = icmp eq i32 %61, 10
  br i1 %cmp80, label %if.then81, label %if.end82

if.then81:                                        ; preds = %if.end77
  call void @rephase(i32 0)
  br label %if.end82

if.end82:                                         ; preds = %if.then81, %if.end77
  %62 = load i32* @startflag, align 4
  %call83 = call %struct.gauge_file* @reload_lattice(i32 %62, i8* getelementptr inbounds ([256 x i8]* @startfile, i32 0, i32 0))
  store %struct.gauge_file* %call83, %struct.gauge_file** @startlat_p, align 8
  store i32 0, i32* @valid_longlinks, align 4
  store i32 0, i32* @valid_fatlinks, align 4
  store i32 0, i32* @phases_in, align 4
  call void @rephase(i32 1)
  call void (...)* bitcast (void ()* @make_loop_table to void (...)*)()
  call void (...)* bitcast (void ()* @make_path_table to void (...)*)()
  ret i32 0
}

; Function Attrs: nounwind
declare i8* @strcpy(i8*, i8*) #3

; Function Attrs: nounwind uwtable
define internal void @make_3n_gathers() #0 {
entry:
  %i = alloca i32, align 4
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32* %i, align 4
  %cmp = icmp sle i32 %0, 3
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %call = call i32 @make_gather(void (i32, i32, i32, i32, i32*, i32, i32*, i32*, i32*, i32*)* @third_neighbor, i32* %i, i32 1, i32 0, i32 1)
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %1 = load i32* %i, align 4
  %inc = add nsw i32 %1, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  call void @sort_eight_neighborlists(i32 8)
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @third_neighbor(i32 %x, i32 %y, i32 %z, i32 %t, i32* %dirpt, i32 %FB, i32* %xp, i32* %yp, i32* %zp, i32* %tp) #0 {
entry:
  %x.addr = alloca i32, align 4
  %y.addr = alloca i32, align 4
  %z.addr = alloca i32, align 4
  %t.addr = alloca i32, align 4
  %dirpt.addr = alloca i32*, align 8
  %FB.addr = alloca i32, align 4
  %xp.addr = alloca i32*, align 8
  %yp.addr = alloca i32*, align 8
  %zp.addr = alloca i32*, align 8
  %tp.addr = alloca i32*, align 8
  %dir = alloca i32, align 4
  store i32 %x, i32* %x.addr, align 4
  store i32 %y, i32* %y.addr, align 4
  store i32 %z, i32* %z.addr, align 4
  store i32 %t, i32* %t.addr, align 4
  store i32* %dirpt, i32** %dirpt.addr, align 8
  store i32 %FB, i32* %FB.addr, align 4
  store i32* %xp, i32** %xp.addr, align 8
  store i32* %yp, i32** %yp.addr, align 8
  store i32* %zp, i32** %zp.addr, align 8
  store i32* %tp, i32** %tp.addr, align 8
  %0 = load i32* %FB.addr, align 4
  %cmp = icmp eq i32 %0, 1
  br i1 %cmp, label %cond.true, label %cond.false

cond.true:                                        ; preds = %entry
  %1 = load i32** %dirpt.addr, align 8
  %2 = load i32* %1, align 4
  br label %cond.end

cond.false:                                       ; preds = %entry
  %3 = load i32** %dirpt.addr, align 8
  %4 = load i32* %3, align 4
  %sub = sub nsw i32 7, %4
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %2, %cond.true ], [ %sub, %cond.false ]
  store i32 %cond, i32* %dir, align 4
  %5 = load i32* %x.addr, align 4
  %6 = load i32** %xp.addr, align 8
  store i32 %5, i32* %6, align 4
  %7 = load i32* %y.addr, align 4
  %8 = load i32** %yp.addr, align 8
  store i32 %7, i32* %8, align 4
  %9 = load i32* %z.addr, align 4
  %10 = load i32** %zp.addr, align 8
  store i32 %9, i32* %10, align 4
  %11 = load i32* %t.addr, align 4
  %12 = load i32** %tp.addr, align 8
  store i32 %11, i32* %12, align 4
  %13 = load i32* %dir, align 4
  switch i32 %13, label %sw.default [
    i32 0, label %sw.bb
    i32 7, label %sw.bb1
    i32 1, label %sw.bb5
    i32 6, label %sw.bb8
    i32 2, label %sw.bb13
    i32 5, label %sw.bb16
    i32 3, label %sw.bb21
    i32 4, label %sw.bb24
  ]

sw.bb:                                            ; preds = %cond.end
  %14 = load i32* %x.addr, align 4
  %add = add nsw i32 %14, 3
  %15 = load i32* @nx, align 4
  %rem = srem i32 %add, %15
  %16 = load i32** %xp.addr, align 8
  store i32 %rem, i32* %16, align 4
  br label %sw.epilog

sw.bb1:                                           ; preds = %cond.end
  %17 = load i32* %x.addr, align 4
  %18 = load i32* @nx, align 4
  %mul = mul nsw i32 4, %18
  %add2 = add nsw i32 %17, %mul
  %sub3 = sub nsw i32 %add2, 3
  %19 = load i32* @nx, align 4
  %rem4 = srem i32 %sub3, %19
  %20 = load i32** %xp.addr, align 8
  store i32 %rem4, i32* %20, align 4
  br label %sw.epilog

sw.bb5:                                           ; preds = %cond.end
  %21 = load i32* %y.addr, align 4
  %add6 = add nsw i32 %21, 3
  %22 = load i32* @ny, align 4
  %rem7 = srem i32 %add6, %22
  %23 = load i32** %yp.addr, align 8
  store i32 %rem7, i32* %23, align 4
  br label %sw.epilog

sw.bb8:                                           ; preds = %cond.end
  %24 = load i32* %y.addr, align 4
  %25 = load i32* @ny, align 4
  %mul9 = mul nsw i32 4, %25
  %add10 = add nsw i32 %24, %mul9
  %sub11 = sub nsw i32 %add10, 3
  %26 = load i32* @ny, align 4
  %rem12 = srem i32 %sub11, %26
  %27 = load i32** %yp.addr, align 8
  store i32 %rem12, i32* %27, align 4
  br label %sw.epilog

sw.bb13:                                          ; preds = %cond.end
  %28 = load i32* %z.addr, align 4
  %add14 = add nsw i32 %28, 3
  %29 = load i32* @nz, align 4
  %rem15 = srem i32 %add14, %29
  %30 = load i32** %zp.addr, align 8
  store i32 %rem15, i32* %30, align 4
  br label %sw.epilog

sw.bb16:                                          ; preds = %cond.end
  %31 = load i32* %z.addr, align 4
  %32 = load i32* @nz, align 4
  %mul17 = mul nsw i32 4, %32
  %add18 = add nsw i32 %31, %mul17
  %sub19 = sub nsw i32 %add18, 3
  %33 = load i32* @nz, align 4
  %rem20 = srem i32 %sub19, %33
  %34 = load i32** %zp.addr, align 8
  store i32 %rem20, i32* %34, align 4
  br label %sw.epilog

sw.bb21:                                          ; preds = %cond.end
  %35 = load i32* %t.addr, align 4
  %add22 = add nsw i32 %35, 3
  %36 = load i32* @nt, align 4
  %rem23 = srem i32 %add22, %36
  %37 = load i32** %tp.addr, align 8
  store i32 %rem23, i32* %37, align 4
  br label %sw.epilog

sw.bb24:                                          ; preds = %cond.end
  %38 = load i32* %t.addr, align 4
  %39 = load i32* @nt, align 4
  %mul25 = mul nsw i32 4, %39
  %add26 = add nsw i32 %38, %mul25
  %sub27 = sub nsw i32 %add26, 3
  %40 = load i32* @nt, align 4
  %rem28 = srem i32 %sub27, %40
  %41 = load i32** %tp.addr, align 8
  store i32 %rem28, i32* %41, align 4
  br label %sw.epilog

sw.default:                                       ; preds = %cond.end
  %call = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([29 x i8]* @.str2784, i32 0, i32 0))
  call void @exit(i32 1) #7
  unreachable

sw.epilog:                                        ; preds = %sw.bb24, %sw.bb21, %sw.bb16, %sw.bb13, %sw.bb8, %sw.bb5, %sw.bb1, %sw.bb
  ret void
}

; Function Attrs: noreturn nounwind
declare void @exit(i32) #4

; Function Attrs: nounwind uwtable
define internal i32 @update() #0 {
entry:
  %retval = alloca i32, align 4
  %step = alloca i32, align 4
  %iters = alloca i32, align 4
  %final_rsq = alloca double, align 8
  %cg_time = alloca double, align 8
  %old_cg_time = alloca double, align 8
  %next_cg_time = alloca double, align 8
  store i32 0, i32* %iters, align 4
  call void @ranmom()
  store i32 1, i32* %step, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32* %step, align 4
  %1 = load i32* @steps, align 4
  %cmp = icmp sle i32 %0, %1
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %2 = load double* @epsilon, align 8
  %3 = load i32* @nflavors, align 4
  %conv = sitofp i32 %3 to double
  %div = fdiv double %conv, 8.000000e+00
  %sub = fsub double 5.000000e-01, %div
  %mul = fmul double %2, %sub
  call void @update_u(double %mul)
  %4 = load %struct.site** @lattice, align 8
  %arrayidx = getelementptr inbounds %struct.site* %4, i64 0
  %phi = getelementptr inbounds %struct.site* %arrayidx, i32 0, i32 11
  %5 = bitcast %struct.su3_vector* %phi to i8*
  %6 = load %struct.site** @lattice, align 8
  %arrayidx1 = getelementptr inbounds %struct.site* %6, i64 0
  %7 = bitcast %struct.site* %arrayidx1 to i8*
  %sub.ptr.lhs.cast = ptrtoint i8* %5 to i64
  %sub.ptr.rhs.cast = ptrtoint i8* %7 to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %conv2 = trunc i64 %sub.ptr.sub to i32
  %8 = load double* @mass, align 8
  call void @grsource_imp(i32 %conv2, double %8, i32 2)
  store double -1.000000e+06, double* %cg_time, align 8
  %9 = load double* @epsilon, align 8
  %10 = load i32* @nflavors, align 4
  %conv3 = sitofp i32 %10 to double
  %mul4 = fmul double %9, %conv3
  %div5 = fdiv double %mul4, 8.000000e+00
  call void @update_u(double %div5)
  %11 = load %struct.site** @lattice, align 8
  %arrayidx6 = getelementptr inbounds %struct.site* %11, i64 0
  %phi7 = getelementptr inbounds %struct.site* %arrayidx6, i32 0, i32 11
  %12 = bitcast %struct.su3_vector* %phi7 to i8*
  %13 = load %struct.site** @lattice, align 8
  %arrayidx8 = getelementptr inbounds %struct.site* %13, i64 0
  %14 = bitcast %struct.site* %arrayidx8 to i8*
  %sub.ptr.lhs.cast9 = ptrtoint i8* %12 to i64
  %sub.ptr.rhs.cast10 = ptrtoint i8* %14 to i64
  %sub.ptr.sub11 = sub i64 %sub.ptr.lhs.cast9, %sub.ptr.rhs.cast10
  %conv12 = trunc i64 %sub.ptr.sub11 to i32
  %15 = load %struct.site** @lattice, align 8
  %arrayidx13 = getelementptr inbounds %struct.site* %15, i64 0
  %xxx = getelementptr inbounds %struct.site* %arrayidx13, i32 0, i32 14
  %16 = bitcast %struct.su3_vector* %xxx to i8*
  %17 = load %struct.site** @lattice, align 8
  %arrayidx14 = getelementptr inbounds %struct.site* %17, i64 0
  %18 = bitcast %struct.site* %arrayidx14 to i8*
  %sub.ptr.lhs.cast15 = ptrtoint i8* %16 to i64
  %sub.ptr.rhs.cast16 = ptrtoint i8* %18 to i64
  %sub.ptr.sub17 = sub i64 %sub.ptr.lhs.cast15, %sub.ptr.rhs.cast16
  %conv18 = trunc i64 %sub.ptr.sub17 to i32
  %19 = load double* @mass, align 8
  %20 = load i32* @niter, align 4
  %21 = load double* @rsqmin, align 8
  %call = call i32 @ks_congrad(i32 %conv12, i32 %conv18, double %19, i32 %20, double %21, i32 2, double* %final_rsq)
  %22 = load i32* %iters, align 4
  %add = add nsw i32 %22, %call
  store i32 %add, i32* %iters, align 4
  %23 = load i32* %step, align 4
  %conv19 = sitofp i32 %23 to double
  %sub20 = fsub double %conv19, 5.000000e-01
  %24 = load double* @epsilon, align 8
  %mul21 = fmul double %sub20, %24
  store double %mul21, double* %cg_time, align 8
  %25 = load double* @epsilon, align 8
  call void @update_h(double %25)
  %26 = load double* @epsilon, align 8
  %mul22 = fmul double %26, 5.000000e-01
  call void @update_u(double %mul22)
  call void @rephase(i32 0)
  call void @reunitarize()
  call void @rephase(i32 1)
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %27 = load i32* %step, align 4
  %inc = add nsw i32 %27, 1
  store i32 %inc, i32* %step, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %28 = load i32* @steps, align 4
  %cmp23 = icmp sgt i32 %28, 0
  br i1 %cmp23, label %if.then, label %if.else

if.then:                                          ; preds = %for.end
  %29 = load i32* %iters, align 4
  %30 = load i32* @steps, align 4
  %div25 = sdiv i32 %29, %30
  store i32 %div25, i32* %retval
  br label %return

if.else:                                          ; preds = %for.end
  store i32 -99, i32* %retval
  br label %return

return:                                           ; preds = %if.else, %if.then
  %31 = load i32* %retval
  ret i32 %31
}

; Function Attrs: nounwind uwtable
define internal void @update_h(double %eps) #0 {
entry:
  %eps.addr = alloca double, align 8
  store double %eps, double* %eps.addr, align 8
  call void @rephase(i32 0)
  %0 = load double* %eps.addr, align 8
  %1 = load %struct.site** @lattice, align 8
  %arrayidx = getelementptr inbounds %struct.site* %1, i64 0
  %mom = getelementptr inbounds %struct.site* %arrayidx, i32 0, i32 9
  %2 = bitcast [4 x %struct.anti_hermitmat]* %mom to i8*
  %3 = load %struct.site** @lattice, align 8
  %arrayidx1 = getelementptr inbounds %struct.site* %3, i64 0
  %4 = bitcast %struct.site* %arrayidx1 to i8*
  %sub.ptr.lhs.cast = ptrtoint i8* %2 to i64
  %sub.ptr.rhs.cast = ptrtoint i8* %4 to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %conv = trunc i64 %sub.ptr.sub to i32
  call void @imp_gauge_force(double %0, i32 %conv)
  call void @rephase(i32 1)
  %5 = load %struct.site** @lattice, align 8
  %arrayidx2 = getelementptr inbounds %struct.site* %5, i64 0
  %xxx = getelementptr inbounds %struct.site* %arrayidx2, i32 0, i32 14
  %6 = bitcast %struct.su3_vector* %xxx to i8*
  %7 = load %struct.site** @lattice, align 8
  %arrayidx3 = getelementptr inbounds %struct.site* %7, i64 0
  %8 = bitcast %struct.site* %arrayidx3 to i8*
  %sub.ptr.lhs.cast4 = ptrtoint i8* %6 to i64
  %sub.ptr.rhs.cast5 = ptrtoint i8* %8 to i64
  %sub.ptr.sub6 = sub i64 %sub.ptr.lhs.cast4, %sub.ptr.rhs.cast5
  %conv7 = trunc i64 %sub.ptr.sub6 to i32
  %9 = load %struct.site** @lattice, align 8
  %arrayidx8 = getelementptr inbounds %struct.site* %9, i64 0
  %xxx9 = getelementptr inbounds %struct.site* %arrayidx8, i32 0, i32 14
  %10 = bitcast %struct.su3_vector* %xxx9 to i8*
  %11 = load %struct.site** @lattice, align 8
  %arrayidx10 = getelementptr inbounds %struct.site* %11, i64 0
  %12 = bitcast %struct.site* %arrayidx10 to i8*
  %sub.ptr.lhs.cast11 = ptrtoint i8* %10 to i64
  %sub.ptr.rhs.cast12 = ptrtoint i8* %12 to i64
  %sub.ptr.sub13 = sub i64 %sub.ptr.lhs.cast11, %sub.ptr.rhs.cast12
  %conv14 = trunc i64 %sub.ptr.sub13 to i32
  call void @dslash_fn(i32 %conv7, i32 %conv14, i32 1)
  %13 = load double* %eps.addr, align 8
  %14 = load i32* @nflavors, align 4
  %15 = load %struct.site** @lattice, align 8
  %arrayidx15 = getelementptr inbounds %struct.site* %15, i64 0
  %xxx16 = getelementptr inbounds %struct.site* %arrayidx15, i32 0, i32 14
  %16 = bitcast %struct.su3_vector* %xxx16 to i8*
  %17 = load %struct.site** @lattice, align 8
  %arrayidx17 = getelementptr inbounds %struct.site* %17, i64 0
  %18 = bitcast %struct.site* %arrayidx17 to i8*
  %sub.ptr.lhs.cast18 = ptrtoint i8* %16 to i64
  %sub.ptr.rhs.cast19 = ptrtoint i8* %18 to i64
  %sub.ptr.sub20 = sub i64 %sub.ptr.lhs.cast18, %sub.ptr.rhs.cast19
  %conv21 = trunc i64 %sub.ptr.sub20 to i32
  call void @eo_fermion_force(double %13, i32 %14, i32 %conv21)
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @update_u(double %eps) #0 {
entry:
  %eps.addr = alloca double, align 8
  %i = alloca i32, align 4
  %dir = alloca i32, align 4
  %s = alloca %struct.site*, align 8
  %link = alloca %struct.su3_matrix*, align 8
  %temp1 = alloca %struct.su3_matrix, align 8
  %temp2 = alloca %struct.su3_matrix, align 8
  %htemp = alloca %struct.su3_matrix, align 8
  %t2 = alloca double, align 8
  %t3 = alloca double, align 8
  %t4 = alloca double, align 8
  %t5 = alloca double, align 8
  %t6 = alloca double, align 8
  store double %eps, double* %eps.addr, align 8
  %0 = load double* %eps.addr, align 8
  %div = fdiv double %0, 2.000000e+00
  store double %div, double* %t2, align 8
  %1 = load double* %eps.addr, align 8
  %div1 = fdiv double %1, 3.000000e+00
  store double %div1, double* %t3, align 8
  %2 = load double* %eps.addr, align 8
  %div2 = fdiv double %2, 4.000000e+00
  store double %div2, double* %t4, align 8
  %3 = load double* %eps.addr, align 8
  %div3 = fdiv double %3, 5.000000e+00
  store double %div3, double* %t5, align 8
  %4 = load double* %eps.addr, align 8
  %div4 = fdiv double %4, 6.000000e+00
  store double %div4, double* %t6, align 8
  store i32 0, i32* %i, align 4
  %5 = load %struct.site** @lattice, align 8
  store %struct.site* %5, %struct.site** %s, align 8
  br label %for.cond

for.cond:                                         ; preds = %for.inc11, %entry
  %6 = load i32* %i, align 4
  %7 = load i32* @sites_on_node, align 4
  %cmp = icmp slt i32 %6, %7
  br i1 %cmp, label %for.body, label %for.end13

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %dir, align 4
  br label %for.cond5

for.cond5:                                        ; preds = %for.inc, %for.body
  %8 = load i32* %dir, align 4
  %cmp6 = icmp sle i32 %8, 3
  br i1 %cmp6, label %for.body7, label %for.end

for.body7:                                        ; preds = %for.cond5
  %9 = load i32* %dir, align 4
  %idxprom = sext i32 %9 to i64
  %10 = load %struct.site** %s, align 8
  %mom = getelementptr inbounds %struct.site* %10, i32 0, i32 9
  %arrayidx = getelementptr inbounds [4 x %struct.anti_hermitmat]* %mom, i32 0, i64 %idxprom
  call void @uncompress_anti_hermitian(%struct.anti_hermitmat* %arrayidx, %struct.su3_matrix* %htemp)
  %11 = load i32* %dir, align 4
  %idxprom8 = sext i32 %11 to i64
  %12 = load %struct.site** %s, align 8
  %link9 = getelementptr inbounds %struct.site* %12, i32 0, i32 8
  %arrayidx10 = getelementptr inbounds [4 x %struct.su3_matrix]* %link9, i32 0, i64 %idxprom8
  store %struct.su3_matrix* %arrayidx10, %struct.su3_matrix** %link, align 8
  %13 = load %struct.su3_matrix** %link, align 8
  call void @mult_su3_nn(%struct.su3_matrix* %htemp, %struct.su3_matrix* %13, %struct.su3_matrix* %temp1)
  %14 = load %struct.su3_matrix** %link, align 8
  %15 = load double* %t6, align 8
  call void @scalar_mult_add_su3_matrix(%struct.su3_matrix* %14, %struct.su3_matrix* %temp1, double %15, %struct.su3_matrix* %temp2)
  call void @mult_su3_nn(%struct.su3_matrix* %htemp, %struct.su3_matrix* %temp2, %struct.su3_matrix* %temp1)
  %16 = load %struct.su3_matrix** %link, align 8
  %17 = load double* %t5, align 8
  call void @scalar_mult_add_su3_matrix(%struct.su3_matrix* %16, %struct.su3_matrix* %temp1, double %17, %struct.su3_matrix* %temp2)
  call void @mult_su3_nn(%struct.su3_matrix* %htemp, %struct.su3_matrix* %temp2, %struct.su3_matrix* %temp1)
  %18 = load %struct.su3_matrix** %link, align 8
  %19 = load double* %t4, align 8
  call void @scalar_mult_add_su3_matrix(%struct.su3_matrix* %18, %struct.su3_matrix* %temp1, double %19, %struct.su3_matrix* %temp2)
  call void @mult_su3_nn(%struct.su3_matrix* %htemp, %struct.su3_matrix* %temp2, %struct.su3_matrix* %temp1)
  %20 = load %struct.su3_matrix** %link, align 8
  %21 = load double* %t3, align 8
  call void @scalar_mult_add_su3_matrix(%struct.su3_matrix* %20, %struct.su3_matrix* %temp1, double %21, %struct.su3_matrix* %temp2)
  call void @mult_su3_nn(%struct.su3_matrix* %htemp, %struct.su3_matrix* %temp2, %struct.su3_matrix* %temp1)
  %22 = load %struct.su3_matrix** %link, align 8
  %23 = load double* %t2, align 8
  call void @scalar_mult_add_su3_matrix(%struct.su3_matrix* %22, %struct.su3_matrix* %temp1, double %23, %struct.su3_matrix* %temp2)
  call void @mult_su3_nn(%struct.su3_matrix* %htemp, %struct.su3_matrix* %temp2, %struct.su3_matrix* %temp1)
  %24 = load %struct.su3_matrix** %link, align 8
  %25 = load double* %eps.addr, align 8
  call void @scalar_mult_add_su3_matrix(%struct.su3_matrix* %24, %struct.su3_matrix* %temp1, double %25, %struct.su3_matrix* %temp2)
  %26 = load %struct.su3_matrix** %link, align 8
  call void @su3mat_copy(%struct.su3_matrix* %temp2, %struct.su3_matrix* %26)
  br label %for.inc

for.inc:                                          ; preds = %for.body7
  %27 = load i32* %dir, align 4
  %inc = add nsw i32 %27, 1
  store i32 %inc, i32* %dir, align 4
  br label %for.cond5

for.end:                                          ; preds = %for.cond5
  br label %for.inc11

for.inc11:                                        ; preds = %for.end
  %28 = load i32* %i, align 4
  %inc12 = add nsw i32 %28, 1
  store i32 %inc12, i32* %i, align 4
  %29 = load %struct.site** %s, align 8
  %incdec.ptr = getelementptr inbounds %struct.site* %29, i32 1
  store %struct.site* %incdec.ptr, %struct.site** %s, align 8
  br label %for.cond

for.end13:                                        ; preds = %for.cond
  store i32 0, i32* @valid_longlinks, align 4
  store i32 0, i32* @valid_fatlinks, align 4
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @setup_layout() #0 {
entry:
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %dir = alloca i32, align 4
  %call = call i32 (...)* bitcast (i32 ()* @mynode to i32 (...)*)()
  %cmp = icmp eq i32 %call, 0
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %call1 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([32 x i8]* @.str95, i32 0, i32 0))
  %call2 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([11 x i8]* @.str196, i32 0, i32 0))
  %call3 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([2 x i8]* @.str297, i32 0, i32 0))
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %0 = load i32* @nx, align 4
  store i32 %0, i32* getelementptr inbounds ([4 x i32]* @squaresize, i32 0, i64 0), align 4
  %1 = load i32* @ny, align 4
  store i32 %1, i32* getelementptr inbounds ([4 x i32]* @squaresize, i32 0, i64 1), align 4
  %2 = load i32* @nz, align 4
  store i32 %2, i32* getelementptr inbounds ([4 x i32]* @squaresize, i32 0, i64 2), align 4
  %3 = load i32* @nt, align 4
  store i32 %3, i32* getelementptr inbounds ([4 x i32]* @squaresize, i32 0, i64 3), align 4
  store i32 1, i32* getelementptr inbounds ([4 x i32]* @nsquares, i32 0, i64 3), align 4
  store i32 1, i32* getelementptr inbounds ([4 x i32]* @nsquares, i32 0, i64 2), align 4
  store i32 1, i32* getelementptr inbounds ([4 x i32]* @nsquares, i32 0, i64 1), align 4
  store i32 1, i32* getelementptr inbounds ([4 x i32]* @nsquares, i32 0, i64 0), align 4
  store i32 1, i32* %i, align 4
  br label %while.cond

while.cond:                                       ; preds = %if.end51, %if.end
  %4 = load i32* %i, align 4
  %call4 = call i32 (...)* bitcast (i32 ()* @numnodes to i32 (...)*)()
  %cmp5 = icmp slt i32 %4, %call4
  br i1 %cmp5, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  store i32 1, i32* %j, align 4
  store i32 0, i32* %dir, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %while.body
  %5 = load i32* %dir, align 4
  %cmp6 = icmp sle i32 %5, 3
  br i1 %cmp6, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %6 = load i32* %dir, align 4
  %idxprom = sext i32 %6 to i64
  %arrayidx = getelementptr inbounds [4 x i32]* @squaresize, i32 0, i64 %idxprom
  %7 = load i32* %arrayidx, align 4
  %8 = load i32* %j, align 4
  %cmp7 = icmp sgt i32 %7, %8
  br i1 %cmp7, label %land.lhs.true, label %if.end14

land.lhs.true:                                    ; preds = %for.body
  %9 = load i32* %dir, align 4
  %idxprom8 = sext i32 %9 to i64
  %arrayidx9 = getelementptr inbounds [4 x i32]* @squaresize, i32 0, i64 %idxprom8
  %10 = load i32* %arrayidx9, align 4
  %rem = srem i32 %10, 2
  %cmp10 = icmp eq i32 %rem, 0
  br i1 %cmp10, label %if.then11, label %if.end14

if.then11:                                        ; preds = %land.lhs.true
  %11 = load i32* %dir, align 4
  %idxprom12 = sext i32 %11 to i64
  %arrayidx13 = getelementptr inbounds [4 x i32]* @squaresize, i32 0, i64 %idxprom12
  %12 = load i32* %arrayidx13, align 4
  store i32 %12, i32* %j, align 4
  br label %if.end14

if.end14:                                         ; preds = %if.then11, %land.lhs.true, %for.body
  br label %for.inc

for.inc:                                          ; preds = %if.end14
  %13 = load i32* %dir, align 4
  %inc = add nsw i32 %13, 1
  store i32 %inc, i32* %dir, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  store i32 0, i32* %dir, align 4
  br label %for.cond15

for.cond15:                                       ; preds = %for.inc27, %for.end
  %14 = load i32* %dir, align 4
  %cmp16 = icmp sle i32 %14, 3
  br i1 %cmp16, label %for.body17, label %for.end29

for.body17:                                       ; preds = %for.cond15
  %15 = load i32* %dir, align 4
  %idxprom18 = sext i32 %15 to i64
  %arrayidx19 = getelementptr inbounds [4 x i32]* @squaresize, i32 0, i64 %idxprom18
  %16 = load i32* %arrayidx19, align 4
  %17 = load i32* %j, align 4
  %cmp20 = icmp eq i32 %16, %17
  br i1 %cmp20, label %land.lhs.true21, label %if.end26

land.lhs.true21:                                  ; preds = %for.body17
  %18 = load i32* %dir, align 4
  %idxprom22 = sext i32 %18 to i64
  %arrayidx23 = getelementptr inbounds [4 x i32]* @nsquares, i32 0, i64 %idxprom22
  %19 = load i32* %arrayidx23, align 4
  %cmp24 = icmp sgt i32 %19, 1
  br i1 %cmp24, label %if.then25, label %if.end26

if.then25:                                        ; preds = %land.lhs.true21
  br label %for.end29

if.end26:                                         ; preds = %land.lhs.true21, %for.body17
  br label %for.inc27

for.inc27:                                        ; preds = %if.end26
  %20 = load i32* %dir, align 4
  %inc28 = add nsw i32 %20, 1
  store i32 %inc28, i32* %dir, align 4
  br label %for.cond15

for.end29:                                        ; preds = %if.then25, %for.cond15
  %21 = load i32* %dir, align 4
  %cmp30 = icmp sgt i32 %21, 3
  br i1 %cmp30, label %if.then31, label %if.end43

if.then31:                                        ; preds = %for.end29
  store i32 0, i32* %dir, align 4
  br label %for.cond32

for.cond32:                                       ; preds = %for.inc40, %if.then31
  %22 = load i32* %dir, align 4
  %cmp33 = icmp sle i32 %22, 3
  br i1 %cmp33, label %for.body34, label %for.end42

for.body34:                                       ; preds = %for.cond32
  %23 = load i32* %dir, align 4
  %idxprom35 = sext i32 %23 to i64
  %arrayidx36 = getelementptr inbounds [4 x i32]* @squaresize, i32 0, i64 %idxprom35
  %24 = load i32* %arrayidx36, align 4
  %25 = load i32* %j, align 4
  %cmp37 = icmp eq i32 %24, %25
  br i1 %cmp37, label %if.then38, label %if.end39

if.then38:                                        ; preds = %for.body34
  br label %for.end42

if.end39:                                         ; preds = %for.body34
  br label %for.inc40

for.inc40:                                        ; preds = %if.end39
  %26 = load i32* %dir, align 4
  %inc41 = add nsw i32 %26, 1
  store i32 %inc41, i32* %dir, align 4
  br label %for.cond32

for.end42:                                        ; preds = %if.then38, %for.cond32
  br label %if.end43

if.end43:                                         ; preds = %for.end42, %for.end29
  %27 = load i32* %dir, align 4
  %cmp44 = icmp sgt i32 %27, 3
  br i1 %cmp44, label %if.then45, label %if.end51

if.then45:                                        ; preds = %if.end43
  %call46 = call i32 (...)* bitcast (i32 ()* @mynode to i32 (...)*)()
  %cmp47 = icmp eq i32 %call46, 0
  br i1 %cmp47, label %if.then48, label %if.end50

if.then48:                                        ; preds = %if.then45
  %call49 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([61 x i8]* @.str398, i32 0, i32 0))
  br label %if.end50

if.end50:                                         ; preds = %if.then48, %if.then45
  call void @terminate(i32 1)
  br label %if.end51

if.end51:                                         ; preds = %if.end50, %if.end43
  %28 = load i32* %i, align 4
  %mul = mul nsw i32 %28, 2
  store i32 %mul, i32* %i, align 4
  %29 = load i32* %dir, align 4
  %idxprom52 = sext i32 %29 to i64
  %arrayidx53 = getelementptr inbounds [4 x i32]* @squaresize, i32 0, i64 %idxprom52
  %30 = load i32* %arrayidx53, align 4
  %div = sdiv i32 %30, 2
  store i32 %div, i32* %arrayidx53, align 4
  %31 = load i32* %dir, align 4
  %idxprom54 = sext i32 %31 to i64
  %arrayidx55 = getelementptr inbounds [4 x i32]* @nsquares, i32 0, i64 %idxprom54
  %32 = load i32* %arrayidx55, align 4
  %mul56 = mul nsw i32 %32, 2
  store i32 %mul56, i32* %arrayidx55, align 4
  br label %while.cond

while.end:                                        ; preds = %while.cond
  %33 = load i32* getelementptr inbounds ([4 x i32]* @squaresize, i32 0, i64 0), align 4
  %34 = load i32* getelementptr inbounds ([4 x i32]* @squaresize, i32 0, i64 1), align 4
  %mul57 = mul nsw i32 %33, %34
  %35 = load i32* getelementptr inbounds ([4 x i32]* @squaresize, i32 0, i64 2), align 4
  %mul58 = mul nsw i32 %mul57, %35
  %36 = load i32* getelementptr inbounds ([4 x i32]* @squaresize, i32 0, i64 3), align 4
  %mul59 = mul nsw i32 %mul58, %36
  store i32 %mul59, i32* @sites_on_node, align 4
  %call60 = call i32 (...)* bitcast (i32 ()* @mynode to i32 (...)*)()
  %cmp61 = icmp eq i32 %call60, 0
  br i1 %cmp61, label %if.then62, label %if.end68

if.then62:                                        ; preds = %while.end
  %37 = load i32* @sites_on_node, align 4
  %rem63 = srem i32 %37, 2
  %cmp64 = icmp ne i32 %rem63, 0
  br i1 %cmp64, label %if.then65, label %if.end67

if.then65:                                        ; preds = %if.then62
  %call66 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([35 x i8]* @.str499, i32 0, i32 0))
  call void @terminate(i32 0)
  br label %if.end67

if.end67:                                         ; preds = %if.then65, %if.then62
  br label %if.end68

if.end68:                                         ; preds = %if.end67, %while.end
  %38 = load i32* @sites_on_node, align 4
  %div69 = sdiv i32 %38, 2
  store i32 %div69, i32* @odd_sites_on_node, align 4
  store i32 %div69, i32* @even_sites_on_node, align 4
  ret void
}

; Function Attrs: nounwind uwtable
define internal i32 @node_number(i32 %x, i32 %y, i32 %z, i32 %t) #0 {
entry:
  %x.addr = alloca i32, align 4
  %y.addr = alloca i32, align 4
  %z.addr = alloca i32, align 4
  %t.addr = alloca i32, align 4
  %i = alloca i32, align 4
  store i32 %x, i32* %x.addr, align 4
  store i32 %y, i32* %y.addr, align 4
  store i32 %z, i32* %z.addr, align 4
  store i32 %t, i32* %t.addr, align 4
  %0 = load i32* getelementptr inbounds ([4 x i32]* @squaresize, i32 0, i64 0), align 4
  %1 = load i32* %x.addr, align 4
  %div = sdiv i32 %1, %0
  store i32 %div, i32* %x.addr, align 4
  %2 = load i32* getelementptr inbounds ([4 x i32]* @squaresize, i32 0, i64 1), align 4
  %3 = load i32* %y.addr, align 4
  %div1 = sdiv i32 %3, %2
  store i32 %div1, i32* %y.addr, align 4
  %4 = load i32* getelementptr inbounds ([4 x i32]* @squaresize, i32 0, i64 2), align 4
  %5 = load i32* %z.addr, align 4
  %div2 = sdiv i32 %5, %4
  store i32 %div2, i32* %z.addr, align 4
  %6 = load i32* getelementptr inbounds ([4 x i32]* @squaresize, i32 0, i64 3), align 4
  %7 = load i32* %t.addr, align 4
  %div3 = sdiv i32 %7, %6
  store i32 %div3, i32* %t.addr, align 4
  %8 = load i32* %x.addr, align 4
  %9 = load i32* getelementptr inbounds ([4 x i32]* @nsquares, i32 0, i64 0), align 4
  %10 = load i32* %y.addr, align 4
  %11 = load i32* getelementptr inbounds ([4 x i32]* @nsquares, i32 0, i64 1), align 4
  %12 = load i32* %z.addr, align 4
  %13 = load i32* getelementptr inbounds ([4 x i32]* @nsquares, i32 0, i64 2), align 4
  %14 = load i32* %t.addr, align 4
  %mul = mul nsw i32 %13, %14
  %add = add nsw i32 %12, %mul
  %mul4 = mul nsw i32 %11, %add
  %add5 = add nsw i32 %10, %mul4
  %mul6 = mul nsw i32 %9, %add5
  %add7 = add nsw i32 %8, %mul6
  store i32 %add7, i32* %i, align 4
  %15 = load i32* %i, align 4
  ret i32 %15
}

; Function Attrs: nounwind uwtable
define internal i32 @node_index(i32 %x, i32 %y, i32 %z, i32 %t) #0 {
entry:
  %retval = alloca i32, align 4
  %x.addr = alloca i32, align 4
  %y.addr = alloca i32, align 4
  %z.addr = alloca i32, align 4
  %t.addr = alloca i32, align 4
  %i = alloca i32, align 4
  %xr = alloca i32, align 4
  %yr = alloca i32, align 4
  %zr = alloca i32, align 4
  %tr = alloca i32, align 4
  store i32 %x, i32* %x.addr, align 4
  store i32 %y, i32* %y.addr, align 4
  store i32 %z, i32* %z.addr, align 4
  store i32 %t, i32* %t.addr, align 4
  %0 = load i32* %x.addr, align 4
  %1 = load i32* getelementptr inbounds ([4 x i32]* @squaresize, i32 0, i64 0), align 4
  %rem = srem i32 %0, %1
  store i32 %rem, i32* %xr, align 4
  %2 = load i32* %y.addr, align 4
  %3 = load i32* getelementptr inbounds ([4 x i32]* @squaresize, i32 0, i64 1), align 4
  %rem1 = srem i32 %2, %3
  store i32 %rem1, i32* %yr, align 4
  %4 = load i32* %z.addr, align 4
  %5 = load i32* getelementptr inbounds ([4 x i32]* @squaresize, i32 0, i64 2), align 4
  %rem2 = srem i32 %4, %5
  store i32 %rem2, i32* %zr, align 4
  %6 = load i32* %t.addr, align 4
  %7 = load i32* getelementptr inbounds ([4 x i32]* @squaresize, i32 0, i64 3), align 4
  %rem3 = srem i32 %6, %7
  store i32 %rem3, i32* %tr, align 4
  %8 = load i32* %xr, align 4
  %9 = load i32* getelementptr inbounds ([4 x i32]* @squaresize, i32 0, i64 0), align 4
  %10 = load i32* %yr, align 4
  %11 = load i32* getelementptr inbounds ([4 x i32]* @squaresize, i32 0, i64 1), align 4
  %12 = load i32* %zr, align 4
  %13 = load i32* getelementptr inbounds ([4 x i32]* @squaresize, i32 0, i64 2), align 4
  %14 = load i32* %tr, align 4
  %mul = mul nsw i32 %13, %14
  %add = add nsw i32 %12, %mul
  %mul4 = mul nsw i32 %11, %add
  %add5 = add nsw i32 %10, %mul4
  %mul6 = mul nsw i32 %9, %add5
  %add7 = add nsw i32 %8, %mul6
  store i32 %add7, i32* %i, align 4
  %15 = load i32* %x.addr, align 4
  %16 = load i32* %y.addr, align 4
  %add8 = add nsw i32 %15, %16
  %17 = load i32* %z.addr, align 4
  %add9 = add nsw i32 %add8, %17
  %18 = load i32* %t.addr, align 4
  %add10 = add nsw i32 %add9, %18
  %rem11 = srem i32 %add10, 2
  %cmp = icmp eq i32 %rem11, 0
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  %19 = load i32* %i, align 4
  %div = sdiv i32 %19, 2
  store i32 %div, i32* %retval
  br label %return

if.else:                                          ; preds = %entry
  %20 = load i32* %i, align 4
  %21 = load i32* @sites_on_node, align 4
  %add12 = add nsw i32 %20, %21
  %div13 = sdiv i32 %add12, 2
  store i32 %div13, i32* %retval
  br label %return

return:                                           ; preds = %if.else, %if.then
  %22 = load i32* %retval
  ret i32 %22
}

; Function Attrs: nounwind uwtable
define internal i32 @num_sites(i32 %node) #0 {
entry:
  %node.addr = alloca i32, align 4
  store i32 %node, i32* %node.addr, align 4
  %0 = load i32* @sites_on_node, align 4
  ret i32 %0
}

; Function Attrs: nounwind uwtable
define internal double @check_unitarity() #0 {
entry:
  %i = alloca i32, align 4
  %dir = alloca i32, align 4
  %ii = alloca i32, align 4
  %jj = alloca i32, align 4
  %s = alloca %struct.site*, align 8
  %mat = alloca %struct.su3_matrix*, align 8
  %deviation = alloca double, align 8
  %max_deviation = alloca double, align 8
  %av_deviation = alloca double, align 8
  %ifval = alloca %union.anon, align 8
  store double 0.000000e+00, double* %av_deviation, align 8
  store double 0.000000e+00, double* %max_deviation, align 8
  store i32 0, i32* %i, align 4
  %0 = load %struct.site** @lattice, align 8
  store %struct.site* %0, %struct.site** %s, align 8
  br label %for.cond

for.cond:                                         ; preds = %for.inc67, %entry
  %1 = load i32* %i, align 4
  %2 = load i32* @sites_on_node, align 4
  %cmp = icmp slt i32 %1, %2
  br i1 %cmp, label %for.body, label %for.end69

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %dir, align 4
  br label %for.cond1

for.cond1:                                        ; preds = %for.inc64, %for.body
  %3 = load i32* %dir, align 4
  %cmp2 = icmp sle i32 %3, 3
  br i1 %cmp2, label %for.body3, label %for.end66

for.body3:                                        ; preds = %for.cond1
  %4 = load i32* %dir, align 4
  %idxprom = sext i32 %4 to i64
  %5 = load %struct.site** %s, align 8
  %link = getelementptr inbounds %struct.site* %5, i32 0, i32 8
  %arrayidx = getelementptr inbounds [4 x %struct.su3_matrix]* %link, i32 0, i64 %idxprom
  store %struct.su3_matrix* %arrayidx, %struct.su3_matrix** %mat, align 8
  %6 = load %struct.su3_matrix** %mat, align 8
  %call = call double @check_su3(%struct.su3_matrix* %6)
  store double %call, double* %deviation, align 8
  %7 = load double* %deviation, align 8
  %cmp4 = fcmp ogt double %7, 1.000000e-04
  br i1 %cmp4, label %if.then, label %if.end

if.then:                                          ; preds = %for.body3
  %call5 = call i32 (...)* bitcast (i32 ()* @mynode to i32 (...)*)()
  %8 = load i32* %i, align 4
  %9 = load i32* %dir, align 4
  %10 = load double* %deviation, align 8
  %call6 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([61 x i8]* @.str102, i32 0, i32 0), i32 %call5, i32 %8, i32 %9, double %10)
  %call7 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([13 x i8]* @.str1103, i32 0, i32 0))
  store i32 0, i32* %ii, align 4
  br label %for.cond8

for.cond8:                                        ; preds = %for.inc26, %if.then
  %11 = load i32* %ii, align 4
  %cmp9 = icmp sle i32 %11, 2
  br i1 %cmp9, label %for.body10, label %for.end28

for.body10:                                       ; preds = %for.cond8
  store i32 0, i32* %jj, align 4
  br label %for.cond11

for.cond11:                                       ; preds = %for.inc, %for.body10
  %12 = load i32* %jj, align 4
  %cmp12 = icmp sle i32 %12, 2
  br i1 %cmp12, label %for.body13, label %for.end

for.body13:                                       ; preds = %for.cond11
  %13 = load i32* %jj, align 4
  %idxprom14 = sext i32 %13 to i64
  %14 = load i32* %ii, align 4
  %idxprom15 = sext i32 %14 to i64
  %15 = load %struct.su3_matrix** %mat, align 8
  %e = getelementptr inbounds %struct.su3_matrix* %15, i32 0, i32 0
  %arrayidx16 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e, i32 0, i64 %idxprom15
  %arrayidx17 = getelementptr inbounds [3 x %struct.complex]* %arrayidx16, i32 0, i64 %idxprom14
  %real = getelementptr inbounds %struct.complex* %arrayidx17, i32 0, i32 0
  %16 = load double* %real, align 8
  %call18 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([4 x i8]* @.str2104, i32 0, i32 0), double %16)
  %17 = load i32* %jj, align 4
  %idxprom19 = sext i32 %17 to i64
  %18 = load i32* %ii, align 4
  %idxprom20 = sext i32 %18 to i64
  %19 = load %struct.su3_matrix** %mat, align 8
  %e21 = getelementptr inbounds %struct.su3_matrix* %19, i32 0, i32 0
  %arrayidx22 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e21, i32 0, i64 %idxprom20
  %arrayidx23 = getelementptr inbounds [3 x %struct.complex]* %arrayidx22, i32 0, i64 %idxprom19
  %imag = getelementptr inbounds %struct.complex* %arrayidx23, i32 0, i32 1
  %20 = load double* %imag, align 8
  %call24 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([4 x i8]* @.str2104, i32 0, i32 0), double %20)
  br label %for.inc

for.inc:                                          ; preds = %for.body13
  %21 = load i32* %jj, align 4
  %inc = add nsw i32 %21, 1
  store i32 %inc, i32* %jj, align 4
  br label %for.cond11

for.end:                                          ; preds = %for.cond11
  %call25 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([2 x i8]* @.str3105, i32 0, i32 0))
  br label %for.inc26

for.inc26:                                        ; preds = %for.end
  %22 = load i32* %ii, align 4
  %inc27 = add nsw i32 %22, 1
  store i32 %inc27, i32* %ii, align 4
  br label %for.cond8

for.end28:                                        ; preds = %for.cond8
  %call29 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([16 x i8]* @.str4106, i32 0, i32 0))
  store i32 0, i32* %ii, align 4
  br label %for.cond30

for.cond30:                                       ; preds = %for.inc56, %for.end28
  %23 = load i32* %ii, align 4
  %cmp31 = icmp sle i32 %23, 2
  br i1 %cmp31, label %for.body32, label %for.end58

for.body32:                                       ; preds = %for.cond30
  store i32 0, i32* %jj, align 4
  br label %for.cond33

for.cond33:                                       ; preds = %for.inc52, %for.body32
  %24 = load i32* %jj, align 4
  %cmp34 = icmp sle i32 %24, 2
  br i1 %cmp34, label %for.body35, label %for.end54

for.body35:                                       ; preds = %for.cond33
  %25 = load i32* %jj, align 4
  %idxprom36 = sext i32 %25 to i64
  %26 = load i32* %ii, align 4
  %idxprom37 = sext i32 %26 to i64
  %27 = load %struct.su3_matrix** %mat, align 8
  %e38 = getelementptr inbounds %struct.su3_matrix* %27, i32 0, i32 0
  %arrayidx39 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e38, i32 0, i64 %idxprom37
  %arrayidx40 = getelementptr inbounds [3 x %struct.complex]* %arrayidx39, i32 0, i64 %idxprom36
  %real41 = getelementptr inbounds %struct.complex* %arrayidx40, i32 0, i32 0
  %28 = load double* %real41, align 8
  %fval = bitcast %union.anon* %ifval to double*
  store double %28, double* %fval, align 8
  %ival = bitcast %union.anon* %ifval to i32*
  %29 = load i32* %ival, align 4
  %call42 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([6 x i8]* @.str5107, i32 0, i32 0), i32 %29)
  %30 = load i32* %jj, align 4
  %idxprom43 = sext i32 %30 to i64
  %31 = load i32* %ii, align 4
  %idxprom44 = sext i32 %31 to i64
  %32 = load %struct.su3_matrix** %mat, align 8
  %e45 = getelementptr inbounds %struct.su3_matrix* %32, i32 0, i32 0
  %arrayidx46 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e45, i32 0, i64 %idxprom44
  %arrayidx47 = getelementptr inbounds [3 x %struct.complex]* %arrayidx46, i32 0, i64 %idxprom43
  %imag48 = getelementptr inbounds %struct.complex* %arrayidx47, i32 0, i32 1
  %33 = load double* %imag48, align 8
  %fval49 = bitcast %union.anon* %ifval to double*
  store double %33, double* %fval49, align 8
  %ival50 = bitcast %union.anon* %ifval to i32*
  %34 = load i32* %ival50, align 4
  %call51 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([6 x i8]* @.str5107, i32 0, i32 0), i32 %34)
  br label %for.inc52

for.inc52:                                        ; preds = %for.body35
  %35 = load i32* %jj, align 4
  %inc53 = add nsw i32 %35, 1
  store i32 %inc53, i32* %jj, align 4
  br label %for.cond33

for.end54:                                        ; preds = %for.cond33
  %call55 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([2 x i8]* @.str3105, i32 0, i32 0))
  br label %for.inc56

for.inc56:                                        ; preds = %for.end54
  %36 = load i32* %ii, align 4
  %inc57 = add nsw i32 %36, 1
  store i32 %inc57, i32* %ii, align 4
  br label %for.cond30

for.end58:                                        ; preds = %for.cond30
  %call59 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([6 x i8]* @.str6108, i32 0, i32 0))
  %37 = load %struct._IO_FILE** @stdout, align 8
  %call60 = call i32 @fflush(%struct._IO_FILE* %37)
  call void @terminate(i32 1)
  br label %if.end

if.end:                                           ; preds = %for.end58, %for.body3
  %38 = load double* %max_deviation, align 8
  %39 = load double* %deviation, align 8
  %cmp61 = fcmp olt double %38, %39
  br i1 %cmp61, label %if.then62, label %if.end63

if.then62:                                        ; preds = %if.end
  %40 = load double* %deviation, align 8
  store double %40, double* %max_deviation, align 8
  br label %if.end63

if.end63:                                         ; preds = %if.then62, %if.end
  %41 = load double* %deviation, align 8
  %42 = load double* %deviation, align 8
  %mul = fmul double %41, %42
  %43 = load double* %av_deviation, align 8
  %add = fadd double %43, %mul
  store double %add, double* %av_deviation, align 8
  br label %for.inc64

for.inc64:                                        ; preds = %if.end63
  %44 = load i32* %dir, align 4
  %inc65 = add nsw i32 %44, 1
  store i32 %inc65, i32* %dir, align 4
  br label %for.cond1

for.end66:                                        ; preds = %for.cond1
  br label %for.inc67

for.inc67:                                        ; preds = %for.end66
  %45 = load i32* %i, align 4
  %inc68 = add nsw i32 %45, 1
  store i32 %inc68, i32* %i, align 4
  %46 = load %struct.site** %s, align 8
  %incdec.ptr = getelementptr inbounds %struct.site* %46, i32 1
  store %struct.site* %incdec.ptr, %struct.site** %s, align 8
  br label %for.cond

for.end69:                                        ; preds = %for.cond
  %47 = load double* %av_deviation, align 8
  %48 = load i32* %i, align 4
  %mul70 = mul nsw i32 4, %48
  %conv = sitofp i32 %mul70 to double
  %div = fdiv double %47, %conv
  %call71 = call double @sqrt(double %div) #2
  store double %call71, double* %av_deviation, align 8
  %49 = load double* %max_deviation, align 8
  %cmp72 = fcmp ogt double %49, 1.000000e-04
  br i1 %cmp72, label %if.then74, label %if.end77

if.then74:                                        ; preds = %for.end69
  %call75 = call i32 (...)* bitcast (i32 ()* @mynode to i32 (...)*)()
  %50 = load double* %max_deviation, align 8
  %call76 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([52 x i8]* @.str7109, i32 0, i32 0), i32 %call75, double %50)
  br label %if.end77

if.end77:                                         ; preds = %if.then74, %for.end69
  %51 = load double* %max_deviation, align 8
  ret double %51
}

; Function Attrs: nounwind uwtable
define internal double @check_su3(%struct.su3_matrix* %c) #0 {
entry:
  %c.addr = alloca %struct.su3_matrix*, align 8
  %ar = alloca double, align 8
  %ai = alloca double, align 8
  %ari = alloca double, align 8
  %max = alloca double, align 8
  %i = alloca i32, align 4
  store %struct.su3_matrix* %c, %struct.su3_matrix** %c.addr, align 8
  store i32 0, i32* %i, align 4
  store double 0.000000e+00, double* %max, align 8
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32* %i, align 4
  %cmp = icmp slt i32 %0, 3
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %1 = load i32* %i, align 4
  %idxprom = sext i32 %1 to i64
  %2 = load %struct.su3_matrix** %c.addr, align 8
  %e = getelementptr inbounds %struct.su3_matrix* %2, i32 0, i32 0
  %arrayidx = getelementptr inbounds [3 x [3 x %struct.complex]]* %e, i32 0, i64 %idxprom
  %arrayidx1 = getelementptr inbounds [3 x %struct.complex]* %arrayidx, i32 0, i64 0
  %real = getelementptr inbounds %struct.complex* %arrayidx1, i32 0, i32 0
  %3 = load double* %real, align 8
  %4 = load i32* %i, align 4
  %idxprom2 = sext i32 %4 to i64
  %5 = load %struct.su3_matrix** %c.addr, align 8
  %e3 = getelementptr inbounds %struct.su3_matrix* %5, i32 0, i32 0
  %arrayidx4 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e3, i32 0, i64 %idxprom2
  %arrayidx5 = getelementptr inbounds [3 x %struct.complex]* %arrayidx4, i32 0, i64 0
  %real6 = getelementptr inbounds %struct.complex* %arrayidx5, i32 0, i32 0
  %6 = load double* %real6, align 8
  %mul = fmul double %3, %6
  %7 = load i32* %i, align 4
  %idxprom7 = sext i32 %7 to i64
  %8 = load %struct.su3_matrix** %c.addr, align 8
  %e8 = getelementptr inbounds %struct.su3_matrix* %8, i32 0, i32 0
  %arrayidx9 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e8, i32 0, i64 %idxprom7
  %arrayidx10 = getelementptr inbounds [3 x %struct.complex]* %arrayidx9, i32 0, i64 0
  %imag = getelementptr inbounds %struct.complex* %arrayidx10, i32 0, i32 1
  %9 = load double* %imag, align 8
  %10 = load i32* %i, align 4
  %idxprom11 = sext i32 %10 to i64
  %11 = load %struct.su3_matrix** %c.addr, align 8
  %e12 = getelementptr inbounds %struct.su3_matrix* %11, i32 0, i32 0
  %arrayidx13 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e12, i32 0, i64 %idxprom11
  %arrayidx14 = getelementptr inbounds [3 x %struct.complex]* %arrayidx13, i32 0, i64 0
  %imag15 = getelementptr inbounds %struct.complex* %arrayidx14, i32 0, i32 1
  %12 = load double* %imag15, align 8
  %mul16 = fmul double %9, %12
  %add = fadd double %mul, %mul16
  %13 = load i32* %i, align 4
  %idxprom17 = sext i32 %13 to i64
  %14 = load %struct.su3_matrix** %c.addr, align 8
  %e18 = getelementptr inbounds %struct.su3_matrix* %14, i32 0, i32 0
  %arrayidx19 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e18, i32 0, i64 %idxprom17
  %arrayidx20 = getelementptr inbounds [3 x %struct.complex]* %arrayidx19, i32 0, i64 1
  %real21 = getelementptr inbounds %struct.complex* %arrayidx20, i32 0, i32 0
  %15 = load double* %real21, align 8
  %16 = load i32* %i, align 4
  %idxprom22 = sext i32 %16 to i64
  %17 = load %struct.su3_matrix** %c.addr, align 8
  %e23 = getelementptr inbounds %struct.su3_matrix* %17, i32 0, i32 0
  %arrayidx24 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e23, i32 0, i64 %idxprom22
  %arrayidx25 = getelementptr inbounds [3 x %struct.complex]* %arrayidx24, i32 0, i64 1
  %real26 = getelementptr inbounds %struct.complex* %arrayidx25, i32 0, i32 0
  %18 = load double* %real26, align 8
  %mul27 = fmul double %15, %18
  %add28 = fadd double %add, %mul27
  %19 = load i32* %i, align 4
  %idxprom29 = sext i32 %19 to i64
  %20 = load %struct.su3_matrix** %c.addr, align 8
  %e30 = getelementptr inbounds %struct.su3_matrix* %20, i32 0, i32 0
  %arrayidx31 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e30, i32 0, i64 %idxprom29
  %arrayidx32 = getelementptr inbounds [3 x %struct.complex]* %arrayidx31, i32 0, i64 1
  %imag33 = getelementptr inbounds %struct.complex* %arrayidx32, i32 0, i32 1
  %21 = load double* %imag33, align 8
  %22 = load i32* %i, align 4
  %idxprom34 = sext i32 %22 to i64
  %23 = load %struct.su3_matrix** %c.addr, align 8
  %e35 = getelementptr inbounds %struct.su3_matrix* %23, i32 0, i32 0
  %arrayidx36 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e35, i32 0, i64 %idxprom34
  %arrayidx37 = getelementptr inbounds [3 x %struct.complex]* %arrayidx36, i32 0, i64 1
  %imag38 = getelementptr inbounds %struct.complex* %arrayidx37, i32 0, i32 1
  %24 = load double* %imag38, align 8
  %mul39 = fmul double %21, %24
  %add40 = fadd double %add28, %mul39
  %25 = load i32* %i, align 4
  %idxprom41 = sext i32 %25 to i64
  %26 = load %struct.su3_matrix** %c.addr, align 8
  %e42 = getelementptr inbounds %struct.su3_matrix* %26, i32 0, i32 0
  %arrayidx43 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e42, i32 0, i64 %idxprom41
  %arrayidx44 = getelementptr inbounds [3 x %struct.complex]* %arrayidx43, i32 0, i64 2
  %real45 = getelementptr inbounds %struct.complex* %arrayidx44, i32 0, i32 0
  %27 = load double* %real45, align 8
  %28 = load i32* %i, align 4
  %idxprom46 = sext i32 %28 to i64
  %29 = load %struct.su3_matrix** %c.addr, align 8
  %e47 = getelementptr inbounds %struct.su3_matrix* %29, i32 0, i32 0
  %arrayidx48 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e47, i32 0, i64 %idxprom46
  %arrayidx49 = getelementptr inbounds [3 x %struct.complex]* %arrayidx48, i32 0, i64 2
  %real50 = getelementptr inbounds %struct.complex* %arrayidx49, i32 0, i32 0
  %30 = load double* %real50, align 8
  %mul51 = fmul double %27, %30
  %add52 = fadd double %add40, %mul51
  %31 = load i32* %i, align 4
  %idxprom53 = sext i32 %31 to i64
  %32 = load %struct.su3_matrix** %c.addr, align 8
  %e54 = getelementptr inbounds %struct.su3_matrix* %32, i32 0, i32 0
  %arrayidx55 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e54, i32 0, i64 %idxprom53
  %arrayidx56 = getelementptr inbounds [3 x %struct.complex]* %arrayidx55, i32 0, i64 2
  %imag57 = getelementptr inbounds %struct.complex* %arrayidx56, i32 0, i32 1
  %33 = load double* %imag57, align 8
  %34 = load i32* %i, align 4
  %idxprom58 = sext i32 %34 to i64
  %35 = load %struct.su3_matrix** %c.addr, align 8
  %e59 = getelementptr inbounds %struct.su3_matrix* %35, i32 0, i32 0
  %arrayidx60 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e59, i32 0, i64 %idxprom58
  %arrayidx61 = getelementptr inbounds [3 x %struct.complex]* %arrayidx60, i32 0, i64 2
  %imag62 = getelementptr inbounds %struct.complex* %arrayidx61, i32 0, i32 1
  %36 = load double* %imag62, align 8
  %mul63 = fmul double %33, %36
  %add64 = fadd double %add52, %mul63
  store double %add64, double* %ar, align 8
  %37 = load double* %ar, align 8
  %call = call double @sqrt(double %37) #2
  %sub = fsub double %call, 1.000000e+00
  %call65 = call double @fabs(double %sub) #8
  store double %call65, double* %ar, align 8
  %38 = load double* %max, align 8
  %39 = load double* %ar, align 8
  %cmp66 = fcmp olt double %38, %39
  br i1 %cmp66, label %if.then, label %if.end

if.then:                                          ; preds = %for.body
  %40 = load double* %ar, align 8
  store double %40, double* %max, align 8
  br label %if.end

if.end:                                           ; preds = %if.then, %for.body
  br label %for.inc

for.inc:                                          ; preds = %if.end
  %41 = load i32* %i, align 4
  %inc = add nsw i32 %41, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %42 = load %struct.su3_matrix** %c.addr, align 8
  %e67 = getelementptr inbounds %struct.su3_matrix* %42, i32 0, i32 0
  %arrayidx68 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e67, i32 0, i64 0
  %arrayidx69 = getelementptr inbounds [3 x %struct.complex]* %arrayidx68, i32 0, i64 0
  %real70 = getelementptr inbounds %struct.complex* %arrayidx69, i32 0, i32 0
  %43 = load double* %real70, align 8
  %44 = load %struct.su3_matrix** %c.addr, align 8
  %e71 = getelementptr inbounds %struct.su3_matrix* %44, i32 0, i32 0
  %arrayidx72 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e71, i32 0, i64 1
  %arrayidx73 = getelementptr inbounds [3 x %struct.complex]* %arrayidx72, i32 0, i64 0
  %real74 = getelementptr inbounds %struct.complex* %arrayidx73, i32 0, i32 0
  %45 = load double* %real74, align 8
  %mul75 = fmul double %43, %45
  %46 = load %struct.su3_matrix** %c.addr, align 8
  %e76 = getelementptr inbounds %struct.su3_matrix* %46, i32 0, i32 0
  %arrayidx77 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e76, i32 0, i64 0
  %arrayidx78 = getelementptr inbounds [3 x %struct.complex]* %arrayidx77, i32 0, i64 0
  %imag79 = getelementptr inbounds %struct.complex* %arrayidx78, i32 0, i32 1
  %47 = load double* %imag79, align 8
  %48 = load %struct.su3_matrix** %c.addr, align 8
  %e80 = getelementptr inbounds %struct.su3_matrix* %48, i32 0, i32 0
  %arrayidx81 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e80, i32 0, i64 1
  %arrayidx82 = getelementptr inbounds [3 x %struct.complex]* %arrayidx81, i32 0, i64 0
  %imag83 = getelementptr inbounds %struct.complex* %arrayidx82, i32 0, i32 1
  %49 = load double* %imag83, align 8
  %mul84 = fmul double %47, %49
  %add85 = fadd double %mul75, %mul84
  %50 = load %struct.su3_matrix** %c.addr, align 8
  %e86 = getelementptr inbounds %struct.su3_matrix* %50, i32 0, i32 0
  %arrayidx87 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e86, i32 0, i64 0
  %arrayidx88 = getelementptr inbounds [3 x %struct.complex]* %arrayidx87, i32 0, i64 1
  %real89 = getelementptr inbounds %struct.complex* %arrayidx88, i32 0, i32 0
  %51 = load double* %real89, align 8
  %52 = load %struct.su3_matrix** %c.addr, align 8
  %e90 = getelementptr inbounds %struct.su3_matrix* %52, i32 0, i32 0
  %arrayidx91 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e90, i32 0, i64 1
  %arrayidx92 = getelementptr inbounds [3 x %struct.complex]* %arrayidx91, i32 0, i64 1
  %real93 = getelementptr inbounds %struct.complex* %arrayidx92, i32 0, i32 0
  %53 = load double* %real93, align 8
  %mul94 = fmul double %51, %53
  %add95 = fadd double %add85, %mul94
  %54 = load %struct.su3_matrix** %c.addr, align 8
  %e96 = getelementptr inbounds %struct.su3_matrix* %54, i32 0, i32 0
  %arrayidx97 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e96, i32 0, i64 0
  %arrayidx98 = getelementptr inbounds [3 x %struct.complex]* %arrayidx97, i32 0, i64 1
  %imag99 = getelementptr inbounds %struct.complex* %arrayidx98, i32 0, i32 1
  %55 = load double* %imag99, align 8
  %56 = load %struct.su3_matrix** %c.addr, align 8
  %e100 = getelementptr inbounds %struct.su3_matrix* %56, i32 0, i32 0
  %arrayidx101 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e100, i32 0, i64 1
  %arrayidx102 = getelementptr inbounds [3 x %struct.complex]* %arrayidx101, i32 0, i64 1
  %imag103 = getelementptr inbounds %struct.complex* %arrayidx102, i32 0, i32 1
  %57 = load double* %imag103, align 8
  %mul104 = fmul double %55, %57
  %add105 = fadd double %add95, %mul104
  %58 = load %struct.su3_matrix** %c.addr, align 8
  %e106 = getelementptr inbounds %struct.su3_matrix* %58, i32 0, i32 0
  %arrayidx107 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e106, i32 0, i64 0
  %arrayidx108 = getelementptr inbounds [3 x %struct.complex]* %arrayidx107, i32 0, i64 2
  %real109 = getelementptr inbounds %struct.complex* %arrayidx108, i32 0, i32 0
  %59 = load double* %real109, align 8
  %60 = load %struct.su3_matrix** %c.addr, align 8
  %e110 = getelementptr inbounds %struct.su3_matrix* %60, i32 0, i32 0
  %arrayidx111 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e110, i32 0, i64 1
  %arrayidx112 = getelementptr inbounds [3 x %struct.complex]* %arrayidx111, i32 0, i64 2
  %real113 = getelementptr inbounds %struct.complex* %arrayidx112, i32 0, i32 0
  %61 = load double* %real113, align 8
  %mul114 = fmul double %59, %61
  %add115 = fadd double %add105, %mul114
  %62 = load %struct.su3_matrix** %c.addr, align 8
  %e116 = getelementptr inbounds %struct.su3_matrix* %62, i32 0, i32 0
  %arrayidx117 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e116, i32 0, i64 0
  %arrayidx118 = getelementptr inbounds [3 x %struct.complex]* %arrayidx117, i32 0, i64 2
  %imag119 = getelementptr inbounds %struct.complex* %arrayidx118, i32 0, i32 1
  %63 = load double* %imag119, align 8
  %64 = load %struct.su3_matrix** %c.addr, align 8
  %e120 = getelementptr inbounds %struct.su3_matrix* %64, i32 0, i32 0
  %arrayidx121 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e120, i32 0, i64 1
  %arrayidx122 = getelementptr inbounds [3 x %struct.complex]* %arrayidx121, i32 0, i64 2
  %imag123 = getelementptr inbounds %struct.complex* %arrayidx122, i32 0, i32 1
  %65 = load double* %imag123, align 8
  %mul124 = fmul double %63, %65
  %add125 = fadd double %add115, %mul124
  store double %add125, double* %ar, align 8
  %66 = load %struct.su3_matrix** %c.addr, align 8
  %e126 = getelementptr inbounds %struct.su3_matrix* %66, i32 0, i32 0
  %arrayidx127 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e126, i32 0, i64 0
  %arrayidx128 = getelementptr inbounds [3 x %struct.complex]* %arrayidx127, i32 0, i64 0
  %real129 = getelementptr inbounds %struct.complex* %arrayidx128, i32 0, i32 0
  %67 = load double* %real129, align 8
  %68 = load %struct.su3_matrix** %c.addr, align 8
  %e130 = getelementptr inbounds %struct.su3_matrix* %68, i32 0, i32 0
  %arrayidx131 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e130, i32 0, i64 1
  %arrayidx132 = getelementptr inbounds [3 x %struct.complex]* %arrayidx131, i32 0, i64 0
  %imag133 = getelementptr inbounds %struct.complex* %arrayidx132, i32 0, i32 1
  %69 = load double* %imag133, align 8
  %mul134 = fmul double %67, %69
  %70 = load %struct.su3_matrix** %c.addr, align 8
  %e135 = getelementptr inbounds %struct.su3_matrix* %70, i32 0, i32 0
  %arrayidx136 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e135, i32 0, i64 0
  %arrayidx137 = getelementptr inbounds [3 x %struct.complex]* %arrayidx136, i32 0, i64 0
  %imag138 = getelementptr inbounds %struct.complex* %arrayidx137, i32 0, i32 1
  %71 = load double* %imag138, align 8
  %72 = load %struct.su3_matrix** %c.addr, align 8
  %e139 = getelementptr inbounds %struct.su3_matrix* %72, i32 0, i32 0
  %arrayidx140 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e139, i32 0, i64 1
  %arrayidx141 = getelementptr inbounds [3 x %struct.complex]* %arrayidx140, i32 0, i64 0
  %real142 = getelementptr inbounds %struct.complex* %arrayidx141, i32 0, i32 0
  %73 = load double* %real142, align 8
  %mul143 = fmul double %71, %73
  %sub144 = fsub double %mul134, %mul143
  %74 = load %struct.su3_matrix** %c.addr, align 8
  %e145 = getelementptr inbounds %struct.su3_matrix* %74, i32 0, i32 0
  %arrayidx146 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e145, i32 0, i64 0
  %arrayidx147 = getelementptr inbounds [3 x %struct.complex]* %arrayidx146, i32 0, i64 1
  %real148 = getelementptr inbounds %struct.complex* %arrayidx147, i32 0, i32 0
  %75 = load double* %real148, align 8
  %76 = load %struct.su3_matrix** %c.addr, align 8
  %e149 = getelementptr inbounds %struct.su3_matrix* %76, i32 0, i32 0
  %arrayidx150 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e149, i32 0, i64 1
  %arrayidx151 = getelementptr inbounds [3 x %struct.complex]* %arrayidx150, i32 0, i64 1
  %imag152 = getelementptr inbounds %struct.complex* %arrayidx151, i32 0, i32 1
  %77 = load double* %imag152, align 8
  %mul153 = fmul double %75, %77
  %add154 = fadd double %sub144, %mul153
  %78 = load %struct.su3_matrix** %c.addr, align 8
  %e155 = getelementptr inbounds %struct.su3_matrix* %78, i32 0, i32 0
  %arrayidx156 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e155, i32 0, i64 0
  %arrayidx157 = getelementptr inbounds [3 x %struct.complex]* %arrayidx156, i32 0, i64 1
  %imag158 = getelementptr inbounds %struct.complex* %arrayidx157, i32 0, i32 1
  %79 = load double* %imag158, align 8
  %80 = load %struct.su3_matrix** %c.addr, align 8
  %e159 = getelementptr inbounds %struct.su3_matrix* %80, i32 0, i32 0
  %arrayidx160 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e159, i32 0, i64 1
  %arrayidx161 = getelementptr inbounds [3 x %struct.complex]* %arrayidx160, i32 0, i64 1
  %real162 = getelementptr inbounds %struct.complex* %arrayidx161, i32 0, i32 0
  %81 = load double* %real162, align 8
  %mul163 = fmul double %79, %81
  %sub164 = fsub double %add154, %mul163
  %82 = load %struct.su3_matrix** %c.addr, align 8
  %e165 = getelementptr inbounds %struct.su3_matrix* %82, i32 0, i32 0
  %arrayidx166 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e165, i32 0, i64 0
  %arrayidx167 = getelementptr inbounds [3 x %struct.complex]* %arrayidx166, i32 0, i64 2
  %real168 = getelementptr inbounds %struct.complex* %arrayidx167, i32 0, i32 0
  %83 = load double* %real168, align 8
  %84 = load %struct.su3_matrix** %c.addr, align 8
  %e169 = getelementptr inbounds %struct.su3_matrix* %84, i32 0, i32 0
  %arrayidx170 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e169, i32 0, i64 1
  %arrayidx171 = getelementptr inbounds [3 x %struct.complex]* %arrayidx170, i32 0, i64 2
  %imag172 = getelementptr inbounds %struct.complex* %arrayidx171, i32 0, i32 1
  %85 = load double* %imag172, align 8
  %mul173 = fmul double %83, %85
  %add174 = fadd double %sub164, %mul173
  %86 = load %struct.su3_matrix** %c.addr, align 8
  %e175 = getelementptr inbounds %struct.su3_matrix* %86, i32 0, i32 0
  %arrayidx176 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e175, i32 0, i64 0
  %arrayidx177 = getelementptr inbounds [3 x %struct.complex]* %arrayidx176, i32 0, i64 2
  %imag178 = getelementptr inbounds %struct.complex* %arrayidx177, i32 0, i32 1
  %87 = load double* %imag178, align 8
  %88 = load %struct.su3_matrix** %c.addr, align 8
  %e179 = getelementptr inbounds %struct.su3_matrix* %88, i32 0, i32 0
  %arrayidx180 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e179, i32 0, i64 1
  %arrayidx181 = getelementptr inbounds [3 x %struct.complex]* %arrayidx180, i32 0, i64 2
  %real182 = getelementptr inbounds %struct.complex* %arrayidx181, i32 0, i32 0
  %89 = load double* %real182, align 8
  %mul183 = fmul double %87, %89
  %sub184 = fsub double %add174, %mul183
  store double %sub184, double* %ai, align 8
  %90 = load double* %ar, align 8
  %91 = load double* %ar, align 8
  %mul185 = fmul double %90, %91
  %92 = load double* %ai, align 8
  %93 = load double* %ai, align 8
  %mul186 = fmul double %92, %93
  %add187 = fadd double %mul185, %mul186
  %call188 = call double @sqrt(double %add187) #2
  store double %call188, double* %ari, align 8
  %94 = load double* %max, align 8
  %95 = load double* %ari, align 8
  %cmp189 = fcmp olt double %94, %95
  br i1 %cmp189, label %if.then190, label %if.end191

if.then190:                                       ; preds = %for.end
  %96 = load double* %ari, align 8
  store double %96, double* %max, align 8
  br label %if.end191

if.end191:                                        ; preds = %if.then190, %for.end
  %97 = load %struct.su3_matrix** %c.addr, align 8
  %e192 = getelementptr inbounds %struct.su3_matrix* %97, i32 0, i32 0
  %arrayidx193 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e192, i32 0, i64 0
  %arrayidx194 = getelementptr inbounds [3 x %struct.complex]* %arrayidx193, i32 0, i64 0
  %real195 = getelementptr inbounds %struct.complex* %arrayidx194, i32 0, i32 0
  %98 = load double* %real195, align 8
  %99 = load %struct.su3_matrix** %c.addr, align 8
  %e196 = getelementptr inbounds %struct.su3_matrix* %99, i32 0, i32 0
  %arrayidx197 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e196, i32 0, i64 2
  %arrayidx198 = getelementptr inbounds [3 x %struct.complex]* %arrayidx197, i32 0, i64 0
  %real199 = getelementptr inbounds %struct.complex* %arrayidx198, i32 0, i32 0
  %100 = load double* %real199, align 8
  %mul200 = fmul double %98, %100
  %101 = load %struct.su3_matrix** %c.addr, align 8
  %e201 = getelementptr inbounds %struct.su3_matrix* %101, i32 0, i32 0
  %arrayidx202 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e201, i32 0, i64 0
  %arrayidx203 = getelementptr inbounds [3 x %struct.complex]* %arrayidx202, i32 0, i64 0
  %imag204 = getelementptr inbounds %struct.complex* %arrayidx203, i32 0, i32 1
  %102 = load double* %imag204, align 8
  %103 = load %struct.su3_matrix** %c.addr, align 8
  %e205 = getelementptr inbounds %struct.su3_matrix* %103, i32 0, i32 0
  %arrayidx206 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e205, i32 0, i64 2
  %arrayidx207 = getelementptr inbounds [3 x %struct.complex]* %arrayidx206, i32 0, i64 0
  %imag208 = getelementptr inbounds %struct.complex* %arrayidx207, i32 0, i32 1
  %104 = load double* %imag208, align 8
  %mul209 = fmul double %102, %104
  %add210 = fadd double %mul200, %mul209
  %105 = load %struct.su3_matrix** %c.addr, align 8
  %e211 = getelementptr inbounds %struct.su3_matrix* %105, i32 0, i32 0
  %arrayidx212 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e211, i32 0, i64 0
  %arrayidx213 = getelementptr inbounds [3 x %struct.complex]* %arrayidx212, i32 0, i64 1
  %real214 = getelementptr inbounds %struct.complex* %arrayidx213, i32 0, i32 0
  %106 = load double* %real214, align 8
  %107 = load %struct.su3_matrix** %c.addr, align 8
  %e215 = getelementptr inbounds %struct.su3_matrix* %107, i32 0, i32 0
  %arrayidx216 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e215, i32 0, i64 2
  %arrayidx217 = getelementptr inbounds [3 x %struct.complex]* %arrayidx216, i32 0, i64 1
  %real218 = getelementptr inbounds %struct.complex* %arrayidx217, i32 0, i32 0
  %108 = load double* %real218, align 8
  %mul219 = fmul double %106, %108
  %add220 = fadd double %add210, %mul219
  %109 = load %struct.su3_matrix** %c.addr, align 8
  %e221 = getelementptr inbounds %struct.su3_matrix* %109, i32 0, i32 0
  %arrayidx222 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e221, i32 0, i64 0
  %arrayidx223 = getelementptr inbounds [3 x %struct.complex]* %arrayidx222, i32 0, i64 1
  %imag224 = getelementptr inbounds %struct.complex* %arrayidx223, i32 0, i32 1
  %110 = load double* %imag224, align 8
  %111 = load %struct.su3_matrix** %c.addr, align 8
  %e225 = getelementptr inbounds %struct.su3_matrix* %111, i32 0, i32 0
  %arrayidx226 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e225, i32 0, i64 2
  %arrayidx227 = getelementptr inbounds [3 x %struct.complex]* %arrayidx226, i32 0, i64 1
  %imag228 = getelementptr inbounds %struct.complex* %arrayidx227, i32 0, i32 1
  %112 = load double* %imag228, align 8
  %mul229 = fmul double %110, %112
  %add230 = fadd double %add220, %mul229
  %113 = load %struct.su3_matrix** %c.addr, align 8
  %e231 = getelementptr inbounds %struct.su3_matrix* %113, i32 0, i32 0
  %arrayidx232 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e231, i32 0, i64 0
  %arrayidx233 = getelementptr inbounds [3 x %struct.complex]* %arrayidx232, i32 0, i64 2
  %real234 = getelementptr inbounds %struct.complex* %arrayidx233, i32 0, i32 0
  %114 = load double* %real234, align 8
  %115 = load %struct.su3_matrix** %c.addr, align 8
  %e235 = getelementptr inbounds %struct.su3_matrix* %115, i32 0, i32 0
  %arrayidx236 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e235, i32 0, i64 2
  %arrayidx237 = getelementptr inbounds [3 x %struct.complex]* %arrayidx236, i32 0, i64 2
  %real238 = getelementptr inbounds %struct.complex* %arrayidx237, i32 0, i32 0
  %116 = load double* %real238, align 8
  %mul239 = fmul double %114, %116
  %add240 = fadd double %add230, %mul239
  %117 = load %struct.su3_matrix** %c.addr, align 8
  %e241 = getelementptr inbounds %struct.su3_matrix* %117, i32 0, i32 0
  %arrayidx242 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e241, i32 0, i64 0
  %arrayidx243 = getelementptr inbounds [3 x %struct.complex]* %arrayidx242, i32 0, i64 2
  %imag244 = getelementptr inbounds %struct.complex* %arrayidx243, i32 0, i32 1
  %118 = load double* %imag244, align 8
  %119 = load %struct.su3_matrix** %c.addr, align 8
  %e245 = getelementptr inbounds %struct.su3_matrix* %119, i32 0, i32 0
  %arrayidx246 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e245, i32 0, i64 2
  %arrayidx247 = getelementptr inbounds [3 x %struct.complex]* %arrayidx246, i32 0, i64 2
  %imag248 = getelementptr inbounds %struct.complex* %arrayidx247, i32 0, i32 1
  %120 = load double* %imag248, align 8
  %mul249 = fmul double %118, %120
  %add250 = fadd double %add240, %mul249
  store double %add250, double* %ar, align 8
  %121 = load %struct.su3_matrix** %c.addr, align 8
  %e251 = getelementptr inbounds %struct.su3_matrix* %121, i32 0, i32 0
  %arrayidx252 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e251, i32 0, i64 0
  %arrayidx253 = getelementptr inbounds [3 x %struct.complex]* %arrayidx252, i32 0, i64 0
  %real254 = getelementptr inbounds %struct.complex* %arrayidx253, i32 0, i32 0
  %122 = load double* %real254, align 8
  %123 = load %struct.su3_matrix** %c.addr, align 8
  %e255 = getelementptr inbounds %struct.su3_matrix* %123, i32 0, i32 0
  %arrayidx256 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e255, i32 0, i64 2
  %arrayidx257 = getelementptr inbounds [3 x %struct.complex]* %arrayidx256, i32 0, i64 0
  %imag258 = getelementptr inbounds %struct.complex* %arrayidx257, i32 0, i32 1
  %124 = load double* %imag258, align 8
  %mul259 = fmul double %122, %124
  %125 = load %struct.su3_matrix** %c.addr, align 8
  %e260 = getelementptr inbounds %struct.su3_matrix* %125, i32 0, i32 0
  %arrayidx261 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e260, i32 0, i64 0
  %arrayidx262 = getelementptr inbounds [3 x %struct.complex]* %arrayidx261, i32 0, i64 0
  %imag263 = getelementptr inbounds %struct.complex* %arrayidx262, i32 0, i32 1
  %126 = load double* %imag263, align 8
  %127 = load %struct.su3_matrix** %c.addr, align 8
  %e264 = getelementptr inbounds %struct.su3_matrix* %127, i32 0, i32 0
  %arrayidx265 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e264, i32 0, i64 2
  %arrayidx266 = getelementptr inbounds [3 x %struct.complex]* %arrayidx265, i32 0, i64 0
  %real267 = getelementptr inbounds %struct.complex* %arrayidx266, i32 0, i32 0
  %128 = load double* %real267, align 8
  %mul268 = fmul double %126, %128
  %sub269 = fsub double %mul259, %mul268
  %129 = load %struct.su3_matrix** %c.addr, align 8
  %e270 = getelementptr inbounds %struct.su3_matrix* %129, i32 0, i32 0
  %arrayidx271 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e270, i32 0, i64 0
  %arrayidx272 = getelementptr inbounds [3 x %struct.complex]* %arrayidx271, i32 0, i64 1
  %real273 = getelementptr inbounds %struct.complex* %arrayidx272, i32 0, i32 0
  %130 = load double* %real273, align 8
  %131 = load %struct.su3_matrix** %c.addr, align 8
  %e274 = getelementptr inbounds %struct.su3_matrix* %131, i32 0, i32 0
  %arrayidx275 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e274, i32 0, i64 2
  %arrayidx276 = getelementptr inbounds [3 x %struct.complex]* %arrayidx275, i32 0, i64 1
  %imag277 = getelementptr inbounds %struct.complex* %arrayidx276, i32 0, i32 1
  %132 = load double* %imag277, align 8
  %mul278 = fmul double %130, %132
  %add279 = fadd double %sub269, %mul278
  %133 = load %struct.su3_matrix** %c.addr, align 8
  %e280 = getelementptr inbounds %struct.su3_matrix* %133, i32 0, i32 0
  %arrayidx281 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e280, i32 0, i64 0
  %arrayidx282 = getelementptr inbounds [3 x %struct.complex]* %arrayidx281, i32 0, i64 1
  %imag283 = getelementptr inbounds %struct.complex* %arrayidx282, i32 0, i32 1
  %134 = load double* %imag283, align 8
  %135 = load %struct.su3_matrix** %c.addr, align 8
  %e284 = getelementptr inbounds %struct.su3_matrix* %135, i32 0, i32 0
  %arrayidx285 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e284, i32 0, i64 2
  %arrayidx286 = getelementptr inbounds [3 x %struct.complex]* %arrayidx285, i32 0, i64 1
  %real287 = getelementptr inbounds %struct.complex* %arrayidx286, i32 0, i32 0
  %136 = load double* %real287, align 8
  %mul288 = fmul double %134, %136
  %sub289 = fsub double %add279, %mul288
  %137 = load %struct.su3_matrix** %c.addr, align 8
  %e290 = getelementptr inbounds %struct.su3_matrix* %137, i32 0, i32 0
  %arrayidx291 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e290, i32 0, i64 0
  %arrayidx292 = getelementptr inbounds [3 x %struct.complex]* %arrayidx291, i32 0, i64 2
  %real293 = getelementptr inbounds %struct.complex* %arrayidx292, i32 0, i32 0
  %138 = load double* %real293, align 8
  %139 = load %struct.su3_matrix** %c.addr, align 8
  %e294 = getelementptr inbounds %struct.su3_matrix* %139, i32 0, i32 0
  %arrayidx295 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e294, i32 0, i64 2
  %arrayidx296 = getelementptr inbounds [3 x %struct.complex]* %arrayidx295, i32 0, i64 2
  %imag297 = getelementptr inbounds %struct.complex* %arrayidx296, i32 0, i32 1
  %140 = load double* %imag297, align 8
  %mul298 = fmul double %138, %140
  %add299 = fadd double %sub289, %mul298
  %141 = load %struct.su3_matrix** %c.addr, align 8
  %e300 = getelementptr inbounds %struct.su3_matrix* %141, i32 0, i32 0
  %arrayidx301 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e300, i32 0, i64 0
  %arrayidx302 = getelementptr inbounds [3 x %struct.complex]* %arrayidx301, i32 0, i64 2
  %imag303 = getelementptr inbounds %struct.complex* %arrayidx302, i32 0, i32 1
  %142 = load double* %imag303, align 8
  %143 = load %struct.su3_matrix** %c.addr, align 8
  %e304 = getelementptr inbounds %struct.su3_matrix* %143, i32 0, i32 0
  %arrayidx305 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e304, i32 0, i64 2
  %arrayidx306 = getelementptr inbounds [3 x %struct.complex]* %arrayidx305, i32 0, i64 2
  %real307 = getelementptr inbounds %struct.complex* %arrayidx306, i32 0, i32 0
  %144 = load double* %real307, align 8
  %mul308 = fmul double %142, %144
  %sub309 = fsub double %add299, %mul308
  store double %sub309, double* %ai, align 8
  %145 = load double* %ar, align 8
  %146 = load double* %ar, align 8
  %mul310 = fmul double %145, %146
  %147 = load double* %ai, align 8
  %148 = load double* %ai, align 8
  %mul311 = fmul double %147, %148
  %add312 = fadd double %mul310, %mul311
  %call313 = call double @sqrt(double %add312) #2
  store double %call313, double* %ari, align 8
  %149 = load double* %max, align 8
  %150 = load double* %ari, align 8
  %cmp314 = fcmp olt double %149, %150
  br i1 %cmp314, label %if.then315, label %if.end316

if.then315:                                       ; preds = %if.end191
  %151 = load double* %ari, align 8
  store double %151, double* %max, align 8
  br label %if.end316

if.end316:                                        ; preds = %if.then315, %if.end191
  %152 = load %struct.su3_matrix** %c.addr, align 8
  %e317 = getelementptr inbounds %struct.su3_matrix* %152, i32 0, i32 0
  %arrayidx318 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e317, i32 0, i64 1
  %arrayidx319 = getelementptr inbounds [3 x %struct.complex]* %arrayidx318, i32 0, i64 0
  %real320 = getelementptr inbounds %struct.complex* %arrayidx319, i32 0, i32 0
  %153 = load double* %real320, align 8
  %154 = load %struct.su3_matrix** %c.addr, align 8
  %e321 = getelementptr inbounds %struct.su3_matrix* %154, i32 0, i32 0
  %arrayidx322 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e321, i32 0, i64 2
  %arrayidx323 = getelementptr inbounds [3 x %struct.complex]* %arrayidx322, i32 0, i64 0
  %real324 = getelementptr inbounds %struct.complex* %arrayidx323, i32 0, i32 0
  %155 = load double* %real324, align 8
  %mul325 = fmul double %153, %155
  %156 = load %struct.su3_matrix** %c.addr, align 8
  %e326 = getelementptr inbounds %struct.su3_matrix* %156, i32 0, i32 0
  %arrayidx327 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e326, i32 0, i64 1
  %arrayidx328 = getelementptr inbounds [3 x %struct.complex]* %arrayidx327, i32 0, i64 0
  %imag329 = getelementptr inbounds %struct.complex* %arrayidx328, i32 0, i32 1
  %157 = load double* %imag329, align 8
  %158 = load %struct.su3_matrix** %c.addr, align 8
  %e330 = getelementptr inbounds %struct.su3_matrix* %158, i32 0, i32 0
  %arrayidx331 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e330, i32 0, i64 2
  %arrayidx332 = getelementptr inbounds [3 x %struct.complex]* %arrayidx331, i32 0, i64 0
  %imag333 = getelementptr inbounds %struct.complex* %arrayidx332, i32 0, i32 1
  %159 = load double* %imag333, align 8
  %mul334 = fmul double %157, %159
  %add335 = fadd double %mul325, %mul334
  %160 = load %struct.su3_matrix** %c.addr, align 8
  %e336 = getelementptr inbounds %struct.su3_matrix* %160, i32 0, i32 0
  %arrayidx337 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e336, i32 0, i64 1
  %arrayidx338 = getelementptr inbounds [3 x %struct.complex]* %arrayidx337, i32 0, i64 1
  %real339 = getelementptr inbounds %struct.complex* %arrayidx338, i32 0, i32 0
  %161 = load double* %real339, align 8
  %162 = load %struct.su3_matrix** %c.addr, align 8
  %e340 = getelementptr inbounds %struct.su3_matrix* %162, i32 0, i32 0
  %arrayidx341 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e340, i32 0, i64 2
  %arrayidx342 = getelementptr inbounds [3 x %struct.complex]* %arrayidx341, i32 0, i64 1
  %real343 = getelementptr inbounds %struct.complex* %arrayidx342, i32 0, i32 0
  %163 = load double* %real343, align 8
  %mul344 = fmul double %161, %163
  %add345 = fadd double %add335, %mul344
  %164 = load %struct.su3_matrix** %c.addr, align 8
  %e346 = getelementptr inbounds %struct.su3_matrix* %164, i32 0, i32 0
  %arrayidx347 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e346, i32 0, i64 1
  %arrayidx348 = getelementptr inbounds [3 x %struct.complex]* %arrayidx347, i32 0, i64 1
  %imag349 = getelementptr inbounds %struct.complex* %arrayidx348, i32 0, i32 1
  %165 = load double* %imag349, align 8
  %166 = load %struct.su3_matrix** %c.addr, align 8
  %e350 = getelementptr inbounds %struct.su3_matrix* %166, i32 0, i32 0
  %arrayidx351 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e350, i32 0, i64 2
  %arrayidx352 = getelementptr inbounds [3 x %struct.complex]* %arrayidx351, i32 0, i64 1
  %imag353 = getelementptr inbounds %struct.complex* %arrayidx352, i32 0, i32 1
  %167 = load double* %imag353, align 8
  %mul354 = fmul double %165, %167
  %add355 = fadd double %add345, %mul354
  %168 = load %struct.su3_matrix** %c.addr, align 8
  %e356 = getelementptr inbounds %struct.su3_matrix* %168, i32 0, i32 0
  %arrayidx357 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e356, i32 0, i64 1
  %arrayidx358 = getelementptr inbounds [3 x %struct.complex]* %arrayidx357, i32 0, i64 2
  %real359 = getelementptr inbounds %struct.complex* %arrayidx358, i32 0, i32 0
  %169 = load double* %real359, align 8
  %170 = load %struct.su3_matrix** %c.addr, align 8
  %e360 = getelementptr inbounds %struct.su3_matrix* %170, i32 0, i32 0
  %arrayidx361 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e360, i32 0, i64 2
  %arrayidx362 = getelementptr inbounds [3 x %struct.complex]* %arrayidx361, i32 0, i64 2
  %real363 = getelementptr inbounds %struct.complex* %arrayidx362, i32 0, i32 0
  %171 = load double* %real363, align 8
  %mul364 = fmul double %169, %171
  %add365 = fadd double %add355, %mul364
  %172 = load %struct.su3_matrix** %c.addr, align 8
  %e366 = getelementptr inbounds %struct.su3_matrix* %172, i32 0, i32 0
  %arrayidx367 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e366, i32 0, i64 1
  %arrayidx368 = getelementptr inbounds [3 x %struct.complex]* %arrayidx367, i32 0, i64 2
  %imag369 = getelementptr inbounds %struct.complex* %arrayidx368, i32 0, i32 1
  %173 = load double* %imag369, align 8
  %174 = load %struct.su3_matrix** %c.addr, align 8
  %e370 = getelementptr inbounds %struct.su3_matrix* %174, i32 0, i32 0
  %arrayidx371 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e370, i32 0, i64 2
  %arrayidx372 = getelementptr inbounds [3 x %struct.complex]* %arrayidx371, i32 0, i64 2
  %imag373 = getelementptr inbounds %struct.complex* %arrayidx372, i32 0, i32 1
  %175 = load double* %imag373, align 8
  %mul374 = fmul double %173, %175
  %add375 = fadd double %add365, %mul374
  store double %add375, double* %ar, align 8
  %176 = load %struct.su3_matrix** %c.addr, align 8
  %e376 = getelementptr inbounds %struct.su3_matrix* %176, i32 0, i32 0
  %arrayidx377 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e376, i32 0, i64 1
  %arrayidx378 = getelementptr inbounds [3 x %struct.complex]* %arrayidx377, i32 0, i64 0
  %real379 = getelementptr inbounds %struct.complex* %arrayidx378, i32 0, i32 0
  %177 = load double* %real379, align 8
  %178 = load %struct.su3_matrix** %c.addr, align 8
  %e380 = getelementptr inbounds %struct.su3_matrix* %178, i32 0, i32 0
  %arrayidx381 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e380, i32 0, i64 2
  %arrayidx382 = getelementptr inbounds [3 x %struct.complex]* %arrayidx381, i32 0, i64 0
  %imag383 = getelementptr inbounds %struct.complex* %arrayidx382, i32 0, i32 1
  %179 = load double* %imag383, align 8
  %mul384 = fmul double %177, %179
  %180 = load %struct.su3_matrix** %c.addr, align 8
  %e385 = getelementptr inbounds %struct.su3_matrix* %180, i32 0, i32 0
  %arrayidx386 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e385, i32 0, i64 1
  %arrayidx387 = getelementptr inbounds [3 x %struct.complex]* %arrayidx386, i32 0, i64 0
  %imag388 = getelementptr inbounds %struct.complex* %arrayidx387, i32 0, i32 1
  %181 = load double* %imag388, align 8
  %182 = load %struct.su3_matrix** %c.addr, align 8
  %e389 = getelementptr inbounds %struct.su3_matrix* %182, i32 0, i32 0
  %arrayidx390 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e389, i32 0, i64 2
  %arrayidx391 = getelementptr inbounds [3 x %struct.complex]* %arrayidx390, i32 0, i64 0
  %real392 = getelementptr inbounds %struct.complex* %arrayidx391, i32 0, i32 0
  %183 = load double* %real392, align 8
  %mul393 = fmul double %181, %183
  %sub394 = fsub double %mul384, %mul393
  %184 = load %struct.su3_matrix** %c.addr, align 8
  %e395 = getelementptr inbounds %struct.su3_matrix* %184, i32 0, i32 0
  %arrayidx396 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e395, i32 0, i64 1
  %arrayidx397 = getelementptr inbounds [3 x %struct.complex]* %arrayidx396, i32 0, i64 1
  %real398 = getelementptr inbounds %struct.complex* %arrayidx397, i32 0, i32 0
  %185 = load double* %real398, align 8
  %186 = load %struct.su3_matrix** %c.addr, align 8
  %e399 = getelementptr inbounds %struct.su3_matrix* %186, i32 0, i32 0
  %arrayidx400 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e399, i32 0, i64 2
  %arrayidx401 = getelementptr inbounds [3 x %struct.complex]* %arrayidx400, i32 0, i64 1
  %imag402 = getelementptr inbounds %struct.complex* %arrayidx401, i32 0, i32 1
  %187 = load double* %imag402, align 8
  %mul403 = fmul double %185, %187
  %add404 = fadd double %sub394, %mul403
  %188 = load %struct.su3_matrix** %c.addr, align 8
  %e405 = getelementptr inbounds %struct.su3_matrix* %188, i32 0, i32 0
  %arrayidx406 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e405, i32 0, i64 1
  %arrayidx407 = getelementptr inbounds [3 x %struct.complex]* %arrayidx406, i32 0, i64 1
  %imag408 = getelementptr inbounds %struct.complex* %arrayidx407, i32 0, i32 1
  %189 = load double* %imag408, align 8
  %190 = load %struct.su3_matrix** %c.addr, align 8
  %e409 = getelementptr inbounds %struct.su3_matrix* %190, i32 0, i32 0
  %arrayidx410 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e409, i32 0, i64 2
  %arrayidx411 = getelementptr inbounds [3 x %struct.complex]* %arrayidx410, i32 0, i64 1
  %real412 = getelementptr inbounds %struct.complex* %arrayidx411, i32 0, i32 0
  %191 = load double* %real412, align 8
  %mul413 = fmul double %189, %191
  %sub414 = fsub double %add404, %mul413
  %192 = load %struct.su3_matrix** %c.addr, align 8
  %e415 = getelementptr inbounds %struct.su3_matrix* %192, i32 0, i32 0
  %arrayidx416 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e415, i32 0, i64 1
  %arrayidx417 = getelementptr inbounds [3 x %struct.complex]* %arrayidx416, i32 0, i64 2
  %real418 = getelementptr inbounds %struct.complex* %arrayidx417, i32 0, i32 0
  %193 = load double* %real418, align 8
  %194 = load %struct.su3_matrix** %c.addr, align 8
  %e419 = getelementptr inbounds %struct.su3_matrix* %194, i32 0, i32 0
  %arrayidx420 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e419, i32 0, i64 2
  %arrayidx421 = getelementptr inbounds [3 x %struct.complex]* %arrayidx420, i32 0, i64 2
  %imag422 = getelementptr inbounds %struct.complex* %arrayidx421, i32 0, i32 1
  %195 = load double* %imag422, align 8
  %mul423 = fmul double %193, %195
  %add424 = fadd double %sub414, %mul423
  %196 = load %struct.su3_matrix** %c.addr, align 8
  %e425 = getelementptr inbounds %struct.su3_matrix* %196, i32 0, i32 0
  %arrayidx426 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e425, i32 0, i64 1
  %arrayidx427 = getelementptr inbounds [3 x %struct.complex]* %arrayidx426, i32 0, i64 2
  %imag428 = getelementptr inbounds %struct.complex* %arrayidx427, i32 0, i32 1
  %197 = load double* %imag428, align 8
  %198 = load %struct.su3_matrix** %c.addr, align 8
  %e429 = getelementptr inbounds %struct.su3_matrix* %198, i32 0, i32 0
  %arrayidx430 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e429, i32 0, i64 2
  %arrayidx431 = getelementptr inbounds [3 x %struct.complex]* %arrayidx430, i32 0, i64 2
  %real432 = getelementptr inbounds %struct.complex* %arrayidx431, i32 0, i32 0
  %199 = load double* %real432, align 8
  %mul433 = fmul double %197, %199
  %sub434 = fsub double %add424, %mul433
  store double %sub434, double* %ai, align 8
  %200 = load double* %ar, align 8
  %201 = load double* %ar, align 8
  %mul435 = fmul double %200, %201
  %202 = load double* %ai, align 8
  %203 = load double* %ai, align 8
  %mul436 = fmul double %202, %203
  %add437 = fadd double %mul435, %mul436
  %call438 = call double @sqrt(double %add437) #2
  store double %call438, double* %ari, align 8
  %204 = load double* %max, align 8
  %205 = load double* %ari, align 8
  %cmp439 = fcmp olt double %204, %205
  br i1 %cmp439, label %if.then440, label %if.end441

if.then440:                                       ; preds = %if.end316
  %206 = load double* %ari, align 8
  store double %206, double* %max, align 8
  br label %if.end441

if.end441:                                        ; preds = %if.then440, %if.end316
  %207 = load double* %max, align 8
  ret double %207
}

; Function Attrs: nounwind
declare double @sqrt(double) #3

; Function Attrs: nounwind readnone
declare double @fabs(double) #5

; Function Attrs: nounwind uwtable
define internal void @d_plaquette(double* %ss_plaq, double* %st_plaq) #0 {
entry:
  %ss_plaq.addr = alloca double*, align 8
  %st_plaq.addr = alloca double*, align 8
  %su3mat = alloca %struct.su3_matrix*, align 8
  %i = alloca i32, align 4
  %dir1 = alloca i32, align 4
  %dir2 = alloca i32, align 4
  %s = alloca %struct.site*, align 8
  %m1 = alloca %struct.su3_matrix*, align 8
  %m4 = alloca %struct.su3_matrix*, align 8
  %mtmp = alloca %struct.su3_matrix, align 8
  %ss_sum = alloca double, align 8
  %st_sum = alloca double, align 8
  %mtag0 = alloca %struct.msg_tag*, align 8
  %mtag1 = alloca %struct.msg_tag*, align 8
  store double* %ss_plaq, double** %ss_plaq.addr, align 8
  store double* %st_plaq, double** %st_plaq.addr, align 8
  store double 0.000000e+00, double* %st_sum, align 8
  store double 0.000000e+00, double* %ss_sum, align 8
  %0 = load i32* @sites_on_node, align 4
  %conv = sext i32 %0 to i64
  %call = call noalias i8* @calloc(i64 %conv, i64 144) #2
  %1 = bitcast i8* %call to %struct.su3_matrix*
  store %struct.su3_matrix* %1, %struct.su3_matrix** %su3mat, align 8
  %2 = load %struct.su3_matrix** %su3mat, align 8
  %cmp = icmp eq %struct.su3_matrix* %2, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %call2 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([32 x i8]* @.str110, i32 0, i32 0))
  %3 = load %struct._IO_FILE** @stdout, align 8
  %call3 = call i32 @fflush(%struct._IO_FILE* %3)
  call void @terminate(i32 1)
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  store i32 1, i32* %dir1, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc62, %if.end
  %4 = load i32* %dir1, align 4
  %cmp4 = icmp sle i32 %4, 3
  br i1 %cmp4, label %for.body, label %for.end64

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %dir2, align 4
  br label %for.cond6

for.cond6:                                        ; preds = %for.inc59, %for.body
  %5 = load i32* %dir2, align 4
  %6 = load i32* %dir1, align 4
  %cmp7 = icmp slt i32 %5, %6
  br i1 %cmp7, label %for.body9, label %for.end61

for.body9:                                        ; preds = %for.cond6
  %7 = load i32* %dir2, align 4
  %idxprom = sext i32 %7 to i64
  %8 = load %struct.site** @lattice, align 8
  %arrayidx = getelementptr inbounds %struct.site* %8, i64 0
  %link = getelementptr inbounds %struct.site* %arrayidx, i32 0, i32 8
  %arrayidx10 = getelementptr inbounds [4 x %struct.su3_matrix]* %link, i32 0, i64 %idxprom
  %9 = bitcast %struct.su3_matrix* %arrayidx10 to i8*
  %10 = load %struct.site** @lattice, align 8
  %arrayidx11 = getelementptr inbounds %struct.site* %10, i64 0
  %11 = bitcast %struct.site* %arrayidx11 to i8*
  %sub.ptr.lhs.cast = ptrtoint i8* %9 to i64
  %sub.ptr.rhs.cast = ptrtoint i8* %11 to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %conv12 = trunc i64 %sub.ptr.sub to i32
  %12 = load i32* %dir1, align 4
  %13 = load i8*** getelementptr inbounds ([16 x i8**]* @gen_pt, i32 0, i64 0), align 8
  %call13 = call %struct.msg_tag* @start_gather(i32 %conv12, i32 144, i32 %12, i32 3, i8** %13)
  store %struct.msg_tag* %call13, %struct.msg_tag** %mtag0, align 8
  %14 = load i32* %dir1, align 4
  %idxprom14 = sext i32 %14 to i64
  %15 = load %struct.site** @lattice, align 8
  %arrayidx15 = getelementptr inbounds %struct.site* %15, i64 0
  %link16 = getelementptr inbounds %struct.site* %arrayidx15, i32 0, i32 8
  %arrayidx17 = getelementptr inbounds [4 x %struct.su3_matrix]* %link16, i32 0, i64 %idxprom14
  %16 = bitcast %struct.su3_matrix* %arrayidx17 to i8*
  %17 = load %struct.site** @lattice, align 8
  %arrayidx18 = getelementptr inbounds %struct.site* %17, i64 0
  %18 = bitcast %struct.site* %arrayidx18 to i8*
  %sub.ptr.lhs.cast19 = ptrtoint i8* %16 to i64
  %sub.ptr.rhs.cast20 = ptrtoint i8* %18 to i64
  %sub.ptr.sub21 = sub i64 %sub.ptr.lhs.cast19, %sub.ptr.rhs.cast20
  %conv22 = trunc i64 %sub.ptr.sub21 to i32
  %19 = load i32* %dir2, align 4
  %20 = load i8*** getelementptr inbounds ([16 x i8**]* @gen_pt, i32 0, i64 1), align 8
  %call23 = call %struct.msg_tag* @start_gather(i32 %conv22, i32 144, i32 %19, i32 3, i8** %20)
  store %struct.msg_tag* %call23, %struct.msg_tag** %mtag1, align 8
  store i32 0, i32* %i, align 4
  %21 = load %struct.site** @lattice, align 8
  store %struct.site* %21, %struct.site** %s, align 8
  br label %for.cond24

for.cond24:                                       ; preds = %for.inc, %for.body9
  %22 = load i32* %i, align 4
  %23 = load i32* @sites_on_node, align 4
  %cmp25 = icmp slt i32 %22, %23
  br i1 %cmp25, label %for.body27, label %for.end

for.body27:                                       ; preds = %for.cond24
  %24 = load i32* %dir1, align 4
  %idxprom28 = sext i32 %24 to i64
  %25 = load %struct.site** %s, align 8
  %link29 = getelementptr inbounds %struct.site* %25, i32 0, i32 8
  %arrayidx30 = getelementptr inbounds [4 x %struct.su3_matrix]* %link29, i32 0, i64 %idxprom28
  store %struct.su3_matrix* %arrayidx30, %struct.su3_matrix** %m1, align 8
  %26 = load i32* %dir2, align 4
  %idxprom31 = sext i32 %26 to i64
  %27 = load %struct.site** %s, align 8
  %link32 = getelementptr inbounds %struct.site* %27, i32 0, i32 8
  %arrayidx33 = getelementptr inbounds [4 x %struct.su3_matrix]* %link32, i32 0, i64 %idxprom31
  store %struct.su3_matrix* %arrayidx33, %struct.su3_matrix** %m4, align 8
  %28 = load %struct.su3_matrix** %m4, align 8
  %29 = load %struct.su3_matrix** %m1, align 8
  %30 = load i32* %i, align 4
  %idxprom34 = sext i32 %30 to i64
  %31 = load %struct.su3_matrix** %su3mat, align 8
  %arrayidx35 = getelementptr inbounds %struct.su3_matrix* %31, i64 %idxprom34
  call void @mult_su3_an(%struct.su3_matrix* %28, %struct.su3_matrix* %29, %struct.su3_matrix* %arrayidx35)
  br label %for.inc

for.inc:                                          ; preds = %for.body27
  %32 = load i32* %i, align 4
  %inc = add nsw i32 %32, 1
  store i32 %inc, i32* %i, align 4
  %33 = load %struct.site** %s, align 8
  %incdec.ptr = getelementptr inbounds %struct.site* %33, i32 1
  store %struct.site* %incdec.ptr, %struct.site** %s, align 8
  br label %for.cond24

for.end:                                          ; preds = %for.cond24
  %34 = load %struct.msg_tag** %mtag0, align 8
  call void @wait_gather(%struct.msg_tag* %34)
  %35 = load %struct.msg_tag** %mtag1, align 8
  call void @wait_gather(%struct.msg_tag* %35)
  store i32 0, i32* %i, align 4
  %36 = load %struct.site** @lattice, align 8
  store %struct.site* %36, %struct.site** %s, align 8
  br label %for.cond36

for.cond36:                                       ; preds = %for.inc55, %for.end
  %37 = load i32* %i, align 4
  %38 = load i32* @sites_on_node, align 4
  %cmp37 = icmp slt i32 %37, %38
  br i1 %cmp37, label %for.body39, label %for.end58

for.body39:                                       ; preds = %for.cond36
  %39 = load i32* %i, align 4
  %idxprom40 = sext i32 %39 to i64
  %40 = load %struct.su3_matrix** %su3mat, align 8
  %arrayidx41 = getelementptr inbounds %struct.su3_matrix* %40, i64 %idxprom40
  %41 = load i32* %i, align 4
  %idxprom42 = sext i32 %41 to i64
  %42 = load i8*** getelementptr inbounds ([16 x i8**]* @gen_pt, i32 0, i64 0), align 8
  %arrayidx43 = getelementptr inbounds i8** %42, i64 %idxprom42
  %43 = load i8** %arrayidx43, align 8
  %44 = bitcast i8* %43 to %struct.su3_matrix*
  call void @mult_su3_nn(%struct.su3_matrix* %arrayidx41, %struct.su3_matrix* %44, %struct.su3_matrix* %mtmp)
  %45 = load i32* %dir1, align 4
  %cmp44 = icmp eq i32 %45, 3
  br i1 %cmp44, label %if.then46, label %if.else

if.then46:                                        ; preds = %for.body39
  %46 = load i32* %i, align 4
  %idxprom47 = sext i32 %46 to i64
  %47 = load i8*** getelementptr inbounds ([16 x i8**]* @gen_pt, i32 0, i64 1), align 8
  %arrayidx48 = getelementptr inbounds i8** %47, i64 %idxprom47
  %48 = load i8** %arrayidx48, align 8
  %49 = bitcast i8* %48 to %struct.su3_matrix*
  %call49 = call double @realtrace_su3(%struct.su3_matrix* %49, %struct.su3_matrix* %mtmp)
  %50 = load double* %st_sum, align 8
  %add = fadd double %50, %call49
  store double %add, double* %st_sum, align 8
  br label %if.end54

if.else:                                          ; preds = %for.body39
  %51 = load i32* %i, align 4
  %idxprom50 = sext i32 %51 to i64
  %52 = load i8*** getelementptr inbounds ([16 x i8**]* @gen_pt, i32 0, i64 1), align 8
  %arrayidx51 = getelementptr inbounds i8** %52, i64 %idxprom50
  %53 = load i8** %arrayidx51, align 8
  %54 = bitcast i8* %53 to %struct.su3_matrix*
  %call52 = call double @realtrace_su3(%struct.su3_matrix* %54, %struct.su3_matrix* %mtmp)
  %55 = load double* %ss_sum, align 8
  %add53 = fadd double %55, %call52
  store double %add53, double* %ss_sum, align 8
  br label %if.end54

if.end54:                                         ; preds = %if.else, %if.then46
  br label %for.inc55

for.inc55:                                        ; preds = %if.end54
  %56 = load i32* %i, align 4
  %inc56 = add nsw i32 %56, 1
  store i32 %inc56, i32* %i, align 4
  %57 = load %struct.site** %s, align 8
  %incdec.ptr57 = getelementptr inbounds %struct.site* %57, i32 1
  store %struct.site* %incdec.ptr57, %struct.site** %s, align 8
  br label %for.cond36

for.end58:                                        ; preds = %for.cond36
  %58 = load %struct.msg_tag** %mtag0, align 8
  call void @cleanup_gather(%struct.msg_tag* %58)
  %59 = load %struct.msg_tag** %mtag1, align 8
  call void @cleanup_gather(%struct.msg_tag* %59)
  br label %for.inc59

for.inc59:                                        ; preds = %for.end58
  %60 = load i32* %dir2, align 4
  %inc60 = add nsw i32 %60, 1
  store i32 %inc60, i32* %dir2, align 4
  br label %for.cond6

for.end61:                                        ; preds = %for.cond6
  br label %for.inc62

for.inc62:                                        ; preds = %for.end61
  %61 = load i32* %dir1, align 4
  %inc63 = add nsw i32 %61, 1
  store i32 %inc63, i32* %dir1, align 4
  br label %for.cond

for.end64:                                        ; preds = %for.cond
  call void @g_doublesum(double* %ss_sum)
  call void @g_doublesum(double* %st_sum)
  %62 = load double* %ss_sum, align 8
  %63 = load i32* @nx, align 4
  %mul = mul nsw i32 3, %63
  %64 = load i32* @ny, align 4
  %mul65 = mul nsw i32 %mul, %64
  %65 = load i32* @nz, align 4
  %mul66 = mul nsw i32 %mul65, %65
  %66 = load i32* @nt, align 4
  %mul67 = mul nsw i32 %mul66, %66
  %conv68 = sitofp i32 %mul67 to double
  %div = fdiv double %62, %conv68
  %67 = load double** %ss_plaq.addr, align 8
  store double %div, double* %67, align 8
  %68 = load double* %st_sum, align 8
  %69 = load i32* @nx, align 4
  %mul69 = mul nsw i32 3, %69
  %70 = load i32* @ny, align 4
  %mul70 = mul nsw i32 %mul69, %70
  %71 = load i32* @nz, align 4
  %mul71 = mul nsw i32 %mul70, %71
  %72 = load i32* @nt, align 4
  %mul72 = mul nsw i32 %mul71, %72
  %conv73 = sitofp i32 %mul72 to double
  %div74 = fdiv double %68, %conv73
  %73 = load double** %st_plaq.addr, align 8
  store double %div74, double* %73, align 8
  %74 = load %struct.su3_matrix** %su3mat, align 8
  %75 = bitcast %struct.su3_matrix* %74 to i8*
  call void @free(i8* %75) #2
  ret void
}

; Function Attrs: nounwind
declare noalias i8* @calloc(i64, i64) #3

; Function Attrs: nounwind
declare void @free(i8*) #3

; Function Attrs: nounwind uwtable
define internal void @accum_gauge_hit(i32 %gauge_dir, i32 %parity) #0 {
entry:
  %gauge_dir.addr = alloca i32, align 4
  %parity.addr = alloca i32, align 4
  %j = alloca i32, align 4
  %m1 = alloca %struct.su3_matrix*, align 8
  %m2 = alloca %struct.su3_matrix*, align 8
  %dir = alloca i32, align 4
  %i = alloca i32, align 4
  %s = alloca %struct.site*, align 8
  store i32 %gauge_dir, i32* %gauge_dir.addr, align 4
  store i32 %parity, i32* %parity.addr, align 4
  %0 = load i32* %parity.addr, align 4
  %cmp = icmp eq i32 %0, 1
  br i1 %cmp, label %cond.true, label %cond.false

cond.true:                                        ; preds = %entry
  %1 = load i32* @even_sites_on_node, align 4
  br label %cond.end

cond.false:                                       ; preds = %entry
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %1, %cond.true ], [ 0, %cond.false ]
  store i32 %cond, i32* %i, align 4
  %2 = load i32* %i, align 4
  %idxprom = sext i32 %2 to i64
  %3 = load %struct.site** @lattice, align 8
  %arrayidx = getelementptr inbounds %struct.site* %3, i64 %idxprom
  store %struct.site* %arrayidx, %struct.site** %s, align 8
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %cond.end
  %4 = load i32* %i, align 4
  %5 = load i32* %parity.addr, align 4
  %cmp1 = icmp eq i32 %5, 2
  br i1 %cmp1, label %cond.true2, label %cond.false3

cond.true2:                                       ; preds = %for.cond
  %6 = load i32* @even_sites_on_node, align 4
  br label %cond.end4

cond.false3:                                      ; preds = %for.cond
  %7 = load i32* @sites_on_node, align 4
  br label %cond.end4

cond.end4:                                        ; preds = %cond.false3, %cond.true2
  %cond5 = phi i32 [ %6, %cond.true2 ], [ %7, %cond.false3 ]
  %cmp6 = icmp slt i32 %4, %cond5
  br i1 %cmp6, label %for.body, label %for.end

for.body:                                         ; preds = %cond.end4
  %8 = load i32* @diffmat_offset, align 4
  %cmp7 = icmp sge i32 %8, 0
  br i1 %cmp7, label %if.then, label %if.else

if.then:                                          ; preds = %for.body
  %9 = load %struct.site** %s, align 8
  %10 = bitcast %struct.site* %9 to i8*
  %11 = load i32* @diffmat_offset, align 4
  %idx.ext = sext i32 %11 to i64
  %add.ptr = getelementptr inbounds i8* %10, i64 %idx.ext
  %12 = bitcast i8* %add.ptr to %struct.su3_matrix*
  call void @clear_su3mat(%struct.su3_matrix* %12)
  br label %if.end

if.else:                                          ; preds = %for.body
  %13 = load i32* %i, align 4
  %idxprom8 = sext i32 %13 to i64
  %14 = load %struct.su3_matrix** @diffmatp, align 8
  %arrayidx9 = getelementptr inbounds %struct.su3_matrix* %14, i64 %idxprom8
  call void @clear_su3mat(%struct.su3_matrix* %arrayidx9)
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %15 = load i32* @sumvec_offset, align 4
  %cmp10 = icmp sge i32 %15, 0
  br i1 %cmp10, label %if.then11, label %if.else14

if.then11:                                        ; preds = %if.end
  %16 = load %struct.site** %s, align 8
  %17 = bitcast %struct.site* %16 to i8*
  %18 = load i32* @sumvec_offset, align 4
  %idx.ext12 = sext i32 %18 to i64
  %add.ptr13 = getelementptr inbounds i8* %17, i64 %idx.ext12
  %19 = bitcast i8* %add.ptr13 to %struct.su3_vector*
  call void @clearvec(%struct.su3_vector* %19)
  br label %if.end17

if.else14:                                        ; preds = %if.end
  %20 = load i32* %i, align 4
  %idxprom15 = sext i32 %20 to i64
  %21 = load %struct.su3_vector** @sumvecp, align 8
  %arrayidx16 = getelementptr inbounds %struct.su3_vector* %21, i64 %idxprom15
  call void @clearvec(%struct.su3_vector* %arrayidx16)
  br label %if.end17

if.end17:                                         ; preds = %if.else14, %if.then11
  br label %for.inc

for.inc:                                          ; preds = %if.end17
  %22 = load i32* %i, align 4
  %inc = add nsw i32 %22, 1
  store i32 %inc, i32* %i, align 4
  %23 = load %struct.site** %s, align 8
  %incdec.ptr = getelementptr inbounds %struct.site* %23, i32 1
  store %struct.site* %incdec.ptr, %struct.site** %s, align 8
  br label %for.cond

for.end:                                          ; preds = %cond.end4
  %24 = load i32* %parity.addr, align 4
  %cmp18 = icmp eq i32 %24, 1
  br i1 %cmp18, label %cond.true19, label %cond.false20

cond.true19:                                      ; preds = %for.end
  %25 = load i32* @even_sites_on_node, align 4
  br label %cond.end21

cond.false20:                                     ; preds = %for.end
  br label %cond.end21

cond.end21:                                       ; preds = %cond.false20, %cond.true19
  %cond22 = phi i32 [ %25, %cond.true19 ], [ 0, %cond.false20 ]
  store i32 %cond22, i32* %i, align 4
  %26 = load i32* %i, align 4
  %idxprom23 = sext i32 %26 to i64
  %27 = load %struct.site** @lattice, align 8
  %arrayidx24 = getelementptr inbounds %struct.site* %27, i64 %idxprom23
  store %struct.site* %arrayidx24, %struct.site** %s, align 8
  br label %for.cond25

for.cond25:                                       ; preds = %for.inc119, %cond.end21
  %28 = load i32* %i, align 4
  %29 = load i32* %parity.addr, align 4
  %cmp26 = icmp eq i32 %29, 2
  br i1 %cmp26, label %cond.true27, label %cond.false28

cond.true27:                                      ; preds = %for.cond25
  %30 = load i32* @even_sites_on_node, align 4
  br label %cond.end29

cond.false28:                                     ; preds = %for.cond25
  %31 = load i32* @sites_on_node, align 4
  br label %cond.end29

cond.end29:                                       ; preds = %cond.false28, %cond.true27
  %cond30 = phi i32 [ %30, %cond.true27 ], [ %31, %cond.false28 ]
  %cmp31 = icmp slt i32 %28, %cond30
  br i1 %cmp31, label %for.body32, label %for.end122

for.body32:                                       ; preds = %cond.end29
  store i32 0, i32* %dir, align 4
  br label %for.cond33

for.cond33:                                       ; preds = %for.inc116, %for.body32
  %32 = load i32* %dir, align 4
  %cmp34 = icmp sle i32 %32, 3
  br i1 %cmp34, label %for.body35, label %for.end118

for.body35:                                       ; preds = %for.cond33
  %33 = load i32* %dir, align 4
  %34 = load i32* %gauge_dir.addr, align 4
  %cmp36 = icmp ne i32 %33, %34
  br i1 %cmp36, label %if.then37, label %if.end115

if.then37:                                        ; preds = %for.body35
  %35 = load i32* %dir, align 4
  %idxprom38 = sext i32 %35 to i64
  %36 = load %struct.site** %s, align 8
  %link = getelementptr inbounds %struct.site* %36, i32 0, i32 8
  %arrayidx39 = getelementptr inbounds [4 x %struct.su3_matrix]* %link, i32 0, i64 %idxprom38
  store %struct.su3_matrix* %arrayidx39, %struct.su3_matrix** %m1, align 8
  %37 = load i32* @diffmat_offset, align 4
  %cmp40 = icmp sge i32 %37, 0
  br i1 %cmp40, label %if.then41, label %if.else46

if.then41:                                        ; preds = %if.then37
  %38 = load %struct.site** %s, align 8
  %39 = bitcast %struct.site* %38 to i8*
  %40 = load i32* @diffmat_offset, align 4
  %idx.ext42 = sext i32 %40 to i64
  %add.ptr43 = getelementptr inbounds i8* %39, i64 %idx.ext42
  %41 = bitcast i8* %add.ptr43 to %struct.su3_matrix*
  %42 = load %struct.su3_matrix** %m1, align 8
  %43 = load %struct.site** %s, align 8
  %44 = bitcast %struct.site* %43 to i8*
  %45 = load i32* @diffmat_offset, align 4
  %idx.ext44 = sext i32 %45 to i64
  %add.ptr45 = getelementptr inbounds i8* %44, i64 %idx.ext44
  %46 = bitcast i8* %add.ptr45 to %struct.su3_matrix*
  call void @sub_su3_matrix(%struct.su3_matrix* %41, %struct.su3_matrix* %42, %struct.su3_matrix* %46)
  br label %if.end51

if.else46:                                        ; preds = %if.then37
  %47 = load i32* %i, align 4
  %idxprom47 = sext i32 %47 to i64
  %48 = load %struct.su3_matrix** @diffmatp, align 8
  %arrayidx48 = getelementptr inbounds %struct.su3_matrix* %48, i64 %idxprom47
  %49 = load %struct.su3_matrix** %m1, align 8
  %50 = load i32* %i, align 4
  %idxprom49 = sext i32 %50 to i64
  %51 = load %struct.su3_matrix** @diffmatp, align 8
  %arrayidx50 = getelementptr inbounds %struct.su3_matrix* %51, i64 %idxprom49
  call void @sub_su3_matrix(%struct.su3_matrix* %arrayidx48, %struct.su3_matrix* %49, %struct.su3_matrix* %arrayidx50)
  br label %if.end51

if.end51:                                         ; preds = %if.else46, %if.then41
  %52 = load i32* @sumvec_offset, align 4
  %cmp52 = icmp sge i32 %52, 0
  br i1 %cmp52, label %if.then53, label %if.else81

if.then53:                                        ; preds = %if.end51
  store i32 0, i32* %j, align 4
  br label %for.cond54

for.cond54:                                       ; preds = %for.inc78, %if.then53
  %53 = load i32* %j, align 4
  %cmp55 = icmp slt i32 %53, 3
  br i1 %cmp55, label %for.body56, label %for.end80

for.body56:                                       ; preds = %for.cond54
  %54 = load i32* %j, align 4
  %idxprom57 = sext i32 %54 to i64
  %55 = load i32* %j, align 4
  %idxprom58 = sext i32 %55 to i64
  %56 = load %struct.su3_matrix** %m1, align 8
  %e = getelementptr inbounds %struct.su3_matrix* %56, i32 0, i32 0
  %arrayidx59 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e, i32 0, i64 %idxprom58
  %arrayidx60 = getelementptr inbounds [3 x %struct.complex]* %arrayidx59, i32 0, i64 %idxprom57
  %real = getelementptr inbounds %struct.complex* %arrayidx60, i32 0, i32 0
  %57 = load double* %real, align 8
  %58 = load i32* %j, align 4
  %idxprom61 = sext i32 %58 to i64
  %59 = load %struct.site** %s, align 8
  %60 = bitcast %struct.site* %59 to i8*
  %61 = load i32* @sumvec_offset, align 4
  %idx.ext62 = sext i32 %61 to i64
  %add.ptr63 = getelementptr inbounds i8* %60, i64 %idx.ext62
  %62 = bitcast i8* %add.ptr63 to %struct.su3_vector*
  %c = getelementptr inbounds %struct.su3_vector* %62, i32 0, i32 0
  %arrayidx64 = getelementptr inbounds [3 x %struct.complex]* %c, i32 0, i64 %idxprom61
  %real65 = getelementptr inbounds %struct.complex* %arrayidx64, i32 0, i32 0
  %63 = load double* %real65, align 8
  %add = fadd double %63, %57
  store double %add, double* %real65, align 8
  %64 = load i32* %j, align 4
  %idxprom66 = sext i32 %64 to i64
  %65 = load i32* %j, align 4
  %idxprom67 = sext i32 %65 to i64
  %66 = load %struct.su3_matrix** %m1, align 8
  %e68 = getelementptr inbounds %struct.su3_matrix* %66, i32 0, i32 0
  %arrayidx69 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e68, i32 0, i64 %idxprom67
  %arrayidx70 = getelementptr inbounds [3 x %struct.complex]* %arrayidx69, i32 0, i64 %idxprom66
  %imag = getelementptr inbounds %struct.complex* %arrayidx70, i32 0, i32 1
  %67 = load double* %imag, align 8
  %68 = load i32* %j, align 4
  %idxprom71 = sext i32 %68 to i64
  %69 = load %struct.site** %s, align 8
  %70 = bitcast %struct.site* %69 to i8*
  %71 = load i32* @sumvec_offset, align 4
  %idx.ext72 = sext i32 %71 to i64
  %add.ptr73 = getelementptr inbounds i8* %70, i64 %idx.ext72
  %72 = bitcast i8* %add.ptr73 to %struct.su3_vector*
  %c74 = getelementptr inbounds %struct.su3_vector* %72, i32 0, i32 0
  %arrayidx75 = getelementptr inbounds [3 x %struct.complex]* %c74, i32 0, i64 %idxprom71
  %imag76 = getelementptr inbounds %struct.complex* %arrayidx75, i32 0, i32 1
  %73 = load double* %imag76, align 8
  %add77 = fadd double %73, %67
  store double %add77, double* %imag76, align 8
  br label %for.inc78

for.inc78:                                        ; preds = %for.body56
  %74 = load i32* %j, align 4
  %inc79 = add nsw i32 %74, 1
  store i32 %inc79, i32* %j, align 4
  br label %for.cond54

for.end80:                                        ; preds = %for.cond54
  br label %if.end114

if.else81:                                        ; preds = %if.end51
  store i32 0, i32* %j, align 4
  br label %for.cond82

for.cond82:                                       ; preds = %for.inc111, %if.else81
  %75 = load i32* %j, align 4
  %cmp83 = icmp slt i32 %75, 3
  br i1 %cmp83, label %for.body84, label %for.end113

for.body84:                                       ; preds = %for.cond82
  %76 = load i32* %j, align 4
  %idxprom85 = sext i32 %76 to i64
  %77 = load i32* %j, align 4
  %idxprom86 = sext i32 %77 to i64
  %78 = load %struct.su3_matrix** %m1, align 8
  %e87 = getelementptr inbounds %struct.su3_matrix* %78, i32 0, i32 0
  %arrayidx88 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e87, i32 0, i64 %idxprom86
  %arrayidx89 = getelementptr inbounds [3 x %struct.complex]* %arrayidx88, i32 0, i64 %idxprom85
  %real90 = getelementptr inbounds %struct.complex* %arrayidx89, i32 0, i32 0
  %79 = load double* %real90, align 8
  %80 = load i32* %j, align 4
  %idxprom91 = sext i32 %80 to i64
  %81 = load i32* %i, align 4
  %idxprom92 = sext i32 %81 to i64
  %82 = load %struct.su3_vector** @sumvecp, align 8
  %arrayidx93 = getelementptr inbounds %struct.su3_vector* %82, i64 %idxprom92
  %c94 = getelementptr inbounds %struct.su3_vector* %arrayidx93, i32 0, i32 0
  %arrayidx95 = getelementptr inbounds [3 x %struct.complex]* %c94, i32 0, i64 %idxprom91
  %real96 = getelementptr inbounds %struct.complex* %arrayidx95, i32 0, i32 0
  %83 = load double* %real96, align 8
  %add97 = fadd double %83, %79
  store double %add97, double* %real96, align 8
  %84 = load i32* %j, align 4
  %idxprom98 = sext i32 %84 to i64
  %85 = load i32* %j, align 4
  %idxprom99 = sext i32 %85 to i64
  %86 = load %struct.su3_matrix** %m1, align 8
  %e100 = getelementptr inbounds %struct.su3_matrix* %86, i32 0, i32 0
  %arrayidx101 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e100, i32 0, i64 %idxprom99
  %arrayidx102 = getelementptr inbounds [3 x %struct.complex]* %arrayidx101, i32 0, i64 %idxprom98
  %imag103 = getelementptr inbounds %struct.complex* %arrayidx102, i32 0, i32 1
  %87 = load double* %imag103, align 8
  %88 = load i32* %j, align 4
  %idxprom104 = sext i32 %88 to i64
  %89 = load i32* %i, align 4
  %idxprom105 = sext i32 %89 to i64
  %90 = load %struct.su3_vector** @sumvecp, align 8
  %arrayidx106 = getelementptr inbounds %struct.su3_vector* %90, i64 %idxprom105
  %c107 = getelementptr inbounds %struct.su3_vector* %arrayidx106, i32 0, i32 0
  %arrayidx108 = getelementptr inbounds [3 x %struct.complex]* %c107, i32 0, i64 %idxprom104
  %imag109 = getelementptr inbounds %struct.complex* %arrayidx108, i32 0, i32 1
  %91 = load double* %imag109, align 8
  %add110 = fadd double %91, %87
  store double %add110, double* %imag109, align 8
  br label %for.inc111

for.inc111:                                       ; preds = %for.body84
  %92 = load i32* %j, align 4
  %inc112 = add nsw i32 %92, 1
  store i32 %inc112, i32* %j, align 4
  br label %for.cond82

for.end113:                                       ; preds = %for.cond82
  br label %if.end114

if.end114:                                        ; preds = %for.end113, %for.end80
  br label %if.end115

if.end115:                                        ; preds = %if.end114, %for.body35
  br label %for.inc116

for.inc116:                                       ; preds = %if.end115
  %93 = load i32* %dir, align 4
  %inc117 = add nsw i32 %93, 1
  store i32 %inc117, i32* %dir, align 4
  br label %for.cond33

for.end118:                                       ; preds = %for.cond33
  br label %for.inc119

for.inc119:                                       ; preds = %for.end118
  %94 = load i32* %i, align 4
  %inc120 = add nsw i32 %94, 1
  store i32 %inc120, i32* %i, align 4
  %95 = load %struct.site** %s, align 8
  %incdec.ptr121 = getelementptr inbounds %struct.site* %95, i32 1
  store %struct.site* %incdec.ptr121, %struct.site** %s, align 8
  br label %for.cond25

for.end122:                                       ; preds = %cond.end29
  %96 = load i32* %parity.addr, align 4
  %cmp123 = icmp eq i32 %96, 1
  br i1 %cmp123, label %cond.true124, label %cond.false125

cond.true124:                                     ; preds = %for.end122
  %97 = load i32* @even_sites_on_node, align 4
  br label %cond.end126

cond.false125:                                    ; preds = %for.end122
  br label %cond.end126

cond.end126:                                      ; preds = %cond.false125, %cond.true124
  %cond127 = phi i32 [ %97, %cond.true124 ], [ 0, %cond.false125 ]
  store i32 %cond127, i32* %i, align 4
  %98 = load i32* %i, align 4
  %idxprom128 = sext i32 %98 to i64
  %99 = load %struct.site** @lattice, align 8
  %arrayidx129 = getelementptr inbounds %struct.site* %99, i64 %idxprom128
  store %struct.site* %arrayidx129, %struct.site** %s, align 8
  br label %for.cond130

for.cond130:                                      ; preds = %for.inc231, %cond.end126
  %100 = load i32* %i, align 4
  %101 = load i32* %parity.addr, align 4
  %cmp131 = icmp eq i32 %101, 2
  br i1 %cmp131, label %cond.true132, label %cond.false133

cond.true132:                                     ; preds = %for.cond130
  %102 = load i32* @even_sites_on_node, align 4
  br label %cond.end134

cond.false133:                                    ; preds = %for.cond130
  %103 = load i32* @sites_on_node, align 4
  br label %cond.end134

cond.end134:                                      ; preds = %cond.false133, %cond.true132
  %cond135 = phi i32 [ %102, %cond.true132 ], [ %103, %cond.false133 ]
  %cmp136 = icmp slt i32 %100, %cond135
  br i1 %cmp136, label %for.body137, label %for.end234

for.body137:                                      ; preds = %cond.end134
  store i32 0, i32* %dir, align 4
  br label %for.cond138

for.cond138:                                      ; preds = %for.inc228, %for.body137
  %104 = load i32* %dir, align 4
  %cmp139 = icmp sle i32 %104, 3
  br i1 %cmp139, label %for.body140, label %for.end230

for.body140:                                      ; preds = %for.cond138
  %105 = load i32* %dir, align 4
  %106 = load i32* %gauge_dir.addr, align 4
  %cmp141 = icmp ne i32 %105, %106
  br i1 %cmp141, label %if.then142, label %if.end227

if.then142:                                       ; preds = %for.body140
  %107 = load i32* %i, align 4
  %idxprom143 = sext i32 %107 to i64
  %108 = load i32* %dir, align 4
  %idxprom144 = sext i32 %108 to i64
  %arrayidx145 = getelementptr inbounds [16 x i8**]* @gen_pt, i32 0, i64 %idxprom144
  %109 = load i8*** %arrayidx145, align 8
  %arrayidx146 = getelementptr inbounds i8** %109, i64 %idxprom143
  %110 = load i8** %arrayidx146, align 8
  %111 = bitcast i8* %110 to %struct.su3_matrix*
  store %struct.su3_matrix* %111, %struct.su3_matrix** %m2, align 8
  %112 = load i32* @diffmat_offset, align 4
  %cmp147 = icmp sge i32 %112, 0
  br i1 %cmp147, label %if.then148, label %if.else153

if.then148:                                       ; preds = %if.then142
  %113 = load %struct.site** %s, align 8
  %114 = bitcast %struct.site* %113 to i8*
  %115 = load i32* @diffmat_offset, align 4
  %idx.ext149 = sext i32 %115 to i64
  %add.ptr150 = getelementptr inbounds i8* %114, i64 %idx.ext149
  %116 = bitcast i8* %add.ptr150 to %struct.su3_matrix*
  %117 = load %struct.su3_matrix** %m2, align 8
  %118 = load %struct.site** %s, align 8
  %119 = bitcast %struct.site* %118 to i8*
  %120 = load i32* @diffmat_offset, align 4
  %idx.ext151 = sext i32 %120 to i64
  %add.ptr152 = getelementptr inbounds i8* %119, i64 %idx.ext151
  %121 = bitcast i8* %add.ptr152 to %struct.su3_matrix*
  call void @add_su3_matrix(%struct.su3_matrix* %116, %struct.su3_matrix* %117, %struct.su3_matrix* %121)
  br label %if.end158

if.else153:                                       ; preds = %if.then142
  %122 = load i32* %i, align 4
  %idxprom154 = sext i32 %122 to i64
  %123 = load %struct.su3_matrix** @diffmatp, align 8
  %arrayidx155 = getelementptr inbounds %struct.su3_matrix* %123, i64 %idxprom154
  %124 = load %struct.su3_matrix** %m2, align 8
  %125 = load i32* %i, align 4
  %idxprom156 = sext i32 %125 to i64
  %126 = load %struct.su3_matrix** @diffmatp, align 8
  %arrayidx157 = getelementptr inbounds %struct.su3_matrix* %126, i64 %idxprom156
  call void @add_su3_matrix(%struct.su3_matrix* %arrayidx155, %struct.su3_matrix* %124, %struct.su3_matrix* %arrayidx157)
  br label %if.end158

if.end158:                                        ; preds = %if.else153, %if.then148
  %127 = load i32* @sumvec_offset, align 4
  %cmp159 = icmp sge i32 %127, 0
  br i1 %cmp159, label %if.then160, label %if.else193

if.then160:                                       ; preds = %if.end158
  store i32 0, i32* %j, align 4
  br label %for.cond161

for.cond161:                                      ; preds = %for.inc190, %if.then160
  %128 = load i32* %j, align 4
  %cmp162 = icmp slt i32 %128, 3
  br i1 %cmp162, label %for.body163, label %for.end192

for.body163:                                      ; preds = %for.cond161
  %129 = load i32* %j, align 4
  %idxprom164 = sext i32 %129 to i64
  %130 = load i32* %j, align 4
  %idxprom165 = sext i32 %130 to i64
  %131 = load %struct.su3_matrix** %m2, align 8
  %e166 = getelementptr inbounds %struct.su3_matrix* %131, i32 0, i32 0
  %arrayidx167 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e166, i32 0, i64 %idxprom165
  %arrayidx168 = getelementptr inbounds [3 x %struct.complex]* %arrayidx167, i32 0, i64 %idxprom164
  %real169 = getelementptr inbounds %struct.complex* %arrayidx168, i32 0, i32 0
  %132 = load double* %real169, align 8
  %133 = load i32* %j, align 4
  %idxprom170 = sext i32 %133 to i64
  %134 = load %struct.site** %s, align 8
  %135 = bitcast %struct.site* %134 to i8*
  %136 = load i32* @sumvec_offset, align 4
  %idx.ext171 = sext i32 %136 to i64
  %add.ptr172 = getelementptr inbounds i8* %135, i64 %idx.ext171
  %137 = bitcast i8* %add.ptr172 to %struct.su3_vector*
  %c173 = getelementptr inbounds %struct.su3_vector* %137, i32 0, i32 0
  %arrayidx174 = getelementptr inbounds [3 x %struct.complex]* %c173, i32 0, i64 %idxprom170
  %real175 = getelementptr inbounds %struct.complex* %arrayidx174, i32 0, i32 0
  %138 = load double* %real175, align 8
  %add176 = fadd double %138, %132
  store double %add176, double* %real175, align 8
  %139 = load i32* %j, align 4
  %idxprom177 = sext i32 %139 to i64
  %140 = load i32* %j, align 4
  %idxprom178 = sext i32 %140 to i64
  %141 = load %struct.su3_matrix** %m2, align 8
  %e179 = getelementptr inbounds %struct.su3_matrix* %141, i32 0, i32 0
  %arrayidx180 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e179, i32 0, i64 %idxprom178
  %arrayidx181 = getelementptr inbounds [3 x %struct.complex]* %arrayidx180, i32 0, i64 %idxprom177
  %imag182 = getelementptr inbounds %struct.complex* %arrayidx181, i32 0, i32 1
  %142 = load double* %imag182, align 8
  %143 = load i32* %j, align 4
  %idxprom183 = sext i32 %143 to i64
  %144 = load %struct.site** %s, align 8
  %145 = bitcast %struct.site* %144 to i8*
  %146 = load i32* @sumvec_offset, align 4
  %idx.ext184 = sext i32 %146 to i64
  %add.ptr185 = getelementptr inbounds i8* %145, i64 %idx.ext184
  %147 = bitcast i8* %add.ptr185 to %struct.su3_vector*
  %c186 = getelementptr inbounds %struct.su3_vector* %147, i32 0, i32 0
  %arrayidx187 = getelementptr inbounds [3 x %struct.complex]* %c186, i32 0, i64 %idxprom183
  %imag188 = getelementptr inbounds %struct.complex* %arrayidx187, i32 0, i32 1
  %148 = load double* %imag188, align 8
  %add189 = fadd double %148, %142
  store double %add189, double* %imag188, align 8
  br label %for.inc190

for.inc190:                                       ; preds = %for.body163
  %149 = load i32* %j, align 4
  %inc191 = add nsw i32 %149, 1
  store i32 %inc191, i32* %j, align 4
  br label %for.cond161

for.end192:                                       ; preds = %for.cond161
  br label %if.end226

if.else193:                                       ; preds = %if.end158
  store i32 0, i32* %j, align 4
  br label %for.cond194

for.cond194:                                      ; preds = %for.inc223, %if.else193
  %150 = load i32* %j, align 4
  %cmp195 = icmp slt i32 %150, 3
  br i1 %cmp195, label %for.body196, label %for.end225

for.body196:                                      ; preds = %for.cond194
  %151 = load i32* %j, align 4
  %idxprom197 = sext i32 %151 to i64
  %152 = load i32* %j, align 4
  %idxprom198 = sext i32 %152 to i64
  %153 = load %struct.su3_matrix** %m2, align 8
  %e199 = getelementptr inbounds %struct.su3_matrix* %153, i32 0, i32 0
  %arrayidx200 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e199, i32 0, i64 %idxprom198
  %arrayidx201 = getelementptr inbounds [3 x %struct.complex]* %arrayidx200, i32 0, i64 %idxprom197
  %real202 = getelementptr inbounds %struct.complex* %arrayidx201, i32 0, i32 0
  %154 = load double* %real202, align 8
  %155 = load i32* %j, align 4
  %idxprom203 = sext i32 %155 to i64
  %156 = load i32* %i, align 4
  %idxprom204 = sext i32 %156 to i64
  %157 = load %struct.su3_vector** @sumvecp, align 8
  %arrayidx205 = getelementptr inbounds %struct.su3_vector* %157, i64 %idxprom204
  %c206 = getelementptr inbounds %struct.su3_vector* %arrayidx205, i32 0, i32 0
  %arrayidx207 = getelementptr inbounds [3 x %struct.complex]* %c206, i32 0, i64 %idxprom203
  %real208 = getelementptr inbounds %struct.complex* %arrayidx207, i32 0, i32 0
  %158 = load double* %real208, align 8
  %add209 = fadd double %158, %154
  store double %add209, double* %real208, align 8
  %159 = load i32* %j, align 4
  %idxprom210 = sext i32 %159 to i64
  %160 = load i32* %j, align 4
  %idxprom211 = sext i32 %160 to i64
  %161 = load %struct.su3_matrix** %m2, align 8
  %e212 = getelementptr inbounds %struct.su3_matrix* %161, i32 0, i32 0
  %arrayidx213 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e212, i32 0, i64 %idxprom211
  %arrayidx214 = getelementptr inbounds [3 x %struct.complex]* %arrayidx213, i32 0, i64 %idxprom210
  %imag215 = getelementptr inbounds %struct.complex* %arrayidx214, i32 0, i32 1
  %162 = load double* %imag215, align 8
  %163 = load i32* %j, align 4
  %idxprom216 = sext i32 %163 to i64
  %164 = load i32* %i, align 4
  %idxprom217 = sext i32 %164 to i64
  %165 = load %struct.su3_vector** @sumvecp, align 8
  %arrayidx218 = getelementptr inbounds %struct.su3_vector* %165, i64 %idxprom217
  %c219 = getelementptr inbounds %struct.su3_vector* %arrayidx218, i32 0, i32 0
  %arrayidx220 = getelementptr inbounds [3 x %struct.complex]* %c219, i32 0, i64 %idxprom216
  %imag221 = getelementptr inbounds %struct.complex* %arrayidx220, i32 0, i32 1
  %166 = load double* %imag221, align 8
  %add222 = fadd double %166, %162
  store double %add222, double* %imag221, align 8
  br label %for.inc223

for.inc223:                                       ; preds = %for.body196
  %167 = load i32* %j, align 4
  %inc224 = add nsw i32 %167, 1
  store i32 %inc224, i32* %j, align 4
  br label %for.cond194

for.end225:                                       ; preds = %for.cond194
  br label %if.end226

if.end226:                                        ; preds = %for.end225, %for.end192
  br label %if.end227

if.end227:                                        ; preds = %if.end226, %for.body140
  br label %for.inc228

for.inc228:                                       ; preds = %if.end227
  %168 = load i32* %dir, align 4
  %inc229 = add nsw i32 %168, 1
  store i32 %inc229, i32* %dir, align 4
  br label %for.cond138

for.end230:                                       ; preds = %for.cond138
  br label %for.inc231

for.inc231:                                       ; preds = %for.end230
  %169 = load i32* %i, align 4
  %inc232 = add nsw i32 %169, 1
  store i32 %inc232, i32* %i, align 4
  %170 = load %struct.site** %s, align 8
  %incdec.ptr233 = getelementptr inbounds %struct.site* %170, i32 1
  store %struct.site* %incdec.ptr233, %struct.site** %s, align 8
  br label %for.cond130

for.end234:                                       ; preds = %cond.end134
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @do_hit(i32 %gauge_dir, i32 %parity, i32 %p, i32 %q, double %relax_boost, i32 %nvector, i32* %vector_offset, i32* %vector_parity, i32 %nantiherm, i32* %antiherm_offset, i32* %antiherm_parity) #0 {
entry:
  %gauge_dir.addr = alloca i32, align 4
  %parity.addr = alloca i32, align 4
  %p.addr = alloca i32, align 4
  %q.addr = alloca i32, align 4
  %relax_boost.addr = alloca double, align 8
  %nvector.addr = alloca i32, align 4
  %vector_offset.addr = alloca i32*, align 8
  %vector_parity.addr = alloca i32*, align 8
  %nantiherm.addr = alloca i32, align 4
  %antiherm_offset.addr = alloca i32*, align 8
  %antiherm_parity.addr = alloca i32*, align 8
  %a0 = alloca double, align 8
  %a1 = alloca double, align 8
  %a2 = alloca double, align 8
  %a3 = alloca double, align 8
  %asq = alloca double, align 8
  %a0sq = alloca double, align 8
  %x = alloca double, align 8
  %r = alloca double, align 8
  %xdr = alloca double, align 8
  %dir = alloca i32, align 4
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %s = alloca %struct.site*, align 8
  %u = alloca %struct.su2_matrix, align 8
  %htemp = alloca %struct.su3_matrix, align 8
  %coerce = alloca %struct.complex, align 8
  %coerce158 = alloca %struct.complex, align 8
  %coerce164 = alloca %struct.complex, align 8
  %coerce170 = alloca %struct.complex, align 8
  store i32 %gauge_dir, i32* %gauge_dir.addr, align 4
  store i32 %parity, i32* %parity.addr, align 4
  store i32 %p, i32* %p.addr, align 4
  store i32 %q, i32* %q.addr, align 4
  store double %relax_boost, double* %relax_boost.addr, align 8
  store i32 %nvector, i32* %nvector.addr, align 4
  store i32* %vector_offset, i32** %vector_offset.addr, align 8
  store i32* %vector_parity, i32** %vector_parity.addr, align 8
  store i32 %nantiherm, i32* %nantiherm.addr, align 4
  store i32* %antiherm_offset, i32** %antiherm_offset.addr, align 8
  store i32* %antiherm_parity, i32** %antiherm_parity.addr, align 8
  %0 = load i32* %gauge_dir.addr, align 4
  %1 = load i32* %parity.addr, align 4
  call void @accum_gauge_hit(i32 %0, i32 %1)
  %2 = load i32* %parity.addr, align 4
  %cmp = icmp eq i32 %2, 1
  br i1 %cmp, label %cond.true, label %cond.false

cond.true:                                        ; preds = %entry
  %3 = load i32* @even_sites_on_node, align 4
  br label %cond.end

cond.false:                                       ; preds = %entry
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %3, %cond.true ], [ 0, %cond.false ]
  store i32 %cond, i32* %i, align 4
  %4 = load i32* %i, align 4
  %idxprom = sext i32 %4 to i64
  %5 = load %struct.site** @lattice, align 8
  %arrayidx = getelementptr inbounds %struct.site* %5, i64 %idxprom
  store %struct.site* %arrayidx, %struct.site** %s, align 8
  br label %for.cond

for.cond:                                         ; preds = %for.inc237, %cond.end
  %6 = load i32* %i, align 4
  %7 = load i32* %parity.addr, align 4
  %cmp1 = icmp eq i32 %7, 2
  br i1 %cmp1, label %cond.true2, label %cond.false3

cond.true2:                                       ; preds = %for.cond
  %8 = load i32* @even_sites_on_node, align 4
  br label %cond.end4

cond.false3:                                      ; preds = %for.cond
  %9 = load i32* @sites_on_node, align 4
  br label %cond.end4

cond.end4:                                        ; preds = %cond.false3, %cond.true2
  %cond5 = phi i32 [ %8, %cond.true2 ], [ %9, %cond.false3 ]
  %cmp6 = icmp slt i32 %6, %cond5
  br i1 %cmp6, label %for.body, label %for.end239

for.body:                                         ; preds = %cond.end4
  %10 = load i32* @sumvec_offset, align 4
  %cmp7 = icmp sge i32 %10, 0
  br i1 %cmp7, label %if.then, label %if.else

if.then:                                          ; preds = %for.body
  %11 = load i32* %p.addr, align 4
  %idxprom8 = sext i32 %11 to i64
  %12 = load %struct.site** %s, align 8
  %13 = bitcast %struct.site* %12 to i8*
  %14 = load i32* @sumvec_offset, align 4
  %idx.ext = sext i32 %14 to i64
  %add.ptr = getelementptr inbounds i8* %13, i64 %idx.ext
  %15 = bitcast i8* %add.ptr to %struct.su3_vector*
  %c = getelementptr inbounds %struct.su3_vector* %15, i32 0, i32 0
  %arrayidx9 = getelementptr inbounds [3 x %struct.complex]* %c, i32 0, i64 %idxprom8
  %real = getelementptr inbounds %struct.complex* %arrayidx9, i32 0, i32 0
  %16 = load double* %real, align 8
  %17 = load i32* %q.addr, align 4
  %idxprom10 = sext i32 %17 to i64
  %18 = load %struct.site** %s, align 8
  %19 = bitcast %struct.site* %18 to i8*
  %20 = load i32* @sumvec_offset, align 4
  %idx.ext11 = sext i32 %20 to i64
  %add.ptr12 = getelementptr inbounds i8* %19, i64 %idx.ext11
  %21 = bitcast i8* %add.ptr12 to %struct.su3_vector*
  %c13 = getelementptr inbounds %struct.su3_vector* %21, i32 0, i32 0
  %arrayidx14 = getelementptr inbounds [3 x %struct.complex]* %c13, i32 0, i64 %idxprom10
  %real15 = getelementptr inbounds %struct.complex* %arrayidx14, i32 0, i32 0
  %22 = load double* %real15, align 8
  %add = fadd double %16, %22
  store double %add, double* %a0, align 8
  br label %if.end

if.else:                                          ; preds = %for.body
  %23 = load i32* %p.addr, align 4
  %idxprom16 = sext i32 %23 to i64
  %24 = load i32* %i, align 4
  %idxprom17 = sext i32 %24 to i64
  %25 = load %struct.su3_vector** @sumvecp, align 8
  %arrayidx18 = getelementptr inbounds %struct.su3_vector* %25, i64 %idxprom17
  %c19 = getelementptr inbounds %struct.su3_vector* %arrayidx18, i32 0, i32 0
  %arrayidx20 = getelementptr inbounds [3 x %struct.complex]* %c19, i32 0, i64 %idxprom16
  %real21 = getelementptr inbounds %struct.complex* %arrayidx20, i32 0, i32 0
  %26 = load double* %real21, align 8
  %27 = load i32* %q.addr, align 4
  %idxprom22 = sext i32 %27 to i64
  %28 = load i32* %i, align 4
  %idxprom23 = sext i32 %28 to i64
  %29 = load %struct.su3_vector** @sumvecp, align 8
  %arrayidx24 = getelementptr inbounds %struct.su3_vector* %29, i64 %idxprom23
  %c25 = getelementptr inbounds %struct.su3_vector* %arrayidx24, i32 0, i32 0
  %arrayidx26 = getelementptr inbounds [3 x %struct.complex]* %c25, i32 0, i64 %idxprom22
  %real27 = getelementptr inbounds %struct.complex* %arrayidx26, i32 0, i32 0
  %30 = load double* %real27, align 8
  %add28 = fadd double %26, %30
  store double %add28, double* %a0, align 8
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %31 = load i32* @diffmat_offset, align 4
  %cmp29 = icmp sge i32 %31, 0
  br i1 %cmp29, label %if.then30, label %if.else80

if.then30:                                        ; preds = %if.end
  %32 = load i32* %p.addr, align 4
  %idxprom31 = sext i32 %32 to i64
  %33 = load i32* %q.addr, align 4
  %idxprom32 = sext i32 %33 to i64
  %34 = load %struct.site** %s, align 8
  %35 = bitcast %struct.site* %34 to i8*
  %36 = load i32* @diffmat_offset, align 4
  %idx.ext33 = sext i32 %36 to i64
  %add.ptr34 = getelementptr inbounds i8* %35, i64 %idx.ext33
  %37 = bitcast i8* %add.ptr34 to %struct.su3_matrix*
  %e = getelementptr inbounds %struct.su3_matrix* %37, i32 0, i32 0
  %arrayidx35 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e, i32 0, i64 %idxprom32
  %arrayidx36 = getelementptr inbounds [3 x %struct.complex]* %arrayidx35, i32 0, i64 %idxprom31
  %imag = getelementptr inbounds %struct.complex* %arrayidx36, i32 0, i32 1
  %38 = load double* %imag, align 8
  %39 = load i32* %q.addr, align 4
  %idxprom37 = sext i32 %39 to i64
  %40 = load i32* %p.addr, align 4
  %idxprom38 = sext i32 %40 to i64
  %41 = load %struct.site** %s, align 8
  %42 = bitcast %struct.site* %41 to i8*
  %43 = load i32* @diffmat_offset, align 4
  %idx.ext39 = sext i32 %43 to i64
  %add.ptr40 = getelementptr inbounds i8* %42, i64 %idx.ext39
  %44 = bitcast i8* %add.ptr40 to %struct.su3_matrix*
  %e41 = getelementptr inbounds %struct.su3_matrix* %44, i32 0, i32 0
  %arrayidx42 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e41, i32 0, i64 %idxprom38
  %arrayidx43 = getelementptr inbounds [3 x %struct.complex]* %arrayidx42, i32 0, i64 %idxprom37
  %imag44 = getelementptr inbounds %struct.complex* %arrayidx43, i32 0, i32 1
  %45 = load double* %imag44, align 8
  %add45 = fadd double %38, %45
  store double %add45, double* %a1, align 8
  %46 = load i32* %p.addr, align 4
  %idxprom46 = sext i32 %46 to i64
  %47 = load i32* %q.addr, align 4
  %idxprom47 = sext i32 %47 to i64
  %48 = load %struct.site** %s, align 8
  %49 = bitcast %struct.site* %48 to i8*
  %50 = load i32* @diffmat_offset, align 4
  %idx.ext48 = sext i32 %50 to i64
  %add.ptr49 = getelementptr inbounds i8* %49, i64 %idx.ext48
  %51 = bitcast i8* %add.ptr49 to %struct.su3_matrix*
  %e50 = getelementptr inbounds %struct.su3_matrix* %51, i32 0, i32 0
  %arrayidx51 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e50, i32 0, i64 %idxprom47
  %arrayidx52 = getelementptr inbounds [3 x %struct.complex]* %arrayidx51, i32 0, i64 %idxprom46
  %real53 = getelementptr inbounds %struct.complex* %arrayidx52, i32 0, i32 0
  %52 = load double* %real53, align 8
  %sub = fsub double -0.000000e+00, %52
  %53 = load i32* %q.addr, align 4
  %idxprom54 = sext i32 %53 to i64
  %54 = load i32* %p.addr, align 4
  %idxprom55 = sext i32 %54 to i64
  %55 = load %struct.site** %s, align 8
  %56 = bitcast %struct.site* %55 to i8*
  %57 = load i32* @diffmat_offset, align 4
  %idx.ext56 = sext i32 %57 to i64
  %add.ptr57 = getelementptr inbounds i8* %56, i64 %idx.ext56
  %58 = bitcast i8* %add.ptr57 to %struct.su3_matrix*
  %e58 = getelementptr inbounds %struct.su3_matrix* %58, i32 0, i32 0
  %arrayidx59 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e58, i32 0, i64 %idxprom55
  %arrayidx60 = getelementptr inbounds [3 x %struct.complex]* %arrayidx59, i32 0, i64 %idxprom54
  %real61 = getelementptr inbounds %struct.complex* %arrayidx60, i32 0, i32 0
  %59 = load double* %real61, align 8
  %add62 = fadd double %sub, %59
  store double %add62, double* %a2, align 8
  %60 = load i32* %p.addr, align 4
  %idxprom63 = sext i32 %60 to i64
  %61 = load i32* %p.addr, align 4
  %idxprom64 = sext i32 %61 to i64
  %62 = load %struct.site** %s, align 8
  %63 = bitcast %struct.site* %62 to i8*
  %64 = load i32* @diffmat_offset, align 4
  %idx.ext65 = sext i32 %64 to i64
  %add.ptr66 = getelementptr inbounds i8* %63, i64 %idx.ext65
  %65 = bitcast i8* %add.ptr66 to %struct.su3_matrix*
  %e67 = getelementptr inbounds %struct.su3_matrix* %65, i32 0, i32 0
  %arrayidx68 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e67, i32 0, i64 %idxprom64
  %arrayidx69 = getelementptr inbounds [3 x %struct.complex]* %arrayidx68, i32 0, i64 %idxprom63
  %imag70 = getelementptr inbounds %struct.complex* %arrayidx69, i32 0, i32 1
  %66 = load double* %imag70, align 8
  %67 = load i32* %q.addr, align 4
  %idxprom71 = sext i32 %67 to i64
  %68 = load i32* %q.addr, align 4
  %idxprom72 = sext i32 %68 to i64
  %69 = load %struct.site** %s, align 8
  %70 = bitcast %struct.site* %69 to i8*
  %71 = load i32* @diffmat_offset, align 4
  %idx.ext73 = sext i32 %71 to i64
  %add.ptr74 = getelementptr inbounds i8* %70, i64 %idx.ext73
  %72 = bitcast i8* %add.ptr74 to %struct.su3_matrix*
  %e75 = getelementptr inbounds %struct.su3_matrix* %72, i32 0, i32 0
  %arrayidx76 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e75, i32 0, i64 %idxprom72
  %arrayidx77 = getelementptr inbounds [3 x %struct.complex]* %arrayidx76, i32 0, i64 %idxprom71
  %imag78 = getelementptr inbounds %struct.complex* %arrayidx77, i32 0, i32 1
  %73 = load double* %imag78, align 8
  %sub79 = fsub double %66, %73
  store double %sub79, double* %a3, align 8
  br label %if.end133

if.else80:                                        ; preds = %if.end
  %74 = load i32* %p.addr, align 4
  %idxprom81 = sext i32 %74 to i64
  %75 = load i32* %q.addr, align 4
  %idxprom82 = sext i32 %75 to i64
  %76 = load i32* %i, align 4
  %idxprom83 = sext i32 %76 to i64
  %77 = load %struct.su3_matrix** @diffmatp, align 8
  %arrayidx84 = getelementptr inbounds %struct.su3_matrix* %77, i64 %idxprom83
  %e85 = getelementptr inbounds %struct.su3_matrix* %arrayidx84, i32 0, i32 0
  %arrayidx86 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e85, i32 0, i64 %idxprom82
  %arrayidx87 = getelementptr inbounds [3 x %struct.complex]* %arrayidx86, i32 0, i64 %idxprom81
  %imag88 = getelementptr inbounds %struct.complex* %arrayidx87, i32 0, i32 1
  %78 = load double* %imag88, align 8
  %79 = load i32* %q.addr, align 4
  %idxprom89 = sext i32 %79 to i64
  %80 = load i32* %p.addr, align 4
  %idxprom90 = sext i32 %80 to i64
  %81 = load i32* %i, align 4
  %idxprom91 = sext i32 %81 to i64
  %82 = load %struct.su3_matrix** @diffmatp, align 8
  %arrayidx92 = getelementptr inbounds %struct.su3_matrix* %82, i64 %idxprom91
  %e93 = getelementptr inbounds %struct.su3_matrix* %arrayidx92, i32 0, i32 0
  %arrayidx94 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e93, i32 0, i64 %idxprom90
  %arrayidx95 = getelementptr inbounds [3 x %struct.complex]* %arrayidx94, i32 0, i64 %idxprom89
  %imag96 = getelementptr inbounds %struct.complex* %arrayidx95, i32 0, i32 1
  %83 = load double* %imag96, align 8
  %add97 = fadd double %78, %83
  store double %add97, double* %a1, align 8
  %84 = load i32* %p.addr, align 4
  %idxprom98 = sext i32 %84 to i64
  %85 = load i32* %q.addr, align 4
  %idxprom99 = sext i32 %85 to i64
  %86 = load i32* %i, align 4
  %idxprom100 = sext i32 %86 to i64
  %87 = load %struct.su3_matrix** @diffmatp, align 8
  %arrayidx101 = getelementptr inbounds %struct.su3_matrix* %87, i64 %idxprom100
  %e102 = getelementptr inbounds %struct.su3_matrix* %arrayidx101, i32 0, i32 0
  %arrayidx103 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e102, i32 0, i64 %idxprom99
  %arrayidx104 = getelementptr inbounds [3 x %struct.complex]* %arrayidx103, i32 0, i64 %idxprom98
  %real105 = getelementptr inbounds %struct.complex* %arrayidx104, i32 0, i32 0
  %88 = load double* %real105, align 8
  %sub106 = fsub double -0.000000e+00, %88
  %89 = load i32* %q.addr, align 4
  %idxprom107 = sext i32 %89 to i64
  %90 = load i32* %p.addr, align 4
  %idxprom108 = sext i32 %90 to i64
  %91 = load i32* %i, align 4
  %idxprom109 = sext i32 %91 to i64
  %92 = load %struct.su3_matrix** @diffmatp, align 8
  %arrayidx110 = getelementptr inbounds %struct.su3_matrix* %92, i64 %idxprom109
  %e111 = getelementptr inbounds %struct.su3_matrix* %arrayidx110, i32 0, i32 0
  %arrayidx112 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e111, i32 0, i64 %idxprom108
  %arrayidx113 = getelementptr inbounds [3 x %struct.complex]* %arrayidx112, i32 0, i64 %idxprom107
  %real114 = getelementptr inbounds %struct.complex* %arrayidx113, i32 0, i32 0
  %93 = load double* %real114, align 8
  %add115 = fadd double %sub106, %93
  store double %add115, double* %a2, align 8
  %94 = load i32* %p.addr, align 4
  %idxprom116 = sext i32 %94 to i64
  %95 = load i32* %p.addr, align 4
  %idxprom117 = sext i32 %95 to i64
  %96 = load i32* %i, align 4
  %idxprom118 = sext i32 %96 to i64
  %97 = load %struct.su3_matrix** @diffmatp, align 8
  %arrayidx119 = getelementptr inbounds %struct.su3_matrix* %97, i64 %idxprom118
  %e120 = getelementptr inbounds %struct.su3_matrix* %arrayidx119, i32 0, i32 0
  %arrayidx121 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e120, i32 0, i64 %idxprom117
  %arrayidx122 = getelementptr inbounds [3 x %struct.complex]* %arrayidx121, i32 0, i64 %idxprom116
  %imag123 = getelementptr inbounds %struct.complex* %arrayidx122, i32 0, i32 1
  %98 = load double* %imag123, align 8
  %99 = load i32* %q.addr, align 4
  %idxprom124 = sext i32 %99 to i64
  %100 = load i32* %q.addr, align 4
  %idxprom125 = sext i32 %100 to i64
  %101 = load i32* %i, align 4
  %idxprom126 = sext i32 %101 to i64
  %102 = load %struct.su3_matrix** @diffmatp, align 8
  %arrayidx127 = getelementptr inbounds %struct.su3_matrix* %102, i64 %idxprom126
  %e128 = getelementptr inbounds %struct.su3_matrix* %arrayidx127, i32 0, i32 0
  %arrayidx129 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e128, i32 0, i64 %idxprom125
  %arrayidx130 = getelementptr inbounds [3 x %struct.complex]* %arrayidx129, i32 0, i64 %idxprom124
  %imag131 = getelementptr inbounds %struct.complex* %arrayidx130, i32 0, i32 1
  %103 = load double* %imag131, align 8
  %sub132 = fsub double %98, %103
  store double %sub132, double* %a3, align 8
  br label %if.end133

if.end133:                                        ; preds = %if.else80, %if.then30
  %104 = load double* %a1, align 8
  %105 = load double* %a1, align 8
  %mul = fmul double %104, %105
  %106 = load double* %a2, align 8
  %107 = load double* %a2, align 8
  %mul134 = fmul double %106, %107
  %add135 = fadd double %mul, %mul134
  %108 = load double* %a3, align 8
  %109 = load double* %a3, align 8
  %mul136 = fmul double %108, %109
  %add137 = fadd double %add135, %mul136
  store double %add137, double* %asq, align 8
  %110 = load double* %a0, align 8
  %111 = load double* %a0, align 8
  %mul138 = fmul double %110, %111
  store double %mul138, double* %a0sq, align 8
  %112 = load double* %relax_boost.addr, align 8
  %113 = load double* %a0sq, align 8
  %mul139 = fmul double %112, %113
  %114 = load double* %asq, align 8
  %add140 = fadd double %mul139, %114
  %115 = load double* %a0sq, align 8
  %116 = load double* %asq, align 8
  %add141 = fadd double %115, %116
  %div = fdiv double %add140, %add141
  store double %div, double* %x, align 8
  %117 = load double* %a0sq, align 8
  %118 = load double* %x, align 8
  %119 = load double* %x, align 8
  %mul142 = fmul double %118, %119
  %120 = load double* %asq, align 8
  %mul143 = fmul double %mul142, %120
  %add144 = fadd double %117, %mul143
  %call = call double @sqrt(double %add144) #2
  store double %call, double* %r, align 8
  %121 = load double* %x, align 8
  %122 = load double* %r, align 8
  %div145 = fdiv double %121, %122
  store double %div145, double* %xdr, align 8
  %123 = load double* %a0, align 8
  %124 = load double* %r, align 8
  %div146 = fdiv double %123, %124
  store double %div146, double* %a0, align 8
  %125 = load double* %a1, align 8
  %126 = load double* %xdr, align 8
  %mul147 = fmul double %125, %126
  store double %mul147, double* %a1, align 8
  %127 = load double* %a2, align 8
  %128 = load double* %xdr, align 8
  %mul148 = fmul double %127, %128
  store double %mul148, double* %a2, align 8
  %129 = load double* %a3, align 8
  %130 = load double* %xdr, align 8
  %mul149 = fmul double %129, %130
  store double %mul149, double* %a3, align 8
  %e150 = getelementptr inbounds %struct.su2_matrix* %u, i32 0, i32 0
  %arrayidx151 = getelementptr inbounds [2 x [2 x %struct.complex]]* %e150, i32 0, i64 0
  %arrayidx152 = getelementptr inbounds [2 x %struct.complex]* %arrayidx151, i32 0, i64 0
  %131 = load double* %a0, align 8
  %132 = load double* %a3, align 8
  %call153 = call { double, double } @cmplx(double %131, double %132)
  %133 = bitcast %struct.complex* %coerce to { double, double }*
  %134 = getelementptr { double, double }* %133, i32 0, i32 0
  %135 = extractvalue { double, double } %call153, 0
  store double %135, double* %134, align 1
  %136 = getelementptr { double, double }* %133, i32 0, i32 1
  %137 = extractvalue { double, double } %call153, 1
  store double %137, double* %136, align 1
  %138 = bitcast %struct.complex* %arrayidx152 to i8*
  %139 = bitcast %struct.complex* %coerce to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %138, i8* %139, i64 16, i32 8, i1 false)
  %e154 = getelementptr inbounds %struct.su2_matrix* %u, i32 0, i32 0
  %arrayidx155 = getelementptr inbounds [2 x [2 x %struct.complex]]* %e154, i32 0, i64 0
  %arrayidx156 = getelementptr inbounds [2 x %struct.complex]* %arrayidx155, i32 0, i64 1
  %140 = load double* %a2, align 8
  %141 = load double* %a1, align 8
  %call157 = call { double, double } @cmplx(double %140, double %141)
  %142 = bitcast %struct.complex* %coerce158 to { double, double }*
  %143 = getelementptr { double, double }* %142, i32 0, i32 0
  %144 = extractvalue { double, double } %call157, 0
  store double %144, double* %143, align 1
  %145 = getelementptr { double, double }* %142, i32 0, i32 1
  %146 = extractvalue { double, double } %call157, 1
  store double %146, double* %145, align 1
  %147 = bitcast %struct.complex* %arrayidx156 to i8*
  %148 = bitcast %struct.complex* %coerce158 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %147, i8* %148, i64 16, i32 8, i1 false)
  %e159 = getelementptr inbounds %struct.su2_matrix* %u, i32 0, i32 0
  %arrayidx160 = getelementptr inbounds [2 x [2 x %struct.complex]]* %e159, i32 0, i64 1
  %arrayidx161 = getelementptr inbounds [2 x %struct.complex]* %arrayidx160, i32 0, i64 0
  %149 = load double* %a2, align 8
  %sub162 = fsub double -0.000000e+00, %149
  %150 = load double* %a1, align 8
  %call163 = call { double, double } @cmplx(double %sub162, double %150)
  %151 = bitcast %struct.complex* %coerce164 to { double, double }*
  %152 = getelementptr { double, double }* %151, i32 0, i32 0
  %153 = extractvalue { double, double } %call163, 0
  store double %153, double* %152, align 1
  %154 = getelementptr { double, double }* %151, i32 0, i32 1
  %155 = extractvalue { double, double } %call163, 1
  store double %155, double* %154, align 1
  %156 = bitcast %struct.complex* %arrayidx161 to i8*
  %157 = bitcast %struct.complex* %coerce164 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %156, i8* %157, i64 16, i32 8, i1 false)
  %e165 = getelementptr inbounds %struct.su2_matrix* %u, i32 0, i32 0
  %arrayidx166 = getelementptr inbounds [2 x [2 x %struct.complex]]* %e165, i32 0, i64 1
  %arrayidx167 = getelementptr inbounds [2 x %struct.complex]* %arrayidx166, i32 0, i64 1
  %158 = load double* %a0, align 8
  %159 = load double* %a3, align 8
  %sub168 = fsub double -0.000000e+00, %159
  %call169 = call { double, double } @cmplx(double %158, double %sub168)
  %160 = bitcast %struct.complex* %coerce170 to { double, double }*
  %161 = getelementptr { double, double }* %160, i32 0, i32 0
  %162 = extractvalue { double, double } %call169, 0
  store double %162, double* %161, align 1
  %163 = getelementptr { double, double }* %160, i32 0, i32 1
  %164 = extractvalue { double, double } %call169, 1
  store double %164, double* %163, align 1
  %165 = bitcast %struct.complex* %arrayidx167 to i8*
  %166 = bitcast %struct.complex* %coerce170 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %165, i8* %166, i64 16, i32 8, i1 false)
  store i32 0, i32* %dir, align 4
  br label %for.cond171

for.cond171:                                      ; preds = %for.inc, %if.end133
  %167 = load i32* %dir, align 4
  %cmp172 = icmp sle i32 %167, 3
  br i1 %cmp172, label %for.body173, label %for.end

for.body173:                                      ; preds = %for.cond171
  %168 = load i32* %p.addr, align 4
  %169 = load i32* %q.addr, align 4
  %170 = load i32* %dir, align 4
  %idxprom174 = sext i32 %170 to i64
  %171 = load %struct.site** %s, align 8
  %link = getelementptr inbounds %struct.site* %171, i32 0, i32 8
  %arrayidx175 = getelementptr inbounds [4 x %struct.su3_matrix]* %link, i32 0, i64 %idxprom174
  call void @left_su2_hit_n(%struct.su2_matrix* %u, i32 %168, i32 %169, %struct.su3_matrix* %arrayidx175)
  br label %for.inc

for.inc:                                          ; preds = %for.body173
  %172 = load i32* %dir, align 4
  %inc = add nsw i32 %172, 1
  store i32 %inc, i32* %dir, align 4
  br label %for.cond171

for.end:                                          ; preds = %for.cond171
  store i32 0, i32* %dir, align 4
  br label %for.cond176

for.cond176:                                      ; preds = %for.inc183, %for.end
  %173 = load i32* %dir, align 4
  %cmp177 = icmp sle i32 %173, 3
  br i1 %cmp177, label %for.body178, label %for.end185

for.body178:                                      ; preds = %for.cond176
  %174 = load i32* %p.addr, align 4
  %175 = load i32* %q.addr, align 4
  %176 = load i32* %i, align 4
  %idxprom179 = sext i32 %176 to i64
  %177 = load i32* %dir, align 4
  %idxprom180 = sext i32 %177 to i64
  %arrayidx181 = getelementptr inbounds [16 x i8**]* @gen_pt, i32 0, i64 %idxprom180
  %178 = load i8*** %arrayidx181, align 8
  %arrayidx182 = getelementptr inbounds i8** %178, i64 %idxprom179
  %179 = load i8** %arrayidx182, align 8
  %180 = bitcast i8* %179 to %struct.su3_matrix*
  call void @right_su2_hit_a(%struct.su2_matrix* %u, i32 %174, i32 %175, %struct.su3_matrix* %180)
  br label %for.inc183

for.inc183:                                       ; preds = %for.body178
  %181 = load i32* %dir, align 4
  %inc184 = add nsw i32 %181, 1
  store i32 %inc184, i32* %dir, align 4
  br label %for.cond176

for.end185:                                       ; preds = %for.cond176
  store i32 0, i32* %j, align 4
  br label %for.cond186

for.cond186:                                      ; preds = %for.inc211, %for.end185
  %182 = load i32* %j, align 4
  %183 = load i32* %nvector.addr, align 4
  %cmp187 = icmp slt i32 %182, %183
  br i1 %cmp187, label %for.body188, label %for.end213

for.body188:                                      ; preds = %for.cond186
  %184 = load i32* %j, align 4
  %idxprom189 = sext i32 %184 to i64
  %185 = load i32** %vector_parity.addr, align 8
  %arrayidx190 = getelementptr inbounds i32* %185, i64 %idxprom189
  %186 = load i32* %arrayidx190, align 4
  %cmp191 = icmp eq i32 %186, 3
  br i1 %cmp191, label %if.then195, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %for.body188
  %187 = load i32* %j, align 4
  %idxprom192 = sext i32 %187 to i64
  %188 = load i32** %vector_parity.addr, align 8
  %arrayidx193 = getelementptr inbounds i32* %188, i64 %idxprom192
  %189 = load i32* %arrayidx193, align 4
  %190 = load i32* %parity.addr, align 4
  %cmp194 = icmp eq i32 %189, %190
  br i1 %cmp194, label %if.then195, label %if.end210

if.then195:                                       ; preds = %lor.lhs.false, %for.body188
  %191 = load i32* %p.addr, align 4
  %idxprom196 = sext i32 %191 to i64
  %192 = load %struct.site** %s, align 8
  %193 = bitcast %struct.site* %192 to i8*
  %194 = load i32* %j, align 4
  %idxprom197 = sext i32 %194 to i64
  %195 = load i32** %vector_offset.addr, align 8
  %arrayidx198 = getelementptr inbounds i32* %195, i64 %idxprom197
  %196 = load i32* %arrayidx198, align 4
  %idx.ext199 = sext i32 %196 to i64
  %add.ptr200 = getelementptr inbounds i8* %193, i64 %idx.ext199
  %197 = bitcast i8* %add.ptr200 to %struct.su3_vector*
  %c201 = getelementptr inbounds %struct.su3_vector* %197, i32 0, i32 0
  %arrayidx202 = getelementptr inbounds [3 x %struct.complex]* %c201, i32 0, i64 %idxprom196
  %198 = load i32* %q.addr, align 4
  %idxprom203 = sext i32 %198 to i64
  %199 = load %struct.site** %s, align 8
  %200 = bitcast %struct.site* %199 to i8*
  %201 = load i32* %j, align 4
  %idxprom204 = sext i32 %201 to i64
  %202 = load i32** %vector_offset.addr, align 8
  %arrayidx205 = getelementptr inbounds i32* %202, i64 %idxprom204
  %203 = load i32* %arrayidx205, align 4
  %idx.ext206 = sext i32 %203 to i64
  %add.ptr207 = getelementptr inbounds i8* %200, i64 %idx.ext206
  %204 = bitcast i8* %add.ptr207 to %struct.su3_vector*
  %c208 = getelementptr inbounds %struct.su3_vector* %204, i32 0, i32 0
  %arrayidx209 = getelementptr inbounds [3 x %struct.complex]* %c208, i32 0, i64 %idxprom203
  call void @mult_su2_mat_vec_elem_n(%struct.su2_matrix* %u, %struct.complex* %arrayidx202, %struct.complex* %arrayidx209)
  br label %if.end210

if.end210:                                        ; preds = %if.then195, %lor.lhs.false
  br label %for.inc211

for.inc211:                                       ; preds = %if.end210
  %205 = load i32* %j, align 4
  %inc212 = add nsw i32 %205, 1
  store i32 %inc212, i32* %j, align 4
  br label %for.cond186

for.end213:                                       ; preds = %for.cond186
  store i32 0, i32* %j, align 4
  br label %for.cond214

for.cond214:                                      ; preds = %for.inc234, %for.end213
  %206 = load i32* %j, align 4
  %207 = load i32* %nantiherm.addr, align 4
  %cmp215 = icmp slt i32 %206, %207
  br i1 %cmp215, label %for.body216, label %for.end236

for.body216:                                      ; preds = %for.cond214
  %208 = load i32* %j, align 4
  %idxprom217 = sext i32 %208 to i64
  %209 = load i32** %antiherm_parity.addr, align 8
  %arrayidx218 = getelementptr inbounds i32* %209, i64 %idxprom217
  %210 = load i32* %arrayidx218, align 4
  %cmp219 = icmp eq i32 %210, 3
  br i1 %cmp219, label %if.then224, label %lor.lhs.false220

lor.lhs.false220:                                 ; preds = %for.body216
  %211 = load i32* %j, align 4
  %idxprom221 = sext i32 %211 to i64
  %212 = load i32** %antiherm_parity.addr, align 8
  %arrayidx222 = getelementptr inbounds i32* %212, i64 %idxprom221
  %213 = load i32* %arrayidx222, align 4
  %214 = load i32* %parity.addr, align 4
  %cmp223 = icmp eq i32 %213, %214
  br i1 %cmp223, label %if.then224, label %if.end233

if.then224:                                       ; preds = %lor.lhs.false220, %for.body216
  %215 = load %struct.site** %s, align 8
  %216 = bitcast %struct.site* %215 to i8*
  %217 = load i32* %j, align 4
  %idxprom225 = sext i32 %217 to i64
  %218 = load i32** %antiherm_offset.addr, align 8
  %arrayidx226 = getelementptr inbounds i32* %218, i64 %idxprom225
  %219 = load i32* %arrayidx226, align 4
  %idx.ext227 = sext i32 %219 to i64
  %add.ptr228 = getelementptr inbounds i8* %216, i64 %idx.ext227
  %220 = bitcast i8* %add.ptr228 to %struct.anti_hermitmat*
  call void @uncompress_anti_hermitian(%struct.anti_hermitmat* %220, %struct.su3_matrix* %htemp)
  %221 = load i32* %p.addr, align 4
  %222 = load i32* %q.addr, align 4
  call void @left_su2_hit_n(%struct.su2_matrix* %u, i32 %221, i32 %222, %struct.su3_matrix* %htemp)
  %223 = load i32* %p.addr, align 4
  %224 = load i32* %q.addr, align 4
  call void @right_su2_hit_a(%struct.su2_matrix* %u, i32 %223, i32 %224, %struct.su3_matrix* %htemp)
  %225 = load %struct.site** %s, align 8
  %226 = bitcast %struct.site* %225 to i8*
  %227 = load i32* %j, align 4
  %idxprom229 = sext i32 %227 to i64
  %228 = load i32** %antiherm_offset.addr, align 8
  %arrayidx230 = getelementptr inbounds i32* %228, i64 %idxprom229
  %229 = load i32* %arrayidx230, align 4
  %idx.ext231 = sext i32 %229 to i64
  %add.ptr232 = getelementptr inbounds i8* %226, i64 %idx.ext231
  %230 = bitcast i8* %add.ptr232 to %struct.anti_hermitmat*
  call void @make_anti_hermitian(%struct.su3_matrix* %htemp, %struct.anti_hermitmat* %230)
  br label %if.end233

if.end233:                                        ; preds = %if.then224, %lor.lhs.false220
  br label %for.inc234

for.inc234:                                       ; preds = %if.end233
  %231 = load i32* %j, align 4
  %inc235 = add nsw i32 %231, 1
  store i32 %inc235, i32* %j, align 4
  br label %for.cond214

for.end236:                                       ; preds = %for.cond214
  br label %for.inc237

for.inc237:                                       ; preds = %for.end236
  %232 = load i32* %i, align 4
  %inc238 = add nsw i32 %232, 1
  store i32 %inc238, i32* %i, align 4
  %233 = load %struct.site** %s, align 8
  %incdec.ptr = getelementptr inbounds %struct.site* %233, i32 1
  store %struct.site* %incdec.ptr, %struct.site** %s, align 8
  br label %for.cond

for.end239:                                       ; preds = %cond.end4
  ret void
}

; Function Attrs: nounwind uwtable
define internal double @get_gauge_fix_action(i32 %gauge_dir, i32 %parity) #0 {
entry:
  %gauge_dir.addr = alloca i32, align 4
  %parity.addr = alloca i32, align 4
  %dir = alloca i32, align 4
  %i = alloca i32, align 4
  %ndir = alloca i32, align 4
  %s = alloca %struct.site*, align 8
  %m1 = alloca %struct.su3_matrix*, align 8
  %m2 = alloca %struct.su3_matrix*, align 8
  %gauge_fix_action = alloca double, align 8
  %trace = alloca %struct.complex, align 8
  %coerce = alloca %struct.complex, align 8
  %coerce18 = alloca %struct.complex, align 8
  store i32 %gauge_dir, i32* %gauge_dir.addr, align 4
  store i32 %parity, i32* %parity.addr, align 4
  store double 0.000000e+00, double* %gauge_fix_action, align 8
  %0 = load i32* %parity.addr, align 4
  %cmp = icmp eq i32 %0, 1
  br i1 %cmp, label %cond.true, label %cond.false

cond.true:                                        ; preds = %entry
  %1 = load i32* @even_sites_on_node, align 4
  br label %cond.end

cond.false:                                       ; preds = %entry
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %1, %cond.true ], [ 0, %cond.false ]
  store i32 %cond, i32* %i, align 4
  %2 = load i32* %i, align 4
  %idxprom = sext i32 %2 to i64
  %3 = load %struct.site** @lattice, align 8
  %arrayidx = getelementptr inbounds %struct.site* %3, i64 %idxprom
  store %struct.site* %arrayidx, %struct.site** %s, align 8
  br label %for.cond

for.cond:                                         ; preds = %for.inc21, %cond.end
  %4 = load i32* %i, align 4
  %5 = load i32* %parity.addr, align 4
  %cmp1 = icmp eq i32 %5, 2
  br i1 %cmp1, label %cond.true2, label %cond.false3

cond.true2:                                       ; preds = %for.cond
  %6 = load i32* @even_sites_on_node, align 4
  br label %cond.end4

cond.false3:                                      ; preds = %for.cond
  %7 = load i32* @sites_on_node, align 4
  br label %cond.end4

cond.end4:                                        ; preds = %cond.false3, %cond.true2
  %cond5 = phi i32 [ %6, %cond.true2 ], [ %7, %cond.false3 ]
  %cmp6 = icmp slt i32 %4, %cond5
  br i1 %cmp6, label %for.body, label %for.end23

for.body:                                         ; preds = %cond.end4
  store i32 0, i32* %dir, align 4
  br label %for.cond7

for.cond7:                                        ; preds = %for.inc, %for.body
  %8 = load i32* %dir, align 4
  %cmp8 = icmp sle i32 %8, 3
  br i1 %cmp8, label %for.body9, label %for.end

for.body9:                                        ; preds = %for.cond7
  %9 = load i32* %dir, align 4
  %10 = load i32* %gauge_dir.addr, align 4
  %cmp10 = icmp ne i32 %9, %10
  br i1 %cmp10, label %if.then, label %if.end

if.then:                                          ; preds = %for.body9
  %11 = load i32* %dir, align 4
  %idxprom11 = sext i32 %11 to i64
  %12 = load %struct.site** %s, align 8
  %link = getelementptr inbounds %struct.site* %12, i32 0, i32 8
  %arrayidx12 = getelementptr inbounds [4 x %struct.su3_matrix]* %link, i32 0, i64 %idxprom11
  store %struct.su3_matrix* %arrayidx12, %struct.su3_matrix** %m1, align 8
  %13 = load i32* %i, align 4
  %idxprom13 = sext i32 %13 to i64
  %14 = load i32* %dir, align 4
  %idxprom14 = sext i32 %14 to i64
  %arrayidx15 = getelementptr inbounds [16 x i8**]* @gen_pt, i32 0, i64 %idxprom14
  %15 = load i8*** %arrayidx15, align 8
  %arrayidx16 = getelementptr inbounds i8** %15, i64 %idxprom13
  %16 = load i8** %arrayidx16, align 8
  %17 = bitcast i8* %16 to %struct.su3_matrix*
  store %struct.su3_matrix* %17, %struct.su3_matrix** %m2, align 8
  %18 = load %struct.su3_matrix** %m1, align 8
  %call = call { double, double } @trace_su3(%struct.su3_matrix* %18)
  %19 = bitcast %struct.complex* %coerce to { double, double }*
  %20 = getelementptr { double, double }* %19, i32 0, i32 0
  %21 = extractvalue { double, double } %call, 0
  store double %21, double* %20, align 1
  %22 = getelementptr { double, double }* %19, i32 0, i32 1
  %23 = extractvalue { double, double } %call, 1
  store double %23, double* %22, align 1
  %24 = bitcast %struct.complex* %trace to i8*
  %25 = bitcast %struct.complex* %coerce to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %24, i8* %25, i64 16, i32 8, i1 false)
  %real = getelementptr inbounds %struct.complex* %trace, i32 0, i32 0
  %26 = load double* %real, align 8
  %27 = load double* %gauge_fix_action, align 8
  %add = fadd double %27, %26
  store double %add, double* %gauge_fix_action, align 8
  %28 = load %struct.su3_matrix** %m2, align 8
  %call17 = call { double, double } @trace_su3(%struct.su3_matrix* %28)
  %29 = bitcast %struct.complex* %coerce18 to { double, double }*
  %30 = getelementptr { double, double }* %29, i32 0, i32 0
  %31 = extractvalue { double, double } %call17, 0
  store double %31, double* %30, align 1
  %32 = getelementptr { double, double }* %29, i32 0, i32 1
  %33 = extractvalue { double, double } %call17, 1
  store double %33, double* %32, align 1
  %34 = bitcast %struct.complex* %trace to i8*
  %35 = bitcast %struct.complex* %coerce18 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %34, i8* %35, i64 16, i32 8, i1 false)
  %real19 = getelementptr inbounds %struct.complex* %trace, i32 0, i32 0
  %36 = load double* %real19, align 8
  %37 = load double* %gauge_fix_action, align 8
  %add20 = fadd double %37, %36
  store double %add20, double* %gauge_fix_action, align 8
  br label %if.end

if.end:                                           ; preds = %if.then, %for.body9
  br label %for.inc

for.inc:                                          ; preds = %if.end
  %38 = load i32* %dir, align 4
  %inc = add nsw i32 %38, 1
  store i32 %inc, i32* %dir, align 4
  br label %for.cond7

for.end:                                          ; preds = %for.cond7
  br label %for.inc21

for.inc21:                                        ; preds = %for.end
  %39 = load i32* %i, align 4
  %inc22 = add nsw i32 %39, 1
  store i32 %inc22, i32* %i, align 4
  %40 = load %struct.site** %s, align 8
  %incdec.ptr = getelementptr inbounds %struct.site* %40, i32 1
  store %struct.site* %incdec.ptr, %struct.site** %s, align 8
  br label %for.cond

for.end23:                                        ; preds = %cond.end4
  store i32 0, i32* %ndir, align 4
  store i32 0, i32* %dir, align 4
  br label %for.cond24

for.cond24:                                       ; preds = %for.inc31, %for.end23
  %41 = load i32* %dir, align 4
  %cmp25 = icmp sle i32 %41, 3
  br i1 %cmp25, label %for.body26, label %for.end33

for.body26:                                       ; preds = %for.cond24
  %42 = load i32* %dir, align 4
  %43 = load i32* %gauge_dir.addr, align 4
  %cmp27 = icmp ne i32 %42, %43
  br i1 %cmp27, label %if.then28, label %if.end30

if.then28:                                        ; preds = %for.body26
  %44 = load i32* %ndir, align 4
  %inc29 = add nsw i32 %44, 1
  store i32 %inc29, i32* %ndir, align 4
  br label %if.end30

if.end30:                                         ; preds = %if.then28, %for.body26
  br label %for.inc31

for.inc31:                                        ; preds = %if.end30
  %45 = load i32* %dir, align 4
  %inc32 = add nsw i32 %45, 1
  store i32 %inc32, i32* %dir, align 4
  br label %for.cond24

for.end33:                                        ; preds = %for.cond24
  call void @g_doublesum(double* %gauge_fix_action)
  %46 = load double* %gauge_fix_action, align 8
  %47 = load i32* %ndir, align 4
  %mul = mul nsw i32 6, %47
  %48 = load i32* @nx, align 4
  %mul34 = mul nsw i32 %mul, %48
  %49 = load i32* @ny, align 4
  %mul35 = mul nsw i32 %mul34, %49
  %50 = load i32* @nz, align 4
  %mul36 = mul nsw i32 %mul35, %50
  %51 = load i32* @nt, align 4
  %mul37 = mul nsw i32 %mul36, %51
  %conv = sitofp i32 %mul37 to double
  %div = fdiv double %46, %conv
  ret double %div
}

; Function Attrs: nounwind uwtable
define internal void @gaugefixstep(i32 %gauge_dir, double* %av_gauge_fix_action, double %relax_boost, i32 %nvector, i32* %vector_offset, i32* %vector_parity, i32 %nantiherm, i32* %antiherm_offset, i32* %antiherm_parity) #0 {
entry:
  %gauge_dir.addr = alloca i32, align 4
  %av_gauge_fix_action.addr = alloca double*, align 8
  %relax_boost.addr = alloca double, align 8
  %nvector.addr = alloca i32, align 4
  %vector_offset.addr = alloca i32*, align 8
  %vector_parity.addr = alloca i32*, align 8
  %nantiherm.addr = alloca i32, align 4
  %antiherm_offset.addr = alloca i32*, align 8
  %antiherm_parity.addr = alloca i32*, align 8
  %parity = alloca i32, align 4
  %mtag = alloca [8 x %struct.msg_tag*], align 16
  %gauge_fix_action = alloca double, align 8
  %dir = alloca i32, align 4
  %i = alloca i32, align 4
  %s = alloca %struct.site*, align 8
  store i32 %gauge_dir, i32* %gauge_dir.addr, align 4
  store double* %av_gauge_fix_action, double** %av_gauge_fix_action.addr, align 8
  store double %relax_boost, double* %relax_boost.addr, align 8
  store i32 %nvector, i32* %nvector.addr, align 4
  store i32* %vector_offset, i32** %vector_offset.addr, align 8
  store i32* %vector_parity, i32** %vector_parity.addr, align 8
  store i32 %nantiherm, i32* %nantiherm.addr, align 4
  store i32* %antiherm_offset, i32** %antiherm_offset.addr, align 8
  store i32* %antiherm_parity, i32** %antiherm_parity.addr, align 8
  %0 = load double** %av_gauge_fix_action.addr, align 8
  store double 0.000000e+00, double* %0, align 8
  call void (...)* bitcast (void ()* @g_sync to void (...)*)()
  %1 = load %struct._IO_FILE** @stdout, align 8
  %call = call i32 @fflush(%struct._IO_FILE* %1)
  store i32 1, i32* %parity, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc111, %entry
  %2 = load i32* %parity, align 4
  %cmp = icmp sle i32 %2, 2
  br i1 %cmp, label %for.body, label %for.end113

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %dir, align 4
  br label %for.cond1

for.cond1:                                        ; preds = %for.inc, %for.body
  %3 = load i32* %dir, align 4
  %cmp2 = icmp sle i32 %3, 3
  br i1 %cmp2, label %for.body3, label %for.end

for.body3:                                        ; preds = %for.cond1
  %4 = load i32* %dir, align 4
  %idxprom = sext i32 %4 to i64
  %5 = load %struct.site** @lattice, align 8
  %arrayidx = getelementptr inbounds %struct.site* %5, i64 0
  %link = getelementptr inbounds %struct.site* %arrayidx, i32 0, i32 8
  %arrayidx4 = getelementptr inbounds [4 x %struct.su3_matrix]* %link, i32 0, i64 %idxprom
  %6 = bitcast %struct.su3_matrix* %arrayidx4 to i8*
  %7 = load %struct.site** @lattice, align 8
  %arrayidx5 = getelementptr inbounds %struct.site* %7, i64 0
  %8 = bitcast %struct.site* %arrayidx5 to i8*
  %sub.ptr.lhs.cast = ptrtoint i8* %6 to i64
  %sub.ptr.rhs.cast = ptrtoint i8* %8 to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %conv = trunc i64 %sub.ptr.sub to i32
  %9 = load i32* %dir, align 4
  %sub = sub nsw i32 7, %9
  %10 = load i32* %parity, align 4
  %11 = load i32* %dir, align 4
  %idxprom6 = sext i32 %11 to i64
  %arrayidx7 = getelementptr inbounds [16 x i8**]* @gen_pt, i32 0, i64 %idxprom6
  %12 = load i8*** %arrayidx7, align 8
  %call8 = call %struct.msg_tag* @start_gather(i32 %conv, i32 144, i32 %sub, i32 %10, i8** %12)
  %13 = load i32* %dir, align 4
  %idxprom9 = sext i32 %13 to i64
  %arrayidx10 = getelementptr inbounds [8 x %struct.msg_tag*]* %mtag, i32 0, i64 %idxprom9
  store %struct.msg_tag* %call8, %struct.msg_tag** %arrayidx10, align 8
  br label %for.inc

for.inc:                                          ; preds = %for.body3
  %14 = load i32* %dir, align 4
  %inc = add nsw i32 %14, 1
  store i32 %inc, i32* %dir, align 4
  br label %for.cond1

for.end:                                          ; preds = %for.cond1
  store i32 0, i32* %dir, align 4
  br label %for.cond11

for.cond11:                                       ; preds = %for.inc17, %for.end
  %15 = load i32* %dir, align 4
  %cmp12 = icmp sle i32 %15, 3
  br i1 %cmp12, label %for.body14, label %for.end19

for.body14:                                       ; preds = %for.cond11
  %16 = load i32* %dir, align 4
  %idxprom15 = sext i32 %16 to i64
  %arrayidx16 = getelementptr inbounds [8 x %struct.msg_tag*]* %mtag, i32 0, i64 %idxprom15
  %17 = load %struct.msg_tag** %arrayidx16, align 8
  call void @wait_gather(%struct.msg_tag* %17)
  br label %for.inc17

for.inc17:                                        ; preds = %for.body14
  %18 = load i32* %dir, align 4
  %inc18 = add nsw i32 %18, 1
  store i32 %inc18, i32* %dir, align 4
  br label %for.cond11

for.end19:                                        ; preds = %for.cond11
  %19 = load i32* %gauge_dir.addr, align 4
  %20 = load i32* %parity, align 4
  %call20 = call double @get_gauge_fix_action(i32 %19, i32 %20)
  store double %call20, double* %gauge_fix_action, align 8
  %21 = load i32* %gauge_dir.addr, align 4
  %22 = load i32* %parity, align 4
  %23 = load double* %relax_boost.addr, align 8
  %24 = load i32* %nvector.addr, align 4
  %25 = load i32** %vector_offset.addr, align 8
  %26 = load i32** %vector_parity.addr, align 8
  %27 = load i32* %nantiherm.addr, align 4
  %28 = load i32** %antiherm_offset.addr, align 8
  %29 = load i32** %antiherm_parity.addr, align 8
  call void @do_hit(i32 %21, i32 %22, i32 0, i32 1, double %23, i32 %24, i32* %25, i32* %26, i32 %27, i32* %28, i32* %29)
  %30 = load i32* %gauge_dir.addr, align 4
  %31 = load i32* %parity, align 4
  %32 = load double* %relax_boost.addr, align 8
  %33 = load i32* %nvector.addr, align 4
  %34 = load i32** %vector_offset.addr, align 8
  %35 = load i32** %vector_parity.addr, align 8
  %36 = load i32* %nantiherm.addr, align 4
  %37 = load i32** %antiherm_offset.addr, align 8
  %38 = load i32** %antiherm_parity.addr, align 8
  call void @do_hit(i32 %30, i32 %31, i32 1, i32 2, double %32, i32 %33, i32* %34, i32* %35, i32 %36, i32* %37, i32* %38)
  %39 = load i32* %gauge_dir.addr, align 4
  %40 = load i32* %parity, align 4
  %41 = load double* %relax_boost.addr, align 8
  %42 = load i32* %nvector.addr, align 4
  %43 = load i32** %vector_offset.addr, align 8
  %44 = load i32** %vector_parity.addr, align 8
  %45 = load i32* %nantiherm.addr, align 4
  %46 = load i32** %antiherm_offset.addr, align 8
  %47 = load i32** %antiherm_parity.addr, align 8
  call void @do_hit(i32 %39, i32 %40, i32 2, i32 0, double %41, i32 %42, i32* %43, i32* %44, i32 %45, i32* %46, i32* %47)
  %48 = load i32* %gauge_dir.addr, align 4
  %49 = load i32* %parity, align 4
  %call21 = call double @get_gauge_fix_action(i32 %48, i32 %49)
  store double %call21, double* %gauge_fix_action, align 8
  %50 = load double* %gauge_fix_action, align 8
  %51 = load double** %av_gauge_fix_action.addr, align 8
  %52 = load double* %51, align 8
  %add = fadd double %52, %50
  store double %add, double* %51, align 8
  store i32 0, i32* %dir, align 4
  br label %for.cond22

for.cond22:                                       ; preds = %for.inc108, %for.end19
  %53 = load i32* %dir, align 4
  %cmp23 = icmp sle i32 %53, 3
  br i1 %cmp23, label %for.body25, label %for.end110

for.body25:                                       ; preds = %for.cond22
  call void (...)* bitcast (void ()* @g_sync to void (...)*)()
  %54 = load i32* %parity, align 4
  %cmp26 = icmp eq i32 %54, 1
  br i1 %cmp26, label %cond.true, label %cond.false

cond.true:                                        ; preds = %for.body25
  %55 = load i32* @even_sites_on_node, align 4
  br label %cond.end

cond.false:                                       ; preds = %for.body25
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %55, %cond.true ], [ 0, %cond.false ]
  store i32 %cond, i32* %i, align 4
  %56 = load i32* %i, align 4
  %idxprom28 = sext i32 %56 to i64
  %57 = load %struct.site** @lattice, align 8
  %arrayidx29 = getelementptr inbounds %struct.site* %57, i64 %idxprom28
  store %struct.site* %arrayidx29, %struct.site** %s, align 8
  br label %for.cond30

for.cond30:                                       ; preds = %for.inc52, %cond.end
  %58 = load i32* %i, align 4
  %59 = load i32* %parity, align 4
  %cmp31 = icmp eq i32 %59, 2
  br i1 %cmp31, label %cond.true33, label %cond.false34

cond.true33:                                      ; preds = %for.cond30
  %60 = load i32* @even_sites_on_node, align 4
  br label %cond.end35

cond.false34:                                     ; preds = %for.cond30
  %61 = load i32* @sites_on_node, align 4
  br label %cond.end35

cond.end35:                                       ; preds = %cond.false34, %cond.true33
  %cond36 = phi i32 [ %60, %cond.true33 ], [ %61, %cond.false34 ]
  %cmp37 = icmp slt i32 %58, %cond36
  br i1 %cmp37, label %for.body39, label %for.end54

for.body39:                                       ; preds = %cond.end35
  %62 = load i32* @diffmat_offset, align 4
  %cmp40 = icmp sge i32 %62, 0
  br i1 %cmp40, label %if.then, label %if.else

if.then:                                          ; preds = %for.body39
  %63 = load i32* %i, align 4
  %idxprom42 = sext i32 %63 to i64
  %64 = load i32* %dir, align 4
  %idxprom43 = sext i32 %64 to i64
  %arrayidx44 = getelementptr inbounds [16 x i8**]* @gen_pt, i32 0, i64 %idxprom43
  %65 = load i8*** %arrayidx44, align 8
  %arrayidx45 = getelementptr inbounds i8** %65, i64 %idxprom42
  %66 = load i8** %arrayidx45, align 8
  %67 = bitcast i8* %66 to %struct.su3_matrix*
  %68 = load %struct.site** %s, align 8
  %69 = bitcast %struct.site* %68 to i8*
  %70 = load i32* @diffmat_offset, align 4
  %idx.ext = sext i32 %70 to i64
  %add.ptr = getelementptr inbounds i8* %69, i64 %idx.ext
  %71 = bitcast i8* %add.ptr to %struct.su3_matrix*
  call void @su3mat_copy(%struct.su3_matrix* %67, %struct.su3_matrix* %71)
  br label %if.end

if.else:                                          ; preds = %for.body39
  %72 = load i32* %i, align 4
  %idxprom46 = sext i32 %72 to i64
  %73 = load i32* %dir, align 4
  %idxprom47 = sext i32 %73 to i64
  %arrayidx48 = getelementptr inbounds [16 x i8**]* @gen_pt, i32 0, i64 %idxprom47
  %74 = load i8*** %arrayidx48, align 8
  %arrayidx49 = getelementptr inbounds i8** %74, i64 %idxprom46
  %75 = load i8** %arrayidx49, align 8
  %76 = bitcast i8* %75 to %struct.su3_matrix*
  %77 = load i32* %i, align 4
  %idxprom50 = sext i32 %77 to i64
  %78 = load %struct.su3_matrix** @diffmatp, align 8
  %arrayidx51 = getelementptr inbounds %struct.su3_matrix* %78, i64 %idxprom50
  call void @su3mat_copy(%struct.su3_matrix* %76, %struct.su3_matrix* %arrayidx51)
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  br label %for.inc52

for.inc52:                                        ; preds = %if.end
  %79 = load i32* %i, align 4
  %inc53 = add nsw i32 %79, 1
  store i32 %inc53, i32* %i, align 4
  %80 = load %struct.site** %s, align 8
  %incdec.ptr = getelementptr inbounds %struct.site* %80, i32 1
  store %struct.site* %incdec.ptr, %struct.site** %s, align 8
  br label %for.cond30

for.end54:                                        ; preds = %cond.end35
  %81 = load i32* %dir, align 4
  %idxprom55 = sext i32 %81 to i64
  %arrayidx56 = getelementptr inbounds [8 x %struct.msg_tag*]* %mtag, i32 0, i64 %idxprom55
  %82 = load %struct.msg_tag** %arrayidx56, align 8
  call void @cleanup_gather(%struct.msg_tag* %82)
  call void (...)* bitcast (void ()* @g_sync to void (...)*)()
  %83 = load i32* @diffmat_offset, align 4
  %cmp57 = icmp sge i32 %83, 0
  br i1 %cmp57, label %if.then59, label %if.else65

if.then59:                                        ; preds = %for.end54
  %84 = load i32* @diffmat_offset, align 4
  %85 = load i32* %dir, align 4
  %86 = load i32* %parity, align 4
  %xor = xor i32 3, %86
  %87 = load i32* %dir, align 4
  %idxprom60 = sext i32 %87 to i64
  %arrayidx61 = getelementptr inbounds [16 x i8**]* @gen_pt, i32 0, i64 %idxprom60
  %88 = load i8*** %arrayidx61, align 8
  %call62 = call %struct.msg_tag* @start_gather(i32 %84, i32 144, i32 %85, i32 %xor, i8** %88)
  %89 = load i32* %dir, align 4
  %idxprom63 = sext i32 %89 to i64
  %arrayidx64 = getelementptr inbounds [8 x %struct.msg_tag*]* %mtag, i32 0, i64 %idxprom63
  store %struct.msg_tag* %call62, %struct.msg_tag** %arrayidx64, align 8
  br label %if.end72

if.else65:                                        ; preds = %for.end54
  %90 = load %struct.su3_matrix** @diffmatp, align 8
  %91 = bitcast %struct.su3_matrix* %90 to i8*
  %92 = load i32* %dir, align 4
  %93 = load i32* %parity, align 4
  %xor66 = xor i32 3, %93
  %94 = load i32* %dir, align 4
  %idxprom67 = sext i32 %94 to i64
  %arrayidx68 = getelementptr inbounds [16 x i8**]* @gen_pt, i32 0, i64 %idxprom67
  %95 = load i8*** %arrayidx68, align 8
  %call69 = call %struct.msg_tag* @start_gather_from_temp(i8* %91, i32 144, i32 %92, i32 %xor66, i8** %95)
  %96 = load i32* %dir, align 4
  %idxprom70 = sext i32 %96 to i64
  %arrayidx71 = getelementptr inbounds [8 x %struct.msg_tag*]* %mtag, i32 0, i64 %idxprom70
  store %struct.msg_tag* %call69, %struct.msg_tag** %arrayidx71, align 8
  br label %if.end72

if.end72:                                         ; preds = %if.else65, %if.then59
  %97 = load i32* %dir, align 4
  %idxprom73 = sext i32 %97 to i64
  %arrayidx74 = getelementptr inbounds [8 x %struct.msg_tag*]* %mtag, i32 0, i64 %idxprom73
  %98 = load %struct.msg_tag** %arrayidx74, align 8
  call void @wait_gather(%struct.msg_tag* %98)
  %99 = load i32* %parity, align 4
  %xor75 = xor i32 3, %99
  %cmp76 = icmp eq i32 %xor75, 1
  br i1 %cmp76, label %cond.true78, label %cond.false79

cond.true78:                                      ; preds = %if.end72
  %100 = load i32* @even_sites_on_node, align 4
  br label %cond.end80

cond.false79:                                     ; preds = %if.end72
  br label %cond.end80

cond.end80:                                       ; preds = %cond.false79, %cond.true78
  %cond81 = phi i32 [ %100, %cond.true78 ], [ 0, %cond.false79 ]
  store i32 %cond81, i32* %i, align 4
  %101 = load i32* %i, align 4
  %idxprom82 = sext i32 %101 to i64
  %102 = load %struct.site** @lattice, align 8
  %arrayidx83 = getelementptr inbounds %struct.site* %102, i64 %idxprom82
  store %struct.site* %arrayidx83, %struct.site** %s, align 8
  br label %for.cond84

for.cond84:                                       ; preds = %for.inc102, %cond.end80
  %103 = load i32* %i, align 4
  %104 = load i32* %parity, align 4
  %xor85 = xor i32 3, %104
  %cmp86 = icmp eq i32 %xor85, 2
  br i1 %cmp86, label %cond.true88, label %cond.false89

cond.true88:                                      ; preds = %for.cond84
  %105 = load i32* @even_sites_on_node, align 4
  br label %cond.end90

cond.false89:                                     ; preds = %for.cond84
  %106 = load i32* @sites_on_node, align 4
  br label %cond.end90

cond.end90:                                       ; preds = %cond.false89, %cond.true88
  %cond91 = phi i32 [ %105, %cond.true88 ], [ %106, %cond.false89 ]
  %cmp92 = icmp slt i32 %103, %cond91
  br i1 %cmp92, label %for.body94, label %for.end105

for.body94:                                       ; preds = %cond.end90
  %107 = load i32* %i, align 4
  %idxprom95 = sext i32 %107 to i64
  %108 = load i32* %dir, align 4
  %idxprom96 = sext i32 %108 to i64
  %arrayidx97 = getelementptr inbounds [16 x i8**]* @gen_pt, i32 0, i64 %idxprom96
  %109 = load i8*** %arrayidx97, align 8
  %arrayidx98 = getelementptr inbounds i8** %109, i64 %idxprom95
  %110 = load i8** %arrayidx98, align 8
  %111 = bitcast i8* %110 to %struct.su3_matrix*
  %112 = load i32* %dir, align 4
  %idxprom99 = sext i32 %112 to i64
  %113 = load %struct.site** %s, align 8
  %link100 = getelementptr inbounds %struct.site* %113, i32 0, i32 8
  %arrayidx101 = getelementptr inbounds [4 x %struct.su3_matrix]* %link100, i32 0, i64 %idxprom99
  call void @su3mat_copy(%struct.su3_matrix* %111, %struct.su3_matrix* %arrayidx101)
  br label %for.inc102

for.inc102:                                       ; preds = %for.body94
  %114 = load i32* %i, align 4
  %inc103 = add nsw i32 %114, 1
  store i32 %inc103, i32* %i, align 4
  %115 = load %struct.site** %s, align 8
  %incdec.ptr104 = getelementptr inbounds %struct.site* %115, i32 1
  store %struct.site* %incdec.ptr104, %struct.site** %s, align 8
  br label %for.cond84

for.end105:                                       ; preds = %cond.end90
  %116 = load i32* %dir, align 4
  %idxprom106 = sext i32 %116 to i64
  %arrayidx107 = getelementptr inbounds [8 x %struct.msg_tag*]* %mtag, i32 0, i64 %idxprom106
  %117 = load %struct.msg_tag** %arrayidx107, align 8
  call void @cleanup_gather(%struct.msg_tag* %117)
  br label %for.inc108

for.inc108:                                       ; preds = %for.end105
  %118 = load i32* %dir, align 4
  %inc109 = add nsw i32 %118, 1
  store i32 %inc109, i32* %dir, align 4
  br label %for.cond22

for.end110:                                       ; preds = %for.cond22
  br label %for.inc111

for.inc111:                                       ; preds = %for.end110
  %119 = load i32* %parity, align 4
  %inc112 = add nsw i32 %119, 1
  store i32 %inc112, i32* %parity, align 4
  br label %for.cond

for.end113:                                       ; preds = %for.cond
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @gaugefixscratch(i32 %diffmat, i32 %sumvec) #0 {
entry:
  %diffmat.addr = alloca i32, align 4
  %sumvec.addr = alloca i32, align 4
  store i32 %diffmat, i32* %diffmat.addr, align 4
  store i32 %sumvec, i32* %sumvec.addr, align 4
  %0 = load i32* %diffmat.addr, align 4
  store i32 %0, i32* @diffmat_offset, align 4
  store %struct.su3_matrix* null, %struct.su3_matrix** @diffmatp, align 8
  %1 = load i32* @diffmat_offset, align 4
  %cmp = icmp slt i32 %1, 0
  br i1 %cmp, label %if.then, label %if.end10

if.then:                                          ; preds = %entry
  %2 = load i32* @sites_on_node, align 4
  %conv = sext i32 %2 to i64
  %call = call noalias i8* @calloc(i64 %conv, i64 144) #2
  %3 = bitcast i8* %call to %struct.su3_matrix*
  store %struct.su3_matrix* %3, %struct.su3_matrix** @diffmatp, align 8
  %4 = load %struct.su3_matrix** @diffmatp, align 8
  %cmp1 = icmp eq %struct.su3_matrix* %4, null
  br i1 %cmp1, label %if.then3, label %if.end9

if.then3:                                         ; preds = %if.then
  %5 = load i32* @this_node, align 4
  %cmp4 = icmp eq i32 %5, 0
  br i1 %cmp4, label %if.then6, label %if.end

if.then6:                                         ; preds = %if.then3
  %call7 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([32 x i8]* @.str111, i32 0, i32 0))
  br label %if.end

if.end:                                           ; preds = %if.then6, %if.then3
  %6 = load %struct._IO_FILE** @stdout, align 8
  %call8 = call i32 @fflush(%struct._IO_FILE* %6)
  call void @terminate(i32 1)
  br label %if.end9

if.end9:                                          ; preds = %if.end, %if.then
  br label %if.end10

if.end10:                                         ; preds = %if.end9, %entry
  %7 = load i32* %sumvec.addr, align 4
  store i32 %7, i32* @sumvec_offset, align 4
  store %struct.su3_vector* null, %struct.su3_vector** @sumvecp, align 8
  %8 = load i32* @sumvec_offset, align 4
  %cmp11 = icmp slt i32 %8, 0
  br i1 %cmp11, label %if.then13, label %if.end26

if.then13:                                        ; preds = %if.end10
  %9 = load i32* @sites_on_node, align 4
  %conv14 = sext i32 %9 to i64
  %call15 = call noalias i8* @calloc(i64 %conv14, i64 48) #2
  %10 = bitcast i8* %call15 to %struct.su3_vector*
  store %struct.su3_vector* %10, %struct.su3_vector** @sumvecp, align 8
  %11 = load %struct.su3_vector** @sumvecp, align 8
  %cmp16 = icmp eq %struct.su3_vector* %11, null
  br i1 %cmp16, label %if.then18, label %if.end25

if.then18:                                        ; preds = %if.then13
  %12 = load i32* @this_node, align 4
  %cmp19 = icmp eq i32 %12, 0
  br i1 %cmp19, label %if.then21, label %if.end23

if.then21:                                        ; preds = %if.then18
  %call22 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([31 x i8]* @.str1112, i32 0, i32 0))
  br label %if.end23

if.end23:                                         ; preds = %if.then21, %if.then18
  %13 = load %struct._IO_FILE** @stdout, align 8
  %call24 = call i32 @fflush(%struct._IO_FILE* %13)
  call void @terminate(i32 1)
  br label %if.end25

if.end25:                                         ; preds = %if.end23, %if.then13
  br label %if.end26

if.end26:                                         ; preds = %if.end25, %if.end10
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @gaugefix(i32 %gauge_dir, double %relax_boost, i32 %max_gauge_iter, double %gauge_fix_tol, i32 %diffmat, i32 %sumvec, i32 %nvector, i32* %vector_offset, i32* %vector_parity, i32 %nantiherm, i32* %antiherm_offset, i32* %antiherm_parity) #0 {
entry:
  %gauge_dir.addr = alloca i32, align 4
  %relax_boost.addr = alloca double, align 8
  %max_gauge_iter.addr = alloca i32, align 4
  %gauge_fix_tol.addr = alloca double, align 8
  %diffmat.addr = alloca i32, align 4
  %sumvec.addr = alloca i32, align 4
  %nvector.addr = alloca i32, align 4
  %vector_offset.addr = alloca i32*, align 8
  %vector_parity.addr = alloca i32*, align 8
  %nantiherm.addr = alloca i32, align 4
  %antiherm_offset.addr = alloca i32*, align 8
  %antiherm_parity.addr = alloca i32*, align 8
  %gauge_iter = alloca i32, align 4
  %current_av = alloca double, align 8
  %old_av = alloca double, align 8
  %del_av = alloca double, align 8
  store i32 %gauge_dir, i32* %gauge_dir.addr, align 4
  store double %relax_boost, double* %relax_boost.addr, align 8
  store i32 %max_gauge_iter, i32* %max_gauge_iter.addr, align 4
  store double %gauge_fix_tol, double* %gauge_fix_tol.addr, align 8
  store i32 %diffmat, i32* %diffmat.addr, align 4
  store i32 %sumvec, i32* %sumvec.addr, align 4
  store i32 %nvector, i32* %nvector.addr, align 4
  store i32* %vector_offset, i32** %vector_offset.addr, align 8
  store i32* %vector_parity, i32** %vector_parity.addr, align 8
  store i32 %nantiherm, i32* %nantiherm.addr, align 4
  store i32* %antiherm_offset, i32** %antiherm_offset.addr, align 8
  store i32* %antiherm_parity, i32** %antiherm_parity.addr, align 8
  %0 = load i32* %diffmat.addr, align 4
  %1 = load i32* %sumvec.addr, align 4
  call void @gaugefixscratch(i32 %0, i32 %1)
  store i32 0, i32* %gauge_iter, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %2 = load i32* %gauge_iter, align 4
  %3 = load i32* %max_gauge_iter.addr, align 4
  %cmp = icmp slt i32 %2, %3
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %4 = load i32* %gauge_dir.addr, align 4
  %5 = load double* %relax_boost.addr, align 8
  %6 = load i32* %nvector.addr, align 4
  %7 = load i32** %vector_offset.addr, align 8
  %8 = load i32** %vector_parity.addr, align 8
  %9 = load i32* %nantiherm.addr, align 4
  %10 = load i32** %antiherm_offset.addr, align 8
  %11 = load i32** %antiherm_parity.addr, align 8
  call void @gaugefixstep(i32 %4, double* %current_av, double %5, i32 %6, i32* %7, i32* %8, i32 %9, i32* %10, i32* %11)
  %12 = load i32* %gauge_iter, align 4
  %cmp1 = icmp ne i32 %12, 0
  br i1 %cmp1, label %if.then, label %if.end4

if.then:                                          ; preds = %for.body
  %13 = load double* %current_av, align 8
  %14 = load double* %old_av, align 8
  %sub = fsub double %13, %14
  store double %sub, double* %del_av, align 8
  %15 = load double* %del_av, align 8
  %call = call double @fabs(double %15) #8
  %16 = load double* %gauge_fix_tol.addr, align 8
  %cmp2 = fcmp olt double %call, %16
  br i1 %cmp2, label %if.then3, label %if.end

if.then3:                                         ; preds = %if.then
  br label %for.end

if.end:                                           ; preds = %if.then
  br label %if.end4

if.end4:                                          ; preds = %if.end, %for.body
  %17 = load double* %current_av, align 8
  store double %17, double* %old_av, align 8
  %18 = load i32* %gauge_iter, align 4
  %rem = srem i32 %18, 20
  %cmp5 = icmp eq i32 %rem, 19
  br i1 %cmp5, label %if.then6, label %if.end7

if.then6:                                         ; preds = %if.end4
  call void @reunitarize()
  br label %if.end7

if.end7:                                          ; preds = %if.then6, %if.end4
  br label %for.inc

for.inc:                                          ; preds = %if.end7
  %19 = load i32* %gauge_iter, align 4
  %inc = add nsw i32 %19, 1
  store i32 %inc, i32* %gauge_iter, align 4
  br label %for.cond

for.end:                                          ; preds = %if.then3, %for.cond
  %20 = load i32* %gauge_iter, align 4
  %rem8 = srem i32 %20, 20
  %cmp9 = icmp ne i32 %rem8, 0
  br i1 %cmp9, label %if.then10, label %if.end11

if.then10:                                        ; preds = %for.end
  call void @reunitarize()
  br label %if.end11

if.end11:                                         ; preds = %if.then10, %for.end
  %21 = load i32* @diffmat_offset, align 4
  %cmp12 = icmp slt i32 %21, 0
  br i1 %cmp12, label %if.then13, label %if.end14

if.then13:                                        ; preds = %if.end11
  %22 = load %struct.su3_matrix** @diffmatp, align 8
  %23 = bitcast %struct.su3_matrix* %22 to i8*
  call void @free(i8* %23) #2
  br label %if.end14

if.end14:                                         ; preds = %if.then13, %if.end11
  %24 = load i32* @sumvec_offset, align 4
  %cmp15 = icmp slt i32 %24, 0
  br i1 %cmp15, label %if.then16, label %if.end17

if.then16:                                        ; preds = %if.end14
  %25 = load %struct.su3_vector** @sumvecp, align 8
  %26 = bitcast %struct.su3_vector* %25 to i8*
  call void @free(i8* %26) #2
  br label %if.end17

if.end17:                                         ; preds = %if.then16, %if.end14
  %27 = load i32* @this_node, align 4
  %cmp18 = icmp eq i32 %27, 0
  br i1 %cmp18, label %if.then19, label %if.end21

if.then19:                                        ; preds = %if.end17
  %28 = load i32* %gauge_iter, align 4
  %29 = load double* %current_av, align 8
  %30 = load double* %del_av, align 8
  %call20 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([55 x i8]* @.str2113, i32 0, i32 0), i32 %28, double %29, double %30)
  br label %if.end21

if.end21:                                         ; preds = %if.then19, %if.end17
  ret void
}

; Function Attrs: nounwind uwtable
define internal %struct.gauge_file* @save_lattice(i32 %flag, i8* %filename) #0 {
entry:
  %flag.addr = alloca i32, align 4
  %filename.addr = alloca i8*, align 8
  %dtime = alloca double, align 8
  %gf = alloca %struct.gauge_file*, align 8
  %ssplaq = alloca double, align 8
  %stplaq = alloca double, align 8
  store i32 %flag, i32* %flag.addr, align 4
  store i8* %filename, i8** %filename.addr, align 8
  %call = call double (...)* bitcast (double ()* @dclock to double (...)*)()
  %sub = fsub double -0.000000e+00, %call
  store double %sub, double* %dtime, align 8
  %0 = load i32* %flag.addr, align 4
  switch i32 %0, label %sw.default [
    i32 20, label %sw.bb
    i32 21, label %sw.bb1
    i32 22, label %sw.bb3
    i32 28, label %sw.bb5
    i32 23, label %sw.bb7
    i32 30, label %sw.bb9
    i32 31, label %sw.bb11
  ]

sw.bb:                                            ; preds = %entry
  store %struct.gauge_file* null, %struct.gauge_file** %gf, align 8
  br label %sw.epilog

sw.bb1:                                           ; preds = %entry
  %1 = load i8** %filename.addr, align 8
  %call2 = call %struct.gauge_file* @save_ascii(i8* %1)
  store %struct.gauge_file* %call2, %struct.gauge_file** %gf, align 8
  br label %sw.epilog

sw.bb3:                                           ; preds = %entry
  %2 = load i8** %filename.addr, align 8
  %call4 = call %struct.gauge_file* @save_serial(i8* %2)
  store %struct.gauge_file* %call4, %struct.gauge_file** %gf, align 8
  br label %sw.epilog

sw.bb5:                                           ; preds = %entry
  %3 = load i8** %filename.addr, align 8
  %call6 = call %struct.gauge_file* @save_parallel(i8* %3)
  store %struct.gauge_file* %call6, %struct.gauge_file** %gf, align 8
  br label %sw.epilog

sw.bb7:                                           ; preds = %entry
  %4 = load i8** %filename.addr, align 8
  %call8 = call %struct.gauge_file* @save_checkpoint(i8* %4)
  store %struct.gauge_file* %call8, %struct.gauge_file** %gf, align 8
  br label %sw.epilog

sw.bb9:                                           ; preds = %entry
  %5 = load i8** %filename.addr, align 8
  %call10 = call %struct.gauge_file* @save_serial_archive(i8* %5)
  store %struct.gauge_file* %call10, %struct.gauge_file** %gf, align 8
  br label %sw.epilog

sw.bb11:                                          ; preds = %entry
  %6 = load i8** %filename.addr, align 8
  %call12 = call %struct.gauge_file* @save_parallel_archive(i8* %6)
  store %struct.gauge_file* %call12, %struct.gauge_file** %gf, align 8
  br label %sw.epilog

sw.default:                                       ; preds = %entry
  %call13 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([54 x i8]* @.str114, i32 0, i32 0))
  call void @terminate(i32 1)
  br label %sw.epilog

sw.epilog:                                        ; preds = %sw.default, %sw.bb11, %sw.bb9, %sw.bb7, %sw.bb5, %sw.bb3, %sw.bb1, %sw.bb
  %call14 = call double (...)* bitcast (double ()* @dclock to double (...)*)()
  %7 = load double* %dtime, align 8
  %add = fadd double %7, %call14
  store double %add, double* %dtime, align 8
  %8 = load i32* %flag.addr, align 4
  %cmp = icmp ne i32 %8, 20
  br i1 %cmp, label %if.then, label %if.end18

if.then:                                          ; preds = %sw.epilog
  %9 = load i32* @this_node, align 4
  %cmp15 = icmp eq i32 %9, 0
  br i1 %cmp15, label %if.then16, label %if.end

if.then16:                                        ; preds = %if.then
  %10 = load double* %dtime, align 8
  %call17 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([19 x i8]* @.str1115, i32 0, i32 0), double %10)
  br label %if.end

if.end:                                           ; preds = %if.then16, %if.then
  br label %if.end18

if.end18:                                         ; preds = %if.end, %sw.epilog
  call void @d_plaquette(double* %ssplaq, double* %stplaq)
  %11 = load i32* @this_node, align 4
  %cmp19 = icmp eq i32 %11, 0
  br i1 %cmp19, label %if.then20, label %if.end22

if.then20:                                        ; preds = %if.end18
  %12 = load double* %ssplaq, align 8
  %13 = load double* %stplaq, align 8
  %call21 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([19 x i8]* @.str2116, i32 0, i32 0), double %12, double %13)
  br label %if.end22

if.end22:                                         ; preds = %if.then20, %if.end18
  %14 = load %struct.gauge_file** %gf, align 8
  ret %struct.gauge_file* %14
}

; Function Attrs: nounwind uwtable
define internal %struct.gauge_file* @reload_lattice(i32 %flag, i8* %filename) #0 {
entry:
  %flag.addr = alloca i32, align 4
  %filename.addr = alloca i8*, align 8
  %dtime = alloca double, align 8
  %gf = alloca %struct.gauge_file*, align 8
  %ssplaq = alloca double, align 8
  %stplaq = alloca double, align 8
  %max_deviation = alloca double, align 8
  store i32 %flag, i32* %flag.addr, align 4
  store i8* %filename, i8** %filename.addr, align 8
  %call = call double (...)* bitcast (double ()* @dclock to double (...)*)()
  %sub = fsub double -0.000000e+00, %call
  store double %sub, double* %dtime, align 8
  %0 = load i32* %flag.addr, align 4
  switch i32 %0, label %sw.default [
    i32 10, label %sw.bb
    i32 11, label %sw.bb1
    i32 12, label %sw.bb2
    i32 13, label %sw.bb4
    i32 19, label %sw.bb6
  ]

sw.bb:                                            ; preds = %entry
  store %struct.gauge_file* null, %struct.gauge_file** %gf, align 8
  br label %sw.epilog

sw.bb1:                                           ; preds = %entry
  call void @coldlat()
  store %struct.gauge_file* null, %struct.gauge_file** %gf, align 8
  br label %sw.epilog

sw.bb2:                                           ; preds = %entry
  %1 = load i8** %filename.addr, align 8
  %call3 = call %struct.gauge_file* @restore_ascii(i8* %1)
  store %struct.gauge_file* %call3, %struct.gauge_file** %gf, align 8
  br label %sw.epilog

sw.bb4:                                           ; preds = %entry
  %2 = load i8** %filename.addr, align 8
  %call5 = call %struct.gauge_file* @restore_serial(i8* %2)
  store %struct.gauge_file* %call5, %struct.gauge_file** %gf, align 8
  br label %sw.epilog

sw.bb6:                                           ; preds = %entry
  %3 = load i8** %filename.addr, align 8
  %call7 = call %struct.gauge_file* @restore_parallel(i8* %3)
  store %struct.gauge_file* %call7, %struct.gauge_file** %gf, align 8
  br label %sw.epilog

sw.default:                                       ; preds = %entry
  %4 = load i32* @this_node, align 4
  %cmp = icmp eq i32 %4, 0
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %sw.default
  %5 = load i32* %flag.addr, align 4
  %call8 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([34 x i8]* @.str3117, i32 0, i32 0), i32 %5)
  br label %if.end

if.end:                                           ; preds = %if.then, %sw.default
  call void @terminate(i32 1)
  br label %sw.epilog

sw.epilog:                                        ; preds = %if.end, %sw.bb6, %sw.bb4, %sw.bb2, %sw.bb1, %sw.bb
  %call9 = call double (...)* bitcast (double ()* @dclock to double (...)*)()
  %6 = load double* %dtime, align 8
  %add = fadd double %6, %call9
  store double %add, double* %dtime, align 8
  %7 = load i32* %flag.addr, align 4
  %cmp10 = icmp ne i32 %7, 11
  br i1 %cmp10, label %land.lhs.true, label %if.end17

land.lhs.true:                                    ; preds = %sw.epilog
  %8 = load i32* %flag.addr, align 4
  %cmp11 = icmp ne i32 %8, 10
  br i1 %cmp11, label %if.then12, label %if.end17

if.then12:                                        ; preds = %land.lhs.true
  %9 = load i32* @this_node, align 4
  %cmp13 = icmp eq i32 %9, 0
  br i1 %cmp13, label %if.then14, label %if.end16

if.then14:                                        ; preds = %if.then12
  %10 = load double* %dtime, align 8
  %call15 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([41 x i8]* @.str4118, i32 0, i32 0), double %10)
  br label %if.end16

if.end16:                                         ; preds = %if.then14, %if.then12
  br label %if.end17

if.end17:                                         ; preds = %if.end16, %land.lhs.true, %sw.epilog
  call void @d_plaquette(double* %ssplaq, double* %stplaq)
  %11 = load i32* @this_node, align 4
  %cmp18 = icmp eq i32 %11, 0
  br i1 %cmp18, label %if.then19, label %if.end22

if.then19:                                        ; preds = %if.end17
  %12 = load double* %ssplaq, align 8
  %13 = load double* %stplaq, align 8
  %call20 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([19 x i8]* @.str2116, i32 0, i32 0), double %12, double %13)
  %14 = load %struct._IO_FILE** @stdout, align 8
  %call21 = call i32 @fflush(%struct._IO_FILE* %14)
  br label %if.end22

if.end22:                                         ; preds = %if.then19, %if.end17
  %call23 = call double (...)* bitcast (double ()* @dclock to double (...)*)()
  %sub24 = fsub double -0.000000e+00, %call23
  store double %sub24, double* %dtime, align 8
  %call25 = call double @check_unitarity()
  store double %call25, double* %max_deviation, align 8
  call void @g_doublemax(double* %max_deviation)
  %call26 = call double (...)* bitcast (double ()* @dclock to double (...)*)()
  %15 = load double* %dtime, align 8
  %add27 = fadd double %15, %call26
  store double %add27, double* %dtime, align 8
  %16 = load i32* @this_node, align 4
  %cmp28 = icmp eq i32 %16, 0
  br i1 %cmp28, label %if.then29, label %if.end31

if.then29:                                        ; preds = %if.end22
  %17 = load double* %max_deviation, align 8
  %call30 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([40 x i8]* @.str5119, i32 0, i32 0), double %17)
  br label %if.end31

if.end31:                                         ; preds = %if.then29, %if.end22
  %18 = load %struct._IO_FILE** @stdout, align 8
  %call32 = call i32 @fflush(%struct._IO_FILE* %18)
  %19 = load %struct.gauge_file** %gf, align 8
  ret %struct.gauge_file* %19
}

; Function Attrs: nounwind uwtable
define internal i32 @ask_starting_lattice(i32 %prompt, i32* %flag, i8* %filename) #0 {
entry:
  %retval = alloca i32, align 4
  %prompt.addr = alloca i32, align 4
  %flag.addr = alloca i32*, align 8
  %filename.addr = alloca i8*, align 8
  %savebuf = alloca [256 x i8], align 16
  %status = alloca i32, align 4
  store i32 %prompt, i32* %prompt.addr, align 4
  store i32* %flag, i32** %flag.addr, align 8
  store i8* %filename, i8** %filename.addr, align 8
  %0 = load i32* %prompt.addr, align 4
  %cmp = icmp ne i32 %0, 0
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %call = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([82 x i8]* @.str6120, i32 0, i32 0))
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %arraydecay = getelementptr inbounds [256 x i8]* %savebuf, i32 0, i32 0
  %call1 = call i32 (i8*, ...)* @__isoc99_scanf(i8* getelementptr inbounds ([3 x i8]* @.str7121, i32 0, i32 0), i8* %arraydecay)
  store i32 %call1, i32* %status, align 4
  %1 = load i32* %status, align 4
  %cmp2 = icmp ne i32 %1, 1
  br i1 %cmp2, label %if.then3, label %if.end5

if.then3:                                         ; preds = %if.end
  %call4 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([64 x i8]* @.str8122, i32 0, i32 0))
  store i32 1, i32* %retval
  br label %return

if.end5:                                          ; preds = %if.end
  %arraydecay6 = getelementptr inbounds [256 x i8]* %savebuf, i32 0, i32 0
  %call7 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([4 x i8]* @.str9123, i32 0, i32 0), i8* %arraydecay6)
  %arraydecay8 = getelementptr inbounds [256 x i8]* %savebuf, i32 0, i32 0
  %call9 = call i32 @strcmp(i8* getelementptr inbounds ([6 x i8]* @.str10124, i32 0, i32 0), i8* %arraydecay8) #9
  %cmp10 = icmp eq i32 %call9, 0
  br i1 %cmp10, label %if.then11, label %if.else

if.then11:                                        ; preds = %if.end5
  %2 = load i32** %flag.addr, align 8
  store i32 11, i32* %2, align 4
  %call12 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([2 x i8]* @.str11125, i32 0, i32 0))
  br label %if.end40

if.else:                                          ; preds = %if.end5
  %arraydecay13 = getelementptr inbounds [256 x i8]* %savebuf, i32 0, i32 0
  %call14 = call i32 @strcmp(i8* getelementptr inbounds ([9 x i8]* @.str12126, i32 0, i32 0), i8* %arraydecay13) #9
  %cmp15 = icmp eq i32 %call14, 0
  br i1 %cmp15, label %if.then16, label %if.else18

if.then16:                                        ; preds = %if.else
  %3 = load i32** %flag.addr, align 8
  store i32 10, i32* %3, align 4
  %call17 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([2 x i8]* @.str11125, i32 0, i32 0))
  br label %if.end39

if.else18:                                        ; preds = %if.else
  %arraydecay19 = getelementptr inbounds [256 x i8]* %savebuf, i32 0, i32 0
  %call20 = call i32 @strcmp(i8* getelementptr inbounds ([13 x i8]* @.str13127, i32 0, i32 0), i8* %arraydecay19) #9
  %cmp21 = icmp eq i32 %call20, 0
  br i1 %cmp21, label %if.then22, label %if.else23

if.then22:                                        ; preds = %if.else18
  %4 = load i32** %flag.addr, align 8
  store i32 12, i32* %4, align 4
  br label %if.end38

if.else23:                                        ; preds = %if.else18
  %arraydecay24 = getelementptr inbounds [256 x i8]* %savebuf, i32 0, i32 0
  %call25 = call i32 @strcmp(i8* getelementptr inbounds ([14 x i8]* @.str14128, i32 0, i32 0), i8* %arraydecay24) #9
  %cmp26 = icmp eq i32 %call25, 0
  br i1 %cmp26, label %if.then27, label %if.else28

if.then27:                                        ; preds = %if.else23
  %5 = load i32** %flag.addr, align 8
  store i32 13, i32* %5, align 4
  br label %if.end37

if.else28:                                        ; preds = %if.else23
  %arraydecay29 = getelementptr inbounds [256 x i8]* %savebuf, i32 0, i32 0
  %call30 = call i32 @strcmp(i8* getelementptr inbounds ([16 x i8]* @.str15129, i32 0, i32 0), i8* %arraydecay29) #9
  %cmp31 = icmp eq i32 %call30, 0
  br i1 %cmp31, label %if.then32, label %if.else33

if.then32:                                        ; preds = %if.else28
  %6 = load i32** %flag.addr, align 8
  store i32 19, i32* %6, align 4
  br label %if.end36

if.else33:                                        ; preds = %if.else28
  %arraydecay34 = getelementptr inbounds [256 x i8]* %savebuf, i32 0, i32 0
  %call35 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([69 x i8]* @.str16130, i32 0, i32 0), i8* %arraydecay34)
  store i32 1, i32* %retval
  br label %return

if.end36:                                         ; preds = %if.then32
  br label %if.end37

if.end37:                                         ; preds = %if.end36, %if.then27
  br label %if.end38

if.end38:                                         ; preds = %if.end37, %if.then22
  br label %if.end39

if.end39:                                         ; preds = %if.end38, %if.then16
  br label %if.end40

if.end40:                                         ; preds = %if.end39, %if.then11
  %7 = load i32** %flag.addr, align 8
  %8 = load i32* %7, align 4
  %cmp41 = icmp ne i32 %8, 11
  br i1 %cmp41, label %land.lhs.true, label %if.end54

land.lhs.true:                                    ; preds = %if.end40
  %9 = load i32** %flag.addr, align 8
  %10 = load i32* %9, align 4
  %cmp42 = icmp ne i32 %10, 10
  br i1 %cmp42, label %if.then43, label %if.end54

if.then43:                                        ; preds = %land.lhs.true
  %11 = load i32* %prompt.addr, align 4
  %cmp44 = icmp ne i32 %11, 0
  br i1 %cmp44, label %if.then45, label %if.end47

if.then45:                                        ; preds = %if.then43
  %call46 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([39 x i8]* @.str17131, i32 0, i32 0))
  br label %if.end47

if.end47:                                         ; preds = %if.then45, %if.then43
  %12 = load i8** %filename.addr, align 8
  %call48 = call i32 (i8*, ...)* @__isoc99_scanf(i8* getelementptr inbounds ([3 x i8]* @.str7121, i32 0, i32 0), i8* %12)
  store i32 %call48, i32* %status, align 4
  %13 = load i32* %status, align 4
  %cmp49 = icmp ne i32 %13, 1
  br i1 %cmp49, label %if.then50, label %if.end52

if.then50:                                        ; preds = %if.end47
  %call51 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([54 x i8]* @.str18132, i32 0, i32 0))
  store i32 1, i32* %retval
  br label %return

if.end52:                                         ; preds = %if.end47
  %14 = load i8** %filename.addr, align 8
  %call53 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([4 x i8]* @.str19133, i32 0, i32 0), i8* %14)
  br label %if.end54

if.end54:                                         ; preds = %if.end52, %land.lhs.true, %if.end40
  store i32 0, i32* %retval
  br label %return

return:                                           ; preds = %if.end54, %if.then50, %if.else33, %if.then3
  %15 = load i32* %retval
  ret i32 %15
}

declare i32 @__isoc99_scanf(i8*, ...) #1

; Function Attrs: nounwind readonly
declare i32 @strcmp(i8*, i8*) #6

; Function Attrs: nounwind uwtable
define internal i32 @ask_ending_lattice(i32 %prompt, i32* %flag, i8* %filename) #0 {
entry:
  %retval = alloca i32, align 4
  %prompt.addr = alloca i32, align 4
  %flag.addr = alloca i32*, align 8
  %filename.addr = alloca i8*, align 8
  %savebuf = alloca [256 x i8], align 16
  %status = alloca i32, align 4
  store i32 %prompt, i32* %prompt.addr, align 4
  store i32* %flag, i32** %flag.addr, align 8
  store i8* %filename, i8** %filename.addr, align 8
  %0 = load i32* %prompt.addr, align 4
  %cmp = icmp ne i32 %0, 0
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %call = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([142 x i8]* @.str20134, i32 0, i32 0))
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %arraydecay = getelementptr inbounds [256 x i8]* %savebuf, i32 0, i32 0
  %call1 = call i32 (i8*, ...)* @__isoc99_scanf(i8* getelementptr inbounds ([3 x i8]* @.str7121, i32 0, i32 0), i8* %arraydecay)
  store i32 %call1, i32* %status, align 4
  %1 = load i32* %status, align 4
  %cmp2 = icmp ne i32 %1, 1
  br i1 %cmp2, label %if.then3, label %if.end5

if.then3:                                         ; preds = %if.end
  %call4 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([60 x i8]* @.str21135, i32 0, i32 0))
  store i32 1, i32* %retval
  br label %return

if.end5:                                          ; preds = %if.end
  %arraydecay6 = getelementptr inbounds [256 x i8]* %savebuf, i32 0, i32 0
  %call7 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([4 x i8]* @.str9123, i32 0, i32 0), i8* %arraydecay6)
  %arraydecay8 = getelementptr inbounds [256 x i8]* %savebuf, i32 0, i32 0
  %call9 = call i32 @strcmp(i8* getelementptr inbounds ([11 x i8]* @.str22136, i32 0, i32 0), i8* %arraydecay8) #9
  %cmp10 = icmp eq i32 %call9, 0
  br i1 %cmp10, label %if.then11, label %if.else

if.then11:                                        ; preds = %if.end5
  %2 = load i32** %flag.addr, align 8
  store i32 21, i32* %2, align 4
  br label %if.end51

if.else:                                          ; preds = %if.end5
  %arraydecay12 = getelementptr inbounds [256 x i8]* %savebuf, i32 0, i32 0
  %call13 = call i32 @strcmp(i8* getelementptr inbounds ([12 x i8]* @.str23137, i32 0, i32 0), i8* %arraydecay12) #9
  %cmp14 = icmp eq i32 %call13, 0
  br i1 %cmp14, label %if.then15, label %if.else16

if.then15:                                        ; preds = %if.else
  %3 = load i32** %flag.addr, align 8
  store i32 22, i32* %3, align 4
  br label %if.end50

if.else16:                                        ; preds = %if.else
  %arraydecay17 = getelementptr inbounds [256 x i8]* %savebuf, i32 0, i32 0
  %call18 = call i32 @strcmp(i8* getelementptr inbounds ([14 x i8]* @.str24138, i32 0, i32 0), i8* %arraydecay17) #9
  %cmp19 = icmp eq i32 %call18, 0
  br i1 %cmp19, label %if.then20, label %if.else21

if.then20:                                        ; preds = %if.else16
  %4 = load i32** %flag.addr, align 8
  store i32 28, i32* %4, align 4
  br label %if.end49

if.else21:                                        ; preds = %if.else16
  %arraydecay22 = getelementptr inbounds [256 x i8]* %savebuf, i32 0, i32 0
  %call23 = call i32 @strcmp(i8* getelementptr inbounds ([16 x i8]* @.str25139, i32 0, i32 0), i8* %arraydecay22) #9
  %cmp24 = icmp eq i32 %call23, 0
  br i1 %cmp24, label %if.then25, label %if.else26

if.then25:                                        ; preds = %if.else21
  %5 = load i32** %flag.addr, align 8
  store i32 23, i32* %5, align 4
  br label %if.end48

if.else26:                                        ; preds = %if.else21
  %arraydecay27 = getelementptr inbounds [256 x i8]* %savebuf, i32 0, i32 0
  %call28 = call i32 @strcmp(i8* getelementptr inbounds ([20 x i8]* @.str26140, i32 0, i32 0), i8* %arraydecay27) #9
  %cmp29 = icmp eq i32 %call28, 0
  br i1 %cmp29, label %if.then30, label %if.else31

if.then30:                                        ; preds = %if.else26
  %6 = load i32** %flag.addr, align 8
  store i32 30, i32* %6, align 4
  br label %if.end47

if.else31:                                        ; preds = %if.else26
  %arraydecay32 = getelementptr inbounds [256 x i8]* %savebuf, i32 0, i32 0
  %call33 = call i32 @strcmp(i8* getelementptr inbounds ([22 x i8]* @.str27141, i32 0, i32 0), i8* %arraydecay32) #9
  %cmp34 = icmp eq i32 %call33, 0
  br i1 %cmp34, label %if.then35, label %if.else36

if.then35:                                        ; preds = %if.else31
  %7 = load i32** %flag.addr, align 8
  store i32 31, i32* %7, align 4
  br label %if.end46

if.else36:                                        ; preds = %if.else31
  %arraydecay37 = getelementptr inbounds [256 x i8]* %savebuf, i32 0, i32 0
  %call38 = call i32 @strcmp(i8* getelementptr inbounds ([7 x i8]* @.str28142, i32 0, i32 0), i8* %arraydecay37) #9
  %cmp39 = icmp eq i32 %call38, 0
  br i1 %cmp39, label %if.then40, label %if.else42

if.then40:                                        ; preds = %if.else36
  %8 = load i32** %flag.addr, align 8
  store i32 20, i32* %8, align 4
  %call41 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([2 x i8]* @.str11125, i32 0, i32 0))
  br label %if.end45

if.else42:                                        ; preds = %if.else36
  %arraydecay43 = getelementptr inbounds [256 x i8]* %savebuf, i32 0, i32 0
  %call44 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([70 x i8]* @.str29143, i32 0, i32 0), i8* %arraydecay43)
  store i32 1, i32* %retval
  br label %return

if.end45:                                         ; preds = %if.then40
  br label %if.end46

if.end46:                                         ; preds = %if.end45, %if.then35
  br label %if.end47

if.end47:                                         ; preds = %if.end46, %if.then30
  br label %if.end48

if.end48:                                         ; preds = %if.end47, %if.then25
  br label %if.end49

if.end49:                                         ; preds = %if.end48, %if.then20
  br label %if.end50

if.end50:                                         ; preds = %if.end49, %if.then15
  br label %if.end51

if.end51:                                         ; preds = %if.end50, %if.then11
  %9 = load i32** %flag.addr, align 8
  %10 = load i32* %9, align 4
  %cmp52 = icmp ne i32 %10, 20
  br i1 %cmp52, label %if.then53, label %if.end64

if.then53:                                        ; preds = %if.end51
  %11 = load i32* %prompt.addr, align 4
  %cmp54 = icmp ne i32 %11, 0
  br i1 %cmp54, label %if.then55, label %if.end57

if.then55:                                        ; preds = %if.then53
  %call56 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([16 x i8]* @.str30144, i32 0, i32 0))
  br label %if.end57

if.end57:                                         ; preds = %if.then55, %if.then53
  %12 = load i8** %filename.addr, align 8
  %call58 = call i32 (i8*, ...)* @__isoc99_scanf(i8* getelementptr inbounds ([3 x i8]* @.str7121, i32 0, i32 0), i8* %12)
  store i32 %call58, i32* %status, align 4
  %13 = load i32* %status, align 4
  %cmp59 = icmp ne i32 %13, 1
  br i1 %cmp59, label %if.then60, label %if.end62

if.then60:                                        ; preds = %if.end57
  %call61 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([51 x i8]* @.str31145, i32 0, i32 0))
  store i32 1, i32* %retval
  br label %return

if.end62:                                         ; preds = %if.end57
  %14 = load i8** %filename.addr, align 8
  %call63 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([4 x i8]* @.str19133, i32 0, i32 0), i8* %14)
  br label %if.end64

if.end64:                                         ; preds = %if.end62, %if.end51
  store i32 0, i32* %retval
  br label %return

return:                                           ; preds = %if.end64, %if.then60, %if.else42, %if.then3
  %15 = load i32* %retval
  ret i32 %15
}

; Function Attrs: nounwind uwtable
define internal void @coldlat() #0 {
entry:
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %k = alloca i32, align 4
  %dir = alloca i32, align 4
  %sit = alloca %struct.site*, align 8
  %coerce = alloca %struct.complex, align 8
  %coerce24 = alloca %struct.complex, align 8
  store i32 0, i32* %i, align 4
  %0 = load %struct.site** @lattice, align 8
  store %struct.site* %0, %struct.site** %sit, align 8
  br label %for.cond

for.cond:                                         ; preds = %for.inc31, %entry
  %1 = load i32* %i, align 4
  %2 = load i32* @sites_on_node, align 4
  %cmp = icmp slt i32 %1, %2
  br i1 %cmp, label %for.body, label %for.end33

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %dir, align 4
  br label %for.cond1

for.cond1:                                        ; preds = %for.inc28, %for.body
  %3 = load i32* %dir, align 4
  %cmp2 = icmp sle i32 %3, 3
  br i1 %cmp2, label %for.body3, label %for.end30

for.body3:                                        ; preds = %for.cond1
  store i32 0, i32* %j, align 4
  br label %for.cond4

for.cond4:                                        ; preds = %for.inc25, %for.body3
  %4 = load i32* %j, align 4
  %cmp5 = icmp slt i32 %4, 3
  br i1 %cmp5, label %for.body6, label %for.end27

for.body6:                                        ; preds = %for.cond4
  store i32 0, i32* %k, align 4
  br label %for.cond7

for.cond7:                                        ; preds = %for.inc, %for.body6
  %5 = load i32* %k, align 4
  %cmp8 = icmp slt i32 %5, 3
  br i1 %cmp8, label %for.body9, label %for.end

for.body9:                                        ; preds = %for.cond7
  %6 = load i32* %j, align 4
  %7 = load i32* %k, align 4
  %cmp10 = icmp ne i32 %6, %7
  br i1 %cmp10, label %if.then, label %if.else

if.then:                                          ; preds = %for.body9
  %8 = load i32* %k, align 4
  %idxprom = sext i32 %8 to i64
  %9 = load i32* %j, align 4
  %idxprom11 = sext i32 %9 to i64
  %10 = load i32* %dir, align 4
  %idxprom12 = sext i32 %10 to i64
  %11 = load %struct.site** %sit, align 8
  %link = getelementptr inbounds %struct.site* %11, i32 0, i32 8
  %arrayidx = getelementptr inbounds [4 x %struct.su3_matrix]* %link, i32 0, i64 %idxprom12
  %e = getelementptr inbounds %struct.su3_matrix* %arrayidx, i32 0, i32 0
  %arrayidx13 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e, i32 0, i64 %idxprom11
  %arrayidx14 = getelementptr inbounds [3 x %struct.complex]* %arrayidx13, i32 0, i64 %idxprom
  %call = call { double, double } @cmplx(double 0.000000e+00, double 0.000000e+00)
  %12 = bitcast %struct.complex* %coerce to { double, double }*
  %13 = getelementptr { double, double }* %12, i32 0, i32 0
  %14 = extractvalue { double, double } %call, 0
  store double %14, double* %13, align 1
  %15 = getelementptr { double, double }* %12, i32 0, i32 1
  %16 = extractvalue { double, double } %call, 1
  store double %16, double* %15, align 1
  %17 = bitcast %struct.complex* %arrayidx14 to i8*
  %18 = bitcast %struct.complex* %coerce to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %17, i8* %18, i64 16, i32 8, i1 false)
  br label %if.end

if.else:                                          ; preds = %for.body9
  %19 = load i32* %k, align 4
  %idxprom15 = sext i32 %19 to i64
  %20 = load i32* %j, align 4
  %idxprom16 = sext i32 %20 to i64
  %21 = load i32* %dir, align 4
  %idxprom17 = sext i32 %21 to i64
  %22 = load %struct.site** %sit, align 8
  %link18 = getelementptr inbounds %struct.site* %22, i32 0, i32 8
  %arrayidx19 = getelementptr inbounds [4 x %struct.su3_matrix]* %link18, i32 0, i64 %idxprom17
  %e20 = getelementptr inbounds %struct.su3_matrix* %arrayidx19, i32 0, i32 0
  %arrayidx21 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e20, i32 0, i64 %idxprom16
  %arrayidx22 = getelementptr inbounds [3 x %struct.complex]* %arrayidx21, i32 0, i64 %idxprom15
  %call23 = call { double, double } @cmplx(double 1.000000e+00, double 0.000000e+00)
  %23 = bitcast %struct.complex* %coerce24 to { double, double }*
  %24 = getelementptr { double, double }* %23, i32 0, i32 0
  %25 = extractvalue { double, double } %call23, 0
  store double %25, double* %24, align 1
  %26 = getelementptr { double, double }* %23, i32 0, i32 1
  %27 = extractvalue { double, double } %call23, 1
  store double %27, double* %26, align 1
  %28 = bitcast %struct.complex* %arrayidx22 to i8*
  %29 = bitcast %struct.complex* %coerce24 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %28, i8* %29, i64 16, i32 8, i1 false)
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  br label %for.inc

for.inc:                                          ; preds = %if.end
  %30 = load i32* %k, align 4
  %inc = add nsw i32 %30, 1
  store i32 %inc, i32* %k, align 4
  br label %for.cond7

for.end:                                          ; preds = %for.cond7
  br label %for.inc25

for.inc25:                                        ; preds = %for.end
  %31 = load i32* %j, align 4
  %inc26 = add nsw i32 %31, 1
  store i32 %inc26, i32* %j, align 4
  br label %for.cond4

for.end27:                                        ; preds = %for.cond4
  br label %for.inc28

for.inc28:                                        ; preds = %for.end27
  %32 = load i32* %dir, align 4
  %inc29 = add nsw i32 %32, 1
  store i32 %inc29, i32* %dir, align 4
  br label %for.cond1

for.end30:                                        ; preds = %for.cond1
  br label %for.inc31

for.inc31:                                        ; preds = %for.end30
  %33 = load i32* %i, align 4
  %inc32 = add nsw i32 %33, 1
  store i32 %inc32, i32* %i, align 4
  %34 = load %struct.site** %sit, align 8
  %incdec.ptr = getelementptr inbounds %struct.site* %34, i32 1
  store %struct.site* %incdec.ptr, %struct.site** %sit, align 8
  br label %for.cond

for.end33:                                        ; preds = %for.cond
  %35 = load i32* @this_node, align 4
  %cmp34 = icmp eq i32 %35, 0
  br i1 %cmp34, label %if.then35, label %if.end37

if.then35:                                        ; preds = %for.end33
  %call36 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([33 x i8]* @.str32146, i32 0, i32 0))
  br label %if.end37

if.end37:                                         ; preds = %if.then35, %for.end33
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @funnylat() #0 {
entry:
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %k = alloca i32, align 4
  %dir = alloca i32, align 4
  %sit = alloca %struct.site*, align 8
  %coerce = alloca %struct.complex, align 8
  store i32 0, i32* %i, align 4
  %0 = load %struct.site** @lattice, align 8
  store %struct.site* %0, %struct.site** %sit, align 8
  br label %for.cond

for.cond:                                         ; preds = %for.inc72, %entry
  %1 = load i32* %i, align 4
  %2 = load i32* @sites_on_node, align 4
  %cmp = icmp slt i32 %1, %2
  br i1 %cmp, label %for.body, label %for.end74

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %dir, align 4
  br label %for.cond1

for.cond1:                                        ; preds = %for.inc69, %for.body
  %3 = load i32* %dir, align 4
  %cmp2 = icmp sle i32 %3, 3
  br i1 %cmp2, label %for.body3, label %for.end71

for.body3:                                        ; preds = %for.cond1
  store i32 0, i32* %j, align 4
  br label %for.cond4

for.cond4:                                        ; preds = %for.inc14, %for.body3
  %4 = load i32* %j, align 4
  %cmp5 = icmp slt i32 %4, 3
  br i1 %cmp5, label %for.body6, label %for.end16

for.body6:                                        ; preds = %for.cond4
  store i32 0, i32* %k, align 4
  br label %for.cond7

for.cond7:                                        ; preds = %for.inc, %for.body6
  %5 = load i32* %k, align 4
  %cmp8 = icmp slt i32 %5, 3
  br i1 %cmp8, label %for.body9, label %for.end

for.body9:                                        ; preds = %for.cond7
  %6 = load i32* %k, align 4
  %idxprom = sext i32 %6 to i64
  %7 = load i32* %j, align 4
  %idxprom10 = sext i32 %7 to i64
  %8 = load i32* %dir, align 4
  %idxprom11 = sext i32 %8 to i64
  %9 = load %struct.site** %sit, align 8
  %link = getelementptr inbounds %struct.site* %9, i32 0, i32 8
  %arrayidx = getelementptr inbounds [4 x %struct.su3_matrix]* %link, i32 0, i64 %idxprom11
  %e = getelementptr inbounds %struct.su3_matrix* %arrayidx, i32 0, i32 0
  %arrayidx12 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e, i32 0, i64 %idxprom10
  %arrayidx13 = getelementptr inbounds [3 x %struct.complex]* %arrayidx12, i32 0, i64 %idxprom
  %call = call { double, double } @cmplx(double 0.000000e+00, double 0.000000e+00)
  %10 = bitcast %struct.complex* %coerce to { double, double }*
  %11 = getelementptr { double, double }* %10, i32 0, i32 0
  %12 = extractvalue { double, double } %call, 0
  store double %12, double* %11, align 1
  %13 = getelementptr { double, double }* %10, i32 0, i32 1
  %14 = extractvalue { double, double } %call, 1
  store double %14, double* %13, align 1
  %15 = bitcast %struct.complex* %arrayidx13 to i8*
  %16 = bitcast %struct.complex* %coerce to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %15, i8* %16, i64 16, i32 8, i1 false)
  br label %for.inc

for.inc:                                          ; preds = %for.body9
  %17 = load i32* %k, align 4
  %inc = add nsw i32 %17, 1
  store i32 %inc, i32* %k, align 4
  br label %for.cond7

for.end:                                          ; preds = %for.cond7
  br label %for.inc14

for.inc14:                                        ; preds = %for.end
  %18 = load i32* %j, align 4
  %inc15 = add nsw i32 %18, 1
  store i32 %inc15, i32* %j, align 4
  br label %for.cond4

for.end16:                                        ; preds = %for.cond4
  %19 = load i32* %dir, align 4
  %conv = sitofp i32 %19 to double
  %20 = load i32* %dir, align 4
  %idxprom17 = sext i32 %20 to i64
  %21 = load %struct.site** %sit, align 8
  %link18 = getelementptr inbounds %struct.site* %21, i32 0, i32 8
  %arrayidx19 = getelementptr inbounds [4 x %struct.su3_matrix]* %link18, i32 0, i64 %idxprom17
  %e20 = getelementptr inbounds %struct.su3_matrix* %arrayidx19, i32 0, i32 0
  %arrayidx21 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e20, i32 0, i64 0
  %arrayidx22 = getelementptr inbounds [3 x %struct.complex]* %arrayidx21, i32 0, i64 0
  %real = getelementptr inbounds %struct.complex* %arrayidx22, i32 0, i32 0
  store double %conv, double* %real, align 8
  %22 = load %struct.site** %sit, align 8
  %x = getelementptr inbounds %struct.site* %22, i32 0, i32 0
  %23 = load i16* %x, align 2
  %conv23 = sext i16 %23 to i32
  %mul = mul nsw i32 10, %conv23
  %conv24 = sitofp i32 %mul to double
  %24 = load i32* %dir, align 4
  %idxprom25 = sext i32 %24 to i64
  %25 = load %struct.site** %sit, align 8
  %link26 = getelementptr inbounds %struct.site* %25, i32 0, i32 8
  %arrayidx27 = getelementptr inbounds [4 x %struct.su3_matrix]* %link26, i32 0, i64 %idxprom25
  %e28 = getelementptr inbounds %struct.su3_matrix* %arrayidx27, i32 0, i32 0
  %arrayidx29 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e28, i32 0, i64 1
  %arrayidx30 = getelementptr inbounds [3 x %struct.complex]* %arrayidx29, i32 0, i64 1
  %real31 = getelementptr inbounds %struct.complex* %arrayidx30, i32 0, i32 0
  store double %conv24, double* %real31, align 8
  %26 = load %struct.site** %sit, align 8
  %y = getelementptr inbounds %struct.site* %26, i32 0, i32 1
  %27 = load i16* %y, align 2
  %conv32 = sext i16 %27 to i32
  %mul33 = mul nsw i32 100, %conv32
  %conv34 = sitofp i32 %mul33 to double
  %28 = load i32* %dir, align 4
  %idxprom35 = sext i32 %28 to i64
  %29 = load %struct.site** %sit, align 8
  %link36 = getelementptr inbounds %struct.site* %29, i32 0, i32 8
  %arrayidx37 = getelementptr inbounds [4 x %struct.su3_matrix]* %link36, i32 0, i64 %idxprom35
  %e38 = getelementptr inbounds %struct.su3_matrix* %arrayidx37, i32 0, i32 0
  %arrayidx39 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e38, i32 0, i64 2
  %arrayidx40 = getelementptr inbounds [3 x %struct.complex]* %arrayidx39, i32 0, i64 2
  %real41 = getelementptr inbounds %struct.complex* %arrayidx40, i32 0, i32 0
  store double %conv34, double* %real41, align 8
  %30 = load i32* %dir, align 4
  %conv42 = sitofp i32 %30 to double
  %31 = load i32* %dir, align 4
  %idxprom43 = sext i32 %31 to i64
  %32 = load %struct.site** %sit, align 8
  %link44 = getelementptr inbounds %struct.site* %32, i32 0, i32 8
  %arrayidx45 = getelementptr inbounds [4 x %struct.su3_matrix]* %link44, i32 0, i64 %idxprom43
  %e46 = getelementptr inbounds %struct.su3_matrix* %arrayidx45, i32 0, i32 0
  %arrayidx47 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e46, i32 0, i64 0
  %arrayidx48 = getelementptr inbounds [3 x %struct.complex]* %arrayidx47, i32 0, i64 0
  %imag = getelementptr inbounds %struct.complex* %arrayidx48, i32 0, i32 1
  store double %conv42, double* %imag, align 8
  %33 = load %struct.site** %sit, align 8
  %z = getelementptr inbounds %struct.site* %33, i32 0, i32 2
  %34 = load i16* %z, align 2
  %conv49 = sext i16 %34 to i32
  %mul50 = mul nsw i32 10, %conv49
  %conv51 = sitofp i32 %mul50 to double
  %35 = load i32* %dir, align 4
  %idxprom52 = sext i32 %35 to i64
  %36 = load %struct.site** %sit, align 8
  %link53 = getelementptr inbounds %struct.site* %36, i32 0, i32 8
  %arrayidx54 = getelementptr inbounds [4 x %struct.su3_matrix]* %link53, i32 0, i64 %idxprom52
  %e55 = getelementptr inbounds %struct.su3_matrix* %arrayidx54, i32 0, i32 0
  %arrayidx56 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e55, i32 0, i64 1
  %arrayidx57 = getelementptr inbounds [3 x %struct.complex]* %arrayidx56, i32 0, i64 1
  %imag58 = getelementptr inbounds %struct.complex* %arrayidx57, i32 0, i32 1
  store double %conv51, double* %imag58, align 8
  %37 = load %struct.site** %sit, align 8
  %t = getelementptr inbounds %struct.site* %37, i32 0, i32 3
  %38 = load i16* %t, align 2
  %conv59 = sext i16 %38 to i32
  %mul60 = mul nsw i32 100, %conv59
  %conv61 = sitofp i32 %mul60 to double
  %39 = load i32* %dir, align 4
  %idxprom62 = sext i32 %39 to i64
  %40 = load %struct.site** %sit, align 8
  %link63 = getelementptr inbounds %struct.site* %40, i32 0, i32 8
  %arrayidx64 = getelementptr inbounds [4 x %struct.su3_matrix]* %link63, i32 0, i64 %idxprom62
  %e65 = getelementptr inbounds %struct.su3_matrix* %arrayidx64, i32 0, i32 0
  %arrayidx66 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e65, i32 0, i64 2
  %arrayidx67 = getelementptr inbounds [3 x %struct.complex]* %arrayidx66, i32 0, i64 2
  %imag68 = getelementptr inbounds %struct.complex* %arrayidx67, i32 0, i32 1
  store double %conv61, double* %imag68, align 8
  br label %for.inc69

for.inc69:                                        ; preds = %for.end16
  %41 = load i32* %dir, align 4
  %inc70 = add nsw i32 %41, 1
  store i32 %inc70, i32* %dir, align 4
  br label %for.cond1

for.end71:                                        ; preds = %for.cond1
  br label %for.inc72

for.inc72:                                        ; preds = %for.end71
  %42 = load i32* %i, align 4
  %inc73 = add nsw i32 %42, 1
  store i32 %inc73, i32* %i, align 4
  %43 = load %struct.site** %sit, align 8
  %incdec.ptr = getelementptr inbounds %struct.site* %43, i32 1
  store %struct.site* %incdec.ptr, %struct.site** %sit, align 8
  br label %for.cond

for.end74:                                        ; preds = %for.cond
  ret void
}

; Function Attrs: nounwind uwtable
define internal i32 @get_f(i32 %prompt, i8* %variable_name_string, double* %value) #0 {
entry:
  %retval = alloca i32, align 4
  %prompt.addr = alloca i32, align 4
  %variable_name_string.addr = alloca i8*, align 8
  %value.addr = alloca double*, align 8
  %s = alloca i32, align 4
  %checkname = alloca [80 x i8], align 16
  store i32 %prompt, i32* %prompt.addr, align 4
  store i8* %variable_name_string, i8** %variable_name_string.addr, align 8
  store double* %value, double** %value.addr, align 8
  %0 = load i32* %prompt.addr, align 4
  %tobool = icmp ne i32 %0, 0
  br i1 %tobool, label %if.then, label %if.else8

if.then:                                          ; preds = %entry
  store i32 0, i32* %s, align 4
  br label %while.cond

while.cond:                                       ; preds = %if.end, %if.then
  %1 = load i32* %s, align 4
  %cmp = icmp ne i32 %1, 1
  br i1 %cmp, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  %2 = load i8** %variable_name_string.addr, align 8
  %call = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([10 x i8]* @.str33147, i32 0, i32 0), i8* %2)
  %arraydecay = getelementptr inbounds [80 x i8]* %checkname, i32 0, i32 0
  %call1 = call i32 (i8*, ...)* @__isoc99_scanf(i8* getelementptr inbounds ([3 x i8]* @.str7121, i32 0, i32 0), i8* %arraydecay)
  %arraydecay2 = getelementptr inbounds [80 x i8]* %checkname, i32 0, i32 0
  %3 = load double** %value.addr, align 8
  %call3 = call i32 (i8*, i8*, ...)* @__isoc99_sscanf(i8* %arraydecay2, i8* getelementptr inbounds ([4 x i8]* @.str34148, i32 0, i32 0), double* %3) #2
  store i32 %call3, i32* %s, align 4
  %4 = load i32* %s, align 4
  %cmp4 = icmp eq i32 %4, 1
  br i1 %cmp4, label %if.then5, label %if.else

if.then5:                                         ; preds = %while.body
  %5 = load i8** %variable_name_string.addr, align 8
  %6 = load double** %value.addr, align 8
  %7 = load double* %6, align 8
  %call6 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([7 x i8]* @.str35149, i32 0, i32 0), i8* %5, double %7)
  br label %if.end

if.else:                                          ; preds = %while.body
  %call7 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([20 x i8]* @.str36150, i32 0, i32 0))
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then5
  br label %while.cond

while.end:                                        ; preds = %while.cond
  br label %if.end40

if.else8:                                         ; preds = %entry
  %arraydecay9 = getelementptr inbounds [80 x i8]* %checkname, i32 0, i32 0
  %call10 = call i32 (i8*, ...)* @__isoc99_scanf(i8* getelementptr inbounds ([3 x i8]* @.str7121, i32 0, i32 0), i8* %arraydecay9)
  store i32 %call10, i32* %s, align 4
  %8 = load i32* %s, align 4
  %cmp11 = icmp eq i32 %8, -1
  br i1 %cmp11, label %if.then12, label %if.else14

if.then12:                                        ; preds = %if.else8
  %9 = load i8** %variable_name_string.addr, align 8
  %call13 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([41 x i8]* @.str37151, i32 0, i32 0), i8* %9)
  store i32 1, i32* %retval
  br label %return

if.else14:                                        ; preds = %if.else8
  %10 = load i32* %s, align 4
  %cmp15 = icmp eq i32 %10, 0
  br i1 %cmp15, label %if.then16, label %if.else18

if.then16:                                        ; preds = %if.else14
  %11 = load i8** %variable_name_string.addr, align 8
  %call17 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([36 x i8]* @.str38152, i32 0, i32 0), i8* %11)
  store i32 1, i32* %retval
  br label %return

if.else18:                                        ; preds = %if.else14
  %arraydecay19 = getelementptr inbounds [80 x i8]* %checkname, i32 0, i32 0
  %12 = load i8** %variable_name_string.addr, align 8
  %call20 = call i32 @strcmp(i8* %arraydecay19, i8* %12) #9
  %cmp21 = icmp ne i32 %call20, 0
  br i1 %cmp21, label %if.then22, label %if.end25

if.then22:                                        ; preds = %if.else18
  %13 = load i8** %variable_name_string.addr, align 8
  %arraydecay23 = getelementptr inbounds [80 x i8]* %checkname, i32 0, i32 0
  %call24 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([49 x i8]* @.str39153, i32 0, i32 0), i8* %13, i8* %arraydecay23)
  store i32 1, i32* %retval
  br label %return

if.end25:                                         ; preds = %if.else18
  br label %if.end26

if.end26:                                         ; preds = %if.end25
  br label %if.end27

if.end27:                                         ; preds = %if.end26
  %14 = load i8** %variable_name_string.addr, align 8
  %call28 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([4 x i8]* @.str9123, i32 0, i32 0), i8* %14)
  %15 = load double** %value.addr, align 8
  %call29 = call i32 (i8*, ...)* @__isoc99_scanf(i8* getelementptr inbounds ([4 x i8]* @.str34148, i32 0, i32 0), double* %15)
  store i32 %call29, i32* %s, align 4
  %16 = load i32* %s, align 4
  %cmp30 = icmp eq i32 %16, -1
  br i1 %cmp30, label %if.then31, label %if.else33

if.then31:                                        ; preds = %if.end27
  %17 = load i8** %variable_name_string.addr, align 8
  %call32 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([47 x i8]* @.str40154, i32 0, i32 0), i8* %17)
  store i32 1, i32* %retval
  br label %return

if.else33:                                        ; preds = %if.end27
  %18 = load i32* %s, align 4
  %cmp34 = icmp eq i32 %18, 0
  br i1 %cmp34, label %if.then35, label %if.end37

if.then35:                                        ; preds = %if.else33
  %19 = load i8** %variable_name_string.addr, align 8
  %call36 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([43 x i8]* @.str41, i32 0, i32 0), i8* %19)
  store i32 1, i32* %retval
  br label %return

if.end37:                                         ; preds = %if.else33
  br label %if.end38

if.end38:                                         ; preds = %if.end37
  %20 = load double** %value.addr, align 8
  %21 = load double* %20, align 8
  %call39 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([4 x i8]* @.str42, i32 0, i32 0), double %21)
  br label %if.end40

if.end40:                                         ; preds = %if.end38, %while.end
  store i32 0, i32* %retval
  br label %return

return:                                           ; preds = %if.end40, %if.then35, %if.then31, %if.then22, %if.then16, %if.then12
  %22 = load i32* %retval
  ret i32 %22
}

; Function Attrs: nounwind
declare i32 @__isoc99_sscanf(i8*, i8*, ...) #3

; Function Attrs: nounwind uwtable
define internal i32 @get_i(i32 %prompt, i8* %variable_name_string, i32* %value) #0 {
entry:
  %retval = alloca i32, align 4
  %prompt.addr = alloca i32, align 4
  %variable_name_string.addr = alloca i8*, align 8
  %value.addr = alloca i32*, align 8
  %s = alloca i32, align 4
  %checkname = alloca [80 x i8], align 16
  store i32 %prompt, i32* %prompt.addr, align 4
  store i8* %variable_name_string, i8** %variable_name_string.addr, align 8
  store i32* %value, i32** %value.addr, align 8
  %0 = load i32* %prompt.addr, align 4
  %tobool = icmp ne i32 %0, 0
  br i1 %tobool, label %if.then, label %if.else8

if.then:                                          ; preds = %entry
  store i32 0, i32* %s, align 4
  br label %while.cond

while.cond:                                       ; preds = %if.end, %if.then
  %1 = load i32* %s, align 4
  %cmp = icmp ne i32 %1, 1
  br i1 %cmp, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  %2 = load i8** %variable_name_string.addr, align 8
  %call = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([10 x i8]* @.str33147, i32 0, i32 0), i8* %2)
  %arraydecay = getelementptr inbounds [80 x i8]* %checkname, i32 0, i32 0
  %call1 = call i32 (i8*, ...)* @__isoc99_scanf(i8* getelementptr inbounds ([3 x i8]* @.str7121, i32 0, i32 0), i8* %arraydecay)
  %arraydecay2 = getelementptr inbounds [80 x i8]* %checkname, i32 0, i32 0
  %3 = load i32** %value.addr, align 8
  %call3 = call i32 (i8*, i8*, ...)* @__isoc99_sscanf(i8* %arraydecay2, i8* getelementptr inbounds ([3 x i8]* @.str43, i32 0, i32 0), i32* %3) #2
  store i32 %call3, i32* %s, align 4
  %4 = load i32* %s, align 4
  %cmp4 = icmp eq i32 %4, 1
  br i1 %cmp4, label %if.then5, label %if.else

if.then5:                                         ; preds = %while.body
  %5 = load i8** %variable_name_string.addr, align 8
  %6 = load i32** %value.addr, align 8
  %7 = load i32* %6, align 4
  %call6 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([7 x i8]* @.str44155, i32 0, i32 0), i8* %5, i32 %7)
  br label %if.end

if.else:                                          ; preds = %while.body
  %call7 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([20 x i8]* @.str36150, i32 0, i32 0))
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then5
  br label %while.cond

while.end:                                        ; preds = %while.cond
  br label %if.end40

if.else8:                                         ; preds = %entry
  %arraydecay9 = getelementptr inbounds [80 x i8]* %checkname, i32 0, i32 0
  %call10 = call i32 (i8*, ...)* @__isoc99_scanf(i8* getelementptr inbounds ([3 x i8]* @.str7121, i32 0, i32 0), i8* %arraydecay9)
  store i32 %call10, i32* %s, align 4
  %8 = load i32* %s, align 4
  %cmp11 = icmp eq i32 %8, -1
  br i1 %cmp11, label %if.then12, label %if.else14

if.then12:                                        ; preds = %if.else8
  %9 = load i8** %variable_name_string.addr, align 8
  %call13 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([41 x i8]* @.str45, i32 0, i32 0), i8* %9)
  store i32 1, i32* %retval
  br label %return

if.else14:                                        ; preds = %if.else8
  %10 = load i32* %s, align 4
  %cmp15 = icmp eq i32 %10, 0
  br i1 %cmp15, label %if.then16, label %if.else18

if.then16:                                        ; preds = %if.else14
  %11 = load i8** %variable_name_string.addr, align 8
  %call17 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([36 x i8]* @.str46, i32 0, i32 0), i8* %11)
  store i32 1, i32* %retval
  br label %return

if.else18:                                        ; preds = %if.else14
  %arraydecay19 = getelementptr inbounds [80 x i8]* %checkname, i32 0, i32 0
  %12 = load i8** %variable_name_string.addr, align 8
  %call20 = call i32 @strcmp(i8* %arraydecay19, i8* %12) #9
  %cmp21 = icmp ne i32 %call20, 0
  br i1 %cmp21, label %if.then22, label %if.end25

if.then22:                                        ; preds = %if.else18
  %13 = load i8** %variable_name_string.addr, align 8
  %arraydecay23 = getelementptr inbounds [80 x i8]* %checkname, i32 0, i32 0
  %call24 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([49 x i8]* @.str47, i32 0, i32 0), i8* %13, i8* %arraydecay23)
  store i32 1, i32* %retval
  br label %return

if.end25:                                         ; preds = %if.else18
  br label %if.end26

if.end26:                                         ; preds = %if.end25
  br label %if.end27

if.end27:                                         ; preds = %if.end26
  %14 = load i8** %variable_name_string.addr, align 8
  %call28 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([4 x i8]* @.str9123, i32 0, i32 0), i8* %14)
  %15 = load i32** %value.addr, align 8
  %call29 = call i32 (i8*, ...)* @__isoc99_scanf(i8* getelementptr inbounds ([3 x i8]* @.str43, i32 0, i32 0), i32* %15)
  store i32 %call29, i32* %s, align 4
  %16 = load i32* %s, align 4
  %cmp30 = icmp eq i32 %16, -1
  br i1 %cmp30, label %if.then31, label %if.else33

if.then31:                                        ; preds = %if.end27
  %17 = load i8** %variable_name_string.addr, align 8
  %call32 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([47 x i8]* @.str48, i32 0, i32 0), i8* %17)
  store i32 1, i32* %retval
  br label %return

if.else33:                                        ; preds = %if.end27
  %18 = load i32* %s, align 4
  %cmp34 = icmp eq i32 %18, 0
  br i1 %cmp34, label %if.then35, label %if.end37

if.then35:                                        ; preds = %if.else33
  %19 = load i8** %variable_name_string.addr, align 8
  %call36 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([43 x i8]* @.str49, i32 0, i32 0), i8* %19)
  store i32 1, i32* %retval
  br label %return

if.end37:                                         ; preds = %if.else33
  br label %if.end38

if.end38:                                         ; preds = %if.end37
  %20 = load i32** %value.addr, align 8
  %21 = load i32* %20, align 4
  %call39 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([4 x i8]* @.str50, i32 0, i32 0), i32 %21)
  br label %if.end40

if.end40:                                         ; preds = %if.end38, %while.end
  store i32 0, i32* %retval
  br label %return

return:                                           ; preds = %if.end40, %if.then35, %if.then31, %if.then22, %if.then16, %if.then12
  %22 = load i32* %retval
  ret i32 %22
}

; Function Attrs: nounwind uwtable
define internal i32 @get_s(i32 %prompt, i8* %variable_name_string, i8* %value) #0 {
entry:
  %retval = alloca i32, align 4
  %prompt.addr = alloca i32, align 4
  %variable_name_string.addr = alloca i8*, align 8
  %value.addr = alloca i8*, align 8
  %s = alloca i32, align 4
  %checkname = alloca [80 x i8], align 16
  store i32 %prompt, i32* %prompt.addr, align 4
  store i8* %variable_name_string, i8** %variable_name_string.addr, align 8
  store i8* %value, i8** %value.addr, align 8
  %0 = load i32* %prompt.addr, align 4
  %tobool = icmp ne i32 %0, 0
  br i1 %tobool, label %if.then, label %if.else6

if.then:                                          ; preds = %entry
  store i32 0, i32* %s, align 4
  br label %while.cond

while.cond:                                       ; preds = %if.end, %if.then
  %1 = load i32* %s, align 4
  %cmp = icmp ne i32 %1, 1
  br i1 %cmp, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  %2 = load i8** %variable_name_string.addr, align 8
  %call = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([10 x i8]* @.str33147, i32 0, i32 0), i8* %2)
  %3 = load i8** %value.addr, align 8
  %call1 = call i32 (i8*, ...)* @__isoc99_scanf(i8* getelementptr inbounds ([3 x i8]* @.str7121, i32 0, i32 0), i8* %3)
  store i32 %call1, i32* %s, align 4
  %4 = load i32* %s, align 4
  %cmp2 = icmp eq i32 %4, 1
  br i1 %cmp2, label %if.then3, label %if.else

if.then3:                                         ; preds = %while.body
  %5 = load i8** %variable_name_string.addr, align 8
  %6 = load i8** %value.addr, align 8
  %call4 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([7 x i8]* @.str51, i32 0, i32 0), i8* %5, i8* %6)
  br label %if.end

if.else:                                          ; preds = %while.body
  %call5 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([20 x i8]* @.str36150, i32 0, i32 0))
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then3
  br label %while.cond

while.end:                                        ; preds = %while.cond
  br label %if.end37

if.else6:                                         ; preds = %entry
  %arraydecay = getelementptr inbounds [80 x i8]* %checkname, i32 0, i32 0
  %call7 = call i32 (i8*, ...)* @__isoc99_scanf(i8* getelementptr inbounds ([3 x i8]* @.str7121, i32 0, i32 0), i8* %arraydecay)
  store i32 %call7, i32* %s, align 4
  %7 = load i32* %s, align 4
  %cmp8 = icmp eq i32 %7, -1
  br i1 %cmp8, label %if.then9, label %if.else11

if.then9:                                         ; preds = %if.else6
  %8 = load i8** %variable_name_string.addr, align 8
  %call10 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([41 x i8]* @.str52, i32 0, i32 0), i8* %8)
  store i32 1, i32* %retval
  br label %return

if.else11:                                        ; preds = %if.else6
  %9 = load i32* %s, align 4
  %cmp12 = icmp eq i32 %9, 0
  br i1 %cmp12, label %if.then13, label %if.else15

if.then13:                                        ; preds = %if.else11
  %10 = load i8** %variable_name_string.addr, align 8
  %call14 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([36 x i8]* @.str53, i32 0, i32 0), i8* %10)
  store i32 1, i32* %retval
  br label %return

if.else15:                                        ; preds = %if.else11
  %arraydecay16 = getelementptr inbounds [80 x i8]* %checkname, i32 0, i32 0
  %11 = load i8** %variable_name_string.addr, align 8
  %call17 = call i32 @strcmp(i8* %arraydecay16, i8* %11) #9
  %cmp18 = icmp ne i32 %call17, 0
  br i1 %cmp18, label %if.then19, label %if.end22

if.then19:                                        ; preds = %if.else15
  %12 = load i8** %variable_name_string.addr, align 8
  %arraydecay20 = getelementptr inbounds [80 x i8]* %checkname, i32 0, i32 0
  %call21 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([49 x i8]* @.str54, i32 0, i32 0), i8* %12, i8* %arraydecay20)
  store i32 1, i32* %retval
  br label %return

if.end22:                                         ; preds = %if.else15
  br label %if.end23

if.end23:                                         ; preds = %if.end22
  br label %if.end24

if.end24:                                         ; preds = %if.end23
  %13 = load i8** %variable_name_string.addr, align 8
  %call25 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([4 x i8]* @.str9123, i32 0, i32 0), i8* %13)
  %14 = load i8** %value.addr, align 8
  %call26 = call i32 (i8*, ...)* @__isoc99_scanf(i8* getelementptr inbounds ([3 x i8]* @.str7121, i32 0, i32 0), i8* %14)
  store i32 %call26, i32* %s, align 4
  %15 = load i32* %s, align 4
  %cmp27 = icmp eq i32 %15, -1
  br i1 %cmp27, label %if.then28, label %if.else30

if.then28:                                        ; preds = %if.end24
  %16 = load i8** %variable_name_string.addr, align 8
  %call29 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([47 x i8]* @.str55, i32 0, i32 0), i8* %16)
  store i32 1, i32* %retval
  br label %return

if.else30:                                        ; preds = %if.end24
  %17 = load i32* %s, align 4
  %cmp31 = icmp eq i32 %17, 0
  br i1 %cmp31, label %if.then32, label %if.end34

if.then32:                                        ; preds = %if.else30
  %18 = load i8** %variable_name_string.addr, align 8
  %call33 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([43 x i8]* @.str56, i32 0, i32 0), i8* %18)
  store i32 1, i32* %retval
  br label %return

if.end34:                                         ; preds = %if.else30
  br label %if.end35

if.end35:                                         ; preds = %if.end34
  %19 = load i8** %value.addr, align 8
  %call36 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([4 x i8]* @.str19133, i32 0, i32 0), i8* %19)
  br label %if.end37

if.end37:                                         ; preds = %if.end35, %while.end
  store i32 0, i32* %retval
  br label %return

return:                                           ; preds = %if.end37, %if.then32, %if.then28, %if.then19, %if.then13, %if.then9
  %20 = load i32* %retval
  ret i32 %20
}

; Function Attrs: nounwind uwtable
define internal i32 @get_prompt(i32* %prompt) #0 {
entry:
  %retval = alloca i32, align 4
  %prompt.addr = alloca i32*, align 8
  %initial_prompt = alloca [80 x i8], align 16
  store i32* %prompt, i32** %prompt.addr, align 8
  %0 = load i32** %prompt.addr, align 8
  store i32 -1, i32* %0, align 4
  %call = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([41 x i8]* @.str57156, i32 0, i32 0))
  %arraydecay = getelementptr inbounds [80 x i8]* %initial_prompt, i32 0, i32 0
  %call1 = call i32 (i8*, ...)* @__isoc99_scanf(i8* getelementptr inbounds ([3 x i8]* @.str7121, i32 0, i32 0), i8* %arraydecay)
  %arraydecay2 = getelementptr inbounds [80 x i8]* %initial_prompt, i32 0, i32 0
  %call3 = call i32 @strcmp(i8* %arraydecay2, i8* getelementptr inbounds ([7 x i8]* @.str58, i32 0, i32 0)) #9
  %cmp = icmp eq i32 %call3, 0
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  %1 = load i32** %prompt.addr, align 8
  %call4 = call i32 (i8*, ...)* @__isoc99_scanf(i8* getelementptr inbounds ([3 x i8]* @.str43, i32 0, i32 0), i32* %1)
  br label %if.end15

if.else:                                          ; preds = %entry
  %arraydecay5 = getelementptr inbounds [80 x i8]* %initial_prompt, i32 0, i32 0
  %call6 = call i32 @strcmp(i8* %arraydecay5, i8* getelementptr inbounds ([2 x i8]* @.str59, i32 0, i32 0)) #9
  %cmp7 = icmp eq i32 %call6, 0
  br i1 %cmp7, label %if.then8, label %if.else9

if.then8:                                         ; preds = %if.else
  %2 = load i32** %prompt.addr, align 8
  store i32 0, i32* %2, align 4
  br label %if.end14

if.else9:                                         ; preds = %if.else
  %arraydecay10 = getelementptr inbounds [80 x i8]* %initial_prompt, i32 0, i32 0
  %call11 = call i32 @strcmp(i8* %arraydecay10, i8* getelementptr inbounds ([2 x i8]* @.str60, i32 0, i32 0)) #9
  %cmp12 = icmp eq i32 %call11, 0
  br i1 %cmp12, label %if.then13, label %if.end

if.then13:                                        ; preds = %if.else9
  %3 = load i32** %prompt.addr, align 8
  store i32 1, i32* %3, align 4
  br label %if.end

if.end:                                           ; preds = %if.then13, %if.else9
  br label %if.end14

if.end14:                                         ; preds = %if.end, %if.then8
  br label %if.end15

if.end15:                                         ; preds = %if.end14, %if.then
  %4 = load i32** %prompt.addr, align 8
  %5 = load i32* %4, align 4
  %cmp16 = icmp eq i32 %5, 0
  br i1 %cmp16, label %if.then18, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.end15
  %6 = load i32** %prompt.addr, align 8
  %7 = load i32* %6, align 4
  %cmp17 = icmp eq i32 %7, 1
  br i1 %cmp17, label %if.then18, label %if.else19

if.then18:                                        ; preds = %lor.lhs.false, %if.end15
  store i32 0, i32* %retval
  br label %return

if.else19:                                        ; preds = %lor.lhs.false
  %call20 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([44 x i8]* @.str61, i32 0, i32 0))
  store i32 1, i32* %retval
  br label %return

return:                                           ; preds = %if.else19, %if.then18
  %8 = load i32* %retval
  ret i32 %8
}

; Function Attrs: nounwind uwtable
define internal i32 @qcdhdr_get_str(i8* %s, %struct.QCDheader* %hdr, i8** %q) #0 {
entry:
  %retval = alloca i32, align 4
  %s.addr = alloca i8*, align 8
  %hdr.addr = alloca %struct.QCDheader*, align 8
  %q.addr = alloca i8**, align 8
  %i = alloca i32, align 4
  store i8* %s, i8** %s.addr, align 8
  store %struct.QCDheader* %hdr, %struct.QCDheader** %hdr.addr, align 8
  store i8** %q, i8*** %q.addr, align 8
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32* %i, align 4
  %1 = load %struct.QCDheader** %hdr.addr, align 8
  %ntoken = getelementptr inbounds %struct.QCDheader* %1, i32 0, i32 0
  %2 = load i32* %ntoken, align 4
  %conv = trunc i32 %2 to i8
  %conv1 = sext i8 %conv to i32
  %cmp = icmp slt i32 %0, %conv1
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %3 = load i8** %s.addr, align 8
  %4 = load i32* %i, align 4
  %idxprom = sext i32 %4 to i64
  %5 = load %struct.QCDheader** %hdr.addr, align 8
  %token = getelementptr inbounds %struct.QCDheader* %5, i32 0, i32 1
  %6 = load i8*** %token, align 8
  %arrayidx = getelementptr inbounds i8** %6, i64 %idxprom
  %7 = load i8** %arrayidx, align 8
  %call = call i32 @strcmp(i8* %3, i8* %7) #9
  %cmp3 = icmp eq i32 %call, 0
  br i1 %cmp3, label %if.then, label %if.end

if.then:                                          ; preds = %for.body
  %8 = load i32* %i, align 4
  %idxprom5 = sext i32 %8 to i64
  %9 = load %struct.QCDheader** %hdr.addr, align 8
  %value = getelementptr inbounds %struct.QCDheader* %9, i32 0, i32 2
  %10 = load i8*** %value, align 8
  %arrayidx6 = getelementptr inbounds i8** %10, i64 %idxprom5
  %11 = load i8** %arrayidx6, align 8
  %12 = load i8*** %q.addr, align 8
  store i8* %11, i8** %12, align 8
  store i32 0, i32* %retval
  br label %return

if.end:                                           ; preds = %for.body
  br label %for.inc

for.inc:                                          ; preds = %if.end
  %13 = load i32* %i, align 4
  %inc = add nsw i32 %13, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %14 = load i8*** %q.addr, align 8
  store i8* null, i8** %14, align 8
  store i32 -1, i32* %retval
  br label %return

return:                                           ; preds = %for.end, %if.then
  %15 = load i32* %retval
  ret i32 %15
}

; Function Attrs: nounwind uwtable
define internal i32 @qcdhdr_get_int(i8* %s, %struct.QCDheader* %hdr, i32* %q) #0 {
entry:
  %retval = alloca i32, align 4
  %s.addr = alloca i8*, align 8
  %hdr.addr = alloca %struct.QCDheader*, align 8
  %q.addr = alloca i32*, align 8
  %p = alloca i8*, align 8
  store i8* %s, i8** %s.addr, align 8
  store %struct.QCDheader* %hdr, %struct.QCDheader** %hdr.addr, align 8
  store i32* %q, i32** %q.addr, align 8
  %0 = load i8** %s.addr, align 8
  %1 = load %struct.QCDheader** %hdr.addr, align 8
  %call = call i32 @qcdhdr_get_str(i8* %0, %struct.QCDheader* %1, i8** %p)
  %2 = load i8** %p, align 8
  %cmp = icmp eq i8* %2, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  store i32 -1, i32* %retval
  br label %return

if.end:                                           ; preds = %entry
  %3 = load i8** %p, align 8
  %4 = load i32** %q.addr, align 8
  %call1 = call i32 (i8*, i8*, ...)* @__isoc99_sscanf(i8* %3, i8* getelementptr inbounds ([3 x i8]* @.str171, i32 0, i32 0), i32* %4) #2
  store i32 0, i32* %retval
  br label %return

return:                                           ; preds = %if.end, %if.then
  %5 = load i32* %retval
  ret i32 %5
}

; Function Attrs: nounwind uwtable
define internal i32 @qcdhdr_get_int32x(i8* %s, %struct.QCDheader* %hdr, i32* %q) #0 {
entry:
  %retval = alloca i32, align 4
  %s.addr = alloca i8*, align 8
  %hdr.addr = alloca %struct.QCDheader*, align 8
  %q.addr = alloca i32*, align 8
  %p = alloca i8*, align 8
  %r = alloca i32, align 4
  store i8* %s, i8** %s.addr, align 8
  store %struct.QCDheader* %hdr, %struct.QCDheader** %hdr.addr, align 8
  store i32* %q, i32** %q.addr, align 8
  %0 = load i8** %s.addr, align 8
  %1 = load %struct.QCDheader** %hdr.addr, align 8
  %call = call i32 @qcdhdr_get_str(i8* %0, %struct.QCDheader* %1, i8** %p)
  %2 = load i8** %p, align 8
  %cmp = icmp eq i8* %2, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  store i32 -1, i32* %retval
  br label %return

if.end:                                           ; preds = %entry
  %3 = load i8** %p, align 8
  %call1 = call i32 (i8*, i8*, ...)* @__isoc99_sscanf(i8* %3, i8* getelementptr inbounds ([3 x i8]* @.str1172, i32 0, i32 0), i32* %r) #2
  %4 = load i32* %r, align 4
  %5 = load i32** %q.addr, align 8
  store i32 %4, i32* %5, align 4
  store i32 0, i32* %retval
  br label %return

return:                                           ; preds = %if.end, %if.then
  %6 = load i32* %retval
  ret i32 %6
}

; Function Attrs: nounwind uwtable
define internal i32 @qcdhdr_get_double(i8* %s, %struct.QCDheader* %hdr, double* %q) #0 {
entry:
  %retval = alloca i32, align 4
  %s.addr = alloca i8*, align 8
  %hdr.addr = alloca %struct.QCDheader*, align 8
  %q.addr = alloca double*, align 8
  %p = alloca i8*, align 8
  store i8* %s, i8** %s.addr, align 8
  store %struct.QCDheader* %hdr, %struct.QCDheader** %hdr.addr, align 8
  store double* %q, double** %q.addr, align 8
  %0 = load i8** %s.addr, align 8
  %1 = load %struct.QCDheader** %hdr.addr, align 8
  %call = call i32 @qcdhdr_get_str(i8* %0, %struct.QCDheader* %1, i8** %p)
  %2 = load i8** %p, align 8
  %cmp = icmp eq i8* %2, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  store i32 -1, i32* %retval
  br label %return

if.end:                                           ; preds = %entry
  %3 = load i8** %p, align 8
  %4 = load double** %q.addr, align 8
  %call1 = call i32 (i8*, i8*, ...)* @__isoc99_sscanf(i8* %3, i8* getelementptr inbounds ([4 x i8]* @.str2173, i32 0, i32 0), double* %4) #2
  store i32 0, i32* %retval
  br label %return

return:                                           ; preds = %if.end, %if.then
  %5 = load i32* %retval
  ret i32 %5
}

; Function Attrs: nounwind uwtable
define internal void @error_exit(i8* %s) #0 {
entry:
  %s.addr = alloca i8*, align 8
  store i8* %s, i8** %s.addr, align 8
  %0 = load i8** %s.addr, align 8
  %call = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([4 x i8]* @.str3174, i32 0, i32 0), i8* %0)
  call void @terminate(i32 1)
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @complete_U(double* %u) #0 {
entry:
  %u.addr = alloca double*, align 8
  store double* %u, double** %u.addr, align 8
  %0 = load double** %u.addr, align 8
  %arrayidx = getelementptr inbounds double* %0, i64 2
  %1 = load double* %arrayidx, align 8
  %2 = load double** %u.addr, align 8
  %arrayidx1 = getelementptr inbounds double* %2, i64 10
  %3 = load double* %arrayidx1, align 8
  %mul = fmul double %1, %3
  %4 = load double** %u.addr, align 8
  %arrayidx2 = getelementptr inbounds double* %4, i64 4
  %5 = load double* %arrayidx2, align 8
  %6 = load double** %u.addr, align 8
  %arrayidx3 = getelementptr inbounds double* %6, i64 8
  %7 = load double* %arrayidx3, align 8
  %mul4 = fmul double %5, %7
  %sub = fsub double %mul, %mul4
  %8 = load double** %u.addr, align 8
  %arrayidx5 = getelementptr inbounds double* %8, i64 3
  %9 = load double* %arrayidx5, align 8
  %10 = load double** %u.addr, align 8
  %arrayidx6 = getelementptr inbounds double* %10, i64 11
  %11 = load double* %arrayidx6, align 8
  %mul7 = fmul double %9, %11
  %sub8 = fsub double %sub, %mul7
  %12 = load double** %u.addr, align 8
  %arrayidx9 = getelementptr inbounds double* %12, i64 5
  %13 = load double* %arrayidx9, align 8
  %14 = load double** %u.addr, align 8
  %arrayidx10 = getelementptr inbounds double* %14, i64 9
  %15 = load double* %arrayidx10, align 8
  %mul11 = fmul double %13, %15
  %add = fadd double %sub8, %mul11
  %16 = load double** %u.addr, align 8
  %arrayidx12 = getelementptr inbounds double* %16, i64 12
  store double %add, double* %arrayidx12, align 8
  %17 = load double** %u.addr, align 8
  %arrayidx13 = getelementptr inbounds double* %17, i64 4
  %18 = load double* %arrayidx13, align 8
  %19 = load double** %u.addr, align 8
  %arrayidx14 = getelementptr inbounds double* %19, i64 9
  %20 = load double* %arrayidx14, align 8
  %mul15 = fmul double %18, %20
  %21 = load double** %u.addr, align 8
  %arrayidx16 = getelementptr inbounds double* %21, i64 2
  %22 = load double* %arrayidx16, align 8
  %23 = load double** %u.addr, align 8
  %arrayidx17 = getelementptr inbounds double* %23, i64 11
  %24 = load double* %arrayidx17, align 8
  %mul18 = fmul double %22, %24
  %sub19 = fsub double %mul15, %mul18
  %25 = load double** %u.addr, align 8
  %arrayidx20 = getelementptr inbounds double* %25, i64 5
  %26 = load double* %arrayidx20, align 8
  %27 = load double** %u.addr, align 8
  %arrayidx21 = getelementptr inbounds double* %27, i64 8
  %28 = load double* %arrayidx21, align 8
  %mul22 = fmul double %26, %28
  %add23 = fadd double %sub19, %mul22
  %29 = load double** %u.addr, align 8
  %arrayidx24 = getelementptr inbounds double* %29, i64 3
  %30 = load double* %arrayidx24, align 8
  %31 = load double** %u.addr, align 8
  %arrayidx25 = getelementptr inbounds double* %31, i64 10
  %32 = load double* %arrayidx25, align 8
  %mul26 = fmul double %30, %32
  %sub27 = fsub double %add23, %mul26
  %33 = load double** %u.addr, align 8
  %arrayidx28 = getelementptr inbounds double* %33, i64 13
  store double %sub27, double* %arrayidx28, align 8
  %34 = load double** %u.addr, align 8
  %arrayidx29 = getelementptr inbounds double* %34, i64 4
  %35 = load double* %arrayidx29, align 8
  %36 = load double** %u.addr, align 8
  %arrayidx30 = getelementptr inbounds double* %36, i64 6
  %37 = load double* %arrayidx30, align 8
  %mul31 = fmul double %35, %37
  %38 = load double** %u.addr, align 8
  %arrayidx32 = getelementptr inbounds double* %38, i64 0
  %39 = load double* %arrayidx32, align 8
  %40 = load double** %u.addr, align 8
  %arrayidx33 = getelementptr inbounds double* %40, i64 10
  %41 = load double* %arrayidx33, align 8
  %mul34 = fmul double %39, %41
  %sub35 = fsub double %mul31, %mul34
  %42 = load double** %u.addr, align 8
  %arrayidx36 = getelementptr inbounds double* %42, i64 5
  %43 = load double* %arrayidx36, align 8
  %44 = load double** %u.addr, align 8
  %arrayidx37 = getelementptr inbounds double* %44, i64 7
  %45 = load double* %arrayidx37, align 8
  %mul38 = fmul double %43, %45
  %sub39 = fsub double %sub35, %mul38
  %46 = load double** %u.addr, align 8
  %arrayidx40 = getelementptr inbounds double* %46, i64 1
  %47 = load double* %arrayidx40, align 8
  %48 = load double** %u.addr, align 8
  %arrayidx41 = getelementptr inbounds double* %48, i64 11
  %49 = load double* %arrayidx41, align 8
  %mul42 = fmul double %47, %49
  %add43 = fadd double %sub39, %mul42
  %50 = load double** %u.addr, align 8
  %arrayidx44 = getelementptr inbounds double* %50, i64 14
  store double %add43, double* %arrayidx44, align 8
  %51 = load double** %u.addr, align 8
  %arrayidx45 = getelementptr inbounds double* %51, i64 0
  %52 = load double* %arrayidx45, align 8
  %53 = load double** %u.addr, align 8
  %arrayidx46 = getelementptr inbounds double* %53, i64 11
  %54 = load double* %arrayidx46, align 8
  %mul47 = fmul double %52, %54
  %55 = load double** %u.addr, align 8
  %arrayidx48 = getelementptr inbounds double* %55, i64 4
  %56 = load double* %arrayidx48, align 8
  %57 = load double** %u.addr, align 8
  %arrayidx49 = getelementptr inbounds double* %57, i64 7
  %58 = load double* %arrayidx49, align 8
  %mul50 = fmul double %56, %58
  %sub51 = fsub double %mul47, %mul50
  %59 = load double** %u.addr, align 8
  %arrayidx52 = getelementptr inbounds double* %59, i64 1
  %60 = load double* %arrayidx52, align 8
  %61 = load double** %u.addr, align 8
  %arrayidx53 = getelementptr inbounds double* %61, i64 10
  %62 = load double* %arrayidx53, align 8
  %mul54 = fmul double %60, %62
  %add55 = fadd double %sub51, %mul54
  %63 = load double** %u.addr, align 8
  %arrayidx56 = getelementptr inbounds double* %63, i64 5
  %64 = load double* %arrayidx56, align 8
  %65 = load double** %u.addr, align 8
  %arrayidx57 = getelementptr inbounds double* %65, i64 6
  %66 = load double* %arrayidx57, align 8
  %mul58 = fmul double %64, %66
  %sub59 = fsub double %add55, %mul58
  %67 = load double** %u.addr, align 8
  %arrayidx60 = getelementptr inbounds double* %67, i64 15
  store double %sub59, double* %arrayidx60, align 8
  %68 = load double** %u.addr, align 8
  %arrayidx61 = getelementptr inbounds double* %68, i64 0
  %69 = load double* %arrayidx61, align 8
  %70 = load double** %u.addr, align 8
  %arrayidx62 = getelementptr inbounds double* %70, i64 8
  %71 = load double* %arrayidx62, align 8
  %mul63 = fmul double %69, %71
  %72 = load double** %u.addr, align 8
  %arrayidx64 = getelementptr inbounds double* %72, i64 2
  %73 = load double* %arrayidx64, align 8
  %74 = load double** %u.addr, align 8
  %arrayidx65 = getelementptr inbounds double* %74, i64 6
  %75 = load double* %arrayidx65, align 8
  %mul66 = fmul double %73, %75
  %sub67 = fsub double %mul63, %mul66
  %76 = load double** %u.addr, align 8
  %arrayidx68 = getelementptr inbounds double* %76, i64 1
  %77 = load double* %arrayidx68, align 8
  %78 = load double** %u.addr, align 8
  %arrayidx69 = getelementptr inbounds double* %78, i64 9
  %79 = load double* %arrayidx69, align 8
  %mul70 = fmul double %77, %79
  %sub71 = fsub double %sub67, %mul70
  %80 = load double** %u.addr, align 8
  %arrayidx72 = getelementptr inbounds double* %80, i64 3
  %81 = load double* %arrayidx72, align 8
  %82 = load double** %u.addr, align 8
  %arrayidx73 = getelementptr inbounds double* %82, i64 7
  %83 = load double* %arrayidx73, align 8
  %mul74 = fmul double %81, %83
  %add75 = fadd double %sub71, %mul74
  %84 = load double** %u.addr, align 8
  %arrayidx76 = getelementptr inbounds double* %84, i64 16
  store double %add75, double* %arrayidx76, align 8
  %85 = load double** %u.addr, align 8
  %arrayidx77 = getelementptr inbounds double* %85, i64 2
  %86 = load double* %arrayidx77, align 8
  %87 = load double** %u.addr, align 8
  %arrayidx78 = getelementptr inbounds double* %87, i64 7
  %88 = load double* %arrayidx78, align 8
  %mul79 = fmul double %86, %88
  %89 = load double** %u.addr, align 8
  %arrayidx80 = getelementptr inbounds double* %89, i64 0
  %90 = load double* %arrayidx80, align 8
  %91 = load double** %u.addr, align 8
  %arrayidx81 = getelementptr inbounds double* %91, i64 9
  %92 = load double* %arrayidx81, align 8
  %mul82 = fmul double %90, %92
  %sub83 = fsub double %mul79, %mul82
  %93 = load double** %u.addr, align 8
  %arrayidx84 = getelementptr inbounds double* %93, i64 3
  %94 = load double* %arrayidx84, align 8
  %95 = load double** %u.addr, align 8
  %arrayidx85 = getelementptr inbounds double* %95, i64 6
  %96 = load double* %arrayidx85, align 8
  %mul86 = fmul double %94, %96
  %add87 = fadd double %sub83, %mul86
  %97 = load double** %u.addr, align 8
  %arrayidx88 = getelementptr inbounds double* %97, i64 1
  %98 = load double* %arrayidx88, align 8
  %99 = load double** %u.addr, align 8
  %arrayidx89 = getelementptr inbounds double* %99, i64 8
  %100 = load double* %arrayidx89, align 8
  %mul90 = fmul double %98, %100
  %sub91 = fsub double %add87, %mul90
  %101 = load double** %u.addr, align 8
  %arrayidx92 = getelementptr inbounds double* %101, i64 17
  store double %sub91, double* %arrayidx92, align 8
  ret void
}

; Function Attrs: nounwind uwtable
define internal i32 @big_endian() #0 {
entry:
  %u = alloca %union.anon.79, align 8
  %l = bitcast %union.anon.79* %u to i64*
  store i64 1, i64* %l, align 8
  %c = bitcast %union.anon.79* %u to [8 x i8]*
  %arrayidx = getelementptr inbounds [8 x i8]* %c, i32 0, i64 7
  %0 = load i8* %arrayidx, align 1
  %conv = sext i8 %0 to i32
  %cmp = icmp eq i32 %conv, 1
  %conv1 = zext i1 %cmp to i32
  ret i32 %conv1
}

; Function Attrs: nounwind uwtable
define internal %struct.QCDheader* @qcdhdr_get_hdr(%struct._IO_FILE* %in) #0 {
entry:
  %in.addr = alloca %struct._IO_FILE*, align 8
  %line = alloca [1024 x i8], align 16
  %n = alloca i32, align 4
  %len = alloca i32, align 4
  %hdr = alloca %struct.QCDheader*, align 8
  %tokens = alloca i8**, align 8
  %values = alloca i8**, align 8
  %p = alloca i8*, align 8
  %q = alloca i8*, align 8
  store %struct._IO_FILE* %in, %struct._IO_FILE** %in.addr, align 8
  %arraydecay = getelementptr inbounds [1024 x i8]* %line, i32 0, i32 0
  %0 = load %struct._IO_FILE** %in.addr, align 8
  %call = call i8* @fgets(i8* %arraydecay, i32 1024, %struct._IO_FILE* %0)
  %call1 = call noalias i8* @calloc(i64 512, i64 8) #2
  %1 = bitcast i8* %call1 to i8**
  store i8** %1, i8*** %tokens, align 8
  %call2 = call noalias i8* @calloc(i64 512, i64 8) #2
  %2 = bitcast i8* %call2 to i8**
  store i8** %2, i8*** %values, align 8
  %call3 = call noalias i8* @calloc(i64 1, i64 24) #2
  %3 = bitcast i8* %call3 to %struct.QCDheader*
  store %struct.QCDheader* %3, %struct.QCDheader** %hdr, align 8
  %4 = load i8*** %tokens, align 8
  %5 = load %struct.QCDheader** %hdr, align 8
  %token = getelementptr inbounds %struct.QCDheader* %5, i32 0, i32 1
  store i8** %4, i8*** %token, align 8
  %6 = load i8*** %values, align 8
  %7 = load %struct.QCDheader** %hdr, align 8
  %value = getelementptr inbounds %struct.QCDheader* %7, i32 0, i32 2
  store i8** %6, i8*** %value, align 8
  store i32 0, i32* %n, align 4
  %call4 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([25 x i8]* @.str4175, i32 0, i32 0))
  br label %while.body

while.body:                                       ; preds = %if.end, %entry
  %arraydecay5 = getelementptr inbounds [1024 x i8]* %line, i32 0, i32 0
  %8 = load %struct._IO_FILE** %in.addr, align 8
  %call6 = call i8* @fgets(i8* %arraydecay5, i32 1024, %struct._IO_FILE* %8)
  %arraydecay7 = getelementptr inbounds [1024 x i8]* %line, i32 0, i32 0
  %call8 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([3 x i8]* @.str5176, i32 0, i32 0), i8* %arraydecay7)
  %arraydecay9 = getelementptr inbounds [1024 x i8]* %line, i32 0, i32 0
  %call10 = call i32 @strcmp(i8* %arraydecay9, i8* getelementptr inbounds ([12 x i8]* @.str6177, i32 0, i32 0)) #9
  %cmp = icmp eq i32 %call10, 0
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %while.body
  br label %while.end

if.end:                                           ; preds = %while.body
  %arraydecay11 = getelementptr inbounds [1024 x i8]* %line, i32 0, i32 0
  %call12 = call i8* @strchr(i8* %arraydecay11, i32 32) #9
  store i8* %call12, i8** %q, align 8
  %9 = load i8** %q, align 8
  store i8 0, i8* %9, align 1
  %10 = load i8** %q, align 8
  %11 = ptrtoint i8* %10 to i32
  %arraydecay13 = getelementptr inbounds [1024 x i8]* %line, i32 0, i32 0
  %12 = ptrtoint i8* %arraydecay13 to i32
  %sub = sub nsw i32 %11, %12
  store i32 %sub, i32* %len, align 4
  %13 = load i32* %len, align 4
  %add = add nsw i32 %13, 1
  %div = sdiv i32 %add, 8
  %add14 = add nsw i32 %div, 1
  %conv = sext i32 %add14 to i64
  %call15 = call noalias i8* @calloc(i64 %conv, i64 8) #2
  store i8* %call15, i8** %p, align 8
  %14 = load i8** %p, align 8
  %15 = load i32* %n, align 4
  %idxprom = sext i32 %15 to i64
  %16 = load %struct.QCDheader** %hdr, align 8
  %token16 = getelementptr inbounds %struct.QCDheader* %16, i32 0, i32 1
  %17 = load i8*** %token16, align 8
  %arrayidx = getelementptr inbounds i8** %17, i64 %idxprom
  store i8* %14, i8** %arrayidx, align 8
  %18 = load i8** %p, align 8
  %arraydecay17 = getelementptr inbounds [1024 x i8]* %line, i32 0, i32 0
  %call18 = call i8* @strcpy(i8* %18, i8* %arraydecay17) #2
  %19 = load i8** %q, align 8
  %incdec.ptr = getelementptr inbounds i8* %19, i32 1
  store i8* %incdec.ptr, i8** %q, align 8
  %call19 = call i8* @strchr(i8* %incdec.ptr, i32 61) #9
  store i8* %call19, i8** %q, align 8
  %20 = load i8** %q, align 8
  %incdec.ptr20 = getelementptr inbounds i8* %20, i32 1
  store i8* %incdec.ptr20, i8** %q, align 8
  %21 = load i8** %q, align 8
  %call21 = call i64 @strlen(i8* %21) #9
  %conv22 = trunc i64 %call21 to i32
  store i32 %conv22, i32* %len, align 4
  %22 = load i32* %len, align 4
  %sub23 = sub nsw i32 %22, 1
  %idxprom24 = sext i32 %sub23 to i64
  %23 = load i8** %q, align 8
  %arrayidx25 = getelementptr inbounds i8* %23, i64 %idxprom24
  store i8 0, i8* %arrayidx25, align 1
  %24 = load i32* %len, align 4
  %conv26 = sext i32 %24 to i64
  %call27 = call noalias i8* @calloc(i64 %conv26, i64 1) #2
  store i8* %call27, i8** %p, align 8
  %25 = load i8** %p, align 8
  %26 = load i32* %n, align 4
  %idxprom28 = sext i32 %26 to i64
  %27 = load %struct.QCDheader** %hdr, align 8
  %value29 = getelementptr inbounds %struct.QCDheader* %27, i32 0, i32 2
  %28 = load i8*** %value29, align 8
  %arrayidx30 = getelementptr inbounds i8** %28, i64 %idxprom28
  store i8* %25, i8** %arrayidx30, align 8
  %29 = load i8** %p, align 8
  %30 = load i8** %q, align 8
  %call31 = call i8* @strcpy(i8* %29, i8* %30) #2
  %31 = load i32* %n, align 4
  %inc = add nsw i32 %31, 1
  store i32 %inc, i32* %n, align 4
  br label %while.body

while.end:                                        ; preds = %if.then
  %32 = load i32* %n, align 4
  %33 = load %struct.QCDheader** %hdr, align 8
  %ntoken = getelementptr inbounds %struct.QCDheader* %33, i32 0, i32 0
  store i32 %32, i32* %ntoken, align 4
  %34 = load %struct.QCDheader** %hdr, align 8
  ret %struct.QCDheader* %34
}

declare i8* @fgets(i8*, i32, %struct._IO_FILE*) #1

; Function Attrs: nounwind readonly
declare i8* @strchr(i8*, i32) #6

; Function Attrs: nounwind readonly
declare i64 @strlen(i8*) #6

; Function Attrs: nounwind uwtable
define internal void @qcdhdr_destroy_hdr(%struct.QCDheader* %hdr) #0 {
entry:
  %hdr.addr = alloca %struct.QCDheader*, align 8
  %i = alloca i32, align 4
  store %struct.QCDheader* %hdr, %struct.QCDheader** %hdr.addr, align 8
  %0 = load %struct.QCDheader** %hdr.addr, align 8
  %cmp = icmp eq %struct.QCDheader* %0, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  br label %return

if.end:                                           ; preds = %entry
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.end
  %1 = load i32* %i, align 4
  %2 = load %struct.QCDheader** %hdr.addr, align 8
  %ntoken = getelementptr inbounds %struct.QCDheader* %2, i32 0, i32 0
  %3 = load i32* %ntoken, align 4
  %cmp1 = icmp slt i32 %1, %3
  br i1 %cmp1, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %4 = load i32* %i, align 4
  %idxprom = sext i32 %4 to i64
  %5 = load %struct.QCDheader** %hdr.addr, align 8
  %value = getelementptr inbounds %struct.QCDheader* %5, i32 0, i32 2
  %6 = load i8*** %value, align 8
  %arrayidx = getelementptr inbounds i8** %6, i64 %idxprom
  %7 = load i8** %arrayidx, align 8
  call void @free(i8* %7) #2
  %8 = load i32* %i, align 4
  %idxprom2 = sext i32 %8 to i64
  %9 = load %struct.QCDheader** %hdr.addr, align 8
  %token = getelementptr inbounds %struct.QCDheader* %9, i32 0, i32 1
  %10 = load i8*** %token, align 8
  %arrayidx3 = getelementptr inbounds i8** %10, i64 %idxprom2
  %11 = load i8** %arrayidx3, align 8
  call void @free(i8* %11) #2
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %12 = load i32* %i, align 4
  %inc = add nsw i32 %12, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %13 = load %struct.QCDheader** %hdr.addr, align 8
  %token4 = getelementptr inbounds %struct.QCDheader* %13, i32 0, i32 1
  %14 = load i8*** %token4, align 8
  %15 = bitcast i8** %14 to i8*
  call void @free(i8* %15) #2
  %16 = load %struct.QCDheader** %hdr.addr, align 8
  %value5 = getelementptr inbounds %struct.QCDheader* %16, i32 0, i32 2
  %17 = load i8*** %value5, align 8
  %18 = bitcast i8** %17 to i8*
  call void @free(i8* %18) #2
  %19 = load %struct.QCDheader** %hdr.addr, align 8
  %20 = bitcast %struct.QCDheader* %19 to i8*
  call void @free(i8* %20) #2
  br label %return

return:                                           ; preds = %for.end, %if.then
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @swrite_data(%struct._IO_FILE* %fp, i8* %src, i64 %size, i8* %myname, i8* %descrip) #0 {
entry:
  %fp.addr = alloca %struct._IO_FILE*, align 8
  %src.addr = alloca i8*, align 8
  %size.addr = alloca i64, align 8
  %myname.addr = alloca i8*, align 8
  %descrip.addr = alloca i8*, align 8
  store %struct._IO_FILE* %fp, %struct._IO_FILE** %fp.addr, align 8
  store i8* %src, i8** %src.addr, align 8
  store i64 %size, i64* %size.addr, align 8
  store i8* %myname, i8** %myname.addr, align 8
  store i8* %descrip, i8** %descrip.addr, align 8
  %0 = load i8** %src.addr, align 8
  %1 = load i64* %size.addr, align 8
  %2 = load %struct._IO_FILE** %fp.addr, align 8
  %call = call i64 @fwrite(i8* %0, i64 %1, i64 1, %struct._IO_FILE* %2)
  %cmp = icmp ne i64 %call, 1
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %3 = load i8** %myname.addr, align 8
  %4 = load i32* @this_node, align 4
  %5 = load i8** %descrip.addr, align 8
  %call1 = call i32* @__errno_location() #8
  %6 = load i32* %call1, align 4
  %call2 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([31 x i8]* @.str7178, i32 0, i32 0), i8* %3, i32 %4, i8* %5, i32 %6)
  %7 = load %struct._IO_FILE** @stdout, align 8
  %call3 = call i32 @fflush(%struct._IO_FILE* %7)
  call void @terminate(i32 1)
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  ret void
}

declare i64 @fwrite(i8*, i64, i64, %struct._IO_FILE*) #1

; Function Attrs: nounwind readnone
declare i32* @__errno_location() #5

; Function Attrs: nounwind uwtable
define internal void @pwrite_data(%struct._IO_FILE* %fp, i8* %src, i64 %size, i8* %myname, i8* %descrip) #0 {
entry:
  %fp.addr = alloca %struct._IO_FILE*, align 8
  %src.addr = alloca i8*, align 8
  %size.addr = alloca i64, align 8
  %myname.addr = alloca i8*, align 8
  %descrip.addr = alloca i8*, align 8
  store %struct._IO_FILE* %fp, %struct._IO_FILE** %fp.addr, align 8
  store i8* %src, i8** %src.addr, align 8
  store i64 %size, i64* %size.addr, align 8
  store i8* %myname, i8** %myname.addr, align 8
  store i8* %descrip, i8** %descrip.addr, align 8
  %0 = load i8** %src.addr, align 8
  %1 = load i64* %size.addr, align 8
  %2 = load %struct._IO_FILE** %fp.addr, align 8
  %call = call i64 @g_write(i8* %0, i64 %1, i64 1, %struct._IO_FILE* %2)
  %cmp = icmp ne i64 %call, 1
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %3 = load i8** %myname.addr, align 8
  %4 = load i32* @this_node, align 4
  %5 = load i8** %descrip.addr, align 8
  %call1 = call i32* @__errno_location() #8
  %6 = load i32* %call1, align 4
  %call2 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([39 x i8]* @.str8179, i32 0, i32 0), i8* %3, i32 %4, i8* %5, i32 %6)
  %7 = load %struct._IO_FILE** @stdout, align 8
  %call3 = call i32 @fflush(%struct._IO_FILE* %7)
  call void @terminate(i32 1)
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @pswrite_data(i32 %parallel, %struct._IO_FILE* %fp, i8* %src, i64 %size, i8* %myname, i8* %descrip) #0 {
entry:
  %parallel.addr = alloca i32, align 4
  %fp.addr = alloca %struct._IO_FILE*, align 8
  %src.addr = alloca i8*, align 8
  %size.addr = alloca i64, align 8
  %myname.addr = alloca i8*, align 8
  %descrip.addr = alloca i8*, align 8
  store i32 %parallel, i32* %parallel.addr, align 4
  store %struct._IO_FILE* %fp, %struct._IO_FILE** %fp.addr, align 8
  store i8* %src, i8** %src.addr, align 8
  store i64 %size, i64* %size.addr, align 8
  store i8* %myname, i8** %myname.addr, align 8
  store i8* %descrip, i8** %descrip.addr, align 8
  %0 = load i32* %parallel.addr, align 4
  %tobool = icmp ne i32 %0, 0
  br i1 %tobool, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  %1 = load %struct._IO_FILE** %fp.addr, align 8
  %2 = load i8** %src.addr, align 8
  %3 = load i64* %size.addr, align 8
  %4 = load i8** %myname.addr, align 8
  %5 = load i8** %descrip.addr, align 8
  call void @pwrite_data(%struct._IO_FILE* %1, i8* %2, i64 %3, i8* %4, i8* %5)
  br label %if.end

if.else:                                          ; preds = %entry
  %6 = load %struct._IO_FILE** %fp.addr, align 8
  %7 = load i8** %src.addr, align 8
  %8 = load i64* %size.addr, align 8
  %9 = load i8** %myname.addr, align 8
  %10 = load i8** %descrip.addr, align 8
  call void @swrite_data(%struct._IO_FILE* %6, i8* %7, i64 %8, i8* %9, i8* %10)
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  ret void
}

; Function Attrs: nounwind uwtable
define internal i32 @sread_data(%struct._IO_FILE* %fp, i8* %src, i64 %size, i8* %myname, i8* %descrip) #0 {
entry:
  %retval = alloca i32, align 4
  %fp.addr = alloca %struct._IO_FILE*, align 8
  %src.addr = alloca i8*, align 8
  %size.addr = alloca i64, align 8
  %myname.addr = alloca i8*, align 8
  %descrip.addr = alloca i8*, align 8
  store %struct._IO_FILE* %fp, %struct._IO_FILE** %fp.addr, align 8
  store i8* %src, i8** %src.addr, align 8
  store i64 %size, i64* %size.addr, align 8
  store i8* %myname, i8** %myname.addr, align 8
  store i8* %descrip, i8** %descrip.addr, align 8
  %0 = load i8** %src.addr, align 8
  %1 = load i64* %size.addr, align 8
  %2 = load %struct._IO_FILE** %fp.addr, align 8
  %call = call i64 @fread(i8* %0, i64 %1, i64 1, %struct._IO_FILE* %2)
  %cmp = icmp ne i64 %call, 1
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %3 = load i8** %myname.addr, align 8
  %4 = load i32* @this_node, align 4
  %5 = load i8** %descrip.addr, align 8
  %call1 = call i32* @__errno_location() #8
  %6 = load i32* %call1, align 4
  %call2 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([30 x i8]* @.str9180, i32 0, i32 0), i8* %3, i32 %4, i8* %5, i32 %6)
  %7 = load %struct._IO_FILE** @stdout, align 8
  %call3 = call i32 @fflush(%struct._IO_FILE* %7)
  store i32 1, i32* %retval
  br label %return

if.end:                                           ; preds = %entry
  store i32 0, i32* %retval
  br label %return

return:                                           ; preds = %if.end, %if.then
  %8 = load i32* %retval
  ret i32 %8
}

declare i64 @fread(i8*, i64, i64, %struct._IO_FILE*) #1

; Function Attrs: nounwind uwtable
define internal i32 @pread_data(%struct._IO_FILE* %fp, i8* %src, i64 %size, i8* %myname, i8* %descrip) #0 {
entry:
  %retval = alloca i32, align 4
  %fp.addr = alloca %struct._IO_FILE*, align 8
  %src.addr = alloca i8*, align 8
  %size.addr = alloca i64, align 8
  %myname.addr = alloca i8*, align 8
  %descrip.addr = alloca i8*, align 8
  store %struct._IO_FILE* %fp, %struct._IO_FILE** %fp.addr, align 8
  store i8* %src, i8** %src.addr, align 8
  store i64 %size, i64* %size.addr, align 8
  store i8* %myname, i8** %myname.addr, align 8
  store i8* %descrip, i8** %descrip.addr, align 8
  %0 = load i8** %src.addr, align 8
  %1 = load i64* %size.addr, align 8
  %2 = load %struct._IO_FILE** %fp.addr, align 8
  %call = call i64 @g_read(i8* %0, i64 %1, i64 1, %struct._IO_FILE* %2)
  %cmp = icmp ne i64 %call, 1
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %3 = load i8** %myname.addr, align 8
  %4 = load i32* @this_node, align 4
  %5 = load i8** %descrip.addr, align 8
  %call1 = call i32* @__errno_location() #8
  %6 = load i32* %call1, align 4
  %call2 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([30 x i8]* @.str9180, i32 0, i32 0), i8* %3, i32 %4, i8* %5, i32 %6)
  %7 = load %struct._IO_FILE** @stdout, align 8
  %call3 = call i32 @fflush(%struct._IO_FILE* %7)
  store i32 1, i32* %retval
  br label %return

if.end:                                           ; preds = %entry
  store i32 0, i32* %retval
  br label %return

return:                                           ; preds = %if.end, %if.then
  %8 = load i32* %retval
  ret i32 %8
}

; Function Attrs: nounwind uwtable
define internal i32 @pread_byteorder(i32 %byterevflag, %struct._IO_FILE* %fp, i8* %src, i64 %size, i8* %myname, i8* %descrip) #0 {
entry:
  %byterevflag.addr = alloca i32, align 4
  %fp.addr = alloca %struct._IO_FILE*, align 8
  %src.addr = alloca i8*, align 8
  %size.addr = alloca i64, align 8
  %myname.addr = alloca i8*, align 8
  %descrip.addr = alloca i8*, align 8
  %status = alloca i32, align 4
  store i32 %byterevflag, i32* %byterevflag.addr, align 4
  store %struct._IO_FILE* %fp, %struct._IO_FILE** %fp.addr, align 8
  store i8* %src, i8** %src.addr, align 8
  store i64 %size, i64* %size.addr, align 8
  store i8* %myname, i8** %myname.addr, align 8
  store i8* %descrip, i8** %descrip.addr, align 8
  %0 = load %struct._IO_FILE** %fp.addr, align 8
  %1 = load i8** %src.addr, align 8
  %2 = load i64* %size.addr, align 8
  %3 = load i8** %myname.addr, align 8
  %4 = load i8** %descrip.addr, align 8
  %call = call i32 @pread_data(%struct._IO_FILE* %0, i8* %1, i64 %2, i8* %3, i8* %4)
  store i32 %call, i32* %status, align 4
  %5 = load i32* %byterevflag.addr, align 4
  %cmp = icmp eq i32 %5, 1
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %6 = load i8** %src.addr, align 8
  %7 = bitcast i8* %6 to i32*
  %8 = load i64* %size.addr, align 8
  %div = udiv i64 %8, 4
  %conv = trunc i64 %div to i32
  call void @byterevn(i32* %7, i32 %conv)
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %9 = load i32* %status, align 4
  ret i32 %9
}

; Function Attrs: nounwind uwtable
define internal i32 @sread_byteorder(i32 %byterevflag, %struct._IO_FILE* %fp, i8* %src, i64 %size, i8* %myname, i8* %descrip) #0 {
entry:
  %byterevflag.addr = alloca i32, align 4
  %fp.addr = alloca %struct._IO_FILE*, align 8
  %src.addr = alloca i8*, align 8
  %size.addr = alloca i64, align 8
  %myname.addr = alloca i8*, align 8
  %descrip.addr = alloca i8*, align 8
  %status = alloca i32, align 4
  store i32 %byterevflag, i32* %byterevflag.addr, align 4
  store %struct._IO_FILE* %fp, %struct._IO_FILE** %fp.addr, align 8
  store i8* %src, i8** %src.addr, align 8
  store i64 %size, i64* %size.addr, align 8
  store i8* %myname, i8** %myname.addr, align 8
  store i8* %descrip, i8** %descrip.addr, align 8
  %0 = load %struct._IO_FILE** %fp.addr, align 8
  %1 = load i8** %src.addr, align 8
  %2 = load i64* %size.addr, align 8
  %3 = load i8** %myname.addr, align 8
  %4 = load i8** %descrip.addr, align 8
  %call = call i32 @sread_data(%struct._IO_FILE* %0, i8* %1, i64 %2, i8* %3, i8* %4)
  store i32 %call, i32* %status, align 4
  %5 = load i32* %byterevflag.addr, align 4
  %cmp = icmp eq i32 %5, 1
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %6 = load i8** %src.addr, align 8
  %7 = bitcast i8* %6 to i32*
  %8 = load i64* %size.addr, align 8
  %div = udiv i64 %8, 4
  %conv = trunc i64 %div to i32
  call void @byterevn(i32* %7, i32 %conv)
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %9 = load i32* %status, align 4
  ret i32 %9
}

; Function Attrs: nounwind uwtable
define internal i32 @psread_data(i32 %parallel, %struct._IO_FILE* %fp, i8* %src, i64 %size, i8* %myname, i8* %descrip) #0 {
entry:
  %retval = alloca i32, align 4
  %parallel.addr = alloca i32, align 4
  %fp.addr = alloca %struct._IO_FILE*, align 8
  %src.addr = alloca i8*, align 8
  %size.addr = alloca i64, align 8
  %myname.addr = alloca i8*, align 8
  %descrip.addr = alloca i8*, align 8
  store i32 %parallel, i32* %parallel.addr, align 4
  store %struct._IO_FILE* %fp, %struct._IO_FILE** %fp.addr, align 8
  store i8* %src, i8** %src.addr, align 8
  store i64 %size, i64* %size.addr, align 8
  store i8* %myname, i8** %myname.addr, align 8
  store i8* %descrip, i8** %descrip.addr, align 8
  %0 = load i32* %parallel.addr, align 4
  %tobool = icmp ne i32 %0, 0
  br i1 %tobool, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  %1 = load %struct._IO_FILE** %fp.addr, align 8
  %2 = load i8** %src.addr, align 8
  %3 = load i64* %size.addr, align 8
  %4 = load i8** %myname.addr, align 8
  %5 = load i8** %descrip.addr, align 8
  %call = call i32 @pread_data(%struct._IO_FILE* %1, i8* %2, i64 %3, i8* %4, i8* %5)
  store i32 %call, i32* %retval
  br label %return

if.else:                                          ; preds = %entry
  %6 = load %struct._IO_FILE** %fp.addr, align 8
  %7 = load i8** %src.addr, align 8
  %8 = load i64* %size.addr, align 8
  %9 = load i8** %myname.addr, align 8
  %10 = load i8** %descrip.addr, align 8
  %call1 = call i32 @sread_data(%struct._IO_FILE* %6, i8* %7, i64 %8, i8* %9, i8* %10)
  store i32 %call1, i32* %retval
  br label %return

return:                                           ; preds = %if.else, %if.then
  %11 = load i32* %retval
  ret i32 %11
}

; Function Attrs: nounwind uwtable
define internal i32 @psread_byteorder(i32 %byterevflag, i32 %parallel, %struct._IO_FILE* %fp, i8* %src, i64 %size, i8* %myname, i8* %descrip) #0 {
entry:
  %retval = alloca i32, align 4
  %byterevflag.addr = alloca i32, align 4
  %parallel.addr = alloca i32, align 4
  %fp.addr = alloca %struct._IO_FILE*, align 8
  %src.addr = alloca i8*, align 8
  %size.addr = alloca i64, align 8
  %myname.addr = alloca i8*, align 8
  %descrip.addr = alloca i8*, align 8
  store i32 %byterevflag, i32* %byterevflag.addr, align 4
  store i32 %parallel, i32* %parallel.addr, align 4
  store %struct._IO_FILE* %fp, %struct._IO_FILE** %fp.addr, align 8
  store i8* %src, i8** %src.addr, align 8
  store i64 %size, i64* %size.addr, align 8
  store i8* %myname, i8** %myname.addr, align 8
  store i8* %descrip, i8** %descrip.addr, align 8
  %0 = load i32* %parallel.addr, align 4
  %tobool = icmp ne i32 %0, 0
  br i1 %tobool, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  %1 = load i32* %byterevflag.addr, align 4
  %2 = load %struct._IO_FILE** %fp.addr, align 8
  %3 = load i8** %src.addr, align 8
  %4 = load i64* %size.addr, align 8
  %5 = load i8** %myname.addr, align 8
  %6 = load i8** %descrip.addr, align 8
  %call = call i32 @pread_byteorder(i32 %1, %struct._IO_FILE* %2, i8* %3, i64 %4, i8* %5, i8* %6)
  store i32 %call, i32* %retval
  br label %return

if.else:                                          ; preds = %entry
  %7 = load i32* %byterevflag.addr, align 4
  %8 = load %struct._IO_FILE** %fp.addr, align 8
  %9 = load i8** %src.addr, align 8
  %10 = load i64* %size.addr, align 8
  %11 = load i8** %myname.addr, align 8
  %12 = load i8** %descrip.addr, align 8
  %call1 = call i32 @sread_byteorder(i32 %7, %struct._IO_FILE* %8, i8* %9, i64 %10, i8* %11, i8* %12)
  store i32 %call1, i32* %retval
  br label %return

return:                                           ; preds = %if.else, %if.then
  %13 = load i32* %retval
  ret i32 %13
}

; Function Attrs: nounwind uwtable
define internal void @pwrite_gauge_hdr(%struct._IO_FILE* %fp, %struct.gauge_header* %gh) #0 {
entry:
  %fp.addr = alloca %struct._IO_FILE*, align 8
  %gh.addr = alloca %struct.gauge_header*, align 8
  %myname = alloca [17 x i8], align 16
  store %struct._IO_FILE* %fp, %struct._IO_FILE** %fp.addr, align 8
  store %struct.gauge_header* %gh, %struct.gauge_header** %gh.addr, align 8
  %0 = bitcast [17 x i8]* %myname to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %0, i8* getelementptr inbounds ([17 x i8]* @pwrite_gauge_hdr.myname, i32 0, i32 0), i64 17, i32 16, i1 false)
  %1 = load %struct._IO_FILE** %fp.addr, align 8
  %2 = load %struct.gauge_header** %gh.addr, align 8
  %magic_number = getelementptr inbounds %struct.gauge_header* %2, i32 0, i32 0
  %3 = bitcast i32* %magic_number to i8*
  %arraydecay = getelementptr inbounds [17 x i8]* %myname, i32 0, i32 0
  call void @pwrite_data(%struct._IO_FILE* %1, i8* %3, i64 4, i8* %arraydecay, i8* getelementptr inbounds ([13 x i8]* @.str10181, i32 0, i32 0))
  %4 = load %struct._IO_FILE** %fp.addr, align 8
  %5 = load %struct.gauge_header** %gh.addr, align 8
  %dims = getelementptr inbounds %struct.gauge_header* %5, i32 0, i32 2
  %arraydecay1 = getelementptr inbounds [4 x i32]* %dims, i32 0, i32 0
  %6 = bitcast i32* %arraydecay1 to i8*
  %arraydecay2 = getelementptr inbounds [17 x i8]* %myname, i32 0, i32 0
  call void @pwrite_data(%struct._IO_FILE* %4, i8* %6, i64 16, i8* %arraydecay2, i8* getelementptr inbounds ([11 x i8]* @.str11182, i32 0, i32 0))
  %7 = load %struct._IO_FILE** %fp.addr, align 8
  %8 = load %struct.gauge_header** %gh.addr, align 8
  %time_stamp = getelementptr inbounds %struct.gauge_header* %8, i32 0, i32 1
  %arraydecay3 = getelementptr inbounds [64 x i8]* %time_stamp, i32 0, i32 0
  %arraydecay4 = getelementptr inbounds [17 x i8]* %myname, i32 0, i32 0
  call void @pwrite_data(%struct._IO_FILE* %7, i8* %arraydecay3, i64 64, i8* %arraydecay4, i8* getelementptr inbounds ([11 x i8]* @.str12183, i32 0, i32 0))
  %9 = load %struct._IO_FILE** %fp.addr, align 8
  %10 = load %struct.gauge_header** %gh.addr, align 8
  %order = getelementptr inbounds %struct.gauge_header* %10, i32 0, i32 4
  %11 = bitcast i32* %order to i8*
  %arraydecay5 = getelementptr inbounds [17 x i8]* %myname, i32 0, i32 0
  call void @pwrite_data(%struct._IO_FILE* %9, i8* %11, i64 4, i8* %arraydecay5, i8* getelementptr inbounds ([6 x i8]* @.str13184, i32 0, i32 0))
  %12 = load %struct.gauge_header** %gh.addr, align 8
  %header_bytes = getelementptr inbounds %struct.gauge_header* %12, i32 0, i32 3
  store i32 88, i32* %header_bytes, align 4
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @swrite_gauge_hdr(%struct._IO_FILE* %fp, %struct.gauge_header* %gh) #0 {
entry:
  %fp.addr = alloca %struct._IO_FILE*, align 8
  %gh.addr = alloca %struct.gauge_header*, align 8
  %myname = alloca [17 x i8], align 16
  store %struct._IO_FILE* %fp, %struct._IO_FILE** %fp.addr, align 8
  store %struct.gauge_header* %gh, %struct.gauge_header** %gh.addr, align 8
  %0 = bitcast [17 x i8]* %myname to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %0, i8* getelementptr inbounds ([17 x i8]* @swrite_gauge_hdr.myname, i32 0, i32 0), i64 17, i32 16, i1 false)
  %1 = load %struct._IO_FILE** %fp.addr, align 8
  %2 = load %struct.gauge_header** %gh.addr, align 8
  %magic_number = getelementptr inbounds %struct.gauge_header* %2, i32 0, i32 0
  %3 = bitcast i32* %magic_number to i8*
  %arraydecay = getelementptr inbounds [17 x i8]* %myname, i32 0, i32 0
  call void @swrite_data(%struct._IO_FILE* %1, i8* %3, i64 4, i8* %arraydecay, i8* getelementptr inbounds ([13 x i8]* @.str10181, i32 0, i32 0))
  %4 = load %struct._IO_FILE** %fp.addr, align 8
  %5 = load %struct.gauge_header** %gh.addr, align 8
  %dims = getelementptr inbounds %struct.gauge_header* %5, i32 0, i32 2
  %arraydecay1 = getelementptr inbounds [4 x i32]* %dims, i32 0, i32 0
  %6 = bitcast i32* %arraydecay1 to i8*
  %arraydecay2 = getelementptr inbounds [17 x i8]* %myname, i32 0, i32 0
  call void @swrite_data(%struct._IO_FILE* %4, i8* %6, i64 16, i8* %arraydecay2, i8* getelementptr inbounds ([11 x i8]* @.str11182, i32 0, i32 0))
  %7 = load %struct._IO_FILE** %fp.addr, align 8
  %8 = load %struct.gauge_header** %gh.addr, align 8
  %time_stamp = getelementptr inbounds %struct.gauge_header* %8, i32 0, i32 1
  %arraydecay3 = getelementptr inbounds [64 x i8]* %time_stamp, i32 0, i32 0
  %arraydecay4 = getelementptr inbounds [17 x i8]* %myname, i32 0, i32 0
  call void @swrite_data(%struct._IO_FILE* %7, i8* %arraydecay3, i64 64, i8* %arraydecay4, i8* getelementptr inbounds ([11 x i8]* @.str12183, i32 0, i32 0))
  %9 = load %struct._IO_FILE** %fp.addr, align 8
  %10 = load %struct.gauge_header** %gh.addr, align 8
  %order = getelementptr inbounds %struct.gauge_header* %10, i32 0, i32 4
  %11 = bitcast i32* %order to i8*
  %arraydecay5 = getelementptr inbounds [17 x i8]* %myname, i32 0, i32 0
  call void @swrite_data(%struct._IO_FILE* %9, i8* %11, i64 4, i8* %arraydecay5, i8* getelementptr inbounds ([6 x i8]* @.str13184, i32 0, i32 0))
  %12 = load %struct.gauge_header** %gh.addr, align 8
  %header_bytes = getelementptr inbounds %struct.gauge_header* %12, i32 0, i32 3
  store i32 88, i32* %header_bytes, align 4
  ret void
}

; Function Attrs: nounwind uwtable
define internal i32 @write_gauge_info_item(%struct._IO_FILE* %fpout, i8* %keyword, i8* %fmt, i8* %src, i32 %count, i32 %stride) #0 {
entry:
  %retval = alloca i32, align 4
  %fpout.addr = alloca %struct._IO_FILE*, align 8
  %keyword.addr = alloca i8*, align 8
  %fmt.addr = alloca i8*, align 8
  %src.addr = alloca i8*, align 8
  %count.addr = alloca i32, align 4
  %stride.addr = alloca i32, align 4
  %i = alloca i32, align 4
  %k = alloca i32, align 4
  %n = alloca i32, align 4
  %data = alloca i8*, align 8
  store %struct._IO_FILE* %fpout, %struct._IO_FILE** %fpout.addr, align 8
  store i8* %keyword, i8** %keyword.addr, align 8
  store i8* %fmt, i8** %fmt.addr, align 8
  store i8* %src, i8** %src.addr, align 8
  store i32 %count, i32* %count.addr, align 4
  store i32 %stride, i32* %stride.addr, align 4
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32* %i, align 4
  %idxprom = sext i32 %0 to i64
  %arrayidx = getelementptr inbounds [0 x i8*]* bitcast ([36 x i8*]* @gauge_info_keyword to [0 x i8*]*), i32 0, i64 %idxprom
  %1 = load i8** %arrayidx, align 8
  %call = call i64 @strlen(i8* %1) #9
  %cmp = icmp ugt i64 %call, 0
  br i1 %cmp, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %for.cond
  %2 = load i32* %i, align 4
  %idxprom1 = sext i32 %2 to i64
  %arrayidx2 = getelementptr inbounds [0 x i8*]* bitcast ([36 x i8*]* @gauge_info_keyword to [0 x i8*]*), i32 0, i64 %idxprom1
  %3 = load i8** %arrayidx2, align 8
  %4 = load i8** %keyword.addr, align 8
  %call3 = call i32 @strcmp(i8* %3, i8* %4) #9
  %cmp4 = icmp ne i32 %call3, 0
  br label %land.end

land.end:                                         ; preds = %land.rhs, %for.cond
  %5 = phi i1 [ false, %for.cond ], [ %cmp4, %land.rhs ]
  br i1 %5, label %for.body, label %for.end

for.body:                                         ; preds = %land.end
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %6 = load i32* %i, align 4
  %inc = add nsw i32 %6, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %land.end
  %7 = load i32* %i, align 4
  %idxprom5 = sext i32 %7 to i64
  %arrayidx6 = getelementptr inbounds [0 x i8*]* bitcast ([36 x i8*]* @gauge_info_keyword to [0 x i8*]*), i32 0, i64 %idxprom5
  %8 = load i8** %arrayidx6, align 8
  %call7 = call i64 @strlen(i8* %8) #9
  %cmp8 = icmp eq i64 %call7, 0
  br i1 %cmp8, label %if.then, label %if.end

if.then:                                          ; preds = %for.end
  %9 = load i8** %keyword.addr, align 8
  %call9 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([57 x i8]* @.str14185, i32 0, i32 0), i8* %9)
  br label %if.end

if.end:                                           ; preds = %if.then, %for.end
  %10 = load %struct._IO_FILE** %fpout.addr, align 8
  %11 = load i8** %keyword.addr, align 8
  %call10 = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %10, i8* getelementptr inbounds ([5 x i8]* @.str15186, i32 0, i32 0), i8* %11)
  %12 = load i32* %count.addr, align 4
  %cmp11 = icmp sgt i32 %12, 1
  br i1 %cmp11, label %if.then12, label %if.end14

if.then12:                                        ; preds = %if.end
  %13 = load %struct._IO_FILE** %fpout.addr, align 8
  %14 = load i32* %count.addr, align 4
  %call13 = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %13, i8* getelementptr inbounds ([5 x i8]* @.str16187, i32 0, i32 0), i32 %14)
  br label %if.end14

if.end14:                                         ; preds = %if.then12, %if.end
  %15 = load i32* %count.addr, align 4
  store i32 %15, i32* %n, align 4
  %16 = load i32* %n, align 4
  %cmp15 = icmp eq i32 %16, 0
  br i1 %cmp15, label %if.then16, label %if.end17

if.then16:                                        ; preds = %if.end14
  store i32 1, i32* %n, align 4
  br label %if.end17

if.end17:                                         ; preds = %if.then16, %if.end14
  store i32 0, i32* %k, align 4
  %17 = load i8** %src.addr, align 8
  store i8* %17, i8** %data, align 8
  br label %for.cond18

for.cond18:                                       ; preds = %for.inc52, %if.end17
  %18 = load i32* %k, align 4
  %19 = load i32* %n, align 4
  %cmp19 = icmp slt i32 %18, %19
  br i1 %cmp19, label %for.body20, label %for.end54

for.body20:                                       ; preds = %for.cond18
  %20 = load %struct._IO_FILE** %fpout.addr, align 8
  %call21 = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %20, i8* getelementptr inbounds ([2 x i8]* @.str17188, i32 0, i32 0))
  %21 = load i8** %fmt.addr, align 8
  %call22 = call i8* @strstr(i8* %21, i8* getelementptr inbounds ([2 x i8]* @.str18189, i32 0, i32 0)) #9
  %cmp23 = icmp ne i8* %call22, null
  br i1 %cmp23, label %if.then24, label %if.else

if.then24:                                        ; preds = %for.body20
  %22 = load %struct._IO_FILE** %fpout.addr, align 8
  %23 = load i8** %fmt.addr, align 8
  %24 = load i8** %data, align 8
  %call25 = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %22, i8* %23, i8* %24)
  br label %if.end51

if.else:                                          ; preds = %for.body20
  %25 = load i8** %fmt.addr, align 8
  %call26 = call i8* @strstr(i8* %25, i8* getelementptr inbounds ([2 x i8]* @.str19190, i32 0, i32 0)) #9
  %cmp27 = icmp ne i8* %call26, null
  br i1 %cmp27, label %if.then28, label %if.else30

if.then28:                                        ; preds = %if.else
  %26 = load %struct._IO_FILE** %fpout.addr, align 8
  %27 = load i8** %fmt.addr, align 8
  %28 = load i8** %data, align 8
  %29 = bitcast i8* %28 to i32*
  %30 = load i32* %29, align 4
  %call29 = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %26, i8* %27, i32 %30)
  br label %if.end50

if.else30:                                        ; preds = %if.else
  %31 = load i8** %fmt.addr, align 8
  %call31 = call i8* @strstr(i8* %31, i8* getelementptr inbounds ([2 x i8]* @.str20191, i32 0, i32 0)) #9
  %cmp32 = icmp ne i8* %call31, null
  br i1 %cmp32, label %if.then33, label %if.else35

if.then33:                                        ; preds = %if.else30
  %32 = load %struct._IO_FILE** %fpout.addr, align 8
  %33 = load i8** %fmt.addr, align 8
  %34 = load i8** %data, align 8
  %35 = bitcast i8* %34 to double*
  %36 = load double* %35, align 8
  %call34 = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %32, i8* %33, double %36)
  br label %if.end49

if.else35:                                        ; preds = %if.else30
  %37 = load i8** %fmt.addr, align 8
  %call36 = call i8* @strstr(i8* %37, i8* getelementptr inbounds ([2 x i8]* @.str21192, i32 0, i32 0)) #9
  %cmp37 = icmp ne i8* %call36, null
  br i1 %cmp37, label %if.then38, label %if.else40

if.then38:                                        ; preds = %if.else35
  %38 = load %struct._IO_FILE** %fpout.addr, align 8
  %39 = load i8** %fmt.addr, align 8
  %40 = load i8** %data, align 8
  %41 = bitcast i8* %40 to double*
  %42 = load double* %41, align 8
  %call39 = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %38, i8* %39, double %42)
  br label %if.end48

if.else40:                                        ; preds = %if.else35
  %43 = load i8** %fmt.addr, align 8
  %call41 = call i8* @strstr(i8* %43, i8* getelementptr inbounds ([2 x i8]* @.str22193, i32 0, i32 0)) #9
  %cmp42 = icmp ne i8* %call41, null
  br i1 %cmp42, label %if.then43, label %if.else45

if.then43:                                        ; preds = %if.else40
  %44 = load %struct._IO_FILE** %fpout.addr, align 8
  %45 = load i8** %fmt.addr, align 8
  %46 = load i8** %data, align 8
  %47 = bitcast i8* %46 to double*
  %48 = load double* %47, align 8
  %call44 = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %44, i8* %45, double %48)
  br label %if.end47

if.else45:                                        ; preds = %if.else40
  %49 = load i8** %fmt.addr, align 8
  %call46 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([50 x i8]* @.str23194, i32 0, i32 0), i8* %49)
  store i32 1, i32* %retval
  br label %return

if.end47:                                         ; preds = %if.then43
  br label %if.end48

if.end48:                                         ; preds = %if.end47, %if.then38
  br label %if.end49

if.end49:                                         ; preds = %if.end48, %if.then33
  br label %if.end50

if.end50:                                         ; preds = %if.end49, %if.then28
  br label %if.end51

if.end51:                                         ; preds = %if.end50, %if.then24
  br label %for.inc52

for.inc52:                                        ; preds = %if.end51
  %50 = load i32* %k, align 4
  %inc53 = add nsw i32 %50, 1
  store i32 %inc53, i32* %k, align 4
  %51 = load i32* %stride.addr, align 4
  %52 = load i8** %data, align 8
  %idx.ext = sext i32 %51 to i64
  %add.ptr = getelementptr inbounds i8* %52, i64 %idx.ext
  store i8* %add.ptr, i8** %data, align 8
  br label %for.cond18

for.end54:                                        ; preds = %for.cond18
  %53 = load %struct._IO_FILE** %fpout.addr, align 8
  %call55 = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %53, i8* getelementptr inbounds ([2 x i8]* @.str24195, i32 0, i32 0))
  store i32 0, i32* %retval
  br label %return

return:                                           ; preds = %for.end54, %if.else45
  %54 = load i32* %retval
  ret i32 %54
}

declare i32 @fprintf(%struct._IO_FILE*, i8*, ...) #1

; Function Attrs: nounwind readonly
declare i8* @strstr(i8*, i8*) #6

; Function Attrs: nounwind uwtable
define internal void @write_gauge_info_file(%struct.gauge_file* %gf) #0 {
entry:
  %gf.addr = alloca %struct.gauge_file*, align 8
  %info_fp = alloca %struct._IO_FILE*, align 8
  %gh = alloca %struct.gauge_header*, align 8
  %info_filename = alloca [256 x i8], align 16
  %sums = alloca [20 x i8], align 16
  store %struct.gauge_file* %gf, %struct.gauge_file** %gf.addr, align 8
  %0 = load %struct.gauge_file** %gf.addr, align 8
  %header = getelementptr inbounds %struct.gauge_file* %0, i32 0, i32 1
  %1 = load %struct.gauge_header** %header, align 8
  store %struct.gauge_header* %1, %struct.gauge_header** %gh, align 8
  %arraydecay = getelementptr inbounds [256 x i8]* %info_filename, i32 0, i32 0
  %2 = load %struct.gauge_file** %gf.addr, align 8
  %filename = getelementptr inbounds %struct.gauge_file* %2, i32 0, i32 2
  %3 = load i8** %filename, align 8
  %call = call i8* @strcpy(i8* %arraydecay, i8* %3) #2
  %arraydecay1 = getelementptr inbounds [256 x i8]* %info_filename, i32 0, i32 0
  %call2 = call i8* @strcat(i8* %arraydecay1, i8* getelementptr inbounds ([6 x i8]* @.str25196, i32 0, i32 0)) #2
  %arraydecay3 = getelementptr inbounds [256 x i8]* %info_filename, i32 0, i32 0
  %call4 = call %struct._IO_FILE* @fopen(i8* %arraydecay3, i8* getelementptr inbounds ([2 x i8]* @.str26197, i32 0, i32 0))
  store %struct._IO_FILE* %call4, %struct._IO_FILE** %info_fp, align 8
  %cmp = icmp eq %struct._IO_FILE* %call4, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %arraydecay5 = getelementptr inbounds [256 x i8]* %info_filename, i32 0, i32 0
  %call6 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([54 x i8]* @.str27198, i32 0, i32 0), i8* %arraydecay5)
  br label %return

if.end:                                           ; preds = %entry
  %4 = load %struct._IO_FILE** %info_fp, align 8
  %5 = load %struct.gauge_header** %gh, align 8
  %magic_number = getelementptr inbounds %struct.gauge_header* %5, i32 0, i32 0
  %6 = bitcast i32* %magic_number to i8*
  %call7 = call i32 @write_gauge_info_item(%struct._IO_FILE* %4, i8* getelementptr inbounds ([13 x i8]* @.str10181, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8]* @.str171, i32 0, i32 0), i8* %6, i32 0, i32 0)
  %7 = load %struct._IO_FILE** %info_fp, align 8
  %8 = load %struct.gauge_header** %gh, align 8
  %time_stamp = getelementptr inbounds %struct.gauge_header* %8, i32 0, i32 1
  %arraydecay8 = getelementptr inbounds [64 x i8]* %time_stamp, i32 0, i32 0
  %call9 = call i32 @write_gauge_info_item(%struct._IO_FILE* %7, i8* getelementptr inbounds ([11 x i8]* @.str12183, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8]* @.str28199, i32 0, i32 0), i8* %arraydecay8, i32 0, i32 0)
  %arraydecay10 = getelementptr inbounds [20 x i8]* %sums, i32 0, i32 0
  %9 = load %struct.gauge_file** %gf.addr, align 8
  %check = getelementptr inbounds %struct.gauge_file* %9, i32 0, i32 6
  %sum29 = getelementptr inbounds %struct.gauge_check* %check, i32 0, i32 1
  %10 = load i32* %sum29, align 4
  %11 = load %struct.gauge_file** %gf.addr, align 8
  %check11 = getelementptr inbounds %struct.gauge_file* %11, i32 0, i32 6
  %sum31 = getelementptr inbounds %struct.gauge_check* %check11, i32 0, i32 0
  %12 = load i32* %sum31, align 4
  %call12 = call i32 (i8*, i8*, ...)* @sprintf(i8* %arraydecay10, i8* getelementptr inbounds ([6 x i8]* @.str29200, i32 0, i32 0), i32 %10, i32 %12) #2
  %13 = load %struct._IO_FILE** %info_fp, align 8
  %arraydecay13 = getelementptr inbounds [20 x i8]* %sums, i32 0, i32 0
  %call14 = call i32 @write_gauge_info_item(%struct._IO_FILE* %13, i8* getelementptr inbounds ([10 x i8]* @.str30201, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8]* @.str28199, i32 0, i32 0), i8* %arraydecay13, i32 0, i32 0)
  %14 = load %struct._IO_FILE** %info_fp, align 8
  %call15 = call i32 @write_gauge_info_item(%struct._IO_FILE* %14, i8* getelementptr inbounds ([3 x i8]* @.str31202, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8]* @.str171, i32 0, i32 0), i8* bitcast (i32* @nx to i8*), i32 0, i32 0)
  %15 = load %struct._IO_FILE** %info_fp, align 8
  %call16 = call i32 @write_gauge_info_item(%struct._IO_FILE* %15, i8* getelementptr inbounds ([3 x i8]* @.str32203, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8]* @.str171, i32 0, i32 0), i8* bitcast (i32* @ny to i8*), i32 0, i32 0)
  %16 = load %struct._IO_FILE** %info_fp, align 8
  %call17 = call i32 @write_gauge_info_item(%struct._IO_FILE* %16, i8* getelementptr inbounds ([3 x i8]* @.str33204, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8]* @.str171, i32 0, i32 0), i8* bitcast (i32* @nz to i8*), i32 0, i32 0)
  %17 = load %struct._IO_FILE** %info_fp, align 8
  %call18 = call i32 @write_gauge_info_item(%struct._IO_FILE* %17, i8* getelementptr inbounds ([3 x i8]* @.str34205, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8]* @.str171, i32 0, i32 0), i8* bitcast (i32* @nt to i8*), i32 0, i32 0)
  %18 = load %struct._IO_FILE** %info_fp, align 8
  call void @write_appl_gauge_info(%struct._IO_FILE* %18)
  %19 = load %struct._IO_FILE** %info_fp, align 8
  %call19 = call i32 @fclose(%struct._IO_FILE* %19)
  %arraydecay20 = getelementptr inbounds [256 x i8]* %info_filename, i32 0, i32 0
  %call21 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([20 x i8]* @.str35206, i32 0, i32 0), i8* %arraydecay20)
  br label %return

return:                                           ; preds = %if.end, %if.then
  ret void
}

; Function Attrs: nounwind
declare i8* @strcat(i8*, i8*) #3

declare %struct._IO_FILE* @fopen(i8*, i8*) #1

; Function Attrs: nounwind
declare i32 @sprintf(i8*, i8*, ...) #3

declare i32 @fclose(%struct._IO_FILE*) #1

; Function Attrs: nounwind uwtable
define internal %struct.gauge_file* @setup_input_gauge_file(i8* %filename) #0 {
entry:
  %filename.addr = alloca i8*, align 8
  %myname = alloca [23 x i8], align 16
  %gf = alloca %struct.gauge_file*, align 8
  %gh = alloca %struct.gauge_header*, align 8
  store i8* %filename, i8** %filename.addr, align 8
  %0 = bitcast [23 x i8]* %myname to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %0, i8* getelementptr inbounds ([23 x i8]* @setup_input_gauge_file.myname, i32 0, i32 0), i64 23, i32 16, i1 false)
  %call = call noalias i8* @calloc(i64 1, i64 56) #2
  %1 = bitcast i8* %call to %struct.gauge_file*
  store %struct.gauge_file* %1, %struct.gauge_file** %gf, align 8
  %2 = load %struct.gauge_file** %gf, align 8
  %cmp = icmp eq %struct.gauge_file* %2, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %arraydecay = getelementptr inbounds [23 x i8]* %myname, i32 0, i32 0
  %call1 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([21 x i8]* @.str36207, i32 0, i32 0), i8* %arraydecay)
  call void @terminate(i32 1)
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %3 = load i8** %filename.addr, align 8
  %4 = load %struct.gauge_file** %gf, align 8
  %filename2 = getelementptr inbounds %struct.gauge_file* %4, i32 0, i32 2
  store i8* %3, i8** %filename2, align 8
  %call3 = call noalias i8* @calloc(i64 1, i64 92) #2
  %5 = bitcast i8* %call3 to %struct.gauge_header*
  store %struct.gauge_header* %5, %struct.gauge_header** %gh, align 8
  %6 = load %struct.gauge_header** %gh, align 8
  %cmp4 = icmp eq %struct.gauge_header* %6, null
  br i1 %cmp4, label %if.then5, label %if.end8

if.then5:                                         ; preds = %if.end
  %arraydecay6 = getelementptr inbounds [23 x i8]* %myname, i32 0, i32 0
  %call7 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([21 x i8]* @.str37208, i32 0, i32 0), i8* %arraydecay6)
  call void @terminate(i32 1)
  br label %if.end8

if.end8:                                          ; preds = %if.then5, %if.end
  %7 = load %struct.gauge_header** %gh, align 8
  %8 = load %struct.gauge_file** %gf, align 8
  %header = getelementptr inbounds %struct.gauge_file* %8, i32 0, i32 1
  store %struct.gauge_header* %7, %struct.gauge_header** %header, align 8
  %9 = load %struct.gauge_file** %gf, align 8
  %check = getelementptr inbounds %struct.gauge_file* %9, i32 0, i32 6
  %sum29 = getelementptr inbounds %struct.gauge_check* %check, i32 0, i32 1
  store i32 0, i32* %sum29, align 4
  %10 = load %struct.gauge_file** %gf, align 8
  %check9 = getelementptr inbounds %struct.gauge_file* %10, i32 0, i32 6
  %sum31 = getelementptr inbounds %struct.gauge_check* %check9, i32 0, i32 0
  store i32 0, i32* %sum31, align 4
  %11 = load %struct.gauge_file** %gf, align 8
  ret %struct.gauge_file* %11
}

; Function Attrs: nounwind uwtable
define internal %struct.gauge_file* @setup_output_gauge_file() #0 {
entry:
  %myname = alloca [24 x i8], align 16
  %gf = alloca %struct.gauge_file*, align 8
  %gh = alloca %struct.gauge_header*, align 8
  %time_stamp = alloca i64, align 8
  %i = alloca i32, align 4
  %0 = bitcast [24 x i8]* %myname to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %0, i8* getelementptr inbounds ([24 x i8]* @setup_output_gauge_file.myname, i32 0, i32 0), i64 24, i32 16, i1 false)
  %call = call noalias i8* @calloc(i64 1, i64 56) #2
  %1 = bitcast i8* %call to %struct.gauge_file*
  store %struct.gauge_file* %1, %struct.gauge_file** %gf, align 8
  %2 = load %struct.gauge_file** %gf, align 8
  %cmp = icmp eq %struct.gauge_file* %2, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %arraydecay = getelementptr inbounds [24 x i8]* %myname, i32 0, i32 0
  %call1 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([21 x i8]* @.str36207, i32 0, i32 0), i8* %arraydecay)
  call void @terminate(i32 1)
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %call2 = call noalias i8* @calloc(i64 1, i64 92) #2
  %3 = bitcast i8* %call2 to %struct.gauge_header*
  store %struct.gauge_header* %3, %struct.gauge_header** %gh, align 8
  %4 = load %struct.gauge_header** %gh, align 8
  %cmp3 = icmp eq %struct.gauge_header* %4, null
  br i1 %cmp3, label %if.then4, label %if.end7

if.then4:                                         ; preds = %if.end
  %arraydecay5 = getelementptr inbounds [24 x i8]* %myname, i32 0, i32 0
  %call6 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([21 x i8]* @.str37208, i32 0, i32 0), i8* %arraydecay5)
  call void @terminate(i32 1)
  br label %if.end7

if.end7:                                          ; preds = %if.then4, %if.end
  %5 = load %struct.gauge_header** %gh, align 8
  %6 = load %struct.gauge_file** %gf, align 8
  %header = getelementptr inbounds %struct.gauge_file* %6, i32 0, i32 1
  store %struct.gauge_header* %5, %struct.gauge_header** %header, align 8
  %7 = load %struct.gauge_file** %gf, align 8
  %check = getelementptr inbounds %struct.gauge_file* %7, i32 0, i32 6
  %sum29 = getelementptr inbounds %struct.gauge_check* %check, i32 0, i32 1
  store i32 0, i32* %sum29, align 4
  %8 = load %struct.gauge_file** %gf, align 8
  %check8 = getelementptr inbounds %struct.gauge_file* %8, i32 0, i32 6
  %sum31 = getelementptr inbounds %struct.gauge_check* %check8, i32 0, i32 0
  store i32 0, i32* %sum31, align 4
  %9 = load %struct.gauge_header** %gh, align 8
  %magic_number = getelementptr inbounds %struct.gauge_header* %9, i32 0, i32 0
  store i32 20103, i32* %magic_number, align 4
  %10 = load i32* @nx, align 4
  %11 = load %struct.gauge_header** %gh, align 8
  %dims = getelementptr inbounds %struct.gauge_header* %11, i32 0, i32 2
  %arrayidx = getelementptr inbounds [4 x i32]* %dims, i32 0, i64 0
  store i32 %10, i32* %arrayidx, align 4
  %12 = load i32* @ny, align 4
  %13 = load %struct.gauge_header** %gh, align 8
  %dims9 = getelementptr inbounds %struct.gauge_header* %13, i32 0, i32 2
  %arrayidx10 = getelementptr inbounds [4 x i32]* %dims9, i32 0, i64 1
  store i32 %12, i32* %arrayidx10, align 4
  %14 = load i32* @nz, align 4
  %15 = load %struct.gauge_header** %gh, align 8
  %dims11 = getelementptr inbounds %struct.gauge_header* %15, i32 0, i32 2
  %arrayidx12 = getelementptr inbounds [4 x i32]* %dims11, i32 0, i64 2
  store i32 %14, i32* %arrayidx12, align 4
  %16 = load i32* @nt, align 4
  %17 = load %struct.gauge_header** %gh, align 8
  %dims13 = getelementptr inbounds %struct.gauge_header* %17, i32 0, i32 2
  %arrayidx14 = getelementptr inbounds [4 x i32]* %dims13, i32 0, i64 3
  store i32 %16, i32* %arrayidx14, align 4
  %18 = load i32* @this_node, align 4
  %cmp15 = icmp eq i32 %18, 0
  br i1 %cmp15, label %if.then16, label %if.end45

if.then16:                                        ; preds = %if.end7
  %call17 = call i64 @time(i64* %time_stamp) #2
  %19 = load %struct.gauge_header** %gh, align 8
  %time_stamp18 = getelementptr inbounds %struct.gauge_header* %19, i32 0, i32 1
  %arraydecay19 = getelementptr inbounds [64 x i8]* %time_stamp18, i32 0, i32 0
  %call20 = call i8* @ctime(i64* %time_stamp) #2
  %call21 = call i8* @strcpy(i8* %arraydecay19, i8* %call20) #2
  %20 = load %struct.gauge_header** %gh, align 8
  %time_stamp22 = getelementptr inbounds %struct.gauge_header* %20, i32 0, i32 1
  %arraydecay23 = getelementptr inbounds [64 x i8]* %time_stamp22, i32 0, i32 0
  %call24 = call i64 @strlen(i8* %arraydecay23) #9
  %add = add i64 %call24, 1
  %conv = trunc i64 %add to i32
  store i32 %conv, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.then16
  %21 = load i32* %i, align 4
  %cmp25 = icmp slt i32 %21, 64
  br i1 %cmp25, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %22 = load i32* %i, align 4
  %idxprom = sext i32 %22 to i64
  %23 = load %struct.gauge_header** %gh, align 8
  %time_stamp27 = getelementptr inbounds %struct.gauge_header* %23, i32 0, i32 1
  %arrayidx28 = getelementptr inbounds [64 x i8]* %time_stamp27, i32 0, i64 %idxprom
  store i8 0, i8* %arrayidx28, align 1
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %24 = load i32* %i, align 4
  %inc = add nsw i32 %24, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %25 = load %struct.gauge_header** %gh, align 8
  %time_stamp29 = getelementptr inbounds %struct.gauge_header* %25, i32 0, i32 1
  %arraydecay30 = getelementptr inbounds [64 x i8]* %time_stamp29, i32 0, i32 0
  %call31 = call i64 @strlen(i8* %arraydecay30) #9
  %sub = sub i64 %call31, 1
  %26 = load %struct.gauge_header** %gh, align 8
  %time_stamp32 = getelementptr inbounds %struct.gauge_header* %26, i32 0, i32 1
  %arrayidx33 = getelementptr inbounds [64 x i8]* %time_stamp32, i32 0, i64 %sub
  %27 = load i8* %arrayidx33, align 1
  %conv34 = sext i8 %27 to i32
  %cmp35 = icmp eq i32 %conv34, 10
  br i1 %cmp35, label %if.then37, label %if.end44

if.then37:                                        ; preds = %for.end
  %28 = load %struct.gauge_header** %gh, align 8
  %time_stamp38 = getelementptr inbounds %struct.gauge_header* %28, i32 0, i32 1
  %arraydecay39 = getelementptr inbounds [64 x i8]* %time_stamp38, i32 0, i32 0
  %call40 = call i64 @strlen(i8* %arraydecay39) #9
  %sub41 = sub i64 %call40, 1
  %29 = load %struct.gauge_header** %gh, align 8
  %time_stamp42 = getelementptr inbounds %struct.gauge_header* %29, i32 0, i32 1
  %arrayidx43 = getelementptr inbounds [64 x i8]* %time_stamp42, i32 0, i64 %sub41
  store i8 0, i8* %arrayidx43, align 1
  br label %if.end44

if.end44:                                         ; preds = %if.then37, %for.end
  br label %if.end45

if.end45:                                         ; preds = %if.end44, %if.end7
  %30 = load %struct.gauge_header** %gh, align 8
  %time_stamp46 = getelementptr inbounds %struct.gauge_header* %30, i32 0, i32 1
  %arraydecay47 = getelementptr inbounds [64 x i8]* %time_stamp46, i32 0, i32 0
  call void @broadcast_bytes(i8* %arraydecay47, i32 64)
  %31 = load %struct.gauge_file** %gf, align 8
  ret %struct.gauge_file* %31
}

; Function Attrs: nounwind
declare i64 @time(i64*) #3

; Function Attrs: nounwind
declare i8* @ctime(i64*) #3

; Function Attrs: nounwind uwtable
define internal %struct.gauge_file* @w_serial_i(i8* %filename) #0 {
entry:
  %filename.addr = alloca i8*, align 8
  %myname = alloca [11 x i8], align 1
  %fp = alloca %struct._IO_FILE*, align 8
  %gf = alloca %struct.gauge_file*, align 8
  %gh = alloca %struct.gauge_header*, align 8
  store i8* %filename, i8** %filename.addr, align 8
  %0 = bitcast [11 x i8]* %myname to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %0, i8* getelementptr inbounds ([11 x i8]* @w_serial_i.myname, i32 0, i32 0), i64 11, i32 1, i1 false)
  %call = call %struct.gauge_file* @setup_output_gauge_file()
  store %struct.gauge_file* %call, %struct.gauge_file** %gf, align 8
  %1 = load %struct.gauge_file** %gf, align 8
  %header = getelementptr inbounds %struct.gauge_file* %1, i32 0, i32 1
  %2 = load %struct.gauge_header** %header, align 8
  store %struct.gauge_header* %2, %struct.gauge_header** %gh, align 8
  %3 = load %struct.gauge_header** %gh, align 8
  %order = getelementptr inbounds %struct.gauge_header* %3, i32 0, i32 4
  store i32 0, i32* %order, align 4
  %4 = load i32* @this_node, align 4
  %cmp = icmp eq i32 %4, 0
  br i1 %cmp, label %if.then, label %if.end7

if.then:                                          ; preds = %entry
  %5 = load i8** %filename.addr, align 8
  %call1 = call %struct._IO_FILE* @fopen(i8* %5, i8* getelementptr inbounds ([3 x i8]* @.str38209, i32 0, i32 0))
  store %struct._IO_FILE* %call1, %struct._IO_FILE** %fp, align 8
  %6 = load %struct._IO_FILE** %fp, align 8
  %cmp2 = icmp eq %struct._IO_FILE* %6, null
  br i1 %cmp2, label %if.then3, label %if.end

if.then3:                                         ; preds = %if.then
  %arraydecay = getelementptr inbounds [11 x i8]* %myname, i32 0, i32 0
  %7 = load i32* @this_node, align 4
  %8 = load i8** %filename.addr, align 8
  %call4 = call i32* @__errno_location() #8
  %9 = load i32* %call4, align 4
  %call5 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([42 x i8]* @.str39210, i32 0, i32 0), i8* %arraydecay, i32 %7, i8* %8, i32 %9)
  %10 = load %struct._IO_FILE** @stdout, align 8
  %call6 = call i32 @fflush(%struct._IO_FILE* %10)
  call void @terminate(i32 1)
  br label %if.end

if.end:                                           ; preds = %if.then3, %if.then
  %11 = load %struct._IO_FILE** %fp, align 8
  %12 = load %struct.gauge_header** %gh, align 8
  call void @swrite_gauge_hdr(%struct._IO_FILE* %11, %struct.gauge_header* %12)
  br label %if.end7

if.end7:                                          ; preds = %if.end, %entry
  %13 = load i32* @this_node, align 4
  %cmp8 = icmp eq i32 %13, 0
  br i1 %cmp8, label %if.then9, label %if.else

if.then9:                                         ; preds = %if.end7
  %14 = load %struct._IO_FILE** %fp, align 8
  %15 = load %struct.gauge_file** %gf, align 8
  %fp10 = getelementptr inbounds %struct.gauge_file* %15, i32 0, i32 0
  store %struct._IO_FILE* %14, %struct._IO_FILE** %fp10, align 8
  br label %if.end12

if.else:                                          ; preds = %if.end7
  %16 = load %struct.gauge_file** %gf, align 8
  %fp11 = getelementptr inbounds %struct.gauge_file* %16, i32 0, i32 0
  store %struct._IO_FILE* null, %struct._IO_FILE** %fp11, align 8
  br label %if.end12

if.end12:                                         ; preds = %if.else, %if.then9
  %17 = load i8** %filename.addr, align 8
  %18 = load %struct.gauge_file** %gf, align 8
  %filename13 = getelementptr inbounds %struct.gauge_file* %18, i32 0, i32 2
  store i8* %17, i8** %filename13, align 8
  %19 = load %struct.gauge_file** %gf, align 8
  %byterevflag = getelementptr inbounds %struct.gauge_file* %19, i32 0, i32 3
  store i32 0, i32* %byterevflag, align 4
  %20 = load %struct.gauge_file** %gf, align 8
  %rank2rcv = getelementptr inbounds %struct.gauge_file* %20, i32 0, i32 4
  store i32* null, i32** %rank2rcv, align 8
  %21 = load %struct.gauge_file** %gf, align 8
  %parallel = getelementptr inbounds %struct.gauge_file* %21, i32 0, i32 5
  store i32 0, i32* %parallel, align 4
  %22 = load %struct.gauge_file** %gf, align 8
  ret %struct.gauge_file* %22
}

; Function Attrs: nounwind uwtable
define internal void @read_checksum(i32 %parallel, %struct.gauge_file* %gf, %struct.gauge_check* %test_gc) #0 {
entry:
  %parallel.addr = alloca i32, align 4
  %gf.addr = alloca %struct.gauge_file*, align 8
  %test_gc.addr = alloca %struct.gauge_check*, align 8
  %myname = alloca [14 x i8], align 1
  store i32 %parallel, i32* %parallel.addr, align 4
  store %struct.gauge_file* %gf, %struct.gauge_file** %gf.addr, align 8
  store %struct.gauge_check* %test_gc, %struct.gauge_check** %test_gc.addr, align 8
  %0 = bitcast [14 x i8]* %myname to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %0, i8* getelementptr inbounds ([14 x i8]* @read_checksum.myname, i32 0, i32 0), i64 14, i32 1, i1 false)
  %1 = load %struct.gauge_file** %gf.addr, align 8
  %byterevflag = getelementptr inbounds %struct.gauge_file* %1, i32 0, i32 3
  %2 = load i32* %byterevflag, align 4
  %3 = load i32* %parallel.addr, align 4
  %4 = load %struct.gauge_file** %gf.addr, align 8
  %fp = getelementptr inbounds %struct.gauge_file* %4, i32 0, i32 0
  %5 = load %struct._IO_FILE** %fp, align 8
  %6 = load %struct.gauge_file** %gf.addr, align 8
  %check = getelementptr inbounds %struct.gauge_file* %6, i32 0, i32 6
  %sum29 = getelementptr inbounds %struct.gauge_check* %check, i32 0, i32 1
  %7 = bitcast i32* %sum29 to i8*
  %arraydecay = getelementptr inbounds [14 x i8]* %myname, i32 0, i32 0
  %call = call i32 @psread_byteorder(i32 %2, i32 %3, %struct._IO_FILE* %5, i8* %7, i64 4, i8* %arraydecay, i8* getelementptr inbounds ([9 x i8]* @.str40211, i32 0, i32 0))
  %cmp = icmp ne i32 %call, 0
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  call void @terminate(i32 1)
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %8 = load %struct.gauge_file** %gf.addr, align 8
  %byterevflag1 = getelementptr inbounds %struct.gauge_file* %8, i32 0, i32 3
  %9 = load i32* %byterevflag1, align 4
  %10 = load i32* %parallel.addr, align 4
  %11 = load %struct.gauge_file** %gf.addr, align 8
  %fp2 = getelementptr inbounds %struct.gauge_file* %11, i32 0, i32 0
  %12 = load %struct._IO_FILE** %fp2, align 8
  %13 = load %struct.gauge_file** %gf.addr, align 8
  %check3 = getelementptr inbounds %struct.gauge_file* %13, i32 0, i32 6
  %sum31 = getelementptr inbounds %struct.gauge_check* %check3, i32 0, i32 0
  %14 = bitcast i32* %sum31 to i8*
  %arraydecay4 = getelementptr inbounds [14 x i8]* %myname, i32 0, i32 0
  %call5 = call i32 @psread_byteorder(i32 %9, i32 %10, %struct._IO_FILE* %12, i8* %14, i64 4, i8* %arraydecay4, i8* getelementptr inbounds ([9 x i8]* @.str40211, i32 0, i32 0))
  %cmp6 = icmp ne i32 %call5, 0
  br i1 %cmp6, label %if.then7, label %if.end8

if.then7:                                         ; preds = %if.end
  call void @terminate(i32 1)
  br label %if.end8

if.end8:                                          ; preds = %if.then7, %if.end
  %15 = load %struct.gauge_file** %gf.addr, align 8
  %check9 = getelementptr inbounds %struct.gauge_file* %15, i32 0, i32 6
  %sum2910 = getelementptr inbounds %struct.gauge_check* %check9, i32 0, i32 1
  %16 = load i32* %sum2910, align 4
  %17 = load %struct.gauge_check** %test_gc.addr, align 8
  %sum2911 = getelementptr inbounds %struct.gauge_check* %17, i32 0, i32 1
  %18 = load i32* %sum2911, align 4
  %cmp12 = icmp ne i32 %16, %18
  br i1 %cmp12, label %if.then17, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.end8
  %19 = load %struct.gauge_file** %gf.addr, align 8
  %check13 = getelementptr inbounds %struct.gauge_file* %19, i32 0, i32 6
  %sum3114 = getelementptr inbounds %struct.gauge_check* %check13, i32 0, i32 0
  %20 = load i32* %sum3114, align 4
  %21 = load %struct.gauge_check** %test_gc.addr, align 8
  %sum3115 = getelementptr inbounds %struct.gauge_check* %21, i32 0, i32 0
  %22 = load i32* %sum3115, align 4
  %cmp16 = icmp ne i32 %20, %22
  br i1 %cmp16, label %if.then17, label %if.else

if.then17:                                        ; preds = %lor.lhs.false, %if.end8
  %arraydecay18 = getelementptr inbounds [14 x i8]* %myname, i32 0, i32 0
  %23 = load %struct.gauge_check** %test_gc.addr, align 8
  %sum2919 = getelementptr inbounds %struct.gauge_check* %23, i32 0, i32 1
  %24 = load i32* %sum2919, align 4
  %25 = load %struct.gauge_check** %test_gc.addr, align 8
  %sum3120 = getelementptr inbounds %struct.gauge_check* %25, i32 0, i32 0
  %26 = load i32* %sum3120, align 4
  %27 = load %struct.gauge_file** %gf.addr, align 8
  %check21 = getelementptr inbounds %struct.gauge_file* %27, i32 0, i32 6
  %sum2922 = getelementptr inbounds %struct.gauge_check* %check21, i32 0, i32 1
  %28 = load i32* %sum2922, align 4
  %29 = load %struct.gauge_file** %gf.addr, align 8
  %check23 = getelementptr inbounds %struct.gauge_file* %29, i32 0, i32 6
  %sum3124 = getelementptr inbounds %struct.gauge_check* %check23, i32 0, i32 0
  %30 = load i32* %sum3124, align 4
  %call25 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([54 x i8]* @.str41212, i32 0, i32 0), i8* %arraydecay18, i32 %24, i32 %26, i32 %28, i32 %30)
  br label %if.end32

if.else:                                          ; preds = %lor.lhs.false
  %31 = load %struct.gauge_file** %gf.addr, align 8
  %check26 = getelementptr inbounds %struct.gauge_file* %31, i32 0, i32 6
  %sum2927 = getelementptr inbounds %struct.gauge_check* %check26, i32 0, i32 1
  %32 = load i32* %sum2927, align 4
  %33 = load %struct.gauge_file** %gf.addr, align 8
  %check28 = getelementptr inbounds %struct.gauge_file* %33, i32 0, i32 6
  %sum3129 = getelementptr inbounds %struct.gauge_check* %check28, i32 0, i32 0
  %34 = load i32* %sum3129, align 4
  %call30 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([20 x i8]* @.str42213, i32 0, i32 0), i32 %32, i32 %34)
  %35 = load %struct._IO_FILE** @stdout, align 8
  %call31 = call i32 @fflush(%struct._IO_FILE* %35)
  br label %if.end32

if.end32:                                         ; preds = %if.else, %if.then17
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @write_checksum(i32 %parallel, %struct.gauge_file* %gf) #0 {
entry:
  %parallel.addr = alloca i32, align 4
  %gf.addr = alloca %struct.gauge_file*, align 8
  %myname = alloca [15 x i8], align 1
  store i32 %parallel, i32* %parallel.addr, align 4
  store %struct.gauge_file* %gf, %struct.gauge_file** %gf.addr, align 8
  %0 = bitcast [15 x i8]* %myname to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %0, i8* getelementptr inbounds ([15 x i8]* @write_checksum.myname, i32 0, i32 0), i64 15, i32 1, i1 false)
  %1 = load i32* %parallel.addr, align 4
  %2 = load %struct.gauge_file** %gf.addr, align 8
  %fp = getelementptr inbounds %struct.gauge_file* %2, i32 0, i32 0
  %3 = load %struct._IO_FILE** %fp, align 8
  %4 = load %struct.gauge_file** %gf.addr, align 8
  %check = getelementptr inbounds %struct.gauge_file* %4, i32 0, i32 6
  %sum29 = getelementptr inbounds %struct.gauge_check* %check, i32 0, i32 1
  %5 = bitcast i32* %sum29 to i8*
  %arraydecay = getelementptr inbounds [15 x i8]* %myname, i32 0, i32 0
  call void @pswrite_data(i32 %1, %struct._IO_FILE* %3, i8* %5, i64 4, i8* %arraydecay, i8* getelementptr inbounds ([9 x i8]* @.str40211, i32 0, i32 0))
  %6 = load i32* %parallel.addr, align 4
  %7 = load %struct.gauge_file** %gf.addr, align 8
  %fp1 = getelementptr inbounds %struct.gauge_file* %7, i32 0, i32 0
  %8 = load %struct._IO_FILE** %fp1, align 8
  %9 = load %struct.gauge_file** %gf.addr, align 8
  %check2 = getelementptr inbounds %struct.gauge_file* %9, i32 0, i32 6
  %sum31 = getelementptr inbounds %struct.gauge_check* %check2, i32 0, i32 0
  %10 = bitcast i32* %sum31 to i8*
  %arraydecay3 = getelementptr inbounds [15 x i8]* %myname, i32 0, i32 0
  call void @pswrite_data(i32 %6, %struct._IO_FILE* %8, i8* %10, i64 4, i8* %arraydecay3, i8* getelementptr inbounds ([9 x i8]* @.str40211, i32 0, i32 0))
  %11 = load %struct.gauge_file** %gf.addr, align 8
  %check4 = getelementptr inbounds %struct.gauge_file* %11, i32 0, i32 6
  %sum295 = getelementptr inbounds %struct.gauge_check* %check4, i32 0, i32 1
  %12 = load i32* %sum295, align 4
  %13 = load %struct.gauge_file** %gf.addr, align 8
  %check6 = getelementptr inbounds %struct.gauge_file* %13, i32 0, i32 6
  %sum317 = getelementptr inbounds %struct.gauge_check* %check6, i32 0, i32 0
  %14 = load i32* %sum317, align 4
  %call = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([17 x i8]* @.str43214, i32 0, i32 0), i32 %12, i32 %14)
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @w_serial(%struct.gauge_file* %gf) #0 {
entry:
  %gf.addr = alloca %struct.gauge_file*, align 8
  %fp = alloca %struct._IO_FILE*, align 8
  %gh = alloca %struct.gauge_header*, align 8
  %val = alloca i32*, align 8
  %rank29 = alloca i32, align 4
  %rank31 = alloca i32, align 4
  %lbuf = alloca %struct.su3_matrix*, align 8
  %tbuf = alloca [4 x %struct.su3_matrix], align 16
  %buf_length = alloca i32, align 4
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %k = alloca i32, align 4
  %offset = alloca i64, align 8
  %coord_list_size = alloca i64, align 8
  %head_size = alloca i64, align 8
  %checksum_offset = alloca i64, align 8
  %gauge_check_size = alloca i64, align 8
  %currentnode = alloca i32, align 4
  %newnode = alloca i32, align 4
  %x = alloca i32, align 4
  %y = alloca i32, align 4
  %z = alloca i32, align 4
  %t = alloca i32, align 4
  store %struct.gauge_file* %gf, %struct.gauge_file** %gf.addr, align 8
  %0 = load i32* @this_node, align 4
  %cmp = icmp eq i32 %0, 0
  br i1 %cmp, label %if.then, label %if.end18

if.then:                                          ; preds = %entry
  %1 = load %struct.gauge_file** %gf.addr, align 8
  %parallel = getelementptr inbounds %struct.gauge_file* %1, i32 0, i32 5
  %2 = load i32* %parallel, align 4
  %tobool = icmp ne i32 %2, 0
  br i1 %tobool, label %if.then1, label %if.end

if.then1:                                         ; preds = %if.then
  %call = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([53 x i8]* @.str44215, i32 0, i32 0))
  br label %if.end

if.end:                                           ; preds = %if.then1, %if.then
  %call2 = call noalias i8* @calloc(i64 16384, i64 144) #2
  %3 = bitcast i8* %call2 to %struct.su3_matrix*
  store %struct.su3_matrix* %3, %struct.su3_matrix** %lbuf, align 8
  %4 = load %struct.su3_matrix** %lbuf, align 8
  %cmp3 = icmp eq %struct.su3_matrix* %4, null
  br i1 %cmp3, label %if.then4, label %if.end7

if.then4:                                         ; preds = %if.end
  %call5 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([36 x i8]* @.str45216, i32 0, i32 0))
  %5 = load %struct._IO_FILE** @stdout, align 8
  %call6 = call i32 @fflush(%struct._IO_FILE* %5)
  call void @terminate(i32 1)
  br label %if.end7

if.end7:                                          ; preds = %if.then4, %if.end
  %6 = load %struct.gauge_file** %gf.addr, align 8
  %fp8 = getelementptr inbounds %struct.gauge_file* %6, i32 0, i32 0
  %7 = load %struct._IO_FILE** %fp8, align 8
  store %struct._IO_FILE* %7, %struct._IO_FILE** %fp, align 8
  %8 = load %struct.gauge_file** %gf.addr, align 8
  %header = getelementptr inbounds %struct.gauge_file* %8, i32 0, i32 1
  %9 = load %struct.gauge_header** %header, align 8
  store %struct.gauge_header* %9, %struct.gauge_header** %gh, align 8
  store i64 0, i64* %coord_list_size, align 8
  %10 = load %struct.gauge_header** %gh, align 8
  %header_bytes = getelementptr inbounds %struct.gauge_header* %10, i32 0, i32 3
  %11 = load i32* %header_bytes, align 4
  %conv = sext i32 %11 to i64
  %12 = load i64* %coord_list_size, align 8
  %add = add nsw i64 %conv, %12
  store i64 %add, i64* %head_size, align 8
  %13 = load i64* %head_size, align 8
  store i64 %13, i64* %checksum_offset, align 8
  store i64 8, i64* %gauge_check_size, align 8
  %14 = load i64* %head_size, align 8
  %15 = load i64* %gauge_check_size, align 8
  %add9 = add nsw i64 %14, %15
  store i64 %add9, i64* %offset, align 8
  %16 = load %struct._IO_FILE** %fp, align 8
  %17 = load i64* %offset, align 8
  %call10 = call i32 @fseek(%struct._IO_FILE* %16, i64 %17, i32 0)
  %cmp11 = icmp slt i32 %call10, 0
  br i1 %cmp11, label %if.then13, label %if.end17

if.then13:                                        ; preds = %if.end7
  %18 = load i32* @this_node, align 4
  %call14 = call i32* @__errno_location() #8
  %19 = load i32* %call14, align 4
  %20 = load %struct.gauge_file** %gf.addr, align 8
  %filename = getelementptr inbounds %struct.gauge_file* %20, i32 0, i32 2
  %21 = load i8** %filename, align 8
  %call15 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([50 x i8]* @.str46217, i32 0, i32 0), i32 %18, i32 %19, i8* %21)
  %22 = load %struct._IO_FILE** @stdout, align 8
  %call16 = call i32 @fflush(%struct._IO_FILE* %22)
  call void @terminate(i32 1)
  br label %if.end17

if.end17:                                         ; preds = %if.then13, %if.end7
  br label %if.end18

if.end18:                                         ; preds = %if.end17, %entry
  %23 = load %struct.gauge_file** %gf.addr, align 8
  %check = getelementptr inbounds %struct.gauge_file* %23, i32 0, i32 6
  %sum31 = getelementptr inbounds %struct.gauge_check* %check, i32 0, i32 0
  store i32 0, i32* %sum31, align 4
  %24 = load %struct.gauge_file** %gf.addr, align 8
  %check19 = getelementptr inbounds %struct.gauge_file* %24, i32 0, i32 6
  %sum29 = getelementptr inbounds %struct.gauge_check* %check19, i32 0, i32 1
  store i32 0, i32* %sum29, align 4
  %25 = load i32* @sites_on_node, align 4
  %conv20 = sext i32 %25 to i64
  %mul = mul i64 144, %conv20
  %26 = load i32* @this_node, align 4
  %conv21 = sext i32 %26 to i64
  %mul22 = mul i64 %mul, %conv21
  %rem = urem i64 %mul22, 29
  %conv23 = trunc i64 %rem to i32
  store i32 %conv23, i32* %rank29, align 4
  %27 = load i32* @sites_on_node, align 4
  %conv24 = sext i32 %27 to i64
  %mul25 = mul i64 144, %conv24
  %28 = load i32* @this_node, align 4
  %conv26 = sext i32 %28 to i64
  %mul27 = mul i64 %mul25, %conv26
  %rem28 = urem i64 %mul27, 31
  %conv29 = trunc i64 %rem28 to i32
  store i32 %conv29, i32* %rank31, align 4
  call void (...)* bitcast (void ()* @g_sync to void (...)*)()
  store i32 0, i32* %currentnode, align 4
  store i32 0, i32* %buf_length, align 4
  store i32 0, i32* %j, align 4
  store i32 0, i32* %t, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc153, %if.end18
  %29 = load i32* %t, align 4
  %30 = load i32* @nt, align 4
  %cmp30 = icmp slt i32 %29, %30
  br i1 %cmp30, label %for.body, label %for.end155

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %z, align 4
  br label %for.cond32

for.cond32:                                       ; preds = %for.inc150, %for.body
  %31 = load i32* %z, align 4
  %32 = load i32* @nz, align 4
  %cmp33 = icmp slt i32 %31, %32
  br i1 %cmp33, label %for.body35, label %for.end152

for.body35:                                       ; preds = %for.cond32
  store i32 0, i32* %y, align 4
  br label %for.cond36

for.cond36:                                       ; preds = %for.inc147, %for.body35
  %33 = load i32* %y, align 4
  %34 = load i32* @ny, align 4
  %cmp37 = icmp slt i32 %33, %34
  br i1 %cmp37, label %for.body39, label %for.end149

for.body39:                                       ; preds = %for.cond36
  store i32 0, i32* %x, align 4
  br label %for.cond40

for.cond40:                                       ; preds = %for.inc143, %for.body39
  %35 = load i32* %x, align 4
  %36 = load i32* @nx, align 4
  %cmp41 = icmp slt i32 %35, %36
  br i1 %cmp41, label %for.body43, label %for.end146

for.body43:                                       ; preds = %for.cond40
  %37 = load i32* %x, align 4
  %38 = load i32* %y, align 4
  %39 = load i32* %z, align 4
  %40 = load i32* %t, align 4
  %call44 = call i32 @node_number(i32 %37, i32 %38, i32 %39, i32 %40)
  store i32 %call44, i32* %newnode, align 4
  %41 = load i32* %newnode, align 4
  %42 = load i32* %currentnode, align 4
  %cmp45 = icmp ne i32 %41, %42
  br i1 %cmp45, label %if.then47, label %if.end62

if.then47:                                        ; preds = %for.body43
  %43 = load i32* @this_node, align 4
  %cmp48 = icmp eq i32 %43, 0
  br i1 %cmp48, label %land.lhs.true, label %if.end53

land.lhs.true:                                    ; preds = %if.then47
  %44 = load i32* %newnode, align 4
  %cmp50 = icmp ne i32 %44, 0
  br i1 %cmp50, label %if.then52, label %if.end53

if.then52:                                        ; preds = %land.lhs.true
  %arraydecay = getelementptr inbounds [4 x %struct.su3_matrix]* %tbuf, i32 0, i32 0
  %45 = bitcast %struct.su3_matrix* %arraydecay to i8*
  %46 = load i32* %newnode, align 4
  call void @send_field(i8* %45, i32 4, i32 %46)
  br label %if.end53

if.end53:                                         ; preds = %if.then52, %land.lhs.true, %if.then47
  %47 = load i32* @this_node, align 4
  %48 = load i32* %newnode, align 4
  %cmp54 = icmp eq i32 %47, %48
  br i1 %cmp54, label %land.lhs.true56, label %if.end61

land.lhs.true56:                                  ; preds = %if.end53
  %49 = load i32* %newnode, align 4
  %cmp57 = icmp ne i32 %49, 0
  br i1 %cmp57, label %if.then59, label %if.end61

if.then59:                                        ; preds = %land.lhs.true56
  %arraydecay60 = getelementptr inbounds [4 x %struct.su3_matrix]* %tbuf, i32 0, i32 0
  %50 = bitcast %struct.su3_matrix* %arraydecay60 to i8*
  call void @get_field(i8* %50, i32 4)
  br label %if.end61

if.end61:                                         ; preds = %if.then59, %land.lhs.true56, %if.end53
  %51 = load i32* %newnode, align 4
  store i32 %51, i32* %currentnode, align 4
  br label %if.end62

if.end62:                                         ; preds = %if.end61, %for.body43
  %52 = load i32* @this_node, align 4
  %cmp63 = icmp eq i32 %52, 0
  br i1 %cmp63, label %if.then65, label %if.else132

if.then65:                                        ; preds = %if.end62
  %53 = load i32* %currentnode, align 4
  %cmp66 = icmp eq i32 %53, 0
  br i1 %cmp66, label %if.then68, label %if.else

if.then68:                                        ; preds = %if.then65
  %54 = load i32* %x, align 4
  %55 = load i32* %y, align 4
  %56 = load i32* %z, align 4
  %57 = load i32* %t, align 4
  %call69 = call i32 @node_index(i32 %54, i32 %55, i32 %56, i32 %57)
  store i32 %call69, i32* %i, align 4
  store i32 0, i32* %k, align 4
  br label %for.cond70

for.cond70:                                       ; preds = %for.inc, %if.then68
  %58 = load i32* %k, align 4
  %cmp71 = icmp slt i32 %58, 4
  br i1 %cmp71, label %for.body73, label %for.end

for.body73:                                       ; preds = %for.cond70
  %59 = load i32* %k, align 4
  %idxprom = sext i32 %59 to i64
  %arrayidx = getelementptr inbounds [4 x %struct.su3_matrix]* %tbuf, i32 0, i64 %idxprom
  %60 = load i32* %k, align 4
  %idxprom74 = sext i32 %60 to i64
  %61 = load i32* %i, align 4
  %idxprom75 = sext i32 %61 to i64
  %62 = load %struct.site** @lattice, align 8
  %arrayidx76 = getelementptr inbounds %struct.site* %62, i64 %idxprom75
  %link = getelementptr inbounds %struct.site* %arrayidx76, i32 0, i32 8
  %arrayidx77 = getelementptr inbounds [4 x %struct.su3_matrix]* %link, i32 0, i64 %idxprom74
  %63 = bitcast %struct.su3_matrix* %arrayidx to i8*
  %64 = bitcast %struct.su3_matrix* %arrayidx77 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %63, i8* %64, i64 144, i32 8, i1 false)
  br label %for.inc

for.inc:                                          ; preds = %for.body73
  %65 = load i32* %k, align 4
  %inc = add nsw i32 %65, 1
  store i32 %inc, i32* %k, align 4
  br label %for.cond70

for.end:                                          ; preds = %for.cond70
  br label %if.end79

if.else:                                          ; preds = %if.then65
  %arraydecay78 = getelementptr inbounds [4 x %struct.su3_matrix]* %tbuf, i32 0, i32 0
  %66 = bitcast %struct.su3_matrix* %arraydecay78 to i8*
  call void @get_field(i8* %66, i32 576)
  br label %if.end79

if.end79:                                         ; preds = %if.else, %for.end
  %67 = load i32* %buf_length, align 4
  %mul80 = mul nsw i32 4, %67
  %idxprom81 = sext i32 %mul80 to i64
  %68 = load %struct.su3_matrix** %lbuf, align 8
  %arrayidx82 = getelementptr inbounds %struct.su3_matrix* %68, i64 %idxprom81
  %69 = bitcast %struct.su3_matrix* %arrayidx82 to i8*
  %arraydecay83 = getelementptr inbounds [4 x %struct.su3_matrix]* %tbuf, i32 0, i32 0
  %70 = bitcast %struct.su3_matrix* %arraydecay83 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %69, i8* %70, i64 576, i32 1, i1 false)
  store i32 0, i32* %k, align 4
  %71 = load i32* %buf_length, align 4
  %mul84 = mul nsw i32 4, %71
  %idxprom85 = sext i32 %mul84 to i64
  %72 = load %struct.su3_matrix** %lbuf, align 8
  %arrayidx86 = getelementptr inbounds %struct.su3_matrix* %72, i64 %idxprom85
  %73 = bitcast %struct.su3_matrix* %arrayidx86 to i32*
  store i32* %73, i32** %val, align 8
  br label %for.cond87

for.cond87:                                       ; preds = %for.inc110, %if.end79
  %74 = load i32* %k, align 4
  %cmp88 = icmp slt i32 %74, 144
  br i1 %cmp88, label %for.body90, label %for.end112

for.body90:                                       ; preds = %for.cond87
  %75 = load i32** %val, align 8
  %76 = load i32* %75, align 4
  %77 = load i32* %rank29, align 4
  %shl = shl i32 %76, %77
  %78 = load i32** %val, align 8
  %79 = load i32* %78, align 4
  %80 = load i32* %rank29, align 4
  %sub = sub nsw i32 32, %80
  %shr = lshr i32 %79, %sub
  %or = or i32 %shl, %shr
  %81 = load %struct.gauge_file** %gf.addr, align 8
  %check91 = getelementptr inbounds %struct.gauge_file* %81, i32 0, i32 6
  %sum2992 = getelementptr inbounds %struct.gauge_check* %check91, i32 0, i32 1
  %82 = load i32* %sum2992, align 4
  %xor = xor i32 %82, %or
  store i32 %xor, i32* %sum2992, align 4
  %83 = load i32** %val, align 8
  %84 = load i32* %83, align 4
  %85 = load i32* %rank31, align 4
  %shl93 = shl i32 %84, %85
  %86 = load i32** %val, align 8
  %87 = load i32* %86, align 4
  %88 = load i32* %rank31, align 4
  %sub94 = sub nsw i32 32, %88
  %shr95 = lshr i32 %87, %sub94
  %or96 = or i32 %shl93, %shr95
  %89 = load %struct.gauge_file** %gf.addr, align 8
  %check97 = getelementptr inbounds %struct.gauge_file* %89, i32 0, i32 6
  %sum3198 = getelementptr inbounds %struct.gauge_check* %check97, i32 0, i32 0
  %90 = load i32* %sum3198, align 4
  %xor99 = xor i32 %90, %or96
  store i32 %xor99, i32* %sum3198, align 4
  %91 = load i32* %rank29, align 4
  %inc100 = add nsw i32 %91, 1
  store i32 %inc100, i32* %rank29, align 4
  %92 = load i32* %rank29, align 4
  %cmp101 = icmp sge i32 %92, 29
  br i1 %cmp101, label %if.then103, label %if.end104

if.then103:                                       ; preds = %for.body90
  store i32 0, i32* %rank29, align 4
  br label %if.end104

if.end104:                                        ; preds = %if.then103, %for.body90
  %93 = load i32* %rank31, align 4
  %inc105 = add nsw i32 %93, 1
  store i32 %inc105, i32* %rank31, align 4
  %94 = load i32* %rank31, align 4
  %cmp106 = icmp sge i32 %94, 31
  br i1 %cmp106, label %if.then108, label %if.end109

if.then108:                                       ; preds = %if.end104
  store i32 0, i32* %rank31, align 4
  br label %if.end109

if.end109:                                        ; preds = %if.then108, %if.end104
  br label %for.inc110

for.inc110:                                       ; preds = %if.end109
  %95 = load i32* %k, align 4
  %inc111 = add nsw i32 %95, 1
  store i32 %inc111, i32* %k, align 4
  %96 = load i32** %val, align 8
  %incdec.ptr = getelementptr inbounds i32* %96, i32 1
  store i32* %incdec.ptr, i32** %val, align 8
  br label %for.cond87

for.end112:                                       ; preds = %for.cond87
  %97 = load i32* %buf_length, align 4
  %inc113 = add nsw i32 %97, 1
  store i32 %inc113, i32* %buf_length, align 4
  %98 = load i32* %buf_length, align 4
  %cmp114 = icmp eq i32 %98, 4096
  br i1 %cmp114, label %if.then119, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %for.end112
  %99 = load i32* %j, align 4
  %100 = load i32* @volume, align 4
  %sub116 = sub nsw i32 %100, 1
  %cmp117 = icmp eq i32 %99, %sub116
  br i1 %cmp117, label %if.then119, label %if.end131

if.then119:                                       ; preds = %lor.lhs.false, %for.end112
  %101 = load %struct.su3_matrix** %lbuf, align 8
  %102 = bitcast %struct.su3_matrix* %101 to i8*
  %103 = load i32* %buf_length, align 4
  %conv120 = sext i32 %103 to i64
  %104 = load %struct._IO_FILE** %fp, align 8
  %call121 = call i64 @fwrite(i8* %102, i64 576, i64 %conv120, %struct._IO_FILE* %104)
  %conv122 = trunc i64 %call121 to i32
  %105 = load i32* %buf_length, align 4
  %cmp123 = icmp ne i32 %conv122, %105
  br i1 %cmp123, label %if.then125, label %if.end130

if.then125:                                       ; preds = %if.then119
  %106 = load i32* @this_node, align 4
  %call126 = call i32* @__errno_location() #8
  %107 = load i32* %call126, align 4
  %108 = load %struct.gauge_file** %gf.addr, align 8
  %filename127 = getelementptr inbounds %struct.gauge_file* %108, i32 0, i32 2
  %109 = load i8** %filename127, align 8
  %call128 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([62 x i8]* @.str47218, i32 0, i32 0), i32 %106, i32 %107, i8* %109)
  %110 = load %struct._IO_FILE** @stdout, align 8
  %call129 = call i32 @fflush(%struct._IO_FILE* %110)
  call void @terminate(i32 1)
  br label %if.end130

if.end130:                                        ; preds = %if.then125, %if.then119
  store i32 0, i32* %buf_length, align 4
  br label %if.end131

if.end131:                                        ; preds = %if.end130, %lor.lhs.false
  br label %if.end142

if.else132:                                       ; preds = %if.end62
  %111 = load i32* @this_node, align 4
  %112 = load i32* %currentnode, align 4
  %cmp133 = icmp eq i32 %111, %112
  br i1 %cmp133, label %if.then135, label %if.end141

if.then135:                                       ; preds = %if.else132
  %113 = load i32* %x, align 4
  %114 = load i32* %y, align 4
  %115 = load i32* %z, align 4
  %116 = load i32* %t, align 4
  %call136 = call i32 @node_index(i32 %113, i32 %114, i32 %115, i32 %116)
  store i32 %call136, i32* %i, align 4
  %117 = load i32* %i, align 4
  %idxprom137 = sext i32 %117 to i64
  %118 = load %struct.site** @lattice, align 8
  %arrayidx138 = getelementptr inbounds %struct.site* %118, i64 %idxprom137
  %link139 = getelementptr inbounds %struct.site* %arrayidx138, i32 0, i32 8
  %arraydecay140 = getelementptr inbounds [4 x %struct.su3_matrix]* %link139, i32 0, i32 0
  %119 = bitcast %struct.su3_matrix* %arraydecay140 to i8*
  call void @send_field(i8* %119, i32 576, i32 0)
  br label %if.end141

if.end141:                                        ; preds = %if.then135, %if.else132
  br label %if.end142

if.end142:                                        ; preds = %if.end141, %if.end131
  br label %for.inc143

for.inc143:                                       ; preds = %if.end142
  %120 = load i32* %x, align 4
  %inc144 = add nsw i32 %120, 1
  store i32 %inc144, i32* %x, align 4
  %121 = load i32* %j, align 4
  %inc145 = add nsw i32 %121, 1
  store i32 %inc145, i32* %j, align 4
  br label %for.cond40

for.end146:                                       ; preds = %for.cond40
  br label %for.inc147

for.inc147:                                       ; preds = %for.end146
  %122 = load i32* %y, align 4
  %inc148 = add nsw i32 %122, 1
  store i32 %inc148, i32* %y, align 4
  br label %for.cond36

for.end149:                                       ; preds = %for.cond36
  br label %for.inc150

for.inc150:                                       ; preds = %for.end149
  %123 = load i32* %z, align 4
  %inc151 = add nsw i32 %123, 1
  store i32 %inc151, i32* %z, align 4
  br label %for.cond32

for.end152:                                       ; preds = %for.cond32
  br label %for.inc153

for.inc153:                                       ; preds = %for.end152
  %124 = load i32* %t, align 4
  %inc154 = add nsw i32 %124, 1
  store i32 %inc154, i32* %t, align 4
  br label %for.cond

for.end155:                                       ; preds = %for.cond
  call void (...)* bitcast (void ()* @g_sync to void (...)*)()
  %125 = load i32* @this_node, align 4
  %cmp156 = icmp eq i32 %125, 0
  br i1 %cmp156, label %if.then158, label %if.end172

if.then158:                                       ; preds = %for.end155
  %126 = load %struct.su3_matrix** %lbuf, align 8
  %127 = bitcast %struct.su3_matrix* %126 to i8*
  call void @free(i8* %127) #2
  %128 = load %struct.gauge_file** %gf.addr, align 8
  %filename159 = getelementptr inbounds %struct.gauge_file* %128, i32 0, i32 2
  %129 = load i8** %filename159, align 8
  %call160 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([54 x i8]* @.str48219, i32 0, i32 0), i8* %129)
  %130 = load %struct.gauge_header** %gh, align 8
  %time_stamp = getelementptr inbounds %struct.gauge_header* %130, i32 0, i32 1
  %arraydecay161 = getelementptr inbounds [64 x i8]* %time_stamp, i32 0, i32 0
  %call162 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([15 x i8]* @.str49220, i32 0, i32 0), i8* %arraydecay161)
  %131 = load %struct._IO_FILE** %fp, align 8
  %132 = load i64* %checksum_offset, align 8
  %call163 = call i32 @fseek(%struct._IO_FILE* %131, i64 %132, i32 0)
  %cmp164 = icmp slt i32 %call163, 0
  br i1 %cmp164, label %if.then166, label %if.end171

if.then166:                                       ; preds = %if.then158
  %133 = load i32* @this_node, align 4
  %call167 = call i32* @__errno_location() #8
  %134 = load i32* %call167, align 4
  %135 = load %struct.gauge_file** %gf.addr, align 8
  %filename168 = getelementptr inbounds %struct.gauge_file* %135, i32 0, i32 2
  %136 = load i8** %filename168, align 8
  %call169 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([50 x i8]* @.str46217, i32 0, i32 0), i32 %133, i32 %134, i8* %136)
  %137 = load %struct._IO_FILE** @stdout, align 8
  %call170 = call i32 @fflush(%struct._IO_FILE* %137)
  call void @terminate(i32 1)
  br label %if.end171

if.end171:                                        ; preds = %if.then166, %if.then158
  %138 = load %struct.gauge_file** %gf.addr, align 8
  call void @write_checksum(i32 0, %struct.gauge_file* %138)
  br label %if.end172

if.end172:                                        ; preds = %if.end171, %for.end155
  ret void
}

declare i32 @fseek(%struct._IO_FILE*, i64, i32) #1

; Function Attrs: nounwind uwtable
define internal void @w_serial_f(%struct.gauge_file* %gf) #0 {
entry:
  %gf.addr = alloca %struct.gauge_file*, align 8
  store %struct.gauge_file* %gf, %struct.gauge_file** %gf.addr, align 8
  call void (...)* bitcast (void ()* @g_sync to void (...)*)()
  %0 = load i32* @this_node, align 4
  %cmp = icmp eq i32 %0, 0
  br i1 %cmp, label %if.then, label %if.end3

if.then:                                          ; preds = %entry
  %1 = load %struct.gauge_file** %gf.addr, align 8
  %parallel = getelementptr inbounds %struct.gauge_file* %1, i32 0, i32 5
  %2 = load i32* %parallel, align 4
  %tobool = icmp ne i32 %2, 0
  br i1 %tobool, label %if.then1, label %if.end

if.then1:                                         ; preds = %if.then
  %call = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([55 x i8]* @.str50221, i32 0, i32 0))
  br label %if.end

if.end:                                           ; preds = %if.then1, %if.then
  %3 = load %struct.gauge_file** %gf.addr, align 8
  %fp = getelementptr inbounds %struct.gauge_file* %3, i32 0, i32 0
  %4 = load %struct._IO_FILE** %fp, align 8
  %call2 = call i32 @fclose(%struct._IO_FILE* %4)
  br label %if.end3

if.end3:                                          ; preds = %if.end, %entry
  %5 = load i32* @this_node, align 4
  %cmp4 = icmp eq i32 %5, 0
  br i1 %cmp4, label %if.then5, label %if.end6

if.then5:                                         ; preds = %if.end3
  %6 = load %struct.gauge_file** %gf.addr, align 8
  call void @write_gauge_info_file(%struct.gauge_file* %6)
  br label %if.end6

if.end6:                                          ; preds = %if.then5, %if.end3
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @read_site_list(i32 %parallel, %struct.gauge_file* %gf) #0 {
entry:
  %parallel.addr = alloca i32, align 4
  %gf.addr = alloca %struct.gauge_file*, align 8
  store i32 %parallel, i32* %parallel.addr, align 4
  store %struct.gauge_file* %gf, %struct.gauge_file** %gf.addr, align 8
  %0 = load %struct.gauge_file** %gf.addr, align 8
  %header = getelementptr inbounds %struct.gauge_file* %0, i32 0, i32 1
  %1 = load %struct.gauge_header** %header, align 8
  %order = getelementptr inbounds %struct.gauge_header* %1, i32 0, i32 4
  %2 = load i32* %order, align 4
  %cmp = icmp ne i32 %2, 0
  br i1 %cmp, label %if.then, label %if.else41

if.then:                                          ; preds = %entry
  %3 = load i32* @volume, align 4
  %conv = sext i32 %3 to i64
  %call = call noalias i8* @calloc(i64 %conv, i64 4) #2
  %4 = bitcast i8* %call to i32*
  %5 = load %struct.gauge_file** %gf.addr, align 8
  %rank2rcv = getelementptr inbounds %struct.gauge_file* %5, i32 0, i32 4
  store i32* %4, i32** %rank2rcv, align 8
  %6 = load %struct.gauge_file** %gf.addr, align 8
  %rank2rcv1 = getelementptr inbounds %struct.gauge_file* %6, i32 0, i32 4
  %7 = load i32** %rank2rcv1, align 8
  %cmp2 = icmp eq i32* %7, null
  br i1 %cmp2, label %if.then4, label %if.end

if.then4:                                         ; preds = %if.then
  %call5 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([45 x i8]* @.str51222, i32 0, i32 0))
  call void @terminate(i32 1)
  br label %if.end

if.end:                                           ; preds = %if.then4, %if.then
  %8 = load i32* @this_node, align 4
  %cmp6 = icmp eq i32 %8, 0
  br i1 %cmp6, label %if.then8, label %if.end37

if.then8:                                         ; preds = %if.end
  %9 = load i32* %parallel.addr, align 4
  %tobool = icmp ne i32 %9, 0
  br i1 %tobool, label %if.then9, label %if.else

if.then9:                                         ; preds = %if.then8
  %10 = load %struct.gauge_file** %gf.addr, align 8
  %rank2rcv10 = getelementptr inbounds %struct.gauge_file* %10, i32 0, i32 4
  %11 = load i32** %rank2rcv10, align 8
  %12 = bitcast i32* %11 to i8*
  %13 = load i32* @volume, align 4
  %conv11 = sext i32 %13 to i64
  %14 = load %struct.gauge_file** %gf.addr, align 8
  %fp = getelementptr inbounds %struct.gauge_file* %14, i32 0, i32 0
  %15 = load %struct._IO_FILE** %fp, align 8
  %call12 = call i64 @g_read(i8* %12, i64 4, i64 %conv11, %struct._IO_FILE* %15)
  %conv13 = trunc i64 %call12 to i32
  %16 = load i32* @volume, align 4
  %cmp14 = icmp ne i32 %conv13, %16
  br i1 %cmp14, label %if.then16, label %if.end19

if.then16:                                        ; preds = %if.then9
  %17 = load i32* @this_node, align 4
  %call17 = call i32* @__errno_location() #8
  %18 = load i32* %call17, align 4
  %call18 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([49 x i8]* @.str52223, i32 0, i32 0), i32 %17, i32 %18)
  call void @terminate(i32 1)
  br label %if.end19

if.end19:                                         ; preds = %if.then16, %if.then9
  br label %if.end31

if.else:                                          ; preds = %if.then8
  %19 = load %struct.gauge_file** %gf.addr, align 8
  %rank2rcv20 = getelementptr inbounds %struct.gauge_file* %19, i32 0, i32 4
  %20 = load i32** %rank2rcv20, align 8
  %21 = bitcast i32* %20 to i8*
  %22 = load i32* @volume, align 4
  %conv21 = sext i32 %22 to i64
  %23 = load %struct.gauge_file** %gf.addr, align 8
  %fp22 = getelementptr inbounds %struct.gauge_file* %23, i32 0, i32 0
  %24 = load %struct._IO_FILE** %fp22, align 8
  %call23 = call i64 @fread(i8* %21, i64 4, i64 %conv21, %struct._IO_FILE* %24)
  %conv24 = trunc i64 %call23 to i32
  %25 = load i32* @volume, align 4
  %cmp25 = icmp ne i32 %conv24, %25
  br i1 %cmp25, label %if.then27, label %if.end30

if.then27:                                        ; preds = %if.else
  %26 = load i32* @this_node, align 4
  %call28 = call i32* @__errno_location() #8
  %27 = load i32* %call28, align 4
  %call29 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([49 x i8]* @.str52223, i32 0, i32 0), i32 %26, i32 %27)
  call void @terminate(i32 1)
  br label %if.end30

if.end30:                                         ; preds = %if.then27, %if.else
  br label %if.end31

if.end31:                                         ; preds = %if.end30, %if.end19
  %28 = load %struct.gauge_file** %gf.addr, align 8
  %byterevflag = getelementptr inbounds %struct.gauge_file* %28, i32 0, i32 3
  %29 = load i32* %byterevflag, align 4
  %cmp32 = icmp eq i32 %29, 1
  br i1 %cmp32, label %if.then34, label %if.end36

if.then34:                                        ; preds = %if.end31
  %30 = load %struct.gauge_file** %gf.addr, align 8
  %rank2rcv35 = getelementptr inbounds %struct.gauge_file* %30, i32 0, i32 4
  %31 = load i32** %rank2rcv35, align 8
  %32 = load i32* @volume, align 4
  call void @byterevn(i32* %31, i32 %32)
  br label %if.end36

if.end36:                                         ; preds = %if.then34, %if.end31
  br label %if.end37

if.end37:                                         ; preds = %if.end36, %if.end
  %33 = load %struct.gauge_file** %gf.addr, align 8
  %rank2rcv38 = getelementptr inbounds %struct.gauge_file* %33, i32 0, i32 4
  %34 = load i32** %rank2rcv38, align 8
  %35 = bitcast i32* %34 to i8*
  %36 = load i32* @volume, align 4
  %conv39 = sext i32 %36 to i64
  %mul = mul i64 %conv39, 4
  %conv40 = trunc i64 %mul to i32
  call void @broadcast_bytes(i8* %35, i32 %conv40)
  br label %if.end43

if.else41:                                        ; preds = %entry
  %37 = load %struct.gauge_file** %gf.addr, align 8
  %rank2rcv42 = getelementptr inbounds %struct.gauge_file* %37, i32 0, i32 4
  store i32* null, i32** %rank2rcv42, align 8
  br label %if.end43

if.end43:                                         ; preds = %if.else41, %if.end37
  ret void
}

; Function Attrs: nounwind uwtable
define internal i32 @read_v3_gauge_hdr(%struct.gauge_file* %gf, i32 %parallel, i32* %byterevflag) #0 {
entry:
  %retval = alloca i32, align 4
  %gf.addr = alloca %struct.gauge_file*, align 8
  %parallel.addr = alloca i32, align 4
  %byterevflag.addr = alloca i32*, align 8
  %fp = alloca %struct._IO_FILE*, align 8
  %gh = alloca %struct.gauge_header*, align 8
  %tmp = alloca i32, align 4
  %j = alloca i32, align 4
  %sixtyfourbits = alloca i32, align 4
  %c1 = alloca double, align 8
  %c2 = alloca double, align 8
  %myname = alloca [18 x i8], align 16
  store %struct.gauge_file* %gf, %struct.gauge_file** %gf.addr, align 8
  store i32 %parallel, i32* %parallel.addr, align 4
  store i32* %byterevflag, i32** %byterevflag.addr, align 8
  %0 = bitcast [18 x i8]* %myname to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %0, i8* getelementptr inbounds ([18 x i8]* @read_v3_gauge_hdr.myname, i32 0, i32 0), i64 18, i32 16, i1 false)
  %1 = load %struct.gauge_file** %gf.addr, align 8
  %fp6 = getelementptr inbounds %struct.gauge_file* %1, i32 0, i32 0
  %2 = load %struct._IO_FILE** %fp6, align 8
  store %struct._IO_FILE* %2, %struct._IO_FILE** %fp, align 8
  %3 = load %struct.gauge_file** %gf.addr, align 8
  %header = getelementptr inbounds %struct.gauge_file* %3, i32 0, i32 1
  %4 = load %struct.gauge_header** %header, align 8
  store %struct.gauge_header* %4, %struct.gauge_header** %gh, align 8
  %5 = load %struct.gauge_header** %gh, align 8
  %magic_number = getelementptr inbounds %struct.gauge_header* %5, i32 0, i32 0
  %6 = load i32* %magic_number, align 4
  %cmp = icmp eq i32 %6, 0
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  store i32 1, i32* %sixtyfourbits, align 4
  %call = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([74 x i8]* @.str53224, i32 0, i32 0))
  %7 = load i32* %parallel.addr, align 4
  %8 = load %struct._IO_FILE** %fp, align 8
  %9 = load %struct.gauge_header** %gh, align 8
  %magic_number7 = getelementptr inbounds %struct.gauge_header* %9, i32 0, i32 0
  %10 = bitcast i32* %magic_number7 to i8*
  %arraydecay = getelementptr inbounds [18 x i8]* %myname, i32 0, i32 0
  %call8 = call i32 @psread_data(i32 %7, %struct._IO_FILE* %8, i8* %10, i64 4, i8* %arraydecay, i8* getelementptr inbounds ([13 x i8]* @.str54225, i32 0, i32 0))
  %cmp9 = icmp ne i32 %call8, 0
  br i1 %cmp9, label %if.then10, label %if.end

if.then10:                                        ; preds = %if.then
  call void @terminate(i32 1)
  br label %if.end

if.end:                                           ; preds = %if.then10, %if.then
  br label %if.end11

if.else:                                          ; preds = %entry
  store i32 0, i32* %sixtyfourbits, align 4
  br label %if.end11

if.end11:                                         ; preds = %if.else, %if.end
  %11 = load %struct.gauge_header** %gh, align 8
  %magic_number12 = getelementptr inbounds %struct.gauge_header* %11, i32 0, i32 0
  %12 = load i32* %magic_number12, align 4
  store i32 %12, i32* %tmp, align 4
  %13 = load %struct.gauge_header** %gh, align 8
  %magic_number13 = getelementptr inbounds %struct.gauge_header* %13, i32 0, i32 0
  %14 = load i32* %magic_number13, align 4
  %cmp14 = icmp eq i32 %14, 59354
  br i1 %cmp14, label %if.then15, label %if.else17

if.then15:                                        ; preds = %if.end11
  %call16 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([49 x i8]* @.str55226, i32 0, i32 0))
  %15 = load i32** %byterevflag.addr, align 8
  store i32 0, i32* %15, align 4
  br label %if.end28

if.else17:                                        ; preds = %if.end11
  %16 = load %struct.gauge_header** %gh, align 8
  %magic_number18 = getelementptr inbounds %struct.gauge_header* %16, i32 0, i32 0
  call void @byterevn(i32* %magic_number18, i32 1)
  %17 = load %struct.gauge_header** %gh, align 8
  %magic_number19 = getelementptr inbounds %struct.gauge_header* %17, i32 0, i32 0
  %18 = load i32* %magic_number19, align 4
  %cmp20 = icmp eq i32 %18, 59354
  br i1 %cmp20, label %if.then21, label %if.else25

if.then21:                                        ; preds = %if.else17
  %19 = load i32** %byterevflag.addr, align 8
  store i32 1, i32* %19, align 4
  %call22 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([67 x i8]* @.str56227, i32 0, i32 0))
  %call23 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([39 x i8]* @.str57228, i32 0, i32 0))
  %call24 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([53 x i8]* @.str58229, i32 0, i32 0), i32 4, i32 8)
  call void @terminate(i32 1)
  br label %if.end27

if.else25:                                        ; preds = %if.else17
  %20 = load i32* %tmp, align 4
  %21 = load %struct.gauge_header** %gh, align 8
  %magic_number26 = getelementptr inbounds %struct.gauge_header* %21, i32 0, i32 0
  store i32 %20, i32* %magic_number26, align 4
  store i32 1, i32* %retval
  br label %return

if.end27:                                         ; preds = %if.then21
  br label %if.end28

if.end28:                                         ; preds = %if.end27, %if.then15
  store i32 0, i32* %j, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.end28
  %22 = load i32* %j, align 4
  %cmp29 = icmp slt i32 %22, 4
  br i1 %cmp29, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %23 = load i32** %byterevflag.addr, align 8
  %24 = load i32* %23, align 4
  %25 = load i32* %parallel.addr, align 4
  %26 = load %struct._IO_FILE** %fp, align 8
  %27 = load i32* %j, align 4
  %idxprom = sext i32 %27 to i64
  %28 = load %struct.gauge_header** %gh, align 8
  %dims = getelementptr inbounds %struct.gauge_header* %28, i32 0, i32 2
  %arrayidx = getelementptr inbounds [4 x i32]* %dims, i32 0, i64 %idxprom
  %29 = bitcast i32* %arrayidx to i8*
  %arraydecay30 = getelementptr inbounds [18 x i8]* %myname, i32 0, i32 0
  %call31 = call i32 @psread_byteorder(i32 %24, i32 %25, %struct._IO_FILE* %26, i8* %29, i64 4, i8* %arraydecay30, i8* getelementptr inbounds ([11 x i8]* @.str11182, i32 0, i32 0))
  %cmp32 = icmp ne i32 %call31, 0
  br i1 %cmp32, label %if.then33, label %if.end34

if.then33:                                        ; preds = %for.body
  call void @terminate(i32 1)
  br label %if.end34

if.end34:                                         ; preds = %if.then33, %for.body
  %30 = load i32* %sixtyfourbits, align 4
  %tobool = icmp ne i32 %30, 0
  br i1 %tobool, label %if.then35, label %if.end44

if.then35:                                        ; preds = %if.end34
  %31 = load i32** %byterevflag.addr, align 8
  %32 = load i32* %31, align 4
  %33 = load i32* %parallel.addr, align 4
  %34 = load %struct._IO_FILE** %fp, align 8
  %35 = load i32* %j, align 4
  %idxprom36 = sext i32 %35 to i64
  %36 = load %struct.gauge_header** %gh, align 8
  %dims37 = getelementptr inbounds %struct.gauge_header* %36, i32 0, i32 2
  %arrayidx38 = getelementptr inbounds [4 x i32]* %dims37, i32 0, i64 %idxprom36
  %37 = bitcast i32* %arrayidx38 to i8*
  %arraydecay39 = getelementptr inbounds [18 x i8]* %myname, i32 0, i32 0
  %call40 = call i32 @psread_byteorder(i32 %32, i32 %33, %struct._IO_FILE* %34, i8* %37, i64 4, i8* %arraydecay39, i8* getelementptr inbounds ([11 x i8]* @.str11182, i32 0, i32 0))
  %cmp41 = icmp ne i32 %call40, 0
  br i1 %cmp41, label %if.then42, label %if.end43

if.then42:                                        ; preds = %if.then35
  call void @terminate(i32 1)
  br label %if.end43

if.end43:                                         ; preds = %if.then42, %if.then35
  br label %if.end44

if.end44:                                         ; preds = %if.end43, %if.end34
  br label %for.inc

for.inc:                                          ; preds = %if.end44
  %38 = load i32* %j, align 4
  %inc = add nsw i32 %38, 1
  store i32 %inc, i32* %j, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %39 = load %struct.gauge_header** %gh, align 8
  %dims45 = getelementptr inbounds %struct.gauge_header* %39, i32 0, i32 2
  %arrayidx46 = getelementptr inbounds [4 x i32]* %dims45, i32 0, i64 0
  %40 = load i32* %arrayidx46, align 4
  %41 = load i32* @nx, align 4
  %cmp47 = icmp ne i32 %40, %41
  br i1 %cmp47, label %if.then59, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %for.end
  %42 = load %struct.gauge_header** %gh, align 8
  %dims48 = getelementptr inbounds %struct.gauge_header* %42, i32 0, i32 2
  %arrayidx49 = getelementptr inbounds [4 x i32]* %dims48, i32 0, i64 1
  %43 = load i32* %arrayidx49, align 4
  %44 = load i32* @ny, align 4
  %cmp50 = icmp ne i32 %43, %44
  br i1 %cmp50, label %if.then59, label %lor.lhs.false51

lor.lhs.false51:                                  ; preds = %lor.lhs.false
  %45 = load %struct.gauge_header** %gh, align 8
  %dims52 = getelementptr inbounds %struct.gauge_header* %45, i32 0, i32 2
  %arrayidx53 = getelementptr inbounds [4 x i32]* %dims52, i32 0, i64 2
  %46 = load i32* %arrayidx53, align 4
  %47 = load i32* @nz, align 4
  %cmp54 = icmp ne i32 %46, %47
  br i1 %cmp54, label %if.then59, label %lor.lhs.false55

lor.lhs.false55:                                  ; preds = %lor.lhs.false51
  %48 = load %struct.gauge_header** %gh, align 8
  %dims56 = getelementptr inbounds %struct.gauge_header* %48, i32 0, i32 2
  %arrayidx57 = getelementptr inbounds [4 x i32]* %dims56, i32 0, i64 3
  %49 = load i32* %arrayidx57, align 4
  %50 = load i32* @nt, align 4
  %cmp58 = icmp ne i32 %49, %50
  br i1 %cmp58, label %if.then59, label %if.end93

if.then59:                                        ; preds = %lor.lhs.false55, %lor.lhs.false51, %lor.lhs.false, %for.end
  %51 = load i32* @nx, align 4
  %cmp60 = icmp ne i32 %51, -1
  br i1 %cmp60, label %if.then67, label %lor.lhs.false61

lor.lhs.false61:                                  ; preds = %if.then59
  %52 = load i32* @ny, align 4
  %cmp62 = icmp ne i32 %52, -1
  br i1 %cmp62, label %if.then67, label %lor.lhs.false63

lor.lhs.false63:                                  ; preds = %lor.lhs.false61
  %53 = load i32* @nz, align 4
  %cmp64 = icmp ne i32 %53, -1
  br i1 %cmp64, label %if.then67, label %lor.lhs.false65

lor.lhs.false65:                                  ; preds = %lor.lhs.false63
  %54 = load i32* @nt, align 4
  %cmp66 = icmp ne i32 %54, -1
  br i1 %cmp66, label %if.then67, label %if.else81

if.then67:                                        ; preds = %lor.lhs.false65, %lor.lhs.false63, %lor.lhs.false61, %if.then59
  %call68 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([49 x i8]* @.str59230, i32 0, i32 0))
  store i32 0, i32* %j, align 4
  br label %for.cond69

for.cond69:                                       ; preds = %for.inc76, %if.then67
  %55 = load i32* %j, align 4
  %cmp70 = icmp slt i32 %55, 4
  br i1 %cmp70, label %for.body71, label %for.end78

for.body71:                                       ; preds = %for.cond69
  %56 = load i32* %j, align 4
  %idxprom72 = sext i32 %56 to i64
  %57 = load %struct.gauge_header** %gh, align 8
  %dims73 = getelementptr inbounds %struct.gauge_header* %57, i32 0, i32 2
  %arrayidx74 = getelementptr inbounds [4 x i32]* %dims73, i32 0, i64 %idxprom72
  %58 = load i32* %arrayidx74, align 4
  %call75 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([4 x i8]* @.str60231, i32 0, i32 0), i32 %58)
  br label %for.inc76

for.inc76:                                        ; preds = %for.body71
  %59 = load i32* %j, align 4
  %inc77 = add nsw i32 %59, 1
  store i32 %inc77, i32* %j, align 4
  br label %for.cond69

for.end78:                                        ; preds = %for.cond69
  %call79 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([2 x i8]* @.str24195, i32 0, i32 0))
  %60 = load %struct._IO_FILE** @stdout, align 8
  %call80 = call i32 @fflush(%struct._IO_FILE* %60)
  call void @terminate(i32 1)
  br label %if.end92

if.else81:                                        ; preds = %lor.lhs.false65
  %61 = load %struct.gauge_header** %gh, align 8
  %dims82 = getelementptr inbounds %struct.gauge_header* %61, i32 0, i32 2
  %arrayidx83 = getelementptr inbounds [4 x i32]* %dims82, i32 0, i64 0
  %62 = load i32* %arrayidx83, align 4
  store i32 %62, i32* @nx, align 4
  %63 = load %struct.gauge_header** %gh, align 8
  %dims84 = getelementptr inbounds %struct.gauge_header* %63, i32 0, i32 2
  %arrayidx85 = getelementptr inbounds [4 x i32]* %dims84, i32 0, i64 1
  %64 = load i32* %arrayidx85, align 4
  store i32 %64, i32* @ny, align 4
  %65 = load %struct.gauge_header** %gh, align 8
  %dims86 = getelementptr inbounds %struct.gauge_header* %65, i32 0, i32 2
  %arrayidx87 = getelementptr inbounds [4 x i32]* %dims86, i32 0, i64 2
  %66 = load i32* %arrayidx87, align 4
  store i32 %66, i32* @nz, align 4
  %67 = load %struct.gauge_header** %gh, align 8
  %dims88 = getelementptr inbounds %struct.gauge_header* %67, i32 0, i32 2
  %arrayidx89 = getelementptr inbounds [4 x i32]* %dims88, i32 0, i64 3
  %68 = load i32* %arrayidx89, align 4
  store i32 %68, i32* @nt, align 4
  %69 = load i32* @nx, align 4
  %70 = load i32* @ny, align 4
  %mul = mul nsw i32 %69, %70
  %71 = load i32* @nz, align 4
  %mul90 = mul nsw i32 %mul, %71
  %72 = load i32* @nt, align 4
  %mul91 = mul nsw i32 %mul90, %72
  store i32 %mul91, i32* @volume, align 4
  br label %if.end92

if.end92:                                         ; preds = %if.else81, %for.end78
  br label %if.end93

if.end93:                                         ; preds = %if.end92, %lor.lhs.false55
  %73 = load i32* %sixtyfourbits, align 4
  %cmp94 = icmp eq i32 %73, 0
  br i1 %cmp94, label %if.then95, label %if.else96

if.then95:                                        ; preds = %if.end93
  %74 = load %struct.gauge_header** %gh, align 8
  %header_bytes = getelementptr inbounds %struct.gauge_header* %74, i32 0, i32 3
  store i32 28, i32* %header_bytes, align 4
  br label %if.end98

if.else96:                                        ; preds = %if.end93
  %75 = load %struct.gauge_header** %gh, align 8
  %header_bytes97 = getelementptr inbounds %struct.gauge_header* %75, i32 0, i32 3
  store i32 48, i32* %header_bytes97, align 4
  br label %if.end98

if.end98:                                         ; preds = %if.else96, %if.then95
  %76 = load %struct.gauge_header** %gh, align 8
  %order = getelementptr inbounds %struct.gauge_header* %76, i32 0, i32 4
  store i32 0, i32* %order, align 4
  %77 = load i32** %byterevflag.addr, align 8
  %78 = load i32* %77, align 4
  %79 = load i32* %parallel.addr, align 4
  %80 = load %struct._IO_FILE** %fp, align 8
  %81 = bitcast double* %c1 to i8*
  %arraydecay99 = getelementptr inbounds [18 x i8]* %myname, i32 0, i32 0
  %call100 = call i32 @psread_byteorder(i32 %78, i32 %79, %struct._IO_FILE* %80, i8* %81, i64 8, i8* %arraydecay99, i8* getelementptr inbounds ([3 x i8]* @.str61232, i32 0, i32 0))
  %cmp101 = icmp ne i32 %call100, 0
  br i1 %cmp101, label %if.then102, label %if.end103

if.then102:                                       ; preds = %if.end98
  call void @terminate(i32 1)
  br label %if.end103

if.end103:                                        ; preds = %if.then102, %if.end98
  %82 = load i32** %byterevflag.addr, align 8
  %83 = load i32* %82, align 4
  %84 = load i32* %parallel.addr, align 4
  %85 = load %struct._IO_FILE** %fp, align 8
  %86 = bitcast double* %c2 to i8*
  %arraydecay104 = getelementptr inbounds [18 x i8]* %myname, i32 0, i32 0
  %call105 = call i32 @psread_byteorder(i32 %83, i32 %84, %struct._IO_FILE* %85, i8* %86, i64 8, i8* %arraydecay104, i8* getelementptr inbounds ([3 x i8]* @.str62, i32 0, i32 0))
  %cmp106 = icmp ne i32 %call105, 0
  br i1 %cmp106, label %if.then107, label %if.end108

if.then107:                                       ; preds = %if.end103
  call void @terminate(i32 1)
  br label %if.end108

if.end108:                                        ; preds = %if.then107, %if.end103
  %87 = load double* %c1, align 8
  %88 = load double* %c2, align 8
  %call109 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([40 x i8]* @.str63, i32 0, i32 0), double %87, double %88)
  store i32 0, i32* %retval
  br label %return

return:                                           ; preds = %if.end108, %if.else25
  %89 = load i32* %retval
  ret i32 %89
}

; Function Attrs: nounwind uwtable
define internal i32 @read_1996_gauge_hdr(%struct.gauge_file* %gf, i32 %parallel, i32* %byterevflag) #0 {
entry:
  %retval = alloca i32, align 4
  %gf.addr = alloca %struct.gauge_file*, align 8
  %parallel.addr = alloca i32, align 4
  %byterevflag.addr = alloca i32*, align 8
  %fp = alloca %struct._IO_FILE*, align 8
  %gh = alloca %struct.gauge_header*, align 8
  %tmp = alloca i32, align 4
  %j = alloca i32, align 4
  %gauge_field = alloca %struct.anon, align 8
  %myname = alloca [20 x i8], align 16
  store %struct.gauge_file* %gf, %struct.gauge_file** %gf.addr, align 8
  store i32 %parallel, i32* %parallel.addr, align 4
  store i32* %byterevflag, i32** %byterevflag.addr, align 8
  %0 = bitcast [20 x i8]* %myname to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %0, i8* getelementptr inbounds ([20 x i8]* @read_1996_gauge_hdr.myname, i32 0, i32 0), i64 20, i32 16, i1 false)
  %1 = load %struct.gauge_file** %gf.addr, align 8
  %fp4 = getelementptr inbounds %struct.gauge_file* %1, i32 0, i32 0
  %2 = load %struct._IO_FILE** %fp4, align 8
  store %struct._IO_FILE* %2, %struct._IO_FILE** %fp, align 8
  %3 = load %struct.gauge_file** %gf.addr, align 8
  %header = getelementptr inbounds %struct.gauge_file* %3, i32 0, i32 1
  %4 = load %struct.gauge_header** %header, align 8
  store %struct.gauge_header* %4, %struct.gauge_header** %gh, align 8
  %5 = load %struct.gauge_header** %gh, align 8
  %magic_number = getelementptr inbounds %struct.gauge_header* %5, i32 0, i32 0
  %6 = load i32* %magic_number, align 4
  store i32 %6, i32* %tmp, align 4
  %7 = load %struct.gauge_header** %gh, align 8
  %magic_number5 = getelementptr inbounds %struct.gauge_header* %7, i32 0, i32 0
  %8 = load i32* %magic_number5, align 4
  %cmp = icmp eq i32 %8, 53546
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  %call = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([50 x i8]* @.str64, i32 0, i32 0))
  %9 = load i32** %byterevflag.addr, align 8
  store i32 0, i32* %9, align 4
  br label %if.end15

if.else:                                          ; preds = %entry
  %10 = load %struct.gauge_header** %gh, align 8
  %magic_number6 = getelementptr inbounds %struct.gauge_header* %10, i32 0, i32 0
  call void @byterevn(i32* %magic_number6, i32 1)
  %11 = load %struct.gauge_header** %gh, align 8
  %magic_number7 = getelementptr inbounds %struct.gauge_header* %11, i32 0, i32 0
  %12 = load i32* %magic_number7, align 4
  %cmp8 = icmp eq i32 %12, 53546
  br i1 %cmp8, label %if.then9, label %if.else13

if.then9:                                         ; preds = %if.else
  %13 = load i32** %byterevflag.addr, align 8
  store i32 1, i32* %13, align 4
  %call10 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([68 x i8]* @.str65, i32 0, i32 0))
  %call11 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([41 x i8]* @.str66, i32 0, i32 0))
  %call12 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([53 x i8]* @.str58229, i32 0, i32 0), i32 4, i32 8)
  call void @terminate(i32 1)
  br label %if.end

if.else13:                                        ; preds = %if.else
  %14 = load i32* %tmp, align 4
  %15 = load %struct.gauge_header** %gh, align 8
  %magic_number14 = getelementptr inbounds %struct.gauge_header* %15, i32 0, i32 0
  store i32 %14, i32* %magic_number14, align 4
  store i32 1, i32* %retval
  br label %return

if.end:                                           ; preds = %if.then9
  br label %if.end15

if.end15:                                         ; preds = %if.end, %if.then
  %16 = load i32** %byterevflag.addr, align 8
  %17 = load i32* %16, align 4
  %18 = load i32* %parallel.addr, align 4
  %19 = load %struct._IO_FILE** %fp, align 8
  %20 = load %struct.gauge_header** %gh, align 8
  %dims = getelementptr inbounds %struct.gauge_header* %20, i32 0, i32 2
  %arraydecay = getelementptr inbounds [4 x i32]* %dims, i32 0, i32 0
  %21 = bitcast i32* %arraydecay to i8*
  %arraydecay16 = getelementptr inbounds [20 x i8]* %myname, i32 0, i32 0
  %call17 = call i32 @psread_byteorder(i32 %17, i32 %18, %struct._IO_FILE* %19, i8* %21, i64 16, i8* %arraydecay16, i8* getelementptr inbounds ([11 x i8]* @.str11182, i32 0, i32 0))
  %cmp18 = icmp ne i32 %call17, 0
  br i1 %cmp18, label %if.then19, label %if.end20

if.then19:                                        ; preds = %if.end15
  call void @terminate(i32 1)
  br label %if.end20

if.end20:                                         ; preds = %if.then19, %if.end15
  %22 = load %struct.gauge_header** %gh, align 8
  %dims21 = getelementptr inbounds %struct.gauge_header* %22, i32 0, i32 2
  %arrayidx = getelementptr inbounds [4 x i32]* %dims21, i32 0, i64 0
  %23 = load i32* %arrayidx, align 4
  %24 = load i32* @nx, align 4
  %cmp22 = icmp ne i32 %23, %24
  br i1 %cmp22, label %if.then34, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.end20
  %25 = load %struct.gauge_header** %gh, align 8
  %dims23 = getelementptr inbounds %struct.gauge_header* %25, i32 0, i32 2
  %arrayidx24 = getelementptr inbounds [4 x i32]* %dims23, i32 0, i64 1
  %26 = load i32* %arrayidx24, align 4
  %27 = load i32* @ny, align 4
  %cmp25 = icmp ne i32 %26, %27
  br i1 %cmp25, label %if.then34, label %lor.lhs.false26

lor.lhs.false26:                                  ; preds = %lor.lhs.false
  %28 = load %struct.gauge_header** %gh, align 8
  %dims27 = getelementptr inbounds %struct.gauge_header* %28, i32 0, i32 2
  %arrayidx28 = getelementptr inbounds [4 x i32]* %dims27, i32 0, i64 2
  %29 = load i32* %arrayidx28, align 4
  %30 = load i32* @nz, align 4
  %cmp29 = icmp ne i32 %29, %30
  br i1 %cmp29, label %if.then34, label %lor.lhs.false30

lor.lhs.false30:                                  ; preds = %lor.lhs.false26
  %31 = load %struct.gauge_header** %gh, align 8
  %dims31 = getelementptr inbounds %struct.gauge_header* %31, i32 0, i32 2
  %arrayidx32 = getelementptr inbounds [4 x i32]* %dims31, i32 0, i64 3
  %32 = load i32* %arrayidx32, align 4
  %33 = load i32* @nt, align 4
  %cmp33 = icmp ne i32 %32, %33
  br i1 %cmp33, label %if.then34, label %if.end62

if.then34:                                        ; preds = %lor.lhs.false30, %lor.lhs.false26, %lor.lhs.false, %if.end20
  %34 = load i32* @nx, align 4
  %cmp35 = icmp ne i32 %34, -1
  br i1 %cmp35, label %if.then42, label %lor.lhs.false36

lor.lhs.false36:                                  ; preds = %if.then34
  %35 = load i32* @ny, align 4
  %cmp37 = icmp ne i32 %35, -1
  br i1 %cmp37, label %if.then42, label %lor.lhs.false38

lor.lhs.false38:                                  ; preds = %lor.lhs.false36
  %36 = load i32* @nz, align 4
  %cmp39 = icmp ne i32 %36, -1
  br i1 %cmp39, label %if.then42, label %lor.lhs.false40

lor.lhs.false40:                                  ; preds = %lor.lhs.false38
  %37 = load i32* @nt, align 4
  %cmp41 = icmp ne i32 %37, -1
  br i1 %cmp41, label %if.then42, label %if.else50

if.then42:                                        ; preds = %lor.lhs.false40, %lor.lhs.false38, %lor.lhs.false36, %if.then34
  %call43 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([51 x i8]* @.str67, i32 0, i32 0))
  store i32 0, i32* %j, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.then42
  %38 = load i32* %j, align 4
  %cmp44 = icmp slt i32 %38, 4
  br i1 %cmp44, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %39 = load i32* %j, align 4
  %idxprom = sext i32 %39 to i64
  %40 = load %struct.gauge_header** %gh, align 8
  %dims45 = getelementptr inbounds %struct.gauge_header* %40, i32 0, i32 2
  %arrayidx46 = getelementptr inbounds [4 x i32]* %dims45, i32 0, i64 %idxprom
  %41 = load i32* %arrayidx46, align 4
  %call47 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([4 x i8]* @.str60231, i32 0, i32 0), i32 %41)
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %42 = load i32* %j, align 4
  %inc = add nsw i32 %42, 1
  store i32 %inc, i32* %j, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %call48 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([2 x i8]* @.str24195, i32 0, i32 0))
  %43 = load %struct._IO_FILE** @stdout, align 8
  %call49 = call i32 @fflush(%struct._IO_FILE* %43)
  call void @terminate(i32 1)
  br label %if.end61

if.else50:                                        ; preds = %lor.lhs.false40
  %44 = load %struct.gauge_header** %gh, align 8
  %dims51 = getelementptr inbounds %struct.gauge_header* %44, i32 0, i32 2
  %arrayidx52 = getelementptr inbounds [4 x i32]* %dims51, i32 0, i64 0
  %45 = load i32* %arrayidx52, align 4
  store i32 %45, i32* @nx, align 4
  %46 = load %struct.gauge_header** %gh, align 8
  %dims53 = getelementptr inbounds %struct.gauge_header* %46, i32 0, i32 2
  %arrayidx54 = getelementptr inbounds [4 x i32]* %dims53, i32 0, i64 1
  %47 = load i32* %arrayidx54, align 4
  store i32 %47, i32* @ny, align 4
  %48 = load %struct.gauge_header** %gh, align 8
  %dims55 = getelementptr inbounds %struct.gauge_header* %48, i32 0, i32 2
  %arrayidx56 = getelementptr inbounds [4 x i32]* %dims55, i32 0, i64 2
  %49 = load i32* %arrayidx56, align 4
  store i32 %49, i32* @nz, align 4
  %50 = load %struct.gauge_header** %gh, align 8
  %dims57 = getelementptr inbounds %struct.gauge_header* %50, i32 0, i32 2
  %arrayidx58 = getelementptr inbounds [4 x i32]* %dims57, i32 0, i64 3
  %51 = load i32* %arrayidx58, align 4
  store i32 %51, i32* @nt, align 4
  %52 = load i32* @nx, align 4
  %53 = load i32* @ny, align 4
  %mul = mul nsw i32 %52, %53
  %54 = load i32* @nz, align 4
  %mul59 = mul nsw i32 %mul, %54
  %55 = load i32* @nt, align 4
  %mul60 = mul nsw i32 %mul59, %55
  store i32 %mul60, i32* @volume, align 4
  br label %if.end61

if.end61:                                         ; preds = %if.else50, %for.end
  br label %if.end62

if.end62:                                         ; preds = %if.end61, %lor.lhs.false30
  %56 = load i32** %byterevflag.addr, align 8
  %57 = load i32* %56, align 4
  %58 = load i32* %parallel.addr, align 4
  %59 = load %struct._IO_FILE** %fp, align 8
  %60 = load %struct.gauge_header** %gh, align 8
  %header_bytes = getelementptr inbounds %struct.gauge_header* %60, i32 0, i32 3
  %61 = bitcast i32* %header_bytes to i8*
  %arraydecay63 = getelementptr inbounds [20 x i8]* %myname, i32 0, i32 0
  %call64 = call i32 @psread_byteorder(i32 %57, i32 %58, %struct._IO_FILE* %59, i8* %61, i64 4, i8* %arraydecay63, i8* getelementptr inbounds ([12 x i8]* @.str68, i32 0, i32 0))
  %cmp65 = icmp ne i32 %call64, 0
  br i1 %cmp65, label %if.then66, label %if.end67

if.then66:                                        ; preds = %if.end62
  call void @terminate(i32 1)
  br label %if.end67

if.end67:                                         ; preds = %if.then66, %if.end62
  %62 = load i32** %byterevflag.addr, align 8
  %63 = load i32* %62, align 4
  %64 = load i32* %parallel.addr, align 4
  %65 = load %struct._IO_FILE** %fp, align 8
  %66 = load %struct.gauge_header** %gh, align 8
  %order = getelementptr inbounds %struct.gauge_header* %66, i32 0, i32 4
  %67 = bitcast i32* %order to i8*
  %arraydecay68 = getelementptr inbounds [20 x i8]* %myname, i32 0, i32 0
  %call69 = call i32 @psread_byteorder(i32 %63, i32 %64, %struct._IO_FILE* %65, i8* %67, i64 4, i8* %arraydecay68, i8* getelementptr inbounds ([6 x i8]* @.str13184, i32 0, i32 0))
  %cmp70 = icmp ne i32 %call69, 0
  br i1 %cmp70, label %if.then71, label %if.end72

if.then71:                                        ; preds = %if.end67
  call void @terminate(i32 1)
  br label %if.end72

if.end72:                                         ; preds = %if.then71, %if.end67
  %68 = load i32** %byterevflag.addr, align 8
  %69 = load i32* %68, align 4
  %70 = load i32* %parallel.addr, align 4
  %71 = load %struct._IO_FILE** %fp, align 8
  %n_descript = getelementptr inbounds %struct.anon* %gauge_field, i32 0, i32 0
  %72 = bitcast i32* %n_descript to i8*
  %arraydecay73 = getelementptr inbounds [20 x i8]* %myname, i32 0, i32 0
  %call74 = call i32 @psread_byteorder(i32 %69, i32 %70, %struct._IO_FILE* %71, i8* %72, i64 4, i8* %arraydecay73, i8* getelementptr inbounds ([11 x i8]* @.str69, i32 0, i32 0))
  %cmp75 = icmp ne i32 %call74, 0
  br i1 %cmp75, label %if.then76, label %if.end77

if.then76:                                        ; preds = %if.end72
  call void @terminate(i32 1)
  br label %if.end77

if.end77:                                         ; preds = %if.then76, %if.end72
  %n_descript78 = getelementptr inbounds %struct.anon* %gauge_field, i32 0, i32 0
  %73 = load i32* %n_descript78, align 4
  %cmp79 = icmp sgt i32 %73, 200
  br i1 %cmp79, label %if.then80, label %if.end84

if.then80:                                        ; preds = %if.end77
  %n_descript81 = getelementptr inbounds %struct.anon* %gauge_field, i32 0, i32 0
  %74 = load i32* %n_descript81, align 4
  %call82 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([55 x i8]* @.str70, i32 0, i32 0), i32 %74)
  %call83 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([29 x i8]* @.str71, i32 0, i32 0), i32 200)
  call void @terminate(i32 1)
  br label %if.end84

if.end84:                                         ; preds = %if.then80, %if.end77
  %75 = load i32* %parallel.addr, align 4
  %76 = load %struct._IO_FILE** %fp, align 8
  %descript = getelementptr inbounds %struct.anon* %gauge_field, i32 0, i32 1
  %arraydecay85 = getelementptr inbounds [200 x i8]* %descript, i32 0, i32 0
  %arraydecay86 = getelementptr inbounds [20 x i8]* %myname, i32 0, i32 0
  %call87 = call i32 @psread_data(i32 %75, %struct._IO_FILE* %76, i8* %arraydecay85, i64 200, i8* %arraydecay86, i8* getelementptr inbounds ([8 x i8]* @.str72, i32 0, i32 0))
  %cmp88 = icmp ne i32 %call87, 0
  br i1 %cmp88, label %if.then89, label %if.end90

if.then89:                                        ; preds = %if.end84
  call void @terminate(i32 1)
  br label %if.end90

if.end90:                                         ; preds = %if.then89, %if.end84
  %n_descript91 = getelementptr inbounds %struct.anon* %gauge_field, i32 0, i32 0
  %77 = load i32* %n_descript91, align 4
  %sub = sub nsw i32 %77, 1
  %idxprom92 = sext i32 %sub to i64
  %descript93 = getelementptr inbounds %struct.anon* %gauge_field, i32 0, i32 1
  %arrayidx94 = getelementptr inbounds [200 x i8]* %descript93, i32 0, i64 %idxprom92
  store i8 0, i8* %arrayidx94, align 1
  %descript95 = getelementptr inbounds %struct.anon* %gauge_field, i32 0, i32 1
  %arraydecay96 = getelementptr inbounds [200 x i8]* %descript95, i32 0, i32 0
  %call97 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([26 x i8]* @.str73, i32 0, i32 0), i8* %arraydecay96)
  %78 = load i32** %byterevflag.addr, align 8
  %79 = load i32* %78, align 4
  %80 = load i32* %parallel.addr, align 4
  %81 = load %struct._IO_FILE** %fp, align 8
  %n_param = getelementptr inbounds %struct.anon* %gauge_field, i32 0, i32 2
  %82 = bitcast i32* %n_param to i8*
  %arraydecay98 = getelementptr inbounds [20 x i8]* %myname, i32 0, i32 0
  %call99 = call i32 @psread_byteorder(i32 %79, i32 %80, %struct._IO_FILE* %81, i8* %82, i64 4, i8* %arraydecay98, i8* getelementptr inbounds ([8 x i8]* @.str74, i32 0, i32 0))
  %cmp100 = icmp ne i32 %call99, 0
  br i1 %cmp100, label %if.then101, label %if.end102

if.then101:                                       ; preds = %if.end90
  call void @terminate(i32 1)
  br label %if.end102

if.end102:                                        ; preds = %if.then101, %if.end90
  %n_param103 = getelementptr inbounds %struct.anon* %gauge_field, i32 0, i32 2
  %83 = load i32* %n_param103, align 4
  %cmp104 = icmp sgt i32 %83, 2
  br i1 %cmp104, label %if.then105, label %if.end109

if.then105:                                       ; preds = %if.end102
  %n_param106 = getelementptr inbounds %struct.anon* %gauge_field, i32 0, i32 2
  %84 = load i32* %n_param106, align 4
  %call107 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([61 x i8]* @.str75, i32 0, i32 0), i32 %84)
  %call108 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([29 x i8]* @.str71, i32 0, i32 0), i32 2)
  call void @terminate(i32 1)
  br label %if.end109

if.end109:                                        ; preds = %if.then105, %if.end102
  store i32 0, i32* %j, align 4
  br label %for.cond110

for.cond110:                                      ; preds = %for.inc125, %if.end109
  %85 = load i32* %j, align 4
  %n_param111 = getelementptr inbounds %struct.anon* %gauge_field, i32 0, i32 2
  %86 = load i32* %n_param111, align 4
  %cmp112 = icmp slt i32 %85, %86
  br i1 %cmp112, label %for.body113, label %for.end127

for.body113:                                      ; preds = %for.cond110
  %87 = load i32** %byterevflag.addr, align 8
  %88 = load i32* %87, align 4
  %89 = load i32* %parallel.addr, align 4
  %90 = load %struct._IO_FILE** %fp, align 8
  %91 = load i32* %j, align 4
  %idxprom114 = sext i32 %91 to i64
  %param = getelementptr inbounds %struct.anon* %gauge_field, i32 0, i32 3
  %arrayidx115 = getelementptr inbounds [2 x double]* %param, i32 0, i64 %idxprom114
  %92 = bitcast double* %arrayidx115 to i8*
  %arraydecay116 = getelementptr inbounds [20 x i8]* %myname, i32 0, i32 0
  %call117 = call i32 @psread_byteorder(i32 %88, i32 %89, %struct._IO_FILE* %90, i8* %92, i64 8, i8* %arraydecay116, i8* getelementptr inbounds ([12 x i8]* @.str76, i32 0, i32 0))
  %cmp118 = icmp ne i32 %call117, 0
  br i1 %cmp118, label %if.then119, label %if.end120

if.then119:                                       ; preds = %for.body113
  call void @terminate(i32 1)
  br label %if.end120

if.end120:                                        ; preds = %if.then119, %for.body113
  %93 = load i32* %j, align 4
  %94 = load i32* %j, align 4
  %idxprom121 = sext i32 %94 to i64
  %param122 = getelementptr inbounds %struct.anon* %gauge_field, i32 0, i32 3
  %arrayidx123 = getelementptr inbounds [2 x double]* %param122, i32 0, i64 %idxprom121
  %95 = load double* %arrayidx123, align 8
  %call124 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([28 x i8]* @.str77, i32 0, i32 0), i32 %93, double %95)
  br label %for.inc125

for.inc125:                                       ; preds = %if.end120
  %96 = load i32* %j, align 4
  %inc126 = add nsw i32 %96, 1
  store i32 %inc126, i32* %j, align 4
  br label %for.cond110

for.end127:                                       ; preds = %for.cond110
  store i32 0, i32* %retval
  br label %return

return:                                           ; preds = %for.end127, %if.else13
  %97 = load i32* %retval
  ret i32 %97
}

; Function Attrs: nounwind uwtable
define internal i32 @read_gauge_hdr(%struct.gauge_file* %gf, i32 %parallel) #0 {
entry:
  %retval = alloca i32, align 4
  %gf.addr = alloca %struct.gauge_file*, align 8
  %parallel.addr = alloca i32, align 4
  %fp = alloca %struct._IO_FILE*, align 8
  %gh = alloca %struct.gauge_header*, align 8
  %tmp = alloca i32, align 4
  %btmp = alloca i32, align 4
  %j = alloca i32, align 4
  %byterevflag = alloca i32, align 4
  %myname = alloca [15 x i8], align 1
  %i = alloca i32, align 4
  %hdr = alloca %struct.QCDheader*, align 8
  %dims = alloca [4 x i32], align 16
  %ARCHYES = alloca i32, align 4
  %chksum = alloca i32, align 4
  store %struct.gauge_file* %gf, %struct.gauge_file** %gf.addr, align 8
  store i32 %parallel, i32* %parallel.addr, align 4
  %0 = bitcast [15 x i8]* %myname to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %0, i8* getelementptr inbounds ([15 x i8]* @read_gauge_hdr.myname, i32 0, i32 0), i64 15, i32 1, i1 false)
  store i32 0, i32* %ARCHYES, align 4
  %1 = load %struct.gauge_file** %gf.addr, align 8
  %fp10 = getelementptr inbounds %struct.gauge_file* %1, i32 0, i32 0
  %2 = load %struct._IO_FILE** %fp10, align 8
  store %struct._IO_FILE* %2, %struct._IO_FILE** %fp, align 8
  %3 = load %struct.gauge_file** %gf.addr, align 8
  %header = getelementptr inbounds %struct.gauge_file* %3, i32 0, i32 1
  %4 = load %struct.gauge_header** %header, align 8
  store %struct.gauge_header* %4, %struct.gauge_header** %gh, align 8
  %5 = load i32* %parallel.addr, align 4
  %6 = load %struct._IO_FILE** %fp, align 8
  %7 = load %struct.gauge_header** %gh, align 8
  %magic_number = getelementptr inbounds %struct.gauge_header* %7, i32 0, i32 0
  %8 = bitcast i32* %magic_number to i8*
  %arraydecay = getelementptr inbounds [15 x i8]* %myname, i32 0, i32 0
  %call = call i32 @psread_data(i32 %5, %struct._IO_FILE* %6, i8* %8, i64 4, i8* %arraydecay, i8* getelementptr inbounds ([13 x i8]* @.str54225, i32 0, i32 0))
  %cmp = icmp ne i32 %call, 0
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  call void @terminate(i32 1)
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %9 = load %struct.gauge_header** %gh, align 8
  %magic_number11 = getelementptr inbounds %struct.gauge_header* %9, i32 0, i32 0
  %10 = load i32* %magic_number11, align 4
  store i32 %10, i32* %tmp, align 4
  %11 = load %struct.gauge_header** %gh, align 8
  %magic_number12 = getelementptr inbounds %struct.gauge_header* %11, i32 0, i32 0
  %12 = load i32* %magic_number12, align 4
  store i32 %12, i32* %btmp, align 4
  call void @byterevn(i32* %btmp, i32 1)
  %13 = load i32* %tmp, align 4
  %cmp13 = icmp eq i32 %13, 1111836489
  br i1 %cmp13, label %if.then14, label %if.else

if.then14:                                        ; preds = %if.end
  %call15 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([27 x i8]* @.str78, i32 0, i32 0))
  store i32 1, i32* %ARCHYES, align 4
  store i32 0, i32* %byterevflag, align 4
  br label %if.end48

if.else:                                          ; preds = %if.end
  %14 = load i32* %btmp, align 4
  %cmp16 = icmp eq i32 %14, 1111836489
  br i1 %cmp16, label %if.then17, label %if.else23

if.then17:                                        ; preds = %if.else
  %call18 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([46 x i8]* @.str79, i32 0, i32 0))
  store i32 1, i32* %ARCHYES, align 4
  store i32 1, i32* %byterevflag, align 4
  %15 = load i32* %btmp, align 4
  %16 = load %struct.gauge_header** %gh, align 8
  %magic_number19 = getelementptr inbounds %struct.gauge_header* %16, i32 0, i32 0
  store i32 %15, i32* %magic_number19, align 4
  %arraydecay20 = getelementptr inbounds [15 x i8]* %myname, i32 0, i32 0
  %call21 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([24 x i8]* @.str80, i32 0, i32 0), i8* %arraydecay20)
  %call22 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([53 x i8]* @.str58229, i32 0, i32 0), i32 4, i32 8)
  call void @terminate(i32 1)
  br label %if.end47

if.else23:                                        ; preds = %if.else
  %17 = load i32* %tmp, align 4
  %cmp24 = icmp eq i32 %17, 20103
  br i1 %cmp24, label %if.then25, label %if.else26

if.then25:                                        ; preds = %if.else23
  store i32 0, i32* %byterevflag, align 4
  br label %if.end46

if.else26:                                        ; preds = %if.else23
  %18 = load i32* %btmp, align 4
  %cmp27 = icmp eq i32 %18, 20103
  br i1 %cmp27, label %if.then28, label %if.else34

if.then28:                                        ; preds = %if.else26
  store i32 1, i32* %byterevflag, align 4
  %19 = load i32* %btmp, align 4
  %20 = load %struct.gauge_header** %gh, align 8
  %magic_number29 = getelementptr inbounds %struct.gauge_header* %20, i32 0, i32 0
  store i32 %19, i32* %magic_number29, align 4
  %call30 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([28 x i8]* @.str81, i32 0, i32 0))
  %arraydecay31 = getelementptr inbounds [15 x i8]* %myname, i32 0, i32 0
  %call32 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([24 x i8]* @.str80, i32 0, i32 0), i8* %arraydecay31)
  %call33 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([53 x i8]* @.str58229, i32 0, i32 0), i32 4, i32 8)
  call void @terminate(i32 1)
  br label %if.end45

if.else34:                                        ; preds = %if.else26
  %21 = load %struct.gauge_file** %gf.addr, align 8
  %22 = load i32* %parallel.addr, align 4
  %call35 = call i32 @read_v3_gauge_hdr(%struct.gauge_file* %21, i32 %22, i32* %byterevflag)
  %cmp36 = icmp ne i32 %call35, 0
  br i1 %cmp36, label %land.lhs.true, label %if.end44

land.lhs.true:                                    ; preds = %if.else34
  %23 = load %struct.gauge_file** %gf.addr, align 8
  %24 = load i32* %parallel.addr, align 4
  %call37 = call i32 @read_1996_gauge_hdr(%struct.gauge_file* %23, i32 %24, i32* %byterevflag)
  %cmp38 = icmp ne i32 %call37, 0
  br i1 %cmp38, label %if.then39, label %if.end44

if.then39:                                        ; preds = %land.lhs.true
  %arraydecay40 = getelementptr inbounds [15 x i8]* %myname, i32 0, i32 0
  %call41 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([67 x i8]* @.str82, i32 0, i32 0), i8* %arraydecay40)
  %25 = load i32* %tmp, align 4
  %call42 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([25 x i8]* @.str83, i32 0, i32 0), i32 20103, i32 %25)
  %26 = load i32* %tmp, align 4
  %conv = sext i32 %26 to i64
  %27 = inttoptr i64 %conv to i8*
  %call43 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([25 x i8]* @.str84, i32 0, i32 0), i8* inttoptr (i64 20103 to i8*), i8* %27)
  call void @terminate(i32 1)
  br label %if.end44

if.end44:                                         ; preds = %if.then39, %land.lhs.true, %if.else34
  %28 = load i32* %byterevflag, align 4
  store i32 %28, i32* %retval
  br label %return

if.end45:                                         ; preds = %if.then28
  br label %if.end46

if.end46:                                         ; preds = %if.end45, %if.then25
  br label %if.end47

if.end47:                                         ; preds = %if.end46, %if.then17
  br label %if.end48

if.end48:                                         ; preds = %if.end47, %if.then14
  %29 = load i32* %ARCHYES, align 4
  %cmp49 = icmp eq i32 %29, 1
  br i1 %cmp49, label %if.then51, label %if.else95

if.then51:                                        ; preds = %if.end48
  %30 = load %struct.gauge_file** %gf.addr, align 8
  %header52 = getelementptr inbounds %struct.gauge_file* %30, i32 0, i32 1
  %31 = load %struct.gauge_header** %header52, align 8
  %order = getelementptr inbounds %struct.gauge_header* %31, i32 0, i32 4
  store i32 0, i32* %order, align 4
  %32 = load i32* %parallel.addr, align 4
  %tobool = icmp ne i32 %32, 0
  br i1 %tobool, label %if.then53, label %if.end56

if.then53:                                        ; preds = %if.then51
  %33 = load %struct._IO_FILE** @stderr, align 8
  %arraydecay54 = getelementptr inbounds [15 x i8]* %myname, i32 0, i32 0
  %call55 = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %33, i8* getelementptr inbounds ([56 x i8]* @.str85, i32 0, i32 0), i8* %arraydecay54)
  call void @terminate(i32 1)
  br label %if.end56

if.end56:                                         ; preds = %if.then53, %if.then51
  %34 = load %struct._IO_FILE** %fp, align 8
  %call57 = call %struct.QCDheader* @qcdhdr_get_hdr(%struct._IO_FILE* %34)
  store %struct.QCDheader* %call57, %struct.QCDheader** %hdr, align 8
  %35 = load %struct.QCDheader** %hdr, align 8
  %arraydecay58 = getelementptr inbounds [4 x i32]* %dims, i32 0, i32 0
  %add.ptr = getelementptr inbounds i32* %arraydecay58, i64 0
  %call59 = call i32 @qcdhdr_get_int(i8* getelementptr inbounds ([12 x i8]* @.str86, i32 0, i32 0), %struct.QCDheader* %35, i32* %add.ptr)
  %cmp60 = icmp eq i32 %call59, -1
  br i1 %cmp60, label %if.then62, label %if.end63

if.then62:                                        ; preds = %if.end56
  call void @error_exit(i8* getelementptr inbounds ([24 x i8]* @.str87, i32 0, i32 0))
  br label %if.end63

if.end63:                                         ; preds = %if.then62, %if.end56
  %36 = load %struct.QCDheader** %hdr, align 8
  %arraydecay64 = getelementptr inbounds [4 x i32]* %dims, i32 0, i32 0
  %add.ptr65 = getelementptr inbounds i32* %arraydecay64, i64 1
  %call66 = call i32 @qcdhdr_get_int(i8* getelementptr inbounds ([12 x i8]* @.str88, i32 0, i32 0), %struct.QCDheader* %36, i32* %add.ptr65)
  %cmp67 = icmp eq i32 %call66, -1
  br i1 %cmp67, label %if.then69, label %if.end70

if.then69:                                        ; preds = %if.end63
  call void @error_exit(i8* getelementptr inbounds ([24 x i8]* @.str89, i32 0, i32 0))
  br label %if.end70

if.end70:                                         ; preds = %if.then69, %if.end63
  %37 = load %struct.QCDheader** %hdr, align 8
  %arraydecay71 = getelementptr inbounds [4 x i32]* %dims, i32 0, i32 0
  %add.ptr72 = getelementptr inbounds i32* %arraydecay71, i64 2
  %call73 = call i32 @qcdhdr_get_int(i8* getelementptr inbounds ([12 x i8]* @.str90, i32 0, i32 0), %struct.QCDheader* %37, i32* %add.ptr72)
  %cmp74 = icmp eq i32 %call73, -1
  br i1 %cmp74, label %if.then76, label %if.end77

if.then76:                                        ; preds = %if.end70
  call void @error_exit(i8* getelementptr inbounds ([24 x i8]* @.str91, i32 0, i32 0))
  br label %if.end77

if.end77:                                         ; preds = %if.then76, %if.end70
  %38 = load %struct.QCDheader** %hdr, align 8
  %arraydecay78 = getelementptr inbounds [4 x i32]* %dims, i32 0, i32 0
  %add.ptr79 = getelementptr inbounds i32* %arraydecay78, i64 3
  %call80 = call i32 @qcdhdr_get_int(i8* getelementptr inbounds ([12 x i8]* @.str92, i32 0, i32 0), %struct.QCDheader* %38, i32* %add.ptr79)
  %cmp81 = icmp eq i32 %call80, -1
  br i1 %cmp81, label %if.then83, label %if.end84

if.then83:                                        ; preds = %if.end77
  call void @error_exit(i8* getelementptr inbounds ([24 x i8]* @.str93, i32 0, i32 0))
  br label %if.end84

if.end84:                                         ; preds = %if.then83, %if.end77
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.end84
  %39 = load i32* %i, align 4
  %cmp85 = icmp slt i32 %39, 4
  br i1 %cmp85, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %40 = load i32* %i, align 4
  %idxprom = sext i32 %40 to i64
  %arrayidx = getelementptr inbounds [4 x i32]* %dims, i32 0, i64 %idxprom
  %41 = load i32* %arrayidx, align 4
  %42 = load i32* %i, align 4
  %idxprom87 = sext i32 %42 to i64
  %43 = load %struct.gauge_header** %gh, align 8
  %dims88 = getelementptr inbounds %struct.gauge_header* %43, i32 0, i32 2
  %arrayidx89 = getelementptr inbounds [4 x i32]* %dims88, i32 0, i64 %idxprom87
  store i32 %41, i32* %arrayidx89, align 4
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %44 = load i32* %i, align 4
  %inc = add nsw i32 %44, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %45 = load %struct.QCDheader** %hdr, align 8
  %call90 = call i32 @qcdhdr_get_int32x(i8* getelementptr inbounds ([9 x i8]* @.str94, i32 0, i32 0), %struct.QCDheader* %45, i32* %chksum)
  %cmp91 = icmp eq i32 %call90, -1
  br i1 %cmp91, label %if.then93, label %if.end94

if.then93:                                        ; preds = %for.end
  call void @error_exit(i8* getelementptr inbounds ([21 x i8]* @.str95233, i32 0, i32 0))
  br label %if.end94

if.end94:                                         ; preds = %if.then93, %for.end
  %46 = load i32* %chksum, align 4
  %47 = load %struct.gauge_file** %gf.addr, align 8
  %check = getelementptr inbounds %struct.gauge_file* %47, i32 0, i32 6
  %sum31 = getelementptr inbounds %struct.gauge_check* %check, i32 0, i32 0
  store i32 %46, i32* %sum31, align 4
  br label %if.end104

if.else95:                                        ; preds = %if.end48
  %48 = load i32* %byterevflag, align 4
  %49 = load i32* %parallel.addr, align 4
  %50 = load %struct._IO_FILE** %fp, align 8
  %51 = load %struct.gauge_header** %gh, align 8
  %dims96 = getelementptr inbounds %struct.gauge_header* %51, i32 0, i32 2
  %arraydecay97 = getelementptr inbounds [4 x i32]* %dims96, i32 0, i32 0
  %52 = bitcast i32* %arraydecay97 to i8*
  %arraydecay98 = getelementptr inbounds [15 x i8]* %myname, i32 0, i32 0
  %call99 = call i32 @psread_byteorder(i32 %48, i32 %49, %struct._IO_FILE* %50, i8* %52, i64 16, i8* %arraydecay98, i8* getelementptr inbounds ([11 x i8]* @.str11182, i32 0, i32 0))
  %cmp100 = icmp ne i32 %call99, 0
  br i1 %cmp100, label %if.then102, label %if.end103

if.then102:                                       ; preds = %if.else95
  call void @terminate(i32 1)
  br label %if.end103

if.end103:                                        ; preds = %if.then102, %if.else95
  br label %if.end104

if.end104:                                        ; preds = %if.end103, %if.end94
  %53 = load %struct.gauge_header** %gh, align 8
  %dims105 = getelementptr inbounds %struct.gauge_header* %53, i32 0, i32 2
  %arrayidx106 = getelementptr inbounds [4 x i32]* %dims105, i32 0, i64 0
  %54 = load i32* %arrayidx106, align 4
  %55 = load i32* @nx, align 4
  %cmp107 = icmp ne i32 %54, %55
  br i1 %cmp107, label %if.then123, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.end104
  %56 = load %struct.gauge_header** %gh, align 8
  %dims109 = getelementptr inbounds %struct.gauge_header* %56, i32 0, i32 2
  %arrayidx110 = getelementptr inbounds [4 x i32]* %dims109, i32 0, i64 1
  %57 = load i32* %arrayidx110, align 4
  %58 = load i32* @ny, align 4
  %cmp111 = icmp ne i32 %57, %58
  br i1 %cmp111, label %if.then123, label %lor.lhs.false113

lor.lhs.false113:                                 ; preds = %lor.lhs.false
  %59 = load %struct.gauge_header** %gh, align 8
  %dims114 = getelementptr inbounds %struct.gauge_header* %59, i32 0, i32 2
  %arrayidx115 = getelementptr inbounds [4 x i32]* %dims114, i32 0, i64 2
  %60 = load i32* %arrayidx115, align 4
  %61 = load i32* @nz, align 4
  %cmp116 = icmp ne i32 %60, %61
  br i1 %cmp116, label %if.then123, label %lor.lhs.false118

lor.lhs.false118:                                 ; preds = %lor.lhs.false113
  %62 = load %struct.gauge_header** %gh, align 8
  %dims119 = getelementptr inbounds %struct.gauge_header* %62, i32 0, i32 2
  %arrayidx120 = getelementptr inbounds [4 x i32]* %dims119, i32 0, i64 3
  %63 = load i32* %arrayidx120, align 4
  %64 = load i32* @nt, align 4
  %cmp121 = icmp ne i32 %63, %64
  br i1 %cmp121, label %if.then123, label %if.end163

if.then123:                                       ; preds = %lor.lhs.false118, %lor.lhs.false113, %lor.lhs.false, %if.end104
  %65 = load i32* @nx, align 4
  %cmp124 = icmp ne i32 %65, -1
  br i1 %cmp124, label %if.then135, label %lor.lhs.false126

lor.lhs.false126:                                 ; preds = %if.then123
  %66 = load i32* @ny, align 4
  %cmp127 = icmp ne i32 %66, -1
  br i1 %cmp127, label %if.then135, label %lor.lhs.false129

lor.lhs.false129:                                 ; preds = %lor.lhs.false126
  %67 = load i32* @nz, align 4
  %cmp130 = icmp ne i32 %67, -1
  br i1 %cmp130, label %if.then135, label %lor.lhs.false132

lor.lhs.false132:                                 ; preds = %lor.lhs.false129
  %68 = load i32* @nt, align 4
  %cmp133 = icmp ne i32 %68, -1
  br i1 %cmp133, label %if.then135, label %if.else151

if.then135:                                       ; preds = %lor.lhs.false132, %lor.lhs.false129, %lor.lhs.false126, %if.then123
  %arraydecay136 = getelementptr inbounds [15 x i8]* %myname, i32 0, i32 0
  %call137 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([34 x i8]* @.str96, i32 0, i32 0), i8* %arraydecay136)
  store i32 0, i32* %j, align 4
  br label %for.cond138

for.cond138:                                      ; preds = %for.inc146, %if.then135
  %69 = load i32* %j, align 4
  %cmp139 = icmp slt i32 %69, 4
  br i1 %cmp139, label %for.body141, label %for.end148

for.body141:                                      ; preds = %for.cond138
  %70 = load i32* %j, align 4
  %idxprom142 = sext i32 %70 to i64
  %71 = load %struct.gauge_header** %gh, align 8
  %dims143 = getelementptr inbounds %struct.gauge_header* %71, i32 0, i32 2
  %arrayidx144 = getelementptr inbounds [4 x i32]* %dims143, i32 0, i64 %idxprom142
  %72 = load i32* %arrayidx144, align 4
  %call145 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([4 x i8]* @.str60231, i32 0, i32 0), i32 %72)
  br label %for.inc146

for.inc146:                                       ; preds = %for.body141
  %73 = load i32* %j, align 4
  %inc147 = add nsw i32 %73, 1
  store i32 %inc147, i32* %j, align 4
  br label %for.cond138

for.end148:                                       ; preds = %for.cond138
  %call149 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([2 x i8]* @.str24195, i32 0, i32 0))
  %74 = load %struct._IO_FILE** @stdout, align 8
  %call150 = call i32 @fflush(%struct._IO_FILE* %74)
  call void @terminate(i32 1)
  br label %if.end162

if.else151:                                       ; preds = %lor.lhs.false132
  %75 = load %struct.gauge_header** %gh, align 8
  %dims152 = getelementptr inbounds %struct.gauge_header* %75, i32 0, i32 2
  %arrayidx153 = getelementptr inbounds [4 x i32]* %dims152, i32 0, i64 0
  %76 = load i32* %arrayidx153, align 4
  store i32 %76, i32* @nx, align 4
  %77 = load %struct.gauge_header** %gh, align 8
  %dims154 = getelementptr inbounds %struct.gauge_header* %77, i32 0, i32 2
  %arrayidx155 = getelementptr inbounds [4 x i32]* %dims154, i32 0, i64 1
  %78 = load i32* %arrayidx155, align 4
  store i32 %78, i32* @ny, align 4
  %79 = load %struct.gauge_header** %gh, align 8
  %dims156 = getelementptr inbounds %struct.gauge_header* %79, i32 0, i32 2
  %arrayidx157 = getelementptr inbounds [4 x i32]* %dims156, i32 0, i64 2
  %80 = load i32* %arrayidx157, align 4
  store i32 %80, i32* @nz, align 4
  %81 = load %struct.gauge_header** %gh, align 8
  %dims158 = getelementptr inbounds %struct.gauge_header* %81, i32 0, i32 2
  %arrayidx159 = getelementptr inbounds [4 x i32]* %dims158, i32 0, i64 3
  %82 = load i32* %arrayidx159, align 4
  store i32 %82, i32* @nt, align 4
  %83 = load i32* @nx, align 4
  %84 = load i32* @ny, align 4
  %mul = mul nsw i32 %83, %84
  %85 = load i32* @nz, align 4
  %mul160 = mul nsw i32 %mul, %85
  %86 = load i32* @nt, align 4
  %mul161 = mul nsw i32 %mul160, %86
  store i32 %mul161, i32* @volume, align 4
  br label %if.end162

if.end162:                                        ; preds = %if.else151, %for.end148
  br label %if.end163

if.end163:                                        ; preds = %if.end162, %lor.lhs.false118
  %87 = load i32* %ARCHYES, align 4
  %tobool164 = icmp ne i32 %87, 0
  br i1 %tobool164, label %if.then165, label %if.else166

if.then165:                                       ; preds = %if.end163
  %88 = load %struct.QCDheader** %hdr, align 8
  call void @qcdhdr_destroy_hdr(%struct.QCDheader* %88)
  br label %if.end181

if.else166:                                       ; preds = %if.end163
  %89 = load i32* %parallel.addr, align 4
  %90 = load %struct._IO_FILE** %fp, align 8
  %91 = load %struct.gauge_header** %gh, align 8
  %time_stamp = getelementptr inbounds %struct.gauge_header* %91, i32 0, i32 1
  %arraydecay167 = getelementptr inbounds [64 x i8]* %time_stamp, i32 0, i32 0
  %arraydecay168 = getelementptr inbounds [15 x i8]* %myname, i32 0, i32 0
  %call169 = call i32 @psread_data(i32 %89, %struct._IO_FILE* %90, i8* %arraydecay167, i64 64, i8* %arraydecay168, i8* getelementptr inbounds ([11 x i8]* @.str97, i32 0, i32 0))
  %cmp170 = icmp ne i32 %call169, 0
  br i1 %cmp170, label %if.then172, label %if.end173

if.then172:                                       ; preds = %if.else166
  call void @terminate(i32 1)
  br label %if.end173

if.end173:                                        ; preds = %if.then172, %if.else166
  %92 = load %struct.gauge_header** %gh, align 8
  %header_bytes = getelementptr inbounds %struct.gauge_header* %92, i32 0, i32 3
  store i32 88, i32* %header_bytes, align 4
  %93 = load i32* %byterevflag, align 4
  %94 = load i32* %parallel.addr, align 4
  %95 = load %struct._IO_FILE** %fp, align 8
  %96 = load %struct.gauge_header** %gh, align 8
  %order174 = getelementptr inbounds %struct.gauge_header* %96, i32 0, i32 4
  %97 = bitcast i32* %order174 to i8*
  %arraydecay175 = getelementptr inbounds [15 x i8]* %myname, i32 0, i32 0
  %call176 = call i32 @psread_byteorder(i32 %93, i32 %94, %struct._IO_FILE* %95, i8* %97, i64 4, i8* %arraydecay175, i8* getelementptr inbounds ([16 x i8]* @.str98, i32 0, i32 0))
  %cmp177 = icmp ne i32 %call176, 0
  br i1 %cmp177, label %if.then179, label %if.end180

if.then179:                                       ; preds = %if.end173
  call void @terminate(i32 1)
  br label %if.end180

if.end180:                                        ; preds = %if.then179, %if.end173
  br label %if.end181

if.end181:                                        ; preds = %if.end180, %if.then165
  %98 = load i32* %byterevflag, align 4
  store i32 %98, i32* %retval
  br label %return

return:                                           ; preds = %if.end181, %if.end44
  %99 = load i32* %retval
  ret i32 %99
}

; Function Attrs: nounwind uwtable
define internal %struct.gauge_file* @r_serial_i(i8* %filename) #0 {
entry:
  %filename.addr = alloca i8*, align 8
  %gh = alloca %struct.gauge_header*, align 8
  %gf = alloca %struct.gauge_file*, align 8
  %fp = alloca %struct._IO_FILE*, align 8
  %byterevflag = alloca i32, align 4
  store i8* %filename, i8** %filename.addr, align 8
  %0 = load i8** %filename.addr, align 8
  %call = call %struct.gauge_file* @setup_input_gauge_file(i8* %0)
  store %struct.gauge_file* %call, %struct.gauge_file** %gf, align 8
  %1 = load %struct.gauge_file** %gf, align 8
  %header = getelementptr inbounds %struct.gauge_file* %1, i32 0, i32 1
  %2 = load %struct.gauge_header** %header, align 8
  store %struct.gauge_header* %2, %struct.gauge_header** %gh, align 8
  %3 = load %struct.gauge_file** %gf, align 8
  %parallel = getelementptr inbounds %struct.gauge_file* %3, i32 0, i32 5
  store i32 0, i32* %parallel, align 4
  %4 = load i32* @this_node, align 4
  %cmp = icmp eq i32 %4, 0
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  %5 = load i8** %filename.addr, align 8
  %call1 = call %struct._IO_FILE* @fopen(i8* %5, i8* getelementptr inbounds ([3 x i8]* @.str99, i32 0, i32 0))
  store %struct._IO_FILE* %call1, %struct._IO_FILE** %fp, align 8
  %6 = load %struct._IO_FILE** %fp, align 8
  %cmp2 = icmp eq %struct._IO_FILE* %6, null
  br i1 %cmp2, label %if.then3, label %if.end

if.then3:                                         ; preds = %if.then
  %7 = load i32* @this_node, align 4
  %8 = load i8** %filename.addr, align 8
  %call4 = call i32* @__errno_location() #8
  %9 = load i32* %call4, align 4
  %call5 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([50 x i8]* @.str100, i32 0, i32 0), i32 %7, i8* %8, i32 %9)
  %10 = load %struct._IO_FILE** @stdout, align 8
  %call6 = call i32 @fflush(%struct._IO_FILE* %10)
  call void @terminate(i32 1)
  br label %if.end

if.end:                                           ; preds = %if.then3, %if.then
  %11 = load %struct._IO_FILE** %fp, align 8
  %12 = load %struct.gauge_file** %gf, align 8
  %fp7 = getelementptr inbounds %struct.gauge_file* %12, i32 0, i32 0
  store %struct._IO_FILE* %11, %struct._IO_FILE** %fp7, align 8
  %13 = load %struct.gauge_file** %gf, align 8
  %call8 = call i32 @read_gauge_hdr(%struct.gauge_file* %13, i32 0)
  store i32 %call8, i32* %byterevflag, align 4
  br label %if.end10

if.else:                                          ; preds = %entry
  %14 = load %struct.gauge_file** %gf, align 8
  %fp9 = getelementptr inbounds %struct.gauge_file* %14, i32 0, i32 0
  store %struct._IO_FILE* null, %struct._IO_FILE** %fp9, align 8
  br label %if.end10

if.end10:                                         ; preds = %if.else, %if.end
  %15 = bitcast i32* %byterevflag to i8*
  call void @broadcast_bytes(i8* %15, i32 4)
  %16 = load i32* %byterevflag, align 4
  %17 = load %struct.gauge_file** %gf, align 8
  %byterevflag11 = getelementptr inbounds %struct.gauge_file* %17, i32 0, i32 3
  store i32 %16, i32* %byterevflag11, align 4
  %18 = load %struct.gauge_header** %gh, align 8
  %19 = bitcast %struct.gauge_header* %18 to i8*
  call void @broadcast_bytes(i8* %19, i32 92)
  %20 = load %struct.gauge_file** %gf, align 8
  call void @read_site_list(i32 0, %struct.gauge_file* %20)
  %21 = load %struct.gauge_file** %gf, align 8
  ret %struct.gauge_file* %21
}

; Function Attrs: nounwind uwtable
define internal void @r_serial(%struct.gauge_file* %gf) #0 {
entry:
  %gf.addr = alloca %struct.gauge_file*, align 8
  %fp = alloca %struct._IO_FILE*, align 8
  %gh = alloca %struct.gauge_header*, align 8
  %filename = alloca i8*, align 8
  %byterevflag = alloca i32, align 4
  %offset = alloca i64, align 8
  %gauge_check_size = alloca i64, align 8
  %coord_list_size = alloca i64, align 8
  %head_size = alloca i64, align 8
  %checksum_offset = alloca i64, align 8
  %rcv_rank = alloca i32, align 4
  %rcv_coords = alloca i32, align 4
  %destnode = alloca i32, align 4
  %i = alloca i32, align 4
  %k = alloca i32, align 4
  %x = alloca i32, align 4
  %y = alloca i32, align 4
  %z = alloca i32, align 4
  %t = alloca i32, align 4
  %buf_length = alloca i32, align 4
  %where_in_buf = alloca i32, align 4
  %test_gc = alloca %struct.gauge_check, align 4
  %val = alloca i32*, align 8
  %rank29 = alloca i32, align 4
  %rank31 = alloca i32, align 4
  %lbuf = alloca %struct.su3_matrix*, align 8
  %myname = alloca [9 x i8], align 1
  store %struct.gauge_file* %gf, %struct.gauge_file** %gf.addr, align 8
  %0 = bitcast [9 x i8]* %myname to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %0, i8* getelementptr inbounds ([9 x i8]* @r_serial.myname, i32 0, i32 0), i64 9, i32 1, i1 false)
  %1 = load %struct.gauge_file** %gf.addr, align 8
  %fp1 = getelementptr inbounds %struct.gauge_file* %1, i32 0, i32 0
  %2 = load %struct._IO_FILE** %fp1, align 8
  store %struct._IO_FILE* %2, %struct._IO_FILE** %fp, align 8
  %3 = load %struct.gauge_file** %gf.addr, align 8
  %header = getelementptr inbounds %struct.gauge_file* %3, i32 0, i32 1
  %4 = load %struct.gauge_header** %header, align 8
  store %struct.gauge_header* %4, %struct.gauge_header** %gh, align 8
  %5 = load %struct.gauge_file** %gf.addr, align 8
  %filename2 = getelementptr inbounds %struct.gauge_file* %5, i32 0, i32 2
  %6 = load i8** %filename2, align 8
  store i8* %6, i8** %filename, align 8
  %7 = load %struct.gauge_file** %gf.addr, align 8
  %byterevflag3 = getelementptr inbounds %struct.gauge_file* %7, i32 0, i32 3
  %8 = load i32* %byterevflag3, align 4
  store i32 %8, i32* %byterevflag, align 4
  %9 = load i32* @this_node, align 4
  %cmp = icmp eq i32 %9, 0
  br i1 %cmp, label %if.then, label %if.end38

if.then:                                          ; preds = %entry
  %10 = load %struct.gauge_header** %gh, align 8
  %magic_number = getelementptr inbounds %struct.gauge_header* %10, i32 0, i32 0
  %11 = load i32* %magic_number, align 4
  %cmp4 = icmp eq i32 %11, 20103
  br i1 %cmp4, label %if.then5, label %if.else

if.then5:                                         ; preds = %if.then
  store i64 8, i64* %gauge_check_size, align 8
  br label %if.end10

if.else:                                          ; preds = %if.then
  %12 = load %struct.gauge_header** %gh, align 8
  %magic_number6 = getelementptr inbounds %struct.gauge_header* %12, i32 0, i32 0
  %13 = load i32* %magic_number6, align 4
  %cmp7 = icmp eq i32 %13, 53546
  br i1 %cmp7, label %if.then8, label %if.else9

if.then8:                                         ; preds = %if.else
  store i64 4, i64* %gauge_check_size, align 8
  br label %if.end

if.else9:                                         ; preds = %if.else
  store i64 0, i64* %gauge_check_size, align 8
  br label %if.end

if.end:                                           ; preds = %if.else9, %if.then8
  br label %if.end10

if.end10:                                         ; preds = %if.end, %if.then5
  %14 = load %struct.gauge_file** %gf.addr, align 8
  %header11 = getelementptr inbounds %struct.gauge_file* %14, i32 0, i32 1
  %15 = load %struct.gauge_header** %header11, align 8
  %order = getelementptr inbounds %struct.gauge_header* %15, i32 0, i32 4
  %16 = load i32* %order, align 4
  %cmp12 = icmp eq i32 %16, 0
  br i1 %cmp12, label %if.then13, label %if.else14

if.then13:                                        ; preds = %if.end10
  store i64 0, i64* %coord_list_size, align 8
  br label %if.end15

if.else14:                                        ; preds = %if.end10
  %17 = load i32* @volume, align 4
  %conv = sext i32 %17 to i64
  %mul = mul i64 4, %conv
  store i64 %mul, i64* %coord_list_size, align 8
  br label %if.end15

if.end15:                                         ; preds = %if.else14, %if.then13
  %18 = load %struct.gauge_file** %gf.addr, align 8
  %header16 = getelementptr inbounds %struct.gauge_file* %18, i32 0, i32 1
  %19 = load %struct.gauge_header** %header16, align 8
  %header_bytes = getelementptr inbounds %struct.gauge_header* %19, i32 0, i32 3
  %20 = load i32* %header_bytes, align 4
  %conv17 = sext i32 %20 to i64
  %21 = load i64* %coord_list_size, align 8
  %add = add nsw i64 %conv17, %21
  store i64 %add, i64* %checksum_offset, align 8
  %22 = load i64* %checksum_offset, align 8
  %23 = load i64* %gauge_check_size, align 8
  %add18 = add nsw i64 %22, %23
  store i64 %add18, i64* %head_size, align 8
  %24 = load %struct.gauge_file** %gf.addr, align 8
  %parallel = getelementptr inbounds %struct.gauge_file* %24, i32 0, i32 5
  %25 = load i32* %parallel, align 4
  %tobool = icmp ne i32 %25, 0
  br i1 %tobool, label %if.then19, label %if.end20

if.then19:                                        ; preds = %if.end15
  %arraydecay = getelementptr inbounds [9 x i8]* %myname, i32 0, i32 0
  %call = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([48 x i8]* @.str101, i32 0, i32 0), i8* %arraydecay)
  br label %if.end20

if.end20:                                         ; preds = %if.then19, %if.end15
  %call21 = call noalias i8* @calloc(i64 16384, i64 144) #2
  %26 = bitcast i8* %call21 to %struct.su3_matrix*
  store %struct.su3_matrix* %26, %struct.su3_matrix** %lbuf, align 8
  %27 = load %struct.su3_matrix** %lbuf, align 8
  %cmp22 = icmp eq %struct.su3_matrix* %27, null
  br i1 %cmp22, label %if.then24, label %if.end28

if.then24:                                        ; preds = %if.end20
  %arraydecay25 = getelementptr inbounds [9 x i8]* %myname, i32 0, i32 0
  %28 = load i32* @this_node, align 4
  %call26 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([31 x i8]* @.str102234, i32 0, i32 0), i8* %arraydecay25, i32 %28)
  %29 = load %struct._IO_FILE** @stdout, align 8
  %call27 = call i32 @fflush(%struct._IO_FILE* %29)
  call void @terminate(i32 1)
  br label %if.end28

if.end28:                                         ; preds = %if.then24, %if.end20
  %30 = load i64* %head_size, align 8
  store i64 %30, i64* %offset, align 8
  %31 = load %struct._IO_FILE** %fp, align 8
  %32 = load i64* %offset, align 8
  %call29 = call i32 @fseek(%struct._IO_FILE* %31, i64 %32, i32 0)
  %cmp30 = icmp slt i32 %call29, 0
  br i1 %cmp30, label %if.then32, label %if.end37

if.then32:                                        ; preds = %if.end28
  %arraydecay33 = getelementptr inbounds [9 x i8]* %myname, i32 0, i32 0
  %call34 = call i32* @__errno_location() #8
  %33 = load i32* %call34, align 4
  %34 = load i8** %filename, align 8
  %call35 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([43 x i8]* @.str103, i32 0, i32 0), i8* %arraydecay33, i32 %33, i8* %34)
  %35 = load %struct._IO_FILE** @stdout, align 8
  %call36 = call i32 @fflush(%struct._IO_FILE* %35)
  call void @terminate(i32 1)
  br label %if.end37

if.end37:                                         ; preds = %if.then32, %if.end28
  store i32 0, i32* %buf_length, align 4
  store i32 0, i32* %where_in_buf, align 4
  br label %if.end38

if.end38:                                         ; preds = %if.end37, %entry
  %sum29 = getelementptr inbounds %struct.gauge_check* %test_gc, i32 0, i32 1
  store i32 0, i32* %sum29, align 4
  %sum31 = getelementptr inbounds %struct.gauge_check* %test_gc, i32 0, i32 0
  store i32 0, i32* %sum31, align 4
  store i32 0, i32* %rank29, align 4
  store i32 0, i32* %rank31, align 4
  call void (...)* bitcast (void ()* @g_sync to void (...)*)()
  store i32 0, i32* %rcv_rank, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc150, %if.end38
  %36 = load i32* %rcv_rank, align 4
  %37 = load i32* @volume, align 4
  %cmp39 = icmp slt i32 %36, %37
  br i1 %cmp39, label %for.body, label %for.end152

for.body:                                         ; preds = %for.cond
  %38 = load %struct.gauge_file** %gf.addr, align 8
  %header41 = getelementptr inbounds %struct.gauge_file* %38, i32 0, i32 1
  %39 = load %struct.gauge_header** %header41, align 8
  %order42 = getelementptr inbounds %struct.gauge_header* %39, i32 0, i32 4
  %40 = load i32* %order42, align 4
  %cmp43 = icmp eq i32 %40, 0
  br i1 %cmp43, label %if.then45, label %if.else46

if.then45:                                        ; preds = %for.body
  %41 = load i32* %rcv_rank, align 4
  store i32 %41, i32* %rcv_coords, align 4
  br label %if.end47

if.else46:                                        ; preds = %for.body
  %42 = load i32* %rcv_rank, align 4
  %idxprom = sext i32 %42 to i64
  %43 = load %struct.gauge_file** %gf.addr, align 8
  %rank2rcv = getelementptr inbounds %struct.gauge_file* %43, i32 0, i32 4
  %44 = load i32** %rank2rcv, align 8
  %arrayidx = getelementptr inbounds i32* %44, i64 %idxprom
  %45 = load i32* %arrayidx, align 4
  store i32 %45, i32* %rcv_coords, align 4
  br label %if.end47

if.end47:                                         ; preds = %if.else46, %if.then45
  %46 = load i32* %rcv_coords, align 4
  %47 = load i32* @nx, align 4
  %rem = srem i32 %46, %47
  store i32 %rem, i32* %x, align 4
  %48 = load i32* @nx, align 4
  %49 = load i32* %rcv_coords, align 4
  %div = sdiv i32 %49, %48
  store i32 %div, i32* %rcv_coords, align 4
  %50 = load i32* %rcv_coords, align 4
  %51 = load i32* @ny, align 4
  %rem48 = srem i32 %50, %51
  store i32 %rem48, i32* %y, align 4
  %52 = load i32* @ny, align 4
  %53 = load i32* %rcv_coords, align 4
  %div49 = sdiv i32 %53, %52
  store i32 %div49, i32* %rcv_coords, align 4
  %54 = load i32* %rcv_coords, align 4
  %55 = load i32* @nz, align 4
  %rem50 = srem i32 %54, %55
  store i32 %rem50, i32* %z, align 4
  %56 = load i32* @nz, align 4
  %57 = load i32* %rcv_coords, align 4
  %div51 = sdiv i32 %57, %56
  store i32 %div51, i32* %rcv_coords, align 4
  %58 = load i32* %rcv_coords, align 4
  %59 = load i32* @nt, align 4
  %rem52 = srem i32 %58, %59
  store i32 %rem52, i32* %t, align 4
  %60 = load i32* %x, align 4
  %61 = load i32* %y, align 4
  %62 = load i32* %z, align 4
  %63 = load i32* %t, align 4
  %call53 = call i32 @node_number(i32 %60, i32 %61, i32 %62, i32 %63)
  store i32 %call53, i32* %destnode, align 4
  %64 = load i32* @this_node, align 4
  %cmp54 = icmp eq i32 %64, 0
  br i1 %cmp54, label %if.then56, label %if.else91

if.then56:                                        ; preds = %if.end47
  %65 = load i32* %where_in_buf, align 4
  %66 = load i32* %buf_length, align 4
  %cmp57 = icmp eq i32 %65, %66
  br i1 %cmp57, label %if.then59, label %if.end75

if.then59:                                        ; preds = %if.then56
  %67 = load i32* @volume, align 4
  %68 = load i32* %rcv_rank, align 4
  %sub = sub nsw i32 %67, %68
  store i32 %sub, i32* %buf_length, align 4
  %69 = load i32* %buf_length, align 4
  %cmp60 = icmp sgt i32 %69, 4096
  br i1 %cmp60, label %if.then62, label %if.end63

if.then62:                                        ; preds = %if.then59
  store i32 4096, i32* %buf_length, align 4
  br label %if.end63

if.end63:                                         ; preds = %if.then62, %if.then59
  %70 = load %struct.su3_matrix** %lbuf, align 8
  %71 = bitcast %struct.su3_matrix* %70 to i8*
  %72 = load i32* %buf_length, align 4
  %conv64 = sext i32 %72 to i64
  %73 = load %struct._IO_FILE** %fp, align 8
  %call65 = call i64 @fread(i8* %71, i64 576, i64 %conv64, %struct._IO_FILE* %73)
  %conv66 = trunc i64 %call65 to i32
  %74 = load i32* %buf_length, align 4
  %cmp67 = icmp ne i32 %conv66, %74
  br i1 %cmp67, label %if.then69, label %if.end74

if.then69:                                        ; preds = %if.end63
  %arraydecay70 = getelementptr inbounds [9 x i8]* %myname, i32 0, i32 0
  %75 = load i32* @this_node, align 4
  %call71 = call i32* @__errno_location() #8
  %76 = load i32* %call71, align 4
  %77 = load i8** %filename, align 8
  %call72 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([55 x i8]* @.str104, i32 0, i32 0), i8* %arraydecay70, i32 %75, i32 %76, i8* %77)
  %78 = load %struct._IO_FILE** @stdout, align 8
  %call73 = call i32 @fflush(%struct._IO_FILE* %78)
  call void @terminate(i32 1)
  br label %if.end74

if.end74:                                         ; preds = %if.then69, %if.end63
  store i32 0, i32* %where_in_buf, align 4
  br label %if.end75

if.end75:                                         ; preds = %if.end74, %if.then56
  %79 = load i32* %destnode, align 4
  %cmp76 = icmp eq i32 %79, 0
  br i1 %cmp76, label %if.then78, label %if.else86

if.then78:                                        ; preds = %if.end75
  %80 = load i32* %x, align 4
  %81 = load i32* %y, align 4
  %82 = load i32* %z, align 4
  %83 = load i32* %t, align 4
  %call79 = call i32 @node_index(i32 %80, i32 %81, i32 %82, i32 %83)
  store i32 %call79, i32* %i, align 4
  %84 = load i32* %i, align 4
  %idxprom80 = sext i32 %84 to i64
  %85 = load %struct.site** @lattice, align 8
  %arrayidx81 = getelementptr inbounds %struct.site* %85, i64 %idxprom80
  %link = getelementptr inbounds %struct.site* %arrayidx81, i32 0, i32 8
  %arrayidx82 = getelementptr inbounds [4 x %struct.su3_matrix]* %link, i32 0, i64 0
  %86 = bitcast %struct.su3_matrix* %arrayidx82 to i8*
  %87 = load i32* %where_in_buf, align 4
  %mul83 = mul nsw i32 4, %87
  %idxprom84 = sext i32 %mul83 to i64
  %88 = load %struct.su3_matrix** %lbuf, align 8
  %arrayidx85 = getelementptr inbounds %struct.su3_matrix* %88, i64 %idxprom84
  %89 = bitcast %struct.su3_matrix* %arrayidx85 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %86, i8* %89, i64 576, i32 1, i1 false)
  br label %if.end90

if.else86:                                        ; preds = %if.end75
  %90 = load i32* %where_in_buf, align 4
  %mul87 = mul nsw i32 4, %90
  %idxprom88 = sext i32 %mul87 to i64
  %91 = load %struct.su3_matrix** %lbuf, align 8
  %arrayidx89 = getelementptr inbounds %struct.su3_matrix* %91, i64 %idxprom88
  %92 = bitcast %struct.su3_matrix* %arrayidx89 to i8*
  %93 = load i32* %destnode, align 4
  call void @send_field(i8* %92, i32 576, i32 %93)
  br label %if.end90

if.end90:                                         ; preds = %if.else86, %if.then78
  %94 = load i32* %where_in_buf, align 4
  %inc = add nsw i32 %94, 1
  store i32 %inc, i32* %where_in_buf, align 4
  br label %if.end101

if.else91:                                        ; preds = %if.end47
  %95 = load i32* @this_node, align 4
  %96 = load i32* %destnode, align 4
  %cmp92 = icmp eq i32 %95, %96
  br i1 %cmp92, label %if.then94, label %if.end100

if.then94:                                        ; preds = %if.else91
  %97 = load i32* %x, align 4
  %98 = load i32* %y, align 4
  %99 = load i32* %z, align 4
  %100 = load i32* %t, align 4
  %call95 = call i32 @node_index(i32 %97, i32 %98, i32 %99, i32 %100)
  store i32 %call95, i32* %i, align 4
  %101 = load i32* %i, align 4
  %idxprom96 = sext i32 %101 to i64
  %102 = load %struct.site** @lattice, align 8
  %arrayidx97 = getelementptr inbounds %struct.site* %102, i64 %idxprom96
  %link98 = getelementptr inbounds %struct.site* %arrayidx97, i32 0, i32 8
  %arrayidx99 = getelementptr inbounds [4 x %struct.su3_matrix]* %link98, i32 0, i64 0
  %103 = bitcast %struct.su3_matrix* %arrayidx99 to i8*
  call void @get_field(i8* %103, i32 576)
  br label %if.end100

if.end100:                                        ; preds = %if.then94, %if.else91
  br label %if.end101

if.end101:                                        ; preds = %if.end100, %if.end90
  %104 = load i32* @this_node, align 4
  %105 = load i32* %destnode, align 4
  %cmp102 = icmp eq i32 %104, %105
  br i1 %cmp102, label %if.then104, label %if.else140

if.then104:                                       ; preds = %if.end101
  %106 = load i32* %byterevflag, align 4
  %cmp105 = icmp eq i32 %106, 1
  br i1 %cmp105, label %if.then107, label %if.end112

if.then107:                                       ; preds = %if.then104
  %107 = load i32* %i, align 4
  %idxprom108 = sext i32 %107 to i64
  %108 = load %struct.site** @lattice, align 8
  %arrayidx109 = getelementptr inbounds %struct.site* %108, i64 %idxprom108
  %link110 = getelementptr inbounds %struct.site* %arrayidx109, i32 0, i32 8
  %arrayidx111 = getelementptr inbounds [4 x %struct.su3_matrix]* %link110, i32 0, i64 0
  %109 = bitcast %struct.su3_matrix* %arrayidx111 to i32*
  call void @byterevn(i32* %109, i32 144)
  br label %if.end112

if.end112:                                        ; preds = %if.then107, %if.then104
  store i32 0, i32* %k, align 4
  %110 = load i32* %i, align 4
  %idxprom113 = sext i32 %110 to i64
  %111 = load %struct.site** @lattice, align 8
  %arrayidx114 = getelementptr inbounds %struct.site* %111, i64 %idxprom113
  %link115 = getelementptr inbounds %struct.site* %arrayidx114, i32 0, i32 8
  %arrayidx116 = getelementptr inbounds [4 x %struct.su3_matrix]* %link115, i32 0, i64 0
  %112 = bitcast %struct.su3_matrix* %arrayidx116 to i32*
  store i32* %112, i32** %val, align 8
  br label %for.cond117

for.cond117:                                      ; preds = %for.inc, %if.end112
  %113 = load i32* %k, align 4
  %cmp118 = icmp slt i32 %113, 144
  br i1 %cmp118, label %for.body120, label %for.end

for.body120:                                      ; preds = %for.cond117
  %114 = load i32** %val, align 8
  %115 = load i32* %114, align 4
  %116 = load i32* %rank29, align 4
  %shl = shl i32 %115, %116
  %117 = load i32** %val, align 8
  %118 = load i32* %117, align 4
  %119 = load i32* %rank29, align 4
  %sub121 = sub nsw i32 32, %119
  %shr = lshr i32 %118, %sub121
  %or = or i32 %shl, %shr
  %sum29122 = getelementptr inbounds %struct.gauge_check* %test_gc, i32 0, i32 1
  %120 = load i32* %sum29122, align 4
  %xor = xor i32 %120, %or
  store i32 %xor, i32* %sum29122, align 4
  %121 = load i32** %val, align 8
  %122 = load i32* %121, align 4
  %123 = load i32* %rank31, align 4
  %shl123 = shl i32 %122, %123
  %124 = load i32** %val, align 8
  %125 = load i32* %124, align 4
  %126 = load i32* %rank31, align 4
  %sub124 = sub nsw i32 32, %126
  %shr125 = lshr i32 %125, %sub124
  %or126 = or i32 %shl123, %shr125
  %sum31127 = getelementptr inbounds %struct.gauge_check* %test_gc, i32 0, i32 0
  %127 = load i32* %sum31127, align 4
  %xor128 = xor i32 %127, %or126
  store i32 %xor128, i32* %sum31127, align 4
  %128 = load i32* %rank29, align 4
  %inc129 = add nsw i32 %128, 1
  store i32 %inc129, i32* %rank29, align 4
  %129 = load i32* %rank29, align 4
  %cmp130 = icmp sge i32 %129, 29
  br i1 %cmp130, label %if.then132, label %if.end133

if.then132:                                       ; preds = %for.body120
  store i32 0, i32* %rank29, align 4
  br label %if.end133

if.end133:                                        ; preds = %if.then132, %for.body120
  %130 = load i32* %rank31, align 4
  %inc134 = add nsw i32 %130, 1
  store i32 %inc134, i32* %rank31, align 4
  %131 = load i32* %rank31, align 4
  %cmp135 = icmp sge i32 %131, 31
  br i1 %cmp135, label %if.then137, label %if.end138

if.then137:                                       ; preds = %if.end133
  store i32 0, i32* %rank31, align 4
  br label %if.end138

if.end138:                                        ; preds = %if.then137, %if.end133
  br label %for.inc

for.inc:                                          ; preds = %if.end138
  %132 = load i32* %k, align 4
  %inc139 = add nsw i32 %132, 1
  store i32 %inc139, i32* %k, align 4
  %133 = load i32** %val, align 8
  %incdec.ptr = getelementptr inbounds i32* %133, i32 1
  store i32* %incdec.ptr, i32** %val, align 8
  br label %for.cond117

for.end:                                          ; preds = %for.cond117
  br label %if.end149

if.else140:                                       ; preds = %if.end101
  %134 = load i32* %rank29, align 4
  %conv141 = sext i32 %134 to i64
  %add142 = add i64 %conv141, 144
  %conv143 = trunc i64 %add142 to i32
  store i32 %conv143, i32* %rank29, align 4
  %135 = load i32* %rank31, align 4
  %conv144 = sext i32 %135 to i64
  %add145 = add i64 %conv144, 144
  %conv146 = trunc i64 %add145 to i32
  store i32 %conv146, i32* %rank31, align 4
  %136 = load i32* %rank29, align 4
  %rem147 = srem i32 %136, 29
  store i32 %rem147, i32* %rank29, align 4
  %137 = load i32* %rank31, align 4
  %rem148 = srem i32 %137, 31
  store i32 %rem148, i32* %rank31, align 4
  br label %if.end149

if.end149:                                        ; preds = %if.else140, %for.end
  br label %for.inc150

for.inc150:                                       ; preds = %if.end149
  %138 = load i32* %rcv_rank, align 4
  %inc151 = add nsw i32 %138, 1
  store i32 %inc151, i32* %rcv_rank, align 4
  br label %for.cond

for.end152:                                       ; preds = %for.cond
  %sum29153 = getelementptr inbounds %struct.gauge_check* %test_gc, i32 0, i32 1
  call void @g_xor32(i32* %sum29153)
  %sum31154 = getelementptr inbounds %struct.gauge_check* %test_gc, i32 0, i32 0
  call void @g_xor32(i32* %sum31154)
  %139 = load i32* @this_node, align 4
  %cmp155 = icmp eq i32 %139, 0
  br i1 %cmp155, label %if.then157, label %if.end176

if.then157:                                       ; preds = %for.end152
  %140 = load i8** %filename, align 8
  %call158 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([59 x i8]* @.str105, i32 0, i32 0), i8* %140)
  %141 = load %struct.gauge_header** %gh, align 8
  %magic_number159 = getelementptr inbounds %struct.gauge_header* %141, i32 0, i32 0
  %142 = load i32* %magic_number159, align 4
  %cmp160 = icmp eq i32 %142, 20103
  br i1 %cmp160, label %if.then162, label %if.end174

if.then162:                                       ; preds = %if.then157
  %143 = load %struct.gauge_header** %gh, align 8
  %time_stamp = getelementptr inbounds %struct.gauge_header* %143, i32 0, i32 1
  %arraydecay163 = getelementptr inbounds [64 x i8]* %time_stamp, i32 0, i32 0
  %call164 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([15 x i8]* @.str49220, i32 0, i32 0), i8* %arraydecay163)
  %144 = load %struct._IO_FILE** %fp, align 8
  %145 = load i64* %checksum_offset, align 8
  %call165 = call i32 @fseek(%struct._IO_FILE* %144, i64 %145, i32 0)
  %cmp166 = icmp slt i32 %call165, 0
  br i1 %cmp166, label %if.then168, label %if.end173

if.then168:                                       ; preds = %if.then162
  %arraydecay169 = getelementptr inbounds [9 x i8]* %myname, i32 0, i32 0
  %call170 = call i32* @__errno_location() #8
  %146 = load i32* %call170, align 4
  %147 = load i8** %filename, align 8
  %call171 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([43 x i8]* @.str103, i32 0, i32 0), i8* %arraydecay169, i32 %146, i8* %147)
  %148 = load %struct._IO_FILE** @stdout, align 8
  %call172 = call i32 @fflush(%struct._IO_FILE* %148)
  call void @terminate(i32 1)
  br label %if.end173

if.end173:                                        ; preds = %if.then168, %if.then162
  %149 = load %struct.gauge_file** %gf.addr, align 8
  call void @read_checksum(i32 0, %struct.gauge_file* %149, %struct.gauge_check* %test_gc)
  br label %if.end174

if.end174:                                        ; preds = %if.end173, %if.then157
  %150 = load %struct._IO_FILE** @stdout, align 8
  %call175 = call i32 @fflush(%struct._IO_FILE* %150)
  %151 = load %struct.su3_matrix** %lbuf, align 8
  %152 = bitcast %struct.su3_matrix* %151 to i8*
  call void @free(i8* %152) #2
  br label %if.end176

if.end176:                                        ; preds = %if.end174, %for.end152
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @r_serial_arch(%struct.gauge_file* %gf) #0 {
entry:
  %gf.addr = alloca %struct.gauge_file*, align 8
  %fp = alloca %struct._IO_FILE*, align 8
  %gh = alloca %struct.gauge_header*, align 8
  %filename = alloca i8*, align 8
  %byterevflag = alloca i32, align 4
  %gauge_check_size = alloca i64, align 8
  %rcv_rank = alloca i32, align 4
  %rcv_coords = alloca i32, align 4
  %destnode = alloca i32, align 4
  %i = alloca i32, align 4
  %k = alloca i32, align 4
  %x = alloca i32, align 4
  %y = alloca i32, align 4
  %z = alloca i32, align 4
  %t = alloca i32, align 4
  %test_gc = alloca %struct.gauge_check, align 4
  %val = alloca i32*, align 8
  %rank29 = alloca i32, align 4
  %rank31 = alloca i32, align 4
  %tmpsu3 = alloca [4 x %struct.su3_matrix], align 16
  %myname = alloca [14 x i8], align 1
  %mu = alloca i32, align 4
  %a = alloca i32, align 4
  %b = alloca i32, align 4
  %p = alloca i32, align 4
  %uin = alloca double*, align 8
  %q = alloca double*, align 8
  %big_end = alloca i32, align 4
  %U = alloca [4 x [18 x double]], align 16
  %chksum = alloca i32, align 4
  store %struct.gauge_file* %gf, %struct.gauge_file** %gf.addr, align 8
  %0 = bitcast [14 x i8]* %myname to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %0, i8* getelementptr inbounds ([14 x i8]* @r_serial_arch.myname, i32 0, i32 0), i64 14, i32 1, i1 false)
  %1 = load %struct.gauge_file** %gf.addr, align 8
  %fp1 = getelementptr inbounds %struct.gauge_file* %1, i32 0, i32 0
  %2 = load %struct._IO_FILE** %fp1, align 8
  store %struct._IO_FILE* %2, %struct._IO_FILE** %fp, align 8
  %3 = load %struct.gauge_file** %gf.addr, align 8
  %header = getelementptr inbounds %struct.gauge_file* %3, i32 0, i32 1
  %4 = load %struct.gauge_header** %header, align 8
  store %struct.gauge_header* %4, %struct.gauge_header** %gh, align 8
  %5 = load %struct.gauge_file** %gf.addr, align 8
  %filename2 = getelementptr inbounds %struct.gauge_file* %5, i32 0, i32 2
  %6 = load i8** %filename2, align 8
  store i8* %6, i8** %filename, align 8
  %7 = load %struct.gauge_file** %gf.addr, align 8
  %byterevflag3 = getelementptr inbounds %struct.gauge_file* %7, i32 0, i32 3
  %8 = load i32* %byterevflag3, align 4
  store i32 %8, i32* %byterevflag, align 4
  %9 = load i32* @this_node, align 4
  %cmp = icmp eq i32 %9, 0
  br i1 %cmp, label %if.then, label %if.end17

if.then:                                          ; preds = %entry
  store i64 0, i64* %gauge_check_size, align 8
  %10 = load %struct.gauge_file** %gf.addr, align 8
  %parallel = getelementptr inbounds %struct.gauge_file* %10, i32 0, i32 5
  %11 = load i32* %parallel, align 4
  %tobool = icmp ne i32 %11, 0
  br i1 %tobool, label %if.then4, label %if.end

if.then4:                                         ; preds = %if.then
  %arraydecay = getelementptr inbounds [14 x i8]* %myname, i32 0, i32 0
  %call = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([48 x i8]* @.str101, i32 0, i32 0), i8* %arraydecay)
  br label %if.end

if.end:                                           ; preds = %if.then4, %if.then
  %call5 = call i32 @big_endian()
  store i32 %call5, i32* %big_end, align 4
  %12 = load i32* @nx, align 4
  %13 = load i32* @ny, align 4
  %mul = mul nsw i32 %12, %13
  %14 = load i32* @nz, align 4
  %mul6 = mul nsw i32 %mul, %14
  %mul7 = mul nsw i32 %mul6, 48
  %conv = sext i32 %mul7 to i64
  %call8 = call noalias i8* @calloc(i64 %conv, i64 8) #2
  %15 = bitcast i8* %call8 to double*
  store double* %15, double** %uin, align 8
  %16 = load double** %uin, align 8
  %cmp9 = icmp eq double* %16, null
  br i1 %cmp9, label %if.then11, label %if.end16

if.then11:                                        ; preds = %if.end
  %arraydecay12 = getelementptr inbounds [14 x i8]* %myname, i32 0, i32 0
  %17 = load i32* @this_node, align 4
  %call13 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([55 x i8]* @.str106, i32 0, i32 0), i8* %arraydecay12, i32 %17)
  %call14 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([41 x i8]* @.str107, i32 0, i32 0))
  %18 = load %struct._IO_FILE** @stdout, align 8
  %call15 = call i32 @fflush(%struct._IO_FILE* %18)
  call void @terminate(i32 1)
  br label %if.end16

if.end16:                                         ; preds = %if.then11, %if.end
  br label %if.end17

if.end17:                                         ; preds = %if.end16, %entry
  store i32 0, i32* %chksum, align 4
  %sum29 = getelementptr inbounds %struct.gauge_check* %test_gc, i32 0, i32 1
  store i32 0, i32* %sum29, align 4
  %sum31 = getelementptr inbounds %struct.gauge_check* %test_gc, i32 0, i32 0
  store i32 0, i32* %sum31, align 4
  store i32 0, i32* %rank29, align 4
  store i32 0, i32* %rank31, align 4
  call void (...)* bitcast (void ()* @g_sync to void (...)*)()
  store i32 0, i32* %rcv_rank, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc162, %if.end17
  %19 = load i32* %rcv_rank, align 4
  %20 = load i32* @volume, align 4
  %cmp18 = icmp slt i32 %19, %20
  br i1 %cmp18, label %for.body, label %for.end164

for.body:                                         ; preds = %for.cond
  %21 = load i32* %rcv_rank, align 4
  store i32 %21, i32* %rcv_coords, align 4
  %22 = load i32* %rcv_coords, align 4
  %23 = load i32* @nx, align 4
  %rem = srem i32 %22, %23
  store i32 %rem, i32* %x, align 4
  %24 = load i32* @nx, align 4
  %25 = load i32* %rcv_coords, align 4
  %div = sdiv i32 %25, %24
  store i32 %div, i32* %rcv_coords, align 4
  %26 = load i32* %rcv_coords, align 4
  %27 = load i32* @ny, align 4
  %rem20 = srem i32 %26, %27
  store i32 %rem20, i32* %y, align 4
  %28 = load i32* @ny, align 4
  %29 = load i32* %rcv_coords, align 4
  %div21 = sdiv i32 %29, %28
  store i32 %div21, i32* %rcv_coords, align 4
  %30 = load i32* %rcv_coords, align 4
  %31 = load i32* @nz, align 4
  %rem22 = srem i32 %30, %31
  store i32 %rem22, i32* %z, align 4
  %32 = load i32* @nz, align 4
  %33 = load i32* %rcv_coords, align 4
  %div23 = sdiv i32 %33, %32
  store i32 %div23, i32* %rcv_coords, align 4
  %34 = load i32* %rcv_coords, align 4
  %35 = load i32* @nt, align 4
  %rem24 = srem i32 %34, %35
  store i32 %rem24, i32* %t, align 4
  %36 = load i32* %x, align 4
  %37 = load i32* %y, align 4
  %38 = load i32* %z, align 4
  %39 = load i32* %t, align 4
  %call25 = call i32 @node_number(i32 %36, i32 %37, i32 %38, i32 %39)
  store i32 %call25, i32* %destnode, align 4
  %40 = load i32* @this_node, align 4
  %cmp26 = icmp eq i32 %40, 0
  br i1 %cmp26, label %if.then28, label %if.else109

if.then28:                                        ; preds = %for.body
  %41 = load double** %uin, align 8
  %42 = bitcast double* %41 to i8*
  %43 = load %struct._IO_FILE** %fp, align 8
  %call29 = call i64 @fread(i8* %42, i64 384, i64 1, %struct._IO_FILE* %43)
  %conv30 = trunc i64 %call29 to i32
  %cmp31 = icmp ne i32 %conv30, 1
  br i1 %cmp31, label %if.then33, label %if.end38

if.then33:                                        ; preds = %if.then28
  %arraydecay34 = getelementptr inbounds [14 x i8]* %myname, i32 0, i32 0
  %44 = load i32* @this_node, align 4
  %call35 = call i32* @__errno_location() #8
  %45 = load i32* %call35, align 4
  %46 = load i8** %filename, align 8
  %call36 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([55 x i8]* @.str104, i32 0, i32 0), i8* %arraydecay34, i32 %44, i32 %45, i8* %46)
  %47 = load %struct._IO_FILE** @stdout, align 8
  %call37 = call i32 @fflush(%struct._IO_FILE* %47)
  call void @terminate(i32 1)
  br label %if.end38

if.end38:                                         ; preds = %if.then33, %if.then28
  %48 = load i32* %big_end, align 4
  %tobool39 = icmp ne i32 %48, 0
  br i1 %tobool39, label %if.end41, label %if.then40

if.then40:                                        ; preds = %if.end38
  %49 = load double** %uin, align 8
  %50 = bitcast double* %49 to i32*
  call void @byterevn(i32* %50, i32 48)
  br label %if.end41

if.end41:                                         ; preds = %if.then40, %if.end38
  %51 = load double** %uin, align 8
  store double* %51, double** %q, align 8
  store i32 0, i32* %mu, align 4
  br label %for.cond42

for.cond42:                                       ; preds = %for.inc97, %if.end41
  %52 = load i32* %mu, align 4
  %cmp43 = icmp slt i32 %52, 4
  br i1 %cmp43, label %for.body45, label %for.end99

for.body45:                                       ; preds = %for.cond42
  store i32 0, i32* %p, align 4
  br label %for.cond46

for.cond46:                                       ; preds = %for.inc, %for.body45
  %53 = load i32* %p, align 4
  %cmp47 = icmp slt i32 %53, 12
  br i1 %cmp47, label %for.body49, label %for.end

for.body49:                                       ; preds = %for.cond46
  %54 = load double** %q, align 8
  %55 = bitcast double* %54 to i32*
  %56 = load i32* %55, align 4
  %57 = load i32* %chksum, align 4
  %add = add i32 %57, %56
  store i32 %add, i32* %chksum, align 4
  %58 = load double** %q, align 8
  %incdec.ptr = getelementptr inbounds double* %58, i32 1
  store double* %incdec.ptr, double** %q, align 8
  %59 = load double* %58, align 8
  %60 = load i32* %p, align 4
  %idxprom = sext i32 %60 to i64
  %61 = load i32* %mu, align 4
  %idxprom50 = sext i32 %61 to i64
  %arrayidx = getelementptr inbounds [4 x [18 x double]]* %U, i32 0, i64 %idxprom50
  %arrayidx51 = getelementptr inbounds [18 x double]* %arrayidx, i32 0, i64 %idxprom
  store double %59, double* %arrayidx51, align 8
  br label %for.inc

for.inc:                                          ; preds = %for.body49
  %62 = load i32* %p, align 4
  %inc = add nsw i32 %62, 1
  store i32 %inc, i32* %p, align 4
  br label %for.cond46

for.end:                                          ; preds = %for.cond46
  %63 = load i32* %mu, align 4
  %idxprom52 = sext i32 %63 to i64
  %arrayidx53 = getelementptr inbounds [4 x [18 x double]]* %U, i32 0, i64 %idxprom52
  %arraydecay54 = getelementptr inbounds [18 x double]* %arrayidx53, i32 0, i32 0
  call void @complete_U(double* %arraydecay54)
  store i32 0, i32* %a, align 4
  br label %for.cond55

for.cond55:                                       ; preds = %for.inc94, %for.end
  %64 = load i32* %a, align 4
  %cmp56 = icmp slt i32 %64, 3
  br i1 %cmp56, label %for.body58, label %for.end96

for.body58:                                       ; preds = %for.cond55
  store i32 0, i32* %b, align 4
  br label %for.cond59

for.cond59:                                       ; preds = %for.inc91, %for.body58
  %65 = load i32* %b, align 4
  %cmp60 = icmp slt i32 %65, 3
  br i1 %cmp60, label %for.body62, label %for.end93

for.body62:                                       ; preds = %for.cond59
  %66 = load i32* %a, align 4
  %mul63 = mul nsw i32 3, %66
  %67 = load i32* %b, align 4
  %add64 = add nsw i32 %mul63, %67
  %mul65 = mul nsw i32 2, %add64
  %idxprom66 = sext i32 %mul65 to i64
  %68 = load i32* %mu, align 4
  %idxprom67 = sext i32 %68 to i64
  %arrayidx68 = getelementptr inbounds [4 x [18 x double]]* %U, i32 0, i64 %idxprom67
  %arrayidx69 = getelementptr inbounds [18 x double]* %arrayidx68, i32 0, i64 %idxprom66
  %69 = load double* %arrayidx69, align 8
  %70 = load i32* %b, align 4
  %idxprom70 = sext i32 %70 to i64
  %71 = load i32* %a, align 4
  %idxprom71 = sext i32 %71 to i64
  %72 = load i32* %mu, align 4
  %idxprom72 = sext i32 %72 to i64
  %arrayidx73 = getelementptr inbounds [4 x %struct.su3_matrix]* %tmpsu3, i32 0, i64 %idxprom72
  %e = getelementptr inbounds %struct.su3_matrix* %arrayidx73, i32 0, i32 0
  %arrayidx74 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e, i32 0, i64 %idxprom71
  %arrayidx75 = getelementptr inbounds [3 x %struct.complex]* %arrayidx74, i32 0, i64 %idxprom70
  %real = getelementptr inbounds %struct.complex* %arrayidx75, i32 0, i32 0
  store double %69, double* %real, align 8
  %73 = load i32* %a, align 4
  %mul76 = mul nsw i32 3, %73
  %74 = load i32* %b, align 4
  %add77 = add nsw i32 %mul76, %74
  %mul78 = mul nsw i32 2, %add77
  %add79 = add nsw i32 %mul78, 1
  %idxprom80 = sext i32 %add79 to i64
  %75 = load i32* %mu, align 4
  %idxprom81 = sext i32 %75 to i64
  %arrayidx82 = getelementptr inbounds [4 x [18 x double]]* %U, i32 0, i64 %idxprom81
  %arrayidx83 = getelementptr inbounds [18 x double]* %arrayidx82, i32 0, i64 %idxprom80
  %76 = load double* %arrayidx83, align 8
  %77 = load i32* %b, align 4
  %idxprom84 = sext i32 %77 to i64
  %78 = load i32* %a, align 4
  %idxprom85 = sext i32 %78 to i64
  %79 = load i32* %mu, align 4
  %idxprom86 = sext i32 %79 to i64
  %arrayidx87 = getelementptr inbounds [4 x %struct.su3_matrix]* %tmpsu3, i32 0, i64 %idxprom86
  %e88 = getelementptr inbounds %struct.su3_matrix* %arrayidx87, i32 0, i32 0
  %arrayidx89 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e88, i32 0, i64 %idxprom85
  %arrayidx90 = getelementptr inbounds [3 x %struct.complex]* %arrayidx89, i32 0, i64 %idxprom84
  %imag = getelementptr inbounds %struct.complex* %arrayidx90, i32 0, i32 1
  store double %76, double* %imag, align 8
  br label %for.inc91

for.inc91:                                        ; preds = %for.body62
  %80 = load i32* %b, align 4
  %inc92 = add nsw i32 %80, 1
  store i32 %inc92, i32* %b, align 4
  br label %for.cond59

for.end93:                                        ; preds = %for.cond59
  br label %for.inc94

for.inc94:                                        ; preds = %for.end93
  %81 = load i32* %a, align 4
  %inc95 = add nsw i32 %81, 1
  store i32 %inc95, i32* %a, align 4
  br label %for.cond55

for.end96:                                        ; preds = %for.cond55
  br label %for.inc97

for.inc97:                                        ; preds = %for.end96
  %82 = load i32* %mu, align 4
  %inc98 = add nsw i32 %82, 1
  store i32 %inc98, i32* %mu, align 4
  br label %for.cond42

for.end99:                                        ; preds = %for.cond42
  %83 = load i32* %destnode, align 4
  %cmp100 = icmp eq i32 %83, 0
  br i1 %cmp100, label %if.then102, label %if.else

if.then102:                                       ; preds = %for.end99
  %84 = load i32* %x, align 4
  %85 = load i32* %y, align 4
  %86 = load i32* %z, align 4
  %87 = load i32* %t, align 4
  %call103 = call i32 @node_index(i32 %84, i32 %85, i32 %86, i32 %87)
  store i32 %call103, i32* %i, align 4
  %88 = load i32* %i, align 4
  %idxprom104 = sext i32 %88 to i64
  %89 = load %struct.site** @lattice, align 8
  %arrayidx105 = getelementptr inbounds %struct.site* %89, i64 %idxprom104
  %link = getelementptr inbounds %struct.site* %arrayidx105, i32 0, i32 8
  %arrayidx106 = getelementptr inbounds [4 x %struct.su3_matrix]* %link, i32 0, i64 0
  %90 = bitcast %struct.su3_matrix* %arrayidx106 to i8*
  %91 = bitcast [4 x %struct.su3_matrix]* %tmpsu3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %90, i8* %91, i64 576, i32 1, i1 false)
  br label %if.end108

if.else:                                          ; preds = %for.end99
  %arraydecay107 = getelementptr inbounds [4 x %struct.su3_matrix]* %tmpsu3, i32 0, i32 0
  %92 = bitcast %struct.su3_matrix* %arraydecay107 to i8*
  %93 = load i32* %destnode, align 4
  call void @send_field(i8* %92, i32 576, i32 %93)
  br label %if.end108

if.end108:                                        ; preds = %if.else, %if.then102
  br label %if.end119

if.else109:                                       ; preds = %for.body
  %94 = load i32* @this_node, align 4
  %95 = load i32* %destnode, align 4
  %cmp110 = icmp eq i32 %94, %95
  br i1 %cmp110, label %if.then112, label %if.end118

if.then112:                                       ; preds = %if.else109
  %96 = load i32* %x, align 4
  %97 = load i32* %y, align 4
  %98 = load i32* %z, align 4
  %99 = load i32* %t, align 4
  %call113 = call i32 @node_index(i32 %96, i32 %97, i32 %98, i32 %99)
  store i32 %call113, i32* %i, align 4
  %100 = load i32* %i, align 4
  %idxprom114 = sext i32 %100 to i64
  %101 = load %struct.site** @lattice, align 8
  %arrayidx115 = getelementptr inbounds %struct.site* %101, i64 %idxprom114
  %link116 = getelementptr inbounds %struct.site* %arrayidx115, i32 0, i32 8
  %arrayidx117 = getelementptr inbounds [4 x %struct.su3_matrix]* %link116, i32 0, i64 0
  %102 = bitcast %struct.su3_matrix* %arrayidx117 to i8*
  call void @get_field(i8* %102, i32 576)
  br label %if.end118

if.end118:                                        ; preds = %if.then112, %if.else109
  br label %if.end119

if.end119:                                        ; preds = %if.end118, %if.end108
  %103 = load i32* @this_node, align 4
  %104 = load i32* %destnode, align 4
  %cmp120 = icmp eq i32 %103, %104
  br i1 %cmp120, label %if.then122, label %if.else152

if.then122:                                       ; preds = %if.end119
  store i32 0, i32* %k, align 4
  %105 = load i32* %i, align 4
  %idxprom123 = sext i32 %105 to i64
  %106 = load %struct.site** @lattice, align 8
  %arrayidx124 = getelementptr inbounds %struct.site* %106, i64 %idxprom123
  %link125 = getelementptr inbounds %struct.site* %arrayidx124, i32 0, i32 8
  %arrayidx126 = getelementptr inbounds [4 x %struct.su3_matrix]* %link125, i32 0, i64 0
  %107 = bitcast %struct.su3_matrix* %arrayidx126 to i32*
  store i32* %107, i32** %val, align 8
  br label %for.cond127

for.cond127:                                      ; preds = %for.inc148, %if.then122
  %108 = load i32* %k, align 4
  %cmp128 = icmp slt i32 %108, 144
  br i1 %cmp128, label %for.body130, label %for.end151

for.body130:                                      ; preds = %for.cond127
  %109 = load i32** %val, align 8
  %110 = load i32* %109, align 4
  %111 = load i32* %rank29, align 4
  %shl = shl i32 %110, %111
  %112 = load i32** %val, align 8
  %113 = load i32* %112, align 4
  %114 = load i32* %rank29, align 4
  %sub = sub nsw i32 32, %114
  %shr = lshr i32 %113, %sub
  %or = or i32 %shl, %shr
  %sum29131 = getelementptr inbounds %struct.gauge_check* %test_gc, i32 0, i32 1
  %115 = load i32* %sum29131, align 4
  %xor = xor i32 %115, %or
  store i32 %xor, i32* %sum29131, align 4
  %116 = load i32** %val, align 8
  %117 = load i32* %116, align 4
  %118 = load i32* %rank31, align 4
  %shl132 = shl i32 %117, %118
  %119 = load i32** %val, align 8
  %120 = load i32* %119, align 4
  %121 = load i32* %rank31, align 4
  %sub133 = sub nsw i32 32, %121
  %shr134 = lshr i32 %120, %sub133
  %or135 = or i32 %shl132, %shr134
  %sum31136 = getelementptr inbounds %struct.gauge_check* %test_gc, i32 0, i32 0
  %122 = load i32* %sum31136, align 4
  %xor137 = xor i32 %122, %or135
  store i32 %xor137, i32* %sum31136, align 4
  %123 = load i32* %rank29, align 4
  %inc138 = add nsw i32 %123, 1
  store i32 %inc138, i32* %rank29, align 4
  %124 = load i32* %rank29, align 4
  %cmp139 = icmp sge i32 %124, 29
  br i1 %cmp139, label %if.then141, label %if.end142

if.then141:                                       ; preds = %for.body130
  store i32 0, i32* %rank29, align 4
  br label %if.end142

if.end142:                                        ; preds = %if.then141, %for.body130
  %125 = load i32* %rank31, align 4
  %inc143 = add nsw i32 %125, 1
  store i32 %inc143, i32* %rank31, align 4
  %126 = load i32* %rank31, align 4
  %cmp144 = icmp sge i32 %126, 31
  br i1 %cmp144, label %if.then146, label %if.end147

if.then146:                                       ; preds = %if.end142
  store i32 0, i32* %rank31, align 4
  br label %if.end147

if.end147:                                        ; preds = %if.then146, %if.end142
  br label %for.inc148

for.inc148:                                       ; preds = %if.end147
  %127 = load i32* %k, align 4
  %inc149 = add nsw i32 %127, 1
  store i32 %inc149, i32* %k, align 4
  %128 = load i32** %val, align 8
  %incdec.ptr150 = getelementptr inbounds i32* %128, i32 1
  store i32* %incdec.ptr150, i32** %val, align 8
  br label %for.cond127

for.end151:                                       ; preds = %for.cond127
  br label %if.end161

if.else152:                                       ; preds = %if.end119
  %129 = load i32* %rank29, align 4
  %conv153 = sext i32 %129 to i64
  %add154 = add i64 %conv153, 144
  %conv155 = trunc i64 %add154 to i32
  store i32 %conv155, i32* %rank29, align 4
  %130 = load i32* %rank31, align 4
  %conv156 = sext i32 %130 to i64
  %add157 = add i64 %conv156, 144
  %conv158 = trunc i64 %add157 to i32
  store i32 %conv158, i32* %rank31, align 4
  %131 = load i32* %rank29, align 4
  %rem159 = srem i32 %131, 29
  store i32 %rem159, i32* %rank29, align 4
  %132 = load i32* %rank31, align 4
  %rem160 = srem i32 %132, 31
  store i32 %rem160, i32* %rank31, align 4
  br label %if.end161

if.end161:                                        ; preds = %if.else152, %for.end151
  br label %for.inc162

for.inc162:                                       ; preds = %if.end161
  %133 = load i32* %rcv_rank, align 4
  %inc163 = add nsw i32 %133, 1
  store i32 %inc163, i32* %rcv_rank, align 4
  br label %for.cond

for.end164:                                       ; preds = %for.cond
  %sum29165 = getelementptr inbounds %struct.gauge_check* %test_gc, i32 0, i32 1
  call void @g_xor32(i32* %sum29165)
  %sum31166 = getelementptr inbounds %struct.gauge_check* %test_gc, i32 0, i32 0
  call void @g_xor32(i32* %sum31166)
  %134 = load i32* @this_node, align 4
  %cmp167 = icmp eq i32 %134, 0
  br i1 %cmp167, label %if.then169, label %if.end188

if.then169:                                       ; preds = %for.end164
  %135 = load i8** %filename, align 8
  %call170 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([60 x i8]* @.str108, i32 0, i32 0), i8* %135)
  %136 = load i32* %chksum, align 4
  %137 = load %struct.gauge_file** %gf.addr, align 8
  %check = getelementptr inbounds %struct.gauge_file* %137, i32 0, i32 6
  %sum31171 = getelementptr inbounds %struct.gauge_check* %check, i32 0, i32 0
  %138 = load i32* %sum31171, align 4
  %cmp172 = icmp ne i32 %136, %138
  br i1 %cmp172, label %if.then174, label %if.else178

if.then174:                                       ; preds = %if.then169
  %139 = load i32* %chksum, align 4
  %140 = load %struct.gauge_file** %gf.addr, align 8
  %check175 = getelementptr inbounds %struct.gauge_file* %140, i32 0, i32 6
  %sum31176 = getelementptr inbounds %struct.gauge_check* %check175, i32 0, i32 0
  %141 = load i32* %sum31176, align 4
  %call177 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([56 x i8]* @.str109, i32 0, i32 0), i32 %139, i32 %141)
  br label %if.end180

if.else178:                                       ; preds = %if.then169
  %142 = load i32* %chksum, align 4
  %call179 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([32 x i8]* @.str110235, i32 0, i32 0), i32 %142)
  br label %if.end180

if.end180:                                        ; preds = %if.else178, %if.then174
  %143 = load %struct._IO_FILE** @stdout, align 8
  %call181 = call i32 @fflush(%struct._IO_FILE* %143)
  %144 = load double** %uin, align 8
  %145 = bitcast double* %144 to i8*
  call void @free(i8* %145) #2
  %sum29182 = getelementptr inbounds %struct.gauge_check* %test_gc, i32 0, i32 1
  %146 = load i32* %sum29182, align 4
  %147 = load %struct.gauge_file** %gf.addr, align 8
  %check183 = getelementptr inbounds %struct.gauge_file* %147, i32 0, i32 6
  %sum29184 = getelementptr inbounds %struct.gauge_check* %check183, i32 0, i32 1
  store i32 %146, i32* %sum29184, align 4
  %sum31185 = getelementptr inbounds %struct.gauge_check* %test_gc, i32 0, i32 0
  %148 = load i32* %sum31185, align 4
  %149 = load %struct.gauge_file** %gf.addr, align 8
  %check186 = getelementptr inbounds %struct.gauge_file* %149, i32 0, i32 6
  %sum31187 = getelementptr inbounds %struct.gauge_check* %check186, i32 0, i32 0
  store i32 %148, i32* %sum31187, align 4
  br label %if.end188

if.end188:                                        ; preds = %if.end180, %for.end164
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @r_serial_f(%struct.gauge_file* %gf) #0 {
entry:
  %gf.addr = alloca %struct.gauge_file*, align 8
  store %struct.gauge_file* %gf, %struct.gauge_file** %gf.addr, align 8
  call void (...)* bitcast (void ()* @g_sync to void (...)*)()
  %0 = load i32* @this_node, align 4
  %cmp = icmp eq i32 %0, 0
  br i1 %cmp, label %if.then, label %if.end3

if.then:                                          ; preds = %entry
  %1 = load %struct.gauge_file** %gf.addr, align 8
  %parallel = getelementptr inbounds %struct.gauge_file* %1, i32 0, i32 5
  %2 = load i32* %parallel, align 4
  %tobool = icmp ne i32 %2, 0
  br i1 %tobool, label %if.then1, label %if.end

if.then1:                                         ; preds = %if.then
  %call = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([55 x i8]* @.str111236, i32 0, i32 0))
  br label %if.end

if.end:                                           ; preds = %if.then1, %if.then
  %3 = load %struct.gauge_file** %gf.addr, align 8
  %fp = getelementptr inbounds %struct.gauge_file* %3, i32 0, i32 0
  %4 = load %struct._IO_FILE** %fp, align 8
  %call2 = call i32 @fclose(%struct._IO_FILE* %4)
  br label %if.end3

if.end3:                                          ; preds = %if.end, %entry
  %5 = load %struct.gauge_file** %gf.addr, align 8
  %rank2rcv = getelementptr inbounds %struct.gauge_file* %5, i32 0, i32 4
  %6 = load i32** %rank2rcv, align 8
  %cmp4 = icmp ne i32* %6, null
  br i1 %cmp4, label %if.then5, label %if.end7

if.then5:                                         ; preds = %if.end3
  %7 = load %struct.gauge_file** %gf.addr, align 8
  %rank2rcv6 = getelementptr inbounds %struct.gauge_file* %7, i32 0, i32 4
  %8 = load i32** %rank2rcv6, align 8
  %9 = bitcast i32* %8 to i8*
  call void @free(i8* %9) #2
  br label %if.end7

if.end7:                                          ; preds = %if.then5, %if.end3
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @write_site_list(%struct._IO_FILE* %fp, %struct.gauge_header* %gh) #0 {
entry:
  %fp.addr = alloca %struct._IO_FILE*, align 8
  %gh.addr = alloca %struct.gauge_header*, align 8
  %offset = alloca i64, align 8
  %i = alloca i32, align 4
  %buf_length = alloca i32, align 4
  %s = alloca %struct.site*, align 8
  %coords = alloca i32, align 4
  %cbuf = alloca i32*, align 8
  store %struct._IO_FILE* %fp, %struct._IO_FILE** %fp.addr, align 8
  store %struct.gauge_header* %gh, %struct.gauge_header** %gh.addr, align 8
  %0 = load %struct.gauge_header** %gh.addr, align 8
  %header_bytes = getelementptr inbounds %struct.gauge_header* %0, i32 0, i32 3
  %1 = load i32* %header_bytes, align 4
  %conv = sext i32 %1 to i64
  %2 = load i32* @sites_on_node, align 4
  %conv1 = sext i32 %2 to i64
  %mul = mul i64 4, %conv1
  %3 = load i32* @this_node, align 4
  %conv2 = sext i32 %3 to i64
  %mul3 = mul i64 %mul, %conv2
  %add = add i64 %conv, %mul3
  store i64 %add, i64* %offset, align 8
  %4 = load i32* @sites_on_node, align 4
  %conv4 = sext i32 %4 to i64
  %call = call noalias i8* @calloc(i64 %conv4, i64 4) #2
  %5 = bitcast i8* %call to i32*
  store i32* %5, i32** %cbuf, align 8
  %6 = load i32** %cbuf, align 8
  %cmp = icmp eq i32* %6, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %7 = load i32* @this_node, align 4
  %call6 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([44 x i8]* @.str112, i32 0, i32 0), i32 %7)
  %8 = load %struct._IO_FILE** @stdout, align 8
  %call7 = call i32 @fflush(%struct._IO_FILE* %8)
  call void @terminate(i32 1)
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %9 = load %struct._IO_FILE** %fp.addr, align 8
  %10 = load i64* %offset, align 8
  %call8 = call i32 @g_seek(%struct._IO_FILE* %9, i64 %10, i32 0)
  %cmp9 = icmp slt i32 %call8, 0
  br i1 %cmp9, label %if.then11, label %if.end15

if.then11:                                        ; preds = %if.end
  %11 = load i32* @this_node, align 4
  %12 = load i64* %offset, align 8
  %call12 = call i32* @__errno_location() #8
  %13 = load i32* %call12, align 4
  %call13 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([53 x i8]* @.str113, i32 0, i32 0), i32 %11, i64 %12, i32 %13)
  %14 = load %struct._IO_FILE** @stdout, align 8
  %call14 = call i32 @fflush(%struct._IO_FILE* %14)
  call void @terminate(i32 1)
  br label %if.end15

if.end15:                                         ; preds = %if.then11, %if.end
  store i32 0, i32* %buf_length, align 4
  store i32 0, i32* %i, align 4
  %15 = load %struct.site** @lattice, align 8
  store %struct.site* %15, %struct.site** %s, align 8
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.end15
  %16 = load i32* %i, align 4
  %17 = load i32* @sites_on_node, align 4
  %cmp16 = icmp slt i32 %16, %17
  br i1 %cmp16, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %18 = load i32* @nx, align 4
  %19 = load i32* @ny, align 4
  %20 = load i32* @nz, align 4
  %21 = load %struct.site** %s, align 8
  %t = getelementptr inbounds %struct.site* %21, i32 0, i32 3
  %22 = load i16* %t, align 2
  %conv18 = sext i16 %22 to i32
  %mul19 = mul nsw i32 %20, %conv18
  %23 = load %struct.site** %s, align 8
  %z = getelementptr inbounds %struct.site* %23, i32 0, i32 2
  %24 = load i16* %z, align 2
  %conv20 = sext i16 %24 to i32
  %add21 = add nsw i32 %mul19, %conv20
  %mul22 = mul nsw i32 %19, %add21
  %25 = load %struct.site** %s, align 8
  %y = getelementptr inbounds %struct.site* %25, i32 0, i32 1
  %26 = load i16* %y, align 2
  %conv23 = sext i16 %26 to i32
  %add24 = add nsw i32 %mul22, %conv23
  %mul25 = mul nsw i32 %18, %add24
  %27 = load %struct.site** %s, align 8
  %x = getelementptr inbounds %struct.site* %27, i32 0, i32 0
  %28 = load i16* %x, align 2
  %conv26 = sext i16 %28 to i32
  %add27 = add nsw i32 %mul25, %conv26
  store i32 %add27, i32* %coords, align 4
  %29 = load i32* %coords, align 4
  %30 = load i32* %buf_length, align 4
  %idxprom = sext i32 %30 to i64
  %31 = load i32** %cbuf, align 8
  %arrayidx = getelementptr inbounds i32* %31, i64 %idxprom
  store i32 %29, i32* %arrayidx, align 4
  %32 = load i32* %buf_length, align 4
  %inc = add nsw i32 %32, 1
  store i32 %inc, i32* %buf_length, align 4
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %33 = load i32* %i, align 4
  %inc28 = add nsw i32 %33, 1
  store i32 %inc28, i32* %i, align 4
  %34 = load %struct.site** %s, align 8
  %incdec.ptr = getelementptr inbounds %struct.site* %34, i32 1
  store %struct.site* %incdec.ptr, %struct.site** %s, align 8
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %35 = load i32** %cbuf, align 8
  %36 = bitcast i32* %35 to i8*
  %37 = load i32* @sites_on_node, align 4
  %conv29 = sext i32 %37 to i64
  %38 = load %struct._IO_FILE** %fp.addr, align 8
  %call30 = call i64 @g_write(i8* %36, i64 4, i64 %conv29, %struct._IO_FILE* %38)
  %conv31 = trunc i64 %call30 to i32
  %39 = load i32* @sites_on_node, align 4
  %cmp32 = icmp ne i32 %conv31, %39
  br i1 %cmp32, label %if.then34, label %if.end38

if.then34:                                        ; preds = %for.end
  %40 = load i32* @this_node, align 4
  %call35 = call i32* @__errno_location() #8
  %41 = load i32* %call35, align 4
  %call36 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([48 x i8]* @.str114237, i32 0, i32 0), i32 %40, i32 %41)
  %42 = load %struct._IO_FILE** @stdout, align 8
  %call37 = call i32 @fflush(%struct._IO_FILE* %42)
  call void @terminate(i32 1)
  br label %if.end38

if.end38:                                         ; preds = %if.then34, %for.end
  %43 = load i32** %cbuf, align 8
  %44 = bitcast i32* %43 to i8*
  call void @free(i8* %44) #2
  ret void
}

; Function Attrs: nounwind uwtable
define internal %struct.gauge_file* @parallel_open(i32 %order, i8* %filename) #0 {
entry:
  %order.addr = alloca i32, align 4
  %filename.addr = alloca i8*, align 8
  %fp = alloca %struct._IO_FILE*, align 8
  %gf = alloca %struct.gauge_file*, align 8
  %gh = alloca %struct.gauge_header*, align 8
  store i32 %order, i32* %order.addr, align 4
  store i8* %filename, i8** %filename.addr, align 8
  %call = call %struct.gauge_file* @setup_output_gauge_file()
  store %struct.gauge_file* %call, %struct.gauge_file** %gf, align 8
  %0 = load %struct.gauge_file** %gf, align 8
  %header = getelementptr inbounds %struct.gauge_file* %0, i32 0, i32 1
  %1 = load %struct.gauge_header** %header, align 8
  store %struct.gauge_header* %1, %struct.gauge_header** %gh, align 8
  %2 = load i32* %order.addr, align 4
  %3 = load %struct.gauge_header** %gh, align 8
  %order1 = getelementptr inbounds %struct.gauge_header* %3, i32 0, i32 4
  store i32 %2, i32* %order1, align 4
  %4 = load i8** %filename.addr, align 8
  %call2 = call %struct._IO_FILE* @g_open(i8* %4, i8* getelementptr inbounds ([3 x i8]* @.str38209, i32 0, i32 0))
  store %struct._IO_FILE* %call2, %struct._IO_FILE** %fp, align 8
  %5 = load %struct._IO_FILE** %fp, align 8
  %cmp = icmp eq %struct._IO_FILE* %5, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %6 = load i32* @this_node, align 4
  %7 = load i8** %filename.addr, align 8
  %call3 = call i32* @__errno_location() #8
  %8 = load i32* %call3, align 4
  %call4 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([53 x i8]* @.str115, i32 0, i32 0), i32 %6, i8* %7, i32 %8)
  %9 = load %struct._IO_FILE** @stdout, align 8
  %call5 = call i32 @fflush(%struct._IO_FILE* %9)
  call void @terminate(i32 1)
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %10 = load i32* @this_node, align 4
  %cmp6 = icmp eq i32 %10, 0
  br i1 %cmp6, label %if.then7, label %if.end8

if.then7:                                         ; preds = %if.end
  %11 = load %struct._IO_FILE** %fp, align 8
  %12 = load %struct.gauge_header** %gh, align 8
  call void @pwrite_gauge_hdr(%struct._IO_FILE* %11, %struct.gauge_header* %12)
  br label %if.end8

if.end8:                                          ; preds = %if.then7, %if.end
  %13 = load %struct.gauge_header** %gh, align 8
  %header_bytes = getelementptr inbounds %struct.gauge_header* %13, i32 0, i32 3
  %14 = bitcast i32* %header_bytes to i8*
  call void @broadcast_bytes(i8* %14, i32 4)
  %15 = load i32* %order.addr, align 4
  %cmp9 = icmp ne i32 %15, 0
  br i1 %cmp9, label %if.then10, label %if.end11

if.then10:                                        ; preds = %if.end8
  %16 = load %struct._IO_FILE** %fp, align 8
  %17 = load %struct.gauge_header** %gh, align 8
  call void @write_site_list(%struct._IO_FILE* %16, %struct.gauge_header* %17)
  br label %if.end11

if.end11:                                         ; preds = %if.then10, %if.end8
  %18 = load %struct._IO_FILE** %fp, align 8
  %19 = load %struct.gauge_file** %gf, align 8
  %fp12 = getelementptr inbounds %struct.gauge_file* %19, i32 0, i32 0
  store %struct._IO_FILE* %18, %struct._IO_FILE** %fp12, align 8
  %20 = load i8** %filename.addr, align 8
  %21 = load %struct.gauge_file** %gf, align 8
  %filename13 = getelementptr inbounds %struct.gauge_file* %21, i32 0, i32 2
  store i8* %20, i8** %filename13, align 8
  %22 = load %struct.gauge_file** %gf, align 8
  %byterevflag = getelementptr inbounds %struct.gauge_file* %22, i32 0, i32 3
  store i32 0, i32* %byterevflag, align 4
  %23 = load %struct.gauge_file** %gf, align 8
  %parallel = getelementptr inbounds %struct.gauge_file* %23, i32 0, i32 5
  store i32 1, i32* %parallel, align 4
  %24 = load %struct.gauge_file** %gf, align 8
  ret %struct.gauge_file* %24
}

; Function Attrs: nounwind uwtable
define internal %struct.gauge_file* @w_parallel_i(i8* %filename) #0 {
entry:
  %filename.addr = alloca i8*, align 8
  store i8* %filename, i8** %filename.addr, align 8
  %0 = load i8** %filename.addr, align 8
  %call = call %struct.gauge_file* @parallel_open(i32 0, i8* %0)
  ret %struct.gauge_file* %call
}

; Function Attrs: nounwind uwtable
define internal %struct.gauge_file* @w_checkpoint_i(i8* %filename) #0 {
entry:
  %filename.addr = alloca i8*, align 8
  store i8* %filename, i8** %filename.addr, align 8
  %0 = load i8** %filename.addr, align 8
  %call = call %struct.gauge_file* @parallel_open(i32 1, i8* %0)
  ret %struct.gauge_file* %call
}

; Function Attrs: nounwind uwtable
define internal %struct.su3_matrix* @w_parallel_setup(%struct.gauge_file* %gf, i64* %checksum_offset) #0 {
entry:
  %gf.addr = alloca %struct.gauge_file*, align 8
  %checksum_offset.addr = alloca i64*, align 8
  %fp = alloca %struct._IO_FILE*, align 8
  %gh = alloca %struct.gauge_header*, align 8
  %lbuf = alloca %struct.su3_matrix*, align 8
  %offset = alloca i64, align 8
  %gauge_node_size = alloca i64, align 8
  %coord_list_size = alloca i64, align 8
  %head_size = alloca i64, align 8
  %gauge_check_size = alloca i64, align 8
  %myname = alloca [17 x i8], align 16
  store %struct.gauge_file* %gf, %struct.gauge_file** %gf.addr, align 8
  store i64* %checksum_offset, i64** %checksum_offset.addr, align 8
  %0 = bitcast [17 x i8]* %myname to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %0, i8* getelementptr inbounds ([17 x i8]* @w_parallel_setup.myname, i32 0, i32 0), i64 17, i32 16, i1 false)
  %1 = load %struct.gauge_file** %gf.addr, align 8
  %parallel = getelementptr inbounds %struct.gauge_file* %1, i32 0, i32 5
  %2 = load i32* %parallel, align 4
  %tobool = icmp ne i32 %2, 0
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  %arraydecay = getelementptr inbounds [17 x i8]* %myname, i32 0, i32 0
  %call = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([47 x i8]* @.str116, i32 0, i32 0), i8* %arraydecay)
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %call1 = call noalias i8* @calloc(i64 16384, i64 144) #2
  %3 = bitcast i8* %call1 to %struct.su3_matrix*
  store %struct.su3_matrix* %3, %struct.su3_matrix** %lbuf, align 8
  %4 = load %struct.su3_matrix** %lbuf, align 8
  %cmp = icmp eq %struct.su3_matrix* %4, null
  br i1 %cmp, label %if.then2, label %if.end6

if.then2:                                         ; preds = %if.end
  %arraydecay3 = getelementptr inbounds [17 x i8]* %myname, i32 0, i32 0
  %5 = load i32* @this_node, align 4
  %call4 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([31 x i8]* @.str102234, i32 0, i32 0), i8* %arraydecay3, i32 %5)
  %6 = load %struct._IO_FILE** @stdout, align 8
  %call5 = call i32 @fflush(%struct._IO_FILE* %6)
  call void @terminate(i32 1)
  br label %if.end6

if.end6:                                          ; preds = %if.then2, %if.end
  %7 = load %struct.gauge_file** %gf.addr, align 8
  %fp7 = getelementptr inbounds %struct.gauge_file* %7, i32 0, i32 0
  %8 = load %struct._IO_FILE** %fp7, align 8
  store %struct._IO_FILE* %8, %struct._IO_FILE** %fp, align 8
  %9 = load %struct.gauge_file** %gf.addr, align 8
  %header = getelementptr inbounds %struct.gauge_file* %9, i32 0, i32 1
  %10 = load %struct.gauge_header** %header, align 8
  store %struct.gauge_header* %10, %struct.gauge_header** %gh, align 8
  %11 = load i32* @sites_on_node, align 4
  %mul = mul nsw i32 %11, 4
  %conv = sext i32 %mul to i64
  %mul8 = mul i64 %conv, 144
  store i64 %mul8, i64* %gauge_node_size, align 8
  %12 = load %struct.gauge_file** %gf.addr, align 8
  %header9 = getelementptr inbounds %struct.gauge_file* %12, i32 0, i32 1
  %13 = load %struct.gauge_header** %header9, align 8
  %order = getelementptr inbounds %struct.gauge_header* %13, i32 0, i32 4
  %14 = load i32* %order, align 4
  %cmp10 = icmp eq i32 %14, 0
  br i1 %cmp10, label %if.then12, label %if.else

if.then12:                                        ; preds = %if.end6
  store i64 0, i64* %coord_list_size, align 8
  br label %if.end15

if.else:                                          ; preds = %if.end6
  %15 = load i32* @volume, align 4
  %conv13 = sext i32 %15 to i64
  %mul14 = mul i64 4, %conv13
  store i64 %mul14, i64* %coord_list_size, align 8
  br label %if.end15

if.end15:                                         ; preds = %if.else, %if.then12
  %16 = load %struct.gauge_file** %gf.addr, align 8
  %header16 = getelementptr inbounds %struct.gauge_file* %16, i32 0, i32 1
  %17 = load %struct.gauge_header** %header16, align 8
  %header_bytes = getelementptr inbounds %struct.gauge_header* %17, i32 0, i32 3
  %18 = load i32* %header_bytes, align 4
  %conv17 = sext i32 %18 to i64
  %19 = load i64* %coord_list_size, align 8
  %add = add nsw i64 %conv17, %19
  store i64 %add, i64* %head_size, align 8
  %20 = load i64* %head_size, align 8
  %21 = load i64** %checksum_offset.addr, align 8
  store i64 %20, i64* %21, align 8
  store i64 8, i64* %gauge_check_size, align 8
  %22 = load i64* %head_size, align 8
  %23 = load i64* %gauge_check_size, align 8
  %add18 = add nsw i64 %22, %23
  store i64 %add18, i64* %offset, align 8
  %24 = load i64* %gauge_node_size, align 8
  %25 = load i32* @this_node, align 4
  %conv19 = sext i32 %25 to i64
  %mul20 = mul nsw i64 %24, %conv19
  %26 = load i64* %offset, align 8
  %add21 = add nsw i64 %26, %mul20
  store i64 %add21, i64* %offset, align 8
  %27 = load %struct._IO_FILE** %fp, align 8
  %28 = load i64* %offset, align 8
  %call22 = call i32 @g_seek(%struct._IO_FILE* %27, i64 %28, i32 0)
  %cmp23 = icmp slt i32 %call22, 0
  br i1 %cmp23, label %if.then25, label %if.end30

if.then25:                                        ; preds = %if.end15
  %arraydecay26 = getelementptr inbounds [17 x i8]* %myname, i32 0, i32 0
  %29 = load i32* @this_node, align 4
  %30 = load i64* %offset, align 8
  %call27 = call i32* @__errno_location() #8
  %31 = load i32* %call27, align 4
  %32 = load %struct.gauge_file** %gf.addr, align 8
  %filename = getelementptr inbounds %struct.gauge_file* %32, i32 0, i32 2
  %33 = load i8** %filename, align 8
  %call28 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([48 x i8]* @.str117, i32 0, i32 0), i8* %arraydecay26, i32 %29, i64 %30, i32 %31, i8* %33)
  %34 = load %struct._IO_FILE** @stdout, align 8
  %call29 = call i32 @fflush(%struct._IO_FILE* %34)
  call void @terminate(i32 1)
  br label %if.end30

if.end30:                                         ; preds = %if.then25, %if.end15
  %35 = load %struct.su3_matrix** %lbuf, align 8
  ret %struct.su3_matrix* %35
}

; Function Attrs: nounwind uwtable
define internal void @w_parallel(%struct.gauge_file* %gf) #0 {
entry:
  %gf.addr = alloca %struct.gauge_file*, align 8
  %fp = alloca %struct._IO_FILE*, align 8
  %lbuf = alloca %struct.su3_matrix*, align 8
  %buf_length = alloca i32, align 4
  %where_in_buf = alloca i32, align 4
  %val = alloca i32*, align 8
  %rank29 = alloca i32, align 4
  %rank31 = alloca i32, align 4
  %checksum_offset = alloca i64, align 8
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %k = alloca i32, align 4
  %x = alloca i32, align 4
  %y = alloca i32, align 4
  %z = alloca i32, align 4
  %t = alloca i32, align 4
  %msg = alloca %struct.anon.0, align 8
  %isite = alloca i32, align 4
  %ksite = alloca i32, align 4
  %site_block = alloca i32, align 4
  %rcv_coords = alloca i32, align 4
  %rcv_rank = alloca i32, align 4
  %destnode = alloca i32, align 4
  %sendnode = alloca i32, align 4
  %myname = alloca [11 x i8], align 1
  store %struct.gauge_file* %gf, %struct.gauge_file** %gf.addr, align 8
  %0 = bitcast [11 x i8]* %myname to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %0, i8* getelementptr inbounds ([11 x i8]* @w_parallel.myname, i32 0, i32 0), i64 11, i32 1, i1 false)
  %1 = load %struct.gauge_file** %gf.addr, align 8
  %fp1 = getelementptr inbounds %struct.gauge_file* %1, i32 0, i32 0
  %2 = load %struct._IO_FILE** %fp1, align 8
  store %struct._IO_FILE* %2, %struct._IO_FILE** %fp, align 8
  %3 = load %struct.gauge_file** %gf.addr, align 8
  %call = call %struct.su3_matrix* @w_parallel_setup(%struct.gauge_file* %3, i64* %checksum_offset)
  store %struct.su3_matrix* %call, %struct.su3_matrix** %lbuf, align 8
  %4 = load %struct.gauge_file** %gf.addr, align 8
  %check = getelementptr inbounds %struct.gauge_file* %4, i32 0, i32 6
  %sum31 = getelementptr inbounds %struct.gauge_check* %check, i32 0, i32 0
  store i32 0, i32* %sum31, align 4
  %5 = load %struct.gauge_file** %gf.addr, align 8
  %check2 = getelementptr inbounds %struct.gauge_file* %5, i32 0, i32 6
  %sum29 = getelementptr inbounds %struct.gauge_check* %check2, i32 0, i32 1
  store i32 0, i32* %sum29, align 4
  call void (...)* bitcast (void ()* @g_sync to void (...)*)()
  store i32 0, i32* %buf_length, align 4
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc23, %entry
  %6 = load i32* %i, align 4
  %cmp = icmp slt i32 %6, 4096
  br i1 %cmp, label %for.body, label %for.end25

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %j, align 4
  br label %for.cond3

for.cond3:                                        ; preds = %for.inc20, %for.body
  %7 = load i32* %j, align 4
  %cmp4 = icmp slt i32 %7, 3
  br i1 %cmp4, label %for.body5, label %for.end22

for.body5:                                        ; preds = %for.cond3
  store i32 0, i32* %k, align 4
  br label %for.cond6

for.cond6:                                        ; preds = %for.inc, %for.body5
  %8 = load i32* %k, align 4
  %cmp7 = icmp slt i32 %8, 3
  br i1 %cmp7, label %for.body8, label %for.end

for.body8:                                        ; preds = %for.cond6
  %9 = load i32* %k, align 4
  %idxprom = sext i32 %9 to i64
  %10 = load i32* %j, align 4
  %idxprom9 = sext i32 %10 to i64
  %11 = load i32* %i, align 4
  %idxprom10 = sext i32 %11 to i64
  %12 = load %struct.su3_matrix** %lbuf, align 8
  %arrayidx = getelementptr inbounds %struct.su3_matrix* %12, i64 %idxprom10
  %e = getelementptr inbounds %struct.su3_matrix* %arrayidx, i32 0, i32 0
  %arrayidx11 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e, i32 0, i64 %idxprom9
  %arrayidx12 = getelementptr inbounds [3 x %struct.complex]* %arrayidx11, i32 0, i64 %idxprom
  %imag = getelementptr inbounds %struct.complex* %arrayidx12, i32 0, i32 1
  store double 0.000000e+00, double* %imag, align 8
  %13 = load i32* %k, align 4
  %idxprom13 = sext i32 %13 to i64
  %14 = load i32* %j, align 4
  %idxprom14 = sext i32 %14 to i64
  %15 = load i32* %i, align 4
  %idxprom15 = sext i32 %15 to i64
  %16 = load %struct.su3_matrix** %lbuf, align 8
  %arrayidx16 = getelementptr inbounds %struct.su3_matrix* %16, i64 %idxprom15
  %e17 = getelementptr inbounds %struct.su3_matrix* %arrayidx16, i32 0, i32 0
  %arrayidx18 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e17, i32 0, i64 %idxprom14
  %arrayidx19 = getelementptr inbounds [3 x %struct.complex]* %arrayidx18, i32 0, i64 %idxprom13
  %real = getelementptr inbounds %struct.complex* %arrayidx19, i32 0, i32 0
  store double 0.000000e+00, double* %real, align 8
  br label %for.inc

for.inc:                                          ; preds = %for.body8
  %17 = load i32* %k, align 4
  %inc = add nsw i32 %17, 1
  store i32 %inc, i32* %k, align 4
  br label %for.cond6

for.end:                                          ; preds = %for.cond6
  br label %for.inc20

for.inc20:                                        ; preds = %for.end
  %18 = load i32* %j, align 4
  %inc21 = add nsw i32 %18, 1
  store i32 %inc21, i32* %j, align 4
  br label %for.cond3

for.end22:                                        ; preds = %for.cond3
  br label %for.inc23

for.inc23:                                        ; preds = %for.end22
  %19 = load i32* %i, align 4
  %inc24 = add nsw i32 %19, 1
  store i32 %inc24, i32* %i, align 4
  br label %for.cond

for.end25:                                        ; preds = %for.cond
  store i32 4096, i32* %site_block, align 4
  %20 = load i32* %site_block, align 4
  %rem = srem i32 4096, %20
  %cmp26 = icmp ne i32 %rem, 0
  br i1 %cmp26, label %if.then, label %if.end

if.then:                                          ; preds = %for.end25
  %arraydecay = getelementptr inbounds [11 x i8]* %myname, i32 0, i32 0
  %call27 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([48 x i8]* @.str118, i32 0, i32 0), i8* %arraydecay)
  %21 = load %struct._IO_FILE** @stdout, align 8
  %call28 = call i32 @fflush(%struct._IO_FILE* %21)
  call void @terminate(i32 1)
  br label %if.end

if.end:                                           ; preds = %if.then, %for.end25
  store i32 0, i32* %ksite, align 4
  br label %for.cond29

for.cond29:                                       ; preds = %for.inc201, %if.end
  %22 = load i32* %ksite, align 4
  %23 = load i32* @sites_on_node, align 4
  %cmp30 = icmp slt i32 %22, %23
  br i1 %cmp30, label %for.body31, label %for.end203

for.body31:                                       ; preds = %for.cond29
  store i32 0, i32* %destnode, align 4
  br label %for.cond32

for.cond32:                                       ; preds = %for.inc198, %for.body31
  %24 = load i32* %destnode, align 4
  %25 = load i32* @number_of_nodes, align 4
  %cmp33 = icmp slt i32 %24, %25
  br i1 %cmp33, label %for.body34, label %for.end200

for.body34:                                       ; preds = %for.cond32
  %26 = load i32* %ksite, align 4
  store i32 %26, i32* %isite, align 4
  br label %for.cond35

for.cond35:                                       ; preds = %for.inc195, %for.body34
  %27 = load i32* %isite, align 4
  %28 = load i32* @sites_on_node, align 4
  %cmp36 = icmp slt i32 %27, %28
  br i1 %cmp36, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %for.cond35
  %29 = load i32* %isite, align 4
  %30 = load i32* %ksite, align 4
  %31 = load i32* %site_block, align 4
  %add = add nsw i32 %30, %31
  %cmp37 = icmp slt i32 %29, %add
  br label %land.end

land.end:                                         ; preds = %land.rhs, %for.cond35
  %32 = phi i1 [ false, %for.cond35 ], [ %cmp37, %land.rhs ]
  br i1 %32, label %for.body38, label %for.end197

for.body38:                                       ; preds = %land.end
  %33 = load i32* %destnode, align 4
  %34 = load i32* @sites_on_node, align 4
  %mul = mul nsw i32 %33, %34
  %35 = load i32* %isite, align 4
  %add39 = add nsw i32 %mul, %35
  store i32 %add39, i32* %rcv_coords, align 4
  store i32 %add39, i32* %rcv_rank, align 4
  %36 = load i32* %rcv_coords, align 4
  %37 = load i32* @nx, align 4
  %rem40 = srem i32 %36, %37
  store i32 %rem40, i32* %x, align 4
  %38 = load i32* @nx, align 4
  %39 = load i32* %rcv_coords, align 4
  %div = sdiv i32 %39, %38
  store i32 %div, i32* %rcv_coords, align 4
  %40 = load i32* %rcv_coords, align 4
  %41 = load i32* @ny, align 4
  %rem41 = srem i32 %40, %41
  store i32 %rem41, i32* %y, align 4
  %42 = load i32* @ny, align 4
  %43 = load i32* %rcv_coords, align 4
  %div42 = sdiv i32 %43, %42
  store i32 %div42, i32* %rcv_coords, align 4
  %44 = load i32* %rcv_coords, align 4
  %45 = load i32* @nz, align 4
  %rem43 = srem i32 %44, %45
  store i32 %rem43, i32* %z, align 4
  %46 = load i32* @nz, align 4
  %47 = load i32* %rcv_coords, align 4
  %div44 = sdiv i32 %47, %46
  store i32 %div44, i32* %rcv_coords, align 4
  %48 = load i32* %rcv_coords, align 4
  %49 = load i32* @nt, align 4
  %rem45 = srem i32 %48, %49
  store i32 %rem45, i32* %t, align 4
  %50 = load i32* %x, align 4
  %51 = load i32* %y, align 4
  %52 = load i32* %z, align 4
  %53 = load i32* %t, align 4
  %call46 = call i32 @node_number(i32 %50, i32 %51, i32 %52, i32 %53)
  store i32 %call46, i32* %sendnode, align 4
  %54 = load i32* @this_node, align 4
  %55 = load i32* %sendnode, align 4
  %cmp47 = icmp eq i32 %54, %55
  br i1 %cmp47, label %land.lhs.true, label %if.else

land.lhs.true:                                    ; preds = %for.body38
  %56 = load i32* %destnode, align 4
  %57 = load i32* %sendnode, align 4
  %cmp48 = icmp ne i32 %56, %57
  br i1 %cmp48, label %if.then49, label %if.else

if.then49:                                        ; preds = %land.lhs.true
  %58 = load i32* %x, align 4
  %conv = trunc i32 %58 to i16
  %x50 = getelementptr inbounds %struct.anon.0* %msg, i32 0, i32 0
  store i16 %conv, i16* %x50, align 2
  %59 = load i32* %y, align 4
  %conv51 = trunc i32 %59 to i16
  %y52 = getelementptr inbounds %struct.anon.0* %msg, i32 0, i32 1
  store i16 %conv51, i16* %y52, align 2
  %60 = load i32* %z, align 4
  %conv53 = trunc i32 %60 to i16
  %z54 = getelementptr inbounds %struct.anon.0* %msg, i32 0, i32 2
  store i16 %conv53, i16* %z54, align 2
  %61 = load i32* %t, align 4
  %conv55 = trunc i32 %61 to i16
  %t56 = getelementptr inbounds %struct.anon.0* %msg, i32 0, i32 3
  store i16 %conv55, i16* %t56, align 2
  %62 = load i32* %x, align 4
  %63 = load i32* %y, align 4
  %64 = load i32* %z, align 4
  %65 = load i32* %t, align 4
  %call57 = call i32 @node_index(i32 %62, i32 %63, i32 %64, i32 %65)
  store i32 %call57, i32* %i, align 4
  %link = getelementptr inbounds %struct.anon.0* %msg, i32 0, i32 4
  %arraydecay58 = getelementptr inbounds [4 x %struct.su3_matrix]* %link, i32 0, i32 0
  %66 = bitcast %struct.su3_matrix* %arraydecay58 to i8*
  %67 = load i32* %i, align 4
  %idxprom59 = sext i32 %67 to i64
  %68 = load %struct.site** @lattice, align 8
  %arrayidx60 = getelementptr inbounds %struct.site* %68, i64 %idxprom59
  %link61 = getelementptr inbounds %struct.site* %arrayidx60, i32 0, i32 8
  %arraydecay62 = getelementptr inbounds [4 x %struct.su3_matrix]* %link61, i32 0, i32 0
  %69 = bitcast %struct.su3_matrix* %arraydecay62 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %66, i8* %69, i64 576, i32 1, i1 false)
  %70 = bitcast %struct.anon.0* %msg to i8*
  %71 = load i32* %destnode, align 4
  call void @send_field(i8* %70, i32 584, i32 %71)
  br label %if.end194

if.else:                                          ; preds = %land.lhs.true, %for.body38
  %72 = load i32* @this_node, align 4
  %73 = load i32* %destnode, align 4
  %cmp63 = icmp eq i32 %72, %73
  br i1 %cmp63, label %if.then65, label %if.end193

if.then65:                                        ; preds = %if.else
  %74 = load i32* %destnode, align 4
  %75 = load i32* %sendnode, align 4
  %cmp66 = icmp eq i32 %74, %75
  br i1 %cmp66, label %if.then68, label %if.else80

if.then68:                                        ; preds = %if.then65
  %76 = load i32* %x, align 4
  %77 = load i32* %y, align 4
  %78 = load i32* %z, align 4
  %79 = load i32* %t, align 4
  %call69 = call i32 @node_index(i32 %76, i32 %77, i32 %78, i32 %79)
  store i32 %call69, i32* %i, align 4
  %80 = load i32* %buf_length, align 4
  store i32 %80, i32* %where_in_buf, align 4
  %81 = load i32* %where_in_buf, align 4
  %mul70 = mul nsw i32 4, %81
  %idxprom71 = sext i32 %mul70 to i64
  %82 = load %struct.su3_matrix** %lbuf, align 8
  %arrayidx72 = getelementptr inbounds %struct.su3_matrix* %82, i64 %idxprom71
  %83 = bitcast %struct.su3_matrix* %arrayidx72 to i8*
  %84 = load i32* %i, align 4
  %idxprom73 = sext i32 %84 to i64
  %85 = load %struct.site** @lattice, align 8
  %arrayidx74 = getelementptr inbounds %struct.site* %85, i64 %idxprom73
  %link75 = getelementptr inbounds %struct.site* %arrayidx74, i32 0, i32 8
  %arraydecay76 = getelementptr inbounds [4 x %struct.su3_matrix]* %link75, i32 0, i32 0
  %86 = bitcast %struct.su3_matrix* %arraydecay76 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %83, i8* %86, i64 576, i32 1, i1 false)
  %87 = load i32* %rcv_rank, align 4
  %conv77 = sext i32 %87 to i64
  %mul78 = mul i64 144, %conv77
  %conv79 = trunc i64 %mul78 to i32
  store i32 %conv79, i32* %rank31, align 4
  store i32 %conv79, i32* %rank29, align 4
  br label %if.end105

if.else80:                                        ; preds = %if.then65
  %88 = bitcast %struct.anon.0* %msg to i8*
  call void @get_field(i8* %88, i32 584)
  %x81 = getelementptr inbounds %struct.anon.0* %msg, i32 0, i32 0
  %89 = load i16* %x81, align 2
  %conv82 = sext i16 %89 to i32
  %90 = load i32* @nx, align 4
  %y83 = getelementptr inbounds %struct.anon.0* %msg, i32 0, i32 1
  %91 = load i16* %y83, align 2
  %conv84 = sext i16 %91 to i32
  %92 = load i32* @ny, align 4
  %z85 = getelementptr inbounds %struct.anon.0* %msg, i32 0, i32 2
  %93 = load i16* %z85, align 2
  %conv86 = sext i16 %93 to i32
  %94 = load i32* @nz, align 4
  %t87 = getelementptr inbounds %struct.anon.0* %msg, i32 0, i32 3
  %95 = load i16* %t87, align 2
  %conv88 = sext i16 %95 to i32
  %mul89 = mul nsw i32 %94, %conv88
  %add90 = add nsw i32 %conv86, %mul89
  %mul91 = mul nsw i32 %92, %add90
  %add92 = add nsw i32 %conv84, %mul91
  %mul93 = mul nsw i32 %90, %add92
  %add94 = add nsw i32 %conv82, %mul93
  store i32 %add94, i32* %i, align 4
  %96 = load i32* %i, align 4
  %97 = load i32* @sites_on_node, align 4
  %rem95 = srem i32 %96, %97
  %rem96 = srem i32 %rem95, 4096
  store i32 %rem96, i32* %where_in_buf, align 4
  %98 = load i32* %where_in_buf, align 4
  %mul97 = mul nsw i32 4, %98
  %idxprom98 = sext i32 %mul97 to i64
  %99 = load %struct.su3_matrix** %lbuf, align 8
  %arrayidx99 = getelementptr inbounds %struct.su3_matrix* %99, i64 %idxprom98
  %100 = bitcast %struct.su3_matrix* %arrayidx99 to i8*
  %link100 = getelementptr inbounds %struct.anon.0* %msg, i32 0, i32 4
  %arraydecay101 = getelementptr inbounds [4 x %struct.su3_matrix]* %link100, i32 0, i32 0
  %101 = bitcast %struct.su3_matrix* %arraydecay101 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %100, i8* %101, i64 576, i32 1, i1 false)
  %102 = load i32* %i, align 4
  %conv102 = sext i32 %102 to i64
  %mul103 = mul i64 144, %conv102
  %conv104 = trunc i64 %mul103 to i32
  store i32 %conv104, i32* %rank31, align 4
  store i32 %conv104, i32* %rank29, align 4
  br label %if.end105

if.end105:                                        ; preds = %if.else80, %if.then68
  %103 = load i32* %rank29, align 4
  %rem106 = srem i32 %103, 29
  store i32 %rem106, i32* %rank29, align 4
  %104 = load i32* %rank31, align 4
  %rem107 = srem i32 %104, 31
  store i32 %rem107, i32* %rank31, align 4
  store i32 0, i32* %k, align 4
  %105 = load i32* %where_in_buf, align 4
  %mul108 = mul nsw i32 4, %105
  %idxprom109 = sext i32 %mul108 to i64
  %106 = load %struct.su3_matrix** %lbuf, align 8
  %arrayidx110 = getelementptr inbounds %struct.su3_matrix* %106, i64 %idxprom109
  %107 = bitcast %struct.su3_matrix* %arrayidx110 to i32*
  store i32* %107, i32** %val, align 8
  br label %for.cond111

for.cond111:                                      ; preds = %for.inc134, %if.end105
  %108 = load i32* %k, align 4
  %cmp112 = icmp slt i32 %108, 144
  br i1 %cmp112, label %for.body114, label %for.end136

for.body114:                                      ; preds = %for.cond111
  %109 = load i32** %val, align 8
  %110 = load i32* %109, align 4
  %111 = load i32* %rank29, align 4
  %shl = shl i32 %110, %111
  %112 = load i32** %val, align 8
  %113 = load i32* %112, align 4
  %114 = load i32* %rank29, align 4
  %sub = sub nsw i32 32, %114
  %shr = lshr i32 %113, %sub
  %or = or i32 %shl, %shr
  %115 = load %struct.gauge_file** %gf.addr, align 8
  %check115 = getelementptr inbounds %struct.gauge_file* %115, i32 0, i32 6
  %sum29116 = getelementptr inbounds %struct.gauge_check* %check115, i32 0, i32 1
  %116 = load i32* %sum29116, align 4
  %xor = xor i32 %116, %or
  store i32 %xor, i32* %sum29116, align 4
  %117 = load i32** %val, align 8
  %118 = load i32* %117, align 4
  %119 = load i32* %rank31, align 4
  %shl117 = shl i32 %118, %119
  %120 = load i32** %val, align 8
  %121 = load i32* %120, align 4
  %122 = load i32* %rank31, align 4
  %sub118 = sub nsw i32 32, %122
  %shr119 = lshr i32 %121, %sub118
  %or120 = or i32 %shl117, %shr119
  %123 = load %struct.gauge_file** %gf.addr, align 8
  %check121 = getelementptr inbounds %struct.gauge_file* %123, i32 0, i32 6
  %sum31122 = getelementptr inbounds %struct.gauge_check* %check121, i32 0, i32 0
  %124 = load i32* %sum31122, align 4
  %xor123 = xor i32 %124, %or120
  store i32 %xor123, i32* %sum31122, align 4
  %125 = load i32* %rank29, align 4
  %inc124 = add nsw i32 %125, 1
  store i32 %inc124, i32* %rank29, align 4
  %126 = load i32* %rank29, align 4
  %cmp125 = icmp sge i32 %126, 29
  br i1 %cmp125, label %if.then127, label %if.end128

if.then127:                                       ; preds = %for.body114
  store i32 0, i32* %rank29, align 4
  br label %if.end128

if.end128:                                        ; preds = %if.then127, %for.body114
  %127 = load i32* %rank31, align 4
  %inc129 = add nsw i32 %127, 1
  store i32 %inc129, i32* %rank31, align 4
  %128 = load i32* %rank31, align 4
  %cmp130 = icmp sge i32 %128, 31
  br i1 %cmp130, label %if.then132, label %if.end133

if.then132:                                       ; preds = %if.end128
  store i32 0, i32* %rank31, align 4
  br label %if.end133

if.end133:                                        ; preds = %if.then132, %if.end128
  br label %for.inc134

for.inc134:                                       ; preds = %if.end133
  %129 = load i32* %k, align 4
  %inc135 = add nsw i32 %129, 1
  store i32 %inc135, i32* %k, align 4
  %130 = load i32** %val, align 8
  %incdec.ptr = getelementptr inbounds i32* %130, i32 1
  store i32* %incdec.ptr, i32** %val, align 8
  br label %for.cond111

for.end136:                                       ; preds = %for.cond111
  %131 = load i32* %buf_length, align 4
  %inc137 = add nsw i32 %131, 1
  store i32 %inc137, i32* %buf_length, align 4
  %132 = load i32* %buf_length, align 4
  %cmp138 = icmp eq i32 %132, 4096
  br i1 %cmp138, label %if.then143, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %for.end136
  %133 = load i32* %isite, align 4
  %134 = load i32* @sites_on_node, align 4
  %sub140 = sub nsw i32 %134, 1
  %cmp141 = icmp eq i32 %133, %sub140
  br i1 %cmp141, label %if.then143, label %if.end192

if.then143:                                       ; preds = %lor.lhs.false, %for.end136
  %135 = load %struct.su3_matrix** %lbuf, align 8
  %136 = bitcast %struct.su3_matrix* %135 to i8*
  %137 = load i32* %buf_length, align 4
  %conv144 = sext i32 %137 to i64
  %138 = load %struct._IO_FILE** %fp, align 8
  %call145 = call i64 @g_write(i8* %136, i64 576, i64 %conv144, %struct._IO_FILE* %138)
  %conv146 = trunc i64 %call145 to i32
  %139 = load i32* %buf_length, align 4
  %cmp147 = icmp ne i32 %conv146, %139
  br i1 %cmp147, label %if.then149, label %if.end154

if.then149:                                       ; preds = %if.then143
  %arraydecay150 = getelementptr inbounds [11 x i8]* %myname, i32 0, i32 0
  %140 = load i32* @this_node, align 4
  %call151 = call i32* @__errno_location() #8
  %141 = load i32* %call151, align 4
  %142 = load %struct.gauge_file** %gf.addr, align 8
  %filename = getelementptr inbounds %struct.gauge_file* %142, i32 0, i32 2
  %143 = load i8** %filename, align 8
  %call152 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([56 x i8]* @.str119, i32 0, i32 0), i8* %arraydecay150, i32 %140, i32 %141, i8* %143)
  %144 = load %struct._IO_FILE** @stdout, align 8
  %call153 = call i32 @fflush(%struct._IO_FILE* %144)
  call void @terminate(i32 1)
  br label %if.end154

if.end154:                                        ; preds = %if.then149, %if.then143
  store i32 0, i32* %buf_length, align 4
  store i32 0, i32* %i, align 4
  br label %for.cond155

for.cond155:                                      ; preds = %for.inc189, %if.end154
  %145 = load i32* %i, align 4
  %cmp156 = icmp slt i32 %145, 4096
  br i1 %cmp156, label %for.body158, label %for.end191

for.body158:                                      ; preds = %for.cond155
  store i32 0, i32* %j, align 4
  br label %for.cond159

for.cond159:                                      ; preds = %for.inc186, %for.body158
  %146 = load i32* %j, align 4
  %cmp160 = icmp slt i32 %146, 3
  br i1 %cmp160, label %for.body162, label %for.end188

for.body162:                                      ; preds = %for.cond159
  store i32 0, i32* %k, align 4
  br label %for.cond163

for.cond163:                                      ; preds = %for.inc183, %for.body162
  %147 = load i32* %k, align 4
  %cmp164 = icmp slt i32 %147, 3
  br i1 %cmp164, label %for.body166, label %for.end185

for.body166:                                      ; preds = %for.cond163
  %148 = load i32* %k, align 4
  %idxprom167 = sext i32 %148 to i64
  %149 = load i32* %j, align 4
  %idxprom168 = sext i32 %149 to i64
  %150 = load i32* %i, align 4
  %idxprom169 = sext i32 %150 to i64
  %151 = load %struct.su3_matrix** %lbuf, align 8
  %arrayidx170 = getelementptr inbounds %struct.su3_matrix* %151, i64 %idxprom169
  %e171 = getelementptr inbounds %struct.su3_matrix* %arrayidx170, i32 0, i32 0
  %arrayidx172 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e171, i32 0, i64 %idxprom168
  %arrayidx173 = getelementptr inbounds [3 x %struct.complex]* %arrayidx172, i32 0, i64 %idxprom167
  %imag174 = getelementptr inbounds %struct.complex* %arrayidx173, i32 0, i32 1
  store double 0.000000e+00, double* %imag174, align 8
  %152 = load i32* %k, align 4
  %idxprom175 = sext i32 %152 to i64
  %153 = load i32* %j, align 4
  %idxprom176 = sext i32 %153 to i64
  %154 = load i32* %i, align 4
  %idxprom177 = sext i32 %154 to i64
  %155 = load %struct.su3_matrix** %lbuf, align 8
  %arrayidx178 = getelementptr inbounds %struct.su3_matrix* %155, i64 %idxprom177
  %e179 = getelementptr inbounds %struct.su3_matrix* %arrayidx178, i32 0, i32 0
  %arrayidx180 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e179, i32 0, i64 %idxprom176
  %arrayidx181 = getelementptr inbounds [3 x %struct.complex]* %arrayidx180, i32 0, i64 %idxprom175
  %real182 = getelementptr inbounds %struct.complex* %arrayidx181, i32 0, i32 0
  store double 0.000000e+00, double* %real182, align 8
  br label %for.inc183

for.inc183:                                       ; preds = %for.body166
  %156 = load i32* %k, align 4
  %inc184 = add nsw i32 %156, 1
  store i32 %inc184, i32* %k, align 4
  br label %for.cond163

for.end185:                                       ; preds = %for.cond163
  br label %for.inc186

for.inc186:                                       ; preds = %for.end185
  %157 = load i32* %j, align 4
  %inc187 = add nsw i32 %157, 1
  store i32 %inc187, i32* %j, align 4
  br label %for.cond159

for.end188:                                       ; preds = %for.cond159
  br label %for.inc189

for.inc189:                                       ; preds = %for.end188
  %158 = load i32* %i, align 4
  %inc190 = add nsw i32 %158, 1
  store i32 %inc190, i32* %i, align 4
  br label %for.cond155

for.end191:                                       ; preds = %for.cond155
  br label %if.end192

if.end192:                                        ; preds = %for.end191, %lor.lhs.false
  br label %if.end193

if.end193:                                        ; preds = %if.end192, %if.else
  br label %if.end194

if.end194:                                        ; preds = %if.end193, %if.then49
  br label %for.inc195

for.inc195:                                       ; preds = %if.end194
  %159 = load i32* %isite, align 4
  %inc196 = add nsw i32 %159, 1
  store i32 %inc196, i32* %isite, align 4
  br label %for.cond35

for.end197:                                       ; preds = %land.end
  br label %for.inc198

for.inc198:                                       ; preds = %for.end197
  %160 = load i32* %destnode, align 4
  %inc199 = add nsw i32 %160, 1
  store i32 %inc199, i32* %destnode, align 4
  br label %for.cond32

for.end200:                                       ; preds = %for.cond32
  call void (...)* bitcast (void ()* @g_sync to void (...)*)()
  br label %for.inc201

for.inc201:                                       ; preds = %for.end200
  %161 = load i32* %site_block, align 4
  %162 = load i32* %ksite, align 4
  %add202 = add nsw i32 %162, %161
  store i32 %add202, i32* %ksite, align 4
  br label %for.cond29

for.end203:                                       ; preds = %for.cond29
  %163 = load %struct.su3_matrix** %lbuf, align 8
  %164 = bitcast %struct.su3_matrix* %163 to i8*
  call void @free(i8* %164) #2
  %165 = load %struct.gauge_file** %gf.addr, align 8
  %check204 = getelementptr inbounds %struct.gauge_file* %165, i32 0, i32 6
  %sum29205 = getelementptr inbounds %struct.gauge_check* %check204, i32 0, i32 1
  call void @g_xor32(i32* %sum29205)
  %166 = load %struct.gauge_file** %gf.addr, align 8
  %check206 = getelementptr inbounds %struct.gauge_file* %166, i32 0, i32 6
  %sum31207 = getelementptr inbounds %struct.gauge_check* %check206, i32 0, i32 0
  call void @g_xor32(i32* %sum31207)
  %167 = load i32* @this_node, align 4
  %cmp208 = icmp eq i32 %167, 0
  br i1 %cmp208, label %if.then210, label %if.end225

if.then210:                                       ; preds = %for.end203
  %168 = load %struct._IO_FILE** %fp, align 8
  %169 = load i64* %checksum_offset, align 8
  %call211 = call i32 @g_seek(%struct._IO_FILE* %168, i64 %169, i32 0)
  %cmp212 = icmp slt i32 %call211, 0
  br i1 %cmp212, label %if.then214, label %if.end220

if.then214:                                       ; preds = %if.then210
  %arraydecay215 = getelementptr inbounds [11 x i8]* %myname, i32 0, i32 0
  %170 = load i32* @this_node, align 4
  %171 = load i64* %checksum_offset, align 8
  %call216 = call i32* @__errno_location() #8
  %172 = load i32* %call216, align 4
  %173 = load %struct.gauge_file** %gf.addr, align 8
  %filename217 = getelementptr inbounds %struct.gauge_file* %173, i32 0, i32 2
  %174 = load i8** %filename217, align 8
  %call218 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([61 x i8]* @.str120, i32 0, i32 0), i8* %arraydecay215, i32 %170, i64 %171, i32 %172, i8* %174)
  %175 = load %struct._IO_FILE** @stdout, align 8
  %call219 = call i32 @fflush(%struct._IO_FILE* %175)
  call void @terminate(i32 1)
  br label %if.end220

if.end220:                                        ; preds = %if.then214, %if.then210
  %176 = load %struct.gauge_file** %gf.addr, align 8
  call void @write_checksum(i32 1, %struct.gauge_file* %176)
  %177 = load %struct.gauge_file** %gf.addr, align 8
  %filename221 = getelementptr inbounds %struct.gauge_file* %177, i32 0, i32 2
  %178 = load i8** %filename221, align 8
  %call222 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([57 x i8]* @.str121, i32 0, i32 0), i8* %178)
  %179 = load %struct.gauge_file** %gf.addr, align 8
  %header = getelementptr inbounds %struct.gauge_file* %179, i32 0, i32 1
  %180 = load %struct.gauge_header** %header, align 8
  %time_stamp = getelementptr inbounds %struct.gauge_header* %180, i32 0, i32 1
  %arraydecay223 = getelementptr inbounds [64 x i8]* %time_stamp, i32 0, i32 0
  %call224 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([15 x i8]* @.str49220, i32 0, i32 0), i8* %arraydecay223)
  br label %if.end225

if.end225:                                        ; preds = %if.end220, %for.end203
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @w_checkpoint(%struct.gauge_file* %gf) #0 {
entry:
  %gf.addr = alloca %struct.gauge_file*, align 8
  %fp = alloca %struct._IO_FILE*, align 8
  %lbuf = alloca %struct.su3_matrix*, align 8
  %val = alloca i32*, align 8
  %k = alloca i32, align 4
  %rank29 = alloca i32, align 4
  %rank31 = alloca i32, align 4
  %checksum_offset = alloca i64, align 8
  %buf_length = alloca i32, align 4
  %s = alloca %struct.site*, align 8
  %i = alloca i32, align 4
  %myname = alloca [13 x i8], align 1
  store %struct.gauge_file* %gf, %struct.gauge_file** %gf.addr, align 8
  %0 = bitcast [13 x i8]* %myname to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %0, i8* getelementptr inbounds ([13 x i8]* @w_checkpoint.myname, i32 0, i32 0), i64 13, i32 1, i1 false)
  %1 = load %struct.gauge_file** %gf.addr, align 8
  %fp1 = getelementptr inbounds %struct.gauge_file* %1, i32 0, i32 0
  %2 = load %struct._IO_FILE** %fp1, align 8
  store %struct._IO_FILE* %2, %struct._IO_FILE** %fp, align 8
  %3 = load %struct.gauge_file** %gf.addr, align 8
  %call = call %struct.su3_matrix* @w_parallel_setup(%struct.gauge_file* %3, i64* %checksum_offset)
  store %struct.su3_matrix* %call, %struct.su3_matrix** %lbuf, align 8
  %4 = load %struct.gauge_file** %gf.addr, align 8
  %check = getelementptr inbounds %struct.gauge_file* %4, i32 0, i32 6
  %sum31 = getelementptr inbounds %struct.gauge_check* %check, i32 0, i32 0
  store i32 0, i32* %sum31, align 4
  %5 = load %struct.gauge_file** %gf.addr, align 8
  %check2 = getelementptr inbounds %struct.gauge_file* %5, i32 0, i32 6
  %sum29 = getelementptr inbounds %struct.gauge_check* %check2, i32 0, i32 1
  store i32 0, i32* %sum29, align 4
  %6 = load i32* @sites_on_node, align 4
  %conv = sext i32 %6 to i64
  %mul = mul i64 144, %conv
  %7 = load i32* @this_node, align 4
  %conv3 = sext i32 %7 to i64
  %mul4 = mul i64 %mul, %conv3
  %rem = urem i64 %mul4, 29
  %conv5 = trunc i64 %rem to i32
  store i32 %conv5, i32* %rank29, align 4
  %8 = load i32* @sites_on_node, align 4
  %conv6 = sext i32 %8 to i64
  %mul7 = mul i64 144, %conv6
  %9 = load i32* @this_node, align 4
  %conv8 = sext i32 %9 to i64
  %mul9 = mul i64 %mul7, %conv8
  %rem10 = urem i64 %mul9, 31
  %conv11 = trunc i64 %rem10 to i32
  store i32 %conv11, i32* %rank31, align 4
  store i32 0, i32* %buf_length, align 4
  store i32 0, i32* %i, align 4
  %10 = load %struct.site** @lattice, align 8
  store %struct.site* %10, %struct.site** %s, align 8
  br label %for.cond

for.cond:                                         ; preds = %for.inc60, %entry
  %11 = load i32* %i, align 4
  %12 = load i32* @sites_on_node, align 4
  %cmp = icmp slt i32 %11, %12
  br i1 %cmp, label %for.body, label %for.end63

for.body:                                         ; preds = %for.cond
  %13 = load i32* %buf_length, align 4
  %mul13 = mul nsw i32 4, %13
  %idxprom = sext i32 %mul13 to i64
  %14 = load %struct.su3_matrix** %lbuf, align 8
  %arrayidx = getelementptr inbounds %struct.su3_matrix* %14, i64 %idxprom
  %15 = bitcast %struct.su3_matrix* %arrayidx to i8*
  %16 = load i32* %i, align 4
  %idxprom14 = sext i32 %16 to i64
  %17 = load %struct.site** @lattice, align 8
  %arrayidx15 = getelementptr inbounds %struct.site* %17, i64 %idxprom14
  %link = getelementptr inbounds %struct.site* %arrayidx15, i32 0, i32 8
  %arraydecay = getelementptr inbounds [4 x %struct.su3_matrix]* %link, i32 0, i32 0
  %18 = bitcast %struct.su3_matrix* %arraydecay to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %15, i8* %18, i64 576, i32 1, i1 false)
  store i32 0, i32* %k, align 4
  %19 = load i32* %buf_length, align 4
  %mul16 = mul nsw i32 4, %19
  %idxprom17 = sext i32 %mul16 to i64
  %20 = load %struct.su3_matrix** %lbuf, align 8
  %arrayidx18 = getelementptr inbounds %struct.su3_matrix* %20, i64 %idxprom17
  %21 = bitcast %struct.su3_matrix* %arrayidx18 to i32*
  store i32* %21, i32** %val, align 8
  br label %for.cond19

for.cond19:                                       ; preds = %for.inc, %for.body
  %22 = load i32* %k, align 4
  %cmp20 = icmp slt i32 %22, 144
  br i1 %cmp20, label %for.body22, label %for.end

for.body22:                                       ; preds = %for.cond19
  %23 = load i32** %val, align 8
  %24 = load i32* %23, align 4
  %25 = load i32* %rank29, align 4
  %shl = shl i32 %24, %25
  %26 = load i32** %val, align 8
  %27 = load i32* %26, align 4
  %28 = load i32* %rank29, align 4
  %sub = sub nsw i32 32, %28
  %shr = lshr i32 %27, %sub
  %or = or i32 %shl, %shr
  %29 = load %struct.gauge_file** %gf.addr, align 8
  %check23 = getelementptr inbounds %struct.gauge_file* %29, i32 0, i32 6
  %sum2924 = getelementptr inbounds %struct.gauge_check* %check23, i32 0, i32 1
  %30 = load i32* %sum2924, align 4
  %xor = xor i32 %30, %or
  store i32 %xor, i32* %sum2924, align 4
  %31 = load i32** %val, align 8
  %32 = load i32* %31, align 4
  %33 = load i32* %rank31, align 4
  %shl25 = shl i32 %32, %33
  %34 = load i32** %val, align 8
  %35 = load i32* %34, align 4
  %36 = load i32* %rank31, align 4
  %sub26 = sub nsw i32 32, %36
  %shr27 = lshr i32 %35, %sub26
  %or28 = or i32 %shl25, %shr27
  %37 = load %struct.gauge_file** %gf.addr, align 8
  %check29 = getelementptr inbounds %struct.gauge_file* %37, i32 0, i32 6
  %sum3130 = getelementptr inbounds %struct.gauge_check* %check29, i32 0, i32 0
  %38 = load i32* %sum3130, align 4
  %xor31 = xor i32 %38, %or28
  store i32 %xor31, i32* %sum3130, align 4
  %39 = load i32* %rank29, align 4
  %inc = add nsw i32 %39, 1
  store i32 %inc, i32* %rank29, align 4
  %40 = load i32* %rank29, align 4
  %cmp32 = icmp sge i32 %40, 29
  br i1 %cmp32, label %if.then, label %if.end

if.then:                                          ; preds = %for.body22
  store i32 0, i32* %rank29, align 4
  br label %if.end

if.end:                                           ; preds = %if.then, %for.body22
  %41 = load i32* %rank31, align 4
  %inc34 = add nsw i32 %41, 1
  store i32 %inc34, i32* %rank31, align 4
  %42 = load i32* %rank31, align 4
  %cmp35 = icmp sge i32 %42, 31
  br i1 %cmp35, label %if.then37, label %if.end38

if.then37:                                        ; preds = %if.end
  store i32 0, i32* %rank31, align 4
  br label %if.end38

if.end38:                                         ; preds = %if.then37, %if.end
  br label %for.inc

for.inc:                                          ; preds = %if.end38
  %43 = load i32* %k, align 4
  %inc39 = add nsw i32 %43, 1
  store i32 %inc39, i32* %k, align 4
  %44 = load i32** %val, align 8
  %incdec.ptr = getelementptr inbounds i32* %44, i32 1
  store i32* %incdec.ptr, i32** %val, align 8
  br label %for.cond19

for.end:                                          ; preds = %for.cond19
  %45 = load i32* %buf_length, align 4
  %inc40 = add nsw i32 %45, 1
  store i32 %inc40, i32* %buf_length, align 4
  %46 = load i32* %buf_length, align 4
  %cmp41 = icmp eq i32 %46, 4096
  br i1 %cmp41, label %if.then46, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %for.end
  %47 = load i32* %i, align 4
  %48 = load i32* @sites_on_node, align 4
  %sub43 = sub nsw i32 %48, 1
  %cmp44 = icmp eq i32 %47, %sub43
  br i1 %cmp44, label %if.then46, label %if.end59

if.then46:                                        ; preds = %lor.lhs.false, %for.end
  %49 = load %struct._IO_FILE** @stdout, align 8
  %call47 = call i32 @fflush(%struct._IO_FILE* %49)
  %50 = load %struct.su3_matrix** %lbuf, align 8
  %51 = bitcast %struct.su3_matrix* %50 to i8*
  %52 = load i32* %buf_length, align 4
  %conv48 = sext i32 %52 to i64
  %53 = load %struct._IO_FILE** %fp, align 8
  %call49 = call i64 @g_write(i8* %51, i64 576, i64 %conv48, %struct._IO_FILE* %53)
  %conv50 = trunc i64 %call49 to i32
  %54 = load i32* %buf_length, align 4
  %cmp51 = icmp ne i32 %conv50, %54
  br i1 %cmp51, label %if.then53, label %if.end58

if.then53:                                        ; preds = %if.then46
  %arraydecay54 = getelementptr inbounds [13 x i8]* %myname, i32 0, i32 0
  %55 = load i32* @this_node, align 4
  %call55 = call i32* @__errno_location() #8
  %56 = load i32* %call55, align 4
  %57 = load %struct.gauge_file** %gf.addr, align 8
  %filename = getelementptr inbounds %struct.gauge_file* %57, i32 0, i32 2
  %58 = load i8** %filename, align 8
  %call56 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([56 x i8]* @.str119, i32 0, i32 0), i8* %arraydecay54, i32 %55, i32 %56, i8* %58)
  %59 = load %struct._IO_FILE** @stdout, align 8
  %call57 = call i32 @fflush(%struct._IO_FILE* %59)
  call void @terminate(i32 1)
  br label %if.end58

if.end58:                                         ; preds = %if.then53, %if.then46
  store i32 0, i32* %buf_length, align 4
  br label %if.end59

if.end59:                                         ; preds = %if.end58, %lor.lhs.false
  br label %for.inc60

for.inc60:                                        ; preds = %if.end59
  %60 = load i32* %i, align 4
  %inc61 = add nsw i32 %60, 1
  store i32 %inc61, i32* %i, align 4
  %61 = load %struct.site** %s, align 8
  %incdec.ptr62 = getelementptr inbounds %struct.site* %61, i32 1
  store %struct.site* %incdec.ptr62, %struct.site** %s, align 8
  br label %for.cond

for.end63:                                        ; preds = %for.cond
  %62 = load %struct.su3_matrix** %lbuf, align 8
  %63 = bitcast %struct.su3_matrix* %62 to i8*
  call void @free(i8* %63) #2
  %64 = load %struct.gauge_file** %gf.addr, align 8
  %check64 = getelementptr inbounds %struct.gauge_file* %64, i32 0, i32 6
  %sum2965 = getelementptr inbounds %struct.gauge_check* %check64, i32 0, i32 1
  call void @g_xor32(i32* %sum2965)
  %65 = load %struct.gauge_file** %gf.addr, align 8
  %check66 = getelementptr inbounds %struct.gauge_file* %65, i32 0, i32 6
  %sum3167 = getelementptr inbounds %struct.gauge_check* %check66, i32 0, i32 0
  call void @g_xor32(i32* %sum3167)
  %66 = load i32* @this_node, align 4
  %cmp68 = icmp eq i32 %66, 0
  br i1 %cmp68, label %if.then70, label %if.end85

if.then70:                                        ; preds = %for.end63
  %67 = load %struct._IO_FILE** %fp, align 8
  %68 = load i64* %checksum_offset, align 8
  %call71 = call i32 @g_seek(%struct._IO_FILE* %67, i64 %68, i32 0)
  %cmp72 = icmp slt i32 %call71, 0
  br i1 %cmp72, label %if.then74, label %if.end80

if.then74:                                        ; preds = %if.then70
  %arraydecay75 = getelementptr inbounds [13 x i8]* %myname, i32 0, i32 0
  %69 = load i32* @this_node, align 4
  %70 = load i64* %checksum_offset, align 8
  %call76 = call i32* @__errno_location() #8
  %71 = load i32* %call76, align 4
  %72 = load %struct.gauge_file** %gf.addr, align 8
  %filename77 = getelementptr inbounds %struct.gauge_file* %72, i32 0, i32 2
  %73 = load i8** %filename77, align 8
  %call78 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([61 x i8]* @.str120, i32 0, i32 0), i8* %arraydecay75, i32 %69, i64 %70, i32 %71, i8* %73)
  %74 = load %struct._IO_FILE** @stdout, align 8
  %call79 = call i32 @fflush(%struct._IO_FILE* %74)
  call void @terminate(i32 1)
  br label %if.end80

if.end80:                                         ; preds = %if.then74, %if.then70
  %75 = load %struct.gauge_file** %gf.addr, align 8
  call void @write_checksum(i32 1, %struct.gauge_file* %75)
  %76 = load %struct.gauge_file** %gf.addr, align 8
  %filename81 = getelementptr inbounds %struct.gauge_file* %76, i32 0, i32 2
  %77 = load i8** %filename81, align 8
  %call82 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([46 x i8]* @.str122, i32 0, i32 0), i8* %77)
  %78 = load %struct.gauge_file** %gf.addr, align 8
  %header = getelementptr inbounds %struct.gauge_file* %78, i32 0, i32 1
  %79 = load %struct.gauge_header** %header, align 8
  %time_stamp = getelementptr inbounds %struct.gauge_header* %79, i32 0, i32 1
  %arraydecay83 = getelementptr inbounds [64 x i8]* %time_stamp, i32 0, i32 0
  %call84 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([15 x i8]* @.str49220, i32 0, i32 0), i8* %arraydecay83)
  br label %if.end85

if.end85:                                         ; preds = %if.end80, %for.end63
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @w_parallel_f(%struct.gauge_file* %gf) #0 {
entry:
  %gf.addr = alloca %struct.gauge_file*, align 8
  store %struct.gauge_file* %gf, %struct.gauge_file** %gf.addr, align 8
  call void (...)* bitcast (void ()* @g_sync to void (...)*)()
  %0 = load %struct.gauge_file** %gf.addr, align 8
  %fp = getelementptr inbounds %struct.gauge_file* %0, i32 0, i32 0
  %1 = load %struct._IO_FILE** %fp, align 8
  %cmp = icmp ne %struct._IO_FILE* %1, null
  br i1 %cmp, label %if.then, label %if.end5

if.then:                                          ; preds = %entry
  %2 = load %struct.gauge_file** %gf.addr, align 8
  %parallel = getelementptr inbounds %struct.gauge_file* %2, i32 0, i32 5
  %3 = load i32* %parallel, align 4
  %tobool = icmp ne i32 %3, 0
  br i1 %tobool, label %if.end, label %if.then1

if.then1:                                         ; preds = %if.then
  %call = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([57 x i8]* @.str123, i32 0, i32 0))
  br label %if.end

if.end:                                           ; preds = %if.then1, %if.then
  %4 = load %struct.gauge_file** %gf.addr, align 8
  %fp2 = getelementptr inbounds %struct.gauge_file* %4, i32 0, i32 0
  %5 = load %struct._IO_FILE** %fp2, align 8
  %call3 = call i32 @g_close(%struct._IO_FILE* %5)
  %6 = load %struct.gauge_file** %gf.addr, align 8
  %fp4 = getelementptr inbounds %struct.gauge_file* %6, i32 0, i32 0
  store %struct._IO_FILE* null, %struct._IO_FILE** %fp4, align 8
  br label %if.end5

if.end5:                                          ; preds = %if.end, %entry
  %7 = load i32* @this_node, align 4
  %cmp6 = icmp eq i32 %7, 0
  br i1 %cmp6, label %if.then7, label %if.end8

if.then7:                                         ; preds = %if.end5
  %8 = load %struct.gauge_file** %gf.addr, align 8
  call void @write_gauge_info_file(%struct.gauge_file* %8)
  br label %if.end8

if.end8:                                          ; preds = %if.then7, %if.end5
  ret void
}

; Function Attrs: nounwind uwtable
define internal %struct.gauge_file* @r_parallel_i(i8* %filename) #0 {
entry:
  %filename.addr = alloca i8*, align 8
  %gh = alloca %struct.gauge_header*, align 8
  %gf = alloca %struct.gauge_file*, align 8
  %fp = alloca %struct._IO_FILE*, align 8
  %byterevflag = alloca i32, align 4
  store i8* %filename, i8** %filename.addr, align 8
  %0 = load i8** %filename.addr, align 8
  %call = call %struct.gauge_file* @setup_input_gauge_file(i8* %0)
  store %struct.gauge_file* %call, %struct.gauge_file** %gf, align 8
  %1 = load %struct.gauge_file** %gf, align 8
  %header = getelementptr inbounds %struct.gauge_file* %1, i32 0, i32 1
  %2 = load %struct.gauge_header** %header, align 8
  store %struct.gauge_header* %2, %struct.gauge_header** %gh, align 8
  %3 = load %struct.gauge_file** %gf, align 8
  %parallel = getelementptr inbounds %struct.gauge_file* %3, i32 0, i32 5
  store i32 1, i32* %parallel, align 4
  %4 = load i8** %filename.addr, align 8
  %call1 = call %struct._IO_FILE* @g_open(i8* %4, i8* getelementptr inbounds ([3 x i8]* @.str99, i32 0, i32 0))
  store %struct._IO_FILE* %call1, %struct._IO_FILE** %fp, align 8
  %5 = load %struct._IO_FILE** %fp, align 8
  %cmp = icmp eq %struct._IO_FILE* %5, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %6 = load i32* @this_node, align 4
  %7 = load i8** %filename.addr, align 8
  %call2 = call i32* @__errno_location() #8
  %8 = load i32* %call2, align 4
  %call3 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([52 x i8]* @.str124, i32 0, i32 0), i32 %6, i8* %7, i32 %8)
  %9 = load %struct._IO_FILE** @stdout, align 8
  %call4 = call i32 @fflush(%struct._IO_FILE* %9)
  call void @terminate(i32 1)
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %10 = load %struct._IO_FILE** %fp, align 8
  %11 = load %struct.gauge_file** %gf, align 8
  %fp5 = getelementptr inbounds %struct.gauge_file* %11, i32 0, i32 0
  store %struct._IO_FILE* %10, %struct._IO_FILE** %fp5, align 8
  %12 = load i32* @this_node, align 4
  %cmp6 = icmp eq i32 %12, 0
  br i1 %cmp6, label %if.then7, label %if.end9

if.then7:                                         ; preds = %if.end
  %13 = load %struct.gauge_file** %gf, align 8
  %call8 = call i32 @read_gauge_hdr(%struct.gauge_file* %13, i32 1)
  store i32 %call8, i32* %byterevflag, align 4
  br label %if.end9

if.end9:                                          ; preds = %if.then7, %if.end
  %14 = bitcast i32* %byterevflag to i8*
  call void @broadcast_bytes(i8* %14, i32 4)
  %15 = load i32* %byterevflag, align 4
  %16 = load %struct.gauge_file** %gf, align 8
  %byterevflag10 = getelementptr inbounds %struct.gauge_file* %16, i32 0, i32 3
  store i32 %15, i32* %byterevflag10, align 4
  %17 = load %struct.gauge_header** %gh, align 8
  %18 = bitcast %struct.gauge_header* %17 to i8*
  call void @broadcast_bytes(i8* %18, i32 92)
  %19 = load %struct.gauge_file** %gf, align 8
  call void @read_site_list(i32 1, %struct.gauge_file* %19)
  %20 = load %struct.gauge_file** %gf, align 8
  ret %struct.gauge_file* %20
}

; Function Attrs: nounwind uwtable
define internal void @r_parallel(%struct.gauge_file* %gf) #0 {
entry:
  %gf.addr = alloca %struct.gauge_file*, align 8
  %fp = alloca %struct._IO_FILE*, align 8
  %gh = alloca %struct.gauge_header*, align 8
  %filename = alloca i8*, align 8
  %byterevflag = alloca i32, align 4
  %lbuf = alloca %struct.su3_matrix*, align 8
  %msg = alloca %struct.anon.1, align 8
  %buf_length = alloca i32, align 4
  %where_in_buf = alloca i32, align 4
  %test_gc = alloca %struct.gauge_check, align 4
  %val = alloca i32*, align 8
  %rank29 = alloca i32, align 4
  %rank31 = alloca i32, align 4
  %destnode = alloca i32, align 4
  %sendnode = alloca i32, align 4
  %isite = alloca i32, align 4
  %ksite = alloca i32, align 4
  %site_block = alloca i32, align 4
  %x = alloca i32, align 4
  %y = alloca i32, align 4
  %z = alloca i32, align 4
  %t = alloca i32, align 4
  %rcv_rank = alloca i32, align 4
  %rcv_coords = alloca i32, align 4
  %i = alloca i32, align 4
  %k = alloca i32, align 4
  %offset = alloca i64, align 8
  %gauge_node_size = alloca i64, align 8
  %gauge_check_size = alloca i64, align 8
  %coord_list_size = alloca i64, align 8
  %head_size = alloca i64, align 8
  %checksum_offset = alloca i64, align 8
  %myname = alloca [11 x i8], align 1
  store %struct.gauge_file* %gf, %struct.gauge_file** %gf.addr, align 8
  %0 = bitcast [11 x i8]* %myname to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %0, i8* getelementptr inbounds ([11 x i8]* @r_parallel.myname, i32 0, i32 0), i64 11, i32 1, i1 false)
  %1 = load %struct.gauge_file** %gf.addr, align 8
  %fp1 = getelementptr inbounds %struct.gauge_file* %1, i32 0, i32 0
  %2 = load %struct._IO_FILE** %fp1, align 8
  store %struct._IO_FILE* %2, %struct._IO_FILE** %fp, align 8
  %3 = load %struct.gauge_file** %gf.addr, align 8
  %header = getelementptr inbounds %struct.gauge_file* %3, i32 0, i32 1
  %4 = load %struct.gauge_header** %header, align 8
  store %struct.gauge_header* %4, %struct.gauge_header** %gh, align 8
  %5 = load %struct.gauge_file** %gf.addr, align 8
  %filename2 = getelementptr inbounds %struct.gauge_file* %5, i32 0, i32 2
  %6 = load i8** %filename2, align 8
  store i8* %6, i8** %filename, align 8
  %7 = load %struct.gauge_file** %gf.addr, align 8
  %byterevflag3 = getelementptr inbounds %struct.gauge_file* %7, i32 0, i32 3
  %8 = load i32* %byterevflag3, align 4
  store i32 %8, i32* %byterevflag, align 4
  %9 = load %struct.gauge_file** %gf.addr, align 8
  %parallel = getelementptr inbounds %struct.gauge_file* %9, i32 0, i32 5
  %10 = load i32* %parallel, align 4
  %tobool = icmp ne i32 %10, 0
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  %arraydecay = getelementptr inbounds [11 x i8]* %myname, i32 0, i32 0
  %call = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([48 x i8]* @.str125, i32 0, i32 0), i8* %arraydecay)
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %call4 = call noalias i8* @calloc(i64 16384, i64 144) #2
  %11 = bitcast i8* %call4 to %struct.su3_matrix*
  store %struct.su3_matrix* %11, %struct.su3_matrix** %lbuf, align 8
  %12 = load %struct.su3_matrix** %lbuf, align 8
  %cmp = icmp eq %struct.su3_matrix* %12, null
  br i1 %cmp, label %if.then5, label %if.end9

if.then5:                                         ; preds = %if.end
  %arraydecay6 = getelementptr inbounds [11 x i8]* %myname, i32 0, i32 0
  %13 = load i32* @this_node, align 4
  %call7 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([31 x i8]* @.str102234, i32 0, i32 0), i8* %arraydecay6, i32 %13)
  %14 = load %struct._IO_FILE** @stdout, align 8
  %call8 = call i32 @fflush(%struct._IO_FILE* %14)
  call void @terminate(i32 1)
  br label %if.end9

if.end9:                                          ; preds = %if.then5, %if.end
  %15 = load i32* @sites_on_node, align 4
  %mul = mul nsw i32 %15, 4
  %conv = sext i32 %mul to i64
  %mul10 = mul i64 %conv, 144
  store i64 %mul10, i64* %gauge_node_size, align 8
  %16 = load %struct.gauge_header** %gh, align 8
  %magic_number = getelementptr inbounds %struct.gauge_header* %16, i32 0, i32 0
  %17 = load i32* %magic_number, align 4
  %cmp11 = icmp eq i32 %17, 20103
  br i1 %cmp11, label %if.then13, label %if.else

if.then13:                                        ; preds = %if.end9
  store i64 8, i64* %gauge_check_size, align 8
  br label %if.end20

if.else:                                          ; preds = %if.end9
  %18 = load %struct.gauge_header** %gh, align 8
  %magic_number14 = getelementptr inbounds %struct.gauge_header* %18, i32 0, i32 0
  %19 = load i32* %magic_number14, align 4
  %cmp15 = icmp eq i32 %19, 53546
  br i1 %cmp15, label %if.then17, label %if.else18

if.then17:                                        ; preds = %if.else
  store i64 4, i64* %gauge_check_size, align 8
  br label %if.end19

if.else18:                                        ; preds = %if.else
  store i64 0, i64* %gauge_check_size, align 8
  br label %if.end19

if.end19:                                         ; preds = %if.else18, %if.then17
  br label %if.end20

if.end20:                                         ; preds = %if.end19, %if.then13
  %20 = load %struct.gauge_file** %gf.addr, align 8
  %header21 = getelementptr inbounds %struct.gauge_file* %20, i32 0, i32 1
  %21 = load %struct.gauge_header** %header21, align 8
  %order = getelementptr inbounds %struct.gauge_header* %21, i32 0, i32 4
  %22 = load i32* %order, align 4
  %cmp22 = icmp eq i32 %22, 0
  br i1 %cmp22, label %if.then24, label %if.else25

if.then24:                                        ; preds = %if.end20
  store i64 0, i64* %coord_list_size, align 8
  br label %if.end28

if.else25:                                        ; preds = %if.end20
  %23 = load i32* @volume, align 4
  %conv26 = sext i32 %23 to i64
  %mul27 = mul i64 4, %conv26
  store i64 %mul27, i64* %coord_list_size, align 8
  br label %if.end28

if.end28:                                         ; preds = %if.else25, %if.then24
  %24 = load %struct.gauge_file** %gf.addr, align 8
  %header29 = getelementptr inbounds %struct.gauge_file* %24, i32 0, i32 1
  %25 = load %struct.gauge_header** %header29, align 8
  %header_bytes = getelementptr inbounds %struct.gauge_header* %25, i32 0, i32 3
  %26 = load i32* %header_bytes, align 4
  %conv30 = sext i32 %26 to i64
  %27 = load i64* %coord_list_size, align 8
  %add = add nsw i64 %conv30, %27
  store i64 %add, i64* %checksum_offset, align 8
  %28 = load i64* %checksum_offset, align 8
  %29 = load i64* %gauge_check_size, align 8
  %add31 = add nsw i64 %28, %29
  store i64 %add31, i64* %head_size, align 8
  %30 = load i64* %head_size, align 8
  store i64 %30, i64* %offset, align 8
  %31 = load i64* %gauge_node_size, align 8
  %32 = load i32* @this_node, align 4
  %conv32 = sext i32 %32 to i64
  %mul33 = mul nsw i64 %31, %conv32
  %33 = load i64* %offset, align 8
  %add34 = add nsw i64 %33, %mul33
  store i64 %add34, i64* %offset, align 8
  %34 = load %struct._IO_FILE** %fp, align 8
  %35 = load i64* %offset, align 8
  %call35 = call i32 @g_seek(%struct._IO_FILE* %34, i64 %35, i32 0)
  %cmp36 = icmp slt i32 %call35, 0
  br i1 %cmp36, label %if.then38, label %if.end43

if.then38:                                        ; preds = %if.end28
  %arraydecay39 = getelementptr inbounds [11 x i8]* %myname, i32 0, i32 0
  %36 = load i32* @this_node, align 4
  %37 = load i64* %offset, align 8
  %call40 = call i32* @__errno_location() #8
  %38 = load i32* %call40, align 4
  %39 = load i8** %filename, align 8
  %call41 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([48 x i8]* @.str117, i32 0, i32 0), i8* %arraydecay39, i32 %36, i64 %37, i32 %38, i8* %39)
  %40 = load %struct._IO_FILE** @stdout, align 8
  %call42 = call i32 @fflush(%struct._IO_FILE* %40)
  call void @terminate(i32 1)
  br label %if.end43

if.end43:                                         ; preds = %if.then38, %if.end28
  %sum29 = getelementptr inbounds %struct.gauge_check* %test_gc, i32 0, i32 1
  store i32 0, i32* %sum29, align 4
  %sum31 = getelementptr inbounds %struct.gauge_check* %test_gc, i32 0, i32 0
  store i32 0, i32* %sum31, align 4
  %41 = load i32* @sites_on_node, align 4
  %conv44 = sext i32 %41 to i64
  %mul45 = mul i64 144, %conv44
  %42 = load i32* @this_node, align 4
  %conv46 = sext i32 %42 to i64
  %mul47 = mul i64 %mul45, %conv46
  %rem = urem i64 %mul47, 29
  %conv48 = trunc i64 %rem to i32
  store i32 %conv48, i32* %rank29, align 4
  %43 = load i32* @sites_on_node, align 4
  %conv49 = sext i32 %43 to i64
  %mul50 = mul i64 144, %conv49
  %44 = load i32* @this_node, align 4
  %conv51 = sext i32 %44 to i64
  %mul52 = mul i64 %mul50, %conv51
  %rem53 = urem i64 %mul52, 31
  %conv54 = trunc i64 %rem53 to i32
  store i32 %conv54, i32* %rank31, align 4
  call void (...)* bitcast (void ()* @g_sync to void (...)*)()
  store i32 0, i32* %buf_length, align 4
  store i32 0, i32* %where_in_buf, align 4
  store i32 4, i32* %site_block, align 4
  store i32 0, i32* %ksite, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc216, %if.end43
  %45 = load i32* %ksite, align 4
  %46 = load i32* @sites_on_node, align 4
  %cmp55 = icmp slt i32 %45, %46
  br i1 %cmp55, label %for.body, label %for.end218

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %sendnode, align 4
  br label %for.cond57

for.cond57:                                       ; preds = %for.inc213, %for.body
  %47 = load i32* %sendnode, align 4
  %48 = load i32* @number_of_nodes, align 4
  %cmp58 = icmp slt i32 %47, %48
  br i1 %cmp58, label %for.body60, label %for.end215

for.body60:                                       ; preds = %for.cond57
  %49 = load i32* %ksite, align 4
  store i32 %49, i32* %isite, align 4
  br label %for.cond61

for.cond61:                                       ; preds = %for.inc210, %for.body60
  %50 = load i32* %isite, align 4
  %51 = load i32* @sites_on_node, align 4
  %cmp62 = icmp slt i32 %50, %51
  br i1 %cmp62, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %for.cond61
  %52 = load i32* %isite, align 4
  %53 = load i32* %ksite, align 4
  %54 = load i32* %site_block, align 4
  %add64 = add nsw i32 %53, %54
  %cmp65 = icmp slt i32 %52, %add64
  br label %land.end

land.end:                                         ; preds = %land.rhs, %for.cond61
  %55 = phi i1 [ false, %for.cond61 ], [ %cmp65, %land.rhs ]
  br i1 %55, label %for.body67, label %for.end212

for.body67:                                       ; preds = %land.end
  %56 = load i32* %sendnode, align 4
  %57 = load i32* @sites_on_node, align 4
  %mul68 = mul nsw i32 %56, %57
  %58 = load i32* %isite, align 4
  %add69 = add nsw i32 %mul68, %58
  store i32 %add69, i32* %rcv_rank, align 4
  %59 = load %struct.gauge_file** %gf.addr, align 8
  %header70 = getelementptr inbounds %struct.gauge_file* %59, i32 0, i32 1
  %60 = load %struct.gauge_header** %header70, align 8
  %order71 = getelementptr inbounds %struct.gauge_header* %60, i32 0, i32 4
  %61 = load i32* %order71, align 4
  %cmp72 = icmp eq i32 %61, 0
  br i1 %cmp72, label %if.then74, label %if.else75

if.then74:                                        ; preds = %for.body67
  %62 = load i32* %rcv_rank, align 4
  store i32 %62, i32* %rcv_coords, align 4
  br label %if.end76

if.else75:                                        ; preds = %for.body67
  %63 = load i32* %rcv_rank, align 4
  %idxprom = sext i32 %63 to i64
  %64 = load %struct.gauge_file** %gf.addr, align 8
  %rank2rcv = getelementptr inbounds %struct.gauge_file* %64, i32 0, i32 4
  %65 = load i32** %rank2rcv, align 8
  %arrayidx = getelementptr inbounds i32* %65, i64 %idxprom
  %66 = load i32* %arrayidx, align 4
  store i32 %66, i32* %rcv_coords, align 4
  br label %if.end76

if.end76:                                         ; preds = %if.else75, %if.then74
  %67 = load i32* %rcv_coords, align 4
  %68 = load i32* @nx, align 4
  %rem77 = srem i32 %67, %68
  store i32 %rem77, i32* %x, align 4
  %69 = load i32* @nx, align 4
  %70 = load i32* %rcv_coords, align 4
  %div = sdiv i32 %70, %69
  store i32 %div, i32* %rcv_coords, align 4
  %71 = load i32* %rcv_coords, align 4
  %72 = load i32* @ny, align 4
  %rem78 = srem i32 %71, %72
  store i32 %rem78, i32* %y, align 4
  %73 = load i32* @ny, align 4
  %74 = load i32* %rcv_coords, align 4
  %div79 = sdiv i32 %74, %73
  store i32 %div79, i32* %rcv_coords, align 4
  %75 = load i32* %rcv_coords, align 4
  %76 = load i32* @nz, align 4
  %rem80 = srem i32 %75, %76
  store i32 %rem80, i32* %z, align 4
  %77 = load i32* @nz, align 4
  %78 = load i32* %rcv_coords, align 4
  %div81 = sdiv i32 %78, %77
  store i32 %div81, i32* %rcv_coords, align 4
  %79 = load i32* %rcv_coords, align 4
  %80 = load i32* @nt, align 4
  %rem82 = srem i32 %79, %80
  store i32 %rem82, i32* %t, align 4
  %81 = load i32* %x, align 4
  %82 = load i32* %y, align 4
  %83 = load i32* %z, align 4
  %84 = load i32* %t, align 4
  %call83 = call i32 @node_number(i32 %81, i32 %82, i32 %83, i32 %84)
  store i32 %call83, i32* %destnode, align 4
  %85 = load i32* @this_node, align 4
  %86 = load i32* %sendnode, align 4
  %cmp84 = icmp eq i32 %85, %86
  br i1 %cmp84, label %if.then86, label %if.else166

if.then86:                                        ; preds = %if.end76
  %87 = load i32* %where_in_buf, align 4
  %88 = load i32* %buf_length, align 4
  %cmp87 = icmp eq i32 %87, %88
  br i1 %cmp87, label %if.then89, label %if.end106

if.then89:                                        ; preds = %if.then86
  %89 = load i32* @sites_on_node, align 4
  %90 = load i32* %isite, align 4
  %sub = sub nsw i32 %89, %90
  store i32 %sub, i32* %buf_length, align 4
  %91 = load i32* %buf_length, align 4
  %cmp90 = icmp sgt i32 %91, 4096
  br i1 %cmp90, label %if.then92, label %if.end93

if.then92:                                        ; preds = %if.then89
  store i32 4096, i32* %buf_length, align 4
  br label %if.end93

if.end93:                                         ; preds = %if.then92, %if.then89
  %92 = load %struct.su3_matrix** %lbuf, align 8
  %93 = bitcast %struct.su3_matrix* %92 to i8*
  %94 = load i32* %buf_length, align 4
  %mul94 = mul nsw i32 %94, 4
  %conv95 = sext i32 %mul94 to i64
  %mul96 = mul i64 %conv95, 144
  %95 = load %struct._IO_FILE** %fp, align 8
  %call97 = call i64 @g_read(i8* %93, i64 %mul96, i64 1, %struct._IO_FILE* %95)
  %cmp98 = icmp ne i64 %call97, 1
  br i1 %cmp98, label %if.then100, label %if.end105

if.then100:                                       ; preds = %if.end93
  %arraydecay101 = getelementptr inbounds [11 x i8]* %myname, i32 0, i32 0
  %96 = load i32* @this_node, align 4
  %call102 = call i32* @__errno_location() #8
  %97 = load i32* %call102, align 4
  %98 = load i8** %filename, align 8
  %call103 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([55 x i8]* @.str104, i32 0, i32 0), i8* %arraydecay101, i32 %96, i32 %97, i8* %98)
  %99 = load %struct._IO_FILE** @stdout, align 8
  %call104 = call i32 @fflush(%struct._IO_FILE* %99)
  call void @terminate(i32 1)
  br label %if.end105

if.end105:                                        ; preds = %if.then100, %if.end93
  store i32 0, i32* %where_in_buf, align 4
  br label %if.end106

if.end106:                                        ; preds = %if.end105, %if.then86
  %100 = load %struct.gauge_file** %gf.addr, align 8
  %byterevflag107 = getelementptr inbounds %struct.gauge_file* %100, i32 0, i32 3
  %101 = load i32* %byterevflag107, align 4
  %cmp108 = icmp eq i32 %101, 1
  br i1 %cmp108, label %if.then110, label %if.end114

if.then110:                                       ; preds = %if.end106
  %102 = load i32* %where_in_buf, align 4
  %mul111 = mul nsw i32 4, %102
  %idxprom112 = sext i32 %mul111 to i64
  %103 = load %struct.su3_matrix** %lbuf, align 8
  %arrayidx113 = getelementptr inbounds %struct.su3_matrix* %103, i64 %idxprom112
  %104 = bitcast %struct.su3_matrix* %arrayidx113 to i32*
  call void @byterevn(i32* %104, i32 144)
  br label %if.end114

if.end114:                                        ; preds = %if.then110, %if.end106
  store i32 0, i32* %k, align 4
  %105 = load i32* %where_in_buf, align 4
  %mul115 = mul nsw i32 4, %105
  %idxprom116 = sext i32 %mul115 to i64
  %106 = load %struct.su3_matrix** %lbuf, align 8
  %arrayidx117 = getelementptr inbounds %struct.su3_matrix* %106, i64 %idxprom116
  %107 = bitcast %struct.su3_matrix* %arrayidx117 to i32*
  store i32* %107, i32** %val, align 8
  br label %for.cond118

for.cond118:                                      ; preds = %for.inc, %if.end114
  %108 = load i32* %k, align 4
  %cmp119 = icmp slt i32 %108, 144
  br i1 %cmp119, label %for.body121, label %for.end

for.body121:                                      ; preds = %for.cond118
  %109 = load i32** %val, align 8
  %110 = load i32* %109, align 4
  %111 = load i32* %rank29, align 4
  %shl = shl i32 %110, %111
  %112 = load i32** %val, align 8
  %113 = load i32* %112, align 4
  %114 = load i32* %rank29, align 4
  %sub122 = sub nsw i32 32, %114
  %shr = lshr i32 %113, %sub122
  %or = or i32 %shl, %shr
  %sum29123 = getelementptr inbounds %struct.gauge_check* %test_gc, i32 0, i32 1
  %115 = load i32* %sum29123, align 4
  %xor = xor i32 %115, %or
  store i32 %xor, i32* %sum29123, align 4
  %116 = load i32** %val, align 8
  %117 = load i32* %116, align 4
  %118 = load i32* %rank31, align 4
  %shl124 = shl i32 %117, %118
  %119 = load i32** %val, align 8
  %120 = load i32* %119, align 4
  %121 = load i32* %rank31, align 4
  %sub125 = sub nsw i32 32, %121
  %shr126 = lshr i32 %120, %sub125
  %or127 = or i32 %shl124, %shr126
  %sum31128 = getelementptr inbounds %struct.gauge_check* %test_gc, i32 0, i32 0
  %122 = load i32* %sum31128, align 4
  %xor129 = xor i32 %122, %or127
  store i32 %xor129, i32* %sum31128, align 4
  %123 = load i32* %rank29, align 4
  %inc = add nsw i32 %123, 1
  store i32 %inc, i32* %rank29, align 4
  %124 = load i32* %rank29, align 4
  %cmp130 = icmp sge i32 %124, 29
  br i1 %cmp130, label %if.then132, label %if.end133

if.then132:                                       ; preds = %for.body121
  store i32 0, i32* %rank29, align 4
  br label %if.end133

if.end133:                                        ; preds = %if.then132, %for.body121
  %125 = load i32* %rank31, align 4
  %inc134 = add nsw i32 %125, 1
  store i32 %inc134, i32* %rank31, align 4
  %126 = load i32* %rank31, align 4
  %cmp135 = icmp sge i32 %126, 31
  br i1 %cmp135, label %if.then137, label %if.end138

if.then137:                                       ; preds = %if.end133
  store i32 0, i32* %rank31, align 4
  br label %if.end138

if.end138:                                        ; preds = %if.then137, %if.end133
  br label %for.inc

for.inc:                                          ; preds = %if.end138
  %127 = load i32* %k, align 4
  %inc139 = add nsw i32 %127, 1
  store i32 %inc139, i32* %k, align 4
  %128 = load i32** %val, align 8
  %incdec.ptr = getelementptr inbounds i32* %128, i32 1
  store i32* %incdec.ptr, i32** %val, align 8
  br label %for.cond118

for.end:                                          ; preds = %for.cond118
  %129 = load i32* %destnode, align 4
  %130 = load i32* %sendnode, align 4
  %cmp140 = icmp eq i32 %129, %130
  br i1 %cmp140, label %if.then142, label %if.else150

if.then142:                                       ; preds = %for.end
  %131 = load i32* %x, align 4
  %132 = load i32* %y, align 4
  %133 = load i32* %z, align 4
  %134 = load i32* %t, align 4
  %call143 = call i32 @node_index(i32 %131, i32 %132, i32 %133, i32 %134)
  store i32 %call143, i32* %i, align 4
  %135 = load i32* %i, align 4
  %idxprom144 = sext i32 %135 to i64
  %136 = load %struct.site** @lattice, align 8
  %arrayidx145 = getelementptr inbounds %struct.site* %136, i64 %idxprom144
  %link = getelementptr inbounds %struct.site* %arrayidx145, i32 0, i32 8
  %arraydecay146 = getelementptr inbounds [4 x %struct.su3_matrix]* %link, i32 0, i32 0
  %137 = bitcast %struct.su3_matrix* %arraydecay146 to i8*
  %138 = load i32* %where_in_buf, align 4
  %mul147 = mul nsw i32 4, %138
  %idxprom148 = sext i32 %mul147 to i64
  %139 = load %struct.su3_matrix** %lbuf, align 8
  %arrayidx149 = getelementptr inbounds %struct.su3_matrix* %139, i64 %idxprom148
  %140 = bitcast %struct.su3_matrix* %arrayidx149 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %137, i8* %140, i64 576, i32 1, i1 false)
  br label %if.end164

if.else150:                                       ; preds = %for.end
  %141 = load i32* %x, align 4
  %conv151 = trunc i32 %141 to i16
  %x152 = getelementptr inbounds %struct.anon.1* %msg, i32 0, i32 0
  store i16 %conv151, i16* %x152, align 2
  %142 = load i32* %y, align 4
  %conv153 = trunc i32 %142 to i16
  %y154 = getelementptr inbounds %struct.anon.1* %msg, i32 0, i32 1
  store i16 %conv153, i16* %y154, align 2
  %143 = load i32* %z, align 4
  %conv155 = trunc i32 %143 to i16
  %z156 = getelementptr inbounds %struct.anon.1* %msg, i32 0, i32 2
  store i16 %conv155, i16* %z156, align 2
  %144 = load i32* %t, align 4
  %conv157 = trunc i32 %144 to i16
  %t158 = getelementptr inbounds %struct.anon.1* %msg, i32 0, i32 3
  store i16 %conv157, i16* %t158, align 2
  %link159 = getelementptr inbounds %struct.anon.1* %msg, i32 0, i32 4
  %arraydecay160 = getelementptr inbounds [4 x %struct.su3_matrix]* %link159, i32 0, i32 0
  %145 = bitcast %struct.su3_matrix* %arraydecay160 to i8*
  %146 = load i32* %where_in_buf, align 4
  %mul161 = mul nsw i32 4, %146
  %idxprom162 = sext i32 %mul161 to i64
  %147 = load %struct.su3_matrix** %lbuf, align 8
  %arrayidx163 = getelementptr inbounds %struct.su3_matrix* %147, i64 %idxprom162
  %148 = bitcast %struct.su3_matrix* %arrayidx163 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %145, i8* %148, i64 576, i32 1, i1 false)
  %149 = bitcast %struct.anon.1* %msg to i8*
  %150 = load i32* %destnode, align 4
  call void @send_field(i8* %149, i32 584, i32 %150)
  br label %if.end164

if.end164:                                        ; preds = %if.else150, %if.then142
  %151 = load i32* %where_in_buf, align 4
  %inc165 = add nsw i32 %151, 1
  store i32 %inc165, i32* %where_in_buf, align 4
  br label %if.end209

if.else166:                                       ; preds = %if.end76
  %152 = load i32* @this_node, align 4
  %153 = load i32* %destnode, align 4
  %cmp167 = icmp eq i32 %152, %153
  br i1 %cmp167, label %if.then169, label %if.end208

if.then169:                                       ; preds = %if.else166
  %154 = bitcast %struct.anon.1* %msg to i8*
  call void @get_field(i8* %154, i32 584)
  %x170 = getelementptr inbounds %struct.anon.1* %msg, i32 0, i32 0
  %155 = load i16* %x170, align 2
  %conv171 = sext i16 %155 to i32
  %y172 = getelementptr inbounds %struct.anon.1* %msg, i32 0, i32 1
  %156 = load i16* %y172, align 2
  %conv173 = sext i16 %156 to i32
  %z174 = getelementptr inbounds %struct.anon.1* %msg, i32 0, i32 2
  %157 = load i16* %z174, align 2
  %conv175 = sext i16 %157 to i32
  %t176 = getelementptr inbounds %struct.anon.1* %msg, i32 0, i32 3
  %158 = load i16* %t176, align 2
  %conv177 = sext i16 %158 to i32
  %call178 = call i32 @node_index(i32 %conv171, i32 %conv173, i32 %conv175, i32 %conv177)
  store i32 %call178, i32* %i, align 4
  %159 = load i32* @this_node, align 4
  %x179 = getelementptr inbounds %struct.anon.1* %msg, i32 0, i32 0
  %160 = load i16* %x179, align 2
  %conv180 = sext i16 %160 to i32
  %y181 = getelementptr inbounds %struct.anon.1* %msg, i32 0, i32 1
  %161 = load i16* %y181, align 2
  %conv182 = sext i16 %161 to i32
  %z183 = getelementptr inbounds %struct.anon.1* %msg, i32 0, i32 2
  %162 = load i16* %z183, align 2
  %conv184 = sext i16 %162 to i32
  %t185 = getelementptr inbounds %struct.anon.1* %msg, i32 0, i32 3
  %163 = load i16* %t185, align 2
  %conv186 = sext i16 %163 to i32
  %call187 = call i32 @node_number(i32 %conv180, i32 %conv182, i32 %conv184, i32 %conv186)
  %cmp188 = icmp ne i32 %159, %call187
  br i1 %cmp188, label %if.then190, label %if.end201

if.then190:                                       ; preds = %if.then169
  %164 = load i32* @this_node, align 4
  %x191 = getelementptr inbounds %struct.anon.1* %msg, i32 0, i32 0
  %165 = load i16* %x191, align 2
  %conv192 = sext i16 %165 to i32
  %y193 = getelementptr inbounds %struct.anon.1* %msg, i32 0, i32 1
  %166 = load i16* %y193, align 2
  %conv194 = sext i16 %166 to i32
  %z195 = getelementptr inbounds %struct.anon.1* %msg, i32 0, i32 2
  %167 = load i16* %z195, align 2
  %conv196 = sext i16 %167 to i32
  %t197 = getelementptr inbounds %struct.anon.1* %msg, i32 0, i32 3
  %168 = load i16* %t197, align 2
  %conv198 = sext i16 %168 to i32
  %call199 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([37 x i8]* @.str126, i32 0, i32 0), i32 %164, i32 %conv192, i32 %conv194, i32 %conv196, i32 %conv198)
  %169 = load %struct._IO_FILE** @stdout, align 8
  %call200 = call i32 @fflush(%struct._IO_FILE* %169)
  call void @terminate(i32 1)
  br label %if.end201

if.end201:                                        ; preds = %if.then190, %if.then169
  %170 = load i32* %i, align 4
  %idxprom202 = sext i32 %170 to i64
  %171 = load %struct.site** @lattice, align 8
  %arrayidx203 = getelementptr inbounds %struct.site* %171, i64 %idxprom202
  %link204 = getelementptr inbounds %struct.site* %arrayidx203, i32 0, i32 8
  %arraydecay205 = getelementptr inbounds [4 x %struct.su3_matrix]* %link204, i32 0, i32 0
  %172 = bitcast %struct.su3_matrix* %arraydecay205 to i8*
  %link206 = getelementptr inbounds %struct.anon.1* %msg, i32 0, i32 4
  %arraydecay207 = getelementptr inbounds [4 x %struct.su3_matrix]* %link206, i32 0, i32 0
  %173 = bitcast %struct.su3_matrix* %arraydecay207 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %172, i8* %173, i64 576, i32 1, i1 false)
  br label %if.end208

if.end208:                                        ; preds = %if.end201, %if.else166
  br label %if.end209

if.end209:                                        ; preds = %if.end208, %if.end164
  br label %for.inc210

for.inc210:                                       ; preds = %if.end209
  %174 = load i32* %isite, align 4
  %inc211 = add nsw i32 %174, 1
  store i32 %inc211, i32* %isite, align 4
  br label %for.cond61

for.end212:                                       ; preds = %land.end
  br label %for.inc213

for.inc213:                                       ; preds = %for.end212
  %175 = load i32* %sendnode, align 4
  %inc214 = add nsw i32 %175, 1
  store i32 %inc214, i32* %sendnode, align 4
  br label %for.cond57

for.end215:                                       ; preds = %for.cond57
  call void (...)* bitcast (void ()* @g_sync to void (...)*)()
  br label %for.inc216

for.inc216:                                       ; preds = %for.end215
  %176 = load i32* %site_block, align 4
  %177 = load i32* %ksite, align 4
  %add217 = add nsw i32 %177, %176
  store i32 %add217, i32* %ksite, align 4
  br label %for.cond

for.end218:                                       ; preds = %for.cond
  %178 = load %struct.su3_matrix** %lbuf, align 8
  %179 = bitcast %struct.su3_matrix* %178 to i8*
  call void @free(i8* %179) #2
  %sum29219 = getelementptr inbounds %struct.gauge_check* %test_gc, i32 0, i32 1
  call void @g_xor32(i32* %sum29219)
  %sum31220 = getelementptr inbounds %struct.gauge_check* %test_gc, i32 0, i32 0
  call void @g_xor32(i32* %sum31220)
  %180 = load i32* @this_node, align 4
  %cmp221 = icmp eq i32 %180, 0
  br i1 %cmp221, label %if.then223, label %if.end242

if.then223:                                       ; preds = %for.end218
  %181 = load i8** %filename, align 8
  %call224 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([62 x i8]* @.str127, i32 0, i32 0), i8* %181)
  %182 = load %struct.gauge_header** %gh, align 8
  %magic_number225 = getelementptr inbounds %struct.gauge_header* %182, i32 0, i32 0
  %183 = load i32* %magic_number225, align 4
  %cmp226 = icmp eq i32 %183, 20103
  br i1 %cmp226, label %if.then228, label %if.end240

if.then228:                                       ; preds = %if.then223
  %184 = load %struct.gauge_header** %gh, align 8
  %time_stamp = getelementptr inbounds %struct.gauge_header* %184, i32 0, i32 1
  %arraydecay229 = getelementptr inbounds [64 x i8]* %time_stamp, i32 0, i32 0
  %call230 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([15 x i8]* @.str49220, i32 0, i32 0), i8* %arraydecay229)
  %185 = load %struct._IO_FILE** %fp, align 8
  %186 = load i64* %checksum_offset, align 8
  %call231 = call i32 @g_seek(%struct._IO_FILE* %185, i64 %186, i32 0)
  %cmp232 = icmp slt i32 %call231, 0
  br i1 %cmp232, label %if.then234, label %if.end239

if.then234:                                       ; preds = %if.then228
  %arraydecay235 = getelementptr inbounds [11 x i8]* %myname, i32 0, i32 0
  %187 = load i64* %offset, align 8
  %call236 = call i32* @__errno_location() #8
  %188 = load i32* %call236, align 4
  %189 = load i8** %filename, align 8
  %call237 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([60 x i8]* @.str128, i32 0, i32 0), i8* %arraydecay235, i64 %187, i32 %188, i8* %189)
  %190 = load %struct._IO_FILE** @stdout, align 8
  %call238 = call i32 @fflush(%struct._IO_FILE* %190)
  call void @terminate(i32 1)
  br label %if.end239

if.end239:                                        ; preds = %if.then234, %if.then228
  %191 = load %struct.gauge_file** %gf.addr, align 8
  call void @read_checksum(i32 1, %struct.gauge_file* %191, %struct.gauge_check* %test_gc)
  br label %if.end240

if.end240:                                        ; preds = %if.end239, %if.then223
  %192 = load %struct._IO_FILE** @stdout, align 8
  %call241 = call i32 @fflush(%struct._IO_FILE* %192)
  br label %if.end242

if.end242:                                        ; preds = %if.end240, %for.end218
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @r_parallel_f(%struct.gauge_file* %gf) #0 {
entry:
  %gf.addr = alloca %struct.gauge_file*, align 8
  store %struct.gauge_file* %gf, %struct.gauge_file** %gf.addr, align 8
  call void (...)* bitcast (void ()* @g_sync to void (...)*)()
  %0 = load %struct.gauge_file** %gf.addr, align 8
  %fp = getelementptr inbounds %struct.gauge_file* %0, i32 0, i32 0
  %1 = load %struct._IO_FILE** %fp, align 8
  %cmp = icmp ne %struct._IO_FILE* %1, null
  br i1 %cmp, label %if.then, label %if.end5

if.then:                                          ; preds = %entry
  %2 = load %struct.gauge_file** %gf.addr, align 8
  %parallel = getelementptr inbounds %struct.gauge_file* %2, i32 0, i32 5
  %3 = load i32* %parallel, align 4
  %tobool = icmp ne i32 %3, 0
  br i1 %tobool, label %if.end, label %if.then1

if.then1:                                         ; preds = %if.then
  %call = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([57 x i8]* @.str129, i32 0, i32 0))
  br label %if.end

if.end:                                           ; preds = %if.then1, %if.then
  %4 = load %struct.gauge_file** %gf.addr, align 8
  %fp2 = getelementptr inbounds %struct.gauge_file* %4, i32 0, i32 0
  %5 = load %struct._IO_FILE** %fp2, align 8
  %call3 = call i32 @g_close(%struct._IO_FILE* %5)
  %6 = load %struct.gauge_file** %gf.addr, align 8
  %fp4 = getelementptr inbounds %struct.gauge_file* %6, i32 0, i32 0
  store %struct._IO_FILE* null, %struct._IO_FILE** %fp4, align 8
  br label %if.end5

if.end5:                                          ; preds = %if.end, %entry
  ret void
}

; Function Attrs: nounwind uwtable
define internal %struct.gauge_file* @restore_ascii(i8* %filename) #0 {
entry:
  %filename.addr = alloca i8*, align 8
  %gh = alloca %struct.gauge_header*, align 8
  %gf = alloca %struct.gauge_file*, align 8
  %fp = alloca %struct._IO_FILE*, align 8
  %destnode = alloca i32, align 4
  %version_number = alloca i32, align 4
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %x = alloca i32, align 4
  %y = alloca i32, align 4
  %z = alloca i32, align 4
  %t = alloca i32, align 4
  %dir = alloca i32, align 4
  %lbuf = alloca [4 x %struct.su3_matrix], align 16
  store i8* %filename, i8** %filename.addr, align 8
  %0 = load i8** %filename.addr, align 8
  %call = call %struct.gauge_file* @setup_input_gauge_file(i8* %0)
  store %struct.gauge_file* %call, %struct.gauge_file** %gf, align 8
  %1 = load %struct.gauge_file** %gf, align 8
  %header = getelementptr inbounds %struct.gauge_file* %1, i32 0, i32 1
  %2 = load %struct.gauge_header** %header, align 8
  store %struct.gauge_header* %2, %struct.gauge_header** %gh, align 8
  %3 = load %struct.gauge_file** %gf, align 8
  %parallel = getelementptr inbounds %struct.gauge_file* %3, i32 0, i32 5
  store i32 0, i32* %parallel, align 4
  %4 = load i32* @this_node, align 4
  %cmp = icmp eq i32 %4, 0
  br i1 %cmp, label %if.then, label %if.else82

if.then:                                          ; preds = %entry
  %5 = load i8** %filename.addr, align 8
  %call1 = call %struct._IO_FILE* @fopen(i8* %5, i8* getelementptr inbounds ([2 x i8]* @.str130, i32 0, i32 0))
  store %struct._IO_FILE* %call1, %struct._IO_FILE** %fp, align 8
  %6 = load %struct._IO_FILE** %fp, align 8
  %cmp2 = icmp eq %struct._IO_FILE* %6, null
  br i1 %cmp2, label %if.then3, label %if.end

if.then3:                                         ; preds = %if.then
  %7 = load i8** %filename.addr, align 8
  %call4 = call i32* @__errno_location() #8
  %8 = load i32* %call4, align 4
  %call5 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([30 x i8]* @.str131, i32 0, i32 0), i8* %7, i32 %8)
  call void @terminate(i32 1)
  br label %if.end

if.end:                                           ; preds = %if.then3, %if.then
  %9 = load %struct._IO_FILE** %fp, align 8
  %10 = load %struct.gauge_file** %gf, align 8
  %fp6 = getelementptr inbounds %struct.gauge_file* %10, i32 0, i32 0
  store %struct._IO_FILE* %9, %struct._IO_FILE** %fp6, align 8
  %11 = load %struct._IO_FILE** %fp, align 8
  %call7 = call i32 (%struct._IO_FILE*, i8*, ...)* @__isoc99_fscanf(%struct._IO_FILE* %11, i8* getelementptr inbounds ([3 x i8]* @.str171, i32 0, i32 0), i32* %version_number)
  %cmp8 = icmp ne i32 %call7, 1
  br i1 %cmp8, label %if.then9, label %if.end11

if.then9:                                         ; preds = %if.end
  %call10 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([45 x i8]* @.str132, i32 0, i32 0))
  call void @terminate(i32 1)
  br label %if.end11

if.end11:                                         ; preds = %if.then9, %if.end
  %12 = load i32* %version_number, align 4
  %13 = load %struct.gauge_header** %gh, align 8
  %magic_number = getelementptr inbounds %struct.gauge_header* %13, i32 0, i32 0
  store i32 %12, i32* %magic_number, align 4
  %14 = load %struct.gauge_header** %gh, align 8
  %magic_number12 = getelementptr inbounds %struct.gauge_header* %14, i32 0, i32 0
  %15 = load i32* %magic_number12, align 4
  %cmp13 = icmp ne i32 %15, 20103
  br i1 %cmp13, label %if.then14, label %if.end18

if.then14:                                        ; preds = %if.end11
  %call15 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([59 x i8]* @.str133, i32 0, i32 0))
  %16 = load %struct.gauge_header** %gh, align 8
  %magic_number16 = getelementptr inbounds %struct.gauge_header* %16, i32 0, i32 0
  %17 = load i32* %magic_number16, align 4
  %call17 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([27 x i8]* @.str134, i32 0, i32 0), i32 %17, i32 20103)
  call void @terminate(i32 1)
  br label %if.end18

if.end18:                                         ; preds = %if.then14, %if.end11
  %18 = load %struct._IO_FILE** %fp, align 8
  %19 = load %struct.gauge_header** %gh, align 8
  %time_stamp = getelementptr inbounds %struct.gauge_header* %19, i32 0, i32 1
  %arraydecay = getelementptr inbounds [64 x i8]* %time_stamp, i32 0, i32 0
  %call19 = call i32 (%struct._IO_FILE*, i8*, ...)* @__isoc99_fscanf(%struct._IO_FILE* %18, i8* getelementptr inbounds ([26 x i8]* @.str135, i32 0, i32 0), i8* %arraydecay)
  store i32 %call19, i32* %i, align 4
  %cmp20 = icmp ne i32 %call19, 1
  br i1 %cmp20, label %if.then21, label %if.end26

if.then21:                                        ; preds = %if.end18
  %call22 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([41 x i8]* @.str136, i32 0, i32 0))
  %20 = load i32* %i, align 4
  %21 = load %struct.gauge_header** %gh, align 8
  %time_stamp23 = getelementptr inbounds %struct.gauge_header* %21, i32 0, i32 1
  %arraydecay24 = getelementptr inbounds [64 x i8]* %time_stamp23, i32 0, i32 0
  %call25 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([24 x i8]* @.str137, i32 0, i32 0), i32 %20, i8* %arraydecay24)
  call void @terminate(i32 1)
  br label %if.end26

if.end26:                                         ; preds = %if.then21, %if.end18
  %22 = load %struct._IO_FILE** %fp, align 8
  %call27 = call i32 (%struct._IO_FILE*, i8*, ...)* @__isoc99_fscanf(%struct._IO_FILE* %22, i8* getelementptr inbounds ([9 x i8]* @.str138, i32 0, i32 0), i32* %x, i32* %y, i32* %z, i32* %t)
  %cmp28 = icmp ne i32 %call27, 4
  br i1 %cmp28, label %if.then29, label %if.end31

if.then29:                                        ; preds = %if.end26
  %call30 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([44 x i8]* @.str139, i32 0, i32 0))
  call void @terminate(i32 1)
  br label %if.end31

if.end31:                                         ; preds = %if.then29, %if.end26
  %23 = load i32* %x, align 4
  %24 = load %struct.gauge_header** %gh, align 8
  %dims = getelementptr inbounds %struct.gauge_header* %24, i32 0, i32 2
  %arrayidx = getelementptr inbounds [4 x i32]* %dims, i32 0, i64 0
  store i32 %23, i32* %arrayidx, align 4
  %25 = load i32* %y, align 4
  %26 = load %struct.gauge_header** %gh, align 8
  %dims32 = getelementptr inbounds %struct.gauge_header* %26, i32 0, i32 2
  %arrayidx33 = getelementptr inbounds [4 x i32]* %dims32, i32 0, i64 1
  store i32 %25, i32* %arrayidx33, align 4
  %27 = load i32* %z, align 4
  %28 = load %struct.gauge_header** %gh, align 8
  %dims34 = getelementptr inbounds %struct.gauge_header* %28, i32 0, i32 2
  %arrayidx35 = getelementptr inbounds [4 x i32]* %dims34, i32 0, i64 2
  store i32 %27, i32* %arrayidx35, align 4
  %29 = load i32* %t, align 4
  %30 = load %struct.gauge_header** %gh, align 8
  %dims36 = getelementptr inbounds %struct.gauge_header* %30, i32 0, i32 2
  %arrayidx37 = getelementptr inbounds [4 x i32]* %dims36, i32 0, i64 3
  store i32 %29, i32* %arrayidx37, align 4
  %31 = load %struct.gauge_header** %gh, align 8
  %dims38 = getelementptr inbounds %struct.gauge_header* %31, i32 0, i32 2
  %arrayidx39 = getelementptr inbounds [4 x i32]* %dims38, i32 0, i64 0
  %32 = load i32* %arrayidx39, align 4
  %33 = load i32* @nx, align 4
  %cmp40 = icmp ne i32 %32, %33
  br i1 %cmp40, label %if.then52, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.end31
  %34 = load %struct.gauge_header** %gh, align 8
  %dims41 = getelementptr inbounds %struct.gauge_header* %34, i32 0, i32 2
  %arrayidx42 = getelementptr inbounds [4 x i32]* %dims41, i32 0, i64 1
  %35 = load i32* %arrayidx42, align 4
  %36 = load i32* @ny, align 4
  %cmp43 = icmp ne i32 %35, %36
  br i1 %cmp43, label %if.then52, label %lor.lhs.false44

lor.lhs.false44:                                  ; preds = %lor.lhs.false
  %37 = load %struct.gauge_header** %gh, align 8
  %dims45 = getelementptr inbounds %struct.gauge_header* %37, i32 0, i32 2
  %arrayidx46 = getelementptr inbounds [4 x i32]* %dims45, i32 0, i64 2
  %38 = load i32* %arrayidx46, align 4
  %39 = load i32* @nz, align 4
  %cmp47 = icmp ne i32 %38, %39
  br i1 %cmp47, label %if.then52, label %lor.lhs.false48

lor.lhs.false48:                                  ; preds = %lor.lhs.false44
  %40 = load %struct.gauge_header** %gh, align 8
  %dims49 = getelementptr inbounds %struct.gauge_header* %40, i32 0, i32 2
  %arrayidx50 = getelementptr inbounds [4 x i32]* %dims49, i32 0, i64 3
  %41 = load i32* %arrayidx50, align 4
  %42 = load i32* @nt, align 4
  %cmp51 = icmp ne i32 %41, %42
  br i1 %cmp51, label %if.then52, label %if.end81

if.then52:                                        ; preds = %lor.lhs.false48, %lor.lhs.false44, %lor.lhs.false, %if.end31
  %43 = load i32* @nx, align 4
  %cmp53 = icmp ne i32 %43, -1
  br i1 %cmp53, label %if.then60, label %lor.lhs.false54

lor.lhs.false54:                                  ; preds = %if.then52
  %44 = load i32* @ny, align 4
  %cmp55 = icmp ne i32 %44, -1
  br i1 %cmp55, label %if.then60, label %lor.lhs.false56

lor.lhs.false56:                                  ; preds = %lor.lhs.false54
  %45 = load i32* @nz, align 4
  %cmp57 = icmp ne i32 %45, -1
  br i1 %cmp57, label %if.then60, label %lor.lhs.false58

lor.lhs.false58:                                  ; preds = %lor.lhs.false56
  %46 = load i32* @nt, align 4
  %cmp59 = icmp ne i32 %46, -1
  br i1 %cmp59, label %if.then60, label %if.else

if.then60:                                        ; preds = %lor.lhs.false58, %lor.lhs.false56, %lor.lhs.false54, %if.then52
  %47 = load %struct.gauge_header** %gh, align 8
  %dims61 = getelementptr inbounds %struct.gauge_header* %47, i32 0, i32 2
  %arrayidx62 = getelementptr inbounds [4 x i32]* %dims61, i32 0, i64 0
  %48 = load i32* %arrayidx62, align 4
  %49 = load %struct.gauge_header** %gh, align 8
  %dims63 = getelementptr inbounds %struct.gauge_header* %49, i32 0, i32 2
  %arrayidx64 = getelementptr inbounds [4 x i32]* %dims63, i32 0, i64 1
  %50 = load i32* %arrayidx64, align 4
  %51 = load %struct.gauge_header** %gh, align 8
  %dims65 = getelementptr inbounds %struct.gauge_header* %51, i32 0, i32 2
  %arrayidx66 = getelementptr inbounds [4 x i32]* %dims65, i32 0, i64 2
  %52 = load i32* %arrayidx66, align 4
  %53 = load %struct.gauge_header** %gh, align 8
  %dims67 = getelementptr inbounds %struct.gauge_header* %53, i32 0, i32 2
  %arrayidx68 = getelementptr inbounds [4 x i32]* %dims67, i32 0, i64 3
  %54 = load i32* %arrayidx68, align 4
  %call69 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([51 x i8]* @.str140, i32 0, i32 0), i32 %48, i32 %50, i32 %52, i32 %54)
  call void @terminate(i32 1)
  br label %if.end80

if.else:                                          ; preds = %lor.lhs.false58
  %55 = load %struct.gauge_header** %gh, align 8
  %dims70 = getelementptr inbounds %struct.gauge_header* %55, i32 0, i32 2
  %arrayidx71 = getelementptr inbounds [4 x i32]* %dims70, i32 0, i64 0
  %56 = load i32* %arrayidx71, align 4
  store i32 %56, i32* @nx, align 4
  %57 = load %struct.gauge_header** %gh, align 8
  %dims72 = getelementptr inbounds %struct.gauge_header* %57, i32 0, i32 2
  %arrayidx73 = getelementptr inbounds [4 x i32]* %dims72, i32 0, i64 1
  %58 = load i32* %arrayidx73, align 4
  store i32 %58, i32* @ny, align 4
  %59 = load %struct.gauge_header** %gh, align 8
  %dims74 = getelementptr inbounds %struct.gauge_header* %59, i32 0, i32 2
  %arrayidx75 = getelementptr inbounds [4 x i32]* %dims74, i32 0, i64 2
  %60 = load i32* %arrayidx75, align 4
  store i32 %60, i32* @nz, align 4
  %61 = load %struct.gauge_header** %gh, align 8
  %dims76 = getelementptr inbounds %struct.gauge_header* %61, i32 0, i32 2
  %arrayidx77 = getelementptr inbounds [4 x i32]* %dims76, i32 0, i64 3
  %62 = load i32* %arrayidx77, align 4
  store i32 %62, i32* @nt, align 4
  %63 = load i32* @nx, align 4
  %64 = load i32* @ny, align 4
  %mul = mul nsw i32 %63, %64
  %65 = load i32* @nz, align 4
  %mul78 = mul nsw i32 %mul, %65
  %66 = load i32* @nt, align 4
  %mul79 = mul nsw i32 %mul78, %66
  store i32 %mul79, i32* @volume, align 4
  br label %if.end80

if.end80:                                         ; preds = %if.else, %if.then60
  br label %if.end81

if.end81:                                         ; preds = %if.end80, %lor.lhs.false48
  %67 = load %struct.gauge_header** %gh, align 8
  %order = getelementptr inbounds %struct.gauge_header* %67, i32 0, i32 4
  store i32 0, i32* %order, align 4
  br label %if.end84

if.else82:                                        ; preds = %entry
  %68 = load %struct.gauge_file** %gf, align 8
  %fp83 = getelementptr inbounds %struct.gauge_file* %68, i32 0, i32 0
  store %struct._IO_FILE* null, %struct._IO_FILE** %fp83, align 8
  br label %if.end84

if.end84:                                         ; preds = %if.else82, %if.end81
  %69 = load %struct.gauge_file** %gf, align 8
  %byterevflag = getelementptr inbounds %struct.gauge_file* %69, i32 0, i32 3
  store i32 0, i32* %byterevflag, align 4
  %70 = load %struct.gauge_header** %gh, align 8
  %71 = bitcast %struct.gauge_header* %70 to i8*
  call void @broadcast_bytes(i8* %71, i32 92)
  call void (...)* bitcast (void ()* @g_sync to void (...)*)()
  store i32 0, i32* %t, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc177, %if.end84
  %72 = load i32* %t, align 4
  %73 = load i32* @nt, align 4
  %cmp85 = icmp slt i32 %72, %73
  br i1 %cmp85, label %for.body, label %for.end179

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %z, align 4
  br label %for.cond86

for.cond86:                                       ; preds = %for.inc174, %for.body
  %74 = load i32* %z, align 4
  %75 = load i32* @nz, align 4
  %cmp87 = icmp slt i32 %74, %75
  br i1 %cmp87, label %for.body88, label %for.end176

for.body88:                                       ; preds = %for.cond86
  store i32 0, i32* %y, align 4
  br label %for.cond89

for.cond89:                                       ; preds = %for.inc171, %for.body88
  %76 = load i32* %y, align 4
  %77 = load i32* @ny, align 4
  %cmp90 = icmp slt i32 %76, %77
  br i1 %cmp90, label %for.body91, label %for.end173

for.body91:                                       ; preds = %for.cond89
  store i32 0, i32* %x, align 4
  br label %for.cond92

for.cond92:                                       ; preds = %for.inc168, %for.body91
  %78 = load i32* %x, align 4
  %79 = load i32* @nx, align 4
  %cmp93 = icmp slt i32 %78, %79
  br i1 %cmp93, label %for.body94, label %for.end170

for.body94:                                       ; preds = %for.cond92
  %80 = load i32* %x, align 4
  %81 = load i32* %y, align 4
  %82 = load i32* %z, align 4
  %83 = load i32* %t, align 4
  %call95 = call i32 @node_number(i32 %80, i32 %81, i32 %82, i32 %83)
  store i32 %call95, i32* %destnode, align 4
  %84 = load i32* @this_node, align 4
  %cmp96 = icmp eq i32 %84, 0
  br i1 %cmp96, label %if.then97, label %if.else148

if.then97:                                        ; preds = %for.body94
  store i32 0, i32* %dir, align 4
  br label %for.cond98

for.cond98:                                       ; preds = %for.inc127, %if.then97
  %85 = load i32* %dir, align 4
  %cmp99 = icmp sle i32 %85, 3
  br i1 %cmp99, label %for.body100, label %for.end129

for.body100:                                      ; preds = %for.cond98
  store i32 0, i32* %i, align 4
  br label %for.cond101

for.cond101:                                      ; preds = %for.inc124, %for.body100
  %86 = load i32* %i, align 4
  %cmp102 = icmp slt i32 %86, 3
  br i1 %cmp102, label %for.body103, label %for.end126

for.body103:                                      ; preds = %for.cond101
  store i32 0, i32* %j, align 4
  br label %for.cond104

for.cond104:                                      ; preds = %for.inc, %for.body103
  %87 = load i32* %j, align 4
  %cmp105 = icmp slt i32 %87, 3
  br i1 %cmp105, label %for.body106, label %for.end

for.body106:                                      ; preds = %for.cond104
  %88 = load %struct._IO_FILE** %fp, align 8
  %89 = load i32* %j, align 4
  %idxprom = sext i32 %89 to i64
  %90 = load i32* %i, align 4
  %idxprom107 = sext i32 %90 to i64
  %91 = load i32* %dir, align 4
  %idxprom108 = sext i32 %91 to i64
  %arrayidx109 = getelementptr inbounds [4 x %struct.su3_matrix]* %lbuf, i32 0, i64 %idxprom108
  %e = getelementptr inbounds %struct.su3_matrix* %arrayidx109, i32 0, i32 0
  %arrayidx110 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e, i32 0, i64 %idxprom107
  %arrayidx111 = getelementptr inbounds [3 x %struct.complex]* %arrayidx110, i32 0, i64 %idxprom
  %real = getelementptr inbounds %struct.complex* %arrayidx111, i32 0, i32 0
  %92 = load i32* %j, align 4
  %idxprom112 = sext i32 %92 to i64
  %93 = load i32* %i, align 4
  %idxprom113 = sext i32 %93 to i64
  %94 = load i32* %dir, align 4
  %idxprom114 = sext i32 %94 to i64
  %arrayidx115 = getelementptr inbounds [4 x %struct.su3_matrix]* %lbuf, i32 0, i64 %idxprom114
  %e116 = getelementptr inbounds %struct.su3_matrix* %arrayidx115, i32 0, i32 0
  %arrayidx117 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e116, i32 0, i64 %idxprom113
  %arrayidx118 = getelementptr inbounds [3 x %struct.complex]* %arrayidx117, i32 0, i64 %idxprom112
  %imag = getelementptr inbounds %struct.complex* %arrayidx118, i32 0, i32 1
  %call119 = call i32 (%struct._IO_FILE*, i8*, ...)* @__isoc99_fscanf(%struct._IO_FILE* %88, i8* getelementptr inbounds ([8 x i8]* @.str141238, i32 0, i32 0), double* %real, double* %imag)
  %cmp120 = icmp ne i32 %call119, 2
  br i1 %cmp120, label %if.then121, label %if.end123

if.then121:                                       ; preds = %for.body106
  %call122 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([38 x i8]* @.str142, i32 0, i32 0))
  call void @terminate(i32 1)
  br label %if.end123

if.end123:                                        ; preds = %if.then121, %for.body106
  br label %for.inc

for.inc:                                          ; preds = %if.end123
  %95 = load i32* %j, align 4
  %inc = add nsw i32 %95, 1
  store i32 %inc, i32* %j, align 4
  br label %for.cond104

for.end:                                          ; preds = %for.cond104
  br label %for.inc124

for.inc124:                                       ; preds = %for.end
  %96 = load i32* %i, align 4
  %inc125 = add nsw i32 %96, 1
  store i32 %inc125, i32* %i, align 4
  br label %for.cond101

for.end126:                                       ; preds = %for.cond101
  br label %for.inc127

for.inc127:                                       ; preds = %for.end126
  %97 = load i32* %dir, align 4
  %inc128 = add nsw i32 %97, 1
  store i32 %inc128, i32* %dir, align 4
  br label %for.cond98

for.end129:                                       ; preds = %for.cond98
  %98 = load i32* %destnode, align 4
  %cmp130 = icmp eq i32 %98, 0
  br i1 %cmp130, label %if.then131, label %if.else145

if.then131:                                       ; preds = %for.end129
  %99 = load i32* %x, align 4
  %100 = load i32* %y, align 4
  %101 = load i32* %z, align 4
  %102 = load i32* %t, align 4
  %call132 = call i32 @node_index(i32 %99, i32 %100, i32 %101, i32 %102)
  store i32 %call132, i32* %i, align 4
  store i32 0, i32* %dir, align 4
  br label %for.cond133

for.cond133:                                      ; preds = %for.inc142, %if.then131
  %103 = load i32* %dir, align 4
  %cmp134 = icmp sle i32 %103, 3
  br i1 %cmp134, label %for.body135, label %for.end144

for.body135:                                      ; preds = %for.cond133
  %104 = load i32* %dir, align 4
  %idxprom136 = sext i32 %104 to i64
  %105 = load i32* %i, align 4
  %idxprom137 = sext i32 %105 to i64
  %106 = load %struct.site** @lattice, align 8
  %arrayidx138 = getelementptr inbounds %struct.site* %106, i64 %idxprom137
  %link = getelementptr inbounds %struct.site* %arrayidx138, i32 0, i32 8
  %arrayidx139 = getelementptr inbounds [4 x %struct.su3_matrix]* %link, i32 0, i64 %idxprom136
  %107 = load i32* %dir, align 4
  %idxprom140 = sext i32 %107 to i64
  %arrayidx141 = getelementptr inbounds [4 x %struct.su3_matrix]* %lbuf, i32 0, i64 %idxprom140
  %108 = bitcast %struct.su3_matrix* %arrayidx139 to i8*
  %109 = bitcast %struct.su3_matrix* %arrayidx141 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %108, i8* %109, i64 144, i32 8, i1 false)
  br label %for.inc142

for.inc142:                                       ; preds = %for.body135
  %110 = load i32* %dir, align 4
  %inc143 = add nsw i32 %110, 1
  store i32 %inc143, i32* %dir, align 4
  br label %for.cond133

for.end144:                                       ; preds = %for.cond133
  br label %if.end147

if.else145:                                       ; preds = %for.end129
  %arraydecay146 = getelementptr inbounds [4 x %struct.su3_matrix]* %lbuf, i32 0, i32 0
  %111 = bitcast %struct.su3_matrix* %arraydecay146 to i8*
  %112 = load i32* %destnode, align 4
  call void @send_field(i8* %111, i32 576, i32 %112)
  br label %if.end147

if.end147:                                        ; preds = %if.else145, %for.end144
  br label %if.end167

if.else148:                                       ; preds = %for.body94
  %113 = load i32* @this_node, align 4
  %114 = load i32* %destnode, align 4
  %cmp149 = icmp eq i32 %113, %114
  br i1 %cmp149, label %if.then150, label %if.end166

if.then150:                                       ; preds = %if.else148
  %arraydecay151 = getelementptr inbounds [4 x %struct.su3_matrix]* %lbuf, i32 0, i32 0
  %115 = bitcast %struct.su3_matrix* %arraydecay151 to i8*
  call void @get_field(i8* %115, i32 576)
  %116 = load i32* %x, align 4
  %117 = load i32* %y, align 4
  %118 = load i32* %z, align 4
  %119 = load i32* %t, align 4
  %call152 = call i32 @node_index(i32 %116, i32 %117, i32 %118, i32 %119)
  store i32 %call152, i32* %i, align 4
  store i32 0, i32* %dir, align 4
  br label %for.cond153

for.cond153:                                      ; preds = %for.inc163, %if.then150
  %120 = load i32* %dir, align 4
  %cmp154 = icmp sle i32 %120, 3
  br i1 %cmp154, label %for.body155, label %for.end165

for.body155:                                      ; preds = %for.cond153
  %121 = load i32* %dir, align 4
  %idxprom156 = sext i32 %121 to i64
  %122 = load i32* %i, align 4
  %idxprom157 = sext i32 %122 to i64
  %123 = load %struct.site** @lattice, align 8
  %arrayidx158 = getelementptr inbounds %struct.site* %123, i64 %idxprom157
  %link159 = getelementptr inbounds %struct.site* %arrayidx158, i32 0, i32 8
  %arrayidx160 = getelementptr inbounds [4 x %struct.su3_matrix]* %link159, i32 0, i64 %idxprom156
  %124 = load i32* %dir, align 4
  %idxprom161 = sext i32 %124 to i64
  %arrayidx162 = getelementptr inbounds [4 x %struct.su3_matrix]* %lbuf, i32 0, i64 %idxprom161
  %125 = bitcast %struct.su3_matrix* %arrayidx160 to i8*
  %126 = bitcast %struct.su3_matrix* %arrayidx162 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %125, i8* %126, i64 144, i32 8, i1 false)
  br label %for.inc163

for.inc163:                                       ; preds = %for.body155
  %127 = load i32* %dir, align 4
  %inc164 = add nsw i32 %127, 1
  store i32 %inc164, i32* %dir, align 4
  br label %for.cond153

for.end165:                                       ; preds = %for.cond153
  br label %if.end166

if.end166:                                        ; preds = %for.end165, %if.else148
  br label %if.end167

if.end167:                                        ; preds = %if.end166, %if.end147
  br label %for.inc168

for.inc168:                                       ; preds = %if.end167
  %128 = load i32* %x, align 4
  %inc169 = add nsw i32 %128, 1
  store i32 %inc169, i32* %x, align 4
  br label %for.cond92

for.end170:                                       ; preds = %for.cond92
  br label %for.inc171

for.inc171:                                       ; preds = %for.end170
  %129 = load i32* %y, align 4
  %inc172 = add nsw i32 %129, 1
  store i32 %inc172, i32* %y, align 4
  br label %for.cond89

for.end173:                                       ; preds = %for.cond89
  br label %for.inc174

for.inc174:                                       ; preds = %for.end173
  %130 = load i32* %z, align 4
  %inc175 = add nsw i32 %130, 1
  store i32 %inc175, i32* %z, align 4
  br label %for.cond86

for.end176:                                       ; preds = %for.cond86
  br label %for.inc177

for.inc177:                                       ; preds = %for.end176
  %131 = load i32* %t, align 4
  %inc178 = add nsw i32 %131, 1
  store i32 %inc178, i32* %t, align 4
  br label %for.cond

for.end179:                                       ; preds = %for.cond
  call void (...)* bitcast (void ()* @g_sync to void (...)*)()
  %132 = load i32* @this_node, align 4
  %cmp180 = icmp eq i32 %132, 0
  br i1 %cmp180, label %if.then181, label %if.end189

if.then181:                                       ; preds = %for.end179
  %133 = load i8** %filename.addr, align 8
  %call182 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([50 x i8]* @.str143, i32 0, i32 0), i8* %133)
  %134 = load %struct.gauge_header** %gh, align 8
  %time_stamp183 = getelementptr inbounds %struct.gauge_header* %134, i32 0, i32 1
  %arraydecay184 = getelementptr inbounds [64 x i8]* %time_stamp183, i32 0, i32 0
  %call185 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([15 x i8]* @.str49220, i32 0, i32 0), i8* %arraydecay184)
  %135 = load %struct._IO_FILE** %fp, align 8
  %call186 = call i32 @fclose(%struct._IO_FILE* %135)
  %136 = load %struct.gauge_file** %gf, align 8
  %fp187 = getelementptr inbounds %struct.gauge_file* %136, i32 0, i32 0
  store %struct._IO_FILE* null, %struct._IO_FILE** %fp187, align 8
  %137 = load %struct._IO_FILE** @stdout, align 8
  %call188 = call i32 @fflush(%struct._IO_FILE* %137)
  br label %if.end189

if.end189:                                        ; preds = %if.then181, %for.end179
  %138 = load %struct.gauge_file** %gf, align 8
  ret %struct.gauge_file* %138
}

declare i32 @__isoc99_fscanf(%struct._IO_FILE*, i8*, ...) #1

; Function Attrs: nounwind uwtable
define internal %struct.gauge_file* @save_ascii(i8* %filename) #0 {
entry:
  %filename.addr = alloca i8*, align 8
  %fp = alloca %struct._IO_FILE*, align 8
  %currentnode = alloca i32, align 4
  %newnode = alloca i32, align 4
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %x = alloca i32, align 4
  %y = alloca i32, align 4
  %z = alloca i32, align 4
  %t = alloca i32, align 4
  %dir = alloca i32, align 4
  %lbuf = alloca [4 x %struct.su3_matrix], align 16
  %gf = alloca %struct.gauge_file*, align 8
  %gh = alloca %struct.gauge_header*, align 8
  store i8* %filename, i8** %filename.addr, align 8
  %call = call %struct.gauge_file* @setup_output_gauge_file()
  store %struct.gauge_file* %call, %struct.gauge_file** %gf, align 8
  %0 = load %struct.gauge_file** %gf, align 8
  %header = getelementptr inbounds %struct.gauge_file* %0, i32 0, i32 1
  %1 = load %struct.gauge_header** %header, align 8
  store %struct.gauge_header* %1, %struct.gauge_header** %gh, align 8
  %2 = load i32* @this_node, align 4
  %cmp = icmp eq i32 %2, 0
  br i1 %cmp, label %if.then, label %if.end23

if.then:                                          ; preds = %entry
  %3 = load i8** %filename.addr, align 8
  %call1 = call %struct._IO_FILE* @fopen(i8* %3, i8* getelementptr inbounds ([2 x i8]* @.str26197, i32 0, i32 0))
  store %struct._IO_FILE* %call1, %struct._IO_FILE** %fp, align 8
  %4 = load %struct._IO_FILE** %fp, align 8
  %cmp2 = icmp eq %struct._IO_FILE* %4, null
  br i1 %cmp2, label %if.then3, label %if.end

if.then3:                                         ; preds = %if.then
  %5 = load i8** %filename.addr, align 8
  %call4 = call i32* @__errno_location() #8
  %6 = load i32* %call4, align 4
  %call5 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([30 x i8]* @.str131, i32 0, i32 0), i8* %5, i32 %6)
  call void @terminate(i32 1)
  br label %if.end

if.end:                                           ; preds = %if.then3, %if.then
  %7 = load %struct._IO_FILE** %fp, align 8
  %8 = load %struct.gauge_file** %gf, align 8
  %fp6 = getelementptr inbounds %struct.gauge_file* %8, i32 0, i32 0
  store %struct._IO_FILE* %7, %struct._IO_FILE** %fp6, align 8
  %9 = load %struct.gauge_file** %gf, align 8
  %parallel = getelementptr inbounds %struct.gauge_file* %9, i32 0, i32 5
  store i32 0, i32* %parallel, align 4
  %10 = load i8** %filename.addr, align 8
  %11 = load %struct.gauge_file** %gf, align 8
  %filename7 = getelementptr inbounds %struct.gauge_file* %11, i32 0, i32 2
  store i8* %10, i8** %filename7, align 8
  %12 = load %struct.gauge_file** %gf, align 8
  %byterevflag = getelementptr inbounds %struct.gauge_file* %12, i32 0, i32 3
  store i32 0, i32* %byterevflag, align 4
  %13 = load %struct._IO_FILE** %fp, align 8
  %call8 = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %13, i8* getelementptr inbounds ([4 x i8]* @.str144, i32 0, i32 0), i32 20103)
  %cmp9 = icmp eq i32 %call8, 0
  br i1 %cmp9, label %if.then10, label %if.end12

if.then10:                                        ; preds = %if.end
  %call11 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([33 x i8]* @.str145239, i32 0, i32 0))
  call void @terminate(i32 1)
  br label %if.end12

if.end12:                                         ; preds = %if.then10, %if.end
  %14 = load %struct._IO_FILE** %fp, align 8
  %15 = load %struct.gauge_header** %gh, align 8
  %time_stamp = getelementptr inbounds %struct.gauge_header* %15, i32 0, i32 1
  %arraydecay = getelementptr inbounds [64 x i8]* %time_stamp, i32 0, i32 0
  %call13 = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %14, i8* getelementptr inbounds ([6 x i8]* @.str146, i32 0, i32 0), i8* %arraydecay)
  %cmp14 = icmp eq i32 %call13, 0
  br i1 %cmp14, label %if.then15, label %if.end17

if.then15:                                        ; preds = %if.end12
  %call16 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([29 x i8]* @.str147, i32 0, i32 0))
  call void @terminate(i32 1)
  br label %if.end17

if.end17:                                         ; preds = %if.then15, %if.end12
  %16 = load %struct._IO_FILE** %fp, align 8
  %17 = load i32* @nx, align 4
  %18 = load i32* @ny, align 4
  %19 = load i32* @nz, align 4
  %20 = load i32* @nt, align 4
  %call18 = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %16, i8* getelementptr inbounds ([13 x i8]* @.str148, i32 0, i32 0), i32 %17, i32 %18, i32 %19, i32 %20)
  %cmp19 = icmp eq i32 %call18, 0
  br i1 %cmp19, label %if.then20, label %if.end22

if.then20:                                        ; preds = %if.end17
  %call21 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([29 x i8]* @.str149, i32 0, i32 0))
  call void @terminate(i32 1)
  br label %if.end22

if.end22:                                         ; preds = %if.then20, %if.end17
  %21 = load %struct.gauge_file** %gf, align 8
  call void @write_gauge_info_file(%struct.gauge_file* %21)
  br label %if.end23

if.end23:                                         ; preds = %if.end22, %entry
  call void (...)* bitcast (void ()* @g_sync to void (...)*)()
  store i32 0, i32* %currentnode, align 4
  store i32 0, i32* %t, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc128, %if.end23
  %22 = load i32* %t, align 4
  %23 = load i32* @nt, align 4
  %cmp24 = icmp slt i32 %22, %23
  br i1 %cmp24, label %for.body, label %for.end130

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %z, align 4
  br label %for.cond25

for.cond25:                                       ; preds = %for.inc125, %for.body
  %24 = load i32* %z, align 4
  %25 = load i32* @nz, align 4
  %cmp26 = icmp slt i32 %24, %25
  br i1 %cmp26, label %for.body27, label %for.end127

for.body27:                                       ; preds = %for.cond25
  store i32 0, i32* %y, align 4
  br label %for.cond28

for.cond28:                                       ; preds = %for.inc122, %for.body27
  %26 = load i32* %y, align 4
  %27 = load i32* @ny, align 4
  %cmp29 = icmp slt i32 %26, %27
  br i1 %cmp29, label %for.body30, label %for.end124

for.body30:                                       ; preds = %for.cond28
  store i32 0, i32* %x, align 4
  br label %for.cond31

for.cond31:                                       ; preds = %for.inc119, %for.body30
  %28 = load i32* %x, align 4
  %29 = load i32* @nx, align 4
  %cmp32 = icmp slt i32 %28, %29
  br i1 %cmp32, label %for.body33, label %for.end121

for.body33:                                       ; preds = %for.cond31
  %30 = load i32* %x, align 4
  %31 = load i32* %y, align 4
  %32 = load i32* %z, align 4
  %33 = load i32* %t, align 4
  %call34 = call i32 @node_number(i32 %30, i32 %31, i32 %32, i32 %33)
  store i32 %call34, i32* %newnode, align 4
  %34 = load i32* %newnode, align 4
  %35 = load i32* %currentnode, align 4
  %cmp35 = icmp ne i32 %34, %35
  br i1 %cmp35, label %if.then36, label %if.end48

if.then36:                                        ; preds = %for.body33
  %36 = load i32* @this_node, align 4
  %cmp37 = icmp eq i32 %36, 0
  br i1 %cmp37, label %land.lhs.true, label %if.end41

land.lhs.true:                                    ; preds = %if.then36
  %37 = load i32* %newnode, align 4
  %cmp38 = icmp ne i32 %37, 0
  br i1 %cmp38, label %if.then39, label %if.end41

if.then39:                                        ; preds = %land.lhs.true
  %arraydecay40 = getelementptr inbounds [4 x %struct.su3_matrix]* %lbuf, i32 0, i32 0
  %38 = bitcast %struct.su3_matrix* %arraydecay40 to i8*
  %39 = load i32* %newnode, align 4
  call void @send_field(i8* %38, i32 4, i32 %39)
  br label %if.end41

if.end41:                                         ; preds = %if.then39, %land.lhs.true, %if.then36
  %40 = load i32* @this_node, align 4
  %41 = load i32* %newnode, align 4
  %cmp42 = icmp eq i32 %40, %41
  br i1 %cmp42, label %land.lhs.true43, label %if.end47

land.lhs.true43:                                  ; preds = %if.end41
  %42 = load i32* %newnode, align 4
  %cmp44 = icmp ne i32 %42, 0
  br i1 %cmp44, label %if.then45, label %if.end47

if.then45:                                        ; preds = %land.lhs.true43
  %arraydecay46 = getelementptr inbounds [4 x %struct.su3_matrix]* %lbuf, i32 0, i32 0
  %43 = bitcast %struct.su3_matrix* %arraydecay46 to i8*
  call void @get_field(i8* %43, i32 4)
  br label %if.end47

if.end47:                                         ; preds = %if.then45, %land.lhs.true43, %if.end41
  %44 = load i32* %newnode, align 4
  store i32 %44, i32* %currentnode, align 4
  br label %if.end48

if.end48:                                         ; preds = %if.end47, %for.body33
  %45 = load i32* @this_node, align 4
  %cmp49 = icmp eq i32 %45, 0
  br i1 %cmp49, label %if.then50, label %if.else99

if.then50:                                        ; preds = %if.end48
  %46 = load i32* %currentnode, align 4
  %cmp51 = icmp eq i32 %46, 0
  br i1 %cmp51, label %if.then52, label %if.else

if.then52:                                        ; preds = %if.then50
  %47 = load i32* %x, align 4
  %48 = load i32* %y, align 4
  %49 = load i32* %z, align 4
  %50 = load i32* %t, align 4
  %call53 = call i32 @node_index(i32 %47, i32 %48, i32 %49, i32 %50)
  store i32 %call53, i32* %i, align 4
  store i32 0, i32* %dir, align 4
  br label %for.cond54

for.cond54:                                       ; preds = %for.inc, %if.then52
  %51 = load i32* %dir, align 4
  %cmp55 = icmp sle i32 %51, 3
  br i1 %cmp55, label %for.body56, label %for.end

for.body56:                                       ; preds = %for.cond54
  %52 = load i32* %dir, align 4
  %idxprom = sext i32 %52 to i64
  %arrayidx = getelementptr inbounds [4 x %struct.su3_matrix]* %lbuf, i32 0, i64 %idxprom
  %53 = load i32* %dir, align 4
  %idxprom57 = sext i32 %53 to i64
  %54 = load i32* %i, align 4
  %idxprom58 = sext i32 %54 to i64
  %55 = load %struct.site** @lattice, align 8
  %arrayidx59 = getelementptr inbounds %struct.site* %55, i64 %idxprom58
  %link = getelementptr inbounds %struct.site* %arrayidx59, i32 0, i32 8
  %arrayidx60 = getelementptr inbounds [4 x %struct.su3_matrix]* %link, i32 0, i64 %idxprom57
  %56 = bitcast %struct.su3_matrix* %arrayidx to i8*
  %57 = bitcast %struct.su3_matrix* %arrayidx60 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %56, i8* %57, i64 144, i32 8, i1 false)
  br label %for.inc

for.inc:                                          ; preds = %for.body56
  %58 = load i32* %dir, align 4
  %inc = add nsw i32 %58, 1
  store i32 %inc, i32* %dir, align 4
  br label %for.cond54

for.end:                                          ; preds = %for.cond54
  br label %if.end62

if.else:                                          ; preds = %if.then50
  %arraydecay61 = getelementptr inbounds [4 x %struct.su3_matrix]* %lbuf, i32 0, i32 0
  %59 = bitcast %struct.su3_matrix* %arraydecay61 to i8*
  call void @get_field(i8* %59, i32 576)
  br label %if.end62

if.end62:                                         ; preds = %if.else, %for.end
  store i32 0, i32* %dir, align 4
  br label %for.cond63

for.cond63:                                       ; preds = %for.inc96, %if.end62
  %60 = load i32* %dir, align 4
  %cmp64 = icmp sle i32 %60, 3
  br i1 %cmp64, label %for.body65, label %for.end98

for.body65:                                       ; preds = %for.cond63
  store i32 0, i32* %i, align 4
  br label %for.cond66

for.cond66:                                       ; preds = %for.inc93, %for.body65
  %61 = load i32* %i, align 4
  %cmp67 = icmp slt i32 %61, 3
  br i1 %cmp67, label %for.body68, label %for.end95

for.body68:                                       ; preds = %for.cond66
  store i32 0, i32* %j, align 4
  br label %for.cond69

for.cond69:                                       ; preds = %for.inc90, %for.body68
  %62 = load i32* %j, align 4
  %cmp70 = icmp slt i32 %62, 3
  br i1 %cmp70, label %for.body71, label %for.end92

for.body71:                                       ; preds = %for.cond69
  %63 = load %struct._IO_FILE** %fp, align 8
  %64 = load i32* %j, align 4
  %idxprom72 = sext i32 %64 to i64
  %65 = load i32* %i, align 4
  %idxprom73 = sext i32 %65 to i64
  %66 = load i32* %dir, align 4
  %idxprom74 = sext i32 %66 to i64
  %arrayidx75 = getelementptr inbounds [4 x %struct.su3_matrix]* %lbuf, i32 0, i64 %idxprom74
  %e = getelementptr inbounds %struct.su3_matrix* %arrayidx75, i32 0, i32 0
  %arrayidx76 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e, i32 0, i64 %idxprom73
  %arrayidx77 = getelementptr inbounds [3 x %struct.complex]* %arrayidx76, i32 0, i64 %idxprom72
  %real = getelementptr inbounds %struct.complex* %arrayidx77, i32 0, i32 0
  %67 = load double* %real, align 8
  %68 = load i32* %j, align 4
  %idxprom78 = sext i32 %68 to i64
  %69 = load i32* %i, align 4
  %idxprom79 = sext i32 %69 to i64
  %70 = load i32* %dir, align 4
  %idxprom80 = sext i32 %70 to i64
  %arrayidx81 = getelementptr inbounds [4 x %struct.su3_matrix]* %lbuf, i32 0, i64 %idxprom80
  %e82 = getelementptr inbounds %struct.su3_matrix* %arrayidx81, i32 0, i32 0
  %arrayidx83 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e82, i32 0, i64 %idxprom79
  %arrayidx84 = getelementptr inbounds [3 x %struct.complex]* %arrayidx83, i32 0, i64 %idxprom78
  %imag = getelementptr inbounds %struct.complex* %arrayidx84, i32 0, i32 1
  %71 = load double* %imag, align 8
  %call85 = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %63, i8* getelementptr inbounds ([11 x i8]* @.str150, i32 0, i32 0), double %67, double %71)
  %cmp86 = icmp eq i32 %call85, -1
  br i1 %cmp86, label %if.then87, label %if.end89

if.then87:                                        ; preds = %for.body71
  %call88 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([27 x i8]* @.str151, i32 0, i32 0))
  call void @terminate(i32 1)
  br label %if.end89

if.end89:                                         ; preds = %if.then87, %for.body71
  br label %for.inc90

for.inc90:                                        ; preds = %if.end89
  %72 = load i32* %j, align 4
  %inc91 = add nsw i32 %72, 1
  store i32 %inc91, i32* %j, align 4
  br label %for.cond69

for.end92:                                        ; preds = %for.cond69
  br label %for.inc93

for.inc93:                                        ; preds = %for.end92
  %73 = load i32* %i, align 4
  %inc94 = add nsw i32 %73, 1
  store i32 %inc94, i32* %i, align 4
  br label %for.cond66

for.end95:                                        ; preds = %for.cond66
  br label %for.inc96

for.inc96:                                        ; preds = %for.end95
  %74 = load i32* %dir, align 4
  %inc97 = add nsw i32 %74, 1
  store i32 %inc97, i32* %dir, align 4
  br label %for.cond63

for.end98:                                        ; preds = %for.cond63
  br label %if.end118

if.else99:                                        ; preds = %if.end48
  %75 = load i32* @this_node, align 4
  %76 = load i32* %currentnode, align 4
  %cmp100 = icmp eq i32 %75, %76
  br i1 %cmp100, label %if.then101, label %if.end117

if.then101:                                       ; preds = %if.else99
  %77 = load i32* %x, align 4
  %78 = load i32* %y, align 4
  %79 = load i32* %z, align 4
  %80 = load i32* %t, align 4
  %call102 = call i32 @node_index(i32 %77, i32 %78, i32 %79, i32 %80)
  store i32 %call102, i32* %i, align 4
  store i32 0, i32* %dir, align 4
  br label %for.cond103

for.cond103:                                      ; preds = %for.inc113, %if.then101
  %81 = load i32* %dir, align 4
  %cmp104 = icmp sle i32 %81, 3
  br i1 %cmp104, label %for.body105, label %for.end115

for.body105:                                      ; preds = %for.cond103
  %82 = load i32* %dir, align 4
  %idxprom106 = sext i32 %82 to i64
  %arrayidx107 = getelementptr inbounds [4 x %struct.su3_matrix]* %lbuf, i32 0, i64 %idxprom106
  %83 = load i32* %dir, align 4
  %idxprom108 = sext i32 %83 to i64
  %84 = load i32* %i, align 4
  %idxprom109 = sext i32 %84 to i64
  %85 = load %struct.site** @lattice, align 8
  %arrayidx110 = getelementptr inbounds %struct.site* %85, i64 %idxprom109
  %link111 = getelementptr inbounds %struct.site* %arrayidx110, i32 0, i32 8
  %arrayidx112 = getelementptr inbounds [4 x %struct.su3_matrix]* %link111, i32 0, i64 %idxprom108
  %86 = bitcast %struct.su3_matrix* %arrayidx107 to i8*
  %87 = bitcast %struct.su3_matrix* %arrayidx112 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %86, i8* %87, i64 144, i32 8, i1 false)
  br label %for.inc113

for.inc113:                                       ; preds = %for.body105
  %88 = load i32* %dir, align 4
  %inc114 = add nsw i32 %88, 1
  store i32 %inc114, i32* %dir, align 4
  br label %for.cond103

for.end115:                                       ; preds = %for.cond103
  %arraydecay116 = getelementptr inbounds [4 x %struct.su3_matrix]* %lbuf, i32 0, i32 0
  %89 = bitcast %struct.su3_matrix* %arraydecay116 to i8*
  call void @send_field(i8* %89, i32 576, i32 0)
  br label %if.end117

if.end117:                                        ; preds = %for.end115, %if.else99
  br label %if.end118

if.end118:                                        ; preds = %if.end117, %for.end98
  br label %for.inc119

for.inc119:                                       ; preds = %if.end118
  %90 = load i32* %x, align 4
  %inc120 = add nsw i32 %90, 1
  store i32 %inc120, i32* %x, align 4
  br label %for.cond31

for.end121:                                       ; preds = %for.cond31
  br label %for.inc122

for.inc122:                                       ; preds = %for.end121
  %91 = load i32* %y, align 4
  %inc123 = add nsw i32 %91, 1
  store i32 %inc123, i32* %y, align 4
  br label %for.cond28

for.end124:                                       ; preds = %for.cond28
  br label %for.inc125

for.inc125:                                       ; preds = %for.end124
  %92 = load i32* %z, align 4
  %inc126 = add nsw i32 %92, 1
  store i32 %inc126, i32* %z, align 4
  br label %for.cond25

for.end127:                                       ; preds = %for.cond25
  br label %for.inc128

for.inc128:                                       ; preds = %for.end127
  %93 = load i32* %t, align 4
  %inc129 = add nsw i32 %93, 1
  store i32 %inc129, i32* %t, align 4
  br label %for.cond

for.end130:                                       ; preds = %for.cond
  call void (...)* bitcast (void ()* @g_sync to void (...)*)()
  %94 = load i32* @this_node, align 4
  %cmp131 = icmp eq i32 %94, 0
  br i1 %cmp131, label %if.then132, label %if.end141

if.then132:                                       ; preds = %for.end130
  %95 = load %struct._IO_FILE** %fp, align 8
  %call133 = call i32 @fflush(%struct._IO_FILE* %95)
  %96 = load %struct.gauge_file** %gf, align 8
  %filename134 = getelementptr inbounds %struct.gauge_file* %96, i32 0, i32 2
  %97 = load i8** %filename134, align 8
  %call135 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([44 x i8]* @.str152, i32 0, i32 0), i8* %97)
  %98 = load %struct.gauge_header** %gh, align 8
  %time_stamp136 = getelementptr inbounds %struct.gauge_header* %98, i32 0, i32 1
  %arraydecay137 = getelementptr inbounds [64 x i8]* %time_stamp136, i32 0, i32 0
  %call138 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([15 x i8]* @.str49220, i32 0, i32 0), i8* %arraydecay137)
  %99 = load %struct._IO_FILE** %fp, align 8
  %call139 = call i32 @fclose(%struct._IO_FILE* %99)
  %100 = load %struct._IO_FILE** @stdout, align 8
  %call140 = call i32 @fflush(%struct._IO_FILE* %100)
  br label %if.end141

if.end141:                                        ; preds = %if.then132, %for.end130
  %101 = load %struct.gauge_file** %gf, align 8
  ret %struct.gauge_file* %101
}

; Function Attrs: nounwind uwtable
define internal %struct.gauge_file* @restore_serial(i8* %filename) #0 {
entry:
  %filename.addr = alloca i8*, align 8
  %gf = alloca %struct.gauge_file*, align 8
  store i8* %filename, i8** %filename.addr, align 8
  %0 = load i8** %filename.addr, align 8
  %call = call %struct.gauge_file* @r_serial_i(i8* %0)
  store %struct.gauge_file* %call, %struct.gauge_file** %gf, align 8
  %1 = load %struct.gauge_file** %gf, align 8
  %header = getelementptr inbounds %struct.gauge_file* %1, i32 0, i32 1
  %2 = load %struct.gauge_header** %header, align 8
  %magic_number = getelementptr inbounds %struct.gauge_header* %2, i32 0, i32 0
  %3 = load i32* %magic_number, align 4
  %cmp = icmp eq i32 %3, 1111836489
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  %4 = load %struct.gauge_file** %gf, align 8
  call void @r_serial_arch(%struct.gauge_file* %4)
  br label %if.end

if.else:                                          ; preds = %entry
  %5 = load %struct.gauge_file** %gf, align 8
  call void @r_serial(%struct.gauge_file* %5)
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %6 = load %struct.gauge_file** %gf, align 8
  call void @r_serial_f(%struct.gauge_file* %6)
  %7 = load %struct.gauge_file** %gf, align 8
  ret %struct.gauge_file* %7
}

; Function Attrs: nounwind uwtable
define internal %struct.gauge_file* @restore_parallel(i8* %filename) #0 {
entry:
  %filename.addr = alloca i8*, align 8
  %gf = alloca %struct.gauge_file*, align 8
  store i8* %filename, i8** %filename.addr, align 8
  %0 = load i8** %filename.addr, align 8
  %call = call %struct.gauge_file* @r_parallel_i(i8* %0)
  store %struct.gauge_file* %call, %struct.gauge_file** %gf, align 8
  %1 = load %struct.gauge_file** %gf, align 8
  call void @r_parallel(%struct.gauge_file* %1)
  %2 = load %struct.gauge_file** %gf, align 8
  call void @r_parallel_f(%struct.gauge_file* %2)
  %3 = load %struct.gauge_file** %gf, align 8
  ret %struct.gauge_file* %3
}

; Function Attrs: nounwind uwtable
define internal %struct.gauge_file* @save_serial(i8* %filename) #0 {
entry:
  %filename.addr = alloca i8*, align 8
  %gf = alloca %struct.gauge_file*, align 8
  store i8* %filename, i8** %filename.addr, align 8
  %0 = load i8** %filename.addr, align 8
  %call = call %struct.gauge_file* @w_serial_i(i8* %0)
  store %struct.gauge_file* %call, %struct.gauge_file** %gf, align 8
  %1 = load %struct.gauge_file** %gf, align 8
  call void @w_serial(%struct.gauge_file* %1)
  %2 = load %struct.gauge_file** %gf, align 8
  call void @w_serial_f(%struct.gauge_file* %2)
  %3 = load %struct.gauge_file** %gf, align 8
  ret %struct.gauge_file* %3
}

; Function Attrs: nounwind uwtable
define internal %struct.gauge_file* @save_parallel(i8* %filename) #0 {
entry:
  %filename.addr = alloca i8*, align 8
  %gf = alloca %struct.gauge_file*, align 8
  store i8* %filename, i8** %filename.addr, align 8
  %0 = load i8** %filename.addr, align 8
  %call = call %struct.gauge_file* @w_parallel_i(i8* %0)
  store %struct.gauge_file* %call, %struct.gauge_file** %gf, align 8
  %1 = load %struct.gauge_file** %gf, align 8
  call void @w_parallel(%struct.gauge_file* %1)
  %2 = load %struct.gauge_file** %gf, align 8
  call void @w_parallel_f(%struct.gauge_file* %2)
  %3 = load %struct.gauge_file** %gf, align 8
  ret %struct.gauge_file* %3
}

; Function Attrs: nounwind uwtable
define internal %struct.gauge_file* @save_checkpoint(i8* %filename) #0 {
entry:
  %filename.addr = alloca i8*, align 8
  %gf = alloca %struct.gauge_file*, align 8
  store i8* %filename, i8** %filename.addr, align 8
  %0 = load i8** %filename.addr, align 8
  %call = call %struct.gauge_file* @w_checkpoint_i(i8* %0)
  store %struct.gauge_file* %call, %struct.gauge_file** %gf, align 8
  %1 = load %struct.gauge_file** %gf, align 8
  call void @w_checkpoint(%struct.gauge_file* %1)
  %2 = load %struct.gauge_file** %gf, align 8
  call void @w_parallel_f(%struct.gauge_file* %2)
  %3 = load %struct.gauge_file** %gf, align 8
  ret %struct.gauge_file* %3
}

; Function Attrs: nounwind uwtable
define internal %struct.gauge_file* @save_serial_archive(i8* %filename) #0 {
entry:
  %filename.addr = alloca i8*, align 8
  %currentnode = alloca i32, align 4
  %newnode = alloca i32, align 4
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %x = alloca i32, align 4
  %y = alloca i32, align 4
  %z = alloca i32, align 4
  %dir = alloca i32, align 4
  %lbuf = alloca [4 x %struct.su3_matrix], align 16
  %gf = alloca %struct.gauge_file*, align 8
  %gh = alloca %struct.gauge_header*, align 8
  %outfile = alloca %struct._IO_FILE*, align 8
  %s = alloca %struct.site*, align 8
  %chksum = alloca i32, align 4
  %utmp = alloca i32, align 4
  %p32 = alloca i32*, align 8
  %sums = alloca [30 x i8], align 16
  %uout = alloca double*, align 8
  %big_end_p = alloca i32, align 4
  %ssplaq = alloca double, align 8
  %stplaq = alloca double, align 8
  %avgtrace = alloca double, align 8
  %avgplaq = alloca double, align 8
  %tmpflt = alloca double, align 8
  %trace = alloca double, align 8
  %mu = alloca i32, align 4
  %a = alloca i32, align 4
  %b = alloca i32, align 4
  %vol3 = alloca i32, align 4
  %tslice = alloca i32, align 4
  %coerce = alloca %struct.complex, align 8
  store i8* %filename, i8** %filename.addr, align 8
  %call = call i32 @big_endian()
  store i32 %call, i32* %big_end_p, align 4
  %call1 = call %struct.gauge_file* @setup_output_gauge_file()
  store %struct.gauge_file* %call1, %struct.gauge_file** %gf, align 8
  %0 = load %struct.gauge_file** %gf, align 8
  %header = getelementptr inbounds %struct.gauge_file* %0, i32 0, i32 1
  %1 = load %struct.gauge_header** %header, align 8
  store %struct.gauge_header* %1, %struct.gauge_header** %gh, align 8
  call void @d_plaquette(double* %ssplaq, double* %stplaq)
  %2 = load double* %ssplaq, align 8
  %3 = load double* %stplaq, align 8
  %add = fadd double %2, %3
  %div = fdiv double %add, 6.000000e+00
  store double %div, double* %avgplaq, align 8
  store double 0.000000e+00, double* %trace, align 8
  store i32 0, i32* %chksum, align 4
  store i32 0, i32* %i, align 4
  %4 = load %struct.site** @lattice, align 8
  store %struct.site* %4, %struct.site** %s, align 8
  br label %for.cond

for.cond:                                         ; preds = %for.inc37, %entry
  %5 = load i32* %i, align 4
  %6 = load i32* @sites_on_node, align 4
  %cmp = icmp slt i32 %5, %6
  br i1 %cmp, label %for.body, label %for.end39

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %mu, align 4
  br label %for.cond2

for.cond2:                                        ; preds = %for.inc34, %for.body
  %7 = load i32* %mu, align 4
  %cmp3 = icmp slt i32 %7, 4
  br i1 %cmp3, label %for.body4, label %for.end36

for.body4:                                        ; preds = %for.cond2
  %8 = load i32* %mu, align 4
  %idxprom = sext i32 %8 to i64
  %9 = load %struct.site** %s, align 8
  %link = getelementptr inbounds %struct.site* %9, i32 0, i32 8
  %arrayidx = getelementptr inbounds [4 x %struct.su3_matrix]* %link, i32 0, i64 %idxprom
  %call5 = call { double, double } @trace_su3(%struct.su3_matrix* %arrayidx)
  %10 = bitcast %struct.complex* %coerce to { double, double }*
  %11 = getelementptr { double, double }* %10, i32 0, i32 0
  %12 = extractvalue { double, double } %call5, 0
  store double %12, double* %11, align 1
  %13 = getelementptr { double, double }* %10, i32 0, i32 1
  %14 = extractvalue { double, double } %call5, 1
  store double %14, double* %13, align 1
  %real = getelementptr inbounds %struct.complex* %coerce, i32 0, i32 0
  %15 = load double* %real, align 8
  %16 = load double* %trace, align 8
  %add6 = fadd double %16, %15
  store double %add6, double* %trace, align 8
  store i32 0, i32* %a, align 4
  br label %for.cond7

for.cond7:                                        ; preds = %for.inc31, %for.body4
  %17 = load i32* %a, align 4
  %cmp8 = icmp slt i32 %17, 2
  br i1 %cmp8, label %for.body9, label %for.end33

for.body9:                                        ; preds = %for.cond7
  store i32 0, i32* %b, align 4
  br label %for.cond10

for.cond10:                                       ; preds = %for.inc, %for.body9
  %18 = load i32* %b, align 4
  %cmp11 = icmp slt i32 %18, 3
  br i1 %cmp11, label %for.body12, label %for.end

for.body12:                                       ; preds = %for.cond10
  %19 = load i32* %b, align 4
  %idxprom13 = sext i32 %19 to i64
  %20 = load i32* %a, align 4
  %idxprom14 = sext i32 %20 to i64
  %21 = load i32* %mu, align 4
  %idxprom15 = sext i32 %21 to i64
  %22 = load %struct.site** %s, align 8
  %link16 = getelementptr inbounds %struct.site* %22, i32 0, i32 8
  %arrayidx17 = getelementptr inbounds [4 x %struct.su3_matrix]* %link16, i32 0, i64 %idxprom15
  %e = getelementptr inbounds %struct.su3_matrix* %arrayidx17, i32 0, i32 0
  %arrayidx18 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e, i32 0, i64 %idxprom14
  %arrayidx19 = getelementptr inbounds [3 x %struct.complex]* %arrayidx18, i32 0, i64 %idxprom13
  %real20 = getelementptr inbounds %struct.complex* %arrayidx19, i32 0, i32 0
  %23 = load double* %real20, align 8
  store double %23, double* %tmpflt, align 8
  %24 = bitcast double* %tmpflt to i32*
  store i32* %24, i32** %p32, align 8
  %25 = load i32** %p32, align 8
  %26 = load i32* %25, align 4
  %27 = load i32* %chksum, align 4
  %add21 = add i32 %27, %26
  store i32 %add21, i32* %chksum, align 4
  %28 = load i32* %b, align 4
  %idxprom22 = sext i32 %28 to i64
  %29 = load i32* %a, align 4
  %idxprom23 = sext i32 %29 to i64
  %30 = load i32* %mu, align 4
  %idxprom24 = sext i32 %30 to i64
  %31 = load %struct.site** %s, align 8
  %link25 = getelementptr inbounds %struct.site* %31, i32 0, i32 8
  %arrayidx26 = getelementptr inbounds [4 x %struct.su3_matrix]* %link25, i32 0, i64 %idxprom24
  %e27 = getelementptr inbounds %struct.su3_matrix* %arrayidx26, i32 0, i32 0
  %arrayidx28 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e27, i32 0, i64 %idxprom23
  %arrayidx29 = getelementptr inbounds [3 x %struct.complex]* %arrayidx28, i32 0, i64 %idxprom22
  %imag = getelementptr inbounds %struct.complex* %arrayidx29, i32 0, i32 1
  %32 = load double* %imag, align 8
  store double %32, double* %tmpflt, align 8
  %33 = bitcast double* %tmpflt to i32*
  store i32* %33, i32** %p32, align 8
  %34 = load i32** %p32, align 8
  %35 = load i32* %34, align 4
  %36 = load i32* %chksum, align 4
  %add30 = add i32 %36, %35
  store i32 %add30, i32* %chksum, align 4
  br label %for.inc

for.inc:                                          ; preds = %for.body12
  %37 = load i32* %b, align 4
  %inc = add nsw i32 %37, 1
  store i32 %inc, i32* %b, align 4
  br label %for.cond10

for.end:                                          ; preds = %for.cond10
  br label %for.inc31

for.inc31:                                        ; preds = %for.end
  %38 = load i32* %a, align 4
  %inc32 = add nsw i32 %38, 1
  store i32 %inc32, i32* %a, align 4
  br label %for.cond7

for.end33:                                        ; preds = %for.cond7
  br label %for.inc34

for.inc34:                                        ; preds = %for.end33
  %39 = load i32* %mu, align 4
  %inc35 = add nsw i32 %39, 1
  store i32 %inc35, i32* %mu, align 4
  br label %for.cond2

for.end36:                                        ; preds = %for.cond2
  br label %for.inc37

for.inc37:                                        ; preds = %for.end36
  %40 = load i32* %i, align 4
  %inc38 = add nsw i32 %40, 1
  store i32 %inc38, i32* %i, align 4
  %41 = load %struct.site** %s, align 8
  %incdec.ptr = getelementptr inbounds %struct.site* %41, i32 1
  store %struct.site* %incdec.ptr, %struct.site** %s, align 8
  br label %for.cond

for.end39:                                        ; preds = %for.cond
  call void @g_doublesum(double* %trace)
  %42 = load double* %trace, align 8
  %43 = load i32* @volume, align 4
  %mul = mul nsw i32 %43, 12
  %conv = sitofp i32 %mul to double
  %div40 = fdiv double %42, %conv
  store double %div40, double* %avgtrace, align 8
  store i32 1, i32* %j, align 4
  br label %for.cond41

for.cond41:                                       ; preds = %for.inc58, %for.end39
  %44 = load i32* %j, align 4
  %call42 = call i32 (...)* bitcast (i32 ()* @numnodes to i32 (...)*)()
  %cmp43 = icmp slt i32 %44, %call42
  br i1 %cmp43, label %for.body45, label %for.end60

for.body45:                                       ; preds = %for.cond41
  %45 = load i32* @this_node, align 4
  %cmp46 = icmp eq i32 %45, 0
  br i1 %cmp46, label %if.then, label %if.end

if.then:                                          ; preds = %for.body45
  %arraydecay = getelementptr inbounds [4 x %struct.su3_matrix]* %lbuf, i32 0, i32 0
  %46 = bitcast %struct.su3_matrix* %arraydecay to i8*
  %47 = load i32* %j, align 4
  call void @send_field(i8* %46, i32 4, i32 %47)
  br label %if.end

if.end:                                           ; preds = %if.then, %for.body45
  %48 = load i32* @this_node, align 4
  %49 = load i32* %j, align 4
  %cmp48 = icmp eq i32 %48, %49
  br i1 %cmp48, label %if.then50, label %if.end52

if.then50:                                        ; preds = %if.end
  %arraydecay51 = getelementptr inbounds [4 x %struct.su3_matrix]* %lbuf, i32 0, i32 0
  %50 = bitcast %struct.su3_matrix* %arraydecay51 to i8*
  call void @get_field(i8* %50, i32 4)
  call void @send_integer(i32 0, i32* %chksum)
  br label %if.end52

if.end52:                                         ; preds = %if.then50, %if.end
  %51 = load i32* @this_node, align 4
  %cmp53 = icmp eq i32 %51, 0
  br i1 %cmp53, label %if.then55, label %if.end57

if.then55:                                        ; preds = %if.end52
  call void @receive_integer(i32* %utmp)
  %52 = load i32* %utmp, align 4
  %53 = load i32* %chksum, align 4
  %add56 = add i32 %53, %52
  store i32 %add56, i32* %chksum, align 4
  br label %if.end57

if.end57:                                         ; preds = %if.then55, %if.end52
  br label %for.inc58

for.inc58:                                        ; preds = %if.end57
  %54 = load i32* %j, align 4
  %inc59 = add nsw i32 %54, 1
  store i32 %inc59, i32* %j, align 4
  br label %for.cond41

for.end60:                                        ; preds = %for.cond41
  %55 = load i32* @this_node, align 4
  %cmp61 = icmp eq i32 %55, 0
  br i1 %cmp61, label %if.then63, label %if.end110

if.then63:                                        ; preds = %for.end60
  %56 = load double* %avgtrace, align 8
  %call64 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([12 x i8]* @.str153, i32 0, i32 0), double %56)
  %57 = load i32* %chksum, align 4
  %call65 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([15 x i8]* @.str154, i32 0, i32 0), i32 %57)
  %58 = load i32* %chksum, align 4
  %call66 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([17 x i8]* @.str155, i32 0, i32 0), i32 %58)
  %59 = load double* %avgplaq, align 8
  %call67 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([16 x i8]* @.str156, i32 0, i32 0), double %59)
  %60 = load i8** %filename.addr, align 8
  %call68 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([38 x i8]* @.str157, i32 0, i32 0), i8* %60)
  %61 = load i8** %filename.addr, align 8
  %call69 = call %struct._IO_FILE* @fopen(i8* %61, i8* getelementptr inbounds ([2 x i8]* @.str26197, i32 0, i32 0))
  store %struct._IO_FILE* %call69, %struct._IO_FILE** %outfile, align 8
  %62 = load %struct._IO_FILE** %outfile, align 8
  %cmp70 = icmp eq %struct._IO_FILE* %62, null
  br i1 %cmp70, label %if.then72, label %if.end74

if.then72:                                        ; preds = %if.then63
  %63 = load i8** %filename.addr, align 8
  %call73 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([31 x i8]* @.str158240, i32 0, i32 0), i8* %63)
  call void @terminate(i32 1)
  br label %if.end74

if.end74:                                         ; preds = %if.then72, %if.then63
  %64 = load %struct._IO_FILE** %outfile, align 8
  %call75 = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %64, i8* getelementptr inbounds ([14 x i8]* @.str159, i32 0, i32 0))
  %65 = load %struct._IO_FILE** %outfile, align 8
  %call76 = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %65, i8* getelementptr inbounds ([25 x i8]* @.str160, i32 0, i32 0))
  %66 = load %struct._IO_FILE** %outfile, align 8
  %67 = load i32* @nx, align 4
  %call77 = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %66, i8* getelementptr inbounds ([18 x i8]* @.str161, i32 0, i32 0), i32 %67)
  %68 = load %struct._IO_FILE** %outfile, align 8
  %69 = load i32* @ny, align 4
  %call78 = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %68, i8* getelementptr inbounds ([18 x i8]* @.str162, i32 0, i32 0), i32 %69)
  %70 = load %struct._IO_FILE** %outfile, align 8
  %71 = load i32* @nz, align 4
  %call79 = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %70, i8* getelementptr inbounds ([18 x i8]* @.str163, i32 0, i32 0), i32 %71)
  %72 = load %struct._IO_FILE** %outfile, align 8
  %73 = load i32* @nt, align 4
  %call80 = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %72, i8* getelementptr inbounds ([18 x i8]* @.str164, i32 0, i32 0), i32 %73)
  %74 = load %struct._IO_FILE** %outfile, align 8
  %75 = load i32* %chksum, align 4
  %call81 = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %74, i8* getelementptr inbounds ([15 x i8]* @.str165, i32 0, i32 0), i32 %75)
  %76 = load %struct._IO_FILE** %outfile, align 8
  %77 = load double* %avgtrace, align 8
  %call82 = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %76, i8* getelementptr inbounds ([20 x i8]* @.str166, i32 0, i32 0), double %77)
  %78 = load %struct._IO_FILE** %outfile, align 8
  %79 = load double* %avgplaq, align 8
  %call83 = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %78, i8* getelementptr inbounds ([19 x i8]* @.str167, i32 0, i32 0), double %79)
  %80 = load %struct._IO_FILE** %outfile, align 8
  %call84 = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %80, i8* getelementptr inbounds ([18 x i8]* @.str168, i32 0, i32 0), i8* getelementptr inbounds ([256 x i8]* @ensemble_id, i32 0, i32 0))
  %81 = load %struct._IO_FILE** %outfile, align 8
  %82 = load i32* @sequence_number, align 4
  %call85 = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %81, i8* getelementptr inbounds ([22 x i8]* @.str169, i32 0, i32 0), i32 %82)
  %83 = load %struct._IO_FILE** %outfile, align 8
  %call86 = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %83, i8* getelementptr inbounds ([33 x i8]* @.str170, i32 0, i32 0))
  %84 = load %struct._IO_FILE** %outfile, align 8
  %85 = load %struct.gauge_header** %gh, align 8
  %time_stamp = getelementptr inbounds %struct.gauge_header* %85, i32 0, i32 1
  %arraydecay87 = getelementptr inbounds [64 x i8]* %time_stamp, i32 0, i32 0
  %call88 = call i32 @write_gauge_info_item(%struct._IO_FILE* %84, i8* getelementptr inbounds ([11 x i8]* @.str12183, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8]* @.str28199, i32 0, i32 0), i8* %arraydecay87, i32 0, i32 0)
  %arraydecay89 = getelementptr inbounds [30 x i8]* %sums, i32 0, i32 0
  %86 = load %struct.gauge_file** %gf, align 8
  %check = getelementptr inbounds %struct.gauge_file* %86, i32 0, i32 6
  %sum29 = getelementptr inbounds %struct.gauge_check* %check, i32 0, i32 1
  %87 = load i32* %sum29, align 4
  %88 = load %struct.gauge_file** %gf, align 8
  %check90 = getelementptr inbounds %struct.gauge_file* %88, i32 0, i32 6
  %sum31 = getelementptr inbounds %struct.gauge_check* %check90, i32 0, i32 0
  %89 = load i32* %sum31, align 4
  %call91 = call i32 (i8*, i8*, ...)* @sprintf(i8* %arraydecay89, i8* getelementptr inbounds ([6 x i8]* @.str29200, i32 0, i32 0), i32 %87, i32 %89) #2
  %90 = load %struct._IO_FILE** %outfile, align 8
  %arraydecay92 = getelementptr inbounds [30 x i8]* %sums, i32 0, i32 0
  %call93 = call i32 @write_gauge_info_item(%struct._IO_FILE* %90, i8* getelementptr inbounds ([10 x i8]* @.str30201, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8]* @.str28199, i32 0, i32 0), i8* %arraydecay92, i32 0, i32 0)
  %91 = load %struct._IO_FILE** %outfile, align 8
  %call94 = call i32 @write_gauge_info_item(%struct._IO_FILE* %91, i8* getelementptr inbounds ([3 x i8]* @.str31202, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8]* @.str171, i32 0, i32 0), i8* bitcast (i32* @nx to i8*), i32 0, i32 0)
  %92 = load %struct._IO_FILE** %outfile, align 8
  %call95 = call i32 @write_gauge_info_item(%struct._IO_FILE* %92, i8* getelementptr inbounds ([3 x i8]* @.str32203, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8]* @.str171, i32 0, i32 0), i8* bitcast (i32* @ny to i8*), i32 0, i32 0)
  %93 = load %struct._IO_FILE** %outfile, align 8
  %call96 = call i32 @write_gauge_info_item(%struct._IO_FILE* %93, i8* getelementptr inbounds ([3 x i8]* @.str33204, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8]* @.str171, i32 0, i32 0), i8* bitcast (i32* @nz to i8*), i32 0, i32 0)
  %94 = load %struct._IO_FILE** %outfile, align 8
  %call97 = call i32 @write_gauge_info_item(%struct._IO_FILE* %94, i8* getelementptr inbounds ([3 x i8]* @.str34205, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8]* @.str171, i32 0, i32 0), i8* bitcast (i32* @nt to i8*), i32 0, i32 0)
  %95 = load %struct._IO_FILE** %outfile, align 8
  call void @write_appl_gauge_info(%struct._IO_FILE* %95)
  %96 = load %struct._IO_FILE** %outfile, align 8
  %call98 = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %96, i8* getelementptr inbounds ([33 x i8]* @.str171241, i32 0, i32 0))
  %97 = load %struct._IO_FILE** %outfile, align 8
  %call99 = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %97, i8* getelementptr inbounds ([12 x i8]* @.str6177, i32 0, i32 0))
  %98 = load i32* @nx, align 4
  %99 = load i32* @ny, align 4
  %mul100 = mul nsw i32 %98, %99
  %100 = load i32* @nz, align 4
  %mul101 = mul nsw i32 %mul100, %100
  store i32 %mul101, i32* %vol3, align 4
  %101 = load i32* %vol3, align 4
  %mul102 = mul nsw i32 48, %101
  %conv103 = sext i32 %mul102 to i64
  %call104 = call noalias i8* @calloc(i64 %conv103, i64 8) #2
  %102 = bitcast i8* %call104 to double*
  store double* %102, double** %uout, align 8
  %103 = load double** %uout, align 8
  %cmp105 = icmp eq double* %103, null
  br i1 %cmp105, label %if.then107, label %if.end109

if.then107:                                       ; preds = %if.end74
  %call108 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([29 x i8]* @.str172, i32 0, i32 0))
  call void @terminate(i32 1)
  br label %if.end109

if.end109:                                        ; preds = %if.then107, %if.end74
  br label %if.end110

if.end110:                                        ; preds = %if.end109, %for.end60
  call void (...)* bitcast (void ()* @g_sync to void (...)*)()
  store i32 0, i32* %currentnode, align 4
  store i32 0, i32* %tslice, align 4
  br label %for.cond111

for.cond111:                                      ; preds = %for.inc321, %if.end110
  %104 = load i32* %tslice, align 4
  %105 = load i32* @nt, align 4
  %cmp112 = icmp slt i32 %104, %105
  br i1 %cmp112, label %for.body114, label %for.end323

for.body114:                                      ; preds = %for.cond111
  store i32 0, i32* %j, align 4
  store i32 0, i32* %z, align 4
  br label %for.cond115

for.cond115:                                      ; preds = %for.inc301, %for.body114
  %106 = load i32* %z, align 4
  %107 = load i32* @nz, align 4
  %cmp116 = icmp slt i32 %106, %107
  br i1 %cmp116, label %for.body118, label %for.end303

for.body118:                                      ; preds = %for.cond115
  store i32 0, i32* %y, align 4
  br label %for.cond119

for.cond119:                                      ; preds = %for.inc298, %for.body118
  %108 = load i32* %y, align 4
  %109 = load i32* @ny, align 4
  %cmp120 = icmp slt i32 %108, %109
  br i1 %cmp120, label %for.body122, label %for.end300

for.body122:                                      ; preds = %for.cond119
  store i32 0, i32* %x, align 4
  br label %for.cond123

for.cond123:                                      ; preds = %for.inc295, %for.body122
  %110 = load i32* %x, align 4
  %111 = load i32* @nx, align 4
  %cmp124 = icmp slt i32 %110, %111
  br i1 %cmp124, label %for.body126, label %for.end297

for.body126:                                      ; preds = %for.cond123
  %112 = load i32* %x, align 4
  %113 = load i32* %y, align 4
  %114 = load i32* %z, align 4
  %115 = load i32* %tslice, align 4
  %call127 = call i32 @node_number(i32 %112, i32 %113, i32 %114, i32 %115)
  store i32 %call127, i32* %newnode, align 4
  %116 = load i32* %newnode, align 4
  %117 = load i32* %currentnode, align 4
  %cmp128 = icmp ne i32 %116, %117
  br i1 %cmp128, label %if.then130, label %if.end146

if.then130:                                       ; preds = %for.body126
  %118 = load i32* @this_node, align 4
  %cmp131 = icmp eq i32 %118, 0
  br i1 %cmp131, label %land.lhs.true, label %if.end137

land.lhs.true:                                    ; preds = %if.then130
  %119 = load i32* %newnode, align 4
  %cmp133 = icmp ne i32 %119, 0
  br i1 %cmp133, label %if.then135, label %if.end137

if.then135:                                       ; preds = %land.lhs.true
  %arraydecay136 = getelementptr inbounds [4 x %struct.su3_matrix]* %lbuf, i32 0, i32 0
  %120 = bitcast %struct.su3_matrix* %arraydecay136 to i8*
  %121 = load i32* %newnode, align 4
  call void @send_field(i8* %120, i32 4, i32 %121)
  br label %if.end137

if.end137:                                        ; preds = %if.then135, %land.lhs.true, %if.then130
  %122 = load i32* @this_node, align 4
  %123 = load i32* %newnode, align 4
  %cmp138 = icmp eq i32 %122, %123
  br i1 %cmp138, label %land.lhs.true140, label %if.end145

land.lhs.true140:                                 ; preds = %if.end137
  %124 = load i32* %newnode, align 4
  %cmp141 = icmp ne i32 %124, 0
  br i1 %cmp141, label %if.then143, label %if.end145

if.then143:                                       ; preds = %land.lhs.true140
  %arraydecay144 = getelementptr inbounds [4 x %struct.su3_matrix]* %lbuf, i32 0, i32 0
  %125 = bitcast %struct.su3_matrix* %arraydecay144 to i8*
  call void @get_field(i8* %125, i32 4)
  br label %if.end145

if.end145:                                        ; preds = %if.then143, %land.lhs.true140, %if.end137
  %126 = load i32* %newnode, align 4
  store i32 %126, i32* %currentnode, align 4
  br label %if.end146

if.end146:                                        ; preds = %if.end145, %for.body126
  %127 = load i32* @this_node, align 4
  %cmp147 = icmp eq i32 %127, 0
  br i1 %cmp147, label %if.then149, label %if.else273

if.then149:                                       ; preds = %if.end146
  %128 = load i32* %currentnode, align 4
  %cmp150 = icmp eq i32 %128, 0
  br i1 %cmp150, label %if.then152, label %if.else

if.then152:                                       ; preds = %if.then149
  %129 = load i32* %x, align 4
  %130 = load i32* %y, align 4
  %131 = load i32* %z, align 4
  %132 = load i32* %tslice, align 4
  %call153 = call i32 @node_index(i32 %129, i32 %130, i32 %131, i32 %132)
  %idxprom154 = sext i32 %call153 to i64
  %133 = load %struct.site** @lattice, align 8
  %arrayidx155 = getelementptr inbounds %struct.site* %133, i64 %idxprom154
  store %struct.site* %arrayidx155, %struct.site** %s, align 8
  store i32 0, i32* %mu, align 4
  br label %for.cond156

for.cond156:                                      ; preds = %for.inc211, %if.then152
  %134 = load i32* %mu, align 4
  %cmp157 = icmp slt i32 %134, 4
  br i1 %cmp157, label %for.body159, label %for.end213

for.body159:                                      ; preds = %for.cond156
  store i32 0, i32* %a, align 4
  br label %for.cond160

for.cond160:                                      ; preds = %for.inc208, %for.body159
  %135 = load i32* %a, align 4
  %cmp161 = icmp slt i32 %135, 2
  br i1 %cmp161, label %for.body163, label %for.end210

for.body163:                                      ; preds = %for.cond160
  store i32 0, i32* %b, align 4
  br label %for.cond164

for.cond164:                                      ; preds = %for.inc205, %for.body163
  %136 = load i32* %b, align 4
  %cmp165 = icmp slt i32 %136, 3
  br i1 %cmp165, label %for.body167, label %for.end207

for.body167:                                      ; preds = %for.cond164
  %137 = load i32* %b, align 4
  %idxprom168 = sext i32 %137 to i64
  %138 = load i32* %a, align 4
  %idxprom169 = sext i32 %138 to i64
  %139 = load i32* %mu, align 4
  %idxprom170 = sext i32 %139 to i64
  %140 = load %struct.site** %s, align 8
  %link171 = getelementptr inbounds %struct.site* %140, i32 0, i32 8
  %arrayidx172 = getelementptr inbounds [4 x %struct.su3_matrix]* %link171, i32 0, i64 %idxprom170
  %e173 = getelementptr inbounds %struct.su3_matrix* %arrayidx172, i32 0, i32 0
  %arrayidx174 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e173, i32 0, i64 %idxprom169
  %arrayidx175 = getelementptr inbounds [3 x %struct.complex]* %arrayidx174, i32 0, i64 %idxprom168
  %real176 = getelementptr inbounds %struct.complex* %arrayidx175, i32 0, i32 0
  %141 = load double* %real176, align 8
  %142 = load i32* %b, align 4
  %143 = load i32* %a, align 4
  %mul177 = mul nsw i32 3, %143
  %add178 = add nsw i32 %142, %mul177
  %mul179 = mul nsw i32 2, %add178
  %144 = load i32* %mu, align 4
  %mul180 = mul nsw i32 12, %144
  %add181 = add nsw i32 %mul179, %mul180
  %145 = load i32* %j, align 4
  %mul182 = mul nsw i32 48, %145
  %add183 = add nsw i32 %add181, %mul182
  %idxprom184 = sext i32 %add183 to i64
  %146 = load double** %uout, align 8
  %arrayidx185 = getelementptr inbounds double* %146, i64 %idxprom184
  store double %141, double* %arrayidx185, align 8
  %147 = load i32* %b, align 4
  %idxprom186 = sext i32 %147 to i64
  %148 = load i32* %a, align 4
  %idxprom187 = sext i32 %148 to i64
  %149 = load i32* %mu, align 4
  %idxprom188 = sext i32 %149 to i64
  %150 = load %struct.site** %s, align 8
  %link189 = getelementptr inbounds %struct.site* %150, i32 0, i32 8
  %arrayidx190 = getelementptr inbounds [4 x %struct.su3_matrix]* %link189, i32 0, i64 %idxprom188
  %e191 = getelementptr inbounds %struct.su3_matrix* %arrayidx190, i32 0, i32 0
  %arrayidx192 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e191, i32 0, i64 %idxprom187
  %arrayidx193 = getelementptr inbounds [3 x %struct.complex]* %arrayidx192, i32 0, i64 %idxprom186
  %imag194 = getelementptr inbounds %struct.complex* %arrayidx193, i32 0, i32 1
  %151 = load double* %imag194, align 8
  %152 = load i32* %b, align 4
  %153 = load i32* %a, align 4
  %mul195 = mul nsw i32 3, %153
  %add196 = add nsw i32 %152, %mul195
  %mul197 = mul nsw i32 2, %add196
  %add198 = add nsw i32 1, %mul197
  %154 = load i32* %mu, align 4
  %mul199 = mul nsw i32 12, %154
  %add200 = add nsw i32 %add198, %mul199
  %155 = load i32* %j, align 4
  %mul201 = mul nsw i32 48, %155
  %add202 = add nsw i32 %add200, %mul201
  %idxprom203 = sext i32 %add202 to i64
  %156 = load double** %uout, align 8
  %arrayidx204 = getelementptr inbounds double* %156, i64 %idxprom203
  store double %151, double* %arrayidx204, align 8
  br label %for.inc205

for.inc205:                                       ; preds = %for.body167
  %157 = load i32* %b, align 4
  %inc206 = add nsw i32 %157, 1
  store i32 %inc206, i32* %b, align 4
  br label %for.cond164

for.end207:                                       ; preds = %for.cond164
  br label %for.inc208

for.inc208:                                       ; preds = %for.end207
  %158 = load i32* %a, align 4
  %inc209 = add nsw i32 %158, 1
  store i32 %inc209, i32* %a, align 4
  br label %for.cond160

for.end210:                                       ; preds = %for.cond160
  br label %for.inc211

for.inc211:                                       ; preds = %for.end210
  %159 = load i32* %mu, align 4
  %inc212 = add nsw i32 %159, 1
  store i32 %inc212, i32* %mu, align 4
  br label %for.cond156

for.end213:                                       ; preds = %for.cond156
  br label %if.end271

if.else:                                          ; preds = %if.then149
  %arraydecay214 = getelementptr inbounds [4 x %struct.su3_matrix]* %lbuf, i32 0, i32 0
  %160 = bitcast %struct.su3_matrix* %arraydecay214 to i8*
  call void @get_field(i8* %160, i32 576)
  store i32 0, i32* %mu, align 4
  br label %for.cond215

for.cond215:                                      ; preds = %for.inc268, %if.else
  %161 = load i32* %mu, align 4
  %cmp216 = icmp slt i32 %161, 4
  br i1 %cmp216, label %for.body218, label %for.end270

for.body218:                                      ; preds = %for.cond215
  store i32 0, i32* %a, align 4
  br label %for.cond219

for.cond219:                                      ; preds = %for.inc265, %for.body218
  %162 = load i32* %a, align 4
  %cmp220 = icmp slt i32 %162, 2
  br i1 %cmp220, label %for.body222, label %for.end267

for.body222:                                      ; preds = %for.cond219
  store i32 0, i32* %b, align 4
  br label %for.cond223

for.cond223:                                      ; preds = %for.inc262, %for.body222
  %163 = load i32* %b, align 4
  %cmp224 = icmp slt i32 %163, 3
  br i1 %cmp224, label %for.body226, label %for.end264

for.body226:                                      ; preds = %for.cond223
  %164 = load i32* %b, align 4
  %idxprom227 = sext i32 %164 to i64
  %165 = load i32* %a, align 4
  %idxprom228 = sext i32 %165 to i64
  %166 = load i32* %mu, align 4
  %idxprom229 = sext i32 %166 to i64
  %arrayidx230 = getelementptr inbounds [4 x %struct.su3_matrix]* %lbuf, i32 0, i64 %idxprom229
  %e231 = getelementptr inbounds %struct.su3_matrix* %arrayidx230, i32 0, i32 0
  %arrayidx232 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e231, i32 0, i64 %idxprom228
  %arrayidx233 = getelementptr inbounds [3 x %struct.complex]* %arrayidx232, i32 0, i64 %idxprom227
  %real234 = getelementptr inbounds %struct.complex* %arrayidx233, i32 0, i32 0
  %167 = load double* %real234, align 8
  %168 = load i32* %b, align 4
  %169 = load i32* %a, align 4
  %mul235 = mul nsw i32 3, %169
  %add236 = add nsw i32 %168, %mul235
  %mul237 = mul nsw i32 2, %add236
  %170 = load i32* %mu, align 4
  %mul238 = mul nsw i32 12, %170
  %add239 = add nsw i32 %mul237, %mul238
  %171 = load i32* %j, align 4
  %mul240 = mul nsw i32 48, %171
  %add241 = add nsw i32 %add239, %mul240
  %idxprom242 = sext i32 %add241 to i64
  %172 = load double** %uout, align 8
  %arrayidx243 = getelementptr inbounds double* %172, i64 %idxprom242
  store double %167, double* %arrayidx243, align 8
  %173 = load i32* %b, align 4
  %idxprom244 = sext i32 %173 to i64
  %174 = load i32* %a, align 4
  %idxprom245 = sext i32 %174 to i64
  %175 = load i32* %mu, align 4
  %idxprom246 = sext i32 %175 to i64
  %arrayidx247 = getelementptr inbounds [4 x %struct.su3_matrix]* %lbuf, i32 0, i64 %idxprom246
  %e248 = getelementptr inbounds %struct.su3_matrix* %arrayidx247, i32 0, i32 0
  %arrayidx249 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e248, i32 0, i64 %idxprom245
  %arrayidx250 = getelementptr inbounds [3 x %struct.complex]* %arrayidx249, i32 0, i64 %idxprom244
  %imag251 = getelementptr inbounds %struct.complex* %arrayidx250, i32 0, i32 1
  %176 = load double* %imag251, align 8
  %177 = load i32* %b, align 4
  %178 = load i32* %a, align 4
  %mul252 = mul nsw i32 3, %178
  %add253 = add nsw i32 %177, %mul252
  %mul254 = mul nsw i32 2, %add253
  %add255 = add nsw i32 1, %mul254
  %179 = load i32* %mu, align 4
  %mul256 = mul nsw i32 12, %179
  %add257 = add nsw i32 %add255, %mul256
  %180 = load i32* %j, align 4
  %mul258 = mul nsw i32 48, %180
  %add259 = add nsw i32 %add257, %mul258
  %idxprom260 = sext i32 %add259 to i64
  %181 = load double** %uout, align 8
  %arrayidx261 = getelementptr inbounds double* %181, i64 %idxprom260
  store double %176, double* %arrayidx261, align 8
  br label %for.inc262

for.inc262:                                       ; preds = %for.body226
  %182 = load i32* %b, align 4
  %inc263 = add nsw i32 %182, 1
  store i32 %inc263, i32* %b, align 4
  br label %for.cond223

for.end264:                                       ; preds = %for.cond223
  br label %for.inc265

for.inc265:                                       ; preds = %for.end264
  %183 = load i32* %a, align 4
  %inc266 = add nsw i32 %183, 1
  store i32 %inc266, i32* %a, align 4
  br label %for.cond219

for.end267:                                       ; preds = %for.cond219
  br label %for.inc268

for.inc268:                                       ; preds = %for.end267
  %184 = load i32* %mu, align 4
  %inc269 = add nsw i32 %184, 1
  store i32 %inc269, i32* %mu, align 4
  br label %for.cond215

for.end270:                                       ; preds = %for.cond215
  br label %if.end271

if.end271:                                        ; preds = %for.end270, %for.end213
  %185 = load i32* %j, align 4
  %inc272 = add nsw i32 %185, 1
  store i32 %inc272, i32* %j, align 4
  br label %if.end294

if.else273:                                       ; preds = %if.end146
  %186 = load i32* @this_node, align 4
  %187 = load i32* %currentnode, align 4
  %cmp274 = icmp eq i32 %186, %187
  br i1 %cmp274, label %if.then276, label %if.end293

if.then276:                                       ; preds = %if.else273
  %188 = load i32* %x, align 4
  %189 = load i32* %y, align 4
  %190 = load i32* %z, align 4
  %191 = load i32* %tslice, align 4
  %call277 = call i32 @node_index(i32 %188, i32 %189, i32 %190, i32 %191)
  store i32 %call277, i32* %i, align 4
  store i32 0, i32* %dir, align 4
  br label %for.cond278

for.cond278:                                      ; preds = %for.inc289, %if.then276
  %192 = load i32* %dir, align 4
  %cmp279 = icmp sle i32 %192, 3
  br i1 %cmp279, label %for.body281, label %for.end291

for.body281:                                      ; preds = %for.cond278
  %193 = load i32* %dir, align 4
  %idxprom282 = sext i32 %193 to i64
  %arrayidx283 = getelementptr inbounds [4 x %struct.su3_matrix]* %lbuf, i32 0, i64 %idxprom282
  %194 = load i32* %dir, align 4
  %idxprom284 = sext i32 %194 to i64
  %195 = load i32* %i, align 4
  %idxprom285 = sext i32 %195 to i64
  %196 = load %struct.site** @lattice, align 8
  %arrayidx286 = getelementptr inbounds %struct.site* %196, i64 %idxprom285
  %link287 = getelementptr inbounds %struct.site* %arrayidx286, i32 0, i32 8
  %arrayidx288 = getelementptr inbounds [4 x %struct.su3_matrix]* %link287, i32 0, i64 %idxprom284
  %197 = bitcast %struct.su3_matrix* %arrayidx283 to i8*
  %198 = bitcast %struct.su3_matrix* %arrayidx288 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %197, i8* %198, i64 144, i32 8, i1 false)
  br label %for.inc289

for.inc289:                                       ; preds = %for.body281
  %199 = load i32* %dir, align 4
  %inc290 = add nsw i32 %199, 1
  store i32 %inc290, i32* %dir, align 4
  br label %for.cond278

for.end291:                                       ; preds = %for.cond278
  %arraydecay292 = getelementptr inbounds [4 x %struct.su3_matrix]* %lbuf, i32 0, i32 0
  %200 = bitcast %struct.su3_matrix* %arraydecay292 to i8*
  call void @send_field(i8* %200, i32 576, i32 0)
  br label %if.end293

if.end293:                                        ; preds = %for.end291, %if.else273
  br label %if.end294

if.end294:                                        ; preds = %if.end293, %if.end271
  br label %for.inc295

for.inc295:                                       ; preds = %if.end294
  %201 = load i32* %x, align 4
  %inc296 = add nsw i32 %201, 1
  store i32 %inc296, i32* %x, align 4
  br label %for.cond123

for.end297:                                       ; preds = %for.cond123
  br label %for.inc298

for.inc298:                                       ; preds = %for.end297
  %202 = load i32* %y, align 4
  %inc299 = add nsw i32 %202, 1
  store i32 %inc299, i32* %y, align 4
  br label %for.cond119

for.end300:                                       ; preds = %for.cond119
  br label %for.inc301

for.inc301:                                       ; preds = %for.end300
  %203 = load i32* %z, align 4
  %inc302 = add nsw i32 %203, 1
  store i32 %inc302, i32* %z, align 4
  br label %for.cond115

for.end303:                                       ; preds = %for.cond115
  %204 = load i32* @this_node, align 4
  %cmp304 = icmp eq i32 %204, 0
  br i1 %cmp304, label %if.then306, label %if.end320

if.then306:                                       ; preds = %for.end303
  %205 = load i32* %big_end_p, align 4
  %tobool = icmp ne i32 %205, 0
  br i1 %tobool, label %if.end309, label %if.then307

if.then307:                                       ; preds = %if.then306
  %206 = load double** %uout, align 8
  %207 = bitcast double* %206 to i32*
  %208 = load i32* %vol3, align 4
  %mul308 = mul nsw i32 48, %208
  call void @byterevn(i32* %207, i32 %mul308)
  br label %if.end309

if.end309:                                        ; preds = %if.then307, %if.then306
  %209 = load double** %uout, align 8
  %210 = bitcast double* %209 to i8*
  %211 = load i32* %vol3, align 4
  %mul310 = mul nsw i32 48, %211
  %conv311 = sext i32 %mul310 to i64
  %mul312 = mul i64 %conv311, 8
  %212 = load %struct._IO_FILE** %outfile, align 8
  %call313 = call i64 @fwrite(i8* %210, i64 %mul312, i64 1, %struct._IO_FILE* %212)
  %cmp314 = icmp ne i64 %call313, 1
  br i1 %cmp314, label %if.then316, label %if.end318

if.then316:                                       ; preds = %if.end309
  %call317 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([18 x i8]* @.str173, i32 0, i32 0))
  br label %if.end318

if.end318:                                        ; preds = %if.then316, %if.end309
  %213 = load %struct._IO_FILE** %outfile, align 8
  %call319 = call i32 @fflush(%struct._IO_FILE* %213)
  br label %if.end320

if.end320:                                        ; preds = %if.end318, %for.end303
  br label %for.inc321

for.inc321:                                       ; preds = %if.end320
  %214 = load i32* %tslice, align 4
  %inc322 = add nsw i32 %214, 1
  store i32 %inc322, i32* %tslice, align 4
  br label %for.cond111

for.end323:                                       ; preds = %for.cond111
  %215 = load i32* @this_node, align 4
  %cmp324 = icmp eq i32 %215, 0
  br i1 %cmp324, label %if.then326, label %if.end329

if.then326:                                       ; preds = %for.end323
  %216 = load %struct._IO_FILE** %outfile, align 8
  %call327 = call i32 @fclose(%struct._IO_FILE* %216)
  %217 = load i8** %filename.addr, align 8
  %call328 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([29 x i8]* @.str174, i32 0, i32 0), i8* %217)
  %218 = load double** %uout, align 8
  %219 = bitcast double* %218 to i8*
  call void @free(i8* %219) #2
  br label %if.end329

if.end329:                                        ; preds = %if.then326, %for.end323
  call void (...)* bitcast (void ()* @g_sync to void (...)*)()
  %220 = load %struct.gauge_file** %gf, align 8
  ret %struct.gauge_file* %220
}

; Function Attrs: nounwind uwtable
define internal %struct.gauge_file* @save_parallel_archive(i8* %filename) #0 {
entry:
  %filename.addr = alloca i8*, align 8
  store i8* %filename, i8** %filename.addr, align 8
  %call = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([49 x i8]* @.str175, i32 0, i32 0))
  ret %struct.gauge_file* null
}

; Function Attrs: nounwind uwtable
define internal void @make_lattice() #0 {
entry:
  %i = alloca i32, align 4
  %x = alloca i32, align 4
  %y = alloca i32, align 4
  %z = alloca i32, align 4
  %t = alloca i32, align 4
  %0 = load i32* @sites_on_node, align 4
  %conv = sext i32 %0 to i64
  %call = call noalias i8* @calloc(i64 %conv, i64 2048) #2
  %1 = bitcast i8* %call to %struct.site*
  store %struct.site* %1, %struct.site** @lattice, align 8
  %2 = load %struct.site** @lattice, align 8
  %cmp = icmp eq %struct.site* %2, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %3 = load i32* @this_node, align 4
  %call2 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([30 x i8]* @.str262, i32 0, i32 0), i32 %3)
  call void @terminate(i32 1)
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.end
  %4 = load i32* %i, align 4
  %cmp3 = icmp slt i32 %4, 16
  br i1 %cmp3, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %5 = load i32* @sites_on_node, align 4
  %conv5 = sext i32 %5 to i64
  %call6 = call noalias i8* @calloc(i64 %conv5, i64 8) #2
  %6 = bitcast i8* %call6 to i8**
  %7 = load i32* %i, align 4
  %idxprom = sext i32 %7 to i64
  %arrayidx = getelementptr inbounds [16 x i8**]* @gen_pt, i32 0, i64 %idxprom
  store i8** %6, i8*** %arrayidx, align 8
  %8 = load i32* %i, align 4
  %idxprom7 = sext i32 %8 to i64
  %arrayidx8 = getelementptr inbounds [16 x i8**]* @gen_pt, i32 0, i64 %idxprom7
  %9 = load i8*** %arrayidx8, align 8
  %cmp9 = icmp eq i8** %9, null
  br i1 %cmp9, label %if.then11, label %if.end13

if.then11:                                        ; preds = %for.body
  %10 = load i32* @this_node, align 4
  %call12 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([37 x i8]* @.str1263, i32 0, i32 0), i32 %10)
  call void @terminate(i32 1)
  br label %if.end13

if.end13:                                         ; preds = %if.then11, %for.body
  br label %for.inc

for.inc:                                          ; preds = %if.end13
  %11 = load i32* %i, align 4
  %inc = add nsw i32 %11, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  store i32 0, i32* %t, align 4
  br label %for.cond14

for.cond14:                                       ; preds = %for.inc85, %for.end
  %12 = load i32* %t, align 4
  %13 = load i32* @nt, align 4
  %cmp15 = icmp slt i32 %12, %13
  br i1 %cmp15, label %for.body17, label %for.end87

for.body17:                                       ; preds = %for.cond14
  store i32 0, i32* %z, align 4
  br label %for.cond18

for.cond18:                                       ; preds = %for.inc82, %for.body17
  %14 = load i32* %z, align 4
  %15 = load i32* @nz, align 4
  %cmp19 = icmp slt i32 %14, %15
  br i1 %cmp19, label %for.body21, label %for.end84

for.body21:                                       ; preds = %for.cond18
  store i32 0, i32* %y, align 4
  br label %for.cond22

for.cond22:                                       ; preds = %for.inc79, %for.body21
  %16 = load i32* %y, align 4
  %17 = load i32* @ny, align 4
  %cmp23 = icmp slt i32 %16, %17
  br i1 %cmp23, label %for.body25, label %for.end81

for.body25:                                       ; preds = %for.cond22
  store i32 0, i32* %x, align 4
  br label %for.cond26

for.cond26:                                       ; preds = %for.inc76, %for.body25
  %18 = load i32* %x, align 4
  %19 = load i32* @nx, align 4
  %cmp27 = icmp slt i32 %18, %19
  br i1 %cmp27, label %for.body29, label %for.end78

for.body29:                                       ; preds = %for.cond26
  %20 = load i32* %x, align 4
  %21 = load i32* %y, align 4
  %22 = load i32* %z, align 4
  %23 = load i32* %t, align 4
  %call30 = call i32 @node_number(i32 %20, i32 %21, i32 %22, i32 %23)
  %call31 = call i32 (...)* bitcast (i32 ()* @mynode to i32 (...)*)()
  %cmp32 = icmp eq i32 %call30, %call31
  br i1 %cmp32, label %if.then34, label %if.end75

if.then34:                                        ; preds = %for.body29
  %24 = load i32* %x, align 4
  %25 = load i32* %y, align 4
  %26 = load i32* %z, align 4
  %27 = load i32* %t, align 4
  %call35 = call i32 @node_index(i32 %24, i32 %25, i32 %26, i32 %27)
  store i32 %call35, i32* %i, align 4
  %28 = load i32* %x, align 4
  %conv36 = trunc i32 %28 to i16
  %29 = load i32* %i, align 4
  %idxprom37 = sext i32 %29 to i64
  %30 = load %struct.site** @lattice, align 8
  %arrayidx38 = getelementptr inbounds %struct.site* %30, i64 %idxprom37
  %x39 = getelementptr inbounds %struct.site* %arrayidx38, i32 0, i32 0
  store i16 %conv36, i16* %x39, align 2
  %31 = load i32* %y, align 4
  %conv40 = trunc i32 %31 to i16
  %32 = load i32* %i, align 4
  %idxprom41 = sext i32 %32 to i64
  %33 = load %struct.site** @lattice, align 8
  %arrayidx42 = getelementptr inbounds %struct.site* %33, i64 %idxprom41
  %y43 = getelementptr inbounds %struct.site* %arrayidx42, i32 0, i32 1
  store i16 %conv40, i16* %y43, align 2
  %34 = load i32* %z, align 4
  %conv44 = trunc i32 %34 to i16
  %35 = load i32* %i, align 4
  %idxprom45 = sext i32 %35 to i64
  %36 = load %struct.site** @lattice, align 8
  %arrayidx46 = getelementptr inbounds %struct.site* %36, i64 %idxprom45
  %z47 = getelementptr inbounds %struct.site* %arrayidx46, i32 0, i32 2
  store i16 %conv44, i16* %z47, align 2
  %37 = load i32* %t, align 4
  %conv48 = trunc i32 %37 to i16
  %38 = load i32* %i, align 4
  %idxprom49 = sext i32 %38 to i64
  %39 = load %struct.site** @lattice, align 8
  %arrayidx50 = getelementptr inbounds %struct.site* %39, i64 %idxprom49
  %t51 = getelementptr inbounds %struct.site* %arrayidx50, i32 0, i32 3
  store i16 %conv48, i16* %t51, align 2
  %40 = load i32* %x, align 4
  %41 = load i32* @nx, align 4
  %42 = load i32* %y, align 4
  %43 = load i32* @ny, align 4
  %44 = load i32* %z, align 4
  %45 = load i32* @nz, align 4
  %46 = load i32* %t, align 4
  %mul = mul nsw i32 %45, %46
  %add = add nsw i32 %44, %mul
  %mul52 = mul nsw i32 %43, %add
  %add53 = add nsw i32 %42, %mul52
  %mul54 = mul nsw i32 %41, %add53
  %add55 = add nsw i32 %40, %mul54
  %47 = load i32* %i, align 4
  %idxprom56 = sext i32 %47 to i64
  %48 = load %struct.site** @lattice, align 8
  %arrayidx57 = getelementptr inbounds %struct.site* %48, i64 %idxprom56
  %index = getelementptr inbounds %struct.site* %arrayidx57, i32 0, i32 5
  store i32 %add55, i32* %index, align 4
  %49 = load i32* %x, align 4
  %50 = load i32* %y, align 4
  %add58 = add nsw i32 %49, %50
  %51 = load i32* %z, align 4
  %add59 = add nsw i32 %add58, %51
  %52 = load i32* %t, align 4
  %add60 = add nsw i32 %add59, %52
  %rem = srem i32 %add60, 2
  %cmp61 = icmp eq i32 %rem, 0
  br i1 %cmp61, label %if.then63, label %if.else

if.then63:                                        ; preds = %if.then34
  %53 = load i32* %i, align 4
  %idxprom64 = sext i32 %53 to i64
  %54 = load %struct.site** @lattice, align 8
  %arrayidx65 = getelementptr inbounds %struct.site* %54, i64 %idxprom64
  %parity = getelementptr inbounds %struct.site* %arrayidx65, i32 0, i32 4
  store i8 2, i8* %parity, align 1
  br label %if.end69

if.else:                                          ; preds = %if.then34
  %55 = load i32* %i, align 4
  %idxprom66 = sext i32 %55 to i64
  %56 = load %struct.site** @lattice, align 8
  %arrayidx67 = getelementptr inbounds %struct.site* %56, i64 %idxprom66
  %parity68 = getelementptr inbounds %struct.site* %arrayidx67, i32 0, i32 4
  store i8 1, i8* %parity68, align 1
  br label %if.end69

if.end69:                                         ; preds = %if.else, %if.then63
  %57 = load i32* %i, align 4
  %idxprom70 = sext i32 %57 to i64
  %58 = load %struct.site** @lattice, align 8
  %arrayidx71 = getelementptr inbounds %struct.site* %58, i64 %idxprom70
  %site_prn = getelementptr inbounds %struct.site* %arrayidx71, i32 0, i32 6
  %59 = load i32* @iseed, align 4
  %60 = load i32* %i, align 4
  %idxprom72 = sext i32 %60 to i64
  %61 = load %struct.site** @lattice, align 8
  %arrayidx73 = getelementptr inbounds %struct.site* %61, i64 %idxprom72
  %index74 = getelementptr inbounds %struct.site* %arrayidx73, i32 0, i32 5
  %62 = load i32* %index74, align 4
  call void @initialize_prn(%struct.double_prn* %site_prn, i32 %59, i32 %62)
  br label %if.end75

if.end75:                                         ; preds = %if.end69, %for.body29
  br label %for.inc76

for.inc76:                                        ; preds = %if.end75
  %63 = load i32* %x, align 4
  %inc77 = add nsw i32 %63, 1
  store i32 %inc77, i32* %x, align 4
  br label %for.cond26

for.end78:                                        ; preds = %for.cond26
  br label %for.inc79

for.inc79:                                        ; preds = %for.end78
  %64 = load i32* %y, align 4
  %inc80 = add nsw i32 %64, 1
  store i32 %inc80, i32* %y, align 4
  br label %for.cond22

for.end81:                                        ; preds = %for.cond22
  br label %for.inc82

for.inc82:                                        ; preds = %for.end81
  %65 = load i32* %z, align 4
  %inc83 = add nsw i32 %65, 1
  store i32 %inc83, i32* %z, align 4
  br label %for.cond18

for.end84:                                        ; preds = %for.cond18
  br label %for.inc85

for.inc85:                                        ; preds = %for.end84
  %66 = load i32* %t, align 4
  %inc86 = add nsw i32 %66, 1
  store i32 %inc86, i32* %t, align 4
  br label %for.cond14

for.end87:                                        ; preds = %for.cond14
  %67 = load i32* @sites_on_node, align 4
  %mul88 = mul nsw i32 %67, 4
  %conv89 = sext i32 %mul88 to i64
  %call90 = call noalias i8* @calloc(i64 %conv89, i64 144) #2
  %68 = bitcast i8* %call90 to %struct.su3_matrix*
  store %struct.su3_matrix* %68, %struct.su3_matrix** @t_longlink, align 8
  %69 = load %struct.su3_matrix** @t_longlink, align 8
  %cmp91 = icmp eq %struct.su3_matrix* %69, null
  br i1 %cmp91, label %if.then93, label %if.end95

if.then93:                                        ; preds = %for.end87
  %70 = load i32* @this_node, align 4
  %call94 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([33 x i8]* @.str2264, i32 0, i32 0), i32 %70)
  call void @terminate(i32 1)
  br label %if.end95

if.end95:                                         ; preds = %if.then93, %for.end87
  %71 = load i32* @sites_on_node, align 4
  %mul96 = mul nsw i32 %71, 4
  %conv97 = sext i32 %mul96 to i64
  %call98 = call noalias i8* @calloc(i64 %conv97, i64 144) #2
  %72 = bitcast i8* %call98 to %struct.su3_matrix*
  store %struct.su3_matrix* %72, %struct.su3_matrix** @t_fatlink, align 8
  %73 = load %struct.su3_matrix** @t_fatlink, align 8
  %cmp99 = icmp eq %struct.su3_matrix* %73, null
  br i1 %cmp99, label %if.then101, label %if.end103

if.then101:                                       ; preds = %if.end95
  %74 = load i32* @this_node, align 4
  %call102 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([32 x i8]* @.str3265, i32 0, i32 0), i32 %74)
  call void @terminate(i32 1)
  br label %if.end103

if.end103:                                        ; preds = %if.then101, %if.end95
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @path_product(i32* %dir, i32 %length) #0 {
entry:
  %dir.addr = alloca i32*, align 8
  %length.addr = alloca i32, align 4
  %i = alloca i32, align 4
  %s = alloca %struct.site*, align 8
  %mtag0 = alloca %struct.msg_tag*, align 8
  %tempmat2t = alloca %struct.su3_matrix*, align 8
  %tempmat3t = alloca %struct.su3_matrix*, align 8
  %j = alloca i32, align 4
  %loopend = alloca i32, align 4
  %loopend36 = alloca i32, align 4
  %loopend55 = alloca i32, align 4
  %loopend84 = alloca i32, align 4
  %loopend114 = alloca i32, align 4
  %loopend146 = alloca i32, align 4
  %loopend164 = alloca i32, align 4
  %loopend200 = alloca i32, align 4
  %loopend223 = alloca i32, align 4
  %loopend256 = alloca i32, align 4
  %loopend269 = alloca i32, align 4
  %loopend289 = alloca i32, align 4
  %loopend302 = alloca i32, align 4
  store i32* %dir, i32** %dir.addr, align 8
  store i32 %length, i32* %length.addr, align 4
  %0 = load i32* @sites_on_node, align 4
  %conv = sext i32 %0 to i64
  %call = call noalias i8* @calloc(i64 %conv, i64 144) #2
  %1 = bitcast i8* %call to %struct.su3_matrix*
  store %struct.su3_matrix* %1, %struct.su3_matrix** %tempmat3t, align 8
  %2 = load i32* @sites_on_node, align 4
  %conv1 = sext i32 %2 to i64
  %call2 = call noalias i8* @calloc(i64 %conv1, i64 144) #2
  %3 = bitcast i8* %call2 to %struct.su3_matrix*
  store %struct.su3_matrix* %3, %struct.su3_matrix** %tempmat2t, align 8
  %4 = load i32** %dir.addr, align 8
  %arrayidx = getelementptr inbounds i32* %4, i64 0
  %5 = load i32* %arrayidx, align 4
  %cmp = icmp sle i32 %5, 3
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  %6 = load i32** %dir.addr, align 8
  %arrayidx4 = getelementptr inbounds i32* %6, i64 0
  %7 = load i32* %arrayidx4, align 4
  %idxprom = sext i32 %7 to i64
  %8 = load %struct.site** @lattice, align 8
  %arrayidx5 = getelementptr inbounds %struct.site* %8, i64 0
  %link = getelementptr inbounds %struct.site* %arrayidx5, i32 0, i32 8
  %arrayidx6 = getelementptr inbounds [4 x %struct.su3_matrix]* %link, i32 0, i64 %idxprom
  %9 = bitcast %struct.su3_matrix* %arrayidx6 to i8*
  %10 = load %struct.site** @lattice, align 8
  %arrayidx7 = getelementptr inbounds %struct.site* %10, i64 0
  %11 = bitcast %struct.site* %arrayidx7 to i8*
  %sub.ptr.lhs.cast = ptrtoint i8* %9 to i64
  %sub.ptr.rhs.cast = ptrtoint i8* %11 to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %conv8 = trunc i64 %sub.ptr.sub to i32
  %12 = load i32** %dir.addr, align 8
  %arrayidx9 = getelementptr inbounds i32* %12, i64 0
  %13 = load i32* %arrayidx9, align 4
  %sub = sub nsw i32 7, %13
  %14 = load i8*** getelementptr inbounds ([16 x i8**]* @gen_pt, i32 0, i64 0), align 8
  %call10 = call %struct.msg_tag* @start_gather(i32 %conv8, i32 144, i32 %sub, i32 3, i8** %14)
  store %struct.msg_tag* %call10, %struct.msg_tag** %mtag0, align 8
  br label %if.end

if.else:                                          ; preds = %entry
  %15 = load i32* @sites_on_node, align 4
  store i32 %15, i32* %loopend, align 4
  store i32 0, i32* %i, align 4
  %16 = load %struct.site** @lattice, align 8
  store %struct.site* %16, %struct.site** %s, align 8
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.else
  %17 = load i32* %i, align 4
  %18 = load i32* %loopend, align 4
  %cmp11 = icmp slt i32 %17, %18
  br i1 %cmp11, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %19 = load i32** %dir.addr, align 8
  %arrayidx13 = getelementptr inbounds i32* %19, i64 0
  %20 = load i32* %arrayidx13, align 4
  %sub14 = sub nsw i32 7, %20
  %idxprom15 = sext i32 %sub14 to i64
  %21 = load %struct.site** %s, align 8
  %link16 = getelementptr inbounds %struct.site* %21, i32 0, i32 8
  %arrayidx17 = getelementptr inbounds [4 x %struct.su3_matrix]* %link16, i32 0, i64 %idxprom15
  %22 = load %struct.site** %s, align 8
  %tempmat1 = getelementptr inbounds %struct.site* %22, i32 0, i32 20
  call void @su3_adjoint(%struct.su3_matrix* %arrayidx17, %struct.su3_matrix* %tempmat1)
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %23 = load i32* %i, align 4
  %inc = add nsw i32 %23, 1
  store i32 %inc, i32* %i, align 4
  %24 = load %struct.site** %s, align 8
  %incdec.ptr = getelementptr inbounds %struct.site* %24, i32 1
  store %struct.site* %incdec.ptr, %struct.site** %s, align 8
  br label %for.cond

for.end:                                          ; preds = %for.cond
  br label %if.end

if.end:                                           ; preds = %for.end, %if.then
  store i32 1, i32* %j, align 4
  br label %for.cond18

for.cond18:                                       ; preds = %for.inc243, %if.end
  %25 = load i32* %j, align 4
  %26 = load i32* %length.addr, align 4
  %cmp19 = icmp slt i32 %25, %26
  br i1 %cmp19, label %for.body21, label %for.end245

for.body21:                                       ; preds = %for.cond18
  %27 = load i32* %j, align 4
  %rem = srem i32 %27, 2
  %cmp22 = icmp eq i32 %rem, 1
  br i1 %cmp22, label %if.then24, label %if.else134

if.then24:                                        ; preds = %for.body21
  %28 = load i32* %j, align 4
  %idxprom25 = sext i32 %28 to i64
  %29 = load i32** %dir.addr, align 8
  %arrayidx26 = getelementptr inbounds i32* %29, i64 %idxprom25
  %30 = load i32* %arrayidx26, align 4
  %cmp27 = icmp sle i32 %30, 3
  br i1 %cmp27, label %if.then29, label %if.else77

if.then29:                                        ; preds = %if.then24
  %31 = load i32* %j, align 4
  %sub30 = sub nsw i32 %31, 1
  %idxprom31 = sext i32 %sub30 to i64
  %32 = load i32** %dir.addr, align 8
  %arrayidx32 = getelementptr inbounds i32* %32, i64 %idxprom31
  %33 = load i32* %arrayidx32, align 4
  %cmp33 = icmp sle i32 %33, 3
  br i1 %cmp33, label %if.then35, label %if.else54

if.then35:                                        ; preds = %if.then29
  %34 = load %struct.msg_tag** %mtag0, align 8
  call void @wait_gather(%struct.msg_tag* %34)
  %35 = load i32* @sites_on_node, align 4
  store i32 %35, i32* %loopend36, align 4
  store i32 0, i32* %i, align 4
  %36 = load %struct.site** @lattice, align 8
  store %struct.site* %36, %struct.site** %s, align 8
  br label %for.cond37

for.cond37:                                       ; preds = %for.inc50, %if.then35
  %37 = load i32* %i, align 4
  %38 = load i32* %loopend36, align 4
  %cmp38 = icmp slt i32 %37, %38
  br i1 %cmp38, label %for.body40, label %for.end53

for.body40:                                       ; preds = %for.cond37
  %39 = load i32* %i, align 4
  %idxprom41 = sext i32 %39 to i64
  %40 = load i8*** getelementptr inbounds ([16 x i8**]* @gen_pt, i32 0, i64 0), align 8
  %arrayidx42 = getelementptr inbounds i8** %40, i64 %idxprom41
  %41 = load i8** %arrayidx42, align 8
  %42 = bitcast i8* %41 to %struct.su3_matrix*
  %43 = load i32* %j, align 4
  %idxprom43 = sext i32 %43 to i64
  %44 = load i32** %dir.addr, align 8
  %arrayidx44 = getelementptr inbounds i32* %44, i64 %idxprom43
  %45 = load i32* %arrayidx44, align 4
  %idxprom45 = sext i32 %45 to i64
  %46 = load %struct.site** %s, align 8
  %link46 = getelementptr inbounds %struct.site* %46, i32 0, i32 8
  %arrayidx47 = getelementptr inbounds [4 x %struct.su3_matrix]* %link46, i32 0, i64 %idxprom45
  %47 = load i32* %i, align 4
  %idxprom48 = sext i32 %47 to i64
  %48 = load %struct.su3_matrix** %tempmat2t, align 8
  %arrayidx49 = getelementptr inbounds %struct.su3_matrix* %48, i64 %idxprom48
  call void @mult_su3_nn(%struct.su3_matrix* %42, %struct.su3_matrix* %arrayidx47, %struct.su3_matrix* %arrayidx49)
  br label %for.inc50

for.inc50:                                        ; preds = %for.body40
  %49 = load i32* %i, align 4
  %inc51 = add nsw i32 %49, 1
  store i32 %inc51, i32* %i, align 4
  %50 = load %struct.site** %s, align 8
  %incdec.ptr52 = getelementptr inbounds %struct.site* %50, i32 1
  store %struct.site* %incdec.ptr52, %struct.site** %s, align 8
  br label %for.cond37

for.end53:                                        ; preds = %for.cond37
  %51 = load %struct.msg_tag** %mtag0, align 8
  call void @cleanup_gather(%struct.msg_tag* %51)
  br label %if.end72

if.else54:                                        ; preds = %if.then29
  %52 = load i32* @sites_on_node, align 4
  store i32 %52, i32* %loopend55, align 4
  store i32 0, i32* %i, align 4
  %53 = load %struct.site** @lattice, align 8
  store %struct.site* %53, %struct.site** %s, align 8
  br label %for.cond56

for.cond56:                                       ; preds = %for.inc68, %if.else54
  %54 = load i32* %i, align 4
  %55 = load i32* %loopend55, align 4
  %cmp57 = icmp slt i32 %54, %55
  br i1 %cmp57, label %for.body59, label %for.end71

for.body59:                                       ; preds = %for.cond56
  %56 = load %struct.site** %s, align 8
  %tempmat160 = getelementptr inbounds %struct.site* %56, i32 0, i32 20
  %57 = load i32* %j, align 4
  %idxprom61 = sext i32 %57 to i64
  %58 = load i32** %dir.addr, align 8
  %arrayidx62 = getelementptr inbounds i32* %58, i64 %idxprom61
  %59 = load i32* %arrayidx62, align 4
  %idxprom63 = sext i32 %59 to i64
  %60 = load %struct.site** %s, align 8
  %link64 = getelementptr inbounds %struct.site* %60, i32 0, i32 8
  %arrayidx65 = getelementptr inbounds [4 x %struct.su3_matrix]* %link64, i32 0, i64 %idxprom63
  %61 = load i32* %i, align 4
  %idxprom66 = sext i32 %61 to i64
  %62 = load %struct.su3_matrix** %tempmat2t, align 8
  %arrayidx67 = getelementptr inbounds %struct.su3_matrix* %62, i64 %idxprom66
  call void @mult_su3_nn(%struct.su3_matrix* %tempmat160, %struct.su3_matrix* %arrayidx65, %struct.su3_matrix* %arrayidx67)
  br label %for.inc68

for.inc68:                                        ; preds = %for.body59
  %63 = load i32* %i, align 4
  %inc69 = add nsw i32 %63, 1
  store i32 %inc69, i32* %i, align 4
  %64 = load %struct.site** %s, align 8
  %incdec.ptr70 = getelementptr inbounds %struct.site* %64, i32 1
  store %struct.site* %incdec.ptr70, %struct.site** %s, align 8
  br label %for.cond56

for.end71:                                        ; preds = %for.cond56
  br label %if.end72

if.end72:                                         ; preds = %for.end71, %for.end53
  %65 = load %struct.su3_matrix** %tempmat2t, align 8
  %66 = bitcast %struct.su3_matrix* %65 to i8*
  %67 = load i32* %j, align 4
  %idxprom73 = sext i32 %67 to i64
  %68 = load i32** %dir.addr, align 8
  %arrayidx74 = getelementptr inbounds i32* %68, i64 %idxprom73
  %69 = load i32* %arrayidx74, align 4
  %sub75 = sub nsw i32 7, %69
  %70 = load i8*** getelementptr inbounds ([16 x i8**]* @gen_pt, i32 0, i64 0), align 8
  %call76 = call %struct.msg_tag* @start_gather_from_temp(i8* %66, i32 144, i32 %sub75, i32 3, i8** %70)
  store %struct.msg_tag* %call76, %struct.msg_tag** %mtag0, align 8
  br label %if.end133

if.else77:                                        ; preds = %if.then24
  %71 = load i32* %j, align 4
  %sub78 = sub nsw i32 %71, 1
  %idxprom79 = sext i32 %sub78 to i64
  %72 = load i32** %dir.addr, align 8
  %arrayidx80 = getelementptr inbounds i32* %72, i64 %idxprom79
  %73 = load i32* %arrayidx80, align 4
  %cmp81 = icmp sle i32 %73, 3
  br i1 %cmp81, label %if.then83, label %if.else101

if.then83:                                        ; preds = %if.else77
  %74 = load %struct.msg_tag** %mtag0, align 8
  call void @wait_gather(%struct.msg_tag* %74)
  %75 = load i32* @sites_on_node, align 4
  store i32 %75, i32* %loopend84, align 4
  store i32 0, i32* %i, align 4
  %76 = load %struct.site** @lattice, align 8
  store %struct.site* %76, %struct.site** %s, align 8
  br label %for.cond85

for.cond85:                                       ; preds = %for.inc93, %if.then83
  %77 = load i32* %i, align 4
  %78 = load i32* %loopend84, align 4
  %cmp86 = icmp slt i32 %77, %78
  br i1 %cmp86, label %for.body88, label %for.end96

for.body88:                                       ; preds = %for.cond85
  %79 = load i32* %i, align 4
  %idxprom89 = sext i32 %79 to i64
  %80 = load i8*** getelementptr inbounds ([16 x i8**]* @gen_pt, i32 0, i64 0), align 8
  %arrayidx90 = getelementptr inbounds i8** %80, i64 %idxprom89
  %81 = load i8** %arrayidx90, align 8
  %82 = bitcast i8* %81 to %struct.su3_matrix*
  %83 = load i32* %i, align 4
  %idxprom91 = sext i32 %83 to i64
  %84 = load %struct.su3_matrix** %tempmat3t, align 8
  %arrayidx92 = getelementptr inbounds %struct.su3_matrix* %84, i64 %idxprom91
  call void @su3mat_copy(%struct.su3_matrix* %82, %struct.su3_matrix* %arrayidx92)
  br label %for.inc93

for.inc93:                                        ; preds = %for.body88
  %85 = load i32* %i, align 4
  %inc94 = add nsw i32 %85, 1
  store i32 %inc94, i32* %i, align 4
  %86 = load %struct.site** %s, align 8
  %incdec.ptr95 = getelementptr inbounds %struct.site* %86, i32 1
  store %struct.site* %incdec.ptr95, %struct.site** %s, align 8
  br label %for.cond85

for.end96:                                        ; preds = %for.cond85
  %87 = load %struct.msg_tag** %mtag0, align 8
  call void @cleanup_gather(%struct.msg_tag* %87)
  %88 = load %struct.su3_matrix** %tempmat3t, align 8
  %89 = bitcast %struct.su3_matrix* %88 to i8*
  %90 = load i32* %j, align 4
  %idxprom97 = sext i32 %90 to i64
  %91 = load i32** %dir.addr, align 8
  %arrayidx98 = getelementptr inbounds i32* %91, i64 %idxprom97
  %92 = load i32* %arrayidx98, align 4
  %sub99 = sub nsw i32 7, %92
  %93 = load i8*** getelementptr inbounds ([16 x i8**]* @gen_pt, i32 0, i64 0), align 8
  %call100 = call %struct.msg_tag* @start_gather_from_temp(i8* %89, i32 144, i32 %sub99, i32 3, i8** %93)
  store %struct.msg_tag* %call100, %struct.msg_tag** %mtag0, align 8
  br label %if.end113

if.else101:                                       ; preds = %if.else77
  %94 = load %struct.site** @lattice, align 8
  %arrayidx102 = getelementptr inbounds %struct.site* %94, i64 0
  %tempmat1103 = getelementptr inbounds %struct.site* %arrayidx102, i32 0, i32 20
  %95 = bitcast %struct.su3_matrix* %tempmat1103 to i8*
  %96 = load %struct.site** @lattice, align 8
  %arrayidx104 = getelementptr inbounds %struct.site* %96, i64 0
  %97 = bitcast %struct.site* %arrayidx104 to i8*
  %sub.ptr.lhs.cast105 = ptrtoint i8* %95 to i64
  %sub.ptr.rhs.cast106 = ptrtoint i8* %97 to i64
  %sub.ptr.sub107 = sub i64 %sub.ptr.lhs.cast105, %sub.ptr.rhs.cast106
  %conv108 = trunc i64 %sub.ptr.sub107 to i32
  %98 = load i32* %j, align 4
  %idxprom109 = sext i32 %98 to i64
  %99 = load i32** %dir.addr, align 8
  %arrayidx110 = getelementptr inbounds i32* %99, i64 %idxprom109
  %100 = load i32* %arrayidx110, align 4
  %sub111 = sub nsw i32 7, %100
  %101 = load i8*** getelementptr inbounds ([16 x i8**]* @gen_pt, i32 0, i64 0), align 8
  %call112 = call %struct.msg_tag* @start_gather(i32 %conv108, i32 144, i32 %sub111, i32 3, i8** %101)
  store %struct.msg_tag* %call112, %struct.msg_tag** %mtag0, align 8
  br label %if.end113

if.end113:                                        ; preds = %if.else101, %for.end96
  %102 = load %struct.msg_tag** %mtag0, align 8
  call void @wait_gather(%struct.msg_tag* %102)
  %103 = load i32* @sites_on_node, align 4
  store i32 %103, i32* %loopend114, align 4
  store i32 0, i32* %i, align 4
  %104 = load %struct.site** @lattice, align 8
  store %struct.site* %104, %struct.site** %s, align 8
  br label %for.cond115

for.cond115:                                      ; preds = %for.inc129, %if.end113
  %105 = load i32* %i, align 4
  %106 = load i32* %loopend114, align 4
  %cmp116 = icmp slt i32 %105, %106
  br i1 %cmp116, label %for.body118, label %for.end132

for.body118:                                      ; preds = %for.cond115
  %107 = load i32* %i, align 4
  %idxprom119 = sext i32 %107 to i64
  %108 = load i8*** getelementptr inbounds ([16 x i8**]* @gen_pt, i32 0, i64 0), align 8
  %arrayidx120 = getelementptr inbounds i8** %108, i64 %idxprom119
  %109 = load i8** %arrayidx120, align 8
  %110 = bitcast i8* %109 to %struct.su3_matrix*
  %111 = load i32* %j, align 4
  %idxprom121 = sext i32 %111 to i64
  %112 = load i32** %dir.addr, align 8
  %arrayidx122 = getelementptr inbounds i32* %112, i64 %idxprom121
  %113 = load i32* %arrayidx122, align 4
  %sub123 = sub nsw i32 7, %113
  %idxprom124 = sext i32 %sub123 to i64
  %114 = load %struct.site** %s, align 8
  %link125 = getelementptr inbounds %struct.site* %114, i32 0, i32 8
  %arrayidx126 = getelementptr inbounds [4 x %struct.su3_matrix]* %link125, i32 0, i64 %idxprom124
  %115 = load i32* %i, align 4
  %idxprom127 = sext i32 %115 to i64
  %116 = load %struct.su3_matrix** %tempmat2t, align 8
  %arrayidx128 = getelementptr inbounds %struct.su3_matrix* %116, i64 %idxprom127
  call void @mult_su3_na(%struct.su3_matrix* %110, %struct.su3_matrix* %arrayidx126, %struct.su3_matrix* %arrayidx128)
  br label %for.inc129

for.inc129:                                       ; preds = %for.body118
  %117 = load i32* %i, align 4
  %inc130 = add nsw i32 %117, 1
  store i32 %inc130, i32* %i, align 4
  %118 = load %struct.site** %s, align 8
  %incdec.ptr131 = getelementptr inbounds %struct.site* %118, i32 1
  store %struct.site* %incdec.ptr131, %struct.site** %s, align 8
  br label %for.cond115

for.end132:                                       ; preds = %for.cond115
  %119 = load %struct.msg_tag** %mtag0, align 8
  call void @cleanup_gather(%struct.msg_tag* %119)
  br label %if.end133

if.end133:                                        ; preds = %for.end132, %if.end72
  br label %if.end242

if.else134:                                       ; preds = %for.body21
  %120 = load i32* %j, align 4
  %idxprom135 = sext i32 %120 to i64
  %121 = load i32** %dir.addr, align 8
  %arrayidx136 = getelementptr inbounds i32* %121, i64 %idxprom135
  %122 = load i32* %arrayidx136, align 4
  %cmp137 = icmp sle i32 %122, 3
  br i1 %cmp137, label %if.then139, label %if.else193

if.then139:                                       ; preds = %if.else134
  %123 = load i32* %j, align 4
  %sub140 = sub nsw i32 %123, 1
  %idxprom141 = sext i32 %sub140 to i64
  %124 = load i32** %dir.addr, align 8
  %arrayidx142 = getelementptr inbounds i32* %124, i64 %idxprom141
  %125 = load i32* %arrayidx142, align 4
  %cmp143 = icmp sle i32 %125, 3
  br i1 %cmp143, label %if.then145, label %if.else163

if.then145:                                       ; preds = %if.then139
  %126 = load %struct.msg_tag** %mtag0, align 8
  call void @wait_gather(%struct.msg_tag* %126)
  %127 = load i32* @sites_on_node, align 4
  store i32 %127, i32* %loopend146, align 4
  store i32 0, i32* %i, align 4
  %128 = load %struct.site** @lattice, align 8
  store %struct.site* %128, %struct.site** %s, align 8
  br label %for.cond147

for.cond147:                                      ; preds = %for.inc159, %if.then145
  %129 = load i32* %i, align 4
  %130 = load i32* %loopend146, align 4
  %cmp148 = icmp slt i32 %129, %130
  br i1 %cmp148, label %for.body150, label %for.end162

for.body150:                                      ; preds = %for.cond147
  %131 = load i32* %i, align 4
  %idxprom151 = sext i32 %131 to i64
  %132 = load i8*** getelementptr inbounds ([16 x i8**]* @gen_pt, i32 0, i64 0), align 8
  %arrayidx152 = getelementptr inbounds i8** %132, i64 %idxprom151
  %133 = load i8** %arrayidx152, align 8
  %134 = bitcast i8* %133 to %struct.su3_matrix*
  %135 = load i32* %j, align 4
  %idxprom153 = sext i32 %135 to i64
  %136 = load i32** %dir.addr, align 8
  %arrayidx154 = getelementptr inbounds i32* %136, i64 %idxprom153
  %137 = load i32* %arrayidx154, align 4
  %idxprom155 = sext i32 %137 to i64
  %138 = load %struct.site** %s, align 8
  %link156 = getelementptr inbounds %struct.site* %138, i32 0, i32 8
  %arrayidx157 = getelementptr inbounds [4 x %struct.su3_matrix]* %link156, i32 0, i64 %idxprom155
  %139 = load %struct.site** %s, align 8
  %tempmat1158 = getelementptr inbounds %struct.site* %139, i32 0, i32 20
  call void @mult_su3_nn(%struct.su3_matrix* %134, %struct.su3_matrix* %arrayidx157, %struct.su3_matrix* %tempmat1158)
  br label %for.inc159

for.inc159:                                       ; preds = %for.body150
  %140 = load i32* %i, align 4
  %inc160 = add nsw i32 %140, 1
  store i32 %inc160, i32* %i, align 4
  %141 = load %struct.site** %s, align 8
  %incdec.ptr161 = getelementptr inbounds %struct.site* %141, i32 1
  store %struct.site* %incdec.ptr161, %struct.site** %s, align 8
  br label %for.cond147

for.end162:                                       ; preds = %for.cond147
  %142 = load %struct.msg_tag** %mtag0, align 8
  call void @cleanup_gather(%struct.msg_tag* %142)
  br label %if.end181

if.else163:                                       ; preds = %if.then139
  %143 = load i32* @sites_on_node, align 4
  store i32 %143, i32* %loopend164, align 4
  store i32 0, i32* %i, align 4
  %144 = load %struct.site** @lattice, align 8
  store %struct.site* %144, %struct.site** %s, align 8
  br label %for.cond165

for.cond165:                                      ; preds = %for.inc177, %if.else163
  %145 = load i32* %i, align 4
  %146 = load i32* %loopend164, align 4
  %cmp166 = icmp slt i32 %145, %146
  br i1 %cmp166, label %for.body168, label %for.end180

for.body168:                                      ; preds = %for.cond165
  %147 = load i32* %i, align 4
  %idxprom169 = sext i32 %147 to i64
  %148 = load %struct.su3_matrix** %tempmat2t, align 8
  %arrayidx170 = getelementptr inbounds %struct.su3_matrix* %148, i64 %idxprom169
  %149 = load i32* %j, align 4
  %idxprom171 = sext i32 %149 to i64
  %150 = load i32** %dir.addr, align 8
  %arrayidx172 = getelementptr inbounds i32* %150, i64 %idxprom171
  %151 = load i32* %arrayidx172, align 4
  %idxprom173 = sext i32 %151 to i64
  %152 = load %struct.site** %s, align 8
  %link174 = getelementptr inbounds %struct.site* %152, i32 0, i32 8
  %arrayidx175 = getelementptr inbounds [4 x %struct.su3_matrix]* %link174, i32 0, i64 %idxprom173
  %153 = load %struct.site** %s, align 8
  %tempmat1176 = getelementptr inbounds %struct.site* %153, i32 0, i32 20
  call void @mult_su3_nn(%struct.su3_matrix* %arrayidx170, %struct.su3_matrix* %arrayidx175, %struct.su3_matrix* %tempmat1176)
  br label %for.inc177

for.inc177:                                       ; preds = %for.body168
  %154 = load i32* %i, align 4
  %inc178 = add nsw i32 %154, 1
  store i32 %inc178, i32* %i, align 4
  %155 = load %struct.site** %s, align 8
  %incdec.ptr179 = getelementptr inbounds %struct.site* %155, i32 1
  store %struct.site* %incdec.ptr179, %struct.site** %s, align 8
  br label %for.cond165

for.end180:                                       ; preds = %for.cond165
  br label %if.end181

if.end181:                                        ; preds = %for.end180, %for.end162
  %156 = load %struct.site** @lattice, align 8
  %arrayidx182 = getelementptr inbounds %struct.site* %156, i64 0
  %tempmat1183 = getelementptr inbounds %struct.site* %arrayidx182, i32 0, i32 20
  %157 = bitcast %struct.su3_matrix* %tempmat1183 to i8*
  %158 = load %struct.site** @lattice, align 8
  %arrayidx184 = getelementptr inbounds %struct.site* %158, i64 0
  %159 = bitcast %struct.site* %arrayidx184 to i8*
  %sub.ptr.lhs.cast185 = ptrtoint i8* %157 to i64
  %sub.ptr.rhs.cast186 = ptrtoint i8* %159 to i64
  %sub.ptr.sub187 = sub i64 %sub.ptr.lhs.cast185, %sub.ptr.rhs.cast186
  %conv188 = trunc i64 %sub.ptr.sub187 to i32
  %160 = load i32* %j, align 4
  %idxprom189 = sext i32 %160 to i64
  %161 = load i32** %dir.addr, align 8
  %arrayidx190 = getelementptr inbounds i32* %161, i64 %idxprom189
  %162 = load i32* %arrayidx190, align 4
  %sub191 = sub nsw i32 7, %162
  %163 = load i8*** getelementptr inbounds ([16 x i8**]* @gen_pt, i32 0, i64 0), align 8
  %call192 = call %struct.msg_tag* @start_gather(i32 %conv188, i32 144, i32 %sub191, i32 3, i8** %163)
  store %struct.msg_tag* %call192, %struct.msg_tag** %mtag0, align 8
  br label %if.end241

if.else193:                                       ; preds = %if.else134
  %164 = load i32* %j, align 4
  %sub194 = sub nsw i32 %164, 1
  %idxprom195 = sext i32 %sub194 to i64
  %165 = load i32** %dir.addr, align 8
  %arrayidx196 = getelementptr inbounds i32* %165, i64 %idxprom195
  %166 = load i32* %arrayidx196, align 4
  %cmp197 = icmp sle i32 %166, 3
  br i1 %cmp197, label %if.then199, label %if.else217

if.then199:                                       ; preds = %if.else193
  %167 = load %struct.msg_tag** %mtag0, align 8
  call void @wait_gather(%struct.msg_tag* %167)
  %168 = load i32* @sites_on_node, align 4
  store i32 %168, i32* %loopend200, align 4
  store i32 0, i32* %i, align 4
  %169 = load %struct.site** @lattice, align 8
  store %struct.site* %169, %struct.site** %s, align 8
  br label %for.cond201

for.cond201:                                      ; preds = %for.inc209, %if.then199
  %170 = load i32* %i, align 4
  %171 = load i32* %loopend200, align 4
  %cmp202 = icmp slt i32 %170, %171
  br i1 %cmp202, label %for.body204, label %for.end212

for.body204:                                      ; preds = %for.cond201
  %172 = load i32* %i, align 4
  %idxprom205 = sext i32 %172 to i64
  %173 = load i8*** getelementptr inbounds ([16 x i8**]* @gen_pt, i32 0, i64 0), align 8
  %arrayidx206 = getelementptr inbounds i8** %173, i64 %idxprom205
  %174 = load i8** %arrayidx206, align 8
  %175 = bitcast i8* %174 to %struct.su3_matrix*
  %176 = load i32* %i, align 4
  %idxprom207 = sext i32 %176 to i64
  %177 = load %struct.su3_matrix** %tempmat3t, align 8
  %arrayidx208 = getelementptr inbounds %struct.su3_matrix* %177, i64 %idxprom207
  call void @su3mat_copy(%struct.su3_matrix* %175, %struct.su3_matrix* %arrayidx208)
  br label %for.inc209

for.inc209:                                       ; preds = %for.body204
  %178 = load i32* %i, align 4
  %inc210 = add nsw i32 %178, 1
  store i32 %inc210, i32* %i, align 4
  %179 = load %struct.site** %s, align 8
  %incdec.ptr211 = getelementptr inbounds %struct.site* %179, i32 1
  store %struct.site* %incdec.ptr211, %struct.site** %s, align 8
  br label %for.cond201

for.end212:                                       ; preds = %for.cond201
  %180 = load %struct.msg_tag** %mtag0, align 8
  call void @cleanup_gather(%struct.msg_tag* %180)
  %181 = load %struct.su3_matrix** %tempmat3t, align 8
  %182 = bitcast %struct.su3_matrix* %181 to i8*
  %183 = load i32* %j, align 4
  %idxprom213 = sext i32 %183 to i64
  %184 = load i32** %dir.addr, align 8
  %arrayidx214 = getelementptr inbounds i32* %184, i64 %idxprom213
  %185 = load i32* %arrayidx214, align 4
  %sub215 = sub nsw i32 7, %185
  %186 = load i8*** getelementptr inbounds ([16 x i8**]* @gen_pt, i32 0, i64 0), align 8
  %call216 = call %struct.msg_tag* @start_gather_from_temp(i8* %182, i32 144, i32 %sub215, i32 3, i8** %186)
  store %struct.msg_tag* %call216, %struct.msg_tag** %mtag0, align 8
  br label %if.end222

if.else217:                                       ; preds = %if.else193
  %187 = load %struct.su3_matrix** %tempmat2t, align 8
  %188 = bitcast %struct.su3_matrix* %187 to i8*
  %189 = load i32* %j, align 4
  %idxprom218 = sext i32 %189 to i64
  %190 = load i32** %dir.addr, align 8
  %arrayidx219 = getelementptr inbounds i32* %190, i64 %idxprom218
  %191 = load i32* %arrayidx219, align 4
  %sub220 = sub nsw i32 7, %191
  %192 = load i8*** getelementptr inbounds ([16 x i8**]* @gen_pt, i32 0, i64 0), align 8
  %call221 = call %struct.msg_tag* @start_gather_from_temp(i8* %188, i32 144, i32 %sub220, i32 3, i8** %192)
  store %struct.msg_tag* %call221, %struct.msg_tag** %mtag0, align 8
  br label %if.end222

if.end222:                                        ; preds = %if.else217, %for.end212
  %193 = load %struct.msg_tag** %mtag0, align 8
  call void @wait_gather(%struct.msg_tag* %193)
  %194 = load i32* @sites_on_node, align 4
  store i32 %194, i32* %loopend223, align 4
  store i32 0, i32* %i, align 4
  %195 = load %struct.site** @lattice, align 8
  store %struct.site* %195, %struct.site** %s, align 8
  br label %for.cond224

for.cond224:                                      ; preds = %for.inc237, %if.end222
  %196 = load i32* %i, align 4
  %197 = load i32* %loopend223, align 4
  %cmp225 = icmp slt i32 %196, %197
  br i1 %cmp225, label %for.body227, label %for.end240

for.body227:                                      ; preds = %for.cond224
  %198 = load i32* %i, align 4
  %idxprom228 = sext i32 %198 to i64
  %199 = load i8*** getelementptr inbounds ([16 x i8**]* @gen_pt, i32 0, i64 0), align 8
  %arrayidx229 = getelementptr inbounds i8** %199, i64 %idxprom228
  %200 = load i8** %arrayidx229, align 8
  %201 = bitcast i8* %200 to %struct.su3_matrix*
  %202 = load i32* %j, align 4
  %idxprom230 = sext i32 %202 to i64
  %203 = load i32** %dir.addr, align 8
  %arrayidx231 = getelementptr inbounds i32* %203, i64 %idxprom230
  %204 = load i32* %arrayidx231, align 4
  %sub232 = sub nsw i32 7, %204
  %idxprom233 = sext i32 %sub232 to i64
  %205 = load %struct.site** %s, align 8
  %link234 = getelementptr inbounds %struct.site* %205, i32 0, i32 8
  %arrayidx235 = getelementptr inbounds [4 x %struct.su3_matrix]* %link234, i32 0, i64 %idxprom233
  %206 = load %struct.site** %s, align 8
  %tempmat1236 = getelementptr inbounds %struct.site* %206, i32 0, i32 20
  call void @mult_su3_na(%struct.su3_matrix* %201, %struct.su3_matrix* %arrayidx235, %struct.su3_matrix* %tempmat1236)
  br label %for.inc237

for.inc237:                                       ; preds = %for.body227
  %207 = load i32* %i, align 4
  %inc238 = add nsw i32 %207, 1
  store i32 %inc238, i32* %i, align 4
  %208 = load %struct.site** %s, align 8
  %incdec.ptr239 = getelementptr inbounds %struct.site* %208, i32 1
  store %struct.site* %incdec.ptr239, %struct.site** %s, align 8
  br label %for.cond224

for.end240:                                       ; preds = %for.cond224
  %209 = load %struct.msg_tag** %mtag0, align 8
  call void @cleanup_gather(%struct.msg_tag* %209)
  br label %if.end241

if.end241:                                        ; preds = %for.end240, %if.end181
  br label %if.end242

if.end242:                                        ; preds = %if.end241, %if.end133
  br label %for.inc243

for.inc243:                                       ; preds = %if.end242
  %210 = load i32* %j, align 4
  %inc244 = add nsw i32 %210, 1
  store i32 %inc244, i32* %j, align 4
  br label %for.cond18

for.end245:                                       ; preds = %for.cond18
  %211 = load i32* %length.addr, align 4
  %rem246 = srem i32 %211, 2
  %cmp247 = icmp eq i32 %rem246, 0
  br i1 %cmp247, label %if.then249, label %if.else282

if.then249:                                       ; preds = %for.end245
  %212 = load i32* %length.addr, align 4
  %sub250 = sub nsw i32 %212, 1
  %idxprom251 = sext i32 %sub250 to i64
  %213 = load i32** %dir.addr, align 8
  %arrayidx252 = getelementptr inbounds i32* %213, i64 %idxprom251
  %214 = load i32* %arrayidx252, align 4
  %cmp253 = icmp sle i32 %214, 3
  br i1 %cmp253, label %if.then255, label %if.else268

if.then255:                                       ; preds = %if.then249
  %215 = load %struct.msg_tag** %mtag0, align 8
  call void @wait_gather(%struct.msg_tag* %215)
  %216 = load i32* @sites_on_node, align 4
  store i32 %216, i32* %loopend256, align 4
  store i32 0, i32* %i, align 4
  %217 = load %struct.site** @lattice, align 8
  store %struct.site* %217, %struct.site** %s, align 8
  br label %for.cond257

for.cond257:                                      ; preds = %for.inc264, %if.then255
  %218 = load i32* %i, align 4
  %219 = load i32* %loopend256, align 4
  %cmp258 = icmp slt i32 %218, %219
  br i1 %cmp258, label %for.body260, label %for.end267

for.body260:                                      ; preds = %for.cond257
  %220 = load i32* %i, align 4
  %idxprom261 = sext i32 %220 to i64
  %221 = load i8*** getelementptr inbounds ([16 x i8**]* @gen_pt, i32 0, i64 0), align 8
  %arrayidx262 = getelementptr inbounds i8** %221, i64 %idxprom261
  %222 = load i8** %arrayidx262, align 8
  %223 = bitcast i8* %222 to %struct.su3_matrix*
  %224 = load %struct.site** %s, align 8
  %tempmat1263 = getelementptr inbounds %struct.site* %224, i32 0, i32 20
  call void @su3mat_copy(%struct.su3_matrix* %223, %struct.su3_matrix* %tempmat1263)
  br label %for.inc264

for.inc264:                                       ; preds = %for.body260
  %225 = load i32* %i, align 4
  %inc265 = add nsw i32 %225, 1
  store i32 %inc265, i32* %i, align 4
  %226 = load %struct.site** %s, align 8
  %incdec.ptr266 = getelementptr inbounds %struct.site* %226, i32 1
  store %struct.site* %incdec.ptr266, %struct.site** %s, align 8
  br label %for.cond257

for.end267:                                       ; preds = %for.cond257
  %227 = load %struct.msg_tag** %mtag0, align 8
  call void @cleanup_gather(%struct.msg_tag* %227)
  br label %if.end281

if.else268:                                       ; preds = %if.then249
  %228 = load i32* @sites_on_node, align 4
  store i32 %228, i32* %loopend269, align 4
  store i32 0, i32* %i, align 4
  %229 = load %struct.site** @lattice, align 8
  store %struct.site* %229, %struct.site** %s, align 8
  br label %for.cond270

for.cond270:                                      ; preds = %for.inc277, %if.else268
  %230 = load i32* %i, align 4
  %231 = load i32* %loopend269, align 4
  %cmp271 = icmp slt i32 %230, %231
  br i1 %cmp271, label %for.body273, label %for.end280

for.body273:                                      ; preds = %for.cond270
  %232 = load i32* %i, align 4
  %idxprom274 = sext i32 %232 to i64
  %233 = load %struct.su3_matrix** %tempmat2t, align 8
  %arrayidx275 = getelementptr inbounds %struct.su3_matrix* %233, i64 %idxprom274
  %234 = load %struct.site** %s, align 8
  %tempmat1276 = getelementptr inbounds %struct.site* %234, i32 0, i32 20
  call void @su3mat_copy(%struct.su3_matrix* %arrayidx275, %struct.su3_matrix* %tempmat1276)
  br label %for.inc277

for.inc277:                                       ; preds = %for.body273
  %235 = load i32* %i, align 4
  %inc278 = add nsw i32 %235, 1
  store i32 %inc278, i32* %i, align 4
  %236 = load %struct.site** %s, align 8
  %incdec.ptr279 = getelementptr inbounds %struct.site* %236, i32 1
  store %struct.site* %incdec.ptr279, %struct.site** %s, align 8
  br label %for.cond270

for.end280:                                       ; preds = %for.cond270
  br label %if.end281

if.end281:                                        ; preds = %for.end280, %for.end267
  br label %if.end316

if.else282:                                       ; preds = %for.end245
  %237 = load i32* %length.addr, align 4
  %sub283 = sub nsw i32 %237, 1
  %idxprom284 = sext i32 %sub283 to i64
  %238 = load i32** %dir.addr, align 8
  %arrayidx285 = getelementptr inbounds i32* %238, i64 %idxprom284
  %239 = load i32* %arrayidx285, align 4
  %cmp286 = icmp sle i32 %239, 3
  br i1 %cmp286, label %if.then288, label %if.else314

if.then288:                                       ; preds = %if.else282
  %240 = load %struct.msg_tag** %mtag0, align 8
  call void @wait_gather(%struct.msg_tag* %240)
  %241 = load i32* @sites_on_node, align 4
  store i32 %241, i32* %loopend289, align 4
  store i32 0, i32* %i, align 4
  %242 = load %struct.site** @lattice, align 8
  store %struct.site* %242, %struct.site** %s, align 8
  br label %for.cond290

for.cond290:                                      ; preds = %for.inc298, %if.then288
  %243 = load i32* %i, align 4
  %244 = load i32* %loopend289, align 4
  %cmp291 = icmp slt i32 %243, %244
  br i1 %cmp291, label %for.body293, label %for.end301

for.body293:                                      ; preds = %for.cond290
  %245 = load i32* %i, align 4
  %idxprom294 = sext i32 %245 to i64
  %246 = load i8*** getelementptr inbounds ([16 x i8**]* @gen_pt, i32 0, i64 0), align 8
  %arrayidx295 = getelementptr inbounds i8** %246, i64 %idxprom294
  %247 = load i8** %arrayidx295, align 8
  %248 = bitcast i8* %247 to %struct.su3_matrix*
  %249 = load i32* %i, align 4
  %idxprom296 = sext i32 %249 to i64
  %250 = load %struct.su3_matrix** %tempmat3t, align 8
  %arrayidx297 = getelementptr inbounds %struct.su3_matrix* %250, i64 %idxprom296
  call void @su3mat_copy(%struct.su3_matrix* %248, %struct.su3_matrix* %arrayidx297)
  br label %for.inc298

for.inc298:                                       ; preds = %for.body293
  %251 = load i32* %i, align 4
  %inc299 = add nsw i32 %251, 1
  store i32 %inc299, i32* %i, align 4
  %252 = load %struct.site** %s, align 8
  %incdec.ptr300 = getelementptr inbounds %struct.site* %252, i32 1
  store %struct.site* %incdec.ptr300, %struct.site** %s, align 8
  br label %for.cond290

for.end301:                                       ; preds = %for.cond290
  %253 = load %struct.msg_tag** %mtag0, align 8
  call void @cleanup_gather(%struct.msg_tag* %253)
  %254 = load i32* @sites_on_node, align 4
  store i32 %254, i32* %loopend302, align 4
  store i32 0, i32* %i, align 4
  %255 = load %struct.site** @lattice, align 8
  store %struct.site* %255, %struct.site** %s, align 8
  br label %for.cond303

for.cond303:                                      ; preds = %for.inc310, %for.end301
  %256 = load i32* %i, align 4
  %257 = load i32* %loopend302, align 4
  %cmp304 = icmp slt i32 %256, %257
  br i1 %cmp304, label %for.body306, label %for.end313

for.body306:                                      ; preds = %for.cond303
  %258 = load i32* %i, align 4
  %idxprom307 = sext i32 %258 to i64
  %259 = load %struct.su3_matrix** %tempmat3t, align 8
  %arrayidx308 = getelementptr inbounds %struct.su3_matrix* %259, i64 %idxprom307
  %260 = load %struct.site** %s, align 8
  %tempmat1309 = getelementptr inbounds %struct.site* %260, i32 0, i32 20
  call void @su3mat_copy(%struct.su3_matrix* %arrayidx308, %struct.su3_matrix* %tempmat1309)
  br label %for.inc310

for.inc310:                                       ; preds = %for.body306
  %261 = load i32* %i, align 4
  %inc311 = add nsw i32 %261, 1
  store i32 %inc311, i32* %i, align 4
  %262 = load %struct.site** %s, align 8
  %incdec.ptr312 = getelementptr inbounds %struct.site* %262, i32 1
  store %struct.site* %incdec.ptr312, %struct.site** %s, align 8
  br label %for.cond303

for.end313:                                       ; preds = %for.cond303
  br label %if.end315

if.else314:                                       ; preds = %if.else282
  br label %if.end315

if.end315:                                        ; preds = %if.else314, %for.end313
  br label %if.end316

if.end316:                                        ; preds = %if.end315, %if.end281
  %263 = load %struct.su3_matrix** %tempmat3t, align 8
  %264 = bitcast %struct.su3_matrix* %263 to i8*
  call void @free(i8* %264) #2
  %265 = load %struct.su3_matrix** %tempmat2t, align 8
  %266 = bitcast %struct.su3_matrix* %265 to i8*
  call void @free(i8* %266) #2
  ret void
}

; Function Attrs: nounwind uwtable
define internal { double, double } @ploop() #0 {
entry:
  %retval = alloca %struct.complex, align 8
  %i = alloca i32, align 4
  %t = alloca i32, align 4
  %st = alloca %struct.site*, align 8
  %tag = alloca %struct.msg_tag*, align 8
  %sum = alloca %struct.complex, align 8
  %plp = alloca %struct.complex, align 8
  %tmat = alloca %struct.su3_matrix, align 8
  %d = alloca [4 x i32], align 16
  %coerce = alloca %struct.complex, align 8
  %coerce56 = alloca %struct.complex, align 8
  %call = call { double, double } @cmplx(double 0.000000e+00, double 0.000000e+00)
  %0 = bitcast %struct.complex* %coerce to { double, double }*
  %1 = getelementptr { double, double }* %0, i32 0, i32 0
  %2 = extractvalue { double, double } %call, 0
  store double %2, double* %1, align 1
  %3 = getelementptr { double, double }* %0, i32 0, i32 1
  %4 = extractvalue { double, double } %call, 1
  store double %4, double* %3, align 1
  %5 = bitcast %struct.complex* %sum to i8*
  %6 = bitcast %struct.complex* %coerce to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %5, i8* %6, i64 16, i32 8, i1 false)
  %arrayidx = getelementptr inbounds [4 x i32]* %d, i32 0, i64 2
  store i32 0, i32* %arrayidx, align 4
  %arrayidx1 = getelementptr inbounds [4 x i32]* %d, i32 0, i64 1
  store i32 0, i32* %arrayidx1, align 4
  %arrayidx2 = getelementptr inbounds [4 x i32]* %d, i32 0, i64 0
  store i32 0, i32* %arrayidx2, align 4
  %7 = load %struct.site** @lattice, align 8
  %arrayidx3 = getelementptr inbounds %struct.site* %7, i64 0
  %link = getelementptr inbounds %struct.site* %arrayidx3, i32 0, i32 8
  %arrayidx4 = getelementptr inbounds [4 x %struct.su3_matrix]* %link, i32 0, i64 3
  %8 = bitcast %struct.su3_matrix* %arrayidx4 to i8*
  %9 = load %struct.site** @lattice, align 8
  %arrayidx5 = getelementptr inbounds %struct.site* %9, i64 0
  %10 = bitcast %struct.site* %arrayidx5 to i8*
  %sub.ptr.lhs.cast = ptrtoint i8* %8 to i64
  %sub.ptr.rhs.cast = ptrtoint i8* %10 to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %conv = trunc i64 %sub.ptr.sub to i32
  %11 = load i8*** getelementptr inbounds ([16 x i8**]* @gen_pt, i32 0, i64 0), align 8
  %call6 = call %struct.msg_tag* @start_gather(i32 %conv, i32 144, i32 3, i32 2, i8** %11)
  store %struct.msg_tag* %call6, %struct.msg_tag** %tag, align 8
  %12 = load %struct.msg_tag** %tag, align 8
  call void @wait_gather(%struct.msg_tag* %12)
  store i32 0, i32* %i, align 4
  %13 = load %struct.site** @lattice, align 8
  store %struct.site* %13, %struct.site** %st, align 8
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %14 = load i32* %i, align 4
  %15 = load i32* @even_sites_on_node, align 4
  %cmp = icmp slt i32 %14, %15
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %16 = load %struct.site** %st, align 8
  %link8 = getelementptr inbounds %struct.site* %16, i32 0, i32 8
  %arrayidx9 = getelementptr inbounds [4 x %struct.su3_matrix]* %link8, i32 0, i64 3
  %17 = load i32* %i, align 4
  %idxprom = sext i32 %17 to i64
  %18 = load i8*** getelementptr inbounds ([16 x i8**]* @gen_pt, i32 0, i64 0), align 8
  %arrayidx10 = getelementptr inbounds i8** %18, i64 %idxprom
  %19 = load i8** %arrayidx10, align 8
  %20 = bitcast i8* %19 to %struct.su3_matrix*
  %21 = load %struct.site** %st, align 8
  %tempmat1 = getelementptr inbounds %struct.site* %21, i32 0, i32 20
  call void @mult_su3_nn(%struct.su3_matrix* %arrayidx9, %struct.su3_matrix* %20, %struct.su3_matrix* %tempmat1)
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %22 = load i32* %i, align 4
  %inc = add nsw i32 %22, 1
  store i32 %inc, i32* %i, align 4
  %23 = load %struct.site** %st, align 8
  %incdec.ptr = getelementptr inbounds %struct.site* %23, i32 1
  store %struct.site* %incdec.ptr, %struct.site** %st, align 8
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %24 = load %struct.msg_tag** %tag, align 8
  call void @cleanup_gather(%struct.msg_tag* %24)
  store i32 2, i32* %t, align 4
  br label %for.cond11

for.cond11:                                       ; preds = %for.inc42, %for.end
  %25 = load i32* %t, align 4
  %26 = load i32* @nt, align 4
  %cmp12 = icmp slt i32 %25, %26
  br i1 %cmp12, label %for.body14, label %for.end43

for.body14:                                       ; preds = %for.cond11
  %27 = load i32* %t, align 4
  %arrayidx15 = getelementptr inbounds [4 x i32]* %d, i32 0, i64 3
  store i32 %27, i32* %arrayidx15, align 4
  %28 = load %struct.site** @lattice, align 8
  %arrayidx16 = getelementptr inbounds %struct.site* %28, i64 0
  %tempmat117 = getelementptr inbounds %struct.site* %arrayidx16, i32 0, i32 20
  %29 = bitcast %struct.su3_matrix* %tempmat117 to i8*
  %30 = load %struct.site** @lattice, align 8
  %arrayidx18 = getelementptr inbounds %struct.site* %30, i64 0
  %31 = bitcast %struct.site* %arrayidx18 to i8*
  %sub.ptr.lhs.cast19 = ptrtoint i8* %29 to i64
  %sub.ptr.rhs.cast20 = ptrtoint i8* %31 to i64
  %sub.ptr.sub21 = sub i64 %sub.ptr.lhs.cast19, %sub.ptr.rhs.cast20
  %conv22 = trunc i64 %sub.ptr.sub21 to i32
  %arraydecay = getelementptr inbounds [4 x i32]* %d, i32 0, i32 0
  %32 = load i8*** getelementptr inbounds ([16 x i8**]* @gen_pt, i32 0, i64 0), align 8
  %call23 = call %struct.msg_tag* @start_general_gather(i32 %conv22, i32 144, i32* %arraydecay, i32 2, i8** %32)
  store %struct.msg_tag* %call23, %struct.msg_tag** %tag, align 8
  %33 = load %struct.msg_tag** %tag, align 8
  call void @wait_general_gather(%struct.msg_tag* %33)
  store i32 0, i32* %i, align 4
  %34 = load %struct.site** @lattice, align 8
  store %struct.site* %34, %struct.site** %st, align 8
  br label %for.cond24

for.cond24:                                       ; preds = %for.inc38, %for.body14
  %35 = load i32* %i, align 4
  %36 = load i32* @even_sites_on_node, align 4
  %cmp25 = icmp slt i32 %35, %36
  br i1 %cmp25, label %for.body27, label %for.end41

for.body27:                                       ; preds = %for.cond24
  %37 = load %struct.site** %st, align 8
  %t28 = getelementptr inbounds %struct.site* %37, i32 0, i32 3
  %38 = load i16* %t28, align 2
  %conv29 = sext i16 %38 to i32
  %cmp30 = icmp sgt i32 %conv29, 1
  br i1 %cmp30, label %if.then, label %if.end

if.then:                                          ; preds = %for.body27
  br label %for.inc38

if.end:                                           ; preds = %for.body27
  %39 = load %struct.site** %st, align 8
  %tempmat132 = getelementptr inbounds %struct.site* %39, i32 0, i32 20
  %40 = load i32* %i, align 4
  %idxprom33 = sext i32 %40 to i64
  %41 = load i8*** getelementptr inbounds ([16 x i8**]* @gen_pt, i32 0, i64 0), align 8
  %arrayidx34 = getelementptr inbounds i8** %41, i64 %idxprom33
  %42 = load i8** %arrayidx34, align 8
  %43 = bitcast i8* %42 to %struct.su3_matrix*
  call void @mult_su3_nn(%struct.su3_matrix* %tempmat132, %struct.su3_matrix* %43, %struct.su3_matrix* %tmat)
  %44 = load i32* %i, align 4
  %idxprom35 = sext i32 %44 to i64
  %45 = load %struct.site** @lattice, align 8
  %arrayidx36 = getelementptr inbounds %struct.site* %45, i64 %idxprom35
  %tempmat137 = getelementptr inbounds %struct.site* %arrayidx36, i32 0, i32 20
  %46 = bitcast %struct.su3_matrix* %tempmat137 to i8*
  %47 = bitcast %struct.su3_matrix* %tmat to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %46, i8* %47, i64 144, i32 8, i1 false)
  br label %for.inc38

for.inc38:                                        ; preds = %if.end, %if.then
  %48 = load i32* %i, align 4
  %inc39 = add nsw i32 %48, 1
  store i32 %inc39, i32* %i, align 4
  %49 = load %struct.site** %st, align 8
  %incdec.ptr40 = getelementptr inbounds %struct.site* %49, i32 1
  store %struct.site* %incdec.ptr40, %struct.site** %st, align 8
  br label %for.cond24

for.end41:                                        ; preds = %for.cond24
  %50 = load %struct.msg_tag** %tag, align 8
  call void @cleanup_general_gather(%struct.msg_tag* %50)
  br label %for.inc42

for.inc42:                                        ; preds = %for.end41
  %51 = load i32* %t, align 4
  %add = add nsw i32 %51, 2
  store i32 %add, i32* %t, align 4
  br label %for.cond11

for.end43:                                        ; preds = %for.cond11
  store i32 0, i32* %i, align 4
  %52 = load %struct.site** @lattice, align 8
  store %struct.site* %52, %struct.site** %st, align 8
  br label %for.cond44

for.cond44:                                       ; preds = %for.inc61, %for.end43
  %53 = load i32* %i, align 4
  %54 = load i32* @even_sites_on_node, align 4
  %cmp45 = icmp slt i32 %53, %54
  br i1 %cmp45, label %for.body47, label %for.end64

for.body47:                                       ; preds = %for.cond44
  %55 = load %struct.site** %st, align 8
  %t48 = getelementptr inbounds %struct.site* %55, i32 0, i32 3
  %56 = load i16* %t48, align 2
  %conv49 = sext i16 %56 to i32
  %cmp50 = icmp sgt i32 %conv49, 1
  br i1 %cmp50, label %if.then52, label %if.end53

if.then52:                                        ; preds = %for.body47
  br label %for.inc61

if.end53:                                         ; preds = %for.body47
  %57 = load %struct.site** %st, align 8
  %tempmat154 = getelementptr inbounds %struct.site* %57, i32 0, i32 20
  %call55 = call { double, double } @trace_su3(%struct.su3_matrix* %tempmat154)
  %58 = bitcast %struct.complex* %coerce56 to { double, double }*
  %59 = getelementptr { double, double }* %58, i32 0, i32 0
  %60 = extractvalue { double, double } %call55, 0
  store double %60, double* %59, align 1
  %61 = getelementptr { double, double }* %58, i32 0, i32 1
  %62 = extractvalue { double, double } %call55, 1
  store double %62, double* %61, align 1
  %63 = bitcast %struct.complex* %plp to i8*
  %64 = bitcast %struct.complex* %coerce56 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %63, i8* %64, i64 16, i32 8, i1 false)
  %real = getelementptr inbounds %struct.complex* %plp, i32 0, i32 0
  %65 = load double* %real, align 8
  %real57 = getelementptr inbounds %struct.complex* %sum, i32 0, i32 0
  %66 = load double* %real57, align 8
  %add58 = fadd double %66, %65
  store double %add58, double* %real57, align 8
  %imag = getelementptr inbounds %struct.complex* %plp, i32 0, i32 1
  %67 = load double* %imag, align 8
  %imag59 = getelementptr inbounds %struct.complex* %sum, i32 0, i32 1
  %68 = load double* %imag59, align 8
  %add60 = fadd double %68, %67
  store double %add60, double* %imag59, align 8
  br label %for.inc61

for.inc61:                                        ; preds = %if.end53, %if.then52
  %69 = load i32* %i, align 4
  %inc62 = add nsw i32 %69, 1
  store i32 %inc62, i32* %i, align 4
  %70 = load %struct.site** %st, align 8
  %incdec.ptr63 = getelementptr inbounds %struct.site* %70, i32 1
  store %struct.site* %incdec.ptr63, %struct.site** %st, align 8
  br label %for.cond44

for.end64:                                        ; preds = %for.cond44
  call void @g_complexsum(%struct.complex* %sum)
  %real65 = getelementptr inbounds %struct.complex* %sum, i32 0, i32 0
  %71 = load double* %real65, align 8
  %72 = load i32* @nx, align 4
  %73 = load i32* @ny, align 4
  %mul = mul nsw i32 %72, %73
  %74 = load i32* @nz, align 4
  %mul66 = mul nsw i32 %mul, %74
  %conv67 = sitofp i32 %mul66 to double
  %div = fdiv double %71, %conv67
  %real68 = getelementptr inbounds %struct.complex* %plp, i32 0, i32 0
  store double %div, double* %real68, align 8
  %imag69 = getelementptr inbounds %struct.complex* %sum, i32 0, i32 1
  %75 = load double* %imag69, align 8
  %76 = load i32* @nx, align 4
  %77 = load i32* @ny, align 4
  %mul70 = mul nsw i32 %76, %77
  %78 = load i32* @nz, align 4
  %mul71 = mul nsw i32 %mul70, %78
  %conv72 = sitofp i32 %mul71 to double
  %div73 = fdiv double %75, %conv72
  %imag74 = getelementptr inbounds %struct.complex* %plp, i32 0, i32 1
  store double %div73, double* %imag74, align 8
  %79 = bitcast %struct.complex* %retval to i8*
  %80 = bitcast %struct.complex* %plp to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %79, i8* %80, i64 16, i32 8, i1 false)
  %81 = bitcast %struct.complex* %retval to { double, double }*
  %82 = load { double, double }* %81, align 1
  ret { double, double } %82
}

; Function Attrs: nounwind uwtable
define internal void @ranmom() #0 {
entry:
  %i = alloca i32, align 4
  %dir = alloca i32, align 4
  %s = alloca %struct.site*, align 8
  store i32 0, i32* %i, align 4
  %0 = load %struct.site** @lattice, align 8
  store %struct.site* %0, %struct.site** %s, align 8
  br label %for.cond

for.cond:                                         ; preds = %for.inc4, %entry
  %1 = load i32* %i, align 4
  %2 = load i32* @sites_on_node, align 4
  %cmp = icmp slt i32 %1, %2
  br i1 %cmp, label %for.body, label %for.end6

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %dir, align 4
  br label %for.cond1

for.cond1:                                        ; preds = %for.inc, %for.body
  %3 = load i32* %dir, align 4
  %cmp2 = icmp sle i32 %3, 3
  br i1 %cmp2, label %for.body3, label %for.end

for.body3:                                        ; preds = %for.cond1
  %4 = load i32* %dir, align 4
  %idxprom = sext i32 %4 to i64
  %5 = load %struct.site** %s, align 8
  %mom = getelementptr inbounds %struct.site* %5, i32 0, i32 9
  %arrayidx = getelementptr inbounds [4 x %struct.anti_hermitmat]* %mom, i32 0, i64 %idxprom
  %6 = load %struct.site** %s, align 8
  %site_prn = getelementptr inbounds %struct.site* %6, i32 0, i32 6
  call void @random_anti_hermitian(%struct.anti_hermitmat* %arrayidx, %struct.double_prn* %site_prn)
  br label %for.inc

for.inc:                                          ; preds = %for.body3
  %7 = load i32* %dir, align 4
  %inc = add nsw i32 %7, 1
  store i32 %inc, i32* %dir, align 4
  br label %for.cond1

for.end:                                          ; preds = %for.cond1
  br label %for.inc4

for.inc4:                                         ; preds = %for.end
  %8 = load i32* %i, align 4
  %inc5 = add nsw i32 %8, 1
  store i32 %inc5, i32* %i, align 4
  %9 = load %struct.site** %s, align 8
  %incdec.ptr = getelementptr inbounds %struct.site* %9, i32 1
  store %struct.site* %incdec.ptr, %struct.site** %s, align 8
  br label %for.cond

for.end6:                                         ; preds = %for.cond
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @initialize_prn(%struct.double_prn* %prn_pt, i32 %seed, i32 %index) #0 {
entry:
  %prn_pt.addr = alloca %struct.double_prn*, align 8
  %seed.addr = alloca i32, align 4
  %index.addr = alloca i32, align 4
  store %struct.double_prn* %prn_pt, %struct.double_prn** %prn_pt.addr, align 8
  store i32 %seed, i32* %seed.addr, align 4
  store i32 %index, i32* %index.addr, align 4
  %0 = load i32* %index.addr, align 4
  %mul = mul nsw i32 8, %0
  %add = add nsw i32 69607, %mul
  %1 = load i32* %seed.addr, align 4
  %mul1 = mul nsw i32 %add, %1
  %add2 = add nsw i32 %mul1, 12345
  store i32 %add2, i32* %seed.addr, align 4
  %2 = load i32* %seed.addr, align 4
  %shr = ashr i32 %2, 8
  %and = and i32 %shr, 16777215
  %conv = sext i32 %and to i64
  %3 = load %struct.double_prn** %prn_pt.addr, align 8
  %r0 = getelementptr inbounds %struct.double_prn* %3, i32 0, i32 0
  store i64 %conv, i64* %r0, align 8
  %4 = load i32* %index.addr, align 4
  %mul3 = mul nsw i32 8, %4
  %add4 = add nsw i32 69607, %mul3
  %5 = load i32* %seed.addr, align 4
  %mul5 = mul nsw i32 %add4, %5
  %add6 = add nsw i32 %mul5, 12345
  store i32 %add6, i32* %seed.addr, align 4
  %6 = load i32* %seed.addr, align 4
  %shr7 = ashr i32 %6, 8
  %and8 = and i32 %shr7, 16777215
  %conv9 = sext i32 %and8 to i64
  %7 = load %struct.double_prn** %prn_pt.addr, align 8
  %r1 = getelementptr inbounds %struct.double_prn* %7, i32 0, i32 1
  store i64 %conv9, i64* %r1, align 8
  %8 = load i32* %index.addr, align 4
  %mul10 = mul nsw i32 8, %8
  %add11 = add nsw i32 69607, %mul10
  %9 = load i32* %seed.addr, align 4
  %mul12 = mul nsw i32 %add11, %9
  %add13 = add nsw i32 %mul12, 12345
  store i32 %add13, i32* %seed.addr, align 4
  %10 = load i32* %seed.addr, align 4
  %shr14 = ashr i32 %10, 8
  %and15 = and i32 %shr14, 16777215
  %conv16 = sext i32 %and15 to i64
  %11 = load %struct.double_prn** %prn_pt.addr, align 8
  %r2 = getelementptr inbounds %struct.double_prn* %11, i32 0, i32 2
  store i64 %conv16, i64* %r2, align 8
  %12 = load i32* %index.addr, align 4
  %mul17 = mul nsw i32 8, %12
  %add18 = add nsw i32 69607, %mul17
  %13 = load i32* %seed.addr, align 4
  %mul19 = mul nsw i32 %add18, %13
  %add20 = add nsw i32 %mul19, 12345
  store i32 %add20, i32* %seed.addr, align 4
  %14 = load i32* %seed.addr, align 4
  %shr21 = ashr i32 %14, 8
  %and22 = and i32 %shr21, 16777215
  %conv23 = sext i32 %and22 to i64
  %15 = load %struct.double_prn** %prn_pt.addr, align 8
  %r3 = getelementptr inbounds %struct.double_prn* %15, i32 0, i32 3
  store i64 %conv23, i64* %r3, align 8
  %16 = load i32* %index.addr, align 4
  %mul24 = mul nsw i32 8, %16
  %add25 = add nsw i32 69607, %mul24
  %17 = load i32* %seed.addr, align 4
  %mul26 = mul nsw i32 %add25, %17
  %add27 = add nsw i32 %mul26, 12345
  store i32 %add27, i32* %seed.addr, align 4
  %18 = load i32* %seed.addr, align 4
  %shr28 = ashr i32 %18, 8
  %and29 = and i32 %shr28, 16777215
  %conv30 = sext i32 %and29 to i64
  %19 = load %struct.double_prn** %prn_pt.addr, align 8
  %r4 = getelementptr inbounds %struct.double_prn* %19, i32 0, i32 4
  store i64 %conv30, i64* %r4, align 8
  %20 = load i32* %index.addr, align 4
  %mul31 = mul nsw i32 8, %20
  %add32 = add nsw i32 69607, %mul31
  %21 = load i32* %seed.addr, align 4
  %mul33 = mul nsw i32 %add32, %21
  %add34 = add nsw i32 %mul33, 12345
  store i32 %add34, i32* %seed.addr, align 4
  %22 = load i32* %seed.addr, align 4
  %shr35 = ashr i32 %22, 8
  %and36 = and i32 %shr35, 16777215
  %conv37 = sext i32 %and36 to i64
  %23 = load %struct.double_prn** %prn_pt.addr, align 8
  %r5 = getelementptr inbounds %struct.double_prn* %23, i32 0, i32 5
  store i64 %conv37, i64* %r5, align 8
  %24 = load i32* %index.addr, align 4
  %mul38 = mul nsw i32 8, %24
  %add39 = add nsw i32 69607, %mul38
  %25 = load i32* %seed.addr, align 4
  %mul40 = mul nsw i32 %add39, %25
  %add41 = add nsw i32 %mul40, 12345
  store i32 %add41, i32* %seed.addr, align 4
  %26 = load i32* %seed.addr, align 4
  %shr42 = ashr i32 %26, 8
  %and43 = and i32 %shr42, 16777215
  %conv44 = sext i32 %and43 to i64
  %27 = load %struct.double_prn** %prn_pt.addr, align 8
  %r6 = getelementptr inbounds %struct.double_prn* %27, i32 0, i32 6
  store i64 %conv44, i64* %r6, align 8
  %28 = load i32* %index.addr, align 4
  %mul45 = mul nsw i32 8, %28
  %add46 = add nsw i32 69607, %mul45
  %29 = load i32* %seed.addr, align 4
  %mul47 = mul nsw i32 %add46, %29
  %add48 = add nsw i32 %mul47, 12345
  store i32 %add48, i32* %seed.addr, align 4
  %30 = load i32* %seed.addr, align 4
  %conv49 = sext i32 %30 to i64
  %31 = load %struct.double_prn** %prn_pt.addr, align 8
  %ic_state = getelementptr inbounds %struct.double_prn* %31, i32 0, i32 9
  store i64 %conv49, i64* %ic_state, align 8
  %32 = load i32* %index.addr, align 4
  %mul50 = mul nsw i32 8, %32
  %add51 = add nsw i32 100005, %mul50
  %conv52 = sext i32 %add51 to i64
  %33 = load %struct.double_prn** %prn_pt.addr, align 8
  %multiplier = getelementptr inbounds %struct.double_prn* %33, i32 0, i32 7
  store i64 %conv52, i64* %multiplier, align 8
  %34 = load %struct.double_prn** %prn_pt.addr, align 8
  %addend = getelementptr inbounds %struct.double_prn* %34, i32 0, i32 8
  store i64 12345, i64* %addend, align 8
  %35 = load %struct.double_prn** %prn_pt.addr, align 8
  %scale = getelementptr inbounds %struct.double_prn* %35, i32 0, i32 10
  store double 0x3E70000000000000, double* %scale, align 8
  ret void
}

; Function Attrs: nounwind uwtable
define internal double @myrand(%struct.double_prn* %prn_pt) #0 {
entry:
  %prn_pt.addr = alloca %struct.double_prn*, align 8
  %t = alloca i32, align 4
  %s = alloca i32, align 4
  store %struct.double_prn* %prn_pt, %struct.double_prn** %prn_pt.addr, align 8
  %0 = load %struct.double_prn** %prn_pt.addr, align 8
  %r5 = getelementptr inbounds %struct.double_prn* %0, i32 0, i32 5
  %1 = load i64* %r5, align 8
  %shr = lshr i64 %1, 7
  %2 = load %struct.double_prn** %prn_pt.addr, align 8
  %r6 = getelementptr inbounds %struct.double_prn* %2, i32 0, i32 6
  %3 = load i64* %r6, align 8
  %shl = shl i64 %3, 17
  %or = or i64 %shr, %shl
  %4 = load %struct.double_prn** %prn_pt.addr, align 8
  %r4 = getelementptr inbounds %struct.double_prn* %4, i32 0, i32 4
  %5 = load i64* %r4, align 8
  %shr1 = lshr i64 %5, 1
  %6 = load %struct.double_prn** %prn_pt.addr, align 8
  %r52 = getelementptr inbounds %struct.double_prn* %6, i32 0, i32 5
  %7 = load i64* %r52, align 8
  %shl3 = shl i64 %7, 23
  %or4 = or i64 %shr1, %shl3
  %xor = xor i64 %or, %or4
  %and = and i64 %xor, 16777215
  %conv = trunc i64 %and to i32
  store i32 %conv, i32* %t, align 4
  %8 = load %struct.double_prn** %prn_pt.addr, align 8
  %r55 = getelementptr inbounds %struct.double_prn* %8, i32 0, i32 5
  %9 = load i64* %r55, align 8
  %10 = load %struct.double_prn** %prn_pt.addr, align 8
  %r66 = getelementptr inbounds %struct.double_prn* %10, i32 0, i32 6
  store i64 %9, i64* %r66, align 8
  %11 = load %struct.double_prn** %prn_pt.addr, align 8
  %r47 = getelementptr inbounds %struct.double_prn* %11, i32 0, i32 4
  %12 = load i64* %r47, align 8
  %13 = load %struct.double_prn** %prn_pt.addr, align 8
  %r58 = getelementptr inbounds %struct.double_prn* %13, i32 0, i32 5
  store i64 %12, i64* %r58, align 8
  %14 = load %struct.double_prn** %prn_pt.addr, align 8
  %r3 = getelementptr inbounds %struct.double_prn* %14, i32 0, i32 3
  %15 = load i64* %r3, align 8
  %16 = load %struct.double_prn** %prn_pt.addr, align 8
  %r49 = getelementptr inbounds %struct.double_prn* %16, i32 0, i32 4
  store i64 %15, i64* %r49, align 8
  %17 = load %struct.double_prn** %prn_pt.addr, align 8
  %r2 = getelementptr inbounds %struct.double_prn* %17, i32 0, i32 2
  %18 = load i64* %r2, align 8
  %19 = load %struct.double_prn** %prn_pt.addr, align 8
  %r310 = getelementptr inbounds %struct.double_prn* %19, i32 0, i32 3
  store i64 %18, i64* %r310, align 8
  %20 = load %struct.double_prn** %prn_pt.addr, align 8
  %r1 = getelementptr inbounds %struct.double_prn* %20, i32 0, i32 1
  %21 = load i64* %r1, align 8
  %22 = load %struct.double_prn** %prn_pt.addr, align 8
  %r211 = getelementptr inbounds %struct.double_prn* %22, i32 0, i32 2
  store i64 %21, i64* %r211, align 8
  %23 = load %struct.double_prn** %prn_pt.addr, align 8
  %r0 = getelementptr inbounds %struct.double_prn* %23, i32 0, i32 0
  %24 = load i64* %r0, align 8
  %25 = load %struct.double_prn** %prn_pt.addr, align 8
  %r112 = getelementptr inbounds %struct.double_prn* %25, i32 0, i32 1
  store i64 %24, i64* %r112, align 8
  %26 = load i32* %t, align 4
  %conv13 = sext i32 %26 to i64
  %27 = load %struct.double_prn** %prn_pt.addr, align 8
  %r014 = getelementptr inbounds %struct.double_prn* %27, i32 0, i32 0
  store i64 %conv13, i64* %r014, align 8
  %28 = load %struct.double_prn** %prn_pt.addr, align 8
  %ic_state = getelementptr inbounds %struct.double_prn* %28, i32 0, i32 9
  %29 = load i64* %ic_state, align 8
  %30 = load %struct.double_prn** %prn_pt.addr, align 8
  %multiplier = getelementptr inbounds %struct.double_prn* %30, i32 0, i32 7
  %31 = load i64* %multiplier, align 8
  %mul = mul i64 %29, %31
  %32 = load %struct.double_prn** %prn_pt.addr, align 8
  %addend = getelementptr inbounds %struct.double_prn* %32, i32 0, i32 8
  %33 = load i64* %addend, align 8
  %add = add i64 %mul, %33
  %conv15 = trunc i64 %add to i32
  store i32 %conv15, i32* %s, align 4
  %34 = load i32* %s, align 4
  %conv16 = sext i32 %34 to i64
  %35 = load %struct.double_prn** %prn_pt.addr, align 8
  %ic_state17 = getelementptr inbounds %struct.double_prn* %35, i32 0, i32 9
  store i64 %conv16, i64* %ic_state17, align 8
  %36 = load %struct.double_prn** %prn_pt.addr, align 8
  %scale = getelementptr inbounds %struct.double_prn* %36, i32 0, i32 10
  %37 = load double* %scale, align 8
  %38 = load i32* %t, align 4
  %39 = load i32* %s, align 4
  %shr18 = ashr i32 %39, 8
  %and19 = and i32 %shr18, 16777215
  %xor20 = xor i32 %38, %and19
  %conv21 = sitofp i32 %xor20 to double
  %mul22 = fmul double %37, %conv21
  ret double %mul22
}

; Function Attrs: nounwind uwtable
define internal i32 @check_deviation(double %deviation) #0 {
entry:
  %retval = alloca i32, align 4
  %deviation.addr = alloca double, align 8
  store double %deviation, double* %deviation.addr, align 8
  %0 = load double* @max_deviation, align 8
  %1 = load double* %deviation.addr, align 8
  %cmp = fcmp olt double %0, %1
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %2 = load double* %deviation.addr, align 8
  store double %2, double* @max_deviation, align 8
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %3 = load double* %deviation.addr, align 8
  %4 = load double* %deviation.addr, align 8
  %mul = fmul double %3, %4
  %5 = load double* @av_deviation, align 8
  %add = fadd double %5, %mul
  store double %add, double* @av_deviation, align 8
  %6 = load double* %deviation.addr, align 8
  %cmp1 = fcmp ogt double %6, 1.000000e-04
  br i1 %cmp1, label %if.then2, label %if.else

if.then2:                                         ; preds = %if.end
  store i32 1, i32* %retval
  br label %return

if.else:                                          ; preds = %if.end
  store i32 0, i32* %retval
  br label %return

return:                                           ; preds = %if.else, %if.then2
  %7 = load i32* %retval
  ret i32 %7
}

; Function Attrs: nounwind uwtable
define internal void @reunit_report_problem_matrix(%struct.su3_matrix* %mat, i32 %i, i32 %dir) #0 {
entry:
  %mat.addr = alloca %struct.su3_matrix*, align 8
  %i.addr = alloca i32, align 4
  %dir.addr = alloca i32, align 4
  %ii = alloca i32, align 4
  %jj = alloca i32, align 4
  %ifval = alloca %union.anon, align 8
  store %struct.su3_matrix* %mat, %struct.su3_matrix** %mat.addr, align 8
  store i32 %i, i32* %i.addr, align 4
  store i32 %dir, i32* %dir.addr, align 4
  %call = call i32 (...)* bitcast (i32 ()* @mynode to i32 (...)*)()
  %0 = load i32* %i.addr, align 4
  %1 = load i32* %dir.addr, align 4
  %call1 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([60 x i8]* @.str272, i32 0, i32 0), i32 %call, i32 %0, i32 %1, double 1.000000e-04)
  %call2 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([13 x i8]* @.str1273, i32 0, i32 0))
  store i32 0, i32* %ii, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc16, %entry
  %2 = load i32* %ii, align 4
  %cmp = icmp sle i32 %2, 2
  br i1 %cmp, label %for.body, label %for.end18

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %jj, align 4
  br label %for.cond3

for.cond3:                                        ; preds = %for.inc, %for.body
  %3 = load i32* %jj, align 4
  %cmp4 = icmp sle i32 %3, 2
  br i1 %cmp4, label %for.body5, label %for.end

for.body5:                                        ; preds = %for.cond3
  %4 = load i32* %jj, align 4
  %idxprom = sext i32 %4 to i64
  %5 = load i32* %ii, align 4
  %idxprom6 = sext i32 %5 to i64
  %6 = load %struct.su3_matrix** %mat.addr, align 8
  %e = getelementptr inbounds %struct.su3_matrix* %6, i32 0, i32 0
  %arrayidx = getelementptr inbounds [3 x [3 x %struct.complex]]* %e, i32 0, i64 %idxprom6
  %arrayidx7 = getelementptr inbounds [3 x %struct.complex]* %arrayidx, i32 0, i64 %idxprom
  %real = getelementptr inbounds %struct.complex* %arrayidx7, i32 0, i32 0
  %7 = load double* %real, align 8
  %call8 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([4 x i8]* @.str2274, i32 0, i32 0), double %7)
  %8 = load i32* %jj, align 4
  %idxprom9 = sext i32 %8 to i64
  %9 = load i32* %ii, align 4
  %idxprom10 = sext i32 %9 to i64
  %10 = load %struct.su3_matrix** %mat.addr, align 8
  %e11 = getelementptr inbounds %struct.su3_matrix* %10, i32 0, i32 0
  %arrayidx12 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e11, i32 0, i64 %idxprom10
  %arrayidx13 = getelementptr inbounds [3 x %struct.complex]* %arrayidx12, i32 0, i64 %idxprom9
  %imag = getelementptr inbounds %struct.complex* %arrayidx13, i32 0, i32 1
  %11 = load double* %imag, align 8
  %call14 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([4 x i8]* @.str2274, i32 0, i32 0), double %11)
  br label %for.inc

for.inc:                                          ; preds = %for.body5
  %12 = load i32* %jj, align 4
  %inc = add nsw i32 %12, 1
  store i32 %inc, i32* %jj, align 4
  br label %for.cond3

for.end:                                          ; preds = %for.cond3
  %call15 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([2 x i8]* @.str3275, i32 0, i32 0))
  br label %for.inc16

for.inc16:                                        ; preds = %for.end
  %13 = load i32* %ii, align 4
  %inc17 = add nsw i32 %13, 1
  store i32 %inc17, i32* %ii, align 4
  br label %for.cond

for.end18:                                        ; preds = %for.cond
  %call19 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([16 x i8]* @.str4276, i32 0, i32 0))
  store i32 0, i32* %ii, align 4
  br label %for.cond20

for.cond20:                                       ; preds = %for.inc46, %for.end18
  %14 = load i32* %ii, align 4
  %cmp21 = icmp sle i32 %14, 2
  br i1 %cmp21, label %for.body22, label %for.end48

for.body22:                                       ; preds = %for.cond20
  store i32 0, i32* %jj, align 4
  br label %for.cond23

for.cond23:                                       ; preds = %for.inc42, %for.body22
  %15 = load i32* %jj, align 4
  %cmp24 = icmp sle i32 %15, 2
  br i1 %cmp24, label %for.body25, label %for.end44

for.body25:                                       ; preds = %for.cond23
  %16 = load i32* %jj, align 4
  %idxprom26 = sext i32 %16 to i64
  %17 = load i32* %ii, align 4
  %idxprom27 = sext i32 %17 to i64
  %18 = load %struct.su3_matrix** %mat.addr, align 8
  %e28 = getelementptr inbounds %struct.su3_matrix* %18, i32 0, i32 0
  %arrayidx29 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e28, i32 0, i64 %idxprom27
  %arrayidx30 = getelementptr inbounds [3 x %struct.complex]* %arrayidx29, i32 0, i64 %idxprom26
  %real31 = getelementptr inbounds %struct.complex* %arrayidx30, i32 0, i32 0
  %19 = load double* %real31, align 8
  %fval = bitcast %union.anon* %ifval to double*
  store double %19, double* %fval, align 8
  %ival = bitcast %union.anon* %ifval to i32*
  %20 = load i32* %ival, align 4
  %call32 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([6 x i8]* @.str5277, i32 0, i32 0), i32 %20)
  %21 = load i32* %jj, align 4
  %idxprom33 = sext i32 %21 to i64
  %22 = load i32* %ii, align 4
  %idxprom34 = sext i32 %22 to i64
  %23 = load %struct.su3_matrix** %mat.addr, align 8
  %e35 = getelementptr inbounds %struct.su3_matrix* %23, i32 0, i32 0
  %arrayidx36 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e35, i32 0, i64 %idxprom34
  %arrayidx37 = getelementptr inbounds [3 x %struct.complex]* %arrayidx36, i32 0, i64 %idxprom33
  %imag38 = getelementptr inbounds %struct.complex* %arrayidx37, i32 0, i32 1
  %24 = load double* %imag38, align 8
  %fval39 = bitcast %union.anon* %ifval to double*
  store double %24, double* %fval39, align 8
  %ival40 = bitcast %union.anon* %ifval to i32*
  %25 = load i32* %ival40, align 4
  %call41 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([6 x i8]* @.str5277, i32 0, i32 0), i32 %25)
  br label %for.inc42

for.inc42:                                        ; preds = %for.body25
  %26 = load i32* %jj, align 4
  %inc43 = add nsw i32 %26, 1
  store i32 %inc43, i32* %jj, align 4
  br label %for.cond23

for.end44:                                        ; preds = %for.cond23
  %call45 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([2 x i8]* @.str3275, i32 0, i32 0))
  br label %for.inc46

for.inc46:                                        ; preds = %for.end44
  %27 = load i32* %ii, align 4
  %inc47 = add nsw i32 %27, 1
  store i32 %inc47, i32* %ii, align 4
  br label %for.cond20

for.end48:                                        ; preds = %for.cond20
  %call49 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([6 x i8]* @.str6278, i32 0, i32 0))
  %28 = load %struct._IO_FILE** @stdout, align 8
  %call50 = call i32 @fflush(%struct._IO_FILE* %28)
  ret void
}

; Function Attrs: nounwind uwtable
define internal i32 @reunit_su3(%struct.su3_matrix* %c) #0 {
entry:
  %c.addr = alloca %struct.su3_matrix*, align 8
  %bj0r = alloca double, align 8
  %bj0i = alloca double, align 8
  %bj1r = alloca double, align 8
  %bj1i = alloca double, align 8
  %bj2r = alloca double, align 8
  %bj2i = alloca double, align 8
  %c0r = alloca double, align 8
  %c0i = alloca double, align 8
  %c1r = alloca double, align 8
  %c1i = alloca double, align 8
  %c2r = alloca double, align 8
  %c2i = alloca double, align 8
  %ar = alloca double, align 8
  %ai = alloca double, align 8
  %tr = alloca double, align 8
  %ti = alloca double, align 8
  %deviation = alloca double, align 8
  %errors = alloca i32, align 4
  store %struct.su3_matrix* %c, %struct.su3_matrix** %c.addr, align 8
  store i32 0, i32* %errors, align 4
  %0 = load %struct.su3_matrix** %c.addr, align 8
  %e = getelementptr inbounds %struct.su3_matrix* %0, i32 0, i32 0
  %arrayidx = getelementptr inbounds [3 x [3 x %struct.complex]]* %e, i32 0, i64 0
  %arrayidx1 = getelementptr inbounds [3 x %struct.complex]* %arrayidx, i32 0, i64 0
  %real = getelementptr inbounds %struct.complex* %arrayidx1, i32 0, i32 0
  %1 = load double* %real, align 8
  %2 = load %struct.su3_matrix** %c.addr, align 8
  %e2 = getelementptr inbounds %struct.su3_matrix* %2, i32 0, i32 0
  %arrayidx3 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e2, i32 0, i64 0
  %arrayidx4 = getelementptr inbounds [3 x %struct.complex]* %arrayidx3, i32 0, i64 0
  %real5 = getelementptr inbounds %struct.complex* %arrayidx4, i32 0, i32 0
  %3 = load double* %real5, align 8
  %mul = fmul double %1, %3
  %4 = load %struct.su3_matrix** %c.addr, align 8
  %e6 = getelementptr inbounds %struct.su3_matrix* %4, i32 0, i32 0
  %arrayidx7 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e6, i32 0, i64 0
  %arrayidx8 = getelementptr inbounds [3 x %struct.complex]* %arrayidx7, i32 0, i64 0
  %imag = getelementptr inbounds %struct.complex* %arrayidx8, i32 0, i32 1
  %5 = load double* %imag, align 8
  %6 = load %struct.su3_matrix** %c.addr, align 8
  %e9 = getelementptr inbounds %struct.su3_matrix* %6, i32 0, i32 0
  %arrayidx10 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e9, i32 0, i64 0
  %arrayidx11 = getelementptr inbounds [3 x %struct.complex]* %arrayidx10, i32 0, i64 0
  %imag12 = getelementptr inbounds %struct.complex* %arrayidx11, i32 0, i32 1
  %7 = load double* %imag12, align 8
  %mul13 = fmul double %5, %7
  %add = fadd double %mul, %mul13
  %8 = load %struct.su3_matrix** %c.addr, align 8
  %e14 = getelementptr inbounds %struct.su3_matrix* %8, i32 0, i32 0
  %arrayidx15 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e14, i32 0, i64 0
  %arrayidx16 = getelementptr inbounds [3 x %struct.complex]* %arrayidx15, i32 0, i64 1
  %real17 = getelementptr inbounds %struct.complex* %arrayidx16, i32 0, i32 0
  %9 = load double* %real17, align 8
  %10 = load %struct.su3_matrix** %c.addr, align 8
  %e18 = getelementptr inbounds %struct.su3_matrix* %10, i32 0, i32 0
  %arrayidx19 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e18, i32 0, i64 0
  %arrayidx20 = getelementptr inbounds [3 x %struct.complex]* %arrayidx19, i32 0, i64 1
  %real21 = getelementptr inbounds %struct.complex* %arrayidx20, i32 0, i32 0
  %11 = load double* %real21, align 8
  %mul22 = fmul double %9, %11
  %add23 = fadd double %add, %mul22
  %12 = load %struct.su3_matrix** %c.addr, align 8
  %e24 = getelementptr inbounds %struct.su3_matrix* %12, i32 0, i32 0
  %arrayidx25 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e24, i32 0, i64 0
  %arrayidx26 = getelementptr inbounds [3 x %struct.complex]* %arrayidx25, i32 0, i64 1
  %imag27 = getelementptr inbounds %struct.complex* %arrayidx26, i32 0, i32 1
  %13 = load double* %imag27, align 8
  %14 = load %struct.su3_matrix** %c.addr, align 8
  %e28 = getelementptr inbounds %struct.su3_matrix* %14, i32 0, i32 0
  %arrayidx29 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e28, i32 0, i64 0
  %arrayidx30 = getelementptr inbounds [3 x %struct.complex]* %arrayidx29, i32 0, i64 1
  %imag31 = getelementptr inbounds %struct.complex* %arrayidx30, i32 0, i32 1
  %15 = load double* %imag31, align 8
  %mul32 = fmul double %13, %15
  %add33 = fadd double %add23, %mul32
  %16 = load %struct.su3_matrix** %c.addr, align 8
  %e34 = getelementptr inbounds %struct.su3_matrix* %16, i32 0, i32 0
  %arrayidx35 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e34, i32 0, i64 0
  %arrayidx36 = getelementptr inbounds [3 x %struct.complex]* %arrayidx35, i32 0, i64 2
  %real37 = getelementptr inbounds %struct.complex* %arrayidx36, i32 0, i32 0
  %17 = load double* %real37, align 8
  %18 = load %struct.su3_matrix** %c.addr, align 8
  %e38 = getelementptr inbounds %struct.su3_matrix* %18, i32 0, i32 0
  %arrayidx39 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e38, i32 0, i64 0
  %arrayidx40 = getelementptr inbounds [3 x %struct.complex]* %arrayidx39, i32 0, i64 2
  %real41 = getelementptr inbounds %struct.complex* %arrayidx40, i32 0, i32 0
  %19 = load double* %real41, align 8
  %mul42 = fmul double %17, %19
  %add43 = fadd double %add33, %mul42
  %20 = load %struct.su3_matrix** %c.addr, align 8
  %e44 = getelementptr inbounds %struct.su3_matrix* %20, i32 0, i32 0
  %arrayidx45 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e44, i32 0, i64 0
  %arrayidx46 = getelementptr inbounds [3 x %struct.complex]* %arrayidx45, i32 0, i64 2
  %imag47 = getelementptr inbounds %struct.complex* %arrayidx46, i32 0, i32 1
  %21 = load double* %imag47, align 8
  %22 = load %struct.su3_matrix** %c.addr, align 8
  %e48 = getelementptr inbounds %struct.su3_matrix* %22, i32 0, i32 0
  %arrayidx49 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e48, i32 0, i64 0
  %arrayidx50 = getelementptr inbounds [3 x %struct.complex]* %arrayidx49, i32 0, i64 2
  %imag51 = getelementptr inbounds %struct.complex* %arrayidx50, i32 0, i32 1
  %23 = load double* %imag51, align 8
  %mul52 = fmul double %21, %23
  %add53 = fadd double %add43, %mul52
  store double %add53, double* %ar, align 8
  %24 = load double* %ar, align 8
  %sub = fsub double %24, 1.000000e+00
  %call = call double @fabs(double %sub) #8
  store double %call, double* %deviation, align 8
  %25 = load double* %deviation, align 8
  %call54 = call i32 @check_deviation(double %25)
  %26 = load i32* %errors, align 4
  %add55 = add nsw i32 %26, %call54
  store i32 %add55, i32* %errors, align 4
  %27 = load double* %ar, align 8
  %call56 = call double @sqrt(double %27) #2
  %div = fdiv double 1.000000e+00, %call56
  store double %div, double* %ar, align 8
  %28 = load double* %ar, align 8
  %29 = load %struct.su3_matrix** %c.addr, align 8
  %e57 = getelementptr inbounds %struct.su3_matrix* %29, i32 0, i32 0
  %arrayidx58 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e57, i32 0, i64 0
  %arrayidx59 = getelementptr inbounds [3 x %struct.complex]* %arrayidx58, i32 0, i64 0
  %real60 = getelementptr inbounds %struct.complex* %arrayidx59, i32 0, i32 0
  %30 = load double* %real60, align 8
  %mul61 = fmul double %30, %28
  store double %mul61, double* %real60, align 8
  %31 = load double* %ar, align 8
  %32 = load %struct.su3_matrix** %c.addr, align 8
  %e62 = getelementptr inbounds %struct.su3_matrix* %32, i32 0, i32 0
  %arrayidx63 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e62, i32 0, i64 0
  %arrayidx64 = getelementptr inbounds [3 x %struct.complex]* %arrayidx63, i32 0, i64 0
  %imag65 = getelementptr inbounds %struct.complex* %arrayidx64, i32 0, i32 1
  %33 = load double* %imag65, align 8
  %mul66 = fmul double %33, %31
  store double %mul66, double* %imag65, align 8
  %34 = load double* %ar, align 8
  %35 = load %struct.su3_matrix** %c.addr, align 8
  %e67 = getelementptr inbounds %struct.su3_matrix* %35, i32 0, i32 0
  %arrayidx68 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e67, i32 0, i64 0
  %arrayidx69 = getelementptr inbounds [3 x %struct.complex]* %arrayidx68, i32 0, i64 1
  %real70 = getelementptr inbounds %struct.complex* %arrayidx69, i32 0, i32 0
  %36 = load double* %real70, align 8
  %mul71 = fmul double %36, %34
  store double %mul71, double* %real70, align 8
  %37 = load double* %ar, align 8
  %38 = load %struct.su3_matrix** %c.addr, align 8
  %e72 = getelementptr inbounds %struct.su3_matrix* %38, i32 0, i32 0
  %arrayidx73 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e72, i32 0, i64 0
  %arrayidx74 = getelementptr inbounds [3 x %struct.complex]* %arrayidx73, i32 0, i64 1
  %imag75 = getelementptr inbounds %struct.complex* %arrayidx74, i32 0, i32 1
  %39 = load double* %imag75, align 8
  %mul76 = fmul double %39, %37
  store double %mul76, double* %imag75, align 8
  %40 = load double* %ar, align 8
  %41 = load %struct.su3_matrix** %c.addr, align 8
  %e77 = getelementptr inbounds %struct.su3_matrix* %41, i32 0, i32 0
  %arrayidx78 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e77, i32 0, i64 0
  %arrayidx79 = getelementptr inbounds [3 x %struct.complex]* %arrayidx78, i32 0, i64 2
  %real80 = getelementptr inbounds %struct.complex* %arrayidx79, i32 0, i32 0
  %42 = load double* %real80, align 8
  %mul81 = fmul double %42, %40
  store double %mul81, double* %real80, align 8
  %43 = load double* %ar, align 8
  %44 = load %struct.su3_matrix** %c.addr, align 8
  %e82 = getelementptr inbounds %struct.su3_matrix* %44, i32 0, i32 0
  %arrayidx83 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e82, i32 0, i64 0
  %arrayidx84 = getelementptr inbounds [3 x %struct.complex]* %arrayidx83, i32 0, i64 2
  %imag85 = getelementptr inbounds %struct.complex* %arrayidx84, i32 0, i32 1
  %45 = load double* %imag85, align 8
  %mul86 = fmul double %45, %43
  store double %mul86, double* %imag85, align 8
  %46 = load %struct.su3_matrix** %c.addr, align 8
  %e87 = getelementptr inbounds %struct.su3_matrix* %46, i32 0, i32 0
  %arrayidx88 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e87, i32 0, i64 0
  %arrayidx89 = getelementptr inbounds [3 x %struct.complex]* %arrayidx88, i32 0, i64 0
  %real90 = getelementptr inbounds %struct.complex* %arrayidx89, i32 0, i32 0
  %47 = load double* %real90, align 8
  %48 = load %struct.su3_matrix** %c.addr, align 8
  %e91 = getelementptr inbounds %struct.su3_matrix* %48, i32 0, i32 0
  %arrayidx92 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e91, i32 0, i64 1
  %arrayidx93 = getelementptr inbounds [3 x %struct.complex]* %arrayidx92, i32 0, i64 0
  %real94 = getelementptr inbounds %struct.complex* %arrayidx93, i32 0, i32 0
  %49 = load double* %real94, align 8
  %mul95 = fmul double %47, %49
  %50 = load %struct.su3_matrix** %c.addr, align 8
  %e96 = getelementptr inbounds %struct.su3_matrix* %50, i32 0, i32 0
  %arrayidx97 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e96, i32 0, i64 0
  %arrayidx98 = getelementptr inbounds [3 x %struct.complex]* %arrayidx97, i32 0, i64 0
  %imag99 = getelementptr inbounds %struct.complex* %arrayidx98, i32 0, i32 1
  %51 = load double* %imag99, align 8
  %52 = load %struct.su3_matrix** %c.addr, align 8
  %e100 = getelementptr inbounds %struct.su3_matrix* %52, i32 0, i32 0
  %arrayidx101 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e100, i32 0, i64 1
  %arrayidx102 = getelementptr inbounds [3 x %struct.complex]* %arrayidx101, i32 0, i64 0
  %imag103 = getelementptr inbounds %struct.complex* %arrayidx102, i32 0, i32 1
  %53 = load double* %imag103, align 8
  %mul104 = fmul double %51, %53
  %add105 = fadd double %mul95, %mul104
  %54 = load %struct.su3_matrix** %c.addr, align 8
  %e106 = getelementptr inbounds %struct.su3_matrix* %54, i32 0, i32 0
  %arrayidx107 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e106, i32 0, i64 0
  %arrayidx108 = getelementptr inbounds [3 x %struct.complex]* %arrayidx107, i32 0, i64 1
  %real109 = getelementptr inbounds %struct.complex* %arrayidx108, i32 0, i32 0
  %55 = load double* %real109, align 8
  %56 = load %struct.su3_matrix** %c.addr, align 8
  %e110 = getelementptr inbounds %struct.su3_matrix* %56, i32 0, i32 0
  %arrayidx111 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e110, i32 0, i64 1
  %arrayidx112 = getelementptr inbounds [3 x %struct.complex]* %arrayidx111, i32 0, i64 1
  %real113 = getelementptr inbounds %struct.complex* %arrayidx112, i32 0, i32 0
  %57 = load double* %real113, align 8
  %mul114 = fmul double %55, %57
  %add115 = fadd double %add105, %mul114
  %58 = load %struct.su3_matrix** %c.addr, align 8
  %e116 = getelementptr inbounds %struct.su3_matrix* %58, i32 0, i32 0
  %arrayidx117 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e116, i32 0, i64 0
  %arrayidx118 = getelementptr inbounds [3 x %struct.complex]* %arrayidx117, i32 0, i64 1
  %imag119 = getelementptr inbounds %struct.complex* %arrayidx118, i32 0, i32 1
  %59 = load double* %imag119, align 8
  %60 = load %struct.su3_matrix** %c.addr, align 8
  %e120 = getelementptr inbounds %struct.su3_matrix* %60, i32 0, i32 0
  %arrayidx121 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e120, i32 0, i64 1
  %arrayidx122 = getelementptr inbounds [3 x %struct.complex]* %arrayidx121, i32 0, i64 1
  %imag123 = getelementptr inbounds %struct.complex* %arrayidx122, i32 0, i32 1
  %61 = load double* %imag123, align 8
  %mul124 = fmul double %59, %61
  %add125 = fadd double %add115, %mul124
  %62 = load %struct.su3_matrix** %c.addr, align 8
  %e126 = getelementptr inbounds %struct.su3_matrix* %62, i32 0, i32 0
  %arrayidx127 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e126, i32 0, i64 0
  %arrayidx128 = getelementptr inbounds [3 x %struct.complex]* %arrayidx127, i32 0, i64 2
  %real129 = getelementptr inbounds %struct.complex* %arrayidx128, i32 0, i32 0
  %63 = load double* %real129, align 8
  %64 = load %struct.su3_matrix** %c.addr, align 8
  %e130 = getelementptr inbounds %struct.su3_matrix* %64, i32 0, i32 0
  %arrayidx131 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e130, i32 0, i64 1
  %arrayidx132 = getelementptr inbounds [3 x %struct.complex]* %arrayidx131, i32 0, i64 2
  %real133 = getelementptr inbounds %struct.complex* %arrayidx132, i32 0, i32 0
  %65 = load double* %real133, align 8
  %mul134 = fmul double %63, %65
  %add135 = fadd double %add125, %mul134
  %66 = load %struct.su3_matrix** %c.addr, align 8
  %e136 = getelementptr inbounds %struct.su3_matrix* %66, i32 0, i32 0
  %arrayidx137 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e136, i32 0, i64 0
  %arrayidx138 = getelementptr inbounds [3 x %struct.complex]* %arrayidx137, i32 0, i64 2
  %imag139 = getelementptr inbounds %struct.complex* %arrayidx138, i32 0, i32 1
  %67 = load double* %imag139, align 8
  %68 = load %struct.su3_matrix** %c.addr, align 8
  %e140 = getelementptr inbounds %struct.su3_matrix* %68, i32 0, i32 0
  %arrayidx141 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e140, i32 0, i64 1
  %arrayidx142 = getelementptr inbounds [3 x %struct.complex]* %arrayidx141, i32 0, i64 2
  %imag143 = getelementptr inbounds %struct.complex* %arrayidx142, i32 0, i32 1
  %69 = load double* %imag143, align 8
  %mul144 = fmul double %67, %69
  %add145 = fadd double %add135, %mul144
  store double %add145, double* %ar, align 8
  %70 = load %struct.su3_matrix** %c.addr, align 8
  %e146 = getelementptr inbounds %struct.su3_matrix* %70, i32 0, i32 0
  %arrayidx147 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e146, i32 0, i64 0
  %arrayidx148 = getelementptr inbounds [3 x %struct.complex]* %arrayidx147, i32 0, i64 0
  %real149 = getelementptr inbounds %struct.complex* %arrayidx148, i32 0, i32 0
  %71 = load double* %real149, align 8
  %72 = load %struct.su3_matrix** %c.addr, align 8
  %e150 = getelementptr inbounds %struct.su3_matrix* %72, i32 0, i32 0
  %arrayidx151 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e150, i32 0, i64 1
  %arrayidx152 = getelementptr inbounds [3 x %struct.complex]* %arrayidx151, i32 0, i64 0
  %imag153 = getelementptr inbounds %struct.complex* %arrayidx152, i32 0, i32 1
  %73 = load double* %imag153, align 8
  %mul154 = fmul double %71, %73
  %74 = load %struct.su3_matrix** %c.addr, align 8
  %e155 = getelementptr inbounds %struct.su3_matrix* %74, i32 0, i32 0
  %arrayidx156 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e155, i32 0, i64 0
  %arrayidx157 = getelementptr inbounds [3 x %struct.complex]* %arrayidx156, i32 0, i64 0
  %imag158 = getelementptr inbounds %struct.complex* %arrayidx157, i32 0, i32 1
  %75 = load double* %imag158, align 8
  %76 = load %struct.su3_matrix** %c.addr, align 8
  %e159 = getelementptr inbounds %struct.su3_matrix* %76, i32 0, i32 0
  %arrayidx160 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e159, i32 0, i64 1
  %arrayidx161 = getelementptr inbounds [3 x %struct.complex]* %arrayidx160, i32 0, i64 0
  %real162 = getelementptr inbounds %struct.complex* %arrayidx161, i32 0, i32 0
  %77 = load double* %real162, align 8
  %mul163 = fmul double %75, %77
  %sub164 = fsub double %mul154, %mul163
  %78 = load %struct.su3_matrix** %c.addr, align 8
  %e165 = getelementptr inbounds %struct.su3_matrix* %78, i32 0, i32 0
  %arrayidx166 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e165, i32 0, i64 0
  %arrayidx167 = getelementptr inbounds [3 x %struct.complex]* %arrayidx166, i32 0, i64 1
  %real168 = getelementptr inbounds %struct.complex* %arrayidx167, i32 0, i32 0
  %79 = load double* %real168, align 8
  %80 = load %struct.su3_matrix** %c.addr, align 8
  %e169 = getelementptr inbounds %struct.su3_matrix* %80, i32 0, i32 0
  %arrayidx170 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e169, i32 0, i64 1
  %arrayidx171 = getelementptr inbounds [3 x %struct.complex]* %arrayidx170, i32 0, i64 1
  %imag172 = getelementptr inbounds %struct.complex* %arrayidx171, i32 0, i32 1
  %81 = load double* %imag172, align 8
  %mul173 = fmul double %79, %81
  %add174 = fadd double %sub164, %mul173
  %82 = load %struct.su3_matrix** %c.addr, align 8
  %e175 = getelementptr inbounds %struct.su3_matrix* %82, i32 0, i32 0
  %arrayidx176 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e175, i32 0, i64 0
  %arrayidx177 = getelementptr inbounds [3 x %struct.complex]* %arrayidx176, i32 0, i64 1
  %imag178 = getelementptr inbounds %struct.complex* %arrayidx177, i32 0, i32 1
  %83 = load double* %imag178, align 8
  %84 = load %struct.su3_matrix** %c.addr, align 8
  %e179 = getelementptr inbounds %struct.su3_matrix* %84, i32 0, i32 0
  %arrayidx180 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e179, i32 0, i64 1
  %arrayidx181 = getelementptr inbounds [3 x %struct.complex]* %arrayidx180, i32 0, i64 1
  %real182 = getelementptr inbounds %struct.complex* %arrayidx181, i32 0, i32 0
  %85 = load double* %real182, align 8
  %mul183 = fmul double %83, %85
  %sub184 = fsub double %add174, %mul183
  %86 = load %struct.su3_matrix** %c.addr, align 8
  %e185 = getelementptr inbounds %struct.su3_matrix* %86, i32 0, i32 0
  %arrayidx186 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e185, i32 0, i64 0
  %arrayidx187 = getelementptr inbounds [3 x %struct.complex]* %arrayidx186, i32 0, i64 2
  %real188 = getelementptr inbounds %struct.complex* %arrayidx187, i32 0, i32 0
  %87 = load double* %real188, align 8
  %88 = load %struct.su3_matrix** %c.addr, align 8
  %e189 = getelementptr inbounds %struct.su3_matrix* %88, i32 0, i32 0
  %arrayidx190 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e189, i32 0, i64 1
  %arrayidx191 = getelementptr inbounds [3 x %struct.complex]* %arrayidx190, i32 0, i64 2
  %imag192 = getelementptr inbounds %struct.complex* %arrayidx191, i32 0, i32 1
  %89 = load double* %imag192, align 8
  %mul193 = fmul double %87, %89
  %add194 = fadd double %sub184, %mul193
  %90 = load %struct.su3_matrix** %c.addr, align 8
  %e195 = getelementptr inbounds %struct.su3_matrix* %90, i32 0, i32 0
  %arrayidx196 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e195, i32 0, i64 0
  %arrayidx197 = getelementptr inbounds [3 x %struct.complex]* %arrayidx196, i32 0, i64 2
  %imag198 = getelementptr inbounds %struct.complex* %arrayidx197, i32 0, i32 1
  %91 = load double* %imag198, align 8
  %92 = load %struct.su3_matrix** %c.addr, align 8
  %e199 = getelementptr inbounds %struct.su3_matrix* %92, i32 0, i32 0
  %arrayidx200 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e199, i32 0, i64 1
  %arrayidx201 = getelementptr inbounds [3 x %struct.complex]* %arrayidx200, i32 0, i64 2
  %real202 = getelementptr inbounds %struct.complex* %arrayidx201, i32 0, i32 0
  %93 = load double* %real202, align 8
  %mul203 = fmul double %91, %93
  %sub204 = fsub double %add194, %mul203
  store double %sub204, double* %ai, align 8
  %94 = load double* %ar, align 8
  %95 = load double* %ar, align 8
  %mul205 = fmul double %94, %95
  %96 = load double* %ai, align 8
  %97 = load double* %ai, align 8
  %mul206 = fmul double %96, %97
  %add207 = fadd double %mul205, %mul206
  store double %add207, double* %deviation, align 8
  %98 = load double* %deviation, align 8
  %call208 = call i32 @check_deviation(double %98)
  %99 = load i32* %errors, align 4
  %add209 = add nsw i32 %99, %call208
  store i32 %add209, i32* %errors, align 4
  %100 = load double* %ar, align 8
  %101 = load %struct.su3_matrix** %c.addr, align 8
  %e210 = getelementptr inbounds %struct.su3_matrix* %101, i32 0, i32 0
  %arrayidx211 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e210, i32 0, i64 0
  %arrayidx212 = getelementptr inbounds [3 x %struct.complex]* %arrayidx211, i32 0, i64 0
  %real213 = getelementptr inbounds %struct.complex* %arrayidx212, i32 0, i32 0
  %102 = load double* %real213, align 8
  %mul214 = fmul double %100, %102
  %103 = load double* %ai, align 8
  %104 = load %struct.su3_matrix** %c.addr, align 8
  %e215 = getelementptr inbounds %struct.su3_matrix* %104, i32 0, i32 0
  %arrayidx216 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e215, i32 0, i64 0
  %arrayidx217 = getelementptr inbounds [3 x %struct.complex]* %arrayidx216, i32 0, i64 0
  %imag218 = getelementptr inbounds %struct.complex* %arrayidx217, i32 0, i32 1
  %105 = load double* %imag218, align 8
  %mul219 = fmul double %103, %105
  %sub220 = fsub double %mul214, %mul219
  %106 = load %struct.su3_matrix** %c.addr, align 8
  %e221 = getelementptr inbounds %struct.su3_matrix* %106, i32 0, i32 0
  %arrayidx222 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e221, i32 0, i64 1
  %arrayidx223 = getelementptr inbounds [3 x %struct.complex]* %arrayidx222, i32 0, i64 0
  %real224 = getelementptr inbounds %struct.complex* %arrayidx223, i32 0, i32 0
  %107 = load double* %real224, align 8
  %sub225 = fsub double %107, %sub220
  store double %sub225, double* %real224, align 8
  %108 = load double* %ar, align 8
  %109 = load %struct.su3_matrix** %c.addr, align 8
  %e226 = getelementptr inbounds %struct.su3_matrix* %109, i32 0, i32 0
  %arrayidx227 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e226, i32 0, i64 0
  %arrayidx228 = getelementptr inbounds [3 x %struct.complex]* %arrayidx227, i32 0, i64 0
  %imag229 = getelementptr inbounds %struct.complex* %arrayidx228, i32 0, i32 1
  %110 = load double* %imag229, align 8
  %mul230 = fmul double %108, %110
  %111 = load double* %ai, align 8
  %112 = load %struct.su3_matrix** %c.addr, align 8
  %e231 = getelementptr inbounds %struct.su3_matrix* %112, i32 0, i32 0
  %arrayidx232 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e231, i32 0, i64 0
  %arrayidx233 = getelementptr inbounds [3 x %struct.complex]* %arrayidx232, i32 0, i64 0
  %real234 = getelementptr inbounds %struct.complex* %arrayidx233, i32 0, i32 0
  %113 = load double* %real234, align 8
  %mul235 = fmul double %111, %113
  %add236 = fadd double %mul230, %mul235
  %114 = load %struct.su3_matrix** %c.addr, align 8
  %e237 = getelementptr inbounds %struct.su3_matrix* %114, i32 0, i32 0
  %arrayidx238 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e237, i32 0, i64 1
  %arrayidx239 = getelementptr inbounds [3 x %struct.complex]* %arrayidx238, i32 0, i64 0
  %imag240 = getelementptr inbounds %struct.complex* %arrayidx239, i32 0, i32 1
  %115 = load double* %imag240, align 8
  %sub241 = fsub double %115, %add236
  store double %sub241, double* %imag240, align 8
  %116 = load double* %ar, align 8
  %117 = load %struct.su3_matrix** %c.addr, align 8
  %e242 = getelementptr inbounds %struct.su3_matrix* %117, i32 0, i32 0
  %arrayidx243 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e242, i32 0, i64 0
  %arrayidx244 = getelementptr inbounds [3 x %struct.complex]* %arrayidx243, i32 0, i64 1
  %real245 = getelementptr inbounds %struct.complex* %arrayidx244, i32 0, i32 0
  %118 = load double* %real245, align 8
  %mul246 = fmul double %116, %118
  %119 = load double* %ai, align 8
  %120 = load %struct.su3_matrix** %c.addr, align 8
  %e247 = getelementptr inbounds %struct.su3_matrix* %120, i32 0, i32 0
  %arrayidx248 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e247, i32 0, i64 0
  %arrayidx249 = getelementptr inbounds [3 x %struct.complex]* %arrayidx248, i32 0, i64 1
  %imag250 = getelementptr inbounds %struct.complex* %arrayidx249, i32 0, i32 1
  %121 = load double* %imag250, align 8
  %mul251 = fmul double %119, %121
  %sub252 = fsub double %mul246, %mul251
  %122 = load %struct.su3_matrix** %c.addr, align 8
  %e253 = getelementptr inbounds %struct.su3_matrix* %122, i32 0, i32 0
  %arrayidx254 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e253, i32 0, i64 1
  %arrayidx255 = getelementptr inbounds [3 x %struct.complex]* %arrayidx254, i32 0, i64 1
  %real256 = getelementptr inbounds %struct.complex* %arrayidx255, i32 0, i32 0
  %123 = load double* %real256, align 8
  %sub257 = fsub double %123, %sub252
  store double %sub257, double* %real256, align 8
  %124 = load double* %ar, align 8
  %125 = load %struct.su3_matrix** %c.addr, align 8
  %e258 = getelementptr inbounds %struct.su3_matrix* %125, i32 0, i32 0
  %arrayidx259 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e258, i32 0, i64 0
  %arrayidx260 = getelementptr inbounds [3 x %struct.complex]* %arrayidx259, i32 0, i64 1
  %imag261 = getelementptr inbounds %struct.complex* %arrayidx260, i32 0, i32 1
  %126 = load double* %imag261, align 8
  %mul262 = fmul double %124, %126
  %127 = load double* %ai, align 8
  %128 = load %struct.su3_matrix** %c.addr, align 8
  %e263 = getelementptr inbounds %struct.su3_matrix* %128, i32 0, i32 0
  %arrayidx264 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e263, i32 0, i64 0
  %arrayidx265 = getelementptr inbounds [3 x %struct.complex]* %arrayidx264, i32 0, i64 1
  %real266 = getelementptr inbounds %struct.complex* %arrayidx265, i32 0, i32 0
  %129 = load double* %real266, align 8
  %mul267 = fmul double %127, %129
  %add268 = fadd double %mul262, %mul267
  %130 = load %struct.su3_matrix** %c.addr, align 8
  %e269 = getelementptr inbounds %struct.su3_matrix* %130, i32 0, i32 0
  %arrayidx270 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e269, i32 0, i64 1
  %arrayidx271 = getelementptr inbounds [3 x %struct.complex]* %arrayidx270, i32 0, i64 1
  %imag272 = getelementptr inbounds %struct.complex* %arrayidx271, i32 0, i32 1
  %131 = load double* %imag272, align 8
  %sub273 = fsub double %131, %add268
  store double %sub273, double* %imag272, align 8
  %132 = load double* %ar, align 8
  %133 = load %struct.su3_matrix** %c.addr, align 8
  %e274 = getelementptr inbounds %struct.su3_matrix* %133, i32 0, i32 0
  %arrayidx275 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e274, i32 0, i64 0
  %arrayidx276 = getelementptr inbounds [3 x %struct.complex]* %arrayidx275, i32 0, i64 2
  %real277 = getelementptr inbounds %struct.complex* %arrayidx276, i32 0, i32 0
  %134 = load double* %real277, align 8
  %mul278 = fmul double %132, %134
  %135 = load double* %ai, align 8
  %136 = load %struct.su3_matrix** %c.addr, align 8
  %e279 = getelementptr inbounds %struct.su3_matrix* %136, i32 0, i32 0
  %arrayidx280 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e279, i32 0, i64 0
  %arrayidx281 = getelementptr inbounds [3 x %struct.complex]* %arrayidx280, i32 0, i64 2
  %imag282 = getelementptr inbounds %struct.complex* %arrayidx281, i32 0, i32 1
  %137 = load double* %imag282, align 8
  %mul283 = fmul double %135, %137
  %sub284 = fsub double %mul278, %mul283
  %138 = load %struct.su3_matrix** %c.addr, align 8
  %e285 = getelementptr inbounds %struct.su3_matrix* %138, i32 0, i32 0
  %arrayidx286 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e285, i32 0, i64 1
  %arrayidx287 = getelementptr inbounds [3 x %struct.complex]* %arrayidx286, i32 0, i64 2
  %real288 = getelementptr inbounds %struct.complex* %arrayidx287, i32 0, i32 0
  %139 = load double* %real288, align 8
  %sub289 = fsub double %139, %sub284
  store double %sub289, double* %real288, align 8
  %140 = load double* %ar, align 8
  %141 = load %struct.su3_matrix** %c.addr, align 8
  %e290 = getelementptr inbounds %struct.su3_matrix* %141, i32 0, i32 0
  %arrayidx291 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e290, i32 0, i64 0
  %arrayidx292 = getelementptr inbounds [3 x %struct.complex]* %arrayidx291, i32 0, i64 2
  %imag293 = getelementptr inbounds %struct.complex* %arrayidx292, i32 0, i32 1
  %142 = load double* %imag293, align 8
  %mul294 = fmul double %140, %142
  %143 = load double* %ai, align 8
  %144 = load %struct.su3_matrix** %c.addr, align 8
  %e295 = getelementptr inbounds %struct.su3_matrix* %144, i32 0, i32 0
  %arrayidx296 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e295, i32 0, i64 0
  %arrayidx297 = getelementptr inbounds [3 x %struct.complex]* %arrayidx296, i32 0, i64 2
  %real298 = getelementptr inbounds %struct.complex* %arrayidx297, i32 0, i32 0
  %145 = load double* %real298, align 8
  %mul299 = fmul double %143, %145
  %add300 = fadd double %mul294, %mul299
  %146 = load %struct.su3_matrix** %c.addr, align 8
  %e301 = getelementptr inbounds %struct.su3_matrix* %146, i32 0, i32 0
  %arrayidx302 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e301, i32 0, i64 1
  %arrayidx303 = getelementptr inbounds [3 x %struct.complex]* %arrayidx302, i32 0, i64 2
  %imag304 = getelementptr inbounds %struct.complex* %arrayidx303, i32 0, i32 1
  %147 = load double* %imag304, align 8
  %sub305 = fsub double %147, %add300
  store double %sub305, double* %imag304, align 8
  %148 = load %struct.su3_matrix** %c.addr, align 8
  %e306 = getelementptr inbounds %struct.su3_matrix* %148, i32 0, i32 0
  %arrayidx307 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e306, i32 0, i64 1
  %arrayidx308 = getelementptr inbounds [3 x %struct.complex]* %arrayidx307, i32 0, i64 0
  %real309 = getelementptr inbounds %struct.complex* %arrayidx308, i32 0, i32 0
  %149 = load double* %real309, align 8
  %150 = load %struct.su3_matrix** %c.addr, align 8
  %e310 = getelementptr inbounds %struct.su3_matrix* %150, i32 0, i32 0
  %arrayidx311 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e310, i32 0, i64 1
  %arrayidx312 = getelementptr inbounds [3 x %struct.complex]* %arrayidx311, i32 0, i64 0
  %real313 = getelementptr inbounds %struct.complex* %arrayidx312, i32 0, i32 0
  %151 = load double* %real313, align 8
  %mul314 = fmul double %149, %151
  %152 = load %struct.su3_matrix** %c.addr, align 8
  %e315 = getelementptr inbounds %struct.su3_matrix* %152, i32 0, i32 0
  %arrayidx316 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e315, i32 0, i64 1
  %arrayidx317 = getelementptr inbounds [3 x %struct.complex]* %arrayidx316, i32 0, i64 0
  %imag318 = getelementptr inbounds %struct.complex* %arrayidx317, i32 0, i32 1
  %153 = load double* %imag318, align 8
  %154 = load %struct.su3_matrix** %c.addr, align 8
  %e319 = getelementptr inbounds %struct.su3_matrix* %154, i32 0, i32 0
  %arrayidx320 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e319, i32 0, i64 1
  %arrayidx321 = getelementptr inbounds [3 x %struct.complex]* %arrayidx320, i32 0, i64 0
  %imag322 = getelementptr inbounds %struct.complex* %arrayidx321, i32 0, i32 1
  %155 = load double* %imag322, align 8
  %mul323 = fmul double %153, %155
  %add324 = fadd double %mul314, %mul323
  %156 = load %struct.su3_matrix** %c.addr, align 8
  %e325 = getelementptr inbounds %struct.su3_matrix* %156, i32 0, i32 0
  %arrayidx326 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e325, i32 0, i64 1
  %arrayidx327 = getelementptr inbounds [3 x %struct.complex]* %arrayidx326, i32 0, i64 1
  %real328 = getelementptr inbounds %struct.complex* %arrayidx327, i32 0, i32 0
  %157 = load double* %real328, align 8
  %158 = load %struct.su3_matrix** %c.addr, align 8
  %e329 = getelementptr inbounds %struct.su3_matrix* %158, i32 0, i32 0
  %arrayidx330 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e329, i32 0, i64 1
  %arrayidx331 = getelementptr inbounds [3 x %struct.complex]* %arrayidx330, i32 0, i64 1
  %real332 = getelementptr inbounds %struct.complex* %arrayidx331, i32 0, i32 0
  %159 = load double* %real332, align 8
  %mul333 = fmul double %157, %159
  %add334 = fadd double %add324, %mul333
  %160 = load %struct.su3_matrix** %c.addr, align 8
  %e335 = getelementptr inbounds %struct.su3_matrix* %160, i32 0, i32 0
  %arrayidx336 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e335, i32 0, i64 1
  %arrayidx337 = getelementptr inbounds [3 x %struct.complex]* %arrayidx336, i32 0, i64 1
  %imag338 = getelementptr inbounds %struct.complex* %arrayidx337, i32 0, i32 1
  %161 = load double* %imag338, align 8
  %162 = load %struct.su3_matrix** %c.addr, align 8
  %e339 = getelementptr inbounds %struct.su3_matrix* %162, i32 0, i32 0
  %arrayidx340 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e339, i32 0, i64 1
  %arrayidx341 = getelementptr inbounds [3 x %struct.complex]* %arrayidx340, i32 0, i64 1
  %imag342 = getelementptr inbounds %struct.complex* %arrayidx341, i32 0, i32 1
  %163 = load double* %imag342, align 8
  %mul343 = fmul double %161, %163
  %add344 = fadd double %add334, %mul343
  %164 = load %struct.su3_matrix** %c.addr, align 8
  %e345 = getelementptr inbounds %struct.su3_matrix* %164, i32 0, i32 0
  %arrayidx346 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e345, i32 0, i64 1
  %arrayidx347 = getelementptr inbounds [3 x %struct.complex]* %arrayidx346, i32 0, i64 2
  %real348 = getelementptr inbounds %struct.complex* %arrayidx347, i32 0, i32 0
  %165 = load double* %real348, align 8
  %166 = load %struct.su3_matrix** %c.addr, align 8
  %e349 = getelementptr inbounds %struct.su3_matrix* %166, i32 0, i32 0
  %arrayidx350 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e349, i32 0, i64 1
  %arrayidx351 = getelementptr inbounds [3 x %struct.complex]* %arrayidx350, i32 0, i64 2
  %real352 = getelementptr inbounds %struct.complex* %arrayidx351, i32 0, i32 0
  %167 = load double* %real352, align 8
  %mul353 = fmul double %165, %167
  %add354 = fadd double %add344, %mul353
  %168 = load %struct.su3_matrix** %c.addr, align 8
  %e355 = getelementptr inbounds %struct.su3_matrix* %168, i32 0, i32 0
  %arrayidx356 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e355, i32 0, i64 1
  %arrayidx357 = getelementptr inbounds [3 x %struct.complex]* %arrayidx356, i32 0, i64 2
  %imag358 = getelementptr inbounds %struct.complex* %arrayidx357, i32 0, i32 1
  %169 = load double* %imag358, align 8
  %170 = load %struct.su3_matrix** %c.addr, align 8
  %e359 = getelementptr inbounds %struct.su3_matrix* %170, i32 0, i32 0
  %arrayidx360 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e359, i32 0, i64 1
  %arrayidx361 = getelementptr inbounds [3 x %struct.complex]* %arrayidx360, i32 0, i64 2
  %imag362 = getelementptr inbounds %struct.complex* %arrayidx361, i32 0, i32 1
  %171 = load double* %imag362, align 8
  %mul363 = fmul double %169, %171
  %add364 = fadd double %add354, %mul363
  store double %add364, double* %ar, align 8
  %172 = load double* %ar, align 8
  %sub365 = fsub double %172, 1.000000e+00
  %call366 = call double @fabs(double %sub365) #8
  store double %call366, double* %deviation, align 8
  %173 = load double* %deviation, align 8
  %call367 = call i32 @check_deviation(double %173)
  %174 = load i32* %errors, align 4
  %add368 = add nsw i32 %174, %call367
  store i32 %add368, i32* %errors, align 4
  %175 = load double* %ar, align 8
  %call369 = call double @sqrt(double %175) #2
  %div370 = fdiv double 1.000000e+00, %call369
  store double %div370, double* %ar, align 8
  %176 = load double* %ar, align 8
  %177 = load %struct.su3_matrix** %c.addr, align 8
  %e371 = getelementptr inbounds %struct.su3_matrix* %177, i32 0, i32 0
  %arrayidx372 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e371, i32 0, i64 1
  %arrayidx373 = getelementptr inbounds [3 x %struct.complex]* %arrayidx372, i32 0, i64 0
  %real374 = getelementptr inbounds %struct.complex* %arrayidx373, i32 0, i32 0
  %178 = load double* %real374, align 8
  %mul375 = fmul double %178, %176
  store double %mul375, double* %real374, align 8
  %179 = load double* %ar, align 8
  %180 = load %struct.su3_matrix** %c.addr, align 8
  %e376 = getelementptr inbounds %struct.su3_matrix* %180, i32 0, i32 0
  %arrayidx377 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e376, i32 0, i64 1
  %arrayidx378 = getelementptr inbounds [3 x %struct.complex]* %arrayidx377, i32 0, i64 0
  %imag379 = getelementptr inbounds %struct.complex* %arrayidx378, i32 0, i32 1
  %181 = load double* %imag379, align 8
  %mul380 = fmul double %181, %179
  store double %mul380, double* %imag379, align 8
  %182 = load double* %ar, align 8
  %183 = load %struct.su3_matrix** %c.addr, align 8
  %e381 = getelementptr inbounds %struct.su3_matrix* %183, i32 0, i32 0
  %arrayidx382 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e381, i32 0, i64 1
  %arrayidx383 = getelementptr inbounds [3 x %struct.complex]* %arrayidx382, i32 0, i64 1
  %real384 = getelementptr inbounds %struct.complex* %arrayidx383, i32 0, i32 0
  %184 = load double* %real384, align 8
  %mul385 = fmul double %184, %182
  store double %mul385, double* %real384, align 8
  %185 = load double* %ar, align 8
  %186 = load %struct.su3_matrix** %c.addr, align 8
  %e386 = getelementptr inbounds %struct.su3_matrix* %186, i32 0, i32 0
  %arrayidx387 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e386, i32 0, i64 1
  %arrayidx388 = getelementptr inbounds [3 x %struct.complex]* %arrayidx387, i32 0, i64 1
  %imag389 = getelementptr inbounds %struct.complex* %arrayidx388, i32 0, i32 1
  %187 = load double* %imag389, align 8
  %mul390 = fmul double %187, %185
  store double %mul390, double* %imag389, align 8
  %188 = load double* %ar, align 8
  %189 = load %struct.su3_matrix** %c.addr, align 8
  %e391 = getelementptr inbounds %struct.su3_matrix* %189, i32 0, i32 0
  %arrayidx392 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e391, i32 0, i64 1
  %arrayidx393 = getelementptr inbounds [3 x %struct.complex]* %arrayidx392, i32 0, i64 2
  %real394 = getelementptr inbounds %struct.complex* %arrayidx393, i32 0, i32 0
  %190 = load double* %real394, align 8
  %mul395 = fmul double %190, %188
  store double %mul395, double* %real394, align 8
  %191 = load double* %ar, align 8
  %192 = load %struct.su3_matrix** %c.addr, align 8
  %e396 = getelementptr inbounds %struct.su3_matrix* %192, i32 0, i32 0
  %arrayidx397 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e396, i32 0, i64 1
  %arrayidx398 = getelementptr inbounds [3 x %struct.complex]* %arrayidx397, i32 0, i64 2
  %imag399 = getelementptr inbounds %struct.complex* %arrayidx398, i32 0, i32 1
  %193 = load double* %imag399, align 8
  %mul400 = fmul double %193, %191
  store double %mul400, double* %imag399, align 8
  %194 = load %struct.su3_matrix** %c.addr, align 8
  %e401 = getelementptr inbounds %struct.su3_matrix* %194, i32 0, i32 0
  %arrayidx402 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e401, i32 0, i64 2
  %arrayidx403 = getelementptr inbounds [3 x %struct.complex]* %arrayidx402, i32 0, i64 0
  %real404 = getelementptr inbounds %struct.complex* %arrayidx403, i32 0, i32 0
  %195 = load double* %real404, align 8
  store double %195, double* %c0r, align 8
  %196 = load %struct.su3_matrix** %c.addr, align 8
  %e405 = getelementptr inbounds %struct.su3_matrix* %196, i32 0, i32 0
  %arrayidx406 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e405, i32 0, i64 2
  %arrayidx407 = getelementptr inbounds [3 x %struct.complex]* %arrayidx406, i32 0, i64 0
  %imag408 = getelementptr inbounds %struct.complex* %arrayidx407, i32 0, i32 1
  %197 = load double* %imag408, align 8
  store double %197, double* %c0i, align 8
  %198 = load %struct.su3_matrix** %c.addr, align 8
  %e409 = getelementptr inbounds %struct.su3_matrix* %198, i32 0, i32 0
  %arrayidx410 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e409, i32 0, i64 2
  %arrayidx411 = getelementptr inbounds [3 x %struct.complex]* %arrayidx410, i32 0, i64 1
  %real412 = getelementptr inbounds %struct.complex* %arrayidx411, i32 0, i32 0
  %199 = load double* %real412, align 8
  store double %199, double* %c1r, align 8
  %200 = load %struct.su3_matrix** %c.addr, align 8
  %e413 = getelementptr inbounds %struct.su3_matrix* %200, i32 0, i32 0
  %arrayidx414 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e413, i32 0, i64 2
  %arrayidx415 = getelementptr inbounds [3 x %struct.complex]* %arrayidx414, i32 0, i64 1
  %imag416 = getelementptr inbounds %struct.complex* %arrayidx415, i32 0, i32 1
  %201 = load double* %imag416, align 8
  store double %201, double* %c1i, align 8
  %202 = load %struct.su3_matrix** %c.addr, align 8
  %e417 = getelementptr inbounds %struct.su3_matrix* %202, i32 0, i32 0
  %arrayidx418 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e417, i32 0, i64 2
  %arrayidx419 = getelementptr inbounds [3 x %struct.complex]* %arrayidx418, i32 0, i64 2
  %real420 = getelementptr inbounds %struct.complex* %arrayidx419, i32 0, i32 0
  %203 = load double* %real420, align 8
  store double %203, double* %c2r, align 8
  %204 = load %struct.su3_matrix** %c.addr, align 8
  %e421 = getelementptr inbounds %struct.su3_matrix* %204, i32 0, i32 0
  %arrayidx422 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e421, i32 0, i64 2
  %arrayidx423 = getelementptr inbounds [3 x %struct.complex]* %arrayidx422, i32 0, i64 2
  %imag424 = getelementptr inbounds %struct.complex* %arrayidx423, i32 0, i32 1
  %205 = load double* %imag424, align 8
  store double %205, double* %c2i, align 8
  %206 = load %struct.su3_matrix** %c.addr, align 8
  %e425 = getelementptr inbounds %struct.su3_matrix* %206, i32 0, i32 0
  %arrayidx426 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e425, i32 0, i64 0
  %arrayidx427 = getelementptr inbounds [3 x %struct.complex]* %arrayidx426, i32 0, i64 0
  %real428 = getelementptr inbounds %struct.complex* %arrayidx427, i32 0, i32 0
  %207 = load double* %real428, align 8
  store double %207, double* %bj0r, align 8
  %208 = load %struct.su3_matrix** %c.addr, align 8
  %e429 = getelementptr inbounds %struct.su3_matrix* %208, i32 0, i32 0
  %arrayidx430 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e429, i32 0, i64 0
  %arrayidx431 = getelementptr inbounds [3 x %struct.complex]* %arrayidx430, i32 0, i64 0
  %imag432 = getelementptr inbounds %struct.complex* %arrayidx431, i32 0, i32 1
  %209 = load double* %imag432, align 8
  store double %209, double* %bj0i, align 8
  %210 = load %struct.su3_matrix** %c.addr, align 8
  %e433 = getelementptr inbounds %struct.su3_matrix* %210, i32 0, i32 0
  %arrayidx434 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e433, i32 0, i64 0
  %arrayidx435 = getelementptr inbounds [3 x %struct.complex]* %arrayidx434, i32 0, i64 1
  %real436 = getelementptr inbounds %struct.complex* %arrayidx435, i32 0, i32 0
  %211 = load double* %real436, align 8
  store double %211, double* %bj1r, align 8
  %212 = load %struct.su3_matrix** %c.addr, align 8
  %e437 = getelementptr inbounds %struct.su3_matrix* %212, i32 0, i32 0
  %arrayidx438 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e437, i32 0, i64 0
  %arrayidx439 = getelementptr inbounds [3 x %struct.complex]* %arrayidx438, i32 0, i64 1
  %imag440 = getelementptr inbounds %struct.complex* %arrayidx439, i32 0, i32 1
  %213 = load double* %imag440, align 8
  store double %213, double* %bj1i, align 8
  %214 = load %struct.su3_matrix** %c.addr, align 8
  %e441 = getelementptr inbounds %struct.su3_matrix* %214, i32 0, i32 0
  %arrayidx442 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e441, i32 0, i64 0
  %arrayidx443 = getelementptr inbounds [3 x %struct.complex]* %arrayidx442, i32 0, i64 2
  %real444 = getelementptr inbounds %struct.complex* %arrayidx443, i32 0, i32 0
  %215 = load double* %real444, align 8
  store double %215, double* %bj2r, align 8
  %216 = load %struct.su3_matrix** %c.addr, align 8
  %e445 = getelementptr inbounds %struct.su3_matrix* %216, i32 0, i32 0
  %arrayidx446 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e445, i32 0, i64 0
  %arrayidx447 = getelementptr inbounds [3 x %struct.complex]* %arrayidx446, i32 0, i64 2
  %imag448 = getelementptr inbounds %struct.complex* %arrayidx447, i32 0, i32 1
  %217 = load double* %imag448, align 8
  store double %217, double* %bj2i, align 8
  %218 = load %struct.su3_matrix** %c.addr, align 8
  %e449 = getelementptr inbounds %struct.su3_matrix* %218, i32 0, i32 0
  %arrayidx450 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e449, i32 0, i64 1
  %arrayidx451 = getelementptr inbounds [3 x %struct.complex]* %arrayidx450, i32 0, i64 2
  %real452 = getelementptr inbounds %struct.complex* %arrayidx451, i32 0, i32 0
  %219 = load double* %real452, align 8
  store double %219, double* %ar, align 8
  %220 = load %struct.su3_matrix** %c.addr, align 8
  %e453 = getelementptr inbounds %struct.su3_matrix* %220, i32 0, i32 0
  %arrayidx454 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e453, i32 0, i64 1
  %arrayidx455 = getelementptr inbounds [3 x %struct.complex]* %arrayidx454, i32 0, i64 2
  %imag456 = getelementptr inbounds %struct.complex* %arrayidx455, i32 0, i32 1
  %221 = load double* %imag456, align 8
  store double %221, double* %ai, align 8
  %222 = load double* %bj1r, align 8
  %223 = load double* %ar, align 8
  %mul457 = fmul double %222, %223
  %224 = load double* %bj1i, align 8
  %225 = load double* %ai, align 8
  %mul458 = fmul double %224, %225
  %sub459 = fsub double %mul457, %mul458
  store double %sub459, double* %tr, align 8
  %226 = load double* %bj1r, align 8
  %227 = load double* %ai, align 8
  %mul460 = fmul double %226, %227
  %228 = load double* %bj1i, align 8
  %229 = load double* %ar, align 8
  %mul461 = fmul double %228, %229
  %add462 = fadd double %mul460, %mul461
  store double %add462, double* %ti, align 8
  %230 = load %struct.su3_matrix** %c.addr, align 8
  %e463 = getelementptr inbounds %struct.su3_matrix* %230, i32 0, i32 0
  %arrayidx464 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e463, i32 0, i64 1
  %arrayidx465 = getelementptr inbounds [3 x %struct.complex]* %arrayidx464, i32 0, i64 1
  %real466 = getelementptr inbounds %struct.complex* %arrayidx465, i32 0, i32 0
  %231 = load double* %real466, align 8
  store double %231, double* %ar, align 8
  %232 = load %struct.su3_matrix** %c.addr, align 8
  %e467 = getelementptr inbounds %struct.su3_matrix* %232, i32 0, i32 0
  %arrayidx468 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e467, i32 0, i64 1
  %arrayidx469 = getelementptr inbounds [3 x %struct.complex]* %arrayidx468, i32 0, i64 1
  %imag470 = getelementptr inbounds %struct.complex* %arrayidx469, i32 0, i32 1
  %233 = load double* %imag470, align 8
  store double %233, double* %ai, align 8
  %234 = load double* %tr, align 8
  %235 = load double* %bj2r, align 8
  %236 = load double* %ar, align 8
  %mul471 = fmul double %235, %236
  %sub472 = fsub double %234, %mul471
  %237 = load double* %bj2i, align 8
  %238 = load double* %ai, align 8
  %mul473 = fmul double %237, %238
  %add474 = fadd double %sub472, %mul473
  store double %add474, double* %tr, align 8
  %239 = load double* %ti, align 8
  %240 = load double* %bj2r, align 8
  %241 = load double* %ai, align 8
  %mul475 = fmul double %240, %241
  %sub476 = fsub double %239, %mul475
  %242 = load double* %bj2i, align 8
  %243 = load double* %ar, align 8
  %mul477 = fmul double %242, %243
  %sub478 = fsub double %sub476, %mul477
  store double %sub478, double* %ti, align 8
  %244 = load double* %tr, align 8
  %245 = load %struct.su3_matrix** %c.addr, align 8
  %e479 = getelementptr inbounds %struct.su3_matrix* %245, i32 0, i32 0
  %arrayidx480 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e479, i32 0, i64 2
  %arrayidx481 = getelementptr inbounds [3 x %struct.complex]* %arrayidx480, i32 0, i64 0
  %real482 = getelementptr inbounds %struct.complex* %arrayidx481, i32 0, i32 0
  store double %244, double* %real482, align 8
  %246 = load double* %ti, align 8
  %sub483 = fsub double -0.000000e+00, %246
  %247 = load %struct.su3_matrix** %c.addr, align 8
  %e484 = getelementptr inbounds %struct.su3_matrix* %247, i32 0, i32 0
  %arrayidx485 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e484, i32 0, i64 2
  %arrayidx486 = getelementptr inbounds [3 x %struct.complex]* %arrayidx485, i32 0, i64 0
  %imag487 = getelementptr inbounds %struct.complex* %arrayidx486, i32 0, i32 1
  store double %sub483, double* %imag487, align 8
  %248 = load %struct.su3_matrix** %c.addr, align 8
  %e488 = getelementptr inbounds %struct.su3_matrix* %248, i32 0, i32 0
  %arrayidx489 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e488, i32 0, i64 1
  %arrayidx490 = getelementptr inbounds [3 x %struct.complex]* %arrayidx489, i32 0, i64 0
  %real491 = getelementptr inbounds %struct.complex* %arrayidx490, i32 0, i32 0
  %249 = load double* %real491, align 8
  store double %249, double* %ar, align 8
  %250 = load %struct.su3_matrix** %c.addr, align 8
  %e492 = getelementptr inbounds %struct.su3_matrix* %250, i32 0, i32 0
  %arrayidx493 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e492, i32 0, i64 1
  %arrayidx494 = getelementptr inbounds [3 x %struct.complex]* %arrayidx493, i32 0, i64 0
  %imag495 = getelementptr inbounds %struct.complex* %arrayidx494, i32 0, i32 1
  %251 = load double* %imag495, align 8
  store double %251, double* %ai, align 8
  %252 = load double* %bj2r, align 8
  %253 = load double* %ar, align 8
  %mul496 = fmul double %252, %253
  %254 = load double* %bj2i, align 8
  %255 = load double* %ai, align 8
  %mul497 = fmul double %254, %255
  %sub498 = fsub double %mul496, %mul497
  store double %sub498, double* %tr, align 8
  %256 = load double* %bj2r, align 8
  %257 = load double* %ai, align 8
  %mul499 = fmul double %256, %257
  %258 = load double* %bj2i, align 8
  %259 = load double* %ar, align 8
  %mul500 = fmul double %258, %259
  %add501 = fadd double %mul499, %mul500
  store double %add501, double* %ti, align 8
  %260 = load %struct.su3_matrix** %c.addr, align 8
  %e502 = getelementptr inbounds %struct.su3_matrix* %260, i32 0, i32 0
  %arrayidx503 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e502, i32 0, i64 1
  %arrayidx504 = getelementptr inbounds [3 x %struct.complex]* %arrayidx503, i32 0, i64 2
  %real505 = getelementptr inbounds %struct.complex* %arrayidx504, i32 0, i32 0
  %261 = load double* %real505, align 8
  store double %261, double* %ar, align 8
  %262 = load %struct.su3_matrix** %c.addr, align 8
  %e506 = getelementptr inbounds %struct.su3_matrix* %262, i32 0, i32 0
  %arrayidx507 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e506, i32 0, i64 1
  %arrayidx508 = getelementptr inbounds [3 x %struct.complex]* %arrayidx507, i32 0, i64 2
  %imag509 = getelementptr inbounds %struct.complex* %arrayidx508, i32 0, i32 1
  %263 = load double* %imag509, align 8
  store double %263, double* %ai, align 8
  %264 = load double* %tr, align 8
  %265 = load double* %bj0r, align 8
  %266 = load double* %ar, align 8
  %mul510 = fmul double %265, %266
  %sub511 = fsub double %264, %mul510
  %267 = load double* %bj0i, align 8
  %268 = load double* %ai, align 8
  %mul512 = fmul double %267, %268
  %add513 = fadd double %sub511, %mul512
  store double %add513, double* %tr, align 8
  %269 = load double* %ti, align 8
  %270 = load double* %bj0r, align 8
  %271 = load double* %ai, align 8
  %mul514 = fmul double %270, %271
  %sub515 = fsub double %269, %mul514
  %272 = load double* %bj0i, align 8
  %273 = load double* %ar, align 8
  %mul516 = fmul double %272, %273
  %sub517 = fsub double %sub515, %mul516
  store double %sub517, double* %ti, align 8
  %274 = load double* %tr, align 8
  %275 = load %struct.su3_matrix** %c.addr, align 8
  %e518 = getelementptr inbounds %struct.su3_matrix* %275, i32 0, i32 0
  %arrayidx519 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e518, i32 0, i64 2
  %arrayidx520 = getelementptr inbounds [3 x %struct.complex]* %arrayidx519, i32 0, i64 1
  %real521 = getelementptr inbounds %struct.complex* %arrayidx520, i32 0, i32 0
  store double %274, double* %real521, align 8
  %276 = load double* %ti, align 8
  %sub522 = fsub double -0.000000e+00, %276
  %277 = load %struct.su3_matrix** %c.addr, align 8
  %e523 = getelementptr inbounds %struct.su3_matrix* %277, i32 0, i32 0
  %arrayidx524 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e523, i32 0, i64 2
  %arrayidx525 = getelementptr inbounds [3 x %struct.complex]* %arrayidx524, i32 0, i64 1
  %imag526 = getelementptr inbounds %struct.complex* %arrayidx525, i32 0, i32 1
  store double %sub522, double* %imag526, align 8
  %278 = load %struct.su3_matrix** %c.addr, align 8
  %e527 = getelementptr inbounds %struct.su3_matrix* %278, i32 0, i32 0
  %arrayidx528 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e527, i32 0, i64 1
  %arrayidx529 = getelementptr inbounds [3 x %struct.complex]* %arrayidx528, i32 0, i64 1
  %real530 = getelementptr inbounds %struct.complex* %arrayidx529, i32 0, i32 0
  %279 = load double* %real530, align 8
  store double %279, double* %ar, align 8
  %280 = load %struct.su3_matrix** %c.addr, align 8
  %e531 = getelementptr inbounds %struct.su3_matrix* %280, i32 0, i32 0
  %arrayidx532 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e531, i32 0, i64 1
  %arrayidx533 = getelementptr inbounds [3 x %struct.complex]* %arrayidx532, i32 0, i64 1
  %imag534 = getelementptr inbounds %struct.complex* %arrayidx533, i32 0, i32 1
  %281 = load double* %imag534, align 8
  store double %281, double* %ai, align 8
  %282 = load double* %bj0r, align 8
  %283 = load double* %ar, align 8
  %mul535 = fmul double %282, %283
  %284 = load double* %bj0i, align 8
  %285 = load double* %ai, align 8
  %mul536 = fmul double %284, %285
  %sub537 = fsub double %mul535, %mul536
  store double %sub537, double* %tr, align 8
  %286 = load double* %bj0r, align 8
  %287 = load double* %ai, align 8
  %mul538 = fmul double %286, %287
  %288 = load double* %bj0i, align 8
  %289 = load double* %ar, align 8
  %mul539 = fmul double %288, %289
  %add540 = fadd double %mul538, %mul539
  store double %add540, double* %ti, align 8
  %290 = load %struct.su3_matrix** %c.addr, align 8
  %e541 = getelementptr inbounds %struct.su3_matrix* %290, i32 0, i32 0
  %arrayidx542 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e541, i32 0, i64 1
  %arrayidx543 = getelementptr inbounds [3 x %struct.complex]* %arrayidx542, i32 0, i64 0
  %real544 = getelementptr inbounds %struct.complex* %arrayidx543, i32 0, i32 0
  %291 = load double* %real544, align 8
  store double %291, double* %ar, align 8
  %292 = load %struct.su3_matrix** %c.addr, align 8
  %e545 = getelementptr inbounds %struct.su3_matrix* %292, i32 0, i32 0
  %arrayidx546 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e545, i32 0, i64 1
  %arrayidx547 = getelementptr inbounds [3 x %struct.complex]* %arrayidx546, i32 0, i64 0
  %imag548 = getelementptr inbounds %struct.complex* %arrayidx547, i32 0, i32 1
  %293 = load double* %imag548, align 8
  store double %293, double* %ai, align 8
  %294 = load double* %tr, align 8
  %295 = load double* %bj1r, align 8
  %296 = load double* %ar, align 8
  %mul549 = fmul double %295, %296
  %sub550 = fsub double %294, %mul549
  %297 = load double* %bj1i, align 8
  %298 = load double* %ai, align 8
  %mul551 = fmul double %297, %298
  %add552 = fadd double %sub550, %mul551
  store double %add552, double* %tr, align 8
  %299 = load double* %ti, align 8
  %300 = load double* %bj1r, align 8
  %301 = load double* %ai, align 8
  %mul553 = fmul double %300, %301
  %sub554 = fsub double %299, %mul553
  %302 = load double* %bj1i, align 8
  %303 = load double* %ar, align 8
  %mul555 = fmul double %302, %303
  %sub556 = fsub double %sub554, %mul555
  store double %sub556, double* %ti, align 8
  %304 = load double* %tr, align 8
  %305 = load %struct.su3_matrix** %c.addr, align 8
  %e557 = getelementptr inbounds %struct.su3_matrix* %305, i32 0, i32 0
  %arrayidx558 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e557, i32 0, i64 2
  %arrayidx559 = getelementptr inbounds [3 x %struct.complex]* %arrayidx558, i32 0, i64 2
  %real560 = getelementptr inbounds %struct.complex* %arrayidx559, i32 0, i32 0
  store double %304, double* %real560, align 8
  %306 = load double* %ti, align 8
  %sub561 = fsub double -0.000000e+00, %306
  %307 = load %struct.su3_matrix** %c.addr, align 8
  %e562 = getelementptr inbounds %struct.su3_matrix* %307, i32 0, i32 0
  %arrayidx563 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e562, i32 0, i64 2
  %arrayidx564 = getelementptr inbounds [3 x %struct.complex]* %arrayidx563, i32 0, i64 2
  %imag565 = getelementptr inbounds %struct.complex* %arrayidx564, i32 0, i32 1
  store double %sub561, double* %imag565, align 8
  %308 = load double* %c0r, align 8
  %309 = load %struct.su3_matrix** %c.addr, align 8
  %e566 = getelementptr inbounds %struct.su3_matrix* %309, i32 0, i32 0
  %arrayidx567 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e566, i32 0, i64 2
  %arrayidx568 = getelementptr inbounds [3 x %struct.complex]* %arrayidx567, i32 0, i64 0
  %real569 = getelementptr inbounds %struct.complex* %arrayidx568, i32 0, i32 0
  %310 = load double* %real569, align 8
  %sub570 = fsub double %308, %310
  %311 = load double* %c0r, align 8
  %312 = load %struct.su3_matrix** %c.addr, align 8
  %e571 = getelementptr inbounds %struct.su3_matrix* %312, i32 0, i32 0
  %arrayidx572 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e571, i32 0, i64 2
  %arrayidx573 = getelementptr inbounds [3 x %struct.complex]* %arrayidx572, i32 0, i64 0
  %real574 = getelementptr inbounds %struct.complex* %arrayidx573, i32 0, i32 0
  %313 = load double* %real574, align 8
  %sub575 = fsub double %311, %313
  %mul576 = fmul double %sub570, %sub575
  %314 = load double* %c0i, align 8
  %315 = load %struct.su3_matrix** %c.addr, align 8
  %e577 = getelementptr inbounds %struct.su3_matrix* %315, i32 0, i32 0
  %arrayidx578 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e577, i32 0, i64 2
  %arrayidx579 = getelementptr inbounds [3 x %struct.complex]* %arrayidx578, i32 0, i64 0
  %imag580 = getelementptr inbounds %struct.complex* %arrayidx579, i32 0, i32 1
  %316 = load double* %imag580, align 8
  %sub581 = fsub double %314, %316
  %317 = load double* %c0i, align 8
  %318 = load %struct.su3_matrix** %c.addr, align 8
  %e582 = getelementptr inbounds %struct.su3_matrix* %318, i32 0, i32 0
  %arrayidx583 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e582, i32 0, i64 2
  %arrayidx584 = getelementptr inbounds [3 x %struct.complex]* %arrayidx583, i32 0, i64 0
  %imag585 = getelementptr inbounds %struct.complex* %arrayidx584, i32 0, i32 1
  %319 = load double* %imag585, align 8
  %sub586 = fsub double %317, %319
  %mul587 = fmul double %sub581, %sub586
  %add588 = fadd double %mul576, %mul587
  %320 = load double* %c1r, align 8
  %321 = load %struct.su3_matrix** %c.addr, align 8
  %e589 = getelementptr inbounds %struct.su3_matrix* %321, i32 0, i32 0
  %arrayidx590 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e589, i32 0, i64 2
  %arrayidx591 = getelementptr inbounds [3 x %struct.complex]* %arrayidx590, i32 0, i64 1
  %real592 = getelementptr inbounds %struct.complex* %arrayidx591, i32 0, i32 0
  %322 = load double* %real592, align 8
  %sub593 = fsub double %320, %322
  %323 = load double* %c1r, align 8
  %324 = load %struct.su3_matrix** %c.addr, align 8
  %e594 = getelementptr inbounds %struct.su3_matrix* %324, i32 0, i32 0
  %arrayidx595 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e594, i32 0, i64 2
  %arrayidx596 = getelementptr inbounds [3 x %struct.complex]* %arrayidx595, i32 0, i64 1
  %real597 = getelementptr inbounds %struct.complex* %arrayidx596, i32 0, i32 0
  %325 = load double* %real597, align 8
  %sub598 = fsub double %323, %325
  %mul599 = fmul double %sub593, %sub598
  %add600 = fadd double %add588, %mul599
  %326 = load double* %c1i, align 8
  %327 = load %struct.su3_matrix** %c.addr, align 8
  %e601 = getelementptr inbounds %struct.su3_matrix* %327, i32 0, i32 0
  %arrayidx602 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e601, i32 0, i64 2
  %arrayidx603 = getelementptr inbounds [3 x %struct.complex]* %arrayidx602, i32 0, i64 1
  %imag604 = getelementptr inbounds %struct.complex* %arrayidx603, i32 0, i32 1
  %328 = load double* %imag604, align 8
  %sub605 = fsub double %326, %328
  %329 = load double* %c1i, align 8
  %330 = load %struct.su3_matrix** %c.addr, align 8
  %e606 = getelementptr inbounds %struct.su3_matrix* %330, i32 0, i32 0
  %arrayidx607 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e606, i32 0, i64 2
  %arrayidx608 = getelementptr inbounds [3 x %struct.complex]* %arrayidx607, i32 0, i64 1
  %imag609 = getelementptr inbounds %struct.complex* %arrayidx608, i32 0, i32 1
  %331 = load double* %imag609, align 8
  %sub610 = fsub double %329, %331
  %mul611 = fmul double %sub605, %sub610
  %add612 = fadd double %add600, %mul611
  %332 = load double* %c2r, align 8
  %333 = load %struct.su3_matrix** %c.addr, align 8
  %e613 = getelementptr inbounds %struct.su3_matrix* %333, i32 0, i32 0
  %arrayidx614 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e613, i32 0, i64 2
  %arrayidx615 = getelementptr inbounds [3 x %struct.complex]* %arrayidx614, i32 0, i64 2
  %real616 = getelementptr inbounds %struct.complex* %arrayidx615, i32 0, i32 0
  %334 = load double* %real616, align 8
  %sub617 = fsub double %332, %334
  %335 = load double* %c2r, align 8
  %336 = load %struct.su3_matrix** %c.addr, align 8
  %e618 = getelementptr inbounds %struct.su3_matrix* %336, i32 0, i32 0
  %arrayidx619 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e618, i32 0, i64 2
  %arrayidx620 = getelementptr inbounds [3 x %struct.complex]* %arrayidx619, i32 0, i64 2
  %real621 = getelementptr inbounds %struct.complex* %arrayidx620, i32 0, i32 0
  %337 = load double* %real621, align 8
  %sub622 = fsub double %335, %337
  %mul623 = fmul double %sub617, %sub622
  %add624 = fadd double %add612, %mul623
  %338 = load double* %c2i, align 8
  %339 = load %struct.su3_matrix** %c.addr, align 8
  %e625 = getelementptr inbounds %struct.su3_matrix* %339, i32 0, i32 0
  %arrayidx626 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e625, i32 0, i64 2
  %arrayidx627 = getelementptr inbounds [3 x %struct.complex]* %arrayidx626, i32 0, i64 2
  %imag628 = getelementptr inbounds %struct.complex* %arrayidx627, i32 0, i32 1
  %340 = load double* %imag628, align 8
  %sub629 = fsub double %338, %340
  %341 = load double* %c2i, align 8
  %342 = load %struct.su3_matrix** %c.addr, align 8
  %e630 = getelementptr inbounds %struct.su3_matrix* %342, i32 0, i32 0
  %arrayidx631 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e630, i32 0, i64 2
  %arrayidx632 = getelementptr inbounds [3 x %struct.complex]* %arrayidx631, i32 0, i64 2
  %imag633 = getelementptr inbounds %struct.complex* %arrayidx632, i32 0, i32 1
  %343 = load double* %imag633, align 8
  %sub634 = fsub double %341, %343
  %mul635 = fmul double %sub629, %sub634
  %add636 = fadd double %add624, %mul635
  store double %add636, double* %ar, align 8
  %344 = load double* %ar, align 8
  store double %344, double* %deviation, align 8
  %345 = load double* %deviation, align 8
  %call637 = call i32 @check_deviation(double %345)
  %346 = load i32* %errors, align 4
  %add638 = add nsw i32 %346, %call637
  store i32 %add638, i32* %errors, align 4
  %347 = load i32* %errors, align 4
  ret i32 %347
}

; Function Attrs: nounwind uwtable
define internal void @reunitarize() #0 {
entry:
  %mat = alloca %struct.su3_matrix*, align 8
  %i = alloca i32, align 4
  %dir = alloca i32, align 4
  %s = alloca %struct.site*, align 8
  %errcount = alloca i32, align 4
  %errors = alloca i32, align 4
  store i32 0, i32* %errcount, align 4
  store double 0.000000e+00, double* @max_deviation, align 8
  store double 0.000000e+00, double* @av_deviation, align 8
  store i32 0, i32* %i, align 4
  %0 = load %struct.site** @lattice, align 8
  store %struct.site* %0, %struct.site** %s, align 8
  br label %for.cond

for.cond:                                         ; preds = %for.inc8, %entry
  %1 = load i32* %i, align 4
  %2 = load i32* @sites_on_node, align 4
  %cmp = icmp slt i32 %1, %2
  br i1 %cmp, label %for.body, label %for.end10

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %dir, align 4
  br label %for.cond1

for.cond1:                                        ; preds = %for.inc, %for.body
  %3 = load i32* %dir, align 4
  %cmp2 = icmp sle i32 %3, 3
  br i1 %cmp2, label %for.body3, label %for.end

for.body3:                                        ; preds = %for.cond1
  %4 = load i32* %dir, align 4
  %idxprom = sext i32 %4 to i64
  %5 = load %struct.site** %s, align 8
  %link = getelementptr inbounds %struct.site* %5, i32 0, i32 8
  %arrayidx = getelementptr inbounds [4 x %struct.su3_matrix]* %link, i32 0, i64 %idxprom
  store %struct.su3_matrix* %arrayidx, %struct.su3_matrix** %mat, align 8
  %6 = load %struct.su3_matrix** %mat, align 8
  %call = call i32 @reunit_su3(%struct.su3_matrix* %6)
  store i32 %call, i32* %errors, align 4
  %7 = load i32* %errors, align 4
  %8 = load i32* %errcount, align 4
  %add = add nsw i32 %8, %7
  store i32 %add, i32* %errcount, align 4
  %9 = load i32* %errors, align 4
  %tobool = icmp ne i32 %9, 0
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; preds = %for.body3
  %10 = load %struct.su3_matrix** %mat, align 8
  %11 = load i32* %i, align 4
  %12 = load i32* %dir, align 4
  call void @reunit_report_problem_matrix(%struct.su3_matrix* %10, i32 %11, i32 %12)
  br label %if.end

if.end:                                           ; preds = %if.then, %for.body3
  %13 = load i32* %errcount, align 4
  %cmp4 = icmp sgt i32 %13, 100
  br i1 %cmp4, label %if.then5, label %if.end7

if.then5:                                         ; preds = %if.end
  %call6 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([33 x i8]* @.str7279, i32 0, i32 0))
  call void @terminate(i32 1)
  br label %if.end7

if.end7:                                          ; preds = %if.then5, %if.end
  br label %for.inc

for.inc:                                          ; preds = %if.end7
  %14 = load i32* %dir, align 4
  %inc = add nsw i32 %14, 1
  store i32 %inc, i32* %dir, align 4
  br label %for.cond1

for.end:                                          ; preds = %for.cond1
  br label %for.inc8

for.inc8:                                         ; preds = %for.end
  %15 = load i32* %i, align 4
  %inc9 = add nsw i32 %15, 1
  store i32 %inc9, i32* %i, align 4
  %16 = load %struct.site** %s, align 8
  %incdec.ptr = getelementptr inbounds %struct.site* %16, i32 1
  store %struct.site* %incdec.ptr, %struct.site** %s, align 8
  br label %for.cond

for.end10:                                        ; preds = %for.cond
  %17 = load double* @max_deviation, align 8
  %cmp11 = fcmp ogt double %17, 1.000000e-04
  br i1 %cmp11, label %if.then12, label %if.end20

if.then12:                                        ; preds = %for.end10
  %call13 = call i32 (...)* bitcast (i32 ()* @mynode to i32 (...)*)()
  %18 = load double* @max_deviation, align 8
  %call14 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([62 x i8]* @.str8280, i32 0, i32 0), i32 %call13, double %18)
  %19 = load i32* %errcount, align 4
  %inc15 = add nsw i32 %19, 1
  store i32 %inc15, i32* %errcount, align 4
  %20 = load i32* %errcount, align 4
  %cmp16 = icmp sgt i32 %20, 100
  br i1 %cmp16, label %if.then17, label %if.end19

if.then17:                                        ; preds = %if.then12
  %call18 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([33 x i8]* @.str7279, i32 0, i32 0))
  call void @terminate(i32 1)
  br label %if.end19

if.end19:                                         ; preds = %if.then17, %if.then12
  br label %if.end20

if.end20:                                         ; preds = %if.end19, %for.end10
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @make_loop_table() #0 {
entry:
  %perm = alloca [8 x i32], align 16
  %pp = alloca [8 x i32], align 16
  %ir = alloca [4 x i32], align 16
  %length = alloca i32, align 4
  %iloop = alloca i32, align 4
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %chr = alloca i32, align 4
  %vec = alloca [6 x i32], align 16
  %count = alloca i32, align 4
  %flag = alloca i32, align 4
  store i32 0, i32* %j, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc12, %entry
  %0 = load i32* %j, align 4
  %cmp = icmp slt i32 %0, 3
  br i1 %cmp, label %for.body, label %for.end14

for.body:                                         ; preds = %for.cond
  %1 = load i32* %j, align 4
  %idxprom = sext i32 %1 to i64
  %arrayidx = getelementptr inbounds [3 x i32]* @loop_num, i32 0, i64 %idxprom
  store i32 0, i32* %arrayidx, align 4
  %2 = load i32* %j, align 4
  %idxprom1 = sext i32 %2 to i64
  %arrayidx2 = getelementptr inbounds [3 x i32]* @make_loop_table.loop_length_in, i32 0, i64 %idxprom1
  %3 = load i32* %arrayidx2, align 4
  %4 = load i32* %j, align 4
  %idxprom3 = sext i32 %4 to i64
  %arrayidx4 = getelementptr inbounds [3 x i32]* @loop_length, i32 0, i64 %idxprom3
  store i32 %3, i32* %arrayidx4, align 4
  store i32 0, i32* %i, align 4
  br label %for.cond5

for.cond5:                                        ; preds = %for.inc, %for.body
  %5 = load i32* %i, align 4
  %cmp6 = icmp slt i32 %5, 1
  br i1 %cmp6, label %for.body7, label %for.end

for.body7:                                        ; preds = %for.cond5
  %6 = load i32* %i, align 4
  %idxprom8 = sext i32 %6 to i64
  %7 = load i32* %j, align 4
  %idxprom9 = sext i32 %7 to i64
  %arrayidx10 = getelementptr inbounds [3 x [1 x double]]* @loop_coeff, i32 0, i64 %idxprom9
  %arrayidx11 = getelementptr inbounds [1 x double]* %arrayidx10, i32 0, i64 %idxprom8
  store double 0.000000e+00, double* %arrayidx11, align 8
  br label %for.inc

for.inc:                                          ; preds = %for.body7
  %8 = load i32* %i, align 4
  %inc = add nsw i32 %8, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond5

for.end:                                          ; preds = %for.cond5
  br label %for.inc12

for.inc12:                                        ; preds = %for.end
  %9 = load i32* %j, align 4
  %inc13 = add nsw i32 %9, 1
  store i32 %inc13, i32* %j, align 4
  br label %for.cond

for.end14:                                        ; preds = %for.cond
  store double 1.000000e+00, double* getelementptr inbounds ([3 x [1 x double]]* @loop_coeff, i32 0, i64 0, i64 0), align 8
  %10 = load double* @u0, align 8
  %mul = fmul double 2.000000e+01, %10
  %11 = load double* @u0, align 8
  %mul15 = fmul double %mul, %11
  %div = fdiv double -1.000000e+00, %mul15
  %12 = load double* @u0, align 8
  %call = call double @log(double %12) #2
  %mul16 = fmul double 6.264000e-01, %call
  %sub = fsub double 1.000000e+00, %mul16
  %mul17 = fmul double %div, %sub
  store double %mul17, double* getelementptr inbounds ([3 x [1 x double]]* @loop_coeff, i32 0, i64 1, i64 0), align 8
  %13 = load double* @u0, align 8
  %14 = load double* @u0, align 8
  %mul18 = fmul double %13, %14
  %div19 = fdiv double 1.000000e+00, %mul18
  %mul20 = fmul double %div19, 4.335000e-02
  %15 = load double* @u0, align 8
  %call21 = call double @log(double %15) #2
  %mul22 = fmul double %mul20, %call21
  store double %mul22, double* getelementptr inbounds ([3 x [1 x double]]* @loop_coeff, i32 0, i64 2, i64 0), align 8
  %call23 = call i8* @strcpy(i8* getelementptr inbounds ([128 x i8]* @gauge_action_description, i32 0, i32 0), i8* getelementptr inbounds ([36 x i8]* @.str289, i32 0, i32 0)) #2
  %16 = load i32* @this_node, align 4
  %cmp24 = icmp eq i32 %16, 0
  br i1 %cmp24, label %if.then, label %if.end

if.then:                                          ; preds = %for.end14
  %call25 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([35 x i8]* @.str1290, i32 0, i32 0))
  br label %if.end

if.end:                                           ; preds = %if.then, %for.end14
  store i32 0, i32* %iloop, align 4
  br label %for.cond26

for.cond26:                                       ; preds = %for.inc207, %if.end
  %17 = load i32* %iloop, align 4
  %cmp27 = icmp slt i32 %17, 3
  br i1 %cmp27, label %for.body28, label %for.end209

for.body28:                                       ; preds = %for.cond26
  %18 = load i32* %iloop, align 4
  %idxprom29 = sext i32 %18 to i64
  %arrayidx30 = getelementptr inbounds [3 x i32]* @loop_length, i32 0, i64 %idxprom29
  %19 = load i32* %arrayidx30, align 4
  store i32 %19, i32* %length, align 4
  store i32 0, i32* %count, align 4
  %arrayidx31 = getelementptr inbounds [8 x i32]* %perm, i32 0, i64 0
  store i32 0, i32* %arrayidx31, align 4
  br label %for.cond32

for.cond32:                                       ; preds = %for.inc203, %for.body28
  %arrayidx33 = getelementptr inbounds [8 x i32]* %perm, i32 0, i64 0
  %20 = load i32* %arrayidx33, align 4
  %cmp34 = icmp slt i32 %20, 4
  br i1 %cmp34, label %for.body35, label %for.end206

for.body35:                                       ; preds = %for.cond32
  %arrayidx36 = getelementptr inbounds [8 x i32]* %perm, i32 0, i64 1
  store i32 0, i32* %arrayidx36, align 4
  br label %for.cond37

for.cond37:                                       ; preds = %for.inc199, %for.body35
  %arrayidx38 = getelementptr inbounds [8 x i32]* %perm, i32 0, i64 1
  %21 = load i32* %arrayidx38, align 4
  %cmp39 = icmp slt i32 %21, 4
  br i1 %cmp39, label %for.body40, label %for.end202

for.body40:                                       ; preds = %for.cond37
  %arrayidx41 = getelementptr inbounds [8 x i32]* %perm, i32 0, i64 2
  store i32 0, i32* %arrayidx41, align 4
  br label %for.cond42

for.cond42:                                       ; preds = %for.inc195, %for.body40
  %arrayidx43 = getelementptr inbounds [8 x i32]* %perm, i32 0, i64 2
  %22 = load i32* %arrayidx43, align 4
  %cmp44 = icmp slt i32 %22, 4
  br i1 %cmp44, label %for.body45, label %for.end198

for.body45:                                       ; preds = %for.cond42
  %arrayidx46 = getelementptr inbounds [8 x i32]* %perm, i32 0, i64 3
  store i32 0, i32* %arrayidx46, align 4
  br label %for.cond47

for.cond47:                                       ; preds = %for.inc191, %for.body45
  %arrayidx48 = getelementptr inbounds [8 x i32]* %perm, i32 0, i64 3
  %23 = load i32* %arrayidx48, align 4
  %cmp49 = icmp slt i32 %23, 4
  br i1 %cmp49, label %for.body50, label %for.end194

for.body50:                                       ; preds = %for.cond47
  %arrayidx51 = getelementptr inbounds [8 x i32]* %perm, i32 0, i64 0
  %24 = load i32* %arrayidx51, align 4
  %arrayidx52 = getelementptr inbounds [8 x i32]* %perm, i32 0, i64 1
  %25 = load i32* %arrayidx52, align 4
  %cmp53 = icmp ne i32 %24, %25
  br i1 %cmp53, label %land.lhs.true, label %if.end190

land.lhs.true:                                    ; preds = %for.body50
  %arrayidx54 = getelementptr inbounds [8 x i32]* %perm, i32 0, i64 0
  %26 = load i32* %arrayidx54, align 4
  %arrayidx55 = getelementptr inbounds [8 x i32]* %perm, i32 0, i64 2
  %27 = load i32* %arrayidx55, align 4
  %cmp56 = icmp ne i32 %26, %27
  br i1 %cmp56, label %land.lhs.true57, label %if.end190

land.lhs.true57:                                  ; preds = %land.lhs.true
  %arrayidx58 = getelementptr inbounds [8 x i32]* %perm, i32 0, i64 0
  %28 = load i32* %arrayidx58, align 4
  %arrayidx59 = getelementptr inbounds [8 x i32]* %perm, i32 0, i64 3
  %29 = load i32* %arrayidx59, align 4
  %cmp60 = icmp ne i32 %28, %29
  br i1 %cmp60, label %land.lhs.true61, label %if.end190

land.lhs.true61:                                  ; preds = %land.lhs.true57
  %arrayidx62 = getelementptr inbounds [8 x i32]* %perm, i32 0, i64 1
  %30 = load i32* %arrayidx62, align 4
  %arrayidx63 = getelementptr inbounds [8 x i32]* %perm, i32 0, i64 2
  %31 = load i32* %arrayidx63, align 4
  %cmp64 = icmp ne i32 %30, %31
  br i1 %cmp64, label %land.lhs.true65, label %if.end190

land.lhs.true65:                                  ; preds = %land.lhs.true61
  %arrayidx66 = getelementptr inbounds [8 x i32]* %perm, i32 0, i64 1
  %32 = load i32* %arrayidx66, align 4
  %arrayidx67 = getelementptr inbounds [8 x i32]* %perm, i32 0, i64 3
  %33 = load i32* %arrayidx67, align 4
  %cmp68 = icmp ne i32 %32, %33
  br i1 %cmp68, label %land.lhs.true69, label %if.end190

land.lhs.true69:                                  ; preds = %land.lhs.true65
  %arrayidx70 = getelementptr inbounds [8 x i32]* %perm, i32 0, i64 2
  %34 = load i32* %arrayidx70, align 4
  %arrayidx71 = getelementptr inbounds [8 x i32]* %perm, i32 0, i64 3
  %35 = load i32* %arrayidx71, align 4
  %cmp72 = icmp ne i32 %34, %35
  br i1 %cmp72, label %if.then73, label %if.end190

if.then73:                                        ; preds = %land.lhs.true69
  %arrayidx74 = getelementptr inbounds [4 x i32]* %ir, i32 0, i64 0
  store i32 0, i32* %arrayidx74, align 4
  br label %for.cond75

for.cond75:                                       ; preds = %for.inc186, %if.then73
  %arrayidx76 = getelementptr inbounds [4 x i32]* %ir, i32 0, i64 0
  %36 = load i32* %arrayidx76, align 4
  %cmp77 = icmp slt i32 %36, 2
  br i1 %cmp77, label %for.body78, label %for.end189

for.body78:                                       ; preds = %for.cond75
  %arrayidx79 = getelementptr inbounds [4 x i32]* %ir, i32 0, i64 1
  store i32 0, i32* %arrayidx79, align 4
  br label %for.cond80

for.cond80:                                       ; preds = %for.inc182, %for.body78
  %arrayidx81 = getelementptr inbounds [4 x i32]* %ir, i32 0, i64 1
  %37 = load i32* %arrayidx81, align 4
  %cmp82 = icmp slt i32 %37, 2
  br i1 %cmp82, label %for.body83, label %for.end185

for.body83:                                       ; preds = %for.cond80
  %arrayidx84 = getelementptr inbounds [4 x i32]* %ir, i32 0, i64 2
  store i32 0, i32* %arrayidx84, align 4
  br label %for.cond85

for.cond85:                                       ; preds = %for.inc178, %for.body83
  %arrayidx86 = getelementptr inbounds [4 x i32]* %ir, i32 0, i64 2
  %38 = load i32* %arrayidx86, align 4
  %cmp87 = icmp slt i32 %38, 2
  br i1 %cmp87, label %for.body88, label %for.end181

for.body88:                                       ; preds = %for.cond85
  %arrayidx89 = getelementptr inbounds [4 x i32]* %ir, i32 0, i64 3
  store i32 0, i32* %arrayidx89, align 4
  br label %for.cond90

for.cond90:                                       ; preds = %for.inc174, %for.body88
  %arrayidx91 = getelementptr inbounds [4 x i32]* %ir, i32 0, i64 3
  %39 = load i32* %arrayidx91, align 4
  %cmp92 = icmp slt i32 %39, 2
  br i1 %cmp92, label %for.body93, label %for.end177

for.body93:                                       ; preds = %for.cond90
  store i32 0, i32* %j, align 4
  br label %for.cond94

for.cond94:                                       ; preds = %for.inc117, %for.body93
  %40 = load i32* %j, align 4
  %cmp95 = icmp slt i32 %40, 4
  br i1 %cmp95, label %for.body96, label %for.end119

for.body96:                                       ; preds = %for.cond94
  %41 = load i32* %j, align 4
  %idxprom97 = sext i32 %41 to i64
  %arrayidx98 = getelementptr inbounds [8 x i32]* %perm, i32 0, i64 %idxprom97
  %42 = load i32* %arrayidx98, align 4
  %43 = load i32* %j, align 4
  %idxprom99 = sext i32 %43 to i64
  %arrayidx100 = getelementptr inbounds [8 x i32]* %pp, i32 0, i64 %idxprom99
  store i32 %42, i32* %arrayidx100, align 4
  %44 = load i32* %j, align 4
  %idxprom101 = sext i32 %44 to i64
  %arrayidx102 = getelementptr inbounds [4 x i32]* %ir, i32 0, i64 %idxprom101
  %45 = load i32* %arrayidx102, align 4
  %cmp103 = icmp eq i32 %45, 1
  br i1 %cmp103, label %if.then104, label %if.end110

if.then104:                                       ; preds = %for.body96
  %46 = load i32* %j, align 4
  %idxprom105 = sext i32 %46 to i64
  %arrayidx106 = getelementptr inbounds [8 x i32]* %pp, i32 0, i64 %idxprom105
  %47 = load i32* %arrayidx106, align 4
  %sub107 = sub nsw i32 7, %47
  %48 = load i32* %j, align 4
  %idxprom108 = sext i32 %48 to i64
  %arrayidx109 = getelementptr inbounds [8 x i32]* %pp, i32 0, i64 %idxprom108
  store i32 %sub107, i32* %arrayidx109, align 4
  br label %if.end110

if.end110:                                        ; preds = %if.then104, %for.body96
  %49 = load i32* %j, align 4
  %idxprom111 = sext i32 %49 to i64
  %arrayidx112 = getelementptr inbounds [8 x i32]* %pp, i32 0, i64 %idxprom111
  %50 = load i32* %arrayidx112, align 4
  %sub113 = sub nsw i32 7, %50
  %51 = load i32* %j, align 4
  %sub114 = sub nsw i32 7, %51
  %idxprom115 = sext i32 %sub114 to i64
  %arrayidx116 = getelementptr inbounds [8 x i32]* %pp, i32 0, i64 %idxprom115
  store i32 %sub113, i32* %arrayidx116, align 4
  br label %for.inc117

for.inc117:                                       ; preds = %if.end110
  %52 = load i32* %j, align 4
  %inc118 = add nsw i32 %52, 1
  store i32 %inc118, i32* %j, align 4
  br label %for.cond94

for.end119:                                       ; preds = %for.cond94
  store i32 0, i32* %j, align 4
  br label %for.cond120

for.cond120:                                      ; preds = %for.inc131, %for.end119
  %53 = load i32* %j, align 4
  %54 = load i32* %length, align 4
  %cmp121 = icmp slt i32 %53, %54
  br i1 %cmp121, label %for.body122, label %for.end133

for.body122:                                      ; preds = %for.cond120
  %55 = load i32* %j, align 4
  %idxprom123 = sext i32 %55 to i64
  %56 = load i32* %iloop, align 4
  %idxprom124 = sext i32 %56 to i64
  %arrayidx125 = getelementptr inbounds [3 x [6 x i32]]* @make_loop_table.loop_ind, i32 0, i64 %idxprom124
  %arrayidx126 = getelementptr inbounds [6 x i32]* %arrayidx125, i32 0, i64 %idxprom123
  %57 = load i32* %arrayidx126, align 4
  %idxprom127 = sext i32 %57 to i64
  %arrayidx128 = getelementptr inbounds [8 x i32]* %pp, i32 0, i64 %idxprom127
  %58 = load i32* %arrayidx128, align 4
  %59 = load i32* %j, align 4
  %idxprom129 = sext i32 %59 to i64
  %arrayidx130 = getelementptr inbounds [6 x i32]* %vec, i32 0, i64 %idxprom129
  store i32 %58, i32* %arrayidx130, align 4
  br label %for.inc131

for.inc131:                                       ; preds = %for.body122
  %60 = load i32* %j, align 4
  %inc132 = add nsw i32 %60, 1
  store i32 %inc132, i32* %j, align 4
  br label %for.cond120

for.end133:                                       ; preds = %for.cond120
  %arraydecay = getelementptr inbounds [6 x i32]* %vec, i32 0, i32 0
  %61 = load i32* %length, align 4
  call void @char_num(i32* %arraydecay, i32* %chr, i32 %61)
  store i32 0, i32* %flag, align 4
  store i32 0, i32* %j, align 4
  br label %for.cond134

for.cond134:                                      ; preds = %for.inc142, %for.end133
  %62 = load i32* %j, align 4
  %63 = load i32* %count, align 4
  %cmp135 = icmp slt i32 %62, %63
  br i1 %cmp135, label %for.body136, label %for.end144

for.body136:                                      ; preds = %for.cond134
  %64 = load i32* %chr, align 4
  %65 = load i32* %j, align 4
  %idxprom137 = sext i32 %65 to i64
  %arrayidx138 = getelementptr inbounds [16 x i32]* @loop_char, i32 0, i64 %idxprom137
  %66 = load i32* %arrayidx138, align 4
  %cmp139 = icmp eq i32 %64, %66
  br i1 %cmp139, label %if.then140, label %if.end141

if.then140:                                       ; preds = %for.body136
  store i32 1, i32* %flag, align 4
  br label %if.end141

if.end141:                                        ; preds = %if.then140, %for.body136
  br label %for.inc142

for.inc142:                                       ; preds = %if.end141
  %67 = load i32* %j, align 4
  %inc143 = add nsw i32 %67, 1
  store i32 %inc143, i32* %j, align 4
  br label %for.cond134

for.end144:                                       ; preds = %for.cond134
  %68 = load i32* %flag, align 4
  %cmp145 = icmp eq i32 %68, 0
  br i1 %cmp145, label %if.then146, label %if.end164

if.then146:                                       ; preds = %for.end144
  %69 = load i32* %chr, align 4
  %70 = load i32* %count, align 4
  %idxprom147 = sext i32 %70 to i64
  %arrayidx148 = getelementptr inbounds [16 x i32]* @loop_char, i32 0, i64 %idxprom147
  store i32 %69, i32* %arrayidx148, align 4
  store i32 0, i32* %j, align 4
  br label %for.cond149

for.cond149:                                      ; preds = %for.inc160, %if.then146
  %71 = load i32* %j, align 4
  %72 = load i32* %length, align 4
  %cmp150 = icmp slt i32 %71, %72
  br i1 %cmp150, label %for.body151, label %for.end162

for.body151:                                      ; preds = %for.cond149
  %73 = load i32* %j, align 4
  %idxprom152 = sext i32 %73 to i64
  %arrayidx153 = getelementptr inbounds [6 x i32]* %vec, i32 0, i64 %idxprom152
  %74 = load i32* %arrayidx153, align 4
  %75 = load i32* %j, align 4
  %idxprom154 = sext i32 %75 to i64
  %76 = load i32* %count, align 4
  %idxprom155 = sext i32 %76 to i64
  %77 = load i32* %iloop, align 4
  %idxprom156 = sext i32 %77 to i64
  %arrayidx157 = getelementptr inbounds [3 x [16 x [6 x i32]]]* @loop_table, i32 0, i64 %idxprom156
  %arrayidx158 = getelementptr inbounds [16 x [6 x i32]]* %arrayidx157, i32 0, i64 %idxprom155
  %arrayidx159 = getelementptr inbounds [6 x i32]* %arrayidx158, i32 0, i64 %idxprom154
  store i32 %74, i32* %arrayidx159, align 4
  br label %for.inc160

for.inc160:                                       ; preds = %for.body151
  %78 = load i32* %j, align 4
  %inc161 = add nsw i32 %78, 1
  store i32 %inc161, i32* %j, align 4
  br label %for.cond149

for.end162:                                       ; preds = %for.cond149
  %79 = load i32* %count, align 4
  %inc163 = add nsw i32 %79, 1
  store i32 %inc163, i32* %count, align 4
  br label %if.end164

if.end164:                                        ; preds = %for.end162, %for.end144
  %80 = load i32* %count, align 4
  %cmp165 = icmp sgt i32 %80, 16
  br i1 %cmp165, label %if.then166, label %if.end171

if.then166:                                       ; preds = %if.end164
  %81 = load i32* @this_node, align 4
  %cmp167 = icmp eq i32 %81, 0
  br i1 %cmp167, label %if.then168, label %if.end170

if.then168:                                       ; preds = %if.then166
  %call169 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([25 x i8]* @.str2291, i32 0, i32 0))
  br label %if.end170

if.end170:                                        ; preds = %if.then168, %if.then166
  call void @exit(i32 0) #7
  unreachable

if.end171:                                        ; preds = %if.end164
  %82 = load i32* %count, align 4
  %83 = load i32* %iloop, align 4
  %idxprom172 = sext i32 %83 to i64
  %arrayidx173 = getelementptr inbounds [3 x i32]* @loop_num, i32 0, i64 %idxprom172
  store i32 %82, i32* %arrayidx173, align 4
  br label %for.inc174

for.inc174:                                       ; preds = %if.end171
  %arrayidx175 = getelementptr inbounds [4 x i32]* %ir, i32 0, i64 3
  %84 = load i32* %arrayidx175, align 4
  %inc176 = add nsw i32 %84, 1
  store i32 %inc176, i32* %arrayidx175, align 4
  br label %for.cond90

for.end177:                                       ; preds = %for.cond90
  br label %for.inc178

for.inc178:                                       ; preds = %for.end177
  %arrayidx179 = getelementptr inbounds [4 x i32]* %ir, i32 0, i64 2
  %85 = load i32* %arrayidx179, align 4
  %inc180 = add nsw i32 %85, 1
  store i32 %inc180, i32* %arrayidx179, align 4
  br label %for.cond85

for.end181:                                       ; preds = %for.cond85
  br label %for.inc182

for.inc182:                                       ; preds = %for.end181
  %arrayidx183 = getelementptr inbounds [4 x i32]* %ir, i32 0, i64 1
  %86 = load i32* %arrayidx183, align 4
  %inc184 = add nsw i32 %86, 1
  store i32 %inc184, i32* %arrayidx183, align 4
  br label %for.cond80

for.end185:                                       ; preds = %for.cond80
  br label %for.inc186

for.inc186:                                       ; preds = %for.end185
  %arrayidx187 = getelementptr inbounds [4 x i32]* %ir, i32 0, i64 0
  %87 = load i32* %arrayidx187, align 4
  %inc188 = add nsw i32 %87, 1
  store i32 %inc188, i32* %arrayidx187, align 4
  br label %for.cond75

for.end189:                                       ; preds = %for.cond75
  br label %if.end190

if.end190:                                        ; preds = %for.end189, %land.lhs.true69, %land.lhs.true65, %land.lhs.true61, %land.lhs.true57, %land.lhs.true, %for.body50
  br label %for.inc191

for.inc191:                                       ; preds = %if.end190
  %arrayidx192 = getelementptr inbounds [8 x i32]* %perm, i32 0, i64 3
  %88 = load i32* %arrayidx192, align 4
  %inc193 = add nsw i32 %88, 1
  store i32 %inc193, i32* %arrayidx192, align 4
  br label %for.cond47

for.end194:                                       ; preds = %for.cond47
  br label %for.inc195

for.inc195:                                       ; preds = %for.end194
  %arrayidx196 = getelementptr inbounds [8 x i32]* %perm, i32 0, i64 2
  %89 = load i32* %arrayidx196, align 4
  %inc197 = add nsw i32 %89, 1
  store i32 %inc197, i32* %arrayidx196, align 4
  br label %for.cond42

for.end198:                                       ; preds = %for.cond42
  br label %for.inc199

for.inc199:                                       ; preds = %for.end198
  %arrayidx200 = getelementptr inbounds [8 x i32]* %perm, i32 0, i64 1
  %90 = load i32* %arrayidx200, align 4
  %inc201 = add nsw i32 %90, 1
  store i32 %inc201, i32* %arrayidx200, align 4
  br label %for.cond37

for.end202:                                       ; preds = %for.cond37
  br label %for.inc203

for.inc203:                                       ; preds = %for.end202
  %arrayidx204 = getelementptr inbounds [8 x i32]* %perm, i32 0, i64 0
  %91 = load i32* %arrayidx204, align 4
  %inc205 = add nsw i32 %91, 1
  store i32 %inc205, i32* %arrayidx204, align 4
  br label %for.cond32

for.end206:                                       ; preds = %for.cond32
  br label %for.inc207

for.inc207:                                       ; preds = %for.end206
  %92 = load i32* %iloop, align 4
  %inc208 = add nsw i32 %92, 1
  store i32 %inc208, i32* %iloop, align 4
  br label %for.cond26

for.end209:                                       ; preds = %for.cond26
  %93 = load i32* @this_node, align 4
  %cmp210 = icmp eq i32 %93, 0
  br i1 %cmp210, label %if.then211, label %if.end213

if.then211:                                       ; preds = %for.end209
  %call212 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([55 x i8]* @.str3292, i32 0, i32 0))
  br label %if.end213

if.end213:                                        ; preds = %if.then211, %for.end209
  store i32 0, i32* %i, align 4
  br label %for.cond214

for.cond214:                                      ; preds = %for.inc233, %if.end213
  %94 = load i32* %i, align 4
  %cmp215 = icmp slt i32 %94, 1
  br i1 %cmp215, label %for.body216, label %for.end235

for.body216:                                      ; preds = %for.cond214
  store i32 0, i32* %j, align 4
  br label %for.cond217

for.cond217:                                      ; preds = %for.inc230, %for.body216
  %95 = load i32* %j, align 4
  %cmp218 = icmp slt i32 %95, 3
  br i1 %cmp218, label %for.body219, label %for.end232

for.body219:                                      ; preds = %for.cond217
  %96 = load i32* @this_node, align 4
  %cmp220 = icmp eq i32 %96, 0
  br i1 %cmp220, label %if.then221, label %if.end229

if.then221:                                       ; preds = %for.body219
  %97 = load i32* %j, align 4
  %98 = load i32* %i, align 4
  %99 = load i32* %i, align 4
  %idxprom222 = sext i32 %99 to i64
  %100 = load i32* %j, align 4
  %idxprom223 = sext i32 %100 to i64
  %arrayidx224 = getelementptr inbounds [3 x [1 x double]]* @loop_coeff, i32 0, i64 %idxprom223
  %arrayidx225 = getelementptr inbounds [1 x double]* %arrayidx224, i32 0, i64 %idxprom222
  %101 = load double* %arrayidx225, align 8
  %102 = load i32* %j, align 4
  %idxprom226 = sext i32 %102 to i64
  %arrayidx227 = getelementptr inbounds [3 x i32]* @loop_num, i32 0, i64 %idxprom226
  %103 = load i32* %arrayidx227, align 4
  %call228 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([42 x i8]* @.str4293, i32 0, i32 0), i32 %97, i32 %98, double %101, i32 %103)
  br label %if.end229

if.end229:                                        ; preds = %if.then221, %for.body219
  br label %for.inc230

for.inc230:                                       ; preds = %if.end229
  %104 = load i32* %j, align 4
  %inc231 = add nsw i32 %104, 1
  store i32 %inc231, i32* %j, align 4
  br label %for.cond217

for.end232:                                       ; preds = %for.cond217
  br label %for.inc233

for.inc233:                                       ; preds = %for.end232
  %105 = load i32* %i, align 4
  %inc234 = add nsw i32 %105, 1
  store i32 %inc234, i32* %i, align 4
  br label %for.cond214

for.end235:                                       ; preds = %for.cond214
  ret void
}

; Function Attrs: nounwind
declare double @log(double) #3

; Function Attrs: nounwind uwtable
define internal void @char_num(i32* %dig, i32* %chr, i32 %length) #0 {
entry:
  %dig.addr = alloca i32*, align 8
  %chr.addr = alloca i32*, align 8
  %length.addr = alloca i32, align 4
  %j = alloca i32, align 4
  %bdig = alloca [6 x i32], align 16
  %tenl = alloca i32, align 4
  %newv = alloca i32, align 4
  %old = alloca i32, align 4
  store i32* %dig, i32** %dig.addr, align 8
  store i32* %chr, i32** %chr.addr, align 8
  store i32 %length, i32* %length.addr, align 4
  store i32 1, i32* %tenl, align 4
  store i32 0, i32* %j, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32* %j, align 4
  %1 = load i32* %length.addr, align 4
  %sub = sub nsw i32 %1, 1
  %cmp = icmp slt i32 %0, %sub
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %2 = load i32* %tenl, align 4
  %mul = mul nsw i32 %2, 10
  store i32 %mul, i32* %tenl, align 4
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %3 = load i32* %j, align 4
  %inc = add nsw i32 %3, 1
  store i32 %inc, i32* %j, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %4 = load i32* %length.addr, align 4
  %sub1 = sub nsw i32 %4, 1
  %idxprom = sext i32 %sub1 to i64
  %5 = load i32** %dig.addr, align 8
  %arrayidx = getelementptr inbounds i32* %5, i64 %idxprom
  %6 = load i32* %arrayidx, align 4
  %7 = load i32** %chr.addr, align 8
  store i32 %6, i32* %7, align 4
  %8 = load i32* %length.addr, align 4
  %sub2 = sub nsw i32 %8, 2
  store i32 %sub2, i32* %j, align 4
  br label %for.cond3

for.cond3:                                        ; preds = %for.inc9, %for.end
  %9 = load i32* %j, align 4
  %cmp4 = icmp sge i32 %9, 0
  br i1 %cmp4, label %for.body5, label %for.end10

for.body5:                                        ; preds = %for.cond3
  %10 = load i32** %chr.addr, align 8
  %11 = load i32* %10, align 4
  %mul6 = mul nsw i32 %11, 10
  %12 = load i32* %j, align 4
  %idxprom7 = sext i32 %12 to i64
  %13 = load i32** %dig.addr, align 8
  %arrayidx8 = getelementptr inbounds i32* %13, i64 %idxprom7
  %14 = load i32* %arrayidx8, align 4
  %add = add nsw i32 %mul6, %14
  %15 = load i32** %chr.addr, align 8
  store i32 %add, i32* %15, align 4
  br label %for.inc9

for.inc9:                                         ; preds = %for.body5
  %16 = load i32* %j, align 4
  %dec = add nsw i32 %16, -1
  store i32 %dec, i32* %j, align 4
  br label %for.cond3

for.end10:                                        ; preds = %for.cond3
  %17 = load i32** %chr.addr, align 8
  %18 = load i32* %17, align 4
  store i32 %18, i32* %old, align 4
  %19 = load i32* %length.addr, align 4
  %sub11 = sub nsw i32 %19, 1
  store i32 %sub11, i32* %j, align 4
  br label %for.cond12

for.cond12:                                       ; preds = %for.inc24, %for.end10
  %20 = load i32* %j, align 4
  %cmp13 = icmp sge i32 %20, 1
  br i1 %cmp13, label %for.body14, label %for.end26

for.body14:                                       ; preds = %for.cond12
  %21 = load i32* %old, align 4
  %22 = load i32* %tenl, align 4
  %23 = load i32* %j, align 4
  %idxprom15 = sext i32 %23 to i64
  %24 = load i32** %dig.addr, align 8
  %arrayidx16 = getelementptr inbounds i32* %24, i64 %idxprom15
  %25 = load i32* %arrayidx16, align 4
  %mul17 = mul nsw i32 %22, %25
  %sub18 = sub nsw i32 %21, %mul17
  store i32 %sub18, i32* %newv, align 4
  %26 = load i32* %newv, align 4
  %mul19 = mul nsw i32 %26, 10
  %27 = load i32* %j, align 4
  %idxprom20 = sext i32 %27 to i64
  %28 = load i32** %dig.addr, align 8
  %arrayidx21 = getelementptr inbounds i32* %28, i64 %idxprom20
  %29 = load i32* %arrayidx21, align 4
  %add22 = add nsw i32 %mul19, %29
  store i32 %add22, i32* %newv, align 4
  %30 = load i32* %newv, align 4
  %31 = load i32** %chr.addr, align 8
  %32 = load i32* %31, align 4
  %cmp23 = icmp slt i32 %30, %32
  br i1 %cmp23, label %if.then, label %if.end

if.then:                                          ; preds = %for.body14
  %33 = load i32* %newv, align 4
  %34 = load i32** %chr.addr, align 8
  store i32 %33, i32* %34, align 4
  br label %if.end

if.end:                                           ; preds = %if.then, %for.body14
  %35 = load i32* %newv, align 4
  store i32 %35, i32* %old, align 4
  br label %for.inc24

for.inc24:                                        ; preds = %if.end
  %36 = load i32* %j, align 4
  %dec25 = add nsw i32 %36, -1
  store i32 %dec25, i32* %j, align 4
  br label %for.cond12

for.end26:                                        ; preds = %for.cond12
  store i32 0, i32* %j, align 4
  br label %for.cond27

for.cond27:                                       ; preds = %for.inc37, %for.end26
  %37 = load i32* %j, align 4
  %38 = load i32* %length.addr, align 4
  %cmp28 = icmp slt i32 %37, %38
  br i1 %cmp28, label %for.body29, label %for.end39

for.body29:                                       ; preds = %for.cond27
  %39 = load i32* %length.addr, align 4
  %40 = load i32* %j, align 4
  %sub30 = sub nsw i32 %39, %40
  %sub31 = sub nsw i32 %sub30, 1
  %idxprom32 = sext i32 %sub31 to i64
  %41 = load i32** %dig.addr, align 8
  %arrayidx33 = getelementptr inbounds i32* %41, i64 %idxprom32
  %42 = load i32* %arrayidx33, align 4
  %sub34 = sub nsw i32 7, %42
  %43 = load i32* %j, align 4
  %idxprom35 = sext i32 %43 to i64
  %arrayidx36 = getelementptr inbounds [6 x i32]* %bdig, i32 0, i64 %idxprom35
  store i32 %sub34, i32* %arrayidx36, align 4
  br label %for.inc37

for.inc37:                                        ; preds = %for.body29
  %44 = load i32* %j, align 4
  %inc38 = add nsw i32 %44, 1
  store i32 %inc38, i32* %j, align 4
  br label %for.cond27

for.end39:                                        ; preds = %for.cond27
  %45 = load i32* %length.addr, align 4
  %sub40 = sub nsw i32 %45, 1
  %idxprom41 = sext i32 %sub40 to i64
  %arrayidx42 = getelementptr inbounds [6 x i32]* %bdig, i32 0, i64 %idxprom41
  %46 = load i32* %arrayidx42, align 4
  store i32 %46, i32* %old, align 4
  %47 = load i32* %length.addr, align 4
  %sub43 = sub nsw i32 %47, 2
  store i32 %sub43, i32* %j, align 4
  br label %for.cond44

for.cond44:                                       ; preds = %for.inc51, %for.end39
  %48 = load i32* %j, align 4
  %cmp45 = icmp sge i32 %48, 0
  br i1 %cmp45, label %for.body46, label %for.end53

for.body46:                                       ; preds = %for.cond44
  %49 = load i32* %old, align 4
  %mul47 = mul nsw i32 %49, 10
  %50 = load i32* %j, align 4
  %idxprom48 = sext i32 %50 to i64
  %arrayidx49 = getelementptr inbounds [6 x i32]* %bdig, i32 0, i64 %idxprom48
  %51 = load i32* %arrayidx49, align 4
  %add50 = add nsw i32 %mul47, %51
  store i32 %add50, i32* %old, align 4
  br label %for.inc51

for.inc51:                                        ; preds = %for.body46
  %52 = load i32* %j, align 4
  %dec52 = add nsw i32 %52, -1
  store i32 %dec52, i32* %j, align 4
  br label %for.cond44

for.end53:                                        ; preds = %for.cond44
  %53 = load i32* %old, align 4
  %54 = load i32** %chr.addr, align 8
  %55 = load i32* %54, align 4
  %cmp54 = icmp slt i32 %53, %55
  br i1 %cmp54, label %if.then55, label %if.end56

if.then55:                                        ; preds = %for.end53
  %56 = load i32* %old, align 4
  %57 = load i32** %chr.addr, align 8
  store i32 %56, i32* %57, align 4
  br label %if.end56

if.end56:                                         ; preds = %if.then55, %for.end53
  %58 = load i32* %length.addr, align 4
  %sub57 = sub nsw i32 %58, 1
  store i32 %sub57, i32* %j, align 4
  br label %for.cond58

for.cond58:                                       ; preds = %for.inc72, %if.end56
  %59 = load i32* %j, align 4
  %cmp59 = icmp sge i32 %59, 1
  br i1 %cmp59, label %for.body60, label %for.end74

for.body60:                                       ; preds = %for.cond58
  %60 = load i32* %old, align 4
  %61 = load i32* %tenl, align 4
  %62 = load i32* %j, align 4
  %idxprom61 = sext i32 %62 to i64
  %arrayidx62 = getelementptr inbounds [6 x i32]* %bdig, i32 0, i64 %idxprom61
  %63 = load i32* %arrayidx62, align 4
  %mul63 = mul nsw i32 %61, %63
  %sub64 = sub nsw i32 %60, %mul63
  store i32 %sub64, i32* %newv, align 4
  %64 = load i32* %newv, align 4
  %mul65 = mul nsw i32 %64, 10
  %65 = load i32* %j, align 4
  %idxprom66 = sext i32 %65 to i64
  %arrayidx67 = getelementptr inbounds [6 x i32]* %bdig, i32 0, i64 %idxprom66
  %66 = load i32* %arrayidx67, align 4
  %add68 = add nsw i32 %mul65, %66
  store i32 %add68, i32* %newv, align 4
  %67 = load i32* %newv, align 4
  %68 = load i32** %chr.addr, align 8
  %69 = load i32* %68, align 4
  %cmp69 = icmp slt i32 %67, %69
  br i1 %cmp69, label %if.then70, label %if.end71

if.then70:                                        ; preds = %for.body60
  %70 = load i32* %newv, align 4
  %71 = load i32** %chr.addr, align 8
  store i32 %70, i32* %71, align 4
  br label %if.end71

if.end71:                                         ; preds = %if.then70, %for.body60
  %72 = load i32* %newv, align 4
  store i32 %72, i32* %old, align 4
  br label %for.inc72

for.inc72:                                        ; preds = %if.end71
  %73 = load i32* %j, align 4
  %dec73 = add nsw i32 %73, -1
  store i32 %dec73, i32* %j, align 4
  br label %for.cond58

for.end74:                                        ; preds = %for.cond58
  ret void
}

; Function Attrs: nounwind uwtable
define internal double @imp_gauge_action() #0 {
entry:
  %i = alloca i32, align 4
  %rep = alloca i32, align 4
  %s = alloca %struct.site*, align 8
  %trace = alloca %struct.complex, align 8
  %g_action = alloca double, align 8
  %action = alloca double, align 8
  %act2 = alloca double, align 8
  %total_action = alloca double, align 8
  %length = alloca i32, align 4
  %ln = alloca i32, align 4
  %iloop = alloca i32, align 4
  %coerce = alloca %struct.complex, align 8
  store double 0.000000e+00, double* %g_action, align 8
  store i32 0, i32* %iloop, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc32, %entry
  %0 = load i32* %iloop, align 4
  %cmp = icmp slt i32 %0, 3
  br i1 %cmp, label %for.body, label %for.end34

for.body:                                         ; preds = %for.cond
  %1 = load i32* %iloop, align 4
  %idxprom = sext i32 %1 to i64
  %arrayidx = getelementptr inbounds [3 x i32]* @loop_length, i32 0, i64 %idxprom
  %2 = load i32* %arrayidx, align 4
  store i32 %2, i32* %length, align 4
  store i32 0, i32* %ln, align 4
  br label %for.cond1

for.cond1:                                        ; preds = %for.inc29, %for.body
  %3 = load i32* %ln, align 4
  %4 = load i32* %iloop, align 4
  %idxprom2 = sext i32 %4 to i64
  %arrayidx3 = getelementptr inbounds [3 x i32]* @loop_num, i32 0, i64 %idxprom2
  %5 = load i32* %arrayidx3, align 4
  %cmp4 = icmp slt i32 %3, %5
  br i1 %cmp4, label %for.body5, label %for.end31

for.body5:                                        ; preds = %for.cond1
  %6 = load i32* %ln, align 4
  %idxprom6 = sext i32 %6 to i64
  %7 = load i32* %iloop, align 4
  %idxprom7 = sext i32 %7 to i64
  %arrayidx8 = getelementptr inbounds [3 x [16 x [6 x i32]]]* @loop_table, i32 0, i64 %idxprom7
  %arrayidx9 = getelementptr inbounds [16 x [6 x i32]]* %arrayidx8, i32 0, i64 %idxprom6
  %arraydecay = getelementptr inbounds [6 x i32]* %arrayidx9, i32 0, i32 0
  %8 = load i32* %length, align 4
  call void @path_product(i32* %arraydecay, i32 %8)
  store i32 0, i32* %i, align 4
  %9 = load %struct.site** @lattice, align 8
  store %struct.site* %9, %struct.site** %s, align 8
  br label %for.cond10

for.cond10:                                       ; preds = %for.inc26, %for.body5
  %10 = load i32* %i, align 4
  %11 = load i32* @sites_on_node, align 4
  %cmp11 = icmp slt i32 %10, %11
  br i1 %cmp11, label %for.body12, label %for.end28

for.body12:                                       ; preds = %for.cond10
  %12 = load %struct.site** %s, align 8
  %tempmat1 = getelementptr inbounds %struct.site* %12, i32 0, i32 20
  %call = call { double, double } @trace_su3(%struct.su3_matrix* %tempmat1)
  %13 = bitcast %struct.complex* %coerce to { double, double }*
  %14 = getelementptr { double, double }* %13, i32 0, i32 0
  %15 = extractvalue { double, double } %call, 0
  store double %15, double* %14, align 1
  %16 = getelementptr { double, double }* %13, i32 0, i32 1
  %17 = extractvalue { double, double } %call, 1
  store double %17, double* %16, align 1
  %18 = bitcast %struct.complex* %trace to i8*
  %19 = bitcast %struct.complex* %coerce to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %18, i8* %19, i64 16, i32 8, i1 false)
  %real = getelementptr inbounds %struct.complex* %trace, i32 0, i32 0
  %20 = load double* %real, align 8
  %sub = fsub double 3.000000e+00, %20
  store double %sub, double* %action, align 8
  %21 = load i32* %iloop, align 4
  %idxprom13 = sext i32 %21 to i64
  %arrayidx14 = getelementptr inbounds [3 x [1 x double]]* @loop_coeff, i32 0, i64 %idxprom13
  %arrayidx15 = getelementptr inbounds [1 x double]* %arrayidx14, i32 0, i64 0
  %22 = load double* %arrayidx15, align 8
  %23 = load double* %action, align 8
  %mul = fmul double %22, %23
  store double %mul, double* %total_action, align 8
  %24 = load double* %action, align 8
  store double %24, double* %act2, align 8
  store i32 1, i32* %rep, align 4
  br label %for.cond16

for.cond16:                                       ; preds = %for.inc, %for.body12
  %25 = load i32* %rep, align 4
  %cmp17 = icmp slt i32 %25, 1
  br i1 %cmp17, label %for.body18, label %for.end

for.body18:                                       ; preds = %for.cond16
  %26 = load double* %action, align 8
  %27 = load double* %act2, align 8
  %mul19 = fmul double %27, %26
  store double %mul19, double* %act2, align 8
  %28 = load i32* %rep, align 4
  %idxprom20 = sext i32 %28 to i64
  %29 = load i32* %iloop, align 4
  %idxprom21 = sext i32 %29 to i64
  %arrayidx22 = getelementptr inbounds [3 x [1 x double]]* @loop_coeff, i32 0, i64 %idxprom21
  %arrayidx23 = getelementptr inbounds [1 x double]* %arrayidx22, i32 0, i64 %idxprom20
  %30 = load double* %arrayidx23, align 8
  %31 = load double* %act2, align 8
  %mul24 = fmul double %30, %31
  %32 = load double* %total_action, align 8
  %add = fadd double %32, %mul24
  store double %add, double* %total_action, align 8
  br label %for.inc

for.inc:                                          ; preds = %for.body18
  %33 = load i32* %rep, align 4
  %inc = add nsw i32 %33, 1
  store i32 %inc, i32* %rep, align 4
  br label %for.cond16

for.end:                                          ; preds = %for.cond16
  %34 = load double* %total_action, align 8
  %35 = load double* %g_action, align 8
  %add25 = fadd double %35, %34
  store double %add25, double* %g_action, align 8
  br label %for.inc26

for.inc26:                                        ; preds = %for.end
  %36 = load i32* %i, align 4
  %inc27 = add nsw i32 %36, 1
  store i32 %inc27, i32* %i, align 4
  %37 = load %struct.site** %s, align 8
  %incdec.ptr = getelementptr inbounds %struct.site* %37, i32 1
  store %struct.site* %incdec.ptr, %struct.site** %s, align 8
  br label %for.cond10

for.end28:                                        ; preds = %for.cond10
  br label %for.inc29

for.inc29:                                        ; preds = %for.end28
  %38 = load i32* %ln, align 4
  %inc30 = add nsw i32 %38, 1
  store i32 %inc30, i32* %ln, align 4
  br label %for.cond1

for.end31:                                        ; preds = %for.cond1
  br label %for.inc32

for.inc32:                                        ; preds = %for.end31
  %39 = load i32* %iloop, align 4
  %inc33 = add nsw i32 %39, 1
  store i32 %inc33, i32* %iloop, align 4
  br label %for.cond

for.end34:                                        ; preds = %for.cond
  call void @g_doublesum(double* %g_action)
  %40 = load double* %g_action, align 8
  ret double %40
}

; Function Attrs: nounwind uwtable
define internal void @imp_gauge_force(double %eps, i32 %mom_off) #0 {
entry:
  %eps.addr = alloca double, align 8
  %mom_off.addr = alloca i32, align 4
  %i = alloca i32, align 4
  %dir = alloca i32, align 4
  %st = alloca %struct.site*, align 8
  %tmat1 = alloca %struct.su3_matrix, align 8
  %tmat2 = alloca %struct.su3_matrix, align 8
  %eb3 = alloca double, align 8
  %momentum = alloca %struct.anti_hermitmat*, align 8
  %j = alloca i32, align 4
  %k = alloca i32, align 4
  %dirs = alloca [6 x i32], align 16
  %length = alloca i32, align 4
  %path_dir = alloca [6 x i32], align 16
  %path_length = alloca i32, align 4
  %ln = alloca i32, align 4
  %iloop = alloca i32, align 4
  %action = alloca double, align 8
  %act2 = alloca double, align 8
  %new_term = alloca double, align 8
  %ncount = alloca i32, align 4
  %coerce = alloca %struct.complex, align 8
  store double %eps, double* %eps.addr, align 8
  store i32 %mom_off, i32* %mom_off.addr, align 4
  %0 = load double* %eps.addr, align 8
  %1 = load double* @beta, align 8
  %mul = fmul double %0, %1
  %div = fdiv double %mul, 3.000000e+00
  store double %div, double* %eb3, align 8
  store i32 0, i32* %dir, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc150, %entry
  %2 = load i32* %dir, align 4
  %cmp = icmp sle i32 %2, 3
  br i1 %cmp, label %for.body, label %for.end152

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %i, align 4
  %3 = load %struct.site** @lattice, align 8
  store %struct.site* %3, %struct.site** %st, align 8
  br label %for.cond1

for.cond1:                                        ; preds = %for.inc15, %for.body
  %4 = load i32* %i, align 4
  %5 = load i32* @sites_on_node, align 4
  %cmp2 = icmp slt i32 %4, %5
  br i1 %cmp2, label %for.body3, label %for.end17

for.body3:                                        ; preds = %for.cond1
  store i32 0, i32* %j, align 4
  br label %for.cond4

for.cond4:                                        ; preds = %for.inc12, %for.body3
  %6 = load i32* %j, align 4
  %cmp5 = icmp slt i32 %6, 3
  br i1 %cmp5, label %for.body6, label %for.end14

for.body6:                                        ; preds = %for.cond4
  store i32 0, i32* %k, align 4
  br label %for.cond7

for.cond7:                                        ; preds = %for.inc, %for.body6
  %7 = load i32* %k, align 4
  %cmp8 = icmp slt i32 %7, 3
  br i1 %cmp8, label %for.body9, label %for.end

for.body9:                                        ; preds = %for.cond7
  %8 = load i32* %k, align 4
  %idxprom = sext i32 %8 to i64
  %9 = load i32* %j, align 4
  %idxprom10 = sext i32 %9 to i64
  %10 = load %struct.site** %st, align 8
  %staple = getelementptr inbounds %struct.site* %10, i32 0, i32 21
  %e = getelementptr inbounds %struct.su3_matrix* %staple, i32 0, i32 0
  %arrayidx = getelementptr inbounds [3 x [3 x %struct.complex]]* %e, i32 0, i64 %idxprom10
  %arrayidx11 = getelementptr inbounds [3 x %struct.complex]* %arrayidx, i32 0, i64 %idxprom
  %call = call { double, double } @cmplx(double 0.000000e+00, double 0.000000e+00)
  %11 = bitcast %struct.complex* %coerce to { double, double }*
  %12 = getelementptr { double, double }* %11, i32 0, i32 0
  %13 = extractvalue { double, double } %call, 0
  store double %13, double* %12, align 1
  %14 = getelementptr { double, double }* %11, i32 0, i32 1
  %15 = extractvalue { double, double } %call, 1
  store double %15, double* %14, align 1
  %16 = bitcast %struct.complex* %arrayidx11 to i8*
  %17 = bitcast %struct.complex* %coerce to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %16, i8* %17, i64 16, i32 8, i1 false)
  br label %for.inc

for.inc:                                          ; preds = %for.body9
  %18 = load i32* %k, align 4
  %inc = add nsw i32 %18, 1
  store i32 %inc, i32* %k, align 4
  br label %for.cond7

for.end:                                          ; preds = %for.cond7
  br label %for.inc12

for.inc12:                                        ; preds = %for.end
  %19 = load i32* %j, align 4
  %inc13 = add nsw i32 %19, 1
  store i32 %inc13, i32* %j, align 4
  br label %for.cond4

for.end14:                                        ; preds = %for.cond4
  br label %for.inc15

for.inc15:                                        ; preds = %for.end14
  %20 = load i32* %i, align 4
  %inc16 = add nsw i32 %20, 1
  store i32 %inc16, i32* %i, align 4
  %21 = load %struct.site** %st, align 8
  %incdec.ptr = getelementptr inbounds %struct.site* %21, i32 1
  store %struct.site* %incdec.ptr, %struct.site** %st, align 8
  br label %for.cond1

for.end17:                                        ; preds = %for.cond1
  store i32 0, i32* %ncount, align 4
  store i32 0, i32* %iloop, align 4
  br label %for.cond18

for.cond18:                                       ; preds = %for.inc131, %for.end17
  %22 = load i32* %iloop, align 4
  %cmp19 = icmp slt i32 %22, 3
  br i1 %cmp19, label %for.body20, label %for.end133

for.body20:                                       ; preds = %for.cond18
  %23 = load i32* %iloop, align 4
  %idxprom21 = sext i32 %23 to i64
  %arrayidx22 = getelementptr inbounds [3 x i32]* @loop_length, i32 0, i64 %idxprom21
  %24 = load i32* %arrayidx22, align 4
  store i32 %24, i32* %length, align 4
  store i32 0, i32* %ln, align 4
  br label %for.cond23

for.cond23:                                       ; preds = %for.inc128, %for.body20
  %25 = load i32* %ln, align 4
  %26 = load i32* %iloop, align 4
  %idxprom24 = sext i32 %26 to i64
  %arrayidx25 = getelementptr inbounds [3 x i32]* @loop_num, i32 0, i64 %idxprom24
  %27 = load i32* %arrayidx25, align 4
  %cmp26 = icmp slt i32 %25, %27
  br i1 %cmp26, label %for.body27, label %for.end130

for.body27:                                       ; preds = %for.cond23
  store i32 0, i32* %k, align 4
  br label %for.cond28

for.cond28:                                       ; preds = %for.inc57, %for.body27
  %28 = load i32* %k, align 4
  %29 = load i32* %length, align 4
  %cmp29 = icmp slt i32 %28, %29
  br i1 %cmp29, label %for.body30, label %for.end59

for.body30:                                       ; preds = %for.cond28
  %30 = load i32* %k, align 4
  %idxprom31 = sext i32 %30 to i64
  %31 = load i32* %ln, align 4
  %idxprom32 = sext i32 %31 to i64
  %32 = load i32* %iloop, align 4
  %idxprom33 = sext i32 %32 to i64
  %arrayidx34 = getelementptr inbounds [3 x [16 x [6 x i32]]]* @loop_table, i32 0, i64 %idxprom33
  %arrayidx35 = getelementptr inbounds [16 x [6 x i32]]* %arrayidx34, i32 0, i64 %idxprom32
  %arrayidx36 = getelementptr inbounds [6 x i32]* %arrayidx35, i32 0, i64 %idxprom31
  %33 = load i32* %arrayidx36, align 4
  %cmp37 = icmp sle i32 %33, 3
  br i1 %cmp37, label %if.then, label %if.else

if.then:                                          ; preds = %for.body30
  %34 = load i32* %dir, align 4
  %35 = load i32* %k, align 4
  %idxprom38 = sext i32 %35 to i64
  %36 = load i32* %ln, align 4
  %idxprom39 = sext i32 %36 to i64
  %37 = load i32* %iloop, align 4
  %idxprom40 = sext i32 %37 to i64
  %arrayidx41 = getelementptr inbounds [3 x [16 x [6 x i32]]]* @loop_table, i32 0, i64 %idxprom40
  %arrayidx42 = getelementptr inbounds [16 x [6 x i32]]* %arrayidx41, i32 0, i64 %idxprom39
  %arrayidx43 = getelementptr inbounds [6 x i32]* %arrayidx42, i32 0, i64 %idxprom38
  %38 = load i32* %arrayidx43, align 4
  %add = add nsw i32 %34, %38
  %rem = srem i32 %add, 4
  %39 = load i32* %k, align 4
  %idxprom44 = sext i32 %39 to i64
  %arrayidx45 = getelementptr inbounds [6 x i32]* %dirs, i32 0, i64 %idxprom44
  store i32 %rem, i32* %arrayidx45, align 4
  br label %if.end

if.else:                                          ; preds = %for.body30
  %40 = load i32* %dir, align 4
  %41 = load i32* %k, align 4
  %idxprom46 = sext i32 %41 to i64
  %42 = load i32* %ln, align 4
  %idxprom47 = sext i32 %42 to i64
  %43 = load i32* %iloop, align 4
  %idxprom48 = sext i32 %43 to i64
  %arrayidx49 = getelementptr inbounds [3 x [16 x [6 x i32]]]* @loop_table, i32 0, i64 %idxprom48
  %arrayidx50 = getelementptr inbounds [16 x [6 x i32]]* %arrayidx49, i32 0, i64 %idxprom47
  %arrayidx51 = getelementptr inbounds [6 x i32]* %arrayidx50, i32 0, i64 %idxprom46
  %44 = load i32* %arrayidx51, align 4
  %sub = sub nsw i32 7, %44
  %add52 = add nsw i32 %40, %sub
  %rem53 = srem i32 %add52, 4
  %sub54 = sub nsw i32 7, %rem53
  %45 = load i32* %k, align 4
  %idxprom55 = sext i32 %45 to i64
  %arrayidx56 = getelementptr inbounds [6 x i32]* %dirs, i32 0, i64 %idxprom55
  store i32 %sub54, i32* %arrayidx56, align 4
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  br label %for.inc57

for.inc57:                                        ; preds = %if.end
  %46 = load i32* %k, align 4
  %inc58 = add nsw i32 %46, 1
  store i32 %inc58, i32* %k, align 4
  br label %for.cond28

for.end59:                                        ; preds = %for.cond28
  %47 = load i32* %length, align 4
  %sub60 = sub nsw i32 %47, 1
  store i32 %sub60, i32* %path_length, align 4
  store i32 0, i32* %k, align 4
  br label %for.cond61

for.cond61:                                       ; preds = %for.inc125, %for.end59
  %48 = load i32* %k, align 4
  %49 = load i32* %length, align 4
  %cmp62 = icmp slt i32 %48, %49
  br i1 %cmp62, label %for.body63, label %for.end127

for.body63:                                       ; preds = %for.cond61
  %50 = load i32* %k, align 4
  %idxprom64 = sext i32 %50 to i64
  %arrayidx65 = getelementptr inbounds [6 x i32]* %dirs, i32 0, i64 %idxprom64
  %51 = load i32* %arrayidx65, align 4
  %52 = load i32* %dir, align 4
  %cmp66 = icmp eq i32 %51, %52
  br i1 %cmp66, label %if.then71, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %for.body63
  %53 = load i32* %k, align 4
  %idxprom67 = sext i32 %53 to i64
  %arrayidx68 = getelementptr inbounds [6 x i32]* %dirs, i32 0, i64 %idxprom67
  %54 = load i32* %arrayidx68, align 4
  %55 = load i32* %dir, align 4
  %sub69 = sub nsw i32 7, %55
  %cmp70 = icmp eq i32 %54, %sub69
  br i1 %cmp70, label %if.then71, label %if.end124

if.then71:                                        ; preds = %lor.lhs.false, %for.body63
  %56 = load i32* %k, align 4
  %idxprom72 = sext i32 %56 to i64
  %arrayidx73 = getelementptr inbounds [6 x i32]* %dirs, i32 0, i64 %idxprom72
  %57 = load i32* %arrayidx73, align 4
  %cmp74 = icmp sle i32 %57, 3
  br i1 %cmp74, label %if.then75, label %if.end89

if.then75:                                        ; preds = %if.then71
  store i32 0, i32* %j, align 4
  br label %for.cond76

for.cond76:                                       ; preds = %for.inc86, %if.then75
  %58 = load i32* %j, align 4
  %59 = load i32* %path_length, align 4
  %cmp77 = icmp slt i32 %58, %59
  br i1 %cmp77, label %for.body78, label %for.end88

for.body78:                                       ; preds = %for.cond76
  %60 = load i32* %k, align 4
  %61 = load i32* %j, align 4
  %add79 = add nsw i32 %60, %61
  %add80 = add nsw i32 %add79, 1
  %62 = load i32* %length, align 4
  %rem81 = srem i32 %add80, %62
  %idxprom82 = sext i32 %rem81 to i64
  %arrayidx83 = getelementptr inbounds [6 x i32]* %dirs, i32 0, i64 %idxprom82
  %63 = load i32* %arrayidx83, align 4
  %64 = load i32* %j, align 4
  %idxprom84 = sext i32 %64 to i64
  %arrayidx85 = getelementptr inbounds [6 x i32]* %path_dir, i32 0, i64 %idxprom84
  store i32 %63, i32* %arrayidx85, align 4
  br label %for.inc86

for.inc86:                                        ; preds = %for.body78
  %65 = load i32* %j, align 4
  %inc87 = add nsw i32 %65, 1
  store i32 %inc87, i32* %j, align 4
  br label %for.cond76

for.end88:                                        ; preds = %for.cond76
  br label %if.end89

if.end89:                                         ; preds = %for.end88, %if.then71
  %66 = load i32* %k, align 4
  %idxprom90 = sext i32 %66 to i64
  %arrayidx91 = getelementptr inbounds [6 x i32]* %dirs, i32 0, i64 %idxprom90
  %67 = load i32* %arrayidx91, align 4
  %cmp92 = icmp sgt i32 %67, 3
  br i1 %cmp92, label %if.then93, label %if.end110

if.then93:                                        ; preds = %if.end89
  store i32 0, i32* %j, align 4
  br label %for.cond94

for.cond94:                                       ; preds = %for.inc107, %if.then93
  %68 = load i32* %j, align 4
  %69 = load i32* %path_length, align 4
  %cmp95 = icmp slt i32 %68, %69
  br i1 %cmp95, label %for.body96, label %for.end109

for.body96:                                       ; preds = %for.cond94
  %70 = load i32* %k, align 4
  %71 = load i32* %j, align 4
  %add97 = add nsw i32 %70, %71
  %add98 = add nsw i32 %add97, 1
  %72 = load i32* %length, align 4
  %rem99 = srem i32 %add98, %72
  %idxprom100 = sext i32 %rem99 to i64
  %arrayidx101 = getelementptr inbounds [6 x i32]* %dirs, i32 0, i64 %idxprom100
  %73 = load i32* %arrayidx101, align 4
  %sub102 = sub nsw i32 7, %73
  %74 = load i32* %path_length, align 4
  %sub103 = sub nsw i32 %74, 1
  %75 = load i32* %j, align 4
  %sub104 = sub nsw i32 %sub103, %75
  %idxprom105 = sext i32 %sub104 to i64
  %arrayidx106 = getelementptr inbounds [6 x i32]* %path_dir, i32 0, i64 %idxprom105
  store i32 %sub102, i32* %arrayidx106, align 4
  br label %for.inc107

for.inc107:                                       ; preds = %for.body96
  %76 = load i32* %j, align 4
  %inc108 = add nsw i32 %76, 1
  store i32 %inc108, i32* %j, align 4
  br label %for.cond94

for.end109:                                       ; preds = %for.cond94
  br label %if.end110

if.end110:                                        ; preds = %for.end109, %if.end89
  %arraydecay = getelementptr inbounds [6 x i32]* %path_dir, i32 0, i32 0
  %77 = load i32* %path_length, align 4
  call void @path_product(i32* %arraydecay, i32 %77)
  store i32 0, i32* %i, align 4
  %78 = load %struct.site** @lattice, align 8
  store %struct.site* %78, %struct.site** %st, align 8
  br label %for.cond111

for.cond111:                                      ; preds = %for.inc119, %if.end110
  %79 = load i32* %i, align 4
  %80 = load i32* @sites_on_node, align 4
  %cmp112 = icmp slt i32 %79, %80
  br i1 %cmp112, label %for.body113, label %for.end122

for.body113:                                      ; preds = %for.cond111
  %81 = load %struct.site** %st, align 8
  %tempmat1 = getelementptr inbounds %struct.site* %81, i32 0, i32 20
  call void @su3_adjoint(%struct.su3_matrix* %tempmat1, %struct.su3_matrix* %tmat1)
  %82 = load i32* %iloop, align 4
  %idxprom114 = sext i32 %82 to i64
  %arrayidx115 = getelementptr inbounds [3 x [1 x double]]* @loop_coeff, i32 0, i64 %idxprom114
  %arrayidx116 = getelementptr inbounds [1 x double]* %arrayidx115, i32 0, i64 0
  %83 = load double* %arrayidx116, align 8
  store double %83, double* %new_term, align 8
  %84 = load %struct.site** %st, align 8
  %staple117 = getelementptr inbounds %struct.site* %84, i32 0, i32 21
  %85 = load double* %new_term, align 8
  %86 = load %struct.site** %st, align 8
  %staple118 = getelementptr inbounds %struct.site* %86, i32 0, i32 21
  call void @scalar_mult_add_su3_matrix(%struct.su3_matrix* %staple117, %struct.su3_matrix* %tmat1, double %85, %struct.su3_matrix* %staple118)
  br label %for.inc119

for.inc119:                                       ; preds = %for.body113
  %87 = load i32* %i, align 4
  %inc120 = add nsw i32 %87, 1
  store i32 %inc120, i32* %i, align 4
  %88 = load %struct.site** %st, align 8
  %incdec.ptr121 = getelementptr inbounds %struct.site* %88, i32 1
  store %struct.site* %incdec.ptr121, %struct.site** %st, align 8
  br label %for.cond111

for.end122:                                       ; preds = %for.cond111
  %89 = load i32* %ncount, align 4
  %inc123 = add nsw i32 %89, 1
  store i32 %inc123, i32* %ncount, align 4
  br label %if.end124

if.end124:                                        ; preds = %for.end122, %lor.lhs.false
  br label %for.inc125

for.inc125:                                       ; preds = %if.end124
  %90 = load i32* %k, align 4
  %inc126 = add nsw i32 %90, 1
  store i32 %inc126, i32* %k, align 4
  br label %for.cond61

for.end127:                                       ; preds = %for.cond61
  br label %for.inc128

for.inc128:                                       ; preds = %for.end127
  %91 = load i32* %ln, align 4
  %inc129 = add nsw i32 %91, 1
  store i32 %inc129, i32* %ln, align 4
  br label %for.cond23

for.end130:                                       ; preds = %for.cond23
  br label %for.inc131

for.inc131:                                       ; preds = %for.end130
  %92 = load i32* %iloop, align 4
  %inc132 = add nsw i32 %92, 1
  store i32 %inc132, i32* %iloop, align 4
  br label %for.cond18

for.end133:                                       ; preds = %for.cond18
  store i32 0, i32* %i, align 4
  %93 = load %struct.site** @lattice, align 8
  store %struct.site* %93, %struct.site** %st, align 8
  br label %for.cond134

for.cond134:                                      ; preds = %for.inc146, %for.end133
  %94 = load i32* %i, align 4
  %95 = load i32* @sites_on_node, align 4
  %cmp135 = icmp slt i32 %94, %95
  br i1 %cmp135, label %for.body136, label %for.end149

for.body136:                                      ; preds = %for.cond134
  %96 = load i32* %dir, align 4
  %idxprom137 = sext i32 %96 to i64
  %97 = load %struct.site** %st, align 8
  %link = getelementptr inbounds %struct.site* %97, i32 0, i32 8
  %arrayidx138 = getelementptr inbounds [4 x %struct.su3_matrix]* %link, i32 0, i64 %idxprom137
  %98 = load %struct.site** %st, align 8
  %staple139 = getelementptr inbounds %struct.site* %98, i32 0, i32 21
  call void @mult_su3_na(%struct.su3_matrix* %arrayidx138, %struct.su3_matrix* %staple139, %struct.su3_matrix* %tmat1)
  %99 = load %struct.site** %st, align 8
  %100 = bitcast %struct.site* %99 to i8*
  %101 = load i32* %mom_off.addr, align 4
  %idx.ext = sext i32 %101 to i64
  %add.ptr = getelementptr inbounds i8* %100, i64 %idx.ext
  %102 = bitcast i8* %add.ptr to %struct.anti_hermitmat*
  store %struct.anti_hermitmat* %102, %struct.anti_hermitmat** %momentum, align 8
  %103 = load i32* %dir, align 4
  %idxprom140 = sext i32 %103 to i64
  %104 = load %struct.anti_hermitmat** %momentum, align 8
  %arrayidx141 = getelementptr inbounds %struct.anti_hermitmat* %104, i64 %idxprom140
  call void @uncompress_anti_hermitian(%struct.anti_hermitmat* %arrayidx141, %struct.su3_matrix* %tmat2)
  %105 = load double* %eb3, align 8
  %106 = load %struct.site** %st, align 8
  %staple142 = getelementptr inbounds %struct.site* %106, i32 0, i32 21
  call void @scalar_mult_sub_su3_matrix(%struct.su3_matrix* %tmat2, %struct.su3_matrix* %tmat1, double %105, %struct.su3_matrix* %staple142)
  %107 = load %struct.site** %st, align 8
  %staple143 = getelementptr inbounds %struct.site* %107, i32 0, i32 21
  %108 = load i32* %dir, align 4
  %idxprom144 = sext i32 %108 to i64
  %109 = load %struct.anti_hermitmat** %momentum, align 8
  %arrayidx145 = getelementptr inbounds %struct.anti_hermitmat* %109, i64 %idxprom144
  call void @make_anti_hermitian(%struct.su3_matrix* %staple143, %struct.anti_hermitmat* %arrayidx145)
  br label %for.inc146

for.inc146:                                       ; preds = %for.body136
  %110 = load i32* %i, align 4
  %inc147 = add nsw i32 %110, 1
  store i32 %inc147, i32* %i, align 4
  %111 = load %struct.site** %st, align 8
  %incdec.ptr148 = getelementptr inbounds %struct.site* %111, i32 1
  store %struct.site* %incdec.ptr148, %struct.site** %st, align 8
  br label %for.cond134

for.end149:                                       ; preds = %for.cond134
  br label %for.inc150

for.inc150:                                       ; preds = %for.end149
  %112 = load i32* %dir, align 4
  %inc151 = add nsw i32 %112, 1
  store i32 %inc151, i32* %dir, align 4
  br label %for.cond

for.end152:                                       ; preds = %for.cond
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @g_measure() #0 {
entry:
  %ss_plaquette = alloca double, align 8
  %st_plaquette = alloca double, align 8
  %p_loop = alloca %struct.complex, align 8
  %i = alloca i32, align 4
  %s = alloca %struct.site*, align 8
  %trace = alloca %struct.complex, align 8
  %average = alloca [1 x double], align 8
  %action = alloca double, align 8
  %act2 = alloca double, align 8
  %total_action = alloca double, align 8
  %length = alloca i32, align 4
  %ln = alloca i32, align 4
  %iloop = alloca i32, align 4
  %rep = alloca i32, align 4
  %coerce = alloca %struct.complex, align 8
  %coerce25 = alloca %struct.complex, align 8
  call void @d_plaquette(double* %ss_plaquette, double* %st_plaquette)
  %0 = load i32* @this_node, align 4
  %cmp = icmp eq i32 %0, 0
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %1 = load double* %ss_plaquette, align 8
  %2 = load double* %st_plaquette, align 8
  %call = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([13 x i8]* @.str5294, i32 0, i32 0), double %1, double %2)
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %call1 = call { double, double } @ploop()
  %3 = bitcast %struct.complex* %coerce to { double, double }*
  %4 = getelementptr { double, double }* %3, i32 0, i32 0
  %5 = extractvalue { double, double } %call1, 0
  store double %5, double* %4, align 1
  %6 = getelementptr { double, double }* %3, i32 0, i32 1
  %7 = extractvalue { double, double } %call1, 1
  store double %7, double* %6, align 1
  %8 = bitcast %struct.complex* %p_loop to i8*
  %9 = bitcast %struct.complex* %coerce to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %8, i8* %9, i64 16, i32 8, i1 false)
  %10 = load i32* @this_node, align 4
  %cmp2 = icmp eq i32 %10, 0
  br i1 %cmp2, label %if.then3, label %if.end5

if.then3:                                         ; preds = %if.end
  %real = getelementptr inbounds %struct.complex* %p_loop, i32 0, i32 0
  %11 = load double* %real, align 8
  %imag = getelementptr inbounds %struct.complex* %p_loop, i32 0, i32 1
  %12 = load double* %imag, align 8
  %call4 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([15 x i8]* @.str6295, i32 0, i32 0), double %11, double %12)
  br label %if.end5

if.end5:                                          ; preds = %if.then3, %if.end
  store double 0.000000e+00, double* %total_action, align 8
  store i32 0, i32* %iloop, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc100, %if.end5
  %13 = load i32* %iloop, align 4
  %cmp6 = icmp slt i32 %13, 3
  br i1 %cmp6, label %for.body, label %for.end102

for.body:                                         ; preds = %for.cond
  %14 = load i32* %iloop, align 4
  %idxprom = sext i32 %14 to i64
  %arrayidx = getelementptr inbounds [3 x i32]* @loop_length, i32 0, i64 %idxprom
  %15 = load i32* %arrayidx, align 4
  store i32 %15, i32* %length, align 4
  store i32 0, i32* %ln, align 4
  br label %for.cond7

for.cond7:                                        ; preds = %for.inc97, %for.body
  %16 = load i32* %ln, align 4
  %17 = load i32* %iloop, align 4
  %idxprom8 = sext i32 %17 to i64
  %arrayidx9 = getelementptr inbounds [3 x i32]* @loop_num, i32 0, i64 %idxprom8
  %18 = load i32* %arrayidx9, align 4
  %cmp10 = icmp slt i32 %16, %18
  br i1 %cmp10, label %for.body11, label %for.end99

for.body11:                                       ; preds = %for.cond7
  %19 = load i32* %ln, align 4
  %idxprom12 = sext i32 %19 to i64
  %20 = load i32* %iloop, align 4
  %idxprom13 = sext i32 %20 to i64
  %arrayidx14 = getelementptr inbounds [3 x [16 x [6 x i32]]]* @loop_table, i32 0, i64 %idxprom13
  %arrayidx15 = getelementptr inbounds [16 x [6 x i32]]* %arrayidx14, i32 0, i64 %idxprom12
  %arraydecay = getelementptr inbounds [6 x i32]* %arrayidx15, i32 0, i32 0
  %21 = load i32* %length, align 4
  call void @path_product(i32* %arraydecay, i32 %21)
  store i32 0, i32* %rep, align 4
  br label %for.cond16

for.cond16:                                       ; preds = %for.inc, %for.body11
  %22 = load i32* %rep, align 4
  %cmp17 = icmp slt i32 %22, 1
  br i1 %cmp17, label %for.body18, label %for.end

for.body18:                                       ; preds = %for.cond16
  %23 = load i32* %rep, align 4
  %idxprom19 = sext i32 %23 to i64
  %arrayidx20 = getelementptr inbounds [1 x double]* %average, i32 0, i64 %idxprom19
  store double 0.000000e+00, double* %arrayidx20, align 8
  br label %for.inc

for.inc:                                          ; preds = %for.body18
  %24 = load i32* %rep, align 4
  %inc = add nsw i32 %24, 1
  store i32 %inc, i32* %rep, align 4
  br label %for.cond16

for.end:                                          ; preds = %for.cond16
  store i32 0, i32* %i, align 4
  %25 = load %struct.site** @lattice, align 8
  store %struct.site* %25, %struct.site** %s, align 8
  br label %for.cond21

for.cond21:                                       ; preds = %for.inc49, %for.end
  %26 = load i32* %i, align 4
  %27 = load i32* @sites_on_node, align 4
  %cmp22 = icmp slt i32 %26, %27
  br i1 %cmp22, label %for.body23, label %for.end51

for.body23:                                       ; preds = %for.cond21
  %28 = load %struct.site** %s, align 8
  %tempmat1 = getelementptr inbounds %struct.site* %28, i32 0, i32 20
  %call24 = call { double, double } @trace_su3(%struct.su3_matrix* %tempmat1)
  %29 = bitcast %struct.complex* %coerce25 to { double, double }*
  %30 = getelementptr { double, double }* %29, i32 0, i32 0
  %31 = extractvalue { double, double } %call24, 0
  store double %31, double* %30, align 1
  %32 = getelementptr { double, double }* %29, i32 0, i32 1
  %33 = extractvalue { double, double } %call24, 1
  store double %33, double* %32, align 1
  %34 = bitcast %struct.complex* %trace to i8*
  %35 = bitcast %struct.complex* %coerce25 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %34, i8* %35, i64 16, i32 8, i1 false)
  %real26 = getelementptr inbounds %struct.complex* %trace, i32 0, i32 0
  %36 = load double* %real26, align 8
  %arrayidx27 = getelementptr inbounds [1 x double]* %average, i32 0, i64 0
  %37 = load double* %arrayidx27, align 8
  %add = fadd double %37, %36
  store double %add, double* %arrayidx27, align 8
  %real28 = getelementptr inbounds %struct.complex* %trace, i32 0, i32 0
  %38 = load double* %real28, align 8
  %sub = fsub double 3.000000e+00, %38
  store double %sub, double* %action, align 8
  %39 = load i32* %iloop, align 4
  %idxprom29 = sext i32 %39 to i64
  %arrayidx30 = getelementptr inbounds [3 x [1 x double]]* @loop_coeff, i32 0, i64 %idxprom29
  %arrayidx31 = getelementptr inbounds [1 x double]* %arrayidx30, i32 0, i64 0
  %40 = load double* %arrayidx31, align 8
  %41 = load double* %action, align 8
  %mul = fmul double %40, %41
  %42 = load double* %total_action, align 8
  %add32 = fadd double %42, %mul
  store double %add32, double* %total_action, align 8
  %43 = load double* %action, align 8
  store double %43, double* %act2, align 8
  store i32 1, i32* %rep, align 4
  br label %for.cond33

for.cond33:                                       ; preds = %for.inc46, %for.body23
  %44 = load i32* %rep, align 4
  %cmp34 = icmp slt i32 %44, 1
  br i1 %cmp34, label %for.body35, label %for.end48

for.body35:                                       ; preds = %for.cond33
  %45 = load double* %action, align 8
  %46 = load double* %act2, align 8
  %mul36 = fmul double %46, %45
  store double %mul36, double* %act2, align 8
  %47 = load double* %act2, align 8
  %48 = load i32* %rep, align 4
  %idxprom37 = sext i32 %48 to i64
  %arrayidx38 = getelementptr inbounds [1 x double]* %average, i32 0, i64 %idxprom37
  %49 = load double* %arrayidx38, align 8
  %add39 = fadd double %49, %47
  store double %add39, double* %arrayidx38, align 8
  %50 = load i32* %rep, align 4
  %idxprom40 = sext i32 %50 to i64
  %51 = load i32* %iloop, align 4
  %idxprom41 = sext i32 %51 to i64
  %arrayidx42 = getelementptr inbounds [3 x [1 x double]]* @loop_coeff, i32 0, i64 %idxprom41
  %arrayidx43 = getelementptr inbounds [1 x double]* %arrayidx42, i32 0, i64 %idxprom40
  %52 = load double* %arrayidx43, align 8
  %53 = load double* %act2, align 8
  %mul44 = fmul double %52, %53
  %54 = load double* %total_action, align 8
  %add45 = fadd double %54, %mul44
  store double %add45, double* %total_action, align 8
  br label %for.inc46

for.inc46:                                        ; preds = %for.body35
  %55 = load i32* %rep, align 4
  %inc47 = add nsw i32 %55, 1
  store i32 %inc47, i32* %rep, align 4
  br label %for.cond33

for.end48:                                        ; preds = %for.cond33
  br label %for.inc49

for.inc49:                                        ; preds = %for.end48
  %56 = load i32* %i, align 4
  %inc50 = add nsw i32 %56, 1
  store i32 %inc50, i32* %i, align 4
  %57 = load %struct.site** %s, align 8
  %incdec.ptr = getelementptr inbounds %struct.site* %57, i32 1
  store %struct.site* %incdec.ptr, %struct.site** %s, align 8
  br label %for.cond21

for.end51:                                        ; preds = %for.cond21
  %arraydecay52 = getelementptr inbounds [1 x double]* %average, i32 0, i32 0
  call void @g_vecdoublesum(double* %arraydecay52, i32 1)
  %58 = load i32* @this_node, align 4
  %cmp53 = icmp eq i32 %58, 0
  br i1 %cmp53, label %if.then54, label %if.end56

if.then54:                                        ; preds = %for.end51
  %59 = load i32* %iloop, align 4
  %60 = load i32* %ln, align 4
  %61 = load i32* %length, align 4
  %call55 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([23 x i8]* @.str7296, i32 0, i32 0), i32 %59, i32 %60, i32 %61)
  br label %if.end56

if.end56:                                         ; preds = %if.then54, %for.end51
  store i32 0, i32* %rep, align 4
  br label %for.cond57

for.cond57:                                       ; preds = %for.inc66, %if.end56
  %62 = load i32* %rep, align 4
  %cmp58 = icmp slt i32 %62, 1
  br i1 %cmp58, label %for.body59, label %for.end68

for.body59:                                       ; preds = %for.cond57
  %63 = load i32* @this_node, align 4
  %cmp60 = icmp eq i32 %63, 0
  br i1 %cmp60, label %if.then61, label %if.end65

if.then61:                                        ; preds = %for.body59
  %64 = load i32* %rep, align 4
  %idxprom62 = sext i32 %64 to i64
  %arrayidx63 = getelementptr inbounds [1 x double]* %average, i32 0, i64 %idxprom62
  %65 = load double* %arrayidx63, align 8
  %66 = load i32* @volume, align 4
  %conv = sitofp i32 %66 to double
  %div = fdiv double %65, %conv
  %call64 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([4 x i8]* @.str8297, i32 0, i32 0), double %div)
  br label %if.end65

if.end65:                                         ; preds = %if.then61, %for.body59
  br label %for.inc66

for.inc66:                                        ; preds = %if.end65
  %67 = load i32* %rep, align 4
  %inc67 = add nsw i32 %67, 1
  store i32 %inc67, i32* %rep, align 4
  br label %for.cond57

for.end68:                                        ; preds = %for.cond57
  %68 = load i32* @this_node, align 4
  %cmp69 = icmp eq i32 %68, 0
  br i1 %cmp69, label %if.then71, label %if.end73

if.then71:                                        ; preds = %for.end68
  %call72 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([4 x i8]* @.str9298, i32 0, i32 0))
  br label %if.end73

if.end73:                                         ; preds = %if.then71, %for.end68
  store i32 0, i32* %i, align 4
  br label %for.cond74

for.cond74:                                       ; preds = %for.inc89, %if.end73
  %69 = load i32* %i, align 4
  %70 = load i32* %length, align 4
  %cmp75 = icmp slt i32 %69, %70
  br i1 %cmp75, label %for.body77, label %for.end91

for.body77:                                       ; preds = %for.cond74
  %71 = load i32* @this_node, align 4
  %cmp78 = icmp eq i32 %71, 0
  br i1 %cmp78, label %if.then80, label %if.end88

if.then80:                                        ; preds = %for.body77
  %72 = load i32* %i, align 4
  %idxprom81 = sext i32 %72 to i64
  %73 = load i32* %ln, align 4
  %idxprom82 = sext i32 %73 to i64
  %74 = load i32* %iloop, align 4
  %idxprom83 = sext i32 %74 to i64
  %arrayidx84 = getelementptr inbounds [3 x [16 x [6 x i32]]]* @loop_table, i32 0, i64 %idxprom83
  %arrayidx85 = getelementptr inbounds [16 x [6 x i32]]* %arrayidx84, i32 0, i64 %idxprom82
  %arrayidx86 = getelementptr inbounds [6 x i32]* %arrayidx85, i32 0, i64 %idxprom81
  %75 = load i32* %arrayidx86, align 4
  %call87 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([4 x i8]* @.str10299, i32 0, i32 0), i32 %75)
  br label %if.end88

if.end88:                                         ; preds = %if.then80, %for.body77
  br label %for.inc89

for.inc89:                                        ; preds = %if.end88
  %76 = load i32* %i, align 4
  %inc90 = add nsw i32 %76, 1
  store i32 %inc90, i32* %i, align 4
  br label %for.cond74

for.end91:                                        ; preds = %for.cond74
  %77 = load i32* @this_node, align 4
  %cmp92 = icmp eq i32 %77, 0
  br i1 %cmp92, label %if.then94, label %if.end96

if.then94:                                        ; preds = %for.end91
  %call95 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([4 x i8]* @.str11300, i32 0, i32 0))
  br label %if.end96

if.end96:                                         ; preds = %if.then94, %for.end91
  br label %for.inc97

for.inc97:                                        ; preds = %if.end96
  %78 = load i32* %ln, align 4
  %inc98 = add nsw i32 %78, 1
  store i32 %inc98, i32* %ln, align 4
  br label %for.cond7

for.end99:                                        ; preds = %for.cond7
  br label %for.inc100

for.inc100:                                       ; preds = %for.end99
  %79 = load i32* %iloop, align 4
  %inc101 = add nsw i32 %79, 1
  store i32 %inc101, i32* %iloop, align 4
  br label %for.cond

for.end102:                                       ; preds = %for.cond
  call void @g_doublesum(double* %total_action)
  %80 = load i32* @this_node, align 4
  %cmp103 = icmp eq i32 %80, 0
  br i1 %cmp103, label %if.then105, label %if.end109

if.then105:                                       ; preds = %for.end102
  %81 = load double* %total_action, align 8
  %82 = load i32* @volume, align 4
  %conv106 = sitofp i32 %82 to double
  %div107 = fdiv double %81, %conv106
  %call108 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([13 x i8]* @.str12301, i32 0, i32 0), double %div107)
  br label %if.end109

if.end109:                                        ; preds = %if.then105, %for.end102
  %83 = load i32* @this_node, align 4
  %cmp110 = icmp eq i32 %83, 0
  br i1 %cmp110, label %if.then112, label %if.end114

if.then112:                                       ; preds = %if.end109
  %84 = load %struct._IO_FILE** @stdout, align 8
  %call113 = call i32 @fflush(%struct._IO_FILE* %84)
  br label %if.end114

if.end114:                                        ; preds = %if.then112, %if.end109
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @printpath(i32* %path, i32 %length) #0 {
entry:
  %path.addr = alloca i32*, align 8
  %length.addr = alloca i32, align 4
  %i = alloca i32, align 4
  store i32* %path, i32** %path.addr, align 8
  store i32 %length, i32* %length.addr, align 4
  %0 = load i32* @this_node, align 4
  %cmp = icmp eq i32 %0, 0
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %call = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([4 x i8]* @.str9298, i32 0, i32 0))
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.end
  %1 = load i32* %i, align 4
  %2 = load i32* %length.addr, align 4
  %cmp1 = icmp slt i32 %1, %2
  br i1 %cmp1, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %3 = load i32* @this_node, align 4
  %cmp2 = icmp eq i32 %3, 0
  br i1 %cmp2, label %if.then3, label %if.end5

if.then3:                                         ; preds = %for.body
  %4 = load i32* %i, align 4
  %idxprom = sext i32 %4 to i64
  %5 = load i32** %path.addr, align 8
  %arrayidx = getelementptr inbounds i32* %5, i64 %idxprom
  %6 = load i32* %arrayidx, align 4
  %call4 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([4 x i8]* @.str10299, i32 0, i32 0), i32 %6)
  br label %if.end5

if.end5:                                          ; preds = %if.then3, %for.body
  br label %for.inc

for.inc:                                          ; preds = %if.end5
  %7 = load i32* %i, align 4
  %inc = add nsw i32 %7, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %8 = load i32* @this_node, align 4
  %cmp6 = icmp eq i32 %8, 0
  br i1 %cmp6, label %if.then7, label %if.end9

if.then7:                                         ; preds = %for.end
  %9 = load i32* %length.addr, align 4
  %call8 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([13 x i8]* @.str13302, i32 0, i32 0), i32 %9)
  br label %if.end9

if.end9:                                          ; preds = %if.then7, %for.end
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @grsource_imp(i32 %dest, double %mass, i32 %parity) #0 {
entry:
  %dest.addr = alloca i32, align 4
  %mass.addr = alloca double, align 8
  %parity.addr = alloca i32, align 4
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %s = alloca %struct.site*, align 8
  store i32 %dest, i32* %dest.addr, align 4
  store double %mass, double* %mass.addr, align 8
  store i32 %parity, i32* %parity.addr, align 4
  store i32 0, i32* %i, align 4
  %0 = load %struct.site** @lattice, align 8
  store %struct.site* %0, %struct.site** %s, align 8
  br label %for.cond

for.cond:                                         ; preds = %for.inc10, %entry
  %1 = load i32* %i, align 4
  %2 = load i32* @sites_on_node, align 4
  %cmp = icmp slt i32 %1, %2
  br i1 %cmp, label %for.body, label %for.end12

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %j, align 4
  br label %for.cond1

for.cond1:                                        ; preds = %for.inc, %for.body
  %3 = load i32* %j, align 4
  %cmp2 = icmp slt i32 %3, 3
  br i1 %cmp2, label %for.body3, label %for.end

for.body3:                                        ; preds = %for.cond1
  %4 = load %struct.site** %s, align 8
  %site_prn = getelementptr inbounds %struct.site* %4, i32 0, i32 6
  %call = call double @gaussian_rand_no(%struct.double_prn* %site_prn)
  %5 = load i32* %j, align 4
  %idxprom = sext i32 %5 to i64
  %6 = load %struct.site** %s, align 8
  %g_rand = getelementptr inbounds %struct.site* %6, i32 0, i32 16
  %c = getelementptr inbounds %struct.su3_vector* %g_rand, i32 0, i32 0
  %arrayidx = getelementptr inbounds [3 x %struct.complex]* %c, i32 0, i64 %idxprom
  %real = getelementptr inbounds %struct.complex* %arrayidx, i32 0, i32 0
  store double %call, double* %real, align 8
  %7 = load %struct.site** %s, align 8
  %site_prn4 = getelementptr inbounds %struct.site* %7, i32 0, i32 6
  %call5 = call double @gaussian_rand_no(%struct.double_prn* %site_prn4)
  %8 = load i32* %j, align 4
  %idxprom6 = sext i32 %8 to i64
  %9 = load %struct.site** %s, align 8
  %g_rand7 = getelementptr inbounds %struct.site* %9, i32 0, i32 16
  %c8 = getelementptr inbounds %struct.su3_vector* %g_rand7, i32 0, i32 0
  %arrayidx9 = getelementptr inbounds [3 x %struct.complex]* %c8, i32 0, i64 %idxprom6
  %imag = getelementptr inbounds %struct.complex* %arrayidx9, i32 0, i32 1
  store double %call5, double* %imag, align 8
  br label %for.inc

for.inc:                                          ; preds = %for.body3
  %10 = load i32* %j, align 4
  %inc = add nsw i32 %10, 1
  store i32 %inc, i32* %j, align 4
  br label %for.cond1

for.end:                                          ; preds = %for.cond1
  br label %for.inc10

for.inc10:                                        ; preds = %for.end
  %11 = load i32* %i, align 4
  %inc11 = add nsw i32 %11, 1
  store i32 %inc11, i32* %i, align 4
  %12 = load %struct.site** %s, align 8
  %incdec.ptr = getelementptr inbounds %struct.site* %12, i32 1
  store %struct.site* %incdec.ptr, %struct.site** %s, align 8
  br label %for.cond

for.end12:                                        ; preds = %for.cond
  %13 = load i32* @valid_longlinks, align 4
  %tobool = icmp ne i32 %13, 0
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %for.end12
  call void (...)* bitcast (void ()* @load_longlinks to void (...)*)()
  br label %if.end

if.end:                                           ; preds = %if.then, %for.end12
  %14 = load i32* @valid_fatlinks, align 4
  %tobool13 = icmp ne i32 %14, 0
  br i1 %tobool13, label %if.end15, label %if.then14

if.then14:                                        ; preds = %if.end
  call void (...)* bitcast (void ()* @load_fatlinks to void (...)*)()
  br label %if.end15

if.end15:                                         ; preds = %if.then14, %if.end
  %15 = load %struct.site** @lattice, align 8
  %arrayidx16 = getelementptr inbounds %struct.site* %15, i64 0
  %g_rand17 = getelementptr inbounds %struct.site* %arrayidx16, i32 0, i32 16
  %16 = bitcast %struct.su3_vector* %g_rand17 to i8*
  %17 = load %struct.site** @lattice, align 8
  %arrayidx18 = getelementptr inbounds %struct.site* %17, i64 0
  %18 = bitcast %struct.site* %arrayidx18 to i8*
  %sub.ptr.lhs.cast = ptrtoint i8* %16 to i64
  %sub.ptr.rhs.cast = ptrtoint i8* %18 to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %conv = trunc i64 %sub.ptr.sub to i32
  %19 = load i32* %dest.addr, align 4
  %20 = load i32* %parity.addr, align 4
  call void @dslash_fn(i32 %conv, i32 %19, i32 %20)
  %21 = load i32* %dest.addr, align 4
  %22 = load i32* %dest.addr, align 4
  %23 = load i32* %parity.addr, align 4
  call void @scalar_mult_latvec(i32 %21, double -1.000000e+00, i32 %22, i32 %23)
  %24 = load i32* %dest.addr, align 4
  %25 = load %struct.site** @lattice, align 8
  %arrayidx19 = getelementptr inbounds %struct.site* %25, i64 0
  %g_rand20 = getelementptr inbounds %struct.site* %arrayidx19, i32 0, i32 16
  %26 = bitcast %struct.su3_vector* %g_rand20 to i8*
  %27 = load %struct.site** @lattice, align 8
  %arrayidx21 = getelementptr inbounds %struct.site* %27, i64 0
  %28 = bitcast %struct.site* %arrayidx21 to i8*
  %sub.ptr.lhs.cast22 = ptrtoint i8* %26 to i64
  %sub.ptr.rhs.cast23 = ptrtoint i8* %28 to i64
  %sub.ptr.sub24 = sub i64 %sub.ptr.lhs.cast22, %sub.ptr.rhs.cast23
  %conv25 = trunc i64 %sub.ptr.sub24 to i32
  %29 = load double* %mass.addr, align 8
  %mul = fmul double 2.000000e+00, %29
  %30 = load i32* %dest.addr, align 4
  %31 = load i32* %parity.addr, align 4
  call void @scalar_mult_add_latvec(i32 %24, i32 %conv25, double %mul, i32 %30, i32 %31)
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @checkmul_imp(i32 %src, double %mass) #0 {
entry:
  %src.addr = alloca i32, align 4
  %mass.addr = alloca double, align 8
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %s = alloca %struct.site*, align 8
  store i32 %src, i32* %src.addr, align 4
  store double %mass, double* %mass.addr, align 8
  %0 = load i32* %src.addr, align 4
  %1 = load %struct.site** @lattice, align 8
  %arrayidx = getelementptr inbounds %struct.site* %1, i64 0
  %ttt = getelementptr inbounds %struct.site* %arrayidx, i32 0, i32 15
  %2 = bitcast %struct.su3_vector* %ttt to i8*
  %3 = load %struct.site** @lattice, align 8
  %arrayidx1 = getelementptr inbounds %struct.site* %3, i64 0
  %4 = bitcast %struct.site* %arrayidx1 to i8*
  %sub.ptr.lhs.cast = ptrtoint i8* %2 to i64
  %sub.ptr.rhs.cast = ptrtoint i8* %4 to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %conv = trunc i64 %sub.ptr.sub to i32
  call void @dslash_fn(i32 %0, i32 %conv, i32 3)
  %5 = load %struct.site** @lattice, align 8
  %arrayidx2 = getelementptr inbounds %struct.site* %5, i64 0
  %ttt3 = getelementptr inbounds %struct.site* %arrayidx2, i32 0, i32 15
  %6 = bitcast %struct.su3_vector* %ttt3 to i8*
  %7 = load %struct.site** @lattice, align 8
  %arrayidx4 = getelementptr inbounds %struct.site* %7, i64 0
  %8 = bitcast %struct.site* %arrayidx4 to i8*
  %sub.ptr.lhs.cast5 = ptrtoint i8* %6 to i64
  %sub.ptr.rhs.cast6 = ptrtoint i8* %8 to i64
  %sub.ptr.sub7 = sub i64 %sub.ptr.lhs.cast5, %sub.ptr.rhs.cast6
  %conv8 = trunc i64 %sub.ptr.sub7 to i32
  %9 = load i32* %src.addr, align 4
  %10 = load double* %mass.addr, align 8
  %mul = fmul double 2.000000e+00, %10
  %11 = load %struct.site** @lattice, align 8
  %arrayidx9 = getelementptr inbounds %struct.site* %11, i64 0
  %ttt10 = getelementptr inbounds %struct.site* %arrayidx9, i32 0, i32 15
  %12 = bitcast %struct.su3_vector* %ttt10 to i8*
  %13 = load %struct.site** @lattice, align 8
  %arrayidx11 = getelementptr inbounds %struct.site* %13, i64 0
  %14 = bitcast %struct.site* %arrayidx11 to i8*
  %sub.ptr.lhs.cast12 = ptrtoint i8* %12 to i64
  %sub.ptr.rhs.cast13 = ptrtoint i8* %14 to i64
  %sub.ptr.sub14 = sub i64 %sub.ptr.lhs.cast12, %sub.ptr.rhs.cast13
  %conv15 = trunc i64 %sub.ptr.sub14 to i32
  call void @scalar_mult_add_latvec(i32 %conv8, i32 %9, double %mul, i32 %conv15, i32 3)
  store i32 0, i32* %i, align 4
  %15 = load %struct.site** @lattice, align 8
  store %struct.site* %15, %struct.site** %s, align 8
  br label %for.cond

for.cond:                                         ; preds = %for.inc64, %entry
  %16 = load i32* %i, align 4
  %17 = load i32* @sites_on_node, align 4
  %cmp = icmp slt i32 %16, %17
  br i1 %cmp, label %for.body, label %for.end66

for.body:                                         ; preds = %for.cond
  %18 = load %struct.site** %s, align 8
  %x = getelementptr inbounds %struct.site* %18, i32 0, i32 0
  %19 = load i16* %x, align 2
  %conv17 = sext i16 %19 to i32
  %20 = load %struct.site** %s, align 8
  %y = getelementptr inbounds %struct.site* %20, i32 0, i32 1
  %21 = load i16* %y, align 2
  %conv18 = sext i16 %21 to i32
  %22 = load %struct.site** %s, align 8
  %z = getelementptr inbounds %struct.site* %22, i32 0, i32 2
  %23 = load i16* %z, align 2
  %conv19 = sext i16 %23 to i32
  %24 = load %struct.site** %s, align 8
  %t = getelementptr inbounds %struct.site* %24, i32 0, i32 3
  %25 = load i16* %t, align 2
  %conv20 = sext i16 %25 to i32
  %call = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([18 x i8]* @.str309, i32 0, i32 0), i32 %conv17, i32 %conv18, i32 %conv19, i32 %conv20)
  store i32 0, i32* %j, align 4
  br label %for.cond21

for.cond21:                                       ; preds = %for.inc, %for.body
  %26 = load i32* %j, align 4
  %cmp22 = icmp slt i32 %26, 3
  br i1 %cmp22, label %for.body24, label %for.end

for.body24:                                       ; preds = %for.cond21
  %27 = load i32* %i, align 4
  %28 = load i32* %j, align 4
  %29 = load i32* %j, align 4
  %idxprom = sext i32 %29 to i64
  %30 = load %struct.site** %s, align 8
  %g_rand = getelementptr inbounds %struct.site* %30, i32 0, i32 16
  %c = getelementptr inbounds %struct.su3_vector* %g_rand, i32 0, i32 0
  %arrayidx25 = getelementptr inbounds [3 x %struct.complex]* %c, i32 0, i64 %idxprom
  %real = getelementptr inbounds %struct.complex* %arrayidx25, i32 0, i32 0
  %31 = load double* %real, align 8
  %32 = load i32* %j, align 4
  %idxprom26 = sext i32 %32 to i64
  %33 = load %struct.site** %s, align 8
  %ttt27 = getelementptr inbounds %struct.site* %33, i32 0, i32 15
  %c28 = getelementptr inbounds %struct.su3_vector* %ttt27, i32 0, i32 0
  %arrayidx29 = getelementptr inbounds [3 x %struct.complex]* %c28, i32 0, i64 %idxprom26
  %real30 = getelementptr inbounds %struct.complex* %arrayidx29, i32 0, i32 0
  %34 = load double* %real30, align 8
  %35 = load i32* %j, align 4
  %idxprom31 = sext i32 %35 to i64
  %36 = load %struct.site** %s, align 8
  %g_rand32 = getelementptr inbounds %struct.site* %36, i32 0, i32 16
  %c33 = getelementptr inbounds %struct.su3_vector* %g_rand32, i32 0, i32 0
  %arrayidx34 = getelementptr inbounds [3 x %struct.complex]* %c33, i32 0, i64 %idxprom31
  %real35 = getelementptr inbounds %struct.complex* %arrayidx34, i32 0, i32 0
  %37 = load double* %real35, align 8
  %38 = load i32* %j, align 4
  %idxprom36 = sext i32 %38 to i64
  %39 = load %struct.site** %s, align 8
  %ttt37 = getelementptr inbounds %struct.site* %39, i32 0, i32 15
  %c38 = getelementptr inbounds %struct.su3_vector* %ttt37, i32 0, i32 0
  %arrayidx39 = getelementptr inbounds [3 x %struct.complex]* %c38, i32 0, i64 %idxprom36
  %real40 = getelementptr inbounds %struct.complex* %arrayidx39, i32 0, i32 0
  %40 = load double* %real40, align 8
  %sub = fsub double %37, %40
  %call41 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([16 x i8]* @.str1310, i32 0, i32 0), i32 %27, i32 %28, double %31, double %34, double %sub)
  %41 = load i32* %i, align 4
  %42 = load i32* %j, align 4
  %43 = load i32* %j, align 4
  %idxprom42 = sext i32 %43 to i64
  %44 = load %struct.site** %s, align 8
  %g_rand43 = getelementptr inbounds %struct.site* %44, i32 0, i32 16
  %c44 = getelementptr inbounds %struct.su3_vector* %g_rand43, i32 0, i32 0
  %arrayidx45 = getelementptr inbounds [3 x %struct.complex]* %c44, i32 0, i64 %idxprom42
  %imag = getelementptr inbounds %struct.complex* %arrayidx45, i32 0, i32 1
  %45 = load double* %imag, align 8
  %46 = load i32* %j, align 4
  %idxprom46 = sext i32 %46 to i64
  %47 = load %struct.site** %s, align 8
  %ttt47 = getelementptr inbounds %struct.site* %47, i32 0, i32 15
  %c48 = getelementptr inbounds %struct.su3_vector* %ttt47, i32 0, i32 0
  %arrayidx49 = getelementptr inbounds [3 x %struct.complex]* %c48, i32 0, i64 %idxprom46
  %imag50 = getelementptr inbounds %struct.complex* %arrayidx49, i32 0, i32 1
  %48 = load double* %imag50, align 8
  %49 = load i32* %j, align 4
  %idxprom51 = sext i32 %49 to i64
  %50 = load %struct.site** %s, align 8
  %g_rand52 = getelementptr inbounds %struct.site* %50, i32 0, i32 16
  %c53 = getelementptr inbounds %struct.su3_vector* %g_rand52, i32 0, i32 0
  %arrayidx54 = getelementptr inbounds [3 x %struct.complex]* %c53, i32 0, i64 %idxprom51
  %imag55 = getelementptr inbounds %struct.complex* %arrayidx54, i32 0, i32 1
  %51 = load double* %imag55, align 8
  %52 = load i32* %j, align 4
  %idxprom56 = sext i32 %52 to i64
  %53 = load %struct.site** %s, align 8
  %ttt57 = getelementptr inbounds %struct.site* %53, i32 0, i32 15
  %c58 = getelementptr inbounds %struct.su3_vector* %ttt57, i32 0, i32 0
  %arrayidx59 = getelementptr inbounds [3 x %struct.complex]* %c58, i32 0, i64 %idxprom56
  %imag60 = getelementptr inbounds %struct.complex* %arrayidx59, i32 0, i32 1
  %54 = load double* %imag60, align 8
  %sub61 = fsub double %51, %54
  %call62 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([16 x i8]* @.str1310, i32 0, i32 0), i32 %41, i32 %42, double %45, double %48, double %sub61)
  br label %for.inc

for.inc:                                          ; preds = %for.body24
  %55 = load i32* %j, align 4
  %inc = add nsw i32 %55, 1
  store i32 %inc, i32* %j, align 4
  br label %for.cond21

for.end:                                          ; preds = %for.cond21
  %call63 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([2 x i8]* @.str2311, i32 0, i32 0))
  br label %for.inc64

for.inc64:                                        ; preds = %for.end
  %56 = load i32* %i, align 4
  %inc65 = add nsw i32 %56, 1
  store i32 %inc65, i32* %i, align 4
  %57 = load %struct.site** %s, align 8
  %incdec.ptr = getelementptr inbounds %struct.site* %57, i32 1
  store %struct.site* %incdec.ptr, %struct.site** %s, align 8
  br label %for.cond

for.end66:                                        ; preds = %for.cond
  ret void
}

; Function Attrs: nounwind uwtable
define internal i32 @mat_invert_cg(i32 %src, i32 %dest, i32 %temp, double %mass) #0 {
entry:
  %src.addr = alloca i32, align 4
  %dest.addr = alloca i32, align 4
  %temp.addr = alloca i32, align 4
  %mass.addr = alloca double, align 8
  %cgn = alloca i32, align 4
  %finalrsq = alloca double, align 8
  store i32 %src, i32* %src.addr, align 4
  store i32 %dest, i32* %dest.addr, align 4
  store i32 %temp, i32* %temp.addr, align 4
  store double %mass, double* %mass.addr, align 8
  %0 = load i32* %dest.addr, align 4
  call void @clear_latvec(i32 %0, i32 3)
  %1 = load i32* %src.addr, align 4
  %2 = load i32* %dest.addr, align 4
  %3 = load double* %mass.addr, align 8
  %4 = load i32* @niter, align 4
  %5 = load double* @rsqprop, align 8
  %call = call i32 @ks_congrad(i32 %1, i32 %2, double %3, i32 %4, double %5, i32 3, double* %finalrsq)
  store i32 %call, i32* %cgn, align 4
  %6 = load i32* %dest.addr, align 4
  %7 = load %struct.site** @lattice, align 8
  %arrayidx = getelementptr inbounds %struct.site* %7, i64 0
  %ttt = getelementptr inbounds %struct.site* %arrayidx, i32 0, i32 15
  %8 = bitcast %struct.su3_vector* %ttt to i8*
  %9 = load %struct.site** @lattice, align 8
  %arrayidx1 = getelementptr inbounds %struct.site* %9, i64 0
  %10 = bitcast %struct.site* %arrayidx1 to i8*
  %sub.ptr.lhs.cast = ptrtoint i8* %8 to i64
  %sub.ptr.rhs.cast = ptrtoint i8* %10 to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %conv = trunc i64 %sub.ptr.sub to i32
  call void @dslash_fn(i32 %6, i32 %conv, i32 3)
  %11 = load %struct.site** @lattice, align 8
  %arrayidx2 = getelementptr inbounds %struct.site* %11, i64 0
  %ttt3 = getelementptr inbounds %struct.site* %arrayidx2, i32 0, i32 15
  %12 = bitcast %struct.su3_vector* %ttt3 to i8*
  %13 = load %struct.site** @lattice, align 8
  %arrayidx4 = getelementptr inbounds %struct.site* %13, i64 0
  %14 = bitcast %struct.site* %arrayidx4 to i8*
  %sub.ptr.lhs.cast5 = ptrtoint i8* %12 to i64
  %sub.ptr.rhs.cast6 = ptrtoint i8* %14 to i64
  %sub.ptr.sub7 = sub i64 %sub.ptr.lhs.cast5, %sub.ptr.rhs.cast6
  %conv8 = trunc i64 %sub.ptr.sub7 to i32
  %15 = load i32* %dest.addr, align 4
  %16 = load double* %mass.addr, align 8
  %mul = fmul double -2.000000e+00, %16
  %17 = load %struct.site** @lattice, align 8
  %arrayidx9 = getelementptr inbounds %struct.site* %17, i64 0
  %ttt10 = getelementptr inbounds %struct.site* %arrayidx9, i32 0, i32 15
  %18 = bitcast %struct.su3_vector* %ttt10 to i8*
  %19 = load %struct.site** @lattice, align 8
  %arrayidx11 = getelementptr inbounds %struct.site* %19, i64 0
  %20 = bitcast %struct.site* %arrayidx11 to i8*
  %sub.ptr.lhs.cast12 = ptrtoint i8* %18 to i64
  %sub.ptr.rhs.cast13 = ptrtoint i8* %20 to i64
  %sub.ptr.sub14 = sub i64 %sub.ptr.lhs.cast12, %sub.ptr.rhs.cast13
  %conv15 = trunc i64 %sub.ptr.sub14 to i32
  call void @scalar_mult_add_latvec(i32 %conv8, i32 %15, double %mul, i32 %conv15, i32 3)
  %21 = load %struct.site** @lattice, align 8
  %arrayidx16 = getelementptr inbounds %struct.site* %21, i64 0
  %ttt17 = getelementptr inbounds %struct.site* %arrayidx16, i32 0, i32 15
  %22 = bitcast %struct.su3_vector* %ttt17 to i8*
  %23 = load %struct.site** @lattice, align 8
  %arrayidx18 = getelementptr inbounds %struct.site* %23, i64 0
  %24 = bitcast %struct.site* %arrayidx18 to i8*
  %sub.ptr.lhs.cast19 = ptrtoint i8* %22 to i64
  %sub.ptr.rhs.cast20 = ptrtoint i8* %24 to i64
  %sub.ptr.sub21 = sub i64 %sub.ptr.lhs.cast19, %sub.ptr.rhs.cast20
  %conv22 = trunc i64 %sub.ptr.sub21 to i32
  %25 = load i32* %dest.addr, align 4
  call void @scalar_mult_latvec(i32 %conv22, double -1.000000e+00, i32 %25, i32 3)
  %26 = load i32* %cgn, align 4
  ret i32 %26
}

; Function Attrs: nounwind uwtable
define internal i32 @mat_invert_uml(i32 %src, i32 %dest, i32 %temp, double %mass) #0 {
entry:
  %src.addr = alloca i32, align 4
  %dest.addr = alloca i32, align 4
  %temp.addr = alloca i32, align 4
  %mass.addr = alloca double, align 8
  %cgn = alloca i32, align 4
  %finalrsq = alloca double, align 8
  %i = alloca i32, align 4
  %s = alloca %struct.site*, align 8
  store i32 %src, i32* %src.addr, align 4
  store i32 %dest, i32* %dest.addr, align 4
  store i32 %temp, i32* %temp.addr, align 4
  store double %mass, double* %mass.addr, align 8
  %0 = load i32* %src.addr, align 4
  %1 = load i32* %temp.addr, align 4
  %cmp = icmp eq i32 %0, %1
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %call = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([7 x i8]* @.str314, i32 0, i32 0))
  call void @exit(i32 0) #7
  unreachable

if.end:                                           ; preds = %entry
  %2 = load i32* %src.addr, align 4
  %3 = load %struct.site** @lattice, align 8
  %arrayidx = getelementptr inbounds %struct.site* %3, i64 0
  %ttt = getelementptr inbounds %struct.site* %arrayidx, i32 0, i32 15
  %4 = bitcast %struct.su3_vector* %ttt to i8*
  %5 = load %struct.site** @lattice, align 8
  %arrayidx1 = getelementptr inbounds %struct.site* %5, i64 0
  %6 = bitcast %struct.site* %arrayidx1 to i8*
  %sub.ptr.lhs.cast = ptrtoint i8* %4 to i64
  %sub.ptr.rhs.cast = ptrtoint i8* %6 to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %conv = trunc i64 %sub.ptr.sub to i32
  call void @dslash_fn(i32 %2, i32 %conv, i32 2)
  %7 = load %struct.site** @lattice, align 8
  %arrayidx2 = getelementptr inbounds %struct.site* %7, i64 0
  %ttt3 = getelementptr inbounds %struct.site* %arrayidx2, i32 0, i32 15
  %8 = bitcast %struct.su3_vector* %ttt3 to i8*
  %9 = load %struct.site** @lattice, align 8
  %arrayidx4 = getelementptr inbounds %struct.site* %9, i64 0
  %10 = bitcast %struct.site* %arrayidx4 to i8*
  %sub.ptr.lhs.cast5 = ptrtoint i8* %8 to i64
  %sub.ptr.rhs.cast6 = ptrtoint i8* %10 to i64
  %sub.ptr.sub7 = sub i64 %sub.ptr.lhs.cast5, %sub.ptr.rhs.cast6
  %conv8 = trunc i64 %sub.ptr.sub7 to i32
  %11 = load i32* %src.addr, align 4
  %12 = load double* %mass.addr, align 8
  %mul = fmul double -2.000000e+00, %12
  %13 = load i32* %temp.addr, align 4
  call void @scalar_mult_add_latvec(i32 %conv8, i32 %11, double %mul, i32 %13, i32 2)
  %14 = load i32* %temp.addr, align 4
  %15 = load i32* %temp.addr, align 4
  call void @scalar_mult_latvec(i32 %14, double -1.000000e+00, i32 %15, i32 2)
  %16 = load i32* %temp.addr, align 4
  %17 = load i32* %dest.addr, align 4
  %18 = load double* %mass.addr, align 8
  %19 = load i32* @niter, align 4
  %20 = load double* @rsqprop, align 8
  %call9 = call i32 @ks_congrad(i32 %16, i32 %17, double %18, i32 %19, double %20, i32 2, double* %finalrsq)
  store i32 %call9, i32* %cgn, align 4
  %21 = load i32* %dest.addr, align 4
  %22 = load %struct.site** @lattice, align 8
  %arrayidx10 = getelementptr inbounds %struct.site* %22, i64 0
  %ttt11 = getelementptr inbounds %struct.site* %arrayidx10, i32 0, i32 15
  %23 = bitcast %struct.su3_vector* %ttt11 to i8*
  %24 = load %struct.site** @lattice, align 8
  %arrayidx12 = getelementptr inbounds %struct.site* %24, i64 0
  %25 = bitcast %struct.site* %arrayidx12 to i8*
  %sub.ptr.lhs.cast13 = ptrtoint i8* %23 to i64
  %sub.ptr.rhs.cast14 = ptrtoint i8* %25 to i64
  %sub.ptr.sub15 = sub i64 %sub.ptr.lhs.cast13, %sub.ptr.rhs.cast14
  %conv16 = trunc i64 %sub.ptr.sub15 to i32
  call void @dslash_fn(i32 %21, i32 %conv16, i32 1)
  %26 = load i32* @even_sites_on_node, align 4
  store i32 %26, i32* %i, align 4
  %27 = load i32* %i, align 4
  %idxprom = sext i32 %27 to i64
  %28 = load %struct.site** @lattice, align 8
  %arrayidx17 = getelementptr inbounds %struct.site* %28, i64 %idxprom
  store %struct.site* %arrayidx17, %struct.site** %s, align 8
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.end
  %29 = load i32* %i, align 4
  %30 = load i32* @sites_on_node, align 4
  %cmp18 = icmp slt i32 %29, %30
  br i1 %cmp18, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %31 = load %struct.site** %s, align 8
  %32 = bitcast %struct.site* %31 to i8*
  %33 = load i32* %src.addr, align 4
  %idx.ext = sext i32 %33 to i64
  %add.ptr = getelementptr inbounds i8* %32, i64 %idx.ext
  %34 = bitcast i8* %add.ptr to %struct.su3_vector*
  %35 = load %struct.site** %s, align 8
  %ttt20 = getelementptr inbounds %struct.site* %35, i32 0, i32 15
  %36 = load %struct.site** %s, align 8
  %37 = bitcast %struct.site* %36 to i8*
  %38 = load i32* %dest.addr, align 4
  %idx.ext21 = sext i32 %38 to i64
  %add.ptr22 = getelementptr inbounds i8* %37, i64 %idx.ext21
  %39 = bitcast i8* %add.ptr22 to %struct.su3_vector*
  call void @sub_su3_vector(%struct.su3_vector* %34, %struct.su3_vector* %ttt20, %struct.su3_vector* %39)
  %40 = load %struct.site** %s, align 8
  %41 = bitcast %struct.site* %40 to i8*
  %42 = load i32* %dest.addr, align 4
  %idx.ext23 = sext i32 %42 to i64
  %add.ptr24 = getelementptr inbounds i8* %41, i64 %idx.ext23
  %43 = bitcast i8* %add.ptr24 to %struct.su3_vector*
  %44 = load double* %mass.addr, align 8
  %mul25 = fmul double 2.000000e+00, %44
  %div = fdiv double 1.000000e+00, %mul25
  %45 = load %struct.site** %s, align 8
  %46 = bitcast %struct.site* %45 to i8*
  %47 = load i32* %dest.addr, align 4
  %idx.ext26 = sext i32 %47 to i64
  %add.ptr27 = getelementptr inbounds i8* %46, i64 %idx.ext26
  %48 = bitcast i8* %add.ptr27 to %struct.su3_vector*
  call void @scalar_mult_su3_vector(%struct.su3_vector* %43, double %div, %struct.su3_vector* %48)
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %49 = load i32* %i, align 4
  %inc = add nsw i32 %49, 1
  store i32 %inc, i32* %i, align 4
  %50 = load %struct.site** %s, align 8
  %incdec.ptr = getelementptr inbounds %struct.site* %50, i32 1
  store %struct.site* %incdec.ptr, %struct.site** %s, align 8
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %51 = load i32* %cgn, align 4
  ret i32 %51
}

; Function Attrs: nounwind uwtable
define internal void @check_invert(i32 %src, i32 %dest, double %mass, double %tol) #0 {
entry:
  %src.addr = alloca i32, align 4
  %dest.addr = alloca i32, align 4
  %mass.addr = alloca double, align 8
  %tol.addr = alloca double, align 8
  %i = alloca i32, align 4
  %k = alloca i32, align 4
  %flag = alloca i32, align 4
  %s = alloca %struct.site*, align 8
  %r_diff = alloca double, align 8
  %i_diff = alloca double, align 8
  %sum = alloca double, align 8
  %sum2 = alloca double, align 8
  store i32 %src, i32* %src.addr, align 4
  store i32 %dest, i32* %dest.addr, align 4
  store double %mass, double* %mass.addr, align 8
  store double %tol, double* %tol.addr, align 8
  %0 = load i32* %src.addr, align 4
  %1 = load %struct.site** @lattice, align 8
  %arrayidx = getelementptr inbounds %struct.site* %1, i64 0
  %cg_p = getelementptr inbounds %struct.site* %arrayidx, i32 0, i32 13
  %2 = bitcast %struct.su3_vector* %cg_p to i8*
  %3 = load %struct.site** @lattice, align 8
  %arrayidx1 = getelementptr inbounds %struct.site* %3, i64 0
  %4 = bitcast %struct.site* %arrayidx1 to i8*
  %sub.ptr.lhs.cast = ptrtoint i8* %2 to i64
  %sub.ptr.rhs.cast = ptrtoint i8* %4 to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %conv = trunc i64 %sub.ptr.sub to i32
  call void @dslash_fn(i32 %0, i32 %conv, i32 3)
  store i32 0, i32* %i, align 4
  %5 = load %struct.site** @lattice, align 8
  store %struct.site* %5, %struct.site** %s, align 8
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %6 = load i32* %i, align 4
  %7 = load i32* @sites_on_node, align 4
  %cmp = icmp slt i32 %6, %7
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %8 = load %struct.site** %s, align 8
  %cg_p3 = getelementptr inbounds %struct.site* %8, i32 0, i32 13
  %9 = load %struct.site** %s, align 8
  %10 = bitcast %struct.site* %9 to i8*
  %11 = load i32* %src.addr, align 4
  %idx.ext = sext i32 %11 to i64
  %add.ptr = getelementptr inbounds i8* %10, i64 %idx.ext
  %12 = bitcast i8* %add.ptr to %struct.su3_vector*
  %13 = load double* %mass.addr, align 8
  %mul = fmul double 2.000000e+00, %13
  %14 = load %struct.site** %s, align 8
  %cg_p4 = getelementptr inbounds %struct.site* %14, i32 0, i32 13
  call void @scalar_mult_add_su3_vector(%struct.su3_vector* %cg_p3, %struct.su3_vector* %12, double %mul, %struct.su3_vector* %cg_p4)
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %15 = load i32* %i, align 4
  %inc = add nsw i32 %15, 1
  store i32 %inc, i32* %i, align 4
  %16 = load %struct.site** %s, align 8
  %incdec.ptr = getelementptr inbounds %struct.site* %16, i32 1
  store %struct.site* %incdec.ptr, %struct.site** %s, align 8
  br label %for.cond

for.end:                                          ; preds = %for.cond
  store double 0.000000e+00, double* %sum, align 8
  store double 0.000000e+00, double* %sum2, align 8
  store i32 0, i32* %i, align 4
  %17 = load %struct.site** @lattice, align 8
  store %struct.site* %17, %struct.site** %s, align 8
  br label %for.cond5

for.cond5:                                        ; preds = %for.inc75, %for.end
  %18 = load i32* %i, align 4
  %19 = load i32* @sites_on_node, align 4
  %cmp6 = icmp slt i32 %18, %19
  br i1 %cmp6, label %for.body8, label %for.end78

for.body8:                                        ; preds = %for.cond5
  store i32 0, i32* %flag, align 4
  store i32 0, i32* %k, align 4
  br label %for.cond9

for.cond9:                                        ; preds = %for.inc68, %for.body8
  %20 = load i32* %k, align 4
  %cmp10 = icmp slt i32 %20, 3
  br i1 %cmp10, label %for.body12, label %for.end70

for.body12:                                       ; preds = %for.cond9
  %21 = load i32* %k, align 4
  %idxprom = sext i32 %21 to i64
  %22 = load %struct.site** %s, align 8
  %23 = bitcast %struct.site* %22 to i8*
  %24 = load i32* %dest.addr, align 4
  %idx.ext13 = sext i32 %24 to i64
  %add.ptr14 = getelementptr inbounds i8* %23, i64 %idx.ext13
  %25 = bitcast i8* %add.ptr14 to %struct.su3_vector*
  %c = getelementptr inbounds %struct.su3_vector* %25, i32 0, i32 0
  %arrayidx15 = getelementptr inbounds [3 x %struct.complex]* %c, i32 0, i64 %idxprom
  %real = getelementptr inbounds %struct.complex* %arrayidx15, i32 0, i32 0
  %26 = load double* %real, align 8
  %27 = load i32* %k, align 4
  %idxprom16 = sext i32 %27 to i64
  %28 = load %struct.site** %s, align 8
  %cg_p17 = getelementptr inbounds %struct.site* %28, i32 0, i32 13
  %c18 = getelementptr inbounds %struct.su3_vector* %cg_p17, i32 0, i32 0
  %arrayidx19 = getelementptr inbounds [3 x %struct.complex]* %c18, i32 0, i64 %idxprom16
  %real20 = getelementptr inbounds %struct.complex* %arrayidx19, i32 0, i32 0
  %29 = load double* %real20, align 8
  %sub = fsub double %26, %29
  store double %sub, double* %r_diff, align 8
  %30 = load i32* %k, align 4
  %idxprom21 = sext i32 %30 to i64
  %31 = load %struct.site** %s, align 8
  %32 = bitcast %struct.site* %31 to i8*
  %33 = load i32* %dest.addr, align 4
  %idx.ext22 = sext i32 %33 to i64
  %add.ptr23 = getelementptr inbounds i8* %32, i64 %idx.ext22
  %34 = bitcast i8* %add.ptr23 to %struct.su3_vector*
  %c24 = getelementptr inbounds %struct.su3_vector* %34, i32 0, i32 0
  %arrayidx25 = getelementptr inbounds [3 x %struct.complex]* %c24, i32 0, i64 %idxprom21
  %imag = getelementptr inbounds %struct.complex* %arrayidx25, i32 0, i32 1
  %35 = load double* %imag, align 8
  %36 = load i32* %k, align 4
  %idxprom26 = sext i32 %36 to i64
  %37 = load %struct.site** %s, align 8
  %cg_p27 = getelementptr inbounds %struct.site* %37, i32 0, i32 13
  %c28 = getelementptr inbounds %struct.su3_vector* %cg_p27, i32 0, i32 0
  %arrayidx29 = getelementptr inbounds [3 x %struct.complex]* %c28, i32 0, i64 %idxprom26
  %imag30 = getelementptr inbounds %struct.complex* %arrayidx29, i32 0, i32 1
  %38 = load double* %imag30, align 8
  %sub31 = fsub double %35, %38
  store double %sub31, double* %i_diff, align 8
  %39 = load double* %r_diff, align 8
  %call = call double @fabs(double %39) #8
  %40 = load double* %tol.addr, align 8
  %cmp32 = fcmp ogt double %call, %40
  br i1 %cmp32, label %if.then, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %for.body12
  %41 = load double* %i_diff, align 8
  %call34 = call double @fabs(double %41) #8
  %42 = load double* %tol.addr, align 8
  %cmp35 = fcmp ogt double %call34, %42
  br i1 %cmp35, label %if.then, label %if.end

if.then:                                          ; preds = %lor.lhs.false, %for.body12
  store i32 1, i32* %flag, align 4
  br label %if.end

if.end:                                           ; preds = %if.then, %lor.lhs.false
  %43 = load i32* %flag, align 4
  %tobool = icmp ne i32 %43, 0
  br i1 %tobool, label %if.then37, label %if.end61

if.then37:                                        ; preds = %if.end
  %44 = load i32* %i, align 4
  %45 = load i32* %k, align 4
  %46 = load i32* %k, align 4
  %idxprom38 = sext i32 %46 to i64
  %47 = load %struct.site** %s, align 8
  %48 = bitcast %struct.site* %47 to i8*
  %49 = load i32* %dest.addr, align 4
  %idx.ext39 = sext i32 %49 to i64
  %add.ptr40 = getelementptr inbounds i8* %48, i64 %idx.ext39
  %50 = bitcast i8* %add.ptr40 to %struct.su3_vector*
  %c41 = getelementptr inbounds %struct.su3_vector* %50, i32 0, i32 0
  %arrayidx42 = getelementptr inbounds [3 x %struct.complex]* %c41, i32 0, i64 %idxprom38
  %real43 = getelementptr inbounds %struct.complex* %arrayidx42, i32 0, i32 0
  %51 = load double* %real43, align 8
  %52 = load i32* %k, align 4
  %idxprom44 = sext i32 %52 to i64
  %53 = load %struct.site** %s, align 8
  %54 = bitcast %struct.site* %53 to i8*
  %55 = load i32* %dest.addr, align 4
  %idx.ext45 = sext i32 %55 to i64
  %add.ptr46 = getelementptr inbounds i8* %54, i64 %idx.ext45
  %56 = bitcast i8* %add.ptr46 to %struct.su3_vector*
  %c47 = getelementptr inbounds %struct.su3_vector* %56, i32 0, i32 0
  %arrayidx48 = getelementptr inbounds [3 x %struct.complex]* %c47, i32 0, i64 %idxprom44
  %imag49 = getelementptr inbounds %struct.complex* %arrayidx48, i32 0, i32 1
  %57 = load double* %imag49, align 8
  %58 = load i32* %k, align 4
  %idxprom50 = sext i32 %58 to i64
  %59 = load %struct.site** %s, align 8
  %cg_p51 = getelementptr inbounds %struct.site* %59, i32 0, i32 13
  %c52 = getelementptr inbounds %struct.su3_vector* %cg_p51, i32 0, i32 0
  %arrayidx53 = getelementptr inbounds [3 x %struct.complex]* %c52, i32 0, i64 %idxprom50
  %real54 = getelementptr inbounds %struct.complex* %arrayidx53, i32 0, i32 0
  %60 = load double* %real54, align 8
  %61 = load i32* %k, align 4
  %idxprom55 = sext i32 %61 to i64
  %62 = load %struct.site** %s, align 8
  %cg_p56 = getelementptr inbounds %struct.site* %62, i32 0, i32 13
  %c57 = getelementptr inbounds %struct.su3_vector* %cg_p56, i32 0, i32 0
  %arrayidx58 = getelementptr inbounds [3 x %struct.complex]* %c57, i32 0, i64 %idxprom55
  %imag59 = getelementptr inbounds %struct.complex* %arrayidx58, i32 0, i32 1
  %63 = load double* %imag59, align 8
  %call60 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([41 x i8]* @.str1315, i32 0, i32 0), i32 %44, i32 %45, double %51, double %57, double %60, double %63)
  br label %if.end61

if.end61:                                         ; preds = %if.then37, %if.end
  %64 = load i32* %flag, align 4
  %tobool62 = icmp ne i32 %64, 0
  br i1 %tobool62, label %if.then63, label %if.end64

if.then63:                                        ; preds = %if.end61
  call void @terminate(i32 0)
  br label %if.end64

if.end64:                                         ; preds = %if.then63, %if.end61
  %65 = load double* %r_diff, align 8
  %66 = load double* %r_diff, align 8
  %mul65 = fmul double %65, %66
  %67 = load double* %i_diff, align 8
  %68 = load double* %i_diff, align 8
  %mul66 = fmul double %67, %68
  %add = fadd double %mul65, %mul66
  %69 = load double* %sum, align 8
  %add67 = fadd double %69, %add
  store double %add67, double* %sum, align 8
  br label %for.inc68

for.inc68:                                        ; preds = %if.end64
  %70 = load i32* %k, align 4
  %inc69 = add nsw i32 %70, 1
  store i32 %inc69, i32* %k, align 4
  br label %for.cond9

for.end70:                                        ; preds = %for.cond9
  %71 = load %struct.site** %s, align 8
  %72 = bitcast %struct.site* %71 to i8*
  %73 = load i32* %dest.addr, align 4
  %idx.ext71 = sext i32 %73 to i64
  %add.ptr72 = getelementptr inbounds i8* %72, i64 %idx.ext71
  %74 = bitcast i8* %add.ptr72 to %struct.su3_vector*
  %call73 = call double @magsq_su3vec(%struct.su3_vector* %74)
  %75 = load double* %sum2, align 8
  %add74 = fadd double %75, %call73
  store double %add74, double* %sum2, align 8
  br label %for.inc75

for.inc75:                                        ; preds = %for.end70
  %76 = load i32* %i, align 4
  %inc76 = add nsw i32 %76, 1
  store i32 %inc76, i32* %i, align 4
  %77 = load %struct.site** %s, align 8
  %incdec.ptr77 = getelementptr inbounds %struct.site* %77, i32 1
  store %struct.site* %incdec.ptr77, %struct.site** %s, align 8
  br label %for.cond5

for.end78:                                        ; preds = %for.cond5
  call void @g_doublesum(double* %sum)
  call void @g_doublesum(double* %sum2)
  call void (...)* bitcast (void ()* @g_sync to void (...)*)()
  %78 = load i32* @this_node, align 4
  %cmp79 = icmp eq i32 %78, 0
  br i1 %cmp79, label %if.then81, label %if.end85

if.then81:                                        ; preds = %for.end78
  %79 = load double* %sum, align 8
  %80 = load double* %sum2, align 8
  %div = fdiv double %79, %80
  %call82 = call double @sqrt(double %div) #2
  %call83 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([37 x i8]* @.str2316, i32 0, i32 0), double %call82)
  %81 = load %struct._IO_FILE** @stdout, align 8
  %call84 = call i32 @fflush(%struct._IO_FILE* %81)
  br label %if.end85

if.end85:                                         ; preds = %if.then81, %for.end78
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @make_path_table() #0 {
entry:
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %k = alloca i32, align 4
  %this_coeff = alloca double, align 8
  %0 = load i32* @this_node, align 4
  %cmp = icmp eq i32 %0, 0
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %call = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([4 x i8]* @.str319, i32 0, i32 0), i8* getelementptr inbounds ([72 x i8]* @quark_action_description320, i32 0, i32 0))
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  store i32 0, i32* @num_q_paths, align 4
  store i32 0, i32* @num_basic_paths, align 4
  %1 = load i32* @this_node, align 4
  %cmp1 = icmp eq i32 %1, 0
  br i1 %cmp1, label %if.then2, label %if.end4

if.then2:                                         ; preds = %if.end
  %call3 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([52 x i8]* @.str1321, i32 0, i32 0))
  br label %if.end4

if.end4:                                          ; preds = %if.then2, %if.end
  store i32 0, i32* %j, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc22, %if.end4
  %2 = load i32* %j, align 4
  %3 = load i32* @quark_action_npaths, align 4
  %cmp5 = icmp slt i32 %2, %3
  br i1 %cmp5, label %for.body, label %for.end24

for.body:                                         ; preds = %for.cond
  %4 = load i32* %j, align 4
  %idxprom = sext i32 %4 to i64
  %arrayidx = getelementptr inbounds [6 x double]* @path_coeff, i32 0, i64 %idxprom
  %5 = load double* %arrayidx, align 8
  store double %5, double* %this_coeff, align 8
  store i32 1, i32* %k, align 4
  br label %for.cond6

for.cond6:                                        ; preds = %for.inc, %for.body
  %6 = load i32* %k, align 4
  %7 = load i32* %j, align 4
  %idxprom7 = sext i32 %7 to i64
  %arrayidx8 = getelementptr inbounds [6 x i32]* @path_length_in, i32 0, i64 %idxprom7
  %8 = load i32* %arrayidx8, align 4
  %cmp9 = icmp slt i32 %6, %8
  br i1 %cmp9, label %for.body10, label %for.end

for.body10:                                       ; preds = %for.cond6
  %9 = load double* @u0, align 8
  %10 = load double* %this_coeff, align 8
  %div = fdiv double %10, %9
  store double %div, double* %this_coeff, align 8
  br label %for.inc

for.inc:                                          ; preds = %for.body10
  %11 = load i32* %k, align 4
  %inc = add nsw i32 %11, 1
  store i32 %inc, i32* %k, align 4
  br label %for.cond6

for.end:                                          ; preds = %for.cond6
  %12 = load double* %this_coeff, align 8
  %13 = load i32* %j, align 4
  %idxprom11 = sext i32 %13 to i64
  %arrayidx12 = getelementptr inbounds [6 x double]* @act_path_coeff, i32 0, i64 %idxprom11
  store double %12, double* %arrayidx12, align 8
  %14 = load i32* %j, align 4
  %idxprom13 = sext i32 %14 to i64
  %arrayidx14 = getelementptr inbounds [6 x [7 x i32]]* @path_ind, i32 0, i64 %idxprom13
  %arraydecay = getelementptr inbounds [7 x i32]* %arrayidx14, i32 0, i32 0
  %15 = load i32* %j, align 4
  %idxprom15 = sext i32 %15 to i64
  %arrayidx16 = getelementptr inbounds [6 x i32]* @path_length_in, i32 0, i64 %idxprom15
  %16 = load i32* %arrayidx16, align 4
  %17 = load double* %this_coeff, align 8
  %call17 = call i32 @add_basic_path(i32* %arraydecay, i32 %16, double %17)
  store i32 %call17, i32* %i, align 4
  %18 = load i32* @this_node, align 4
  %cmp18 = icmp eq i32 %18, 0
  br i1 %cmp18, label %if.then19, label %if.end21

if.then19:                                        ; preds = %for.end
  %19 = load i32* %j, align 4
  %20 = load double* %this_coeff, align 8
  %21 = load i32* %i, align 4
  %call20 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([39 x i8]* @.str2322, i32 0, i32 0), i32 %19, double %20, i32 %21)
  br label %if.end21

if.end21:                                         ; preds = %if.then19, %for.end
  br label %for.inc22

for.inc22:                                        ; preds = %if.end21
  %22 = load i32* %j, align 4
  %inc23 = add nsw i32 %22, 1
  store i32 %inc23, i32* %j, align 4
  br label %for.cond

for.end24:                                        ; preds = %for.cond
  ret void
}

; Function Attrs: nounwind uwtable
define internal i32 @add_basic_path(i32* %basic_vec, i32 %length, double %coeff) #0 {
entry:
  %basic_vec.addr = alloca i32*, align 8
  %length.addr = alloca i32, align 4
  %coeff.addr = alloca double, align 8
  %perm = alloca [8 x i32], align 16
  %pp = alloca [8 x i32], align 16
  %ir = alloca [4 x i32], align 16
  %j = alloca i32, align 4
  %path_num = alloca i32, align 4
  %vec = alloca [7 x i32], align 16
  %flag = alloca i32, align 4
  store i32* %basic_vec, i32** %basic_vec.addr, align 8
  store i32 %length, i32* %length.addr, align 4
  store double %coeff, double* %coeff.addr, align 8
  store i32 0, i32* %path_num, align 4
  %arrayidx = getelementptr inbounds [8 x i32]* %perm, i32 0, i64 0
  store i32 0, i32* %arrayidx, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc184, %entry
  %arrayidx1 = getelementptr inbounds [8 x i32]* %perm, i32 0, i64 0
  %0 = load i32* %arrayidx1, align 4
  %cmp = icmp slt i32 %0, 4
  br i1 %cmp, label %for.body, label %for.end187

for.body:                                         ; preds = %for.cond
  %arrayidx2 = getelementptr inbounds [8 x i32]* %perm, i32 0, i64 1
  store i32 0, i32* %arrayidx2, align 4
  br label %for.cond3

for.cond3:                                        ; preds = %for.inc180, %for.body
  %arrayidx4 = getelementptr inbounds [8 x i32]* %perm, i32 0, i64 1
  %1 = load i32* %arrayidx4, align 4
  %cmp5 = icmp slt i32 %1, 4
  br i1 %cmp5, label %for.body6, label %for.end183

for.body6:                                        ; preds = %for.cond3
  %arrayidx7 = getelementptr inbounds [8 x i32]* %perm, i32 0, i64 2
  store i32 0, i32* %arrayidx7, align 4
  br label %for.cond8

for.cond8:                                        ; preds = %for.inc176, %for.body6
  %arrayidx9 = getelementptr inbounds [8 x i32]* %perm, i32 0, i64 2
  %2 = load i32* %arrayidx9, align 4
  %cmp10 = icmp slt i32 %2, 4
  br i1 %cmp10, label %for.body11, label %for.end179

for.body11:                                       ; preds = %for.cond8
  %arrayidx12 = getelementptr inbounds [8 x i32]* %perm, i32 0, i64 3
  store i32 0, i32* %arrayidx12, align 4
  br label %for.cond13

for.cond13:                                       ; preds = %for.inc172, %for.body11
  %arrayidx14 = getelementptr inbounds [8 x i32]* %perm, i32 0, i64 3
  %3 = load i32* %arrayidx14, align 4
  %cmp15 = icmp slt i32 %3, 4
  br i1 %cmp15, label %for.body16, label %for.end175

for.body16:                                       ; preds = %for.cond13
  %arrayidx17 = getelementptr inbounds [8 x i32]* %perm, i32 0, i64 0
  %4 = load i32* %arrayidx17, align 4
  %arrayidx18 = getelementptr inbounds [8 x i32]* %perm, i32 0, i64 1
  %5 = load i32* %arrayidx18, align 4
  %cmp19 = icmp ne i32 %4, %5
  br i1 %cmp19, label %land.lhs.true, label %if.end171

land.lhs.true:                                    ; preds = %for.body16
  %arrayidx20 = getelementptr inbounds [8 x i32]* %perm, i32 0, i64 0
  %6 = load i32* %arrayidx20, align 4
  %arrayidx21 = getelementptr inbounds [8 x i32]* %perm, i32 0, i64 2
  %7 = load i32* %arrayidx21, align 4
  %cmp22 = icmp ne i32 %6, %7
  br i1 %cmp22, label %land.lhs.true23, label %if.end171

land.lhs.true23:                                  ; preds = %land.lhs.true
  %arrayidx24 = getelementptr inbounds [8 x i32]* %perm, i32 0, i64 0
  %8 = load i32* %arrayidx24, align 4
  %arrayidx25 = getelementptr inbounds [8 x i32]* %perm, i32 0, i64 3
  %9 = load i32* %arrayidx25, align 4
  %cmp26 = icmp ne i32 %8, %9
  br i1 %cmp26, label %land.lhs.true27, label %if.end171

land.lhs.true27:                                  ; preds = %land.lhs.true23
  %arrayidx28 = getelementptr inbounds [8 x i32]* %perm, i32 0, i64 1
  %10 = load i32* %arrayidx28, align 4
  %arrayidx29 = getelementptr inbounds [8 x i32]* %perm, i32 0, i64 2
  %11 = load i32* %arrayidx29, align 4
  %cmp30 = icmp ne i32 %10, %11
  br i1 %cmp30, label %land.lhs.true31, label %if.end171

land.lhs.true31:                                  ; preds = %land.lhs.true27
  %arrayidx32 = getelementptr inbounds [8 x i32]* %perm, i32 0, i64 1
  %12 = load i32* %arrayidx32, align 4
  %arrayidx33 = getelementptr inbounds [8 x i32]* %perm, i32 0, i64 3
  %13 = load i32* %arrayidx33, align 4
  %cmp34 = icmp ne i32 %12, %13
  br i1 %cmp34, label %land.lhs.true35, label %if.end171

land.lhs.true35:                                  ; preds = %land.lhs.true31
  %arrayidx36 = getelementptr inbounds [8 x i32]* %perm, i32 0, i64 2
  %14 = load i32* %arrayidx36, align 4
  %arrayidx37 = getelementptr inbounds [8 x i32]* %perm, i32 0, i64 3
  %15 = load i32* %arrayidx37, align 4
  %cmp38 = icmp ne i32 %14, %15
  br i1 %cmp38, label %if.then, label %if.end171

if.then:                                          ; preds = %land.lhs.true35
  %arrayidx39 = getelementptr inbounds [4 x i32]* %ir, i32 0, i64 0
  store i32 0, i32* %arrayidx39, align 4
  br label %for.cond40

for.cond40:                                       ; preds = %for.inc167, %if.then
  %arrayidx41 = getelementptr inbounds [4 x i32]* %ir, i32 0, i64 0
  %16 = load i32* %arrayidx41, align 4
  %cmp42 = icmp slt i32 %16, 2
  br i1 %cmp42, label %for.body43, label %for.end170

for.body43:                                       ; preds = %for.cond40
  %arrayidx44 = getelementptr inbounds [4 x i32]* %ir, i32 0, i64 1
  store i32 0, i32* %arrayidx44, align 4
  br label %for.cond45

for.cond45:                                       ; preds = %for.inc163, %for.body43
  %arrayidx46 = getelementptr inbounds [4 x i32]* %ir, i32 0, i64 1
  %17 = load i32* %arrayidx46, align 4
  %cmp47 = icmp slt i32 %17, 2
  br i1 %cmp47, label %for.body48, label %for.end166

for.body48:                                       ; preds = %for.cond45
  %arrayidx49 = getelementptr inbounds [4 x i32]* %ir, i32 0, i64 2
  store i32 0, i32* %arrayidx49, align 4
  br label %for.cond50

for.cond50:                                       ; preds = %for.inc159, %for.body48
  %arrayidx51 = getelementptr inbounds [4 x i32]* %ir, i32 0, i64 2
  %18 = load i32* %arrayidx51, align 4
  %cmp52 = icmp slt i32 %18, 2
  br i1 %cmp52, label %for.body53, label %for.end162

for.body53:                                       ; preds = %for.cond50
  %arrayidx54 = getelementptr inbounds [4 x i32]* %ir, i32 0, i64 3
  store i32 0, i32* %arrayidx54, align 4
  br label %for.cond55

for.cond55:                                       ; preds = %for.inc155, %for.body53
  %arrayidx56 = getelementptr inbounds [4 x i32]* %ir, i32 0, i64 3
  %19 = load i32* %arrayidx56, align 4
  %cmp57 = icmp slt i32 %19, 2
  br i1 %cmp57, label %for.body58, label %for.end158

for.body58:                                       ; preds = %for.cond55
  store i32 0, i32* %j, align 4
  br label %for.cond59

for.cond59:                                       ; preds = %for.inc, %for.body58
  %20 = load i32* %j, align 4
  %cmp60 = icmp slt i32 %20, 4
  br i1 %cmp60, label %for.body61, label %for.end

for.body61:                                       ; preds = %for.cond59
  %21 = load i32* %j, align 4
  %idxprom = sext i32 %21 to i64
  %arrayidx62 = getelementptr inbounds [8 x i32]* %perm, i32 0, i64 %idxprom
  %22 = load i32* %arrayidx62, align 4
  %23 = load i32* %j, align 4
  %idxprom63 = sext i32 %23 to i64
  %arrayidx64 = getelementptr inbounds [8 x i32]* %pp, i32 0, i64 %idxprom63
  store i32 %22, i32* %arrayidx64, align 4
  %24 = load i32* %j, align 4
  %idxprom65 = sext i32 %24 to i64
  %arrayidx66 = getelementptr inbounds [4 x i32]* %ir, i32 0, i64 %idxprom65
  %25 = load i32* %arrayidx66, align 4
  %cmp67 = icmp eq i32 %25, 1
  br i1 %cmp67, label %if.then68, label %if.end

if.then68:                                        ; preds = %for.body61
  %26 = load i32* %j, align 4
  %idxprom69 = sext i32 %26 to i64
  %arrayidx70 = getelementptr inbounds [8 x i32]* %pp, i32 0, i64 %idxprom69
  %27 = load i32* %arrayidx70, align 4
  %sub = sub nsw i32 7, %27
  %28 = load i32* %j, align 4
  %idxprom71 = sext i32 %28 to i64
  %arrayidx72 = getelementptr inbounds [8 x i32]* %pp, i32 0, i64 %idxprom71
  store i32 %sub, i32* %arrayidx72, align 4
  br label %if.end

if.end:                                           ; preds = %if.then68, %for.body61
  %29 = load i32* %j, align 4
  %idxprom73 = sext i32 %29 to i64
  %arrayidx74 = getelementptr inbounds [8 x i32]* %pp, i32 0, i64 %idxprom73
  %30 = load i32* %arrayidx74, align 4
  %sub75 = sub nsw i32 7, %30
  %31 = load i32* %j, align 4
  %sub76 = sub nsw i32 7, %31
  %idxprom77 = sext i32 %sub76 to i64
  %arrayidx78 = getelementptr inbounds [8 x i32]* %pp, i32 0, i64 %idxprom77
  store i32 %sub75, i32* %arrayidx78, align 4
  br label %for.inc

for.inc:                                          ; preds = %if.end
  %32 = load i32* %j, align 4
  %inc = add nsw i32 %32, 1
  store i32 %inc, i32* %j, align 4
  br label %for.cond59

for.end:                                          ; preds = %for.cond59
  store i32 0, i32* %j, align 4
  br label %for.cond79

for.cond79:                                       ; preds = %for.inc88, %for.end
  %33 = load i32* %j, align 4
  %34 = load i32* %length.addr, align 4
  %cmp80 = icmp slt i32 %33, %34
  br i1 %cmp80, label %for.body81, label %for.end90

for.body81:                                       ; preds = %for.cond79
  %35 = load i32* %j, align 4
  %idxprom82 = sext i32 %35 to i64
  %36 = load i32** %basic_vec.addr, align 8
  %arrayidx83 = getelementptr inbounds i32* %36, i64 %idxprom82
  %37 = load i32* %arrayidx83, align 4
  %idxprom84 = sext i32 %37 to i64
  %arrayidx85 = getelementptr inbounds [8 x i32]* %pp, i32 0, i64 %idxprom84
  %38 = load i32* %arrayidx85, align 4
  %39 = load i32* %j, align 4
  %idxprom86 = sext i32 %39 to i64
  %arrayidx87 = getelementptr inbounds [7 x i32]* %vec, i32 0, i64 %idxprom86
  store i32 %38, i32* %arrayidx87, align 4
  br label %for.inc88

for.inc88:                                        ; preds = %for.body81
  %40 = load i32* %j, align 4
  %inc89 = add nsw i32 %40, 1
  store i32 %inc89, i32* %j, align 4
  br label %for.cond79

for.end90:                                        ; preds = %for.cond79
  %41 = load i32* %length.addr, align 4
  store i32 %41, i32* %j, align 4
  br label %for.cond91

for.cond91:                                       ; preds = %for.inc96, %for.end90
  %42 = load i32* %j, align 4
  %cmp92 = icmp slt i32 %42, 7
  br i1 %cmp92, label %for.body93, label %for.end98

for.body93:                                       ; preds = %for.cond91
  %43 = load i32* %j, align 4
  %idxprom94 = sext i32 %43 to i64
  %arrayidx95 = getelementptr inbounds [7 x i32]* %vec, i32 0, i64 %idxprom94
  store i32 -1, i32* %arrayidx95, align 4
  br label %for.inc96

for.inc96:                                        ; preds = %for.body93
  %44 = load i32* %j, align 4
  %inc97 = add nsw i32 %44, 1
  store i32 %inc97, i32* %j, align 4
  br label %for.cond91

for.end98:                                        ; preds = %for.cond91
  store i32 0, i32* %flag, align 4
  store i32 0, i32* %j, align 4
  br label %for.cond99

for.cond99:                                       ; preds = %for.inc108, %for.end98
  %45 = load i32* %j, align 4
  %46 = load i32* @num_q_paths, align 4
  %cmp100 = icmp slt i32 %45, %46
  br i1 %cmp100, label %for.body101, label %for.end110

for.body101:                                      ; preds = %for.cond99
  %arraydecay = getelementptr inbounds [7 x i32]* %vec, i32 0, i32 0
  %47 = load i32* %j, align 4
  %idxprom102 = sext i32 %47 to i64
  %arrayidx103 = getelementptr inbounds [688 x %struct.anon.138]* @q_paths, i32 0, i64 %idxprom102
  %dir = getelementptr inbounds %struct.anon.138* %arrayidx103, i32 0, i32 0
  %arraydecay104 = getelementptr inbounds [7 x i32]* %dir, i32 0, i32 0
  %call = call i32 @is_path_equal(i32* %arraydecay, i32* %arraydecay104, i32 7)
  store i32 %call, i32* %flag, align 4
  %48 = load i32* %flag, align 4
  %cmp105 = icmp eq i32 %48, 1
  br i1 %cmp105, label %if.then106, label %if.end107

if.then106:                                       ; preds = %for.body101
  br label %for.end110

if.end107:                                        ; preds = %for.body101
  br label %for.inc108

for.inc108:                                       ; preds = %if.end107
  %49 = load i32* %j, align 4
  %inc109 = add nsw i32 %49, 1
  store i32 %inc109, i32* %j, align 4
  br label %for.cond99

for.end110:                                       ; preds = %if.then106, %for.cond99
  %50 = load i32* %flag, align 4
  %cmp111 = icmp eq i32 %50, 0
  br i1 %cmp111, label %if.then112, label %if.end154

if.then112:                                       ; preds = %for.end110
  %51 = load i32* @num_q_paths, align 4
  %cmp113 = icmp sge i32 %51, 688
  br i1 %cmp113, label %if.then114, label %if.end119

if.then114:                                       ; preds = %if.then112
  %52 = load i32* @this_node, align 4
  %cmp115 = icmp eq i32 %52, 0
  br i1 %cmp115, label %if.then116, label %if.end118

if.then116:                                       ; preds = %if.then114
  %call117 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([25 x i8]* @.str3323, i32 0, i32 0))
  br label %if.end118

if.end118:                                        ; preds = %if.then116, %if.then114
  call void @exit(i32 0) #7
  unreachable

if.end119:                                        ; preds = %if.then112
  %53 = load i32* %length.addr, align 4
  %54 = load i32* @num_q_paths, align 4
  %idxprom120 = sext i32 %54 to i64
  %arrayidx121 = getelementptr inbounds [688 x %struct.anon.138]* @q_paths, i32 0, i64 %idxprom120
  %length122 = getelementptr inbounds %struct.anon.138* %arrayidx121, i32 0, i32 1
  store i32 %53, i32* %length122, align 4
  store i32 0, i32* %j, align 4
  br label %for.cond123

for.cond123:                                      ; preds = %for.inc133, %if.end119
  %55 = load i32* %j, align 4
  %cmp124 = icmp slt i32 %55, 7
  br i1 %cmp124, label %for.body125, label %for.end135

for.body125:                                      ; preds = %for.cond123
  %56 = load i32* %j, align 4
  %idxprom126 = sext i32 %56 to i64
  %arrayidx127 = getelementptr inbounds [7 x i32]* %vec, i32 0, i64 %idxprom126
  %57 = load i32* %arrayidx127, align 4
  %58 = load i32* %j, align 4
  %idxprom128 = sext i32 %58 to i64
  %59 = load i32* @num_q_paths, align 4
  %idxprom129 = sext i32 %59 to i64
  %arrayidx130 = getelementptr inbounds [688 x %struct.anon.138]* @q_paths, i32 0, i64 %idxprom129
  %dir131 = getelementptr inbounds %struct.anon.138* %arrayidx130, i32 0, i32 0
  %arrayidx132 = getelementptr inbounds [7 x i32]* %dir131, i32 0, i64 %idxprom128
  store i32 %57, i32* %arrayidx132, align 4
  br label %for.inc133

for.inc133:                                       ; preds = %for.body125
  %60 = load i32* %j, align 4
  %inc134 = add nsw i32 %60, 1
  store i32 %inc134, i32* %j, align 4
  br label %for.cond123

for.end135:                                       ; preds = %for.cond123
  %arrayidx136 = getelementptr inbounds [4 x i32]* %ir, i32 0, i64 0
  %61 = load i32* %arrayidx136, align 4
  %cmp137 = icmp eq i32 %61, 0
  br i1 %cmp137, label %if.then138, label %if.else

if.then138:                                       ; preds = %for.end135
  %62 = load double* %coeff.addr, align 8
  %63 = load i32* @num_q_paths, align 4
  %idxprom139 = sext i32 %63 to i64
  %arrayidx140 = getelementptr inbounds [688 x %struct.anon.138]* @q_paths, i32 0, i64 %idxprom139
  %coeff141 = getelementptr inbounds %struct.anon.138* %arrayidx140, i32 0, i32 2
  store double %62, double* %coeff141, align 8
  %64 = load i32* @num_q_paths, align 4
  %idxprom142 = sext i32 %64 to i64
  %arrayidx143 = getelementptr inbounds [688 x %struct.anon.138]* @q_paths, i32 0, i64 %idxprom142
  %forwback = getelementptr inbounds %struct.anon.138* %arrayidx143, i32 0, i32 3
  store double 1.000000e+00, double* %forwback, align 8
  br label %if.end151

if.else:                                          ; preds = %for.end135
  %65 = load double* %coeff.addr, align 8
  %sub144 = fsub double -0.000000e+00, %65
  %66 = load i32* @num_q_paths, align 4
  %idxprom145 = sext i32 %66 to i64
  %arrayidx146 = getelementptr inbounds [688 x %struct.anon.138]* @q_paths, i32 0, i64 %idxprom145
  %coeff147 = getelementptr inbounds %struct.anon.138* %arrayidx146, i32 0, i32 2
  store double %sub144, double* %coeff147, align 8
  %67 = load i32* @num_q_paths, align 4
  %idxprom148 = sext i32 %67 to i64
  %arrayidx149 = getelementptr inbounds [688 x %struct.anon.138]* @q_paths, i32 0, i64 %idxprom148
  %forwback150 = getelementptr inbounds %struct.anon.138* %arrayidx149, i32 0, i32 3
  store double -1.000000e+00, double* %forwback150, align 8
  br label %if.end151

if.end151:                                        ; preds = %if.else, %if.then138
  %68 = load i32* @num_q_paths, align 4
  %inc152 = add nsw i32 %68, 1
  store i32 %inc152, i32* @num_q_paths, align 4
  %69 = load i32* %path_num, align 4
  %inc153 = add nsw i32 %69, 1
  store i32 %inc153, i32* %path_num, align 4
  br label %if.end154

if.end154:                                        ; preds = %if.end151, %for.end110
  br label %for.inc155

for.inc155:                                       ; preds = %if.end154
  %arrayidx156 = getelementptr inbounds [4 x i32]* %ir, i32 0, i64 3
  %70 = load i32* %arrayidx156, align 4
  %inc157 = add nsw i32 %70, 1
  store i32 %inc157, i32* %arrayidx156, align 4
  br label %for.cond55

for.end158:                                       ; preds = %for.cond55
  br label %for.inc159

for.inc159:                                       ; preds = %for.end158
  %arrayidx160 = getelementptr inbounds [4 x i32]* %ir, i32 0, i64 2
  %71 = load i32* %arrayidx160, align 4
  %inc161 = add nsw i32 %71, 1
  store i32 %inc161, i32* %arrayidx160, align 4
  br label %for.cond50

for.end162:                                       ; preds = %for.cond50
  br label %for.inc163

for.inc163:                                       ; preds = %for.end162
  %arrayidx164 = getelementptr inbounds [4 x i32]* %ir, i32 0, i64 1
  %72 = load i32* %arrayidx164, align 4
  %inc165 = add nsw i32 %72, 1
  store i32 %inc165, i32* %arrayidx164, align 4
  br label %for.cond45

for.end166:                                       ; preds = %for.cond45
  br label %for.inc167

for.inc167:                                       ; preds = %for.end166
  %arrayidx168 = getelementptr inbounds [4 x i32]* %ir, i32 0, i64 0
  %73 = load i32* %arrayidx168, align 4
  %inc169 = add nsw i32 %73, 1
  store i32 %inc169, i32* %arrayidx168, align 4
  br label %for.cond40

for.end170:                                       ; preds = %for.cond40
  br label %if.end171

if.end171:                                        ; preds = %for.end170, %land.lhs.true35, %land.lhs.true31, %land.lhs.true27, %land.lhs.true23, %land.lhs.true, %for.body16
  br label %for.inc172

for.inc172:                                       ; preds = %if.end171
  %arrayidx173 = getelementptr inbounds [8 x i32]* %perm, i32 0, i64 3
  %74 = load i32* %arrayidx173, align 4
  %inc174 = add nsw i32 %74, 1
  store i32 %inc174, i32* %arrayidx173, align 4
  br label %for.cond13

for.end175:                                       ; preds = %for.cond13
  br label %for.inc176

for.inc176:                                       ; preds = %for.end175
  %arrayidx177 = getelementptr inbounds [8 x i32]* %perm, i32 0, i64 2
  %75 = load i32* %arrayidx177, align 4
  %inc178 = add nsw i32 %75, 1
  store i32 %inc178, i32* %arrayidx177, align 4
  br label %for.cond8

for.end179:                                       ; preds = %for.cond8
  br label %for.inc180

for.inc180:                                       ; preds = %for.end179
  %arrayidx181 = getelementptr inbounds [8 x i32]* %perm, i32 0, i64 1
  %76 = load i32* %arrayidx181, align 4
  %inc182 = add nsw i32 %76, 1
  store i32 %inc182, i32* %arrayidx181, align 4
  br label %for.cond3

for.end183:                                       ; preds = %for.cond3
  br label %for.inc184

for.inc184:                                       ; preds = %for.end183
  %arrayidx185 = getelementptr inbounds [8 x i32]* %perm, i32 0, i64 0
  %77 = load i32* %arrayidx185, align 4
  %inc186 = add nsw i32 %77, 1
  store i32 %inc186, i32* %arrayidx185, align 4
  br label %for.cond

for.end187:                                       ; preds = %for.cond
  %78 = load i32* @num_basic_paths, align 4
  %inc188 = add nsw i32 %78, 1
  store i32 %inc188, i32* @num_basic_paths, align 4
  %79 = load i32* %path_num, align 4
  ret i32 %79
}

; Function Attrs: nounwind uwtable
define internal i32 @is_path_equal(i32* %path1, i32* %path2, i32 %length) #0 {
entry:
  %retval = alloca i32, align 4
  %path1.addr = alloca i32*, align 8
  %path2.addr = alloca i32*, align 8
  %length.addr = alloca i32, align 4
  %i = alloca i32, align 4
  store i32* %path1, i32** %path1.addr, align 8
  store i32* %path2, i32** %path2.addr, align 8
  store i32 %length, i32* %length.addr, align 4
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32* %i, align 4
  %1 = load i32* %length.addr, align 4
  %cmp = icmp slt i32 %0, %1
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %2 = load i32* %i, align 4
  %idxprom = sext i32 %2 to i64
  %3 = load i32** %path1.addr, align 8
  %arrayidx = getelementptr inbounds i32* %3, i64 %idxprom
  %4 = load i32* %arrayidx, align 4
  %5 = load i32* %i, align 4
  %idxprom1 = sext i32 %5 to i64
  %6 = load i32** %path2.addr, align 8
  %arrayidx2 = getelementptr inbounds i32* %6, i64 %idxprom1
  %7 = load i32* %arrayidx2, align 4
  %cmp3 = icmp ne i32 %4, %7
  br i1 %cmp3, label %if.then, label %if.end

if.then:                                          ; preds = %for.body
  store i32 0, i32* %retval
  br label %return

if.end:                                           ; preds = %for.body
  br label %for.inc

for.inc:                                          ; preds = %if.end
  %8 = load i32* %i, align 4
  %inc = add nsw i32 %8, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  store i32 1, i32* %retval
  br label %return

return:                                           ; preds = %for.end, %if.then
  %9 = load i32* %retval
  ret i32 %9
}

; Function Attrs: nounwind uwtable
define internal void @path_transport(i32 %src, i32 %dest, i32 %parity, i32* %dir, i32 %length) #0 {
entry:
  %src.addr = alloca i32, align 4
  %dest.addr = alloca i32, align 4
  %parity.addr = alloca i32, align 4
  %dir.addr = alloca i32*, align 8
  %length.addr = alloca i32, align 4
  %i = alloca i32, align 4
  %s = alloca %struct.site*, align 8
  %mtag0 = alloca %struct.msg_tag*, align 8
  %j = alloca i32, align 4
  %tmp_src = alloca %struct.su3_vector*, align 8
  %tmp_dest = alloca %struct.su3_vector*, align 8
  %tmp_work = alloca %struct.su3_vector*, align 8
  %tmp_pt = alloca %struct.su3_vector*, align 8
  %tmp_parity = alloca i32, align 4
  %tmp_otherparity = alloca i32, align 4
  store i32 %src, i32* %src.addr, align 4
  store i32 %dest, i32* %dest.addr, align 4
  store i32 %parity, i32* %parity.addr, align 4
  store i32* %dir, i32** %dir.addr, align 8
  store i32 %length, i32* %length.addr, align 4
  %0 = load i32* %length.addr, align 4
  %cmp = icmp sgt i32 %0, 0
  br i1 %cmp, label %if.then, label %if.else164

if.then:                                          ; preds = %entry
  %1 = load i32* @sites_on_node, align 4
  %conv = sext i32 %1 to i64
  %call = call noalias i8* @calloc(i64 %conv, i64 48) #2
  %2 = bitcast i8* %call to %struct.su3_vector*
  store %struct.su3_vector* %2, %struct.su3_vector** %tmp_src, align 8
  %3 = load i32* @sites_on_node, align 4
  %conv1 = sext i32 %3 to i64
  %call2 = call noalias i8* @calloc(i64 %conv1, i64 48) #2
  %4 = bitcast i8* %call2 to %struct.su3_vector*
  store %struct.su3_vector* %4, %struct.su3_vector** %tmp_dest, align 8
  %5 = load i32* @sites_on_node, align 4
  %conv3 = sext i32 %5 to i64
  %call4 = call noalias i8* @calloc(i64 %conv3, i64 48) #2
  %6 = bitcast i8* %call4 to %struct.su3_vector*
  store %struct.su3_vector* %6, %struct.su3_vector** %tmp_work, align 8
  %7 = load i32* %length.addr, align 4
  %sub = sub nsw i32 %7, 1
  store i32 %sub, i32* %j, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc136, %if.then
  %8 = load i32* %j, align 4
  %cmp5 = icmp sge i32 %8, 0
  br i1 %cmp5, label %for.body, label %for.end137

for.body:                                         ; preds = %for.cond
  %9 = load i32* %j, align 4
  %rem = srem i32 %9, 2
  %cmp7 = icmp eq i32 %rem, 0
  br i1 %cmp7, label %if.then9, label %if.else

if.then9:                                         ; preds = %for.body
  %10 = load i32* %parity.addr, align 4
  store i32 %10, i32* %tmp_parity, align 4
  %11 = load i32* %tmp_parity, align 4
  switch i32 %11, label %sw.epilog [
    i32 2, label %sw.bb
    i32 1, label %sw.bb10
    i32 3, label %sw.bb11
  ]

sw.bb:                                            ; preds = %if.then9
  store i32 1, i32* %tmp_otherparity, align 4
  br label %sw.epilog

sw.bb10:                                          ; preds = %if.then9
  store i32 2, i32* %tmp_otherparity, align 4
  br label %sw.epilog

sw.bb11:                                          ; preds = %if.then9
  store i32 3, i32* %tmp_otherparity, align 4
  br label %sw.epilog

sw.epilog:                                        ; preds = %sw.bb11, %sw.bb10, %sw.bb, %if.then9
  br label %if.end

if.else:                                          ; preds = %for.body
  %12 = load i32* %parity.addr, align 4
  store i32 %12, i32* %tmp_otherparity, align 4
  %13 = load i32* %tmp_otherparity, align 4
  switch i32 %13, label %sw.epilog15 [
    i32 2, label %sw.bb12
    i32 1, label %sw.bb13
    i32 3, label %sw.bb14
  ]

sw.bb12:                                          ; preds = %if.else
  store i32 1, i32* %tmp_parity, align 4
  br label %sw.epilog15

sw.bb13:                                          ; preds = %if.else
  store i32 2, i32* %tmp_parity, align 4
  br label %sw.epilog15

sw.bb14:                                          ; preds = %if.else
  store i32 3, i32* %tmp_parity, align 4
  br label %sw.epilog15

sw.epilog15:                                      ; preds = %sw.bb14, %sw.bb13, %sw.bb12, %if.else
  br label %if.end

if.end:                                           ; preds = %sw.epilog15, %sw.epilog
  %14 = load i32* %j, align 4
  %15 = load i32* %length.addr, align 4
  %sub16 = sub nsw i32 %15, 1
  %cmp17 = icmp eq i32 %14, %sub16
  br i1 %cmp17, label %if.then19, label %if.end34

if.then19:                                        ; preds = %if.end
  %16 = load i32* %tmp_otherparity, align 4
  %cmp20 = icmp eq i32 %16, 1
  br i1 %cmp20, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.then19
  %17 = load i32* @even_sites_on_node, align 4
  br label %cond.end

cond.false:                                       ; preds = %if.then19
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %17, %cond.true ], [ 0, %cond.false ]
  store i32 %cond, i32* %i, align 4
  %18 = load i32* %i, align 4
  %idxprom = sext i32 %18 to i64
  %19 = load %struct.site** @lattice, align 8
  %arrayidx = getelementptr inbounds %struct.site* %19, i64 %idxprom
  store %struct.site* %arrayidx, %struct.site** %s, align 8
  br label %for.cond22

for.cond22:                                       ; preds = %for.inc, %cond.end
  %20 = load i32* %i, align 4
  %21 = load i32* %tmp_otherparity, align 4
  %cmp23 = icmp eq i32 %21, 2
  br i1 %cmp23, label %cond.true25, label %cond.false26

cond.true25:                                      ; preds = %for.cond22
  %22 = load i32* @even_sites_on_node, align 4
  br label %cond.end27

cond.false26:                                     ; preds = %for.cond22
  %23 = load i32* @sites_on_node, align 4
  br label %cond.end27

cond.end27:                                       ; preds = %cond.false26, %cond.true25
  %cond28 = phi i32 [ %22, %cond.true25 ], [ %23, %cond.false26 ]
  %cmp29 = icmp slt i32 %20, %cond28
  br i1 %cmp29, label %for.body31, label %for.end

for.body31:                                       ; preds = %cond.end27
  %24 = load i32* %i, align 4
  %idxprom32 = sext i32 %24 to i64
  %25 = load %struct.su3_vector** %tmp_src, align 8
  %arrayidx33 = getelementptr inbounds %struct.su3_vector* %25, i64 %idxprom32
  %26 = load %struct.site** %s, align 8
  %27 = bitcast %struct.site* %26 to i8*
  %28 = load i32* %src.addr, align 4
  %idx.ext = sext i32 %28 to i64
  %add.ptr = getelementptr inbounds i8* %27, i64 %idx.ext
  %29 = bitcast i8* %add.ptr to %struct.su3_vector*
  %30 = bitcast %struct.su3_vector* %arrayidx33 to i8*
  %31 = bitcast %struct.su3_vector* %29 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %30, i8* %31, i64 48, i32 8, i1 false)
  br label %for.inc

for.inc:                                          ; preds = %for.body31
  %32 = load i32* %i, align 4
  %inc = add nsw i32 %32, 1
  store i32 %inc, i32* %i, align 4
  %33 = load %struct.site** %s, align 8
  %incdec.ptr = getelementptr inbounds %struct.site* %33, i32 1
  store %struct.site* %incdec.ptr, %struct.site** %s, align 8
  br label %for.cond22

for.end:                                          ; preds = %cond.end27
  br label %if.end34

if.end34:                                         ; preds = %for.end, %if.end
  %34 = load i32* %j, align 4
  %idxprom35 = sext i32 %34 to i64
  %35 = load i32** %dir.addr, align 8
  %arrayidx36 = getelementptr inbounds i32* %35, i64 %idxprom35
  %36 = load i32* %arrayidx36, align 4
  %cmp37 = icmp sle i32 %36, 3
  br i1 %cmp37, label %if.then39, label %if.else73

if.then39:                                        ; preds = %if.end34
  %37 = load %struct.su3_vector** %tmp_src, align 8
  %38 = bitcast %struct.su3_vector* %37 to i8*
  %39 = load i32* %j, align 4
  %idxprom40 = sext i32 %39 to i64
  %40 = load i32** %dir.addr, align 8
  %arrayidx41 = getelementptr inbounds i32* %40, i64 %idxprom40
  %41 = load i32* %arrayidx41, align 4
  %42 = load i32* %tmp_parity, align 4
  %43 = load i8*** getelementptr inbounds ([16 x i8**]* @gen_pt, i32 0, i64 0), align 8
  %call42 = call %struct.msg_tag* @start_gather_from_temp(i8* %38, i32 48, i32 %41, i32 %42, i8** %43)
  store %struct.msg_tag* %call42, %struct.msg_tag** %mtag0, align 8
  %44 = load %struct.msg_tag** %mtag0, align 8
  call void @wait_gather(%struct.msg_tag* %44)
  %45 = load i32* %tmp_parity, align 4
  %cmp43 = icmp eq i32 %45, 1
  br i1 %cmp43, label %cond.true45, label %cond.false46

cond.true45:                                      ; preds = %if.then39
  %46 = load i32* @even_sites_on_node, align 4
  br label %cond.end47

cond.false46:                                     ; preds = %if.then39
  br label %cond.end47

cond.end47:                                       ; preds = %cond.false46, %cond.true45
  %cond48 = phi i32 [ %46, %cond.true45 ], [ 0, %cond.false46 ]
  store i32 %cond48, i32* %i, align 4
  %47 = load i32* %i, align 4
  %idxprom49 = sext i32 %47 to i64
  %48 = load %struct.site** @lattice, align 8
  %arrayidx50 = getelementptr inbounds %struct.site* %48, i64 %idxprom49
  store %struct.site* %arrayidx50, %struct.site** %s, align 8
  br label %for.cond51

for.cond51:                                       ; preds = %for.inc69, %cond.end47
  %49 = load i32* %i, align 4
  %50 = load i32* %tmp_parity, align 4
  %cmp52 = icmp eq i32 %50, 2
  br i1 %cmp52, label %cond.true54, label %cond.false55

cond.true54:                                      ; preds = %for.cond51
  %51 = load i32* @even_sites_on_node, align 4
  br label %cond.end56

cond.false55:                                     ; preds = %for.cond51
  %52 = load i32* @sites_on_node, align 4
  br label %cond.end56

cond.end56:                                       ; preds = %cond.false55, %cond.true54
  %cond57 = phi i32 [ %51, %cond.true54 ], [ %52, %cond.false55 ]
  %cmp58 = icmp slt i32 %49, %cond57
  br i1 %cmp58, label %for.body60, label %for.end72

for.body60:                                       ; preds = %cond.end56
  %53 = load i32* %j, align 4
  %idxprom61 = sext i32 %53 to i64
  %54 = load i32** %dir.addr, align 8
  %arrayidx62 = getelementptr inbounds i32* %54, i64 %idxprom61
  %55 = load i32* %arrayidx62, align 4
  %idxprom63 = sext i32 %55 to i64
  %56 = load %struct.site** %s, align 8
  %link = getelementptr inbounds %struct.site* %56, i32 0, i32 8
  %arrayidx64 = getelementptr inbounds [4 x %struct.su3_matrix]* %link, i32 0, i64 %idxprom63
  %57 = load i32* %i, align 4
  %idxprom65 = sext i32 %57 to i64
  %58 = load i8*** getelementptr inbounds ([16 x i8**]* @gen_pt, i32 0, i64 0), align 8
  %arrayidx66 = getelementptr inbounds i8** %58, i64 %idxprom65
  %59 = load i8** %arrayidx66, align 8
  %60 = bitcast i8* %59 to %struct.su3_vector*
  %61 = load i32* %i, align 4
  %idxprom67 = sext i32 %61 to i64
  %62 = load %struct.su3_vector** %tmp_dest, align 8
  %arrayidx68 = getelementptr inbounds %struct.su3_vector* %62, i64 %idxprom67
  call void @mult_su3_mat_vec(%struct.su3_matrix* %arrayidx64, %struct.su3_vector* %60, %struct.su3_vector* %arrayidx68)
  br label %for.inc69

for.inc69:                                        ; preds = %for.body60
  %63 = load i32* %i, align 4
  %inc70 = add nsw i32 %63, 1
  store i32 %inc70, i32* %i, align 4
  %64 = load %struct.site** %s, align 8
  %incdec.ptr71 = getelementptr inbounds %struct.site* %64, i32 1
  store %struct.site* %incdec.ptr71, %struct.site** %s, align 8
  br label %for.cond51

for.end72:                                        ; preds = %cond.end56
  %65 = load %struct.msg_tag** %mtag0, align 8
  call void @cleanup_gather(%struct.msg_tag* %65)
  br label %if.end135

if.else73:                                        ; preds = %if.end34
  %66 = load i32* %tmp_otherparity, align 4
  %cmp74 = icmp eq i32 %66, 1
  br i1 %cmp74, label %cond.true76, label %cond.false77

cond.true76:                                      ; preds = %if.else73
  %67 = load i32* @even_sites_on_node, align 4
  br label %cond.end78

cond.false77:                                     ; preds = %if.else73
  br label %cond.end78

cond.end78:                                       ; preds = %cond.false77, %cond.true76
  %cond79 = phi i32 [ %67, %cond.true76 ], [ 0, %cond.false77 ]
  store i32 %cond79, i32* %i, align 4
  %68 = load i32* %i, align 4
  %idxprom80 = sext i32 %68 to i64
  %69 = load %struct.site** @lattice, align 8
  %arrayidx81 = getelementptr inbounds %struct.site* %69, i64 %idxprom80
  store %struct.site* %arrayidx81, %struct.site** %s, align 8
  br label %for.cond82

for.cond82:                                       ; preds = %for.inc102, %cond.end78
  %70 = load i32* %i, align 4
  %71 = load i32* %tmp_otherparity, align 4
  %cmp83 = icmp eq i32 %71, 2
  br i1 %cmp83, label %cond.true85, label %cond.false86

cond.true85:                                      ; preds = %for.cond82
  %72 = load i32* @even_sites_on_node, align 4
  br label %cond.end87

cond.false86:                                     ; preds = %for.cond82
  %73 = load i32* @sites_on_node, align 4
  br label %cond.end87

cond.end87:                                       ; preds = %cond.false86, %cond.true85
  %cond88 = phi i32 [ %72, %cond.true85 ], [ %73, %cond.false86 ]
  %cmp89 = icmp slt i32 %70, %cond88
  br i1 %cmp89, label %for.body91, label %for.end105

for.body91:                                       ; preds = %cond.end87
  %74 = load i32* %j, align 4
  %idxprom92 = sext i32 %74 to i64
  %75 = load i32** %dir.addr, align 8
  %arrayidx93 = getelementptr inbounds i32* %75, i64 %idxprom92
  %76 = load i32* %arrayidx93, align 4
  %sub94 = sub nsw i32 7, %76
  %idxprom95 = sext i32 %sub94 to i64
  %77 = load %struct.site** %s, align 8
  %link96 = getelementptr inbounds %struct.site* %77, i32 0, i32 8
  %arrayidx97 = getelementptr inbounds [4 x %struct.su3_matrix]* %link96, i32 0, i64 %idxprom95
  %78 = load i32* %i, align 4
  %idxprom98 = sext i32 %78 to i64
  %79 = load %struct.su3_vector** %tmp_src, align 8
  %arrayidx99 = getelementptr inbounds %struct.su3_vector* %79, i64 %idxprom98
  %80 = load i32* %i, align 4
  %idxprom100 = sext i32 %80 to i64
  %81 = load %struct.su3_vector** %tmp_work, align 8
  %arrayidx101 = getelementptr inbounds %struct.su3_vector* %81, i64 %idxprom100
  call void @mult_adj_su3_mat_vec(%struct.su3_matrix* %arrayidx97, %struct.su3_vector* %arrayidx99, %struct.su3_vector* %arrayidx101)
  br label %for.inc102

for.inc102:                                       ; preds = %for.body91
  %82 = load i32* %i, align 4
  %inc103 = add nsw i32 %82, 1
  store i32 %inc103, i32* %i, align 4
  %83 = load %struct.site** %s, align 8
  %incdec.ptr104 = getelementptr inbounds %struct.site* %83, i32 1
  store %struct.site* %incdec.ptr104, %struct.site** %s, align 8
  br label %for.cond82

for.end105:                                       ; preds = %cond.end87
  %84 = load %struct.su3_vector** %tmp_work, align 8
  %85 = bitcast %struct.su3_vector* %84 to i8*
  %86 = load i32* %j, align 4
  %idxprom106 = sext i32 %86 to i64
  %87 = load i32** %dir.addr, align 8
  %arrayidx107 = getelementptr inbounds i32* %87, i64 %idxprom106
  %88 = load i32* %arrayidx107, align 4
  %89 = load i32* %tmp_parity, align 4
  %90 = load i8*** getelementptr inbounds ([16 x i8**]* @gen_pt, i32 0, i64 0), align 8
  %call108 = call %struct.msg_tag* @start_gather_from_temp(i8* %85, i32 48, i32 %88, i32 %89, i8** %90)
  store %struct.msg_tag* %call108, %struct.msg_tag** %mtag0, align 8
  %91 = load %struct.msg_tag** %mtag0, align 8
  call void @wait_gather(%struct.msg_tag* %91)
  %92 = load i32* %tmp_parity, align 4
  %cmp109 = icmp eq i32 %92, 1
  br i1 %cmp109, label %cond.true111, label %cond.false112

cond.true111:                                     ; preds = %for.end105
  %93 = load i32* @even_sites_on_node, align 4
  br label %cond.end113

cond.false112:                                    ; preds = %for.end105
  br label %cond.end113

cond.end113:                                      ; preds = %cond.false112, %cond.true111
  %cond114 = phi i32 [ %93, %cond.true111 ], [ 0, %cond.false112 ]
  store i32 %cond114, i32* %i, align 4
  %94 = load i32* %i, align 4
  %idxprom115 = sext i32 %94 to i64
  %95 = load %struct.site** @lattice, align 8
  %arrayidx116 = getelementptr inbounds %struct.site* %95, i64 %idxprom115
  store %struct.site* %arrayidx116, %struct.site** %s, align 8
  br label %for.cond117

for.cond117:                                      ; preds = %for.inc131, %cond.end113
  %96 = load i32* %i, align 4
  %97 = load i32* %tmp_parity, align 4
  %cmp118 = icmp eq i32 %97, 2
  br i1 %cmp118, label %cond.true120, label %cond.false121

cond.true120:                                     ; preds = %for.cond117
  %98 = load i32* @even_sites_on_node, align 4
  br label %cond.end122

cond.false121:                                    ; preds = %for.cond117
  %99 = load i32* @sites_on_node, align 4
  br label %cond.end122

cond.end122:                                      ; preds = %cond.false121, %cond.true120
  %cond123 = phi i32 [ %98, %cond.true120 ], [ %99, %cond.false121 ]
  %cmp124 = icmp slt i32 %96, %cond123
  br i1 %cmp124, label %for.body126, label %for.end134

for.body126:                                      ; preds = %cond.end122
  %100 = load i32* %i, align 4
  %idxprom127 = sext i32 %100 to i64
  %101 = load %struct.su3_vector** %tmp_dest, align 8
  %arrayidx128 = getelementptr inbounds %struct.su3_vector* %101, i64 %idxprom127
  %102 = load i32* %i, align 4
  %idxprom129 = sext i32 %102 to i64
  %103 = load i8*** getelementptr inbounds ([16 x i8**]* @gen_pt, i32 0, i64 0), align 8
  %arrayidx130 = getelementptr inbounds i8** %103, i64 %idxprom129
  %104 = load i8** %arrayidx130, align 8
  %105 = bitcast i8* %104 to %struct.su3_vector*
  %106 = bitcast %struct.su3_vector* %arrayidx128 to i8*
  %107 = bitcast %struct.su3_vector* %105 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %106, i8* %107, i64 48, i32 8, i1 false)
  br label %for.inc131

for.inc131:                                       ; preds = %for.body126
  %108 = load i32* %i, align 4
  %inc132 = add nsw i32 %108, 1
  store i32 %inc132, i32* %i, align 4
  %109 = load %struct.site** %s, align 8
  %incdec.ptr133 = getelementptr inbounds %struct.site* %109, i32 1
  store %struct.site* %incdec.ptr133, %struct.site** %s, align 8
  br label %for.cond117

for.end134:                                       ; preds = %cond.end122
  %110 = load %struct.msg_tag** %mtag0, align 8
  call void @cleanup_gather(%struct.msg_tag* %110)
  br label %if.end135

if.end135:                                        ; preds = %for.end134, %for.end72
  %111 = load %struct.su3_vector** %tmp_src, align 8
  store %struct.su3_vector* %111, %struct.su3_vector** %tmp_pt, align 8
  %112 = load %struct.su3_vector** %tmp_dest, align 8
  store %struct.su3_vector* %112, %struct.su3_vector** %tmp_src, align 8
  %113 = load %struct.su3_vector** %tmp_pt, align 8
  store %struct.su3_vector* %113, %struct.su3_vector** %tmp_dest, align 8
  br label %for.inc136

for.inc136:                                       ; preds = %if.end135
  %114 = load i32* %j, align 4
  %dec = add nsw i32 %114, -1
  store i32 %dec, i32* %j, align 4
  br label %for.cond

for.end137:                                       ; preds = %for.cond
  %115 = load i32* %parity.addr, align 4
  %cmp138 = icmp eq i32 %115, 1
  br i1 %cmp138, label %cond.true140, label %cond.false141

cond.true140:                                     ; preds = %for.end137
  %116 = load i32* @even_sites_on_node, align 4
  br label %cond.end142

cond.false141:                                    ; preds = %for.end137
  br label %cond.end142

cond.end142:                                      ; preds = %cond.false141, %cond.true140
  %cond143 = phi i32 [ %116, %cond.true140 ], [ 0, %cond.false141 ]
  store i32 %cond143, i32* %i, align 4
  %117 = load i32* %i, align 4
  %idxprom144 = sext i32 %117 to i64
  %118 = load %struct.site** @lattice, align 8
  %arrayidx145 = getelementptr inbounds %struct.site* %118, i64 %idxprom144
  store %struct.site* %arrayidx145, %struct.site** %s, align 8
  br label %for.cond146

for.cond146:                                      ; preds = %for.inc160, %cond.end142
  %119 = load i32* %i, align 4
  %120 = load i32* %parity.addr, align 4
  %cmp147 = icmp eq i32 %120, 2
  br i1 %cmp147, label %cond.true149, label %cond.false150

cond.true149:                                     ; preds = %for.cond146
  %121 = load i32* @even_sites_on_node, align 4
  br label %cond.end151

cond.false150:                                    ; preds = %for.cond146
  %122 = load i32* @sites_on_node, align 4
  br label %cond.end151

cond.end151:                                      ; preds = %cond.false150, %cond.true149
  %cond152 = phi i32 [ %121, %cond.true149 ], [ %122, %cond.false150 ]
  %cmp153 = icmp slt i32 %119, %cond152
  br i1 %cmp153, label %for.body155, label %for.end163

for.body155:                                      ; preds = %cond.end151
  %123 = load %struct.site** %s, align 8
  %124 = bitcast %struct.site* %123 to i8*
  %125 = load i32* %dest.addr, align 4
  %idx.ext156 = sext i32 %125 to i64
  %add.ptr157 = getelementptr inbounds i8* %124, i64 %idx.ext156
  %126 = bitcast i8* %add.ptr157 to %struct.su3_vector*
  %127 = load i32* %i, align 4
  %idxprom158 = sext i32 %127 to i64
  %128 = load %struct.su3_vector** %tmp_src, align 8
  %arrayidx159 = getelementptr inbounds %struct.su3_vector* %128, i64 %idxprom158
  %129 = bitcast %struct.su3_vector* %126 to i8*
  %130 = bitcast %struct.su3_vector* %arrayidx159 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %129, i8* %130, i64 48, i32 8, i1 false)
  br label %for.inc160

for.inc160:                                       ; preds = %for.body155
  %131 = load i32* %i, align 4
  %inc161 = add nsw i32 %131, 1
  store i32 %inc161, i32* %i, align 4
  %132 = load %struct.site** %s, align 8
  %incdec.ptr162 = getelementptr inbounds %struct.site* %132, i32 1
  store %struct.site* %incdec.ptr162, %struct.site** %s, align 8
  br label %for.cond146

for.end163:                                       ; preds = %cond.end151
  %133 = load %struct.su3_vector** %tmp_src, align 8
  %134 = bitcast %struct.su3_vector* %133 to i8*
  call void @free(i8* %134) #2
  %135 = load %struct.su3_vector** %tmp_dest, align 8
  %136 = bitcast %struct.su3_vector* %135 to i8*
  call void @free(i8* %136) #2
  %137 = load %struct.su3_vector** %tmp_work, align 8
  %138 = bitcast %struct.su3_vector* %137 to i8*
  call void @free(i8* %138) #2
  br label %if.end195

if.else164:                                       ; preds = %entry
  %139 = load i32* %src.addr, align 4
  %140 = load i32* %dest.addr, align 4
  %cmp165 = icmp ne i32 %139, %140
  br i1 %cmp165, label %if.then167, label %if.end194

if.then167:                                       ; preds = %if.else164
  %141 = load i32* %parity.addr, align 4
  %cmp168 = icmp eq i32 %141, 1
  br i1 %cmp168, label %cond.true170, label %cond.false171

cond.true170:                                     ; preds = %if.then167
  %142 = load i32* @even_sites_on_node, align 4
  br label %cond.end172

cond.false171:                                    ; preds = %if.then167
  br label %cond.end172

cond.end172:                                      ; preds = %cond.false171, %cond.true170
  %cond173 = phi i32 [ %142, %cond.true170 ], [ 0, %cond.false171 ]
  store i32 %cond173, i32* %i, align 4
  %143 = load i32* %i, align 4
  %idxprom174 = sext i32 %143 to i64
  %144 = load %struct.site** @lattice, align 8
  %arrayidx175 = getelementptr inbounds %struct.site* %144, i64 %idxprom174
  store %struct.site* %arrayidx175, %struct.site** %s, align 8
  br label %for.cond176

for.cond176:                                      ; preds = %for.inc190, %cond.end172
  %145 = load i32* %i, align 4
  %146 = load i32* %parity.addr, align 4
  %cmp177 = icmp eq i32 %146, 2
  br i1 %cmp177, label %cond.true179, label %cond.false180

cond.true179:                                     ; preds = %for.cond176
  %147 = load i32* @even_sites_on_node, align 4
  br label %cond.end181

cond.false180:                                    ; preds = %for.cond176
  %148 = load i32* @sites_on_node, align 4
  br label %cond.end181

cond.end181:                                      ; preds = %cond.false180, %cond.true179
  %cond182 = phi i32 [ %147, %cond.true179 ], [ %148, %cond.false180 ]
  %cmp183 = icmp slt i32 %145, %cond182
  br i1 %cmp183, label %for.body185, label %for.end193

for.body185:                                      ; preds = %cond.end181
  %149 = load %struct.site** %s, align 8
  %150 = bitcast %struct.site* %149 to i8*
  %151 = load i32* %dest.addr, align 4
  %idx.ext186 = sext i32 %151 to i64
  %add.ptr187 = getelementptr inbounds i8* %150, i64 %idx.ext186
  %152 = bitcast i8* %add.ptr187 to %struct.su3_vector*
  %153 = load %struct.site** %s, align 8
  %154 = bitcast %struct.site* %153 to i8*
  %155 = load i32* %src.addr, align 4
  %idx.ext188 = sext i32 %155 to i64
  %add.ptr189 = getelementptr inbounds i8* %154, i64 %idx.ext188
  %156 = bitcast i8* %add.ptr189 to %struct.su3_vector*
  %157 = bitcast %struct.su3_vector* %152 to i8*
  %158 = bitcast %struct.su3_vector* %156 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %157, i8* %158, i64 48, i32 8, i1 false)
  br label %for.inc190

for.inc190:                                       ; preds = %for.body185
  %159 = load i32* %i, align 4
  %inc191 = add nsw i32 %159, 1
  store i32 %inc191, i32* %i, align 4
  %160 = load %struct.site** %s, align 8
  %incdec.ptr192 = getelementptr inbounds %struct.site* %160, i32 1
  store %struct.site* %incdec.ptr192, %struct.site** %s, align 8
  br label %for.cond176

for.end193:                                       ; preds = %cond.end181
  br label %if.end194

if.end194:                                        ; preds = %for.end193, %if.else164
  br label %if.end195

if.end195:                                        ; preds = %if.end194, %for.end163
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @path_transport_hwv(i32 %src, i32 %dest, i32 %parity, i32* %dir, i32 %length) #0 {
entry:
  %src.addr = alloca i32, align 4
  %dest.addr = alloca i32, align 4
  %parity.addr = alloca i32, align 4
  %dir.addr = alloca i32*, align 8
  %length.addr = alloca i32, align 4
  %i = alloca i32, align 4
  %s = alloca %struct.site*, align 8
  %mtag0 = alloca %struct.msg_tag*, align 8
  %j = alloca i32, align 4
  %tmp_src = alloca %struct.half_wilson_vector*, align 8
  %tmp_dest = alloca %struct.half_wilson_vector*, align 8
  %tmp_work = alloca %struct.half_wilson_vector*, align 8
  %tmp_pt = alloca %struct.half_wilson_vector*, align 8
  %tmp_parity = alloca i32, align 4
  %tmp_otherparity = alloca i32, align 4
  store i32 %src, i32* %src.addr, align 4
  store i32 %dest, i32* %dest.addr, align 4
  store i32 %parity, i32* %parity.addr, align 4
  store i32* %dir, i32** %dir.addr, align 8
  store i32 %length, i32* %length.addr, align 4
  %0 = load i32* %length.addr, align 4
  %cmp = icmp sgt i32 %0, 0
  br i1 %cmp, label %if.then, label %if.else164

if.then:                                          ; preds = %entry
  %1 = load i32* @sites_on_node, align 4
  %conv = sext i32 %1 to i64
  %call = call noalias i8* @calloc(i64 %conv, i64 96) #2
  %2 = bitcast i8* %call to %struct.half_wilson_vector*
  store %struct.half_wilson_vector* %2, %struct.half_wilson_vector** %tmp_src, align 8
  %3 = load i32* @sites_on_node, align 4
  %conv1 = sext i32 %3 to i64
  %call2 = call noalias i8* @calloc(i64 %conv1, i64 96) #2
  %4 = bitcast i8* %call2 to %struct.half_wilson_vector*
  store %struct.half_wilson_vector* %4, %struct.half_wilson_vector** %tmp_dest, align 8
  %5 = load i32* @sites_on_node, align 4
  %conv3 = sext i32 %5 to i64
  %call4 = call noalias i8* @calloc(i64 %conv3, i64 96) #2
  %6 = bitcast i8* %call4 to %struct.half_wilson_vector*
  store %struct.half_wilson_vector* %6, %struct.half_wilson_vector** %tmp_work, align 8
  %7 = load i32* %length.addr, align 4
  %sub = sub nsw i32 %7, 1
  store i32 %sub, i32* %j, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc136, %if.then
  %8 = load i32* %j, align 4
  %cmp5 = icmp sge i32 %8, 0
  br i1 %cmp5, label %for.body, label %for.end137

for.body:                                         ; preds = %for.cond
  %9 = load i32* %j, align 4
  %rem = srem i32 %9, 2
  %cmp7 = icmp eq i32 %rem, 0
  br i1 %cmp7, label %if.then9, label %if.else

if.then9:                                         ; preds = %for.body
  %10 = load i32* %parity.addr, align 4
  store i32 %10, i32* %tmp_parity, align 4
  %11 = load i32* %tmp_parity, align 4
  switch i32 %11, label %sw.epilog [
    i32 2, label %sw.bb
    i32 1, label %sw.bb10
    i32 3, label %sw.bb11
  ]

sw.bb:                                            ; preds = %if.then9
  store i32 1, i32* %tmp_otherparity, align 4
  br label %sw.epilog

sw.bb10:                                          ; preds = %if.then9
  store i32 2, i32* %tmp_otherparity, align 4
  br label %sw.epilog

sw.bb11:                                          ; preds = %if.then9
  store i32 3, i32* %tmp_otherparity, align 4
  br label %sw.epilog

sw.epilog:                                        ; preds = %sw.bb11, %sw.bb10, %sw.bb, %if.then9
  br label %if.end

if.else:                                          ; preds = %for.body
  %12 = load i32* %parity.addr, align 4
  store i32 %12, i32* %tmp_otherparity, align 4
  %13 = load i32* %tmp_otherparity, align 4
  switch i32 %13, label %sw.epilog15 [
    i32 2, label %sw.bb12
    i32 1, label %sw.bb13
    i32 3, label %sw.bb14
  ]

sw.bb12:                                          ; preds = %if.else
  store i32 1, i32* %tmp_parity, align 4
  br label %sw.epilog15

sw.bb13:                                          ; preds = %if.else
  store i32 2, i32* %tmp_parity, align 4
  br label %sw.epilog15

sw.bb14:                                          ; preds = %if.else
  store i32 3, i32* %tmp_parity, align 4
  br label %sw.epilog15

sw.epilog15:                                      ; preds = %sw.bb14, %sw.bb13, %sw.bb12, %if.else
  br label %if.end

if.end:                                           ; preds = %sw.epilog15, %sw.epilog
  %14 = load i32* %j, align 4
  %15 = load i32* %length.addr, align 4
  %sub16 = sub nsw i32 %15, 1
  %cmp17 = icmp eq i32 %14, %sub16
  br i1 %cmp17, label %if.then19, label %if.end34

if.then19:                                        ; preds = %if.end
  %16 = load i32* %tmp_otherparity, align 4
  %cmp20 = icmp eq i32 %16, 1
  br i1 %cmp20, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.then19
  %17 = load i32* @even_sites_on_node, align 4
  br label %cond.end

cond.false:                                       ; preds = %if.then19
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %17, %cond.true ], [ 0, %cond.false ]
  store i32 %cond, i32* %i, align 4
  %18 = load i32* %i, align 4
  %idxprom = sext i32 %18 to i64
  %19 = load %struct.site** @lattice, align 8
  %arrayidx = getelementptr inbounds %struct.site* %19, i64 %idxprom
  store %struct.site* %arrayidx, %struct.site** %s, align 8
  br label %for.cond22

for.cond22:                                       ; preds = %for.inc, %cond.end
  %20 = load i32* %i, align 4
  %21 = load i32* %tmp_otherparity, align 4
  %cmp23 = icmp eq i32 %21, 2
  br i1 %cmp23, label %cond.true25, label %cond.false26

cond.true25:                                      ; preds = %for.cond22
  %22 = load i32* @even_sites_on_node, align 4
  br label %cond.end27

cond.false26:                                     ; preds = %for.cond22
  %23 = load i32* @sites_on_node, align 4
  br label %cond.end27

cond.end27:                                       ; preds = %cond.false26, %cond.true25
  %cond28 = phi i32 [ %22, %cond.true25 ], [ %23, %cond.false26 ]
  %cmp29 = icmp slt i32 %20, %cond28
  br i1 %cmp29, label %for.body31, label %for.end

for.body31:                                       ; preds = %cond.end27
  %24 = load i32* %i, align 4
  %idxprom32 = sext i32 %24 to i64
  %25 = load %struct.half_wilson_vector** %tmp_src, align 8
  %arrayidx33 = getelementptr inbounds %struct.half_wilson_vector* %25, i64 %idxprom32
  %26 = load %struct.site** %s, align 8
  %27 = bitcast %struct.site* %26 to i8*
  %28 = load i32* %src.addr, align 4
  %idx.ext = sext i32 %28 to i64
  %add.ptr = getelementptr inbounds i8* %27, i64 %idx.ext
  %29 = bitcast i8* %add.ptr to %struct.half_wilson_vector*
  %30 = bitcast %struct.half_wilson_vector* %arrayidx33 to i8*
  %31 = bitcast %struct.half_wilson_vector* %29 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %30, i8* %31, i64 96, i32 8, i1 false)
  br label %for.inc

for.inc:                                          ; preds = %for.body31
  %32 = load i32* %i, align 4
  %inc = add nsw i32 %32, 1
  store i32 %inc, i32* %i, align 4
  %33 = load %struct.site** %s, align 8
  %incdec.ptr = getelementptr inbounds %struct.site* %33, i32 1
  store %struct.site* %incdec.ptr, %struct.site** %s, align 8
  br label %for.cond22

for.end:                                          ; preds = %cond.end27
  br label %if.end34

if.end34:                                         ; preds = %for.end, %if.end
  %34 = load i32* %j, align 4
  %idxprom35 = sext i32 %34 to i64
  %35 = load i32** %dir.addr, align 8
  %arrayidx36 = getelementptr inbounds i32* %35, i64 %idxprom35
  %36 = load i32* %arrayidx36, align 4
  %cmp37 = icmp sle i32 %36, 3
  br i1 %cmp37, label %if.then39, label %if.else73

if.then39:                                        ; preds = %if.end34
  %37 = load %struct.half_wilson_vector** %tmp_src, align 8
  %38 = bitcast %struct.half_wilson_vector* %37 to i8*
  %39 = load i32* %j, align 4
  %idxprom40 = sext i32 %39 to i64
  %40 = load i32** %dir.addr, align 8
  %arrayidx41 = getelementptr inbounds i32* %40, i64 %idxprom40
  %41 = load i32* %arrayidx41, align 4
  %42 = load i32* %tmp_parity, align 4
  %43 = load i8*** getelementptr inbounds ([16 x i8**]* @gen_pt, i32 0, i64 0), align 8
  %call42 = call %struct.msg_tag* @start_gather_from_temp(i8* %38, i32 96, i32 %41, i32 %42, i8** %43)
  store %struct.msg_tag* %call42, %struct.msg_tag** %mtag0, align 8
  %44 = load %struct.msg_tag** %mtag0, align 8
  call void @wait_gather(%struct.msg_tag* %44)
  %45 = load i32* %tmp_parity, align 4
  %cmp43 = icmp eq i32 %45, 1
  br i1 %cmp43, label %cond.true45, label %cond.false46

cond.true45:                                      ; preds = %if.then39
  %46 = load i32* @even_sites_on_node, align 4
  br label %cond.end47

cond.false46:                                     ; preds = %if.then39
  br label %cond.end47

cond.end47:                                       ; preds = %cond.false46, %cond.true45
  %cond48 = phi i32 [ %46, %cond.true45 ], [ 0, %cond.false46 ]
  store i32 %cond48, i32* %i, align 4
  %47 = load i32* %i, align 4
  %idxprom49 = sext i32 %47 to i64
  %48 = load %struct.site** @lattice, align 8
  %arrayidx50 = getelementptr inbounds %struct.site* %48, i64 %idxprom49
  store %struct.site* %arrayidx50, %struct.site** %s, align 8
  br label %for.cond51

for.cond51:                                       ; preds = %for.inc69, %cond.end47
  %49 = load i32* %i, align 4
  %50 = load i32* %tmp_parity, align 4
  %cmp52 = icmp eq i32 %50, 2
  br i1 %cmp52, label %cond.true54, label %cond.false55

cond.true54:                                      ; preds = %for.cond51
  %51 = load i32* @even_sites_on_node, align 4
  br label %cond.end56

cond.false55:                                     ; preds = %for.cond51
  %52 = load i32* @sites_on_node, align 4
  br label %cond.end56

cond.end56:                                       ; preds = %cond.false55, %cond.true54
  %cond57 = phi i32 [ %51, %cond.true54 ], [ %52, %cond.false55 ]
  %cmp58 = icmp slt i32 %49, %cond57
  br i1 %cmp58, label %for.body60, label %for.end72

for.body60:                                       ; preds = %cond.end56
  %53 = load i32* %j, align 4
  %idxprom61 = sext i32 %53 to i64
  %54 = load i32** %dir.addr, align 8
  %arrayidx62 = getelementptr inbounds i32* %54, i64 %idxprom61
  %55 = load i32* %arrayidx62, align 4
  %idxprom63 = sext i32 %55 to i64
  %56 = load %struct.site** %s, align 8
  %link = getelementptr inbounds %struct.site* %56, i32 0, i32 8
  %arrayidx64 = getelementptr inbounds [4 x %struct.su3_matrix]* %link, i32 0, i64 %idxprom63
  %57 = load i32* %i, align 4
  %idxprom65 = sext i32 %57 to i64
  %58 = load i8*** getelementptr inbounds ([16 x i8**]* @gen_pt, i32 0, i64 0), align 8
  %arrayidx66 = getelementptr inbounds i8** %58, i64 %idxprom65
  %59 = load i8** %arrayidx66, align 8
  %60 = bitcast i8* %59 to %struct.half_wilson_vector*
  %61 = load i32* %i, align 4
  %idxprom67 = sext i32 %61 to i64
  %62 = load %struct.half_wilson_vector** %tmp_dest, align 8
  %arrayidx68 = getelementptr inbounds %struct.half_wilson_vector* %62, i64 %idxprom67
  call void @mult_su3_mat_hwvec(%struct.su3_matrix* %arrayidx64, %struct.half_wilson_vector* %60, %struct.half_wilson_vector* %arrayidx68)
  br label %for.inc69

for.inc69:                                        ; preds = %for.body60
  %63 = load i32* %i, align 4
  %inc70 = add nsw i32 %63, 1
  store i32 %inc70, i32* %i, align 4
  %64 = load %struct.site** %s, align 8
  %incdec.ptr71 = getelementptr inbounds %struct.site* %64, i32 1
  store %struct.site* %incdec.ptr71, %struct.site** %s, align 8
  br label %for.cond51

for.end72:                                        ; preds = %cond.end56
  %65 = load %struct.msg_tag** %mtag0, align 8
  call void @cleanup_gather(%struct.msg_tag* %65)
  br label %if.end135

if.else73:                                        ; preds = %if.end34
  %66 = load i32* %tmp_otherparity, align 4
  %cmp74 = icmp eq i32 %66, 1
  br i1 %cmp74, label %cond.true76, label %cond.false77

cond.true76:                                      ; preds = %if.else73
  %67 = load i32* @even_sites_on_node, align 4
  br label %cond.end78

cond.false77:                                     ; preds = %if.else73
  br label %cond.end78

cond.end78:                                       ; preds = %cond.false77, %cond.true76
  %cond79 = phi i32 [ %67, %cond.true76 ], [ 0, %cond.false77 ]
  store i32 %cond79, i32* %i, align 4
  %68 = load i32* %i, align 4
  %idxprom80 = sext i32 %68 to i64
  %69 = load %struct.site** @lattice, align 8
  %arrayidx81 = getelementptr inbounds %struct.site* %69, i64 %idxprom80
  store %struct.site* %arrayidx81, %struct.site** %s, align 8
  br label %for.cond82

for.cond82:                                       ; preds = %for.inc102, %cond.end78
  %70 = load i32* %i, align 4
  %71 = load i32* %tmp_otherparity, align 4
  %cmp83 = icmp eq i32 %71, 2
  br i1 %cmp83, label %cond.true85, label %cond.false86

cond.true85:                                      ; preds = %for.cond82
  %72 = load i32* @even_sites_on_node, align 4
  br label %cond.end87

cond.false86:                                     ; preds = %for.cond82
  %73 = load i32* @sites_on_node, align 4
  br label %cond.end87

cond.end87:                                       ; preds = %cond.false86, %cond.true85
  %cond88 = phi i32 [ %72, %cond.true85 ], [ %73, %cond.false86 ]
  %cmp89 = icmp slt i32 %70, %cond88
  br i1 %cmp89, label %for.body91, label %for.end105

for.body91:                                       ; preds = %cond.end87
  %74 = load i32* %j, align 4
  %idxprom92 = sext i32 %74 to i64
  %75 = load i32** %dir.addr, align 8
  %arrayidx93 = getelementptr inbounds i32* %75, i64 %idxprom92
  %76 = load i32* %arrayidx93, align 4
  %sub94 = sub nsw i32 7, %76
  %idxprom95 = sext i32 %sub94 to i64
  %77 = load %struct.site** %s, align 8
  %link96 = getelementptr inbounds %struct.site* %77, i32 0, i32 8
  %arrayidx97 = getelementptr inbounds [4 x %struct.su3_matrix]* %link96, i32 0, i64 %idxprom95
  %78 = load i32* %i, align 4
  %idxprom98 = sext i32 %78 to i64
  %79 = load %struct.half_wilson_vector** %tmp_src, align 8
  %arrayidx99 = getelementptr inbounds %struct.half_wilson_vector* %79, i64 %idxprom98
  %80 = load i32* %i, align 4
  %idxprom100 = sext i32 %80 to i64
  %81 = load %struct.half_wilson_vector** %tmp_work, align 8
  %arrayidx101 = getelementptr inbounds %struct.half_wilson_vector* %81, i64 %idxprom100
  call void @mult_adj_su3_mat_hwvec(%struct.su3_matrix* %arrayidx97, %struct.half_wilson_vector* %arrayidx99, %struct.half_wilson_vector* %arrayidx101)
  br label %for.inc102

for.inc102:                                       ; preds = %for.body91
  %82 = load i32* %i, align 4
  %inc103 = add nsw i32 %82, 1
  store i32 %inc103, i32* %i, align 4
  %83 = load %struct.site** %s, align 8
  %incdec.ptr104 = getelementptr inbounds %struct.site* %83, i32 1
  store %struct.site* %incdec.ptr104, %struct.site** %s, align 8
  br label %for.cond82

for.end105:                                       ; preds = %cond.end87
  %84 = load %struct.half_wilson_vector** %tmp_work, align 8
  %85 = bitcast %struct.half_wilson_vector* %84 to i8*
  %86 = load i32* %j, align 4
  %idxprom106 = sext i32 %86 to i64
  %87 = load i32** %dir.addr, align 8
  %arrayidx107 = getelementptr inbounds i32* %87, i64 %idxprom106
  %88 = load i32* %arrayidx107, align 4
  %89 = load i32* %tmp_parity, align 4
  %90 = load i8*** getelementptr inbounds ([16 x i8**]* @gen_pt, i32 0, i64 0), align 8
  %call108 = call %struct.msg_tag* @start_gather_from_temp(i8* %85, i32 96, i32 %88, i32 %89, i8** %90)
  store %struct.msg_tag* %call108, %struct.msg_tag** %mtag0, align 8
  %91 = load %struct.msg_tag** %mtag0, align 8
  call void @wait_gather(%struct.msg_tag* %91)
  %92 = load i32* %tmp_parity, align 4
  %cmp109 = icmp eq i32 %92, 1
  br i1 %cmp109, label %cond.true111, label %cond.false112

cond.true111:                                     ; preds = %for.end105
  %93 = load i32* @even_sites_on_node, align 4
  br label %cond.end113

cond.false112:                                    ; preds = %for.end105
  br label %cond.end113

cond.end113:                                      ; preds = %cond.false112, %cond.true111
  %cond114 = phi i32 [ %93, %cond.true111 ], [ 0, %cond.false112 ]
  store i32 %cond114, i32* %i, align 4
  %94 = load i32* %i, align 4
  %idxprom115 = sext i32 %94 to i64
  %95 = load %struct.site** @lattice, align 8
  %arrayidx116 = getelementptr inbounds %struct.site* %95, i64 %idxprom115
  store %struct.site* %arrayidx116, %struct.site** %s, align 8
  br label %for.cond117

for.cond117:                                      ; preds = %for.inc131, %cond.end113
  %96 = load i32* %i, align 4
  %97 = load i32* %tmp_parity, align 4
  %cmp118 = icmp eq i32 %97, 2
  br i1 %cmp118, label %cond.true120, label %cond.false121

cond.true120:                                     ; preds = %for.cond117
  %98 = load i32* @even_sites_on_node, align 4
  br label %cond.end122

cond.false121:                                    ; preds = %for.cond117
  %99 = load i32* @sites_on_node, align 4
  br label %cond.end122

cond.end122:                                      ; preds = %cond.false121, %cond.true120
  %cond123 = phi i32 [ %98, %cond.true120 ], [ %99, %cond.false121 ]
  %cmp124 = icmp slt i32 %96, %cond123
  br i1 %cmp124, label %for.body126, label %for.end134

for.body126:                                      ; preds = %cond.end122
  %100 = load i32* %i, align 4
  %idxprom127 = sext i32 %100 to i64
  %101 = load %struct.half_wilson_vector** %tmp_dest, align 8
  %arrayidx128 = getelementptr inbounds %struct.half_wilson_vector* %101, i64 %idxprom127
  %102 = load i32* %i, align 4
  %idxprom129 = sext i32 %102 to i64
  %103 = load i8*** getelementptr inbounds ([16 x i8**]* @gen_pt, i32 0, i64 0), align 8
  %arrayidx130 = getelementptr inbounds i8** %103, i64 %idxprom129
  %104 = load i8** %arrayidx130, align 8
  %105 = bitcast i8* %104 to %struct.half_wilson_vector*
  %106 = bitcast %struct.half_wilson_vector* %arrayidx128 to i8*
  %107 = bitcast %struct.half_wilson_vector* %105 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %106, i8* %107, i64 96, i32 8, i1 false)
  br label %for.inc131

for.inc131:                                       ; preds = %for.body126
  %108 = load i32* %i, align 4
  %inc132 = add nsw i32 %108, 1
  store i32 %inc132, i32* %i, align 4
  %109 = load %struct.site** %s, align 8
  %incdec.ptr133 = getelementptr inbounds %struct.site* %109, i32 1
  store %struct.site* %incdec.ptr133, %struct.site** %s, align 8
  br label %for.cond117

for.end134:                                       ; preds = %cond.end122
  %110 = load %struct.msg_tag** %mtag0, align 8
  call void @cleanup_gather(%struct.msg_tag* %110)
  br label %if.end135

if.end135:                                        ; preds = %for.end134, %for.end72
  %111 = load %struct.half_wilson_vector** %tmp_src, align 8
  store %struct.half_wilson_vector* %111, %struct.half_wilson_vector** %tmp_pt, align 8
  %112 = load %struct.half_wilson_vector** %tmp_dest, align 8
  store %struct.half_wilson_vector* %112, %struct.half_wilson_vector** %tmp_src, align 8
  %113 = load %struct.half_wilson_vector** %tmp_pt, align 8
  store %struct.half_wilson_vector* %113, %struct.half_wilson_vector** %tmp_dest, align 8
  br label %for.inc136

for.inc136:                                       ; preds = %if.end135
  %114 = load i32* %j, align 4
  %dec = add nsw i32 %114, -1
  store i32 %dec, i32* %j, align 4
  br label %for.cond

for.end137:                                       ; preds = %for.cond
  %115 = load i32* %parity.addr, align 4
  %cmp138 = icmp eq i32 %115, 1
  br i1 %cmp138, label %cond.true140, label %cond.false141

cond.true140:                                     ; preds = %for.end137
  %116 = load i32* @even_sites_on_node, align 4
  br label %cond.end142

cond.false141:                                    ; preds = %for.end137
  br label %cond.end142

cond.end142:                                      ; preds = %cond.false141, %cond.true140
  %cond143 = phi i32 [ %116, %cond.true140 ], [ 0, %cond.false141 ]
  store i32 %cond143, i32* %i, align 4
  %117 = load i32* %i, align 4
  %idxprom144 = sext i32 %117 to i64
  %118 = load %struct.site** @lattice, align 8
  %arrayidx145 = getelementptr inbounds %struct.site* %118, i64 %idxprom144
  store %struct.site* %arrayidx145, %struct.site** %s, align 8
  br label %for.cond146

for.cond146:                                      ; preds = %for.inc160, %cond.end142
  %119 = load i32* %i, align 4
  %120 = load i32* %parity.addr, align 4
  %cmp147 = icmp eq i32 %120, 2
  br i1 %cmp147, label %cond.true149, label %cond.false150

cond.true149:                                     ; preds = %for.cond146
  %121 = load i32* @even_sites_on_node, align 4
  br label %cond.end151

cond.false150:                                    ; preds = %for.cond146
  %122 = load i32* @sites_on_node, align 4
  br label %cond.end151

cond.end151:                                      ; preds = %cond.false150, %cond.true149
  %cond152 = phi i32 [ %121, %cond.true149 ], [ %122, %cond.false150 ]
  %cmp153 = icmp slt i32 %119, %cond152
  br i1 %cmp153, label %for.body155, label %for.end163

for.body155:                                      ; preds = %cond.end151
  %123 = load %struct.site** %s, align 8
  %124 = bitcast %struct.site* %123 to i8*
  %125 = load i32* %dest.addr, align 4
  %idx.ext156 = sext i32 %125 to i64
  %add.ptr157 = getelementptr inbounds i8* %124, i64 %idx.ext156
  %126 = bitcast i8* %add.ptr157 to %struct.half_wilson_vector*
  %127 = load i32* %i, align 4
  %idxprom158 = sext i32 %127 to i64
  %128 = load %struct.half_wilson_vector** %tmp_src, align 8
  %arrayidx159 = getelementptr inbounds %struct.half_wilson_vector* %128, i64 %idxprom158
  %129 = bitcast %struct.half_wilson_vector* %126 to i8*
  %130 = bitcast %struct.half_wilson_vector* %arrayidx159 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %129, i8* %130, i64 96, i32 8, i1 false)
  br label %for.inc160

for.inc160:                                       ; preds = %for.body155
  %131 = load i32* %i, align 4
  %inc161 = add nsw i32 %131, 1
  store i32 %inc161, i32* %i, align 4
  %132 = load %struct.site** %s, align 8
  %incdec.ptr162 = getelementptr inbounds %struct.site* %132, i32 1
  store %struct.site* %incdec.ptr162, %struct.site** %s, align 8
  br label %for.cond146

for.end163:                                       ; preds = %cond.end151
  %133 = load %struct.half_wilson_vector** %tmp_src, align 8
  %134 = bitcast %struct.half_wilson_vector* %133 to i8*
  call void @free(i8* %134) #2
  %135 = load %struct.half_wilson_vector** %tmp_dest, align 8
  %136 = bitcast %struct.half_wilson_vector* %135 to i8*
  call void @free(i8* %136) #2
  %137 = load %struct.half_wilson_vector** %tmp_work, align 8
  %138 = bitcast %struct.half_wilson_vector* %137 to i8*
  call void @free(i8* %138) #2
  br label %if.end195

if.else164:                                       ; preds = %entry
  %139 = load i32* %src.addr, align 4
  %140 = load i32* %dest.addr, align 4
  %cmp165 = icmp ne i32 %139, %140
  br i1 %cmp165, label %if.then167, label %if.end194

if.then167:                                       ; preds = %if.else164
  %141 = load i32* %parity.addr, align 4
  %cmp168 = icmp eq i32 %141, 1
  br i1 %cmp168, label %cond.true170, label %cond.false171

cond.true170:                                     ; preds = %if.then167
  %142 = load i32* @even_sites_on_node, align 4
  br label %cond.end172

cond.false171:                                    ; preds = %if.then167
  br label %cond.end172

cond.end172:                                      ; preds = %cond.false171, %cond.true170
  %cond173 = phi i32 [ %142, %cond.true170 ], [ 0, %cond.false171 ]
  store i32 %cond173, i32* %i, align 4
  %143 = load i32* %i, align 4
  %idxprom174 = sext i32 %143 to i64
  %144 = load %struct.site** @lattice, align 8
  %arrayidx175 = getelementptr inbounds %struct.site* %144, i64 %idxprom174
  store %struct.site* %arrayidx175, %struct.site** %s, align 8
  br label %for.cond176

for.cond176:                                      ; preds = %for.inc190, %cond.end172
  %145 = load i32* %i, align 4
  %146 = load i32* %parity.addr, align 4
  %cmp177 = icmp eq i32 %146, 2
  br i1 %cmp177, label %cond.true179, label %cond.false180

cond.true179:                                     ; preds = %for.cond176
  %147 = load i32* @even_sites_on_node, align 4
  br label %cond.end181

cond.false180:                                    ; preds = %for.cond176
  %148 = load i32* @sites_on_node, align 4
  br label %cond.end181

cond.end181:                                      ; preds = %cond.false180, %cond.true179
  %cond182 = phi i32 [ %147, %cond.true179 ], [ %148, %cond.false180 ]
  %cmp183 = icmp slt i32 %145, %cond182
  br i1 %cmp183, label %for.body185, label %for.end193

for.body185:                                      ; preds = %cond.end181
  %149 = load %struct.site** %s, align 8
  %150 = bitcast %struct.site* %149 to i8*
  %151 = load i32* %dest.addr, align 4
  %idx.ext186 = sext i32 %151 to i64
  %add.ptr187 = getelementptr inbounds i8* %150, i64 %idx.ext186
  %152 = bitcast i8* %add.ptr187 to %struct.half_wilson_vector*
  %153 = load %struct.site** %s, align 8
  %154 = bitcast %struct.site* %153 to i8*
  %155 = load i32* %src.addr, align 4
  %idx.ext188 = sext i32 %155 to i64
  %add.ptr189 = getelementptr inbounds i8* %154, i64 %idx.ext188
  %156 = bitcast i8* %add.ptr189 to %struct.half_wilson_vector*
  %157 = bitcast %struct.half_wilson_vector* %152 to i8*
  %158 = bitcast %struct.half_wilson_vector* %156 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %157, i8* %158, i64 96, i32 8, i1 false)
  br label %for.inc190

for.inc190:                                       ; preds = %for.body185
  %159 = load i32* %i, align 4
  %inc191 = add nsw i32 %159, 1
  store i32 %inc191, i32* %i, align 4
  %160 = load %struct.site** %s, align 8
  %incdec.ptr192 = getelementptr inbounds %struct.site* %160, i32 1
  store %struct.site* %incdec.ptr192, %struct.site** %s, align 8
  br label %for.cond176

for.end193:                                       ; preds = %cond.end181
  br label %if.end194

if.end194:                                        ; preds = %for.end193, %if.else164
  br label %if.end195

if.end195:                                        ; preds = %if.end194, %for.end163
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @load_longlinks() #0 {
entry:
  %i = alloca i32, align 4
  %s = alloca %struct.site*, align 8
  %ipath = alloca i32, align 4
  %dir = alloca i32, align 4
  %disp = alloca [4 x i32], align 16
  %long1 = alloca %struct.su3_matrix*, align 8
  %0 = load i32* @phases_in, align 4
  %cmp = icmp ne i32 %0, 1
  br i1 %cmp, label %if.then, label %if.end3

if.then:                                          ; preds = %entry
  %1 = load i32* @this_node, align 4
  %cmp1 = icmp eq i32 %1, 0
  br i1 %cmp1, label %if.then2, label %if.end

if.then2:                                         ; preds = %if.then
  %call = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([39 x i8]* @.str4324, i32 0, i32 0))
  br label %if.end

if.end:                                           ; preds = %if.then2, %if.then
  call void @terminate(i32 0)
  br label %if.end3

if.end3:                                          ; preds = %if.end, %entry
  store i32 0, i32* %dir, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc91, %if.end3
  %2 = load i32* %dir, align 4
  %cmp4 = icmp sle i32 %2, 3
  br i1 %cmp4, label %for.body, label %for.end93

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %i, align 4
  %3 = load %struct.site** @lattice, align 8
  store %struct.site* %3, %struct.site** %s, align 8
  br label %for.cond5

for.cond5:                                        ; preds = %for.inc, %for.body
  %4 = load i32* %i, align 4
  %5 = load i32* @sites_on_node, align 4
  %cmp6 = icmp slt i32 %4, %5
  br i1 %cmp6, label %for.body7, label %for.end

for.body7:                                        ; preds = %for.cond5
  %6 = load i32* %i, align 4
  %mul = mul nsw i32 4, %6
  %7 = load i32* %dir, align 4
  %add = add nsw i32 %mul, %7
  %idxprom = sext i32 %add to i64
  %8 = load %struct.su3_matrix** @t_longlink, align 8
  %arrayidx = getelementptr inbounds %struct.su3_matrix* %8, i64 %idxprom
  store %struct.su3_matrix* %arrayidx, %struct.su3_matrix** %long1, align 8
  %9 = load %struct.su3_matrix** %long1, align 8
  call void @clear_su3mat(%struct.su3_matrix* %9)
  br label %for.inc

for.inc:                                          ; preds = %for.body7
  %10 = load i32* %i, align 4
  %inc = add nsw i32 %10, 1
  store i32 %inc, i32* %i, align 4
  %11 = load %struct.site** %s, align 8
  %incdec.ptr = getelementptr inbounds %struct.site* %11, i32 1
  store %struct.site* %incdec.ptr, %struct.site** %s, align 8
  br label %for.cond5

for.end:                                          ; preds = %for.cond5
  store i32 0, i32* %ipath, align 4
  br label %for.cond8

for.cond8:                                        ; preds = %for.inc88, %for.end
  %12 = load i32* %ipath, align 4
  %13 = load i32* @num_q_paths, align 4
  %cmp9 = icmp slt i32 %12, %13
  br i1 %cmp9, label %for.body10, label %for.end90

for.body10:                                       ; preds = %for.cond8
  store i32 0, i32* %i, align 4
  br label %for.cond11

for.cond11:                                       ; preds = %for.inc16, %for.body10
  %14 = load i32* %i, align 4
  %cmp12 = icmp sle i32 %14, 3
  br i1 %cmp12, label %for.body13, label %for.end18

for.body13:                                       ; preds = %for.cond11
  %15 = load i32* %i, align 4
  %idxprom14 = sext i32 %15 to i64
  %arrayidx15 = getelementptr inbounds [4 x i32]* %disp, i32 0, i64 %idxprom14
  store i32 0, i32* %arrayidx15, align 4
  br label %for.inc16

for.inc16:                                        ; preds = %for.body13
  %16 = load i32* %i, align 4
  %inc17 = add nsw i32 %16, 1
  store i32 %inc17, i32* %i, align 4
  br label %for.cond11

for.end18:                                        ; preds = %for.cond11
  store i32 0, i32* %i, align 4
  br label %for.cond19

for.cond19:                                       ; preds = %for.inc47, %for.end18
  %17 = load i32* %i, align 4
  %18 = load i32* %ipath, align 4
  %idxprom20 = sext i32 %18 to i64
  %arrayidx21 = getelementptr inbounds [688 x %struct.anon.138]* @q_paths, i32 0, i64 %idxprom20
  %length = getelementptr inbounds %struct.anon.138* %arrayidx21, i32 0, i32 1
  %19 = load i32* %length, align 4
  %cmp22 = icmp slt i32 %17, %19
  br i1 %cmp22, label %for.body23, label %for.end49

for.body23:                                       ; preds = %for.cond19
  %20 = load i32* %i, align 4
  %idxprom24 = sext i32 %20 to i64
  %21 = load i32* %ipath, align 4
  %idxprom25 = sext i32 %21 to i64
  %arrayidx26 = getelementptr inbounds [688 x %struct.anon.138]* @q_paths, i32 0, i64 %idxprom25
  %dir27 = getelementptr inbounds %struct.anon.138* %arrayidx26, i32 0, i32 0
  %arrayidx28 = getelementptr inbounds [7 x i32]* %dir27, i32 0, i64 %idxprom24
  %22 = load i32* %arrayidx28, align 4
  %cmp29 = icmp sle i32 %22, 3
  br i1 %cmp29, label %if.then30, label %if.else

if.then30:                                        ; preds = %for.body23
  %23 = load i32* %i, align 4
  %idxprom31 = sext i32 %23 to i64
  %24 = load i32* %ipath, align 4
  %idxprom32 = sext i32 %24 to i64
  %arrayidx33 = getelementptr inbounds [688 x %struct.anon.138]* @q_paths, i32 0, i64 %idxprom32
  %dir34 = getelementptr inbounds %struct.anon.138* %arrayidx33, i32 0, i32 0
  %arrayidx35 = getelementptr inbounds [7 x i32]* %dir34, i32 0, i64 %idxprom31
  %25 = load i32* %arrayidx35, align 4
  %idxprom36 = sext i32 %25 to i64
  %arrayidx37 = getelementptr inbounds [4 x i32]* %disp, i32 0, i64 %idxprom36
  %26 = load i32* %arrayidx37, align 4
  %inc38 = add nsw i32 %26, 1
  store i32 %inc38, i32* %arrayidx37, align 4
  br label %if.end46

if.else:                                          ; preds = %for.body23
  %27 = load i32* %i, align 4
  %idxprom39 = sext i32 %27 to i64
  %28 = load i32* %ipath, align 4
  %idxprom40 = sext i32 %28 to i64
  %arrayidx41 = getelementptr inbounds [688 x %struct.anon.138]* @q_paths, i32 0, i64 %idxprom40
  %dir42 = getelementptr inbounds %struct.anon.138* %arrayidx41, i32 0, i32 0
  %arrayidx43 = getelementptr inbounds [7 x i32]* %dir42, i32 0, i64 %idxprom39
  %29 = load i32* %arrayidx43, align 4
  %sub = sub nsw i32 7, %29
  %idxprom44 = sext i32 %sub to i64
  %arrayidx45 = getelementptr inbounds [4 x i32]* %disp, i32 0, i64 %idxprom44
  %30 = load i32* %arrayidx45, align 4
  %dec = add nsw i32 %30, -1
  store i32 %dec, i32* %arrayidx45, align 4
  br label %if.end46

if.end46:                                         ; preds = %if.else, %if.then30
  br label %for.inc47

for.inc47:                                        ; preds = %if.end46
  %31 = load i32* %i, align 4
  %inc48 = add nsw i32 %31, 1
  store i32 %inc48, i32* %i, align 4
  br label %for.cond19

for.end49:                                        ; preds = %for.cond19
  %32 = load i32* %dir, align 4
  %idxprom50 = sext i32 %32 to i64
  %arrayidx51 = getelementptr inbounds [4 x i32]* %disp, i32 0, i64 %idxprom50
  %33 = load i32* %arrayidx51, align 4
  %add52 = add nsw i32 %33, 3
  store i32 %add52, i32* %arrayidx51, align 4
  store i32 0, i32* %i, align 4
  br label %for.cond53

for.cond53:                                       ; preds = %for.inc61, %for.end49
  %34 = load i32* %i, align 4
  %cmp54 = icmp sle i32 %34, 3
  br i1 %cmp54, label %for.body55, label %for.end63

for.body55:                                       ; preds = %for.cond53
  %35 = load i32* %i, align 4
  %idxprom56 = sext i32 %35 to i64
  %arrayidx57 = getelementptr inbounds [4 x i32]* %disp, i32 0, i64 %idxprom56
  %36 = load i32* %arrayidx57, align 4
  %cmp58 = icmp ne i32 %36, 0
  br i1 %cmp58, label %if.then59, label %if.end60

if.then59:                                        ; preds = %for.body55
  br label %for.end63

if.end60:                                         ; preds = %for.body55
  br label %for.inc61

for.inc61:                                        ; preds = %if.end60
  %37 = load i32* %i, align 4
  %inc62 = add nsw i32 %37, 1
  store i32 %inc62, i32* %i, align 4
  br label %for.cond53

for.end63:                                        ; preds = %if.then59, %for.cond53
  %38 = load i32* %i, align 4
  %cmp64 = icmp sle i32 %38, 3
  br i1 %cmp64, label %if.then65, label %if.end66

if.then65:                                        ; preds = %for.end63
  br label %for.inc88

if.end66:                                         ; preds = %for.end63
  %39 = load i32* %ipath, align 4
  %idxprom67 = sext i32 %39 to i64
  %arrayidx68 = getelementptr inbounds [688 x %struct.anon.138]* @q_paths, i32 0, i64 %idxprom67
  %dir69 = getelementptr inbounds %struct.anon.138* %arrayidx68, i32 0, i32 0
  %arraydecay = getelementptr inbounds [7 x i32]* %dir69, i32 0, i32 0
  %40 = load i32* %ipath, align 4
  %idxprom70 = sext i32 %40 to i64
  %arrayidx71 = getelementptr inbounds [688 x %struct.anon.138]* @q_paths, i32 0, i64 %idxprom70
  %length72 = getelementptr inbounds %struct.anon.138* %arrayidx71, i32 0, i32 1
  %41 = load i32* %length72, align 4
  call void @path_product(i32* %arraydecay, i32 %41)
  store i32 0, i32* %i, align 4
  %42 = load %struct.site** @lattice, align 8
  store %struct.site* %42, %struct.site** %s, align 8
  br label %for.cond73

for.cond73:                                       ; preds = %for.inc84, %if.end66
  %43 = load i32* %i, align 4
  %44 = load i32* @sites_on_node, align 4
  %cmp74 = icmp slt i32 %43, %44
  br i1 %cmp74, label %for.body75, label %for.end87

for.body75:                                       ; preds = %for.cond73
  %45 = load %struct.site** %s, align 8
  %tempmat1 = getelementptr inbounds %struct.site* %45, i32 0, i32 20
  %46 = load %struct.site** %s, align 8
  %staple = getelementptr inbounds %struct.site* %46, i32 0, i32 21
  call void @su3_adjoint(%struct.su3_matrix* %tempmat1, %struct.su3_matrix* %staple)
  %47 = load i32* %i, align 4
  %mul76 = mul nsw i32 4, %47
  %48 = load i32* %dir, align 4
  %add77 = add nsw i32 %mul76, %48
  %idxprom78 = sext i32 %add77 to i64
  %49 = load %struct.su3_matrix** @t_longlink, align 8
  %arrayidx79 = getelementptr inbounds %struct.su3_matrix* %49, i64 %idxprom78
  store %struct.su3_matrix* %arrayidx79, %struct.su3_matrix** %long1, align 8
  %50 = load %struct.su3_matrix** %long1, align 8
  %51 = load %struct.site** %s, align 8
  %staple80 = getelementptr inbounds %struct.site* %51, i32 0, i32 21
  %52 = load i32* %ipath, align 4
  %idxprom81 = sext i32 %52 to i64
  %arrayidx82 = getelementptr inbounds [688 x %struct.anon.138]* @q_paths, i32 0, i64 %idxprom81
  %coeff = getelementptr inbounds %struct.anon.138* %arrayidx82, i32 0, i32 2
  %53 = load double* %coeff, align 8
  %sub83 = fsub double -0.000000e+00, %53
  %54 = load %struct.su3_matrix** %long1, align 8
  call void @scalar_mult_add_su3_matrix(%struct.su3_matrix* %50, %struct.su3_matrix* %staple80, double %sub83, %struct.su3_matrix* %54)
  br label %for.inc84

for.inc84:                                        ; preds = %for.body75
  %55 = load i32* %i, align 4
  %inc85 = add nsw i32 %55, 1
  store i32 %inc85, i32* %i, align 4
  %56 = load %struct.site** %s, align 8
  %incdec.ptr86 = getelementptr inbounds %struct.site* %56, i32 1
  store %struct.site* %incdec.ptr86, %struct.site** %s, align 8
  br label %for.cond73

for.end87:                                        ; preds = %for.cond73
  br label %for.inc88

for.inc88:                                        ; preds = %for.end87, %if.then65
  %57 = load i32* %ipath, align 4
  %inc89 = add nsw i32 %57, 1
  store i32 %inc89, i32* %ipath, align 4
  br label %for.cond8

for.end90:                                        ; preds = %for.cond8
  br label %for.inc91

for.inc91:                                        ; preds = %for.end90
  %58 = load i32* %dir, align 4
  %inc92 = add nsw i32 %58, 1
  store i32 %inc92, i32* %dir, align 4
  br label %for.cond

for.end93:                                        ; preds = %for.cond
  store i32 1, i32* @valid_longlinks, align 4
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @load_fatlinks() #0 {
entry:
  %i = alloca i32, align 4
  %s = alloca %struct.site*, align 8
  %dir = alloca i32, align 4
  %fat1 = alloca %struct.su3_matrix*, align 8
  %nu = alloca i32, align 4
  %rho = alloca i32, align 4
  %sig = alloca i32, align 4
  %one_link = alloca double, align 8
  %0 = load i32* @phases_in, align 4
  %cmp = icmp ne i32 %0, 1
  br i1 %cmp, label %if.then, label %if.end3

if.then:                                          ; preds = %entry
  %1 = load i32* @this_node, align 4
  %cmp1 = icmp eq i32 %1, 0
  br i1 %cmp1, label %if.then2, label %if.end

if.then2:                                         ; preds = %if.then
  %call = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([38 x i8]* @.str5325, i32 0, i32 0))
  br label %if.end

if.end:                                           ; preds = %if.then2, %if.then
  call void @terminate(i32 0)
  br label %if.end3

if.end3:                                          ; preds = %if.end, %entry
  %2 = load double* getelementptr inbounds ([6 x double]* @act_path_coeff, i32 0, i64 0), align 8
  %3 = load double* getelementptr inbounds ([6 x double]* @act_path_coeff, i32 0, i64 5), align 8
  %mul = fmul double 6.000000e+00, %3
  %sub = fsub double %2, %mul
  store double %sub, double* %one_link, align 8
  store i32 0, i32* %dir, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc88, %if.end3
  %4 = load i32* %dir, align 4
  %cmp4 = icmp sle i32 %4, 3
  br i1 %cmp4, label %for.body, label %for.end90

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %i, align 4
  %5 = load %struct.site** @lattice, align 8
  store %struct.site* %5, %struct.site** %s, align 8
  br label %for.cond5

for.cond5:                                        ; preds = %for.inc, %for.body
  %6 = load i32* %i, align 4
  %7 = load i32* @sites_on_node, align 4
  %cmp6 = icmp slt i32 %6, %7
  br i1 %cmp6, label %for.body7, label %for.end

for.body7:                                        ; preds = %for.cond5
  %8 = load i32* %i, align 4
  %mul8 = mul nsw i32 4, %8
  %9 = load i32* %dir, align 4
  %add = add nsw i32 %mul8, %9
  %idxprom = sext i32 %add to i64
  %10 = load %struct.su3_matrix** @t_fatlink, align 8
  %arrayidx = getelementptr inbounds %struct.su3_matrix* %10, i64 %idxprom
  store %struct.su3_matrix* %arrayidx, %struct.su3_matrix** %fat1, align 8
  %11 = load i32* %dir, align 4
  %idxprom9 = sext i32 %11 to i64
  %12 = load %struct.site** %s, align 8
  %link = getelementptr inbounds %struct.site* %12, i32 0, i32 8
  %arrayidx10 = getelementptr inbounds [4 x %struct.su3_matrix]* %link, i32 0, i64 %idxprom9
  %13 = load double* %one_link, align 8
  %14 = load %struct.su3_matrix** %fat1, align 8
  call void @scalar_mult_su3_matrix(%struct.su3_matrix* %arrayidx10, double %13, %struct.su3_matrix* %14)
  br label %for.inc

for.inc:                                          ; preds = %for.body7
  %15 = load i32* %i, align 4
  %inc = add nsw i32 %15, 1
  store i32 %inc, i32* %i, align 4
  %16 = load %struct.site** %s, align 8
  %incdec.ptr = getelementptr inbounds %struct.site* %16, i32 1
  store %struct.site* %incdec.ptr, %struct.site** %s, align 8
  br label %for.cond5

for.end:                                          ; preds = %for.cond5
  store i32 0, i32* %nu, align 4
  br label %for.cond11

for.cond11:                                       ; preds = %for.inc85, %for.end
  %17 = load i32* %nu, align 4
  %cmp12 = icmp sle i32 %17, 3
  br i1 %cmp12, label %for.body13, label %for.end87

for.body13:                                       ; preds = %for.cond11
  %18 = load i32* %nu, align 4
  %19 = load i32* %dir, align 4
  %cmp14 = icmp ne i32 %18, %19
  br i1 %cmp14, label %if.then15, label %if.end84

if.then15:                                        ; preds = %for.body13
  %20 = load %struct.site** @lattice, align 8
  %arrayidx16 = getelementptr inbounds %struct.site* %20, i64 0
  %staple = getelementptr inbounds %struct.site* %arrayidx16, i32 0, i32 21
  %21 = bitcast %struct.su3_matrix* %staple to i8*
  %22 = load %struct.site** @lattice, align 8
  %arrayidx17 = getelementptr inbounds %struct.site* %22, i64 0
  %23 = bitcast %struct.site* %arrayidx17 to i8*
  %sub.ptr.lhs.cast = ptrtoint i8* %21 to i64
  %sub.ptr.rhs.cast = ptrtoint i8* %23 to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %conv = trunc i64 %sub.ptr.sub to i32
  %24 = load i32* %dir, align 4
  %25 = load i32* %nu, align 4
  %26 = load i32* %dir, align 4
  %idxprom18 = sext i32 %26 to i64
  %27 = load %struct.site** @lattice, align 8
  %arrayidx19 = getelementptr inbounds %struct.site* %27, i64 0
  %link20 = getelementptr inbounds %struct.site* %arrayidx19, i32 0, i32 8
  %arrayidx21 = getelementptr inbounds [4 x %struct.su3_matrix]* %link20, i32 0, i64 %idxprom18
  %28 = bitcast %struct.su3_matrix* %arrayidx21 to i8*
  %29 = load %struct.site** @lattice, align 8
  %arrayidx22 = getelementptr inbounds %struct.site* %29, i64 0
  %30 = bitcast %struct.site* %arrayidx22 to i8*
  %sub.ptr.lhs.cast23 = ptrtoint i8* %28 to i64
  %sub.ptr.rhs.cast24 = ptrtoint i8* %30 to i64
  %sub.ptr.sub25 = sub i64 %sub.ptr.lhs.cast23, %sub.ptr.rhs.cast24
  %conv26 = trunc i64 %sub.ptr.sub25 to i32
  %31 = load double* getelementptr inbounds ([6 x double]* @act_path_coeff, i32 0, i64 2), align 8
  call void @compute_gen_staple(i32 %conv, i32 %24, i32 %25, i32 %conv26, double %31)
  %32 = load i32* %dir, align 4
  %33 = load i32* %nu, align 4
  %34 = load %struct.site** @lattice, align 8
  %arrayidx27 = getelementptr inbounds %struct.site* %34, i64 0
  %staple28 = getelementptr inbounds %struct.site* %arrayidx27, i32 0, i32 21
  %35 = bitcast %struct.su3_matrix* %staple28 to i8*
  %36 = load %struct.site** @lattice, align 8
  %arrayidx29 = getelementptr inbounds %struct.site* %36, i64 0
  %37 = bitcast %struct.site* %arrayidx29 to i8*
  %sub.ptr.lhs.cast30 = ptrtoint i8* %35 to i64
  %sub.ptr.rhs.cast31 = ptrtoint i8* %37 to i64
  %sub.ptr.sub32 = sub i64 %sub.ptr.lhs.cast30, %sub.ptr.rhs.cast31
  %conv33 = trunc i64 %sub.ptr.sub32 to i32
  %38 = load double* getelementptr inbounds ([6 x double]* @act_path_coeff, i32 0, i64 5), align 8
  call void @compute_gen_staple(i32 -1, i32 %32, i32 %33, i32 %conv33, double %38)
  store i32 0, i32* %rho, align 4
  br label %for.cond34

for.cond34:                                       ; preds = %for.inc81, %if.then15
  %39 = load i32* %rho, align 4
  %cmp35 = icmp sle i32 %39, 3
  br i1 %cmp35, label %for.body37, label %for.end83

for.body37:                                       ; preds = %for.cond34
  %40 = load i32* %rho, align 4
  %41 = load i32* %dir, align 4
  %cmp38 = icmp ne i32 %40, %41
  br i1 %cmp38, label %land.lhs.true, label %if.end80

land.lhs.true:                                    ; preds = %for.body37
  %42 = load i32* %rho, align 4
  %43 = load i32* %nu, align 4
  %cmp40 = icmp ne i32 %42, %43
  br i1 %cmp40, label %if.then42, label %if.end80

if.then42:                                        ; preds = %land.lhs.true
  %44 = load %struct.site** @lattice, align 8
  %arrayidx43 = getelementptr inbounds %struct.site* %44, i64 0
  %tempmat1 = getelementptr inbounds %struct.site* %arrayidx43, i32 0, i32 20
  %45 = bitcast %struct.su3_matrix* %tempmat1 to i8*
  %46 = load %struct.site** @lattice, align 8
  %arrayidx44 = getelementptr inbounds %struct.site* %46, i64 0
  %47 = bitcast %struct.site* %arrayidx44 to i8*
  %sub.ptr.lhs.cast45 = ptrtoint i8* %45 to i64
  %sub.ptr.rhs.cast46 = ptrtoint i8* %47 to i64
  %sub.ptr.sub47 = sub i64 %sub.ptr.lhs.cast45, %sub.ptr.rhs.cast46
  %conv48 = trunc i64 %sub.ptr.sub47 to i32
  %48 = load i32* %dir, align 4
  %49 = load i32* %rho, align 4
  %50 = load %struct.site** @lattice, align 8
  %arrayidx49 = getelementptr inbounds %struct.site* %50, i64 0
  %staple50 = getelementptr inbounds %struct.site* %arrayidx49, i32 0, i32 21
  %51 = bitcast %struct.su3_matrix* %staple50 to i8*
  %52 = load %struct.site** @lattice, align 8
  %arrayidx51 = getelementptr inbounds %struct.site* %52, i64 0
  %53 = bitcast %struct.site* %arrayidx51 to i8*
  %sub.ptr.lhs.cast52 = ptrtoint i8* %51 to i64
  %sub.ptr.rhs.cast53 = ptrtoint i8* %53 to i64
  %sub.ptr.sub54 = sub i64 %sub.ptr.lhs.cast52, %sub.ptr.rhs.cast53
  %conv55 = trunc i64 %sub.ptr.sub54 to i32
  %54 = load double* getelementptr inbounds ([6 x double]* @act_path_coeff, i32 0, i64 3), align 8
  call void @compute_gen_staple(i32 %conv48, i32 %48, i32 %49, i32 %conv55, double %54)
  store i32 0, i32* %sig, align 4
  br label %for.cond56

for.cond56:                                       ; preds = %for.inc77, %if.then42
  %55 = load i32* %sig, align 4
  %cmp57 = icmp sle i32 %55, 3
  br i1 %cmp57, label %for.body59, label %for.end79

for.body59:                                       ; preds = %for.cond56
  %56 = load i32* %sig, align 4
  %57 = load i32* %dir, align 4
  %cmp60 = icmp ne i32 %56, %57
  br i1 %cmp60, label %land.lhs.true62, label %if.end76

land.lhs.true62:                                  ; preds = %for.body59
  %58 = load i32* %sig, align 4
  %59 = load i32* %nu, align 4
  %cmp63 = icmp ne i32 %58, %59
  br i1 %cmp63, label %land.lhs.true65, label %if.end76

land.lhs.true65:                                  ; preds = %land.lhs.true62
  %60 = load i32* %sig, align 4
  %61 = load i32* %rho, align 4
  %cmp66 = icmp ne i32 %60, %61
  br i1 %cmp66, label %if.then68, label %if.end76

if.then68:                                        ; preds = %land.lhs.true65
  %62 = load i32* %dir, align 4
  %63 = load i32* %sig, align 4
  %64 = load %struct.site** @lattice, align 8
  %arrayidx69 = getelementptr inbounds %struct.site* %64, i64 0
  %tempmat170 = getelementptr inbounds %struct.site* %arrayidx69, i32 0, i32 20
  %65 = bitcast %struct.su3_matrix* %tempmat170 to i8*
  %66 = load %struct.site** @lattice, align 8
  %arrayidx71 = getelementptr inbounds %struct.site* %66, i64 0
  %67 = bitcast %struct.site* %arrayidx71 to i8*
  %sub.ptr.lhs.cast72 = ptrtoint i8* %65 to i64
  %sub.ptr.rhs.cast73 = ptrtoint i8* %67 to i64
  %sub.ptr.sub74 = sub i64 %sub.ptr.lhs.cast72, %sub.ptr.rhs.cast73
  %conv75 = trunc i64 %sub.ptr.sub74 to i32
  %68 = load double* getelementptr inbounds ([6 x double]* @act_path_coeff, i32 0, i64 4), align 8
  call void @compute_gen_staple(i32 -1, i32 %62, i32 %63, i32 %conv75, double %68)
  br label %if.end76

if.end76:                                         ; preds = %if.then68, %land.lhs.true65, %land.lhs.true62, %for.body59
  br label %for.inc77

for.inc77:                                        ; preds = %if.end76
  %69 = load i32* %sig, align 4
  %inc78 = add nsw i32 %69, 1
  store i32 %inc78, i32* %sig, align 4
  br label %for.cond56

for.end79:                                        ; preds = %for.cond56
  br label %if.end80

if.end80:                                         ; preds = %for.end79, %land.lhs.true, %for.body37
  br label %for.inc81

for.inc81:                                        ; preds = %if.end80
  %70 = load i32* %rho, align 4
  %inc82 = add nsw i32 %70, 1
  store i32 %inc82, i32* %rho, align 4
  br label %for.cond34

for.end83:                                        ; preds = %for.cond34
  br label %if.end84

if.end84:                                         ; preds = %for.end83, %for.body13
  br label %for.inc85

for.inc85:                                        ; preds = %if.end84
  %71 = load i32* %nu, align 4
  %inc86 = add nsw i32 %71, 1
  store i32 %inc86, i32* %nu, align 4
  br label %for.cond11

for.end87:                                        ; preds = %for.cond11
  br label %for.inc88

for.inc88:                                        ; preds = %for.end87
  %72 = load i32* %dir, align 4
  %inc89 = add nsw i32 %72, 1
  store i32 %inc89, i32* %dir, align 4
  br label %for.cond

for.end90:                                        ; preds = %for.cond
  store i32 1, i32* @valid_fatlinks, align 4
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @compute_gen_staple(i32 %staple, i32 %mu, i32 %nu, i32 %link, double %coef) #0 {
entry:
  %staple.addr = alloca i32, align 4
  %mu.addr = alloca i32, align 4
  %nu.addr = alloca i32, align 4
  %link.addr = alloca i32, align 4
  %coef.addr = alloca double, align 8
  %tmat1 = alloca %struct.su3_matrix, align 8
  %tmat2 = alloca %struct.su3_matrix, align 8
  %mtag0 = alloca %struct.msg_tag*, align 8
  %mtag1 = alloca %struct.msg_tag*, align 8
  %tempmat = alloca %struct.su3_matrix*, align 8
  %s = alloca %struct.site*, align 8
  %i = alloca i32, align 4
  %fat1 = alloca %struct.su3_matrix*, align 8
  store i32 %staple, i32* %staple.addr, align 4
  store i32 %mu, i32* %mu.addr, align 4
  store i32 %nu, i32* %nu.addr, align 4
  store i32 %link, i32* %link.addr, align 4
  store double %coef, double* %coef.addr, align 8
  %0 = load i32* %link.addr, align 4
  %1 = load i32* %nu.addr, align 4
  %2 = load i8*** getelementptr inbounds ([16 x i8**]* @gen_pt, i32 0, i64 0), align 8
  %call = call %struct.msg_tag* @start_gather(i32 %0, i32 144, i32 %1, i32 3, i8** %2)
  store %struct.msg_tag* %call, %struct.msg_tag** %mtag0, align 8
  %3 = load i32* %nu.addr, align 4
  %idxprom = sext i32 %3 to i64
  %4 = load %struct.site** @lattice, align 8
  %arrayidx = getelementptr inbounds %struct.site* %4, i64 0
  %link1 = getelementptr inbounds %struct.site* %arrayidx, i32 0, i32 8
  %arrayidx2 = getelementptr inbounds [4 x %struct.su3_matrix]* %link1, i32 0, i64 %idxprom
  %5 = bitcast %struct.su3_matrix* %arrayidx2 to i8*
  %6 = load %struct.site** @lattice, align 8
  %arrayidx3 = getelementptr inbounds %struct.site* %6, i64 0
  %7 = bitcast %struct.site* %arrayidx3 to i8*
  %sub.ptr.lhs.cast = ptrtoint i8* %5 to i64
  %sub.ptr.rhs.cast = ptrtoint i8* %7 to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %conv = trunc i64 %sub.ptr.sub to i32
  %8 = load i32* %mu.addr, align 4
  %9 = load i8*** getelementptr inbounds ([16 x i8**]* @gen_pt, i32 0, i64 1), align 8
  %call4 = call %struct.msg_tag* @start_gather(i32 %conv, i32 144, i32 %8, i32 3, i8** %9)
  store %struct.msg_tag* %call4, %struct.msg_tag** %mtag1, align 8
  %10 = load %struct.msg_tag** %mtag0, align 8
  call void @wait_gather(%struct.msg_tag* %10)
  %11 = load %struct.msg_tag** %mtag1, align 8
  call void @wait_gather(%struct.msg_tag* %11)
  %12 = load i32* %staple.addr, align 4
  %cmp = icmp ne i32 %12, -1
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  store i32 0, i32* %i, align 4
  %13 = load %struct.site** @lattice, align 8
  store %struct.site* %13, %struct.site** %s, align 8
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.then
  %14 = load i32* %i, align 4
  %15 = load i32* @sites_on_node, align 4
  %cmp6 = icmp slt i32 %14, %15
  br i1 %cmp6, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %16 = load i32* %i, align 4
  %idxprom8 = sext i32 %16 to i64
  %17 = load i8*** getelementptr inbounds ([16 x i8**]* @gen_pt, i32 0, i64 0), align 8
  %arrayidx9 = getelementptr inbounds i8** %17, i64 %idxprom8
  %18 = load i8** %arrayidx9, align 8
  %19 = bitcast i8* %18 to %struct.su3_matrix*
  %20 = load i32* %i, align 4
  %idxprom10 = sext i32 %20 to i64
  %21 = load i8*** getelementptr inbounds ([16 x i8**]* @gen_pt, i32 0, i64 1), align 8
  %arrayidx11 = getelementptr inbounds i8** %21, i64 %idxprom10
  %22 = load i8** %arrayidx11, align 8
  %23 = bitcast i8* %22 to %struct.su3_matrix*
  call void @mult_su3_na(%struct.su3_matrix* %19, %struct.su3_matrix* %23, %struct.su3_matrix* %tmat1)
  %24 = load i32* %nu.addr, align 4
  %idxprom12 = sext i32 %24 to i64
  %25 = load %struct.site** %s, align 8
  %link13 = getelementptr inbounds %struct.site* %25, i32 0, i32 8
  %arrayidx14 = getelementptr inbounds [4 x %struct.su3_matrix]* %link13, i32 0, i64 %idxprom12
  %26 = load %struct.site** %s, align 8
  %27 = bitcast %struct.site* %26 to i8*
  %28 = load i32* %staple.addr, align 4
  %idx.ext = sext i32 %28 to i64
  %add.ptr = getelementptr inbounds i8* %27, i64 %idx.ext
  %29 = bitcast i8* %add.ptr to %struct.su3_matrix*
  call void @mult_su3_nn(%struct.su3_matrix* %arrayidx14, %struct.su3_matrix* %tmat1, %struct.su3_matrix* %29)
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %30 = load i32* %i, align 4
  %inc = add nsw i32 %30, 1
  store i32 %inc, i32* %i, align 4
  %31 = load %struct.site** %s, align 8
  %incdec.ptr = getelementptr inbounds %struct.site* %31, i32 1
  store %struct.site* %incdec.ptr, %struct.site** %s, align 8
  br label %for.cond

for.end:                                          ; preds = %for.cond
  br label %if.end

if.else:                                          ; preds = %entry
  store i32 0, i32* %i, align 4
  %32 = load %struct.site** @lattice, align 8
  store %struct.site* %32, %struct.site** %s, align 8
  br label %for.cond15

for.cond15:                                       ; preds = %for.inc28, %if.else
  %33 = load i32* %i, align 4
  %34 = load i32* @sites_on_node, align 4
  %cmp16 = icmp slt i32 %33, %34
  br i1 %cmp16, label %for.body18, label %for.end31

for.body18:                                       ; preds = %for.cond15
  %35 = load i32* %i, align 4
  %idxprom19 = sext i32 %35 to i64
  %36 = load i8*** getelementptr inbounds ([16 x i8**]* @gen_pt, i32 0, i64 0), align 8
  %arrayidx20 = getelementptr inbounds i8** %36, i64 %idxprom19
  %37 = load i8** %arrayidx20, align 8
  %38 = bitcast i8* %37 to %struct.su3_matrix*
  %39 = load i32* %i, align 4
  %idxprom21 = sext i32 %39 to i64
  %40 = load i8*** getelementptr inbounds ([16 x i8**]* @gen_pt, i32 0, i64 1), align 8
  %arrayidx22 = getelementptr inbounds i8** %40, i64 %idxprom21
  %41 = load i8** %arrayidx22, align 8
  %42 = bitcast i8* %41 to %struct.su3_matrix*
  call void @mult_su3_na(%struct.su3_matrix* %38, %struct.su3_matrix* %42, %struct.su3_matrix* %tmat1)
  %43 = load i32* %nu.addr, align 4
  %idxprom23 = sext i32 %43 to i64
  %44 = load %struct.site** %s, align 8
  %link24 = getelementptr inbounds %struct.site* %44, i32 0, i32 8
  %arrayidx25 = getelementptr inbounds [4 x %struct.su3_matrix]* %link24, i32 0, i64 %idxprom23
  call void @mult_su3_nn(%struct.su3_matrix* %arrayidx25, %struct.su3_matrix* %tmat1, %struct.su3_matrix* %tmat2)
  %45 = load i32* %i, align 4
  %mul = mul nsw i32 4, %45
  %46 = load i32* %mu.addr, align 4
  %add = add nsw i32 %mul, %46
  %idxprom26 = sext i32 %add to i64
  %47 = load %struct.su3_matrix** @t_fatlink, align 8
  %arrayidx27 = getelementptr inbounds %struct.su3_matrix* %47, i64 %idxprom26
  store %struct.su3_matrix* %arrayidx27, %struct.su3_matrix** %fat1, align 8
  %48 = load %struct.su3_matrix** %fat1, align 8
  %49 = load double* %coef.addr, align 8
  %50 = load %struct.su3_matrix** %fat1, align 8
  call void @scalar_mult_add_su3_matrix(%struct.su3_matrix* %48, %struct.su3_matrix* %tmat2, double %49, %struct.su3_matrix* %50)
  br label %for.inc28

for.inc28:                                        ; preds = %for.body18
  %51 = load i32* %i, align 4
  %inc29 = add nsw i32 %51, 1
  store i32 %inc29, i32* %i, align 4
  %52 = load %struct.site** %s, align 8
  %incdec.ptr30 = getelementptr inbounds %struct.site* %52, i32 1
  store %struct.site* %incdec.ptr30, %struct.site** %s, align 8
  br label %for.cond15

for.end31:                                        ; preds = %for.cond15
  br label %if.end

if.end:                                           ; preds = %for.end31, %for.end
  %53 = load %struct.msg_tag** %mtag0, align 8
  call void @cleanup_gather(%struct.msg_tag* %53)
  %54 = load %struct.msg_tag** %mtag1, align 8
  call void @cleanup_gather(%struct.msg_tag* %54)
  %55 = load i32* @sites_on_node, align 4
  %conv32 = sext i32 %55 to i64
  %call33 = call noalias i8* @calloc(i64 %conv32, i64 144) #2
  %56 = bitcast i8* %call33 to %struct.su3_matrix*
  store %struct.su3_matrix* %56, %struct.su3_matrix** %tempmat, align 8
  %57 = load i32* %nu.addr, align 4
  %idxprom34 = sext i32 %57 to i64
  %58 = load %struct.site** @lattice, align 8
  %arrayidx35 = getelementptr inbounds %struct.site* %58, i64 0
  %link36 = getelementptr inbounds %struct.site* %arrayidx35, i32 0, i32 8
  %arrayidx37 = getelementptr inbounds [4 x %struct.su3_matrix]* %link36, i32 0, i64 %idxprom34
  %59 = bitcast %struct.su3_matrix* %arrayidx37 to i8*
  %60 = load %struct.site** @lattice, align 8
  %arrayidx38 = getelementptr inbounds %struct.site* %60, i64 0
  %61 = bitcast %struct.site* %arrayidx38 to i8*
  %sub.ptr.lhs.cast39 = ptrtoint i8* %59 to i64
  %sub.ptr.rhs.cast40 = ptrtoint i8* %61 to i64
  %sub.ptr.sub41 = sub i64 %sub.ptr.lhs.cast39, %sub.ptr.rhs.cast40
  %conv42 = trunc i64 %sub.ptr.sub41 to i32
  %62 = load i32* %mu.addr, align 4
  %63 = load i8*** getelementptr inbounds ([16 x i8**]* @gen_pt, i32 0, i64 0), align 8
  %call43 = call %struct.msg_tag* @start_gather(i32 %conv42, i32 144, i32 %62, i32 3, i8** %63)
  store %struct.msg_tag* %call43, %struct.msg_tag** %mtag0, align 8
  %64 = load %struct.msg_tag** %mtag0, align 8
  call void @wait_gather(%struct.msg_tag* %64)
  store i32 0, i32* %i, align 4
  %65 = load %struct.site** @lattice, align 8
  store %struct.site* %65, %struct.site** %s, align 8
  br label %for.cond44

for.cond44:                                       ; preds = %for.inc57, %if.end
  %66 = load i32* %i, align 4
  %67 = load i32* @sites_on_node, align 4
  %cmp45 = icmp slt i32 %66, %67
  br i1 %cmp45, label %for.body47, label %for.end60

for.body47:                                       ; preds = %for.cond44
  %68 = load i32* %nu.addr, align 4
  %idxprom48 = sext i32 %68 to i64
  %69 = load %struct.site** %s, align 8
  %link49 = getelementptr inbounds %struct.site* %69, i32 0, i32 8
  %arrayidx50 = getelementptr inbounds [4 x %struct.su3_matrix]* %link49, i32 0, i64 %idxprom48
  %70 = load %struct.site** %s, align 8
  %71 = bitcast %struct.site* %70 to i8*
  %72 = load i32* %link.addr, align 4
  %idx.ext51 = sext i32 %72 to i64
  %add.ptr52 = getelementptr inbounds i8* %71, i64 %idx.ext51
  %73 = bitcast i8* %add.ptr52 to %struct.su3_matrix*
  call void @mult_su3_an(%struct.su3_matrix* %arrayidx50, %struct.su3_matrix* %73, %struct.su3_matrix* %tmat1)
  %74 = load i32* %i, align 4
  %idxprom53 = sext i32 %74 to i64
  %75 = load i8*** getelementptr inbounds ([16 x i8**]* @gen_pt, i32 0, i64 0), align 8
  %arrayidx54 = getelementptr inbounds i8** %75, i64 %idxprom53
  %76 = load i8** %arrayidx54, align 8
  %77 = bitcast i8* %76 to %struct.su3_matrix*
  %78 = load i32* %i, align 4
  %idxprom55 = sext i32 %78 to i64
  %79 = load %struct.su3_matrix** %tempmat, align 8
  %arrayidx56 = getelementptr inbounds %struct.su3_matrix* %79, i64 %idxprom55
  call void @mult_su3_nn(%struct.su3_matrix* %tmat1, %struct.su3_matrix* %77, %struct.su3_matrix* %arrayidx56)
  br label %for.inc57

for.inc57:                                        ; preds = %for.body47
  %80 = load i32* %i, align 4
  %inc58 = add nsw i32 %80, 1
  store i32 %inc58, i32* %i, align 4
  %81 = load %struct.site** %s, align 8
  %incdec.ptr59 = getelementptr inbounds %struct.site* %81, i32 1
  store %struct.site* %incdec.ptr59, %struct.site** %s, align 8
  br label %for.cond44

for.end60:                                        ; preds = %for.cond44
  %82 = load %struct.msg_tag** %mtag0, align 8
  call void @cleanup_gather(%struct.msg_tag* %82)
  %83 = load %struct.su3_matrix** %tempmat, align 8
  %84 = bitcast %struct.su3_matrix* %83 to i8*
  %85 = load i32* %nu.addr, align 4
  %sub = sub nsw i32 7, %85
  %86 = load i8*** getelementptr inbounds ([16 x i8**]* @gen_pt, i32 0, i64 0), align 8
  %call61 = call %struct.msg_tag* @start_gather_from_temp(i8* %84, i32 144, i32 %sub, i32 3, i8** %86)
  store %struct.msg_tag* %call61, %struct.msg_tag** %mtag0, align 8
  %87 = load %struct.msg_tag** %mtag0, align 8
  call void @wait_gather(%struct.msg_tag* %87)
  %88 = load i32* %staple.addr, align 4
  %cmp62 = icmp ne i32 %88, -1
  br i1 %cmp62, label %if.then64, label %if.else85

if.then64:                                        ; preds = %for.end60
  store i32 0, i32* %i, align 4
  %89 = load %struct.site** @lattice, align 8
  store %struct.site* %89, %struct.site** %s, align 8
  br label %for.cond65

for.cond65:                                       ; preds = %for.inc81, %if.then64
  %90 = load i32* %i, align 4
  %91 = load i32* @sites_on_node, align 4
  %cmp66 = icmp slt i32 %90, %91
  br i1 %cmp66, label %for.body68, label %for.end84

for.body68:                                       ; preds = %for.cond65
  %92 = load %struct.site** %s, align 8
  %93 = bitcast %struct.site* %92 to i8*
  %94 = load i32* %staple.addr, align 4
  %idx.ext69 = sext i32 %94 to i64
  %add.ptr70 = getelementptr inbounds i8* %93, i64 %idx.ext69
  %95 = bitcast i8* %add.ptr70 to %struct.su3_matrix*
  %96 = load i32* %i, align 4
  %idxprom71 = sext i32 %96 to i64
  %97 = load i8*** getelementptr inbounds ([16 x i8**]* @gen_pt, i32 0, i64 0), align 8
  %arrayidx72 = getelementptr inbounds i8** %97, i64 %idxprom71
  %98 = load i8** %arrayidx72, align 8
  %99 = bitcast i8* %98 to %struct.su3_matrix*
  %100 = load %struct.site** %s, align 8
  %101 = bitcast %struct.site* %100 to i8*
  %102 = load i32* %staple.addr, align 4
  %idx.ext73 = sext i32 %102 to i64
  %add.ptr74 = getelementptr inbounds i8* %101, i64 %idx.ext73
  %103 = bitcast i8* %add.ptr74 to %struct.su3_matrix*
  call void @add_su3_matrix(%struct.su3_matrix* %95, %struct.su3_matrix* %99, %struct.su3_matrix* %103)
  %104 = load i32* %i, align 4
  %mul75 = mul nsw i32 4, %104
  %105 = load i32* %mu.addr, align 4
  %add76 = add nsw i32 %mul75, %105
  %idxprom77 = sext i32 %add76 to i64
  %106 = load %struct.su3_matrix** @t_fatlink, align 8
  %arrayidx78 = getelementptr inbounds %struct.su3_matrix* %106, i64 %idxprom77
  store %struct.su3_matrix* %arrayidx78, %struct.su3_matrix** %fat1, align 8
  %107 = load %struct.su3_matrix** %fat1, align 8
  %108 = load %struct.site** %s, align 8
  %109 = bitcast %struct.site* %108 to i8*
  %110 = load i32* %staple.addr, align 4
  %idx.ext79 = sext i32 %110 to i64
  %add.ptr80 = getelementptr inbounds i8* %109, i64 %idx.ext79
  %111 = bitcast i8* %add.ptr80 to %struct.su3_matrix*
  %112 = load double* %coef.addr, align 8
  %113 = load %struct.su3_matrix** %fat1, align 8
  call void @scalar_mult_add_su3_matrix(%struct.su3_matrix* %107, %struct.su3_matrix* %111, double %112, %struct.su3_matrix* %113)
  br label %for.inc81

for.inc81:                                        ; preds = %for.body68
  %114 = load i32* %i, align 4
  %inc82 = add nsw i32 %114, 1
  store i32 %inc82, i32* %i, align 4
  %115 = load %struct.site** %s, align 8
  %incdec.ptr83 = getelementptr inbounds %struct.site* %115, i32 1
  store %struct.site* %incdec.ptr83, %struct.site** %s, align 8
  br label %for.cond65

for.end84:                                        ; preds = %for.cond65
  br label %if.end100

if.else85:                                        ; preds = %for.end60
  store i32 0, i32* %i, align 4
  %116 = load %struct.site** @lattice, align 8
  store %struct.site* %116, %struct.site** %s, align 8
  br label %for.cond86

for.cond86:                                       ; preds = %for.inc96, %if.else85
  %117 = load i32* %i, align 4
  %118 = load i32* @sites_on_node, align 4
  %cmp87 = icmp slt i32 %117, %118
  br i1 %cmp87, label %for.body89, label %for.end99

for.body89:                                       ; preds = %for.cond86
  %119 = load i32* %i, align 4
  %mul90 = mul nsw i32 4, %119
  %120 = load i32* %mu.addr, align 4
  %add91 = add nsw i32 %mul90, %120
  %idxprom92 = sext i32 %add91 to i64
  %121 = load %struct.su3_matrix** @t_fatlink, align 8
  %arrayidx93 = getelementptr inbounds %struct.su3_matrix* %121, i64 %idxprom92
  store %struct.su3_matrix* %arrayidx93, %struct.su3_matrix** %fat1, align 8
  %122 = load %struct.su3_matrix** %fat1, align 8
  %123 = load i32* %i, align 4
  %idxprom94 = sext i32 %123 to i64
  %124 = load i8*** getelementptr inbounds ([16 x i8**]* @gen_pt, i32 0, i64 0), align 8
  %arrayidx95 = getelementptr inbounds i8** %124, i64 %idxprom94
  %125 = load i8** %arrayidx95, align 8
  %126 = bitcast i8* %125 to %struct.su3_matrix*
  %127 = load double* %coef.addr, align 8
  %128 = load %struct.su3_matrix** %fat1, align 8
  call void @scalar_mult_add_su3_matrix(%struct.su3_matrix* %122, %struct.su3_matrix* %126, double %127, %struct.su3_matrix* %128)
  br label %for.inc96

for.inc96:                                        ; preds = %for.body89
  %129 = load i32* %i, align 4
  %inc97 = add nsw i32 %129, 1
  store i32 %inc97, i32* %i, align 4
  %130 = load %struct.site** %s, align 8
  %incdec.ptr98 = getelementptr inbounds %struct.site* %130, i32 1
  store %struct.site* %incdec.ptr98, %struct.site** %s, align 8
  br label %for.cond86

for.end99:                                        ; preds = %for.cond86
  br label %if.end100

if.end100:                                        ; preds = %for.end99, %for.end84
  %131 = load %struct.su3_matrix** %tempmat, align 8
  %132 = bitcast %struct.su3_matrix* %131 to i8*
  call void @free(i8* %132) #2
  %133 = load %struct.msg_tag** %mtag0, align 8
  call void @cleanup_gather(%struct.msg_tag* %133)
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @eo_fermion_force(double %eps, i32 %nflavors, i32 %x_off) #0 {
entry:
  %eps.addr = alloca double, align 8
  %nflavors.addr = alloca i32, align 4
  %x_off.addr = alloca i32, align 4
  %i = alloca i32, align 4
  %s = alloca %struct.site*, align 8
  %mu = alloca i32, align 4
  %nu = alloca i32, align 4
  %rho = alloca i32, align 4
  %sig = alloca i32, align 4
  %DirectLinks = alloca [8 x i32], align 16
  %ferm_epsilon = alloca double, align 8
  %coeff = alloca double, align 8
  %OneLink = alloca double, align 8
  %Lepage = alloca double, align 8
  %Naik = alloca double, align 8
  %FiveSt = alloca double, align 8
  %ThreeSt = alloca double, align 8
  %SevenSt = alloca double, align 8
  %tempvec = alloca [8 x %struct.su3_vector*], align 16
  %temp_x = alloca %struct.su3_vector*, align 8
  store double %eps, double* %eps.addr, align 8
  store i32 %nflavors, i32* %nflavors.addr, align 4
  store i32 %x_off, i32* %x_off.addr, align 4
  %0 = load i32* %nflavors.addr, align 4
  %conv = sitofp i32 %0 to double
  %div = fdiv double %conv, 4.000000e+00
  %mul = fmul double 2.000000e+00, %div
  %1 = load double* %eps.addr, align 8
  %mul1 = fmul double %mul, %1
  store double %mul1, double* %ferm_epsilon, align 8
  %2 = load double* getelementptr inbounds ([6 x double]* @act_path_coeff, i32 0, i64 0), align 8
  %3 = load double* %ferm_epsilon, align 8
  %mul2 = fmul double %2, %3
  store double %mul2, double* %OneLink, align 8
  %4 = load double* getelementptr inbounds ([6 x double]* @act_path_coeff, i32 0, i64 1), align 8
  %5 = load double* %ferm_epsilon, align 8
  %mul3 = fmul double %4, %5
  store double %mul3, double* %Naik, align 8
  %6 = load double* getelementptr inbounds ([6 x double]* @act_path_coeff, i32 0, i64 2), align 8
  %7 = load double* %ferm_epsilon, align 8
  %mul4 = fmul double %6, %7
  store double %mul4, double* %ThreeSt, align 8
  %8 = load double* getelementptr inbounds ([6 x double]* @act_path_coeff, i32 0, i64 3), align 8
  %9 = load double* %ferm_epsilon, align 8
  %mul5 = fmul double %8, %9
  store double %mul5, double* %FiveSt, align 8
  %10 = load double* getelementptr inbounds ([6 x double]* @act_path_coeff, i32 0, i64 4), align 8
  %11 = load double* %ferm_epsilon, align 8
  %mul6 = fmul double %10, %11
  store double %mul6, double* %SevenSt, align 8
  %12 = load double* getelementptr inbounds ([6 x double]* @act_path_coeff, i32 0, i64 5), align 8
  %13 = load double* %ferm_epsilon, align 8
  %mul7 = fmul double %12, %13
  store double %mul7, double* %Lepage, align 8
  store i32 0, i32* %mu, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %14 = load i32* %mu, align 4
  %cmp = icmp slt i32 %14, 8
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %15 = load i32* %mu, align 4
  %idxprom = sext i32 %15 to i64
  %arrayidx = getelementptr inbounds [8 x i32]* %DirectLinks, i32 0, i64 %idxprom
  store i32 0, i32* %arrayidx, align 4
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %16 = load i32* %mu, align 4
  %inc = add nsw i32 %16, 1
  store i32 %inc, i32* %mu, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  store i32 0, i32* %mu, align 4
  br label %for.cond9

for.cond9:                                        ; preds = %for.inc16, %for.end
  %17 = load i32* %mu, align 4
  %cmp10 = icmp slt i32 %17, 8
  br i1 %cmp10, label %for.body12, label %for.end18

for.body12:                                       ; preds = %for.cond9
  %18 = load i32* @sites_on_node, align 4
  %conv13 = sext i32 %18 to i64
  %call = call noalias i8* @calloc(i64 %conv13, i64 48) #2
  %19 = bitcast i8* %call to %struct.su3_vector*
  %20 = load i32* %mu, align 4
  %idxprom14 = sext i32 %20 to i64
  %arrayidx15 = getelementptr inbounds [8 x %struct.su3_vector*]* %tempvec, i32 0, i64 %idxprom14
  store %struct.su3_vector* %19, %struct.su3_vector** %arrayidx15, align 8
  br label %for.inc16

for.inc16:                                        ; preds = %for.body12
  %21 = load i32* %mu, align 4
  %inc17 = add nsw i32 %21, 1
  store i32 %inc17, i32* %mu, align 4
  br label %for.cond9

for.end18:                                        ; preds = %for.cond9
  %22 = load i32* @sites_on_node, align 4
  %conv19 = sext i32 %22 to i64
  %call20 = call noalias i8* @calloc(i64 %conv19, i64 48) #2
  %23 = bitcast i8* %call20 to %struct.su3_vector*
  store %struct.su3_vector* %23, %struct.su3_vector** %temp_x, align 8
  store i32 0, i32* %i, align 4
  %24 = load %struct.site** @lattice, align 8
  store %struct.site* %24, %struct.site** %s, align 8
  br label %for.cond21

for.cond21:                                       ; preds = %for.inc27, %for.end18
  %25 = load i32* %i, align 4
  %26 = load i32* @sites_on_node, align 4
  %cmp22 = icmp slt i32 %25, %26
  br i1 %cmp22, label %for.body24, label %for.end29

for.body24:                                       ; preds = %for.cond21
  %27 = load i32* %i, align 4
  %idxprom25 = sext i32 %27 to i64
  %28 = load %struct.su3_vector** %temp_x, align 8
  %arrayidx26 = getelementptr inbounds %struct.su3_vector* %28, i64 %idxprom25
  %29 = load %struct.site** %s, align 8
  %30 = bitcast %struct.site* %29 to i8*
  %31 = load i32* %x_off.addr, align 4
  %idx.ext = sext i32 %31 to i64
  %add.ptr = getelementptr inbounds i8* %30, i64 %idx.ext
  %32 = bitcast i8* %add.ptr to %struct.su3_vector*
  %33 = bitcast %struct.su3_vector* %arrayidx26 to i8*
  %34 = bitcast %struct.su3_vector* %32 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %33, i8* %34, i64 48, i32 8, i1 false)
  br label %for.inc27

for.inc27:                                        ; preds = %for.body24
  %35 = load i32* %i, align 4
  %inc28 = add nsw i32 %35, 1
  store i32 %inc28, i32* %i, align 4
  %36 = load %struct.site** %s, align 8
  %incdec.ptr = getelementptr inbounds %struct.site* %36, i32 1
  store %struct.site* %incdec.ptr, %struct.site** %s, align 8
  br label %for.cond21

for.end29:                                        ; preds = %for.cond21
  store i32 0, i32* %sig, align 4
  br label %for.cond30

for.cond30:                                       ; preds = %for.inc249, %for.end29
  %37 = load i32* %sig, align 4
  %cmp31 = icmp slt i32 %37, 8
  br i1 %cmp31, label %for.body33, label %for.end251

for.body33:                                       ; preds = %for.cond30
  store i32 0, i32* %mu, align 4
  br label %for.cond34

for.cond34:                                       ; preds = %for.inc246, %for.body33
  %38 = load i32* %mu, align 4
  %cmp35 = icmp slt i32 %38, 8
  br i1 %cmp35, label %for.body37, label %for.end248

for.body37:                                       ; preds = %for.cond34
  %39 = load i32* %mu, align 4
  %40 = load i32* %sig, align 4
  %cmp38 = icmp ne i32 %39, %40
  br i1 %cmp38, label %land.lhs.true, label %if.end245

land.lhs.true:                                    ; preds = %for.body37
  %41 = load i32* %mu, align 4
  %42 = load i32* %sig, align 4
  %sub = sub nsw i32 7, %42
  %cmp40 = icmp ne i32 %41, %sub
  br i1 %cmp40, label %if.then, label %if.end245

if.then:                                          ; preds = %land.lhs.true
  %43 = load %struct.su3_vector** %temp_x, align 8
  %arrayidx42 = getelementptr inbounds [8 x %struct.su3_vector*]* %tempvec, i32 0, i64 0
  %44 = load %struct.su3_vector** %arrayidx42, align 8
  %45 = load i32* %mu, align 4
  %sub43 = sub nsw i32 7, %45
  call void @u_shift_fermion(%struct.su3_vector* %43, %struct.su3_vector* %44, i32 %sub43)
  %arrayidx44 = getelementptr inbounds [8 x %struct.su3_vector*]* %tempvec, i32 0, i64 0
  %46 = load %struct.su3_vector** %arrayidx44, align 8
  %arrayidx45 = getelementptr inbounds [8 x %struct.su3_vector*]* %tempvec, i32 0, i64 7
  %47 = load %struct.su3_vector** %arrayidx45, align 8
  %48 = load i32* %sig, align 4
  call void @u_shift_fermion(%struct.su3_vector* %46, %struct.su3_vector* %47, i32 %48)
  %49 = load i32* %sig, align 4
  %cmp46 = icmp sle i32 %49, 3
  br i1 %cmp46, label %if.then48, label %if.end

if.then48:                                        ; preds = %if.then
  %arrayidx49 = getelementptr inbounds [8 x %struct.su3_vector*]* %tempvec, i32 0, i64 7
  %50 = load %struct.su3_vector** %arrayidx49, align 8
  %arrayidx50 = getelementptr inbounds [8 x %struct.su3_vector*]* %tempvec, i32 0, i64 0
  %51 = load %struct.su3_vector** %arrayidx50, align 8
  %52 = load i32* %sig, align 4
  %53 = load double* %ThreeSt, align 8
  %sub51 = fsub double -0.000000e+00, %53
  call void @add_force_to_mom(%struct.su3_vector* %50, %struct.su3_vector* %51, i32 %52, double %sub51)
  br label %if.end

if.end:                                           ; preds = %if.then48, %if.then
  store i32 0, i32* %nu, align 4
  br label %for.cond52

for.cond52:                                       ; preds = %for.inc172, %if.end
  %54 = load i32* %nu, align 4
  %cmp53 = icmp slt i32 %54, 8
  br i1 %cmp53, label %for.body55, label %for.end174

for.body55:                                       ; preds = %for.cond52
  %55 = load i32* %nu, align 4
  %56 = load i32* %mu, align 4
  %cmp56 = icmp ne i32 %55, %56
  br i1 %cmp56, label %land.lhs.true58, label %if.end171

land.lhs.true58:                                  ; preds = %for.body55
  %57 = load i32* %nu, align 4
  %58 = load i32* %mu, align 4
  %sub59 = sub nsw i32 7, %58
  %cmp60 = icmp ne i32 %57, %sub59
  br i1 %cmp60, label %land.lhs.true62, label %if.end171

land.lhs.true62:                                  ; preds = %land.lhs.true58
  %59 = load i32* %nu, align 4
  %60 = load i32* %sig, align 4
  %cmp63 = icmp ne i32 %59, %60
  br i1 %cmp63, label %land.lhs.true65, label %if.end171

land.lhs.true65:                                  ; preds = %land.lhs.true62
  %61 = load i32* %nu, align 4
  %62 = load i32* %sig, align 4
  %sub66 = sub nsw i32 7, %62
  %cmp67 = icmp ne i32 %61, %sub66
  br i1 %cmp67, label %if.then69, label %if.end171

if.then69:                                        ; preds = %land.lhs.true65
  %arrayidx70 = getelementptr inbounds [8 x %struct.su3_vector*]* %tempvec, i32 0, i64 0
  %63 = load %struct.su3_vector** %arrayidx70, align 8
  %arrayidx71 = getelementptr inbounds [8 x %struct.su3_vector*]* %tempvec, i32 0, i64 1
  %64 = load %struct.su3_vector** %arrayidx71, align 8
  %65 = load i32* %nu, align 4
  %sub72 = sub nsw i32 7, %65
  call void @u_shift_fermion(%struct.su3_vector* %63, %struct.su3_vector* %64, i32 %sub72)
  %arrayidx73 = getelementptr inbounds [8 x %struct.su3_vector*]* %tempvec, i32 0, i64 1
  %66 = load %struct.su3_vector** %arrayidx73, align 8
  %arrayidx74 = getelementptr inbounds [8 x %struct.su3_vector*]* %tempvec, i32 0, i64 6
  %67 = load %struct.su3_vector** %arrayidx74, align 8
  %68 = load i32* %sig, align 4
  call void @u_shift_fermion(%struct.su3_vector* %66, %struct.su3_vector* %67, i32 %68)
  %69 = load i32* %sig, align 4
  %cmp75 = icmp sle i32 %69, 3
  br i1 %cmp75, label %if.then77, label %if.end80

if.then77:                                        ; preds = %if.then69
  %arrayidx78 = getelementptr inbounds [8 x %struct.su3_vector*]* %tempvec, i32 0, i64 6
  %70 = load %struct.su3_vector** %arrayidx78, align 8
  %arrayidx79 = getelementptr inbounds [8 x %struct.su3_vector*]* %tempvec, i32 0, i64 1
  %71 = load %struct.su3_vector** %arrayidx79, align 8
  %72 = load i32* %sig, align 4
  %73 = load double* %FiveSt, align 8
  call void @add_force_to_mom(%struct.su3_vector* %70, %struct.su3_vector* %71, i32 %72, double %73)
  br label %if.end80

if.end80:                                         ; preds = %if.then77, %if.then69
  store i32 0, i32* %rho, align 4
  br label %for.cond81

for.cond81:                                       ; preds = %for.inc143, %if.end80
  %74 = load i32* %rho, align 4
  %cmp82 = icmp slt i32 %74, 8
  br i1 %cmp82, label %for.body84, label %for.end145

for.body84:                                       ; preds = %for.cond81
  %75 = load i32* %rho, align 4
  %76 = load i32* %mu, align 4
  %cmp85 = icmp ne i32 %75, %76
  br i1 %cmp85, label %land.lhs.true87, label %if.end142

land.lhs.true87:                                  ; preds = %for.body84
  %77 = load i32* %rho, align 4
  %78 = load i32* %mu, align 4
  %sub88 = sub nsw i32 7, %78
  %cmp89 = icmp ne i32 %77, %sub88
  br i1 %cmp89, label %land.lhs.true91, label %if.end142

land.lhs.true91:                                  ; preds = %land.lhs.true87
  %79 = load i32* %rho, align 4
  %80 = load i32* %nu, align 4
  %cmp92 = icmp ne i32 %79, %80
  br i1 %cmp92, label %land.lhs.true94, label %if.end142

land.lhs.true94:                                  ; preds = %land.lhs.true91
  %81 = load i32* %rho, align 4
  %82 = load i32* %nu, align 4
  %sub95 = sub nsw i32 7, %82
  %cmp96 = icmp ne i32 %81, %sub95
  br i1 %cmp96, label %land.lhs.true98, label %if.end142

land.lhs.true98:                                  ; preds = %land.lhs.true94
  %83 = load i32* %rho, align 4
  %84 = load i32* %sig, align 4
  %cmp99 = icmp ne i32 %83, %84
  br i1 %cmp99, label %land.lhs.true101, label %if.end142

land.lhs.true101:                                 ; preds = %land.lhs.true98
  %85 = load i32* %rho, align 4
  %86 = load i32* %sig, align 4
  %sub102 = sub nsw i32 7, %86
  %cmp103 = icmp ne i32 %85, %sub102
  br i1 %cmp103, label %if.then105, label %if.end142

if.then105:                                       ; preds = %land.lhs.true101
  %arrayidx106 = getelementptr inbounds [8 x %struct.su3_vector*]* %tempvec, i32 0, i64 1
  %87 = load %struct.su3_vector** %arrayidx106, align 8
  %arrayidx107 = getelementptr inbounds [8 x %struct.su3_vector*]* %tempvec, i32 0, i64 2
  %88 = load %struct.su3_vector** %arrayidx107, align 8
  %89 = load i32* %rho, align 4
  %sub108 = sub nsw i32 7, %89
  call void @u_shift_fermion(%struct.su3_vector* %87, %struct.su3_vector* %88, i32 %sub108)
  %arrayidx109 = getelementptr inbounds [8 x %struct.su3_vector*]* %tempvec, i32 0, i64 2
  %90 = load %struct.su3_vector** %arrayidx109, align 8
  %arrayidx110 = getelementptr inbounds [8 x %struct.su3_vector*]* %tempvec, i32 0, i64 3
  %91 = load %struct.su3_vector** %arrayidx110, align 8
  %92 = load i32* %sig, align 4
  call void @u_shift_fermion(%struct.su3_vector* %90, %struct.su3_vector* %91, i32 %92)
  %93 = load i32* %sig, align 4
  %cmp111 = icmp sle i32 %93, 3
  br i1 %cmp111, label %if.then113, label %if.end117

if.then113:                                       ; preds = %if.then105
  %arrayidx114 = getelementptr inbounds [8 x %struct.su3_vector*]* %tempvec, i32 0, i64 3
  %94 = load %struct.su3_vector** %arrayidx114, align 8
  %arrayidx115 = getelementptr inbounds [8 x %struct.su3_vector*]* %tempvec, i32 0, i64 2
  %95 = load %struct.su3_vector** %arrayidx115, align 8
  %96 = load i32* %sig, align 4
  %97 = load double* %SevenSt, align 8
  %sub116 = fsub double -0.000000e+00, %97
  call void @add_force_to_mom(%struct.su3_vector* %94, %struct.su3_vector* %95, i32 %96, double %sub116)
  br label %if.end117

if.end117:                                        ; preds = %if.then113, %if.then105
  %arrayidx118 = getelementptr inbounds [8 x %struct.su3_vector*]* %tempvec, i32 0, i64 3
  %98 = load %struct.su3_vector** %arrayidx118, align 8
  %arrayidx119 = getelementptr inbounds [8 x %struct.su3_vector*]* %tempvec, i32 0, i64 4
  %99 = load %struct.su3_vector** %arrayidx119, align 8
  %100 = load i32* %rho, align 4
  call void @u_shift_fermion(%struct.su3_vector* %98, %struct.su3_vector* %99, i32 %100)
  %101 = load i32* %rho, align 4
  %102 = load i32* %sig, align 4
  %103 = load double* %SevenSt, align 8
  %arrayidx120 = getelementptr inbounds [8 x %struct.su3_vector*]* %tempvec, i32 0, i64 1
  %104 = load %struct.su3_vector** %arrayidx120, align 8
  %arrayidx121 = getelementptr inbounds [8 x %struct.su3_vector*]* %tempvec, i32 0, i64 3
  %105 = load %struct.su3_vector** %arrayidx121, align 8
  %arrayidx122 = getelementptr inbounds [8 x %struct.su3_vector*]* %tempvec, i32 0, i64 2
  %106 = load %struct.su3_vector** %arrayidx122, align 8
  %arrayidx123 = getelementptr inbounds [8 x %struct.su3_vector*]* %tempvec, i32 0, i64 4
  %107 = load %struct.su3_vector** %arrayidx123, align 8
  call void @side_link_force(i32 %101, i32 %102, double %103, %struct.su3_vector* %104, %struct.su3_vector* %105, %struct.su3_vector* %106, %struct.su3_vector* %107)
  %108 = load double* %SevenSt, align 8
  %109 = load double* %FiveSt, align 8
  %div124 = fdiv double %108, %109
  store double %div124, double* %coeff, align 8
  store i32 0, i32* %i, align 4
  %110 = load %struct.site** @lattice, align 8
  store %struct.site* %110, %struct.site** %s, align 8
  br label %for.cond125

for.cond125:                                      ; preds = %for.inc138, %if.end117
  %111 = load i32* %i, align 4
  %112 = load i32* @sites_on_node, align 4
  %cmp126 = icmp slt i32 %111, %112
  br i1 %cmp126, label %for.body128, label %for.end141

for.body128:                                      ; preds = %for.cond125
  %113 = load i32* %i, align 4
  %idxprom129 = sext i32 %113 to i64
  %arrayidx130 = getelementptr inbounds [8 x %struct.su3_vector*]* %tempvec, i32 0, i64 6
  %114 = load %struct.su3_vector** %arrayidx130, align 8
  %arrayidx131 = getelementptr inbounds %struct.su3_vector* %114, i64 %idxprom129
  %115 = load i32* %i, align 4
  %idxprom132 = sext i32 %115 to i64
  %arrayidx133 = getelementptr inbounds [8 x %struct.su3_vector*]* %tempvec, i32 0, i64 4
  %116 = load %struct.su3_vector** %arrayidx133, align 8
  %arrayidx134 = getelementptr inbounds %struct.su3_vector* %116, i64 %idxprom132
  %117 = load double* %coeff, align 8
  %118 = load i32* %i, align 4
  %idxprom135 = sext i32 %118 to i64
  %arrayidx136 = getelementptr inbounds [8 x %struct.su3_vector*]* %tempvec, i32 0, i64 6
  %119 = load %struct.su3_vector** %arrayidx136, align 8
  %arrayidx137 = getelementptr inbounds %struct.su3_vector* %119, i64 %idxprom135
  call void @scalar_mult_add_su3_vector(%struct.su3_vector* %arrayidx131, %struct.su3_vector* %arrayidx134, double %117, %struct.su3_vector* %arrayidx137)
  br label %for.inc138

for.inc138:                                       ; preds = %for.body128
  %120 = load i32* %i, align 4
  %inc139 = add nsw i32 %120, 1
  store i32 %inc139, i32* %i, align 4
  %121 = load %struct.site** %s, align 8
  %incdec.ptr140 = getelementptr inbounds %struct.site* %121, i32 1
  store %struct.site* %incdec.ptr140, %struct.site** %s, align 8
  br label %for.cond125

for.end141:                                       ; preds = %for.cond125
  br label %if.end142

if.end142:                                        ; preds = %for.end141, %land.lhs.true101, %land.lhs.true98, %land.lhs.true94, %land.lhs.true91, %land.lhs.true87, %for.body84
  br label %for.inc143

for.inc143:                                       ; preds = %if.end142
  %122 = load i32* %rho, align 4
  %inc144 = add nsw i32 %122, 1
  store i32 %inc144, i32* %rho, align 4
  br label %for.cond81

for.end145:                                       ; preds = %for.cond81
  %arrayidx146 = getelementptr inbounds [8 x %struct.su3_vector*]* %tempvec, i32 0, i64 6
  %123 = load %struct.su3_vector** %arrayidx146, align 8
  %arrayidx147 = getelementptr inbounds [8 x %struct.su3_vector*]* %tempvec, i32 0, i64 3
  %124 = load %struct.su3_vector** %arrayidx147, align 8
  %125 = load i32* %nu, align 4
  call void @u_shift_fermion(%struct.su3_vector* %123, %struct.su3_vector* %124, i32 %125)
  %126 = load i32* %nu, align 4
  %127 = load i32* %sig, align 4
  %128 = load double* %FiveSt, align 8
  %sub148 = fsub double -0.000000e+00, %128
  %arrayidx149 = getelementptr inbounds [8 x %struct.su3_vector*]* %tempvec, i32 0, i64 0
  %129 = load %struct.su3_vector** %arrayidx149, align 8
  %arrayidx150 = getelementptr inbounds [8 x %struct.su3_vector*]* %tempvec, i32 0, i64 6
  %130 = load %struct.su3_vector** %arrayidx150, align 8
  %arrayidx151 = getelementptr inbounds [8 x %struct.su3_vector*]* %tempvec, i32 0, i64 1
  %131 = load %struct.su3_vector** %arrayidx151, align 8
  %arrayidx152 = getelementptr inbounds [8 x %struct.su3_vector*]* %tempvec, i32 0, i64 3
  %132 = load %struct.su3_vector** %arrayidx152, align 8
  call void @side_link_force(i32 %126, i32 %127, double %sub148, %struct.su3_vector* %129, %struct.su3_vector* %130, %struct.su3_vector* %131, %struct.su3_vector* %132)
  %133 = load double* %FiveSt, align 8
  %134 = load double* %ThreeSt, align 8
  %div153 = fdiv double %133, %134
  store double %div153, double* %coeff, align 8
  store i32 0, i32* %i, align 4
  %135 = load %struct.site** @lattice, align 8
  store %struct.site* %135, %struct.site** %s, align 8
  br label %for.cond154

for.cond154:                                      ; preds = %for.inc167, %for.end145
  %136 = load i32* %i, align 4
  %137 = load i32* @sites_on_node, align 4
  %cmp155 = icmp slt i32 %136, %137
  br i1 %cmp155, label %for.body157, label %for.end170

for.body157:                                      ; preds = %for.cond154
  %138 = load i32* %i, align 4
  %idxprom158 = sext i32 %138 to i64
  %arrayidx159 = getelementptr inbounds [8 x %struct.su3_vector*]* %tempvec, i32 0, i64 7
  %139 = load %struct.su3_vector** %arrayidx159, align 8
  %arrayidx160 = getelementptr inbounds %struct.su3_vector* %139, i64 %idxprom158
  %140 = load i32* %i, align 4
  %idxprom161 = sext i32 %140 to i64
  %arrayidx162 = getelementptr inbounds [8 x %struct.su3_vector*]* %tempvec, i32 0, i64 3
  %141 = load %struct.su3_vector** %arrayidx162, align 8
  %arrayidx163 = getelementptr inbounds %struct.su3_vector* %141, i64 %idxprom161
  %142 = load double* %coeff, align 8
  %143 = load i32* %i, align 4
  %idxprom164 = sext i32 %143 to i64
  %arrayidx165 = getelementptr inbounds [8 x %struct.su3_vector*]* %tempvec, i32 0, i64 7
  %144 = load %struct.su3_vector** %arrayidx165, align 8
  %arrayidx166 = getelementptr inbounds %struct.su3_vector* %144, i64 %idxprom164
  call void @scalar_mult_add_su3_vector(%struct.su3_vector* %arrayidx160, %struct.su3_vector* %arrayidx163, double %142, %struct.su3_vector* %arrayidx166)
  br label %for.inc167

for.inc167:                                       ; preds = %for.body157
  %145 = load i32* %i, align 4
  %inc168 = add nsw i32 %145, 1
  store i32 %inc168, i32* %i, align 4
  %146 = load %struct.site** %s, align 8
  %incdec.ptr169 = getelementptr inbounds %struct.site* %146, i32 1
  store %struct.site* %incdec.ptr169, %struct.site** %s, align 8
  br label %for.cond154

for.end170:                                       ; preds = %for.cond154
  br label %if.end171

if.end171:                                        ; preds = %for.end170, %land.lhs.true65, %land.lhs.true62, %land.lhs.true58, %for.body55
  br label %for.inc172

for.inc172:                                       ; preds = %if.end171
  %147 = load i32* %nu, align 4
  %inc173 = add nsw i32 %147, 1
  store i32 %inc173, i32* %nu, align 4
  br label %for.cond52

for.end174:                                       ; preds = %for.cond52
  %arrayidx175 = getelementptr inbounds [8 x %struct.su3_vector*]* %tempvec, i32 0, i64 0
  %148 = load %struct.su3_vector** %arrayidx175, align 8
  %arrayidx176 = getelementptr inbounds [8 x %struct.su3_vector*]* %tempvec, i32 0, i64 1
  %149 = load %struct.su3_vector** %arrayidx176, align 8
  %150 = load i32* %mu, align 4
  %sub177 = sub nsw i32 7, %150
  call void @u_shift_fermion(%struct.su3_vector* %148, %struct.su3_vector* %149, i32 %sub177)
  %arrayidx178 = getelementptr inbounds [8 x %struct.su3_vector*]* %tempvec, i32 0, i64 1
  %151 = load %struct.su3_vector** %arrayidx178, align 8
  %arrayidx179 = getelementptr inbounds [8 x %struct.su3_vector*]* %tempvec, i32 0, i64 6
  %152 = load %struct.su3_vector** %arrayidx179, align 8
  %153 = load i32* %sig, align 4
  call void @u_shift_fermion(%struct.su3_vector* %151, %struct.su3_vector* %152, i32 %153)
  %154 = load i32* %sig, align 4
  %cmp180 = icmp sle i32 %154, 3
  br i1 %cmp180, label %if.then182, label %if.end185

if.then182:                                       ; preds = %for.end174
  %arrayidx183 = getelementptr inbounds [8 x %struct.su3_vector*]* %tempvec, i32 0, i64 6
  %155 = load %struct.su3_vector** %arrayidx183, align 8
  %arrayidx184 = getelementptr inbounds [8 x %struct.su3_vector*]* %tempvec, i32 0, i64 1
  %156 = load %struct.su3_vector** %arrayidx184, align 8
  %157 = load i32* %sig, align 4
  %158 = load double* %Lepage, align 8
  call void @add_force_to_mom(%struct.su3_vector* %155, %struct.su3_vector* %156, i32 %157, double %158)
  br label %if.end185

if.end185:                                        ; preds = %if.then182, %for.end174
  %arrayidx186 = getelementptr inbounds [8 x %struct.su3_vector*]* %tempvec, i32 0, i64 6
  %159 = load %struct.su3_vector** %arrayidx186, align 8
  %arrayidx187 = getelementptr inbounds [8 x %struct.su3_vector*]* %tempvec, i32 0, i64 3
  %160 = load %struct.su3_vector** %arrayidx187, align 8
  %161 = load i32* %mu, align 4
  call void @u_shift_fermion(%struct.su3_vector* %159, %struct.su3_vector* %160, i32 %161)
  %162 = load i32* %mu, align 4
  %163 = load i32* %sig, align 4
  %164 = load double* %Lepage, align 8
  %sub188 = fsub double -0.000000e+00, %164
  %arrayidx189 = getelementptr inbounds [8 x %struct.su3_vector*]* %tempvec, i32 0, i64 0
  %165 = load %struct.su3_vector** %arrayidx189, align 8
  %arrayidx190 = getelementptr inbounds [8 x %struct.su3_vector*]* %tempvec, i32 0, i64 6
  %166 = load %struct.su3_vector** %arrayidx190, align 8
  %arrayidx191 = getelementptr inbounds [8 x %struct.su3_vector*]* %tempvec, i32 0, i64 1
  %167 = load %struct.su3_vector** %arrayidx191, align 8
  %arrayidx192 = getelementptr inbounds [8 x %struct.su3_vector*]* %tempvec, i32 0, i64 3
  %168 = load %struct.su3_vector** %arrayidx192, align 8
  call void @side_link_force(i32 %162, i32 %163, double %sub188, %struct.su3_vector* %165, %struct.su3_vector* %166, %struct.su3_vector* %167, %struct.su3_vector* %168)
  %169 = load double* %Lepage, align 8
  %170 = load double* %ThreeSt, align 8
  %div193 = fdiv double %169, %170
  store double %div193, double* %coeff, align 8
  store i32 0, i32* %i, align 4
  %171 = load %struct.site** @lattice, align 8
  store %struct.site* %171, %struct.site** %s, align 8
  br label %for.cond194

for.cond194:                                      ; preds = %for.inc207, %if.end185
  %172 = load i32* %i, align 4
  %173 = load i32* @sites_on_node, align 4
  %cmp195 = icmp slt i32 %172, %173
  br i1 %cmp195, label %for.body197, label %for.end210

for.body197:                                      ; preds = %for.cond194
  %174 = load i32* %i, align 4
  %idxprom198 = sext i32 %174 to i64
  %arrayidx199 = getelementptr inbounds [8 x %struct.su3_vector*]* %tempvec, i32 0, i64 7
  %175 = load %struct.su3_vector** %arrayidx199, align 8
  %arrayidx200 = getelementptr inbounds %struct.su3_vector* %175, i64 %idxprom198
  %176 = load i32* %i, align 4
  %idxprom201 = sext i32 %176 to i64
  %arrayidx202 = getelementptr inbounds [8 x %struct.su3_vector*]* %tempvec, i32 0, i64 3
  %177 = load %struct.su3_vector** %arrayidx202, align 8
  %arrayidx203 = getelementptr inbounds %struct.su3_vector* %177, i64 %idxprom201
  %178 = load double* %coeff, align 8
  %179 = load i32* %i, align 4
  %idxprom204 = sext i32 %179 to i64
  %arrayidx205 = getelementptr inbounds [8 x %struct.su3_vector*]* %tempvec, i32 0, i64 7
  %180 = load %struct.su3_vector** %arrayidx205, align 8
  %arrayidx206 = getelementptr inbounds %struct.su3_vector* %180, i64 %idxprom204
  call void @scalar_mult_add_su3_vector(%struct.su3_vector* %arrayidx200, %struct.su3_vector* %arrayidx203, double %178, %struct.su3_vector* %arrayidx206)
  br label %for.inc207

for.inc207:                                       ; preds = %for.body197
  %181 = load i32* %i, align 4
  %inc208 = add nsw i32 %181, 1
  store i32 %inc208, i32* %i, align 4
  %182 = load %struct.site** %s, align 8
  %incdec.ptr209 = getelementptr inbounds %struct.site* %182, i32 1
  store %struct.site* %incdec.ptr209, %struct.site** %s, align 8
  br label %for.cond194

for.end210:                                       ; preds = %for.cond194
  %183 = load i32* %mu, align 4
  %cmp211 = icmp sle i32 %183, 3
  br i1 %cmp211, label %if.then213, label %if.end216

if.then213:                                       ; preds = %for.end210
  %arrayidx214 = getelementptr inbounds [8 x %struct.su3_vector*]* %tempvec, i32 0, i64 7
  %184 = load %struct.su3_vector** %arrayidx214, align 8
  %arrayidx215 = getelementptr inbounds [8 x %struct.su3_vector*]* %tempvec, i32 0, i64 3
  %185 = load %struct.su3_vector** %arrayidx215, align 8
  %186 = load i32* %mu, align 4
  call void @u_shift_fermion(%struct.su3_vector* %184, %struct.su3_vector* %185, i32 %186)
  br label %if.end216

if.end216:                                        ; preds = %if.then213, %for.end210
  %187 = load i32* %mu, align 4
  %188 = load i32* %sig, align 4
  %189 = load double* %ThreeSt, align 8
  %190 = load %struct.su3_vector** %temp_x, align 8
  %arrayidx217 = getelementptr inbounds [8 x %struct.su3_vector*]* %tempvec, i32 0, i64 7
  %191 = load %struct.su3_vector** %arrayidx217, align 8
  %arrayidx218 = getelementptr inbounds [8 x %struct.su3_vector*]* %tempvec, i32 0, i64 0
  %192 = load %struct.su3_vector** %arrayidx218, align 8
  %arrayidx219 = getelementptr inbounds [8 x %struct.su3_vector*]* %tempvec, i32 0, i64 3
  %193 = load %struct.su3_vector** %arrayidx219, align 8
  call void @side_link_force(i32 %187, i32 %188, double %189, %struct.su3_vector* %190, %struct.su3_vector* %191, %struct.su3_vector* %192, %struct.su3_vector* %193)
  %194 = load i32* %mu, align 4
  %idxprom220 = sext i32 %194 to i64
  %arrayidx221 = getelementptr inbounds [8 x i32]* %DirectLinks, i32 0, i64 %idxprom220
  %195 = load i32* %arrayidx221, align 4
  %tobool = icmp ne i32 %195, 0
  br i1 %tobool, label %if.end244, label %if.then222

if.then222:                                       ; preds = %if.end216
  %196 = load i32* %mu, align 4
  %idxprom223 = sext i32 %196 to i64
  %arrayidx224 = getelementptr inbounds [8 x i32]* %DirectLinks, i32 0, i64 %idxprom223
  store i32 1, i32* %arrayidx224, align 4
  %197 = load i32* %mu, align 4
  %cmp225 = icmp sgt i32 %197, 3
  br i1 %cmp225, label %if.then227, label %if.else

if.then227:                                       ; preds = %if.then222
  %arrayidx228 = getelementptr inbounds [8 x %struct.su3_vector*]* %tempvec, i32 0, i64 0
  %198 = load %struct.su3_vector** %arrayidx228, align 8
  %199 = load %struct.su3_vector** %temp_x, align 8
  %200 = load i32* %mu, align 4
  %sub229 = sub nsw i32 7, %200
  %201 = load double* %OneLink, align 8
  call void @add_force_to_mom(%struct.su3_vector* %198, %struct.su3_vector* %199, i32 %sub229, double %201)
  %202 = load %struct.su3_vector** %temp_x, align 8
  %arrayidx230 = getelementptr inbounds [8 x %struct.su3_vector*]* %tempvec, i32 0, i64 4
  %203 = load %struct.su3_vector** %arrayidx230, align 8
  %204 = load i32* %mu, align 4
  call void @u_shift_fermion(%struct.su3_vector* %202, %struct.su3_vector* %203, i32 %204)
  %arrayidx231 = getelementptr inbounds [8 x %struct.su3_vector*]* %tempvec, i32 0, i64 1
  %205 = load %struct.su3_vector** %arrayidx231, align 8
  %arrayidx232 = getelementptr inbounds [8 x %struct.su3_vector*]* %tempvec, i32 0, i64 4
  %206 = load %struct.su3_vector** %arrayidx232, align 8
  %207 = load i32* %mu, align 4
  %sub233 = sub nsw i32 7, %207
  %208 = load double* %Naik, align 8
  %sub234 = fsub double -0.000000e+00, %208
  call void @add_force_to_mom(%struct.su3_vector* %205, %struct.su3_vector* %206, i32 %sub233, double %sub234)
  %arrayidx235 = getelementptr inbounds [8 x %struct.su3_vector*]* %tempvec, i32 0, i64 1
  %209 = load %struct.su3_vector** %arrayidx235, align 8
  %arrayidx236 = getelementptr inbounds [8 x %struct.su3_vector*]* %tempvec, i32 0, i64 4
  %210 = load %struct.su3_vector** %arrayidx236, align 8
  %211 = load i32* %mu, align 4
  %sub237 = sub nsw i32 7, %211
  call void @u_shift_fermion(%struct.su3_vector* %209, %struct.su3_vector* %210, i32 %sub237)
  %arrayidx238 = getelementptr inbounds [8 x %struct.su3_vector*]* %tempvec, i32 0, i64 4
  %212 = load %struct.su3_vector** %arrayidx238, align 8
  %213 = load %struct.su3_vector** %temp_x, align 8
  %214 = load i32* %mu, align 4
  %sub239 = sub nsw i32 7, %214
  %215 = load double* %Naik, align 8
  call void @add_force_to_mom(%struct.su3_vector* %212, %struct.su3_vector* %213, i32 %sub239, double %215)
  br label %if.end243

if.else:                                          ; preds = %if.then222
  %216 = load %struct.su3_vector** %temp_x, align 8
  %arrayidx240 = getelementptr inbounds [8 x %struct.su3_vector*]* %tempvec, i32 0, i64 4
  %217 = load %struct.su3_vector** %arrayidx240, align 8
  %218 = load i32* %mu, align 4
  call void @u_shift_fermion(%struct.su3_vector* %216, %struct.su3_vector* %217, i32 %218)
  %arrayidx241 = getelementptr inbounds [8 x %struct.su3_vector*]* %tempvec, i32 0, i64 4
  %219 = load %struct.su3_vector** %arrayidx241, align 8
  %arrayidx242 = getelementptr inbounds [8 x %struct.su3_vector*]* %tempvec, i32 0, i64 1
  %220 = load %struct.su3_vector** %arrayidx242, align 8
  %221 = load i32* %mu, align 4
  %222 = load double* %Naik, align 8
  call void @add_force_to_mom(%struct.su3_vector* %219, %struct.su3_vector* %220, i32 %221, double %222)
  br label %if.end243

if.end243:                                        ; preds = %if.else, %if.then227
  br label %if.end244

if.end244:                                        ; preds = %if.end243, %if.end216
  br label %if.end245

if.end245:                                        ; preds = %if.end244, %land.lhs.true, %for.body37
  br label %for.inc246

for.inc246:                                       ; preds = %if.end245
  %223 = load i32* %mu, align 4
  %inc247 = add nsw i32 %223, 1
  store i32 %inc247, i32* %mu, align 4
  br label %for.cond34

for.end248:                                       ; preds = %for.cond34
  br label %for.inc249

for.inc249:                                       ; preds = %for.end248
  %224 = load i32* %sig, align 4
  %inc250 = add nsw i32 %224, 1
  store i32 %inc250, i32* %sig, align 4
  br label %for.cond30

for.end251:                                       ; preds = %for.cond30
  %225 = load %struct.su3_vector** %temp_x, align 8
  %226 = bitcast %struct.su3_vector* %225 to i8*
  call void @free(i8* %226) #2
  store i32 0, i32* %mu, align 4
  br label %for.cond252

for.cond252:                                      ; preds = %for.inc258, %for.end251
  %227 = load i32* %mu, align 4
  %cmp253 = icmp slt i32 %227, 8
  br i1 %cmp253, label %for.body255, label %for.end260

for.body255:                                      ; preds = %for.cond252
  %228 = load i32* %mu, align 4
  %idxprom256 = sext i32 %228 to i64
  %arrayidx257 = getelementptr inbounds [8 x %struct.su3_vector*]* %tempvec, i32 0, i64 %idxprom256
  %229 = load %struct.su3_vector** %arrayidx257, align 8
  %230 = bitcast %struct.su3_vector* %229 to i8*
  call void @free(i8* %230) #2
  br label %for.inc258

for.inc258:                                       ; preds = %for.body255
  %231 = load i32* %mu, align 4
  %inc259 = add nsw i32 %231, 1
  store i32 %inc259, i32* %mu, align 4
  br label %for.cond252

for.end260:                                       ; preds = %for.cond252
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @u_shift_fermion(%struct.su3_vector* %src, %struct.su3_vector* %dest, i32 %dir) #0 {
entry:
  %src.addr = alloca %struct.su3_vector*, align 8
  %dest.addr = alloca %struct.su3_vector*, align 8
  %dir.addr = alloca i32, align 4
  %tmpvec = alloca %struct.su3_vector*, align 8
  %mtag = alloca %struct.msg_tag*, align 8
  %s = alloca %struct.site*, align 8
  %i = alloca i32, align 4
  store %struct.su3_vector* %src, %struct.su3_vector** %src.addr, align 8
  store %struct.su3_vector* %dest, %struct.su3_vector** %dest.addr, align 8
  store i32 %dir, i32* %dir.addr, align 4
  %0 = load i32* %dir.addr, align 4
  %cmp = icmp sle i32 %0, 3
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  %1 = load %struct.su3_vector** %src.addr, align 8
  %2 = bitcast %struct.su3_vector* %1 to i8*
  %3 = load i32* %dir.addr, align 4
  %4 = load i8*** getelementptr inbounds ([16 x i8**]* @gen_pt, i32 0, i64 0), align 8
  %call = call %struct.msg_tag* @start_gather_from_temp(i8* %2, i32 48, i32 %3, i32 3, i8** %4)
  store %struct.msg_tag* %call, %struct.msg_tag** %mtag, align 8
  %5 = load %struct.msg_tag** %mtag, align 8
  call void @wait_gather(%struct.msg_tag* %5)
  store i32 0, i32* %i, align 4
  %6 = load %struct.site** @lattice, align 8
  store %struct.site* %6, %struct.site** %s, align 8
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.then
  %7 = load i32* %i, align 4
  %8 = load i32* @sites_on_node, align 4
  %cmp1 = icmp slt i32 %7, %8
  br i1 %cmp1, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %9 = load i32* %dir.addr, align 4
  %idxprom = sext i32 %9 to i64
  %10 = load %struct.site** %s, align 8
  %link = getelementptr inbounds %struct.site* %10, i32 0, i32 8
  %arrayidx = getelementptr inbounds [4 x %struct.su3_matrix]* %link, i32 0, i64 %idxprom
  %11 = load i32* %i, align 4
  %idxprom2 = sext i32 %11 to i64
  %12 = load i8*** getelementptr inbounds ([16 x i8**]* @gen_pt, i32 0, i64 0), align 8
  %arrayidx3 = getelementptr inbounds i8** %12, i64 %idxprom2
  %13 = load i8** %arrayidx3, align 8
  %14 = bitcast i8* %13 to %struct.su3_vector*
  %15 = load i32* %i, align 4
  %idxprom4 = sext i32 %15 to i64
  %16 = load %struct.su3_vector** %dest.addr, align 8
  %arrayidx5 = getelementptr inbounds %struct.su3_vector* %16, i64 %idxprom4
  call void @mult_su3_mat_vec(%struct.su3_matrix* %arrayidx, %struct.su3_vector* %14, %struct.su3_vector* %arrayidx5)
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %17 = load i32* %i, align 4
  %inc = add nsw i32 %17, 1
  store i32 %inc, i32* %i, align 4
  %18 = load %struct.site** %s, align 8
  %incdec.ptr = getelementptr inbounds %struct.site* %18, i32 1
  store %struct.site* %incdec.ptr, %struct.site** %s, align 8
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %19 = load %struct.msg_tag** %mtag, align 8
  call void @cleanup_gather(%struct.msg_tag* %19)
  br label %if.end

if.else:                                          ; preds = %entry
  %20 = load i32* @sites_on_node, align 4
  %conv = sext i32 %20 to i64
  %call6 = call noalias i8* @calloc(i64 %conv, i64 48) #2
  %21 = bitcast i8* %call6 to %struct.su3_vector*
  store %struct.su3_vector* %21, %struct.su3_vector** %tmpvec, align 8
  store i32 0, i32* %i, align 4
  %22 = load %struct.site** @lattice, align 8
  store %struct.site* %22, %struct.site** %s, align 8
  br label %for.cond7

for.cond7:                                        ; preds = %for.inc18, %if.else
  %23 = load i32* %i, align 4
  %24 = load i32* @sites_on_node, align 4
  %cmp8 = icmp slt i32 %23, %24
  br i1 %cmp8, label %for.body10, label %for.end21

for.body10:                                       ; preds = %for.cond7
  %25 = load i32* %dir.addr, align 4
  %sub = sub nsw i32 7, %25
  %idxprom11 = sext i32 %sub to i64
  %26 = load %struct.site** %s, align 8
  %link12 = getelementptr inbounds %struct.site* %26, i32 0, i32 8
  %arrayidx13 = getelementptr inbounds [4 x %struct.su3_matrix]* %link12, i32 0, i64 %idxprom11
  %27 = load i32* %i, align 4
  %idxprom14 = sext i32 %27 to i64
  %28 = load %struct.su3_vector** %src.addr, align 8
  %arrayidx15 = getelementptr inbounds %struct.su3_vector* %28, i64 %idxprom14
  %29 = load i32* %i, align 4
  %idxprom16 = sext i32 %29 to i64
  %30 = load %struct.su3_vector** %tmpvec, align 8
  %arrayidx17 = getelementptr inbounds %struct.su3_vector* %30, i64 %idxprom16
  call void @mult_adj_su3_mat_vec(%struct.su3_matrix* %arrayidx13, %struct.su3_vector* %arrayidx15, %struct.su3_vector* %arrayidx17)
  br label %for.inc18

for.inc18:                                        ; preds = %for.body10
  %31 = load i32* %i, align 4
  %inc19 = add nsw i32 %31, 1
  store i32 %inc19, i32* %i, align 4
  %32 = load %struct.site** %s, align 8
  %incdec.ptr20 = getelementptr inbounds %struct.site* %32, i32 1
  store %struct.site* %incdec.ptr20, %struct.site** %s, align 8
  br label %for.cond7

for.end21:                                        ; preds = %for.cond7
  %33 = load %struct.su3_vector** %tmpvec, align 8
  %34 = bitcast %struct.su3_vector* %33 to i8*
  %35 = load i32* %dir.addr, align 4
  %36 = load i8*** getelementptr inbounds ([16 x i8**]* @gen_pt, i32 0, i64 0), align 8
  %call22 = call %struct.msg_tag* @start_gather_from_temp(i8* %34, i32 48, i32 %35, i32 3, i8** %36)
  store %struct.msg_tag* %call22, %struct.msg_tag** %mtag, align 8
  %37 = load %struct.msg_tag** %mtag, align 8
  call void @wait_gather(%struct.msg_tag* %37)
  store i32 0, i32* %i, align 4
  %38 = load %struct.site** @lattice, align 8
  store %struct.site* %38, %struct.site** %s, align 8
  br label %for.cond23

for.cond23:                                       ; preds = %for.inc31, %for.end21
  %39 = load i32* %i, align 4
  %40 = load i32* @sites_on_node, align 4
  %cmp24 = icmp slt i32 %39, %40
  br i1 %cmp24, label %for.body26, label %for.end34

for.body26:                                       ; preds = %for.cond23
  %41 = load i32* %i, align 4
  %idxprom27 = sext i32 %41 to i64
  %42 = load %struct.su3_vector** %dest.addr, align 8
  %arrayidx28 = getelementptr inbounds %struct.su3_vector* %42, i64 %idxprom27
  %43 = load i32* %i, align 4
  %idxprom29 = sext i32 %43 to i64
  %44 = load i8*** getelementptr inbounds ([16 x i8**]* @gen_pt, i32 0, i64 0), align 8
  %arrayidx30 = getelementptr inbounds i8** %44, i64 %idxprom29
  %45 = load i8** %arrayidx30, align 8
  %46 = bitcast i8* %45 to %struct.su3_vector*
  %47 = bitcast %struct.su3_vector* %arrayidx28 to i8*
  %48 = bitcast %struct.su3_vector* %46 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %47, i8* %48, i64 48, i32 8, i1 false)
  br label %for.inc31

for.inc31:                                        ; preds = %for.body26
  %49 = load i32* %i, align 4
  %inc32 = add nsw i32 %49, 1
  store i32 %inc32, i32* %i, align 4
  %50 = load %struct.site** %s, align 8
  %incdec.ptr33 = getelementptr inbounds %struct.site* %50, i32 1
  store %struct.site* %incdec.ptr33, %struct.site** %s, align 8
  br label %for.cond23

for.end34:                                        ; preds = %for.cond23
  %51 = load %struct.msg_tag** %mtag, align 8
  call void @cleanup_gather(%struct.msg_tag* %51)
  %52 = load %struct.su3_vector** %tmpvec, align 8
  %53 = bitcast %struct.su3_vector* %52 to i8*
  call void @free(i8* %53) #2
  br label %if.end

if.end:                                           ; preds = %for.end34, %for.end
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @add_force_to_mom(%struct.su3_vector* %back, %struct.su3_vector* %forw, i32 %dir, double %coeff) #0 {
entry:
  %back.addr = alloca %struct.su3_vector*, align 8
  %forw.addr = alloca %struct.su3_vector*, align 8
  %dir.addr = alloca i32, align 4
  %coeff.addr = alloca double, align 8
  %s = alloca %struct.site*, align 8
  %i = alloca i32, align 4
  %tmp_coeff = alloca double, align 8
  %tmat = alloca %struct.su3_matrix, align 8
  %tmat2 = alloca %struct.su3_matrix, align 8
  store %struct.su3_vector* %back, %struct.su3_vector** %back.addr, align 8
  store %struct.su3_vector* %forw, %struct.su3_vector** %forw.addr, align 8
  store i32 %dir, i32* %dir.addr, align 4
  store double %coeff, double* %coeff.addr, align 8
  %0 = load i32* %dir.addr, align 4
  %cmp = icmp sgt i32 %0, 3
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %1 = load i32* %dir.addr, align 4
  %sub = sub nsw i32 7, %1
  store i32 %sub, i32* %dir.addr, align 4
  %2 = load double* %coeff.addr, align 8
  %sub1 = fsub double -0.000000e+00, %2
  store double %sub1, double* %coeff.addr, align 8
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  store i32 0, i32* %i, align 4
  %3 = load %struct.site** @lattice, align 8
  store %struct.site* %3, %struct.site** %s, align 8
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.end
  %4 = load i32* %i, align 4
  %5 = load i32* @sites_on_node, align 4
  %cmp2 = icmp slt i32 %4, %5
  br i1 %cmp2, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %6 = load %struct.site** %s, align 8
  %parity = getelementptr inbounds %struct.site* %6, i32 0, i32 4
  %7 = load i8* %parity, align 1
  %conv = sext i8 %7 to i32
  %cmp3 = icmp eq i32 %conv, 1
  br i1 %cmp3, label %if.then5, label %if.else

if.then5:                                         ; preds = %for.body
  %8 = load double* %coeff.addr, align 8
  %sub6 = fsub double -0.000000e+00, %8
  store double %sub6, double* %tmp_coeff, align 8
  br label %if.end7

if.else:                                          ; preds = %for.body
  %9 = load double* %coeff.addr, align 8
  store double %9, double* %tmp_coeff, align 8
  br label %if.end7

if.end7:                                          ; preds = %if.else, %if.then5
  %10 = load i32* %dir.addr, align 4
  %idxprom = sext i32 %10 to i64
  %11 = load %struct.site** %s, align 8
  %mom = getelementptr inbounds %struct.site* %11, i32 0, i32 9
  %arrayidx = getelementptr inbounds [4 x %struct.anti_hermitmat]* %mom, i32 0, i64 %idxprom
  call void @uncompress_anti_hermitian(%struct.anti_hermitmat* %arrayidx, %struct.su3_matrix* %tmat2)
  %12 = load i32* %i, align 4
  %idxprom8 = sext i32 %12 to i64
  %13 = load %struct.su3_vector** %back.addr, align 8
  %arrayidx9 = getelementptr inbounds %struct.su3_vector* %13, i64 %idxprom8
  %14 = load i32* %i, align 4
  %idxprom10 = sext i32 %14 to i64
  %15 = load %struct.su3_vector** %forw.addr, align 8
  %arrayidx11 = getelementptr inbounds %struct.su3_vector* %15, i64 %idxprom10
  call void @su3_projector(%struct.su3_vector* %arrayidx9, %struct.su3_vector* %arrayidx11, %struct.su3_matrix* %tmat)
  %16 = load double* %tmp_coeff, align 8
  call void @scalar_mult_add_su3_matrix(%struct.su3_matrix* %tmat2, %struct.su3_matrix* %tmat, double %16, %struct.su3_matrix* %tmat2)
  %17 = load i32* %dir.addr, align 4
  %idxprom12 = sext i32 %17 to i64
  %18 = load %struct.site** %s, align 8
  %mom13 = getelementptr inbounds %struct.site* %18, i32 0, i32 9
  %arrayidx14 = getelementptr inbounds [4 x %struct.anti_hermitmat]* %mom13, i32 0, i64 %idxprom12
  call void @make_anti_hermitian(%struct.su3_matrix* %tmat2, %struct.anti_hermitmat* %arrayidx14)
  br label %for.inc

for.inc:                                          ; preds = %if.end7
  %19 = load i32* %i, align 4
  %inc = add nsw i32 %19, 1
  store i32 %inc, i32* %i, align 4
  %20 = load %struct.site** %s, align 8
  %incdec.ptr = getelementptr inbounds %struct.site* %20, i32 1
  store %struct.site* %incdec.ptr, %struct.site** %s, align 8
  br label %for.cond

for.end:                                          ; preds = %for.cond
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @side_link_force(i32 %mu, i32 %nu, double %coeff, %struct.su3_vector* %Path, %struct.su3_vector* %Path_nu, %struct.su3_vector* %Path_mu, %struct.su3_vector* %Path_numu) #0 {
entry:
  %mu.addr = alloca i32, align 4
  %nu.addr = alloca i32, align 4
  %coeff.addr = alloca double, align 8
  %Path.addr = alloca %struct.su3_vector*, align 8
  %Path_nu.addr = alloca %struct.su3_vector*, align 8
  %Path_mu.addr = alloca %struct.su3_vector*, align 8
  %Path_numu.addr = alloca %struct.su3_vector*, align 8
  store i32 %mu, i32* %mu.addr, align 4
  store i32 %nu, i32* %nu.addr, align 4
  store double %coeff, double* %coeff.addr, align 8
  store %struct.su3_vector* %Path, %struct.su3_vector** %Path.addr, align 8
  store %struct.su3_vector* %Path_nu, %struct.su3_vector** %Path_nu.addr, align 8
  store %struct.su3_vector* %Path_mu, %struct.su3_vector** %Path_mu.addr, align 8
  store %struct.su3_vector* %Path_numu, %struct.su3_vector** %Path_numu.addr, align 8
  %0 = load i32* %mu.addr, align 4
  %cmp = icmp sle i32 %0, 3
  br i1 %cmp, label %if.then, label %if.else4

if.then:                                          ; preds = %entry
  %1 = load i32* %nu.addr, align 4
  %cmp1 = icmp sle i32 %1, 3
  br i1 %cmp1, label %if.then2, label %if.else

if.then2:                                         ; preds = %if.then
  %2 = load %struct.su3_vector** %Path_numu.addr, align 8
  %3 = load %struct.su3_vector** %Path.addr, align 8
  %4 = load i32* %mu.addr, align 4
  %5 = load double* %coeff.addr, align 8
  call void @add_force_to_mom(%struct.su3_vector* %2, %struct.su3_vector* %3, i32 %4, double %5)
  br label %if.end

if.else:                                          ; preds = %if.then
  %6 = load %struct.su3_vector** %Path.addr, align 8
  %7 = load %struct.su3_vector** %Path_numu.addr, align 8
  %8 = load i32* %mu.addr, align 4
  %sub = sub nsw i32 7, %8
  %9 = load double* %coeff.addr, align 8
  %sub3 = fsub double -0.000000e+00, %9
  call void @add_force_to_mom(%struct.su3_vector* %6, %struct.su3_vector* %7, i32 %sub, double %sub3)
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then2
  br label %if.end11

if.else4:                                         ; preds = %entry
  %10 = load i32* %nu.addr, align 4
  %cmp5 = icmp sle i32 %10, 3
  br i1 %cmp5, label %if.then6, label %if.else8

if.then6:                                         ; preds = %if.else4
  %11 = load %struct.su3_vector** %Path_nu.addr, align 8
  %12 = load %struct.su3_vector** %Path_mu.addr, align 8
  %13 = load i32* %mu.addr, align 4
  %14 = load double* %coeff.addr, align 8
  %sub7 = fsub double -0.000000e+00, %14
  call void @add_force_to_mom(%struct.su3_vector* %11, %struct.su3_vector* %12, i32 %13, double %sub7)
  br label %if.end10

if.else8:                                         ; preds = %if.else4
  %15 = load %struct.su3_vector** %Path_mu.addr, align 8
  %16 = load %struct.su3_vector** %Path_nu.addr, align 8
  %17 = load i32* %mu.addr, align 4
  %sub9 = sub nsw i32 7, %17
  %18 = load double* %coeff.addr, align 8
  call void @add_force_to_mom(%struct.su3_vector* %15, %struct.su3_vector* %16, i32 %sub9, double %18)
  br label %if.end10

if.end10:                                         ; preds = %if.else8, %if.then6
  br label %if.end11

if.end11:                                         ; preds = %if.end10, %if.end
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @eo_fermion_force_3f(double %eps, i32 %nflav1, i32 %x1_off, i32 %nflav2, i32 %x2_off) #0 {
entry:
  %eps.addr = alloca double, align 8
  %nflav1.addr = alloca i32, align 4
  %x1_off.addr = alloca i32, align 4
  %nflav2.addr = alloca i32, align 4
  %x2_off.addr = alloca i32, align 4
  %i = alloca i32, align 4
  %s = alloca %struct.site*, align 8
  %mu = alloca i32, align 4
  %nu = alloca i32, align 4
  %rho = alloca i32, align 4
  %sig = alloca i32, align 4
  %DirectLinks = alloca [8 x i32], align 16
  %coeff = alloca [2 x double], align 16
  %ferm_epsilon = alloca double, align 8
  %OneLink = alloca [2 x double], align 16
  %Lepage = alloca [2 x double], align 16
  %Naik = alloca [2 x double], align 16
  %FiveSt = alloca [2 x double], align 16
  %ThreeSt = alloca [2 x double], align 16
  %SevenSt = alloca [2 x double], align 16
  %mNaik = alloca [2 x double], align 16
  %mLepage = alloca [2 x double], align 16
  %mFiveSt = alloca [2 x double], align 16
  %mThreeSt = alloca [2 x double], align 16
  %mSevenSt = alloca [2 x double], align 16
  %hwvec = alloca [8 x %struct.half_wilson_vector*], align 16
  %temp_x = alloca %struct.half_wilson_vector*, align 8
  store double %eps, double* %eps.addr, align 8
  store i32 %nflav1, i32* %nflav1.addr, align 4
  store i32 %x1_off, i32* %x1_off.addr, align 4
  store i32 %nflav2, i32* %nflav2.addr, align 4
  store i32 %x2_off, i32* %x2_off.addr, align 4
  %0 = load i32* %nflav1.addr, align 4
  %conv = sitofp i32 %0 to double
  %div = fdiv double %conv, 4.000000e+00
  %mul = fmul double 2.000000e+00, %div
  %1 = load double* %eps.addr, align 8
  %mul1 = fmul double %mul, %1
  store double %mul1, double* %ferm_epsilon, align 8
  %2 = load double* getelementptr inbounds ([6 x double]* @act_path_coeff, i32 0, i64 0), align 8
  %3 = load double* %ferm_epsilon, align 8
  %mul2 = fmul double %2, %3
  %arrayidx = getelementptr inbounds [2 x double]* %OneLink, i32 0, i64 0
  store double %mul2, double* %arrayidx, align 8
  %4 = load double* getelementptr inbounds ([6 x double]* @act_path_coeff, i32 0, i64 1), align 8
  %5 = load double* %ferm_epsilon, align 8
  %mul3 = fmul double %4, %5
  %arrayidx4 = getelementptr inbounds [2 x double]* %Naik, i32 0, i64 0
  store double %mul3, double* %arrayidx4, align 8
  %arrayidx5 = getelementptr inbounds [2 x double]* %Naik, i32 0, i64 0
  %6 = load double* %arrayidx5, align 8
  %sub = fsub double -0.000000e+00, %6
  %arrayidx6 = getelementptr inbounds [2 x double]* %mNaik, i32 0, i64 0
  store double %sub, double* %arrayidx6, align 8
  %7 = load double* getelementptr inbounds ([6 x double]* @act_path_coeff, i32 0, i64 2), align 8
  %8 = load double* %ferm_epsilon, align 8
  %mul7 = fmul double %7, %8
  %arrayidx8 = getelementptr inbounds [2 x double]* %ThreeSt, i32 0, i64 0
  store double %mul7, double* %arrayidx8, align 8
  %arrayidx9 = getelementptr inbounds [2 x double]* %ThreeSt, i32 0, i64 0
  %9 = load double* %arrayidx9, align 8
  %sub10 = fsub double -0.000000e+00, %9
  %arrayidx11 = getelementptr inbounds [2 x double]* %mThreeSt, i32 0, i64 0
  store double %sub10, double* %arrayidx11, align 8
  %10 = load double* getelementptr inbounds ([6 x double]* @act_path_coeff, i32 0, i64 3), align 8
  %11 = load double* %ferm_epsilon, align 8
  %mul12 = fmul double %10, %11
  %arrayidx13 = getelementptr inbounds [2 x double]* %FiveSt, i32 0, i64 0
  store double %mul12, double* %arrayidx13, align 8
  %arrayidx14 = getelementptr inbounds [2 x double]* %FiveSt, i32 0, i64 0
  %12 = load double* %arrayidx14, align 8
  %sub15 = fsub double -0.000000e+00, %12
  %arrayidx16 = getelementptr inbounds [2 x double]* %mFiveSt, i32 0, i64 0
  store double %sub15, double* %arrayidx16, align 8
  %13 = load double* getelementptr inbounds ([6 x double]* @act_path_coeff, i32 0, i64 4), align 8
  %14 = load double* %ferm_epsilon, align 8
  %mul17 = fmul double %13, %14
  %arrayidx18 = getelementptr inbounds [2 x double]* %SevenSt, i32 0, i64 0
  store double %mul17, double* %arrayidx18, align 8
  %arrayidx19 = getelementptr inbounds [2 x double]* %SevenSt, i32 0, i64 0
  %15 = load double* %arrayidx19, align 8
  %sub20 = fsub double -0.000000e+00, %15
  %arrayidx21 = getelementptr inbounds [2 x double]* %mSevenSt, i32 0, i64 0
  store double %sub20, double* %arrayidx21, align 8
  %16 = load double* getelementptr inbounds ([6 x double]* @act_path_coeff, i32 0, i64 5), align 8
  %17 = load double* %ferm_epsilon, align 8
  %mul22 = fmul double %16, %17
  %arrayidx23 = getelementptr inbounds [2 x double]* %Lepage, i32 0, i64 0
  store double %mul22, double* %arrayidx23, align 8
  %arrayidx24 = getelementptr inbounds [2 x double]* %Lepage, i32 0, i64 0
  %18 = load double* %arrayidx24, align 8
  %sub25 = fsub double -0.000000e+00, %18
  %arrayidx26 = getelementptr inbounds [2 x double]* %mLepage, i32 0, i64 0
  store double %sub25, double* %arrayidx26, align 8
  %19 = load i32* %nflav2.addr, align 4
  %conv27 = sitofp i32 %19 to double
  %div28 = fdiv double %conv27, 4.000000e+00
  %mul29 = fmul double 2.000000e+00, %div28
  %20 = load double* %eps.addr, align 8
  %mul30 = fmul double %mul29, %20
  store double %mul30, double* %ferm_epsilon, align 8
  %21 = load double* getelementptr inbounds ([6 x double]* @act_path_coeff, i32 0, i64 0), align 8
  %22 = load double* %ferm_epsilon, align 8
  %mul31 = fmul double %21, %22
  %arrayidx32 = getelementptr inbounds [2 x double]* %OneLink, i32 0, i64 1
  store double %mul31, double* %arrayidx32, align 8
  %23 = load double* getelementptr inbounds ([6 x double]* @act_path_coeff, i32 0, i64 1), align 8
  %24 = load double* %ferm_epsilon, align 8
  %mul33 = fmul double %23, %24
  %arrayidx34 = getelementptr inbounds [2 x double]* %Naik, i32 0, i64 1
  store double %mul33, double* %arrayidx34, align 8
  %arrayidx35 = getelementptr inbounds [2 x double]* %Naik, i32 0, i64 1
  %25 = load double* %arrayidx35, align 8
  %sub36 = fsub double -0.000000e+00, %25
  %arrayidx37 = getelementptr inbounds [2 x double]* %mNaik, i32 0, i64 1
  store double %sub36, double* %arrayidx37, align 8
  %26 = load double* getelementptr inbounds ([6 x double]* @act_path_coeff, i32 0, i64 2), align 8
  %27 = load double* %ferm_epsilon, align 8
  %mul38 = fmul double %26, %27
  %arrayidx39 = getelementptr inbounds [2 x double]* %ThreeSt, i32 0, i64 1
  store double %mul38, double* %arrayidx39, align 8
  %arrayidx40 = getelementptr inbounds [2 x double]* %ThreeSt, i32 0, i64 1
  %28 = load double* %arrayidx40, align 8
  %sub41 = fsub double -0.000000e+00, %28
  %arrayidx42 = getelementptr inbounds [2 x double]* %mThreeSt, i32 0, i64 1
  store double %sub41, double* %arrayidx42, align 8
  %29 = load double* getelementptr inbounds ([6 x double]* @act_path_coeff, i32 0, i64 3), align 8
  %30 = load double* %ferm_epsilon, align 8
  %mul43 = fmul double %29, %30
  %arrayidx44 = getelementptr inbounds [2 x double]* %FiveSt, i32 0, i64 1
  store double %mul43, double* %arrayidx44, align 8
  %arrayidx45 = getelementptr inbounds [2 x double]* %FiveSt, i32 0, i64 1
  %31 = load double* %arrayidx45, align 8
  %sub46 = fsub double -0.000000e+00, %31
  %arrayidx47 = getelementptr inbounds [2 x double]* %mFiveSt, i32 0, i64 1
  store double %sub46, double* %arrayidx47, align 8
  %32 = load double* getelementptr inbounds ([6 x double]* @act_path_coeff, i32 0, i64 4), align 8
  %33 = load double* %ferm_epsilon, align 8
  %mul48 = fmul double %32, %33
  %arrayidx49 = getelementptr inbounds [2 x double]* %SevenSt, i32 0, i64 1
  store double %mul48, double* %arrayidx49, align 8
  %arrayidx50 = getelementptr inbounds [2 x double]* %SevenSt, i32 0, i64 1
  %34 = load double* %arrayidx50, align 8
  %sub51 = fsub double -0.000000e+00, %34
  %arrayidx52 = getelementptr inbounds [2 x double]* %mSevenSt, i32 0, i64 1
  store double %sub51, double* %arrayidx52, align 8
  %35 = load double* getelementptr inbounds ([6 x double]* @act_path_coeff, i32 0, i64 5), align 8
  %36 = load double* %ferm_epsilon, align 8
  %mul53 = fmul double %35, %36
  %arrayidx54 = getelementptr inbounds [2 x double]* %Lepage, i32 0, i64 1
  store double %mul53, double* %arrayidx54, align 8
  %arrayidx55 = getelementptr inbounds [2 x double]* %Lepage, i32 0, i64 1
  %37 = load double* %arrayidx55, align 8
  %sub56 = fsub double -0.000000e+00, %37
  %arrayidx57 = getelementptr inbounds [2 x double]* %mLepage, i32 0, i64 1
  store double %sub56, double* %arrayidx57, align 8
  store i32 0, i32* %mu, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %38 = load i32* %mu, align 4
  %cmp = icmp slt i32 %38, 8
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %39 = load i32* %mu, align 4
  %idxprom = sext i32 %39 to i64
  %arrayidx59 = getelementptr inbounds [8 x i32]* %DirectLinks, i32 0, i64 %idxprom
  store i32 0, i32* %arrayidx59, align 4
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %40 = load i32* %mu, align 4
  %inc = add nsw i32 %40, 1
  store i32 %inc, i32* %mu, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  store i32 0, i32* %mu, align 4
  br label %for.cond60

for.cond60:                                       ; preds = %for.inc67, %for.end
  %41 = load i32* %mu, align 4
  %cmp61 = icmp slt i32 %41, 8
  br i1 %cmp61, label %for.body63, label %for.end69

for.body63:                                       ; preds = %for.cond60
  %42 = load i32* @sites_on_node, align 4
  %conv64 = sext i32 %42 to i64
  %call = call noalias i8* @calloc(i64 %conv64, i64 96) #2
  %43 = bitcast i8* %call to %struct.half_wilson_vector*
  %44 = load i32* %mu, align 4
  %idxprom65 = sext i32 %44 to i64
  %arrayidx66 = getelementptr inbounds [8 x %struct.half_wilson_vector*]* %hwvec, i32 0, i64 %idxprom65
  store %struct.half_wilson_vector* %43, %struct.half_wilson_vector** %arrayidx66, align 8
  br label %for.inc67

for.inc67:                                        ; preds = %for.body63
  %45 = load i32* %mu, align 4
  %inc68 = add nsw i32 %45, 1
  store i32 %inc68, i32* %mu, align 4
  br label %for.cond60

for.end69:                                        ; preds = %for.cond60
  %46 = load i32* @sites_on_node, align 4
  %conv70 = sext i32 %46 to i64
  %call71 = call noalias i8* @calloc(i64 %conv70, i64 96) #2
  %47 = bitcast i8* %call71 to %struct.half_wilson_vector*
  store %struct.half_wilson_vector* %47, %struct.half_wilson_vector** %temp_x, align 8
  store i32 0, i32* %i, align 4
  %48 = load %struct.site** @lattice, align 8
  store %struct.site* %48, %struct.site** %s, align 8
  br label %for.cond72

for.cond72:                                       ; preds = %for.inc85, %for.end69
  %49 = load i32* %i, align 4
  %50 = load i32* @sites_on_node, align 4
  %cmp73 = icmp slt i32 %49, %50
  br i1 %cmp73, label %for.body75, label %for.end87

for.body75:                                       ; preds = %for.cond72
  %51 = load i32* %i, align 4
  %idxprom76 = sext i32 %51 to i64
  %52 = load %struct.half_wilson_vector** %temp_x, align 8
  %arrayidx77 = getelementptr inbounds %struct.half_wilson_vector* %52, i64 %idxprom76
  %h = getelementptr inbounds %struct.half_wilson_vector* %arrayidx77, i32 0, i32 0
  %arrayidx78 = getelementptr inbounds [2 x %struct.su3_vector]* %h, i32 0, i64 0
  %53 = load %struct.site** %s, align 8
  %54 = bitcast %struct.site* %53 to i8*
  %55 = load i32* %x1_off.addr, align 4
  %idx.ext = sext i32 %55 to i64
  %add.ptr = getelementptr inbounds i8* %54, i64 %idx.ext
  %56 = bitcast i8* %add.ptr to %struct.su3_vector*
  %57 = bitcast %struct.su3_vector* %arrayidx78 to i8*
  %58 = bitcast %struct.su3_vector* %56 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %57, i8* %58, i64 48, i32 8, i1 false)
  %59 = load i32* %i, align 4
  %idxprom79 = sext i32 %59 to i64
  %60 = load %struct.half_wilson_vector** %temp_x, align 8
  %arrayidx80 = getelementptr inbounds %struct.half_wilson_vector* %60, i64 %idxprom79
  %h81 = getelementptr inbounds %struct.half_wilson_vector* %arrayidx80, i32 0, i32 0
  %arrayidx82 = getelementptr inbounds [2 x %struct.su3_vector]* %h81, i32 0, i64 1
  %61 = load %struct.site** %s, align 8
  %62 = bitcast %struct.site* %61 to i8*
  %63 = load i32* %x2_off.addr, align 4
  %idx.ext83 = sext i32 %63 to i64
  %add.ptr84 = getelementptr inbounds i8* %62, i64 %idx.ext83
  %64 = bitcast i8* %add.ptr84 to %struct.su3_vector*
  %65 = bitcast %struct.su3_vector* %arrayidx82 to i8*
  %66 = bitcast %struct.su3_vector* %64 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %65, i8* %66, i64 48, i32 8, i1 false)
  br label %for.inc85

for.inc85:                                        ; preds = %for.body75
  %67 = load i32* %i, align 4
  %inc86 = add nsw i32 %67, 1
  store i32 %inc86, i32* %i, align 4
  %68 = load %struct.site** %s, align 8
  %incdec.ptr = getelementptr inbounds %struct.site* %68, i32 1
  store %struct.site* %incdec.ptr, %struct.site** %s, align 8
  br label %for.cond72

for.end87:                                        ; preds = %for.cond72
  store i32 0, i32* %sig, align 4
  br label %for.cond88

for.cond88:                                       ; preds = %for.inc404, %for.end87
  %69 = load i32* %sig, align 4
  %cmp89 = icmp slt i32 %69, 8
  br i1 %cmp89, label %for.body91, label %for.end406

for.body91:                                       ; preds = %for.cond88
  store i32 0, i32* %mu, align 4
  br label %for.cond92

for.cond92:                                       ; preds = %for.inc401, %for.body91
  %70 = load i32* %mu, align 4
  %cmp93 = icmp slt i32 %70, 8
  br i1 %cmp93, label %for.body95, label %for.end403

for.body95:                                       ; preds = %for.cond92
  %71 = load i32* %mu, align 4
  %72 = load i32* %sig, align 4
  %cmp96 = icmp ne i32 %71, %72
  br i1 %cmp96, label %land.lhs.true, label %if.end400

land.lhs.true:                                    ; preds = %for.body95
  %73 = load i32* %mu, align 4
  %74 = load i32* %sig, align 4
  %sub98 = sub nsw i32 7, %74
  %cmp99 = icmp ne i32 %73, %sub98
  br i1 %cmp99, label %if.then, label %if.end400

if.then:                                          ; preds = %land.lhs.true
  %75 = load %struct.half_wilson_vector** %temp_x, align 8
  %arrayidx101 = getelementptr inbounds [8 x %struct.half_wilson_vector*]* %hwvec, i32 0, i64 0
  %76 = load %struct.half_wilson_vector** %arrayidx101, align 8
  %77 = load i32* %mu, align 4
  %sub102 = sub nsw i32 7, %77
  call void @u_shift_hw_fermion(%struct.half_wilson_vector* %75, %struct.half_wilson_vector* %76, i32 %sub102)
  %arrayidx103 = getelementptr inbounds [8 x %struct.half_wilson_vector*]* %hwvec, i32 0, i64 0
  %78 = load %struct.half_wilson_vector** %arrayidx103, align 8
  %arrayidx104 = getelementptr inbounds [8 x %struct.half_wilson_vector*]* %hwvec, i32 0, i64 7
  %79 = load %struct.half_wilson_vector** %arrayidx104, align 8
  %80 = load i32* %sig, align 4
  call void @u_shift_hw_fermion(%struct.half_wilson_vector* %78, %struct.half_wilson_vector* %79, i32 %80)
  %81 = load i32* %sig, align 4
  %cmp105 = icmp sle i32 %81, 3
  br i1 %cmp105, label %if.then107, label %if.end

if.then107:                                       ; preds = %if.then
  %arrayidx108 = getelementptr inbounds [8 x %struct.half_wilson_vector*]* %hwvec, i32 0, i64 7
  %82 = load %struct.half_wilson_vector** %arrayidx108, align 8
  %arrayidx109 = getelementptr inbounds [8 x %struct.half_wilson_vector*]* %hwvec, i32 0, i64 0
  %83 = load %struct.half_wilson_vector** %arrayidx109, align 8
  %84 = load i32* %sig, align 4
  %arraydecay = getelementptr inbounds [2 x double]* %mThreeSt, i32 0, i32 0
  call void @add_3f_force_to_mom(%struct.half_wilson_vector* %82, %struct.half_wilson_vector* %83, i32 %84, double* %arraydecay)
  br label %if.end

if.end:                                           ; preds = %if.then107, %if.then
  store i32 0, i32* %nu, align 4
  br label %for.cond110

for.cond110:                                      ; preds = %for.inc292, %if.end
  %85 = load i32* %nu, align 4
  %cmp111 = icmp slt i32 %85, 8
  br i1 %cmp111, label %for.body113, label %for.end294

for.body113:                                      ; preds = %for.cond110
  %86 = load i32* %nu, align 4
  %87 = load i32* %mu, align 4
  %cmp114 = icmp ne i32 %86, %87
  br i1 %cmp114, label %land.lhs.true116, label %if.end291

land.lhs.true116:                                 ; preds = %for.body113
  %88 = load i32* %nu, align 4
  %89 = load i32* %mu, align 4
  %sub117 = sub nsw i32 7, %89
  %cmp118 = icmp ne i32 %88, %sub117
  br i1 %cmp118, label %land.lhs.true120, label %if.end291

land.lhs.true120:                                 ; preds = %land.lhs.true116
  %90 = load i32* %nu, align 4
  %91 = load i32* %sig, align 4
  %cmp121 = icmp ne i32 %90, %91
  br i1 %cmp121, label %land.lhs.true123, label %if.end291

land.lhs.true123:                                 ; preds = %land.lhs.true120
  %92 = load i32* %nu, align 4
  %93 = load i32* %sig, align 4
  %sub124 = sub nsw i32 7, %93
  %cmp125 = icmp ne i32 %92, %sub124
  br i1 %cmp125, label %if.then127, label %if.end291

if.then127:                                       ; preds = %land.lhs.true123
  %arrayidx128 = getelementptr inbounds [8 x %struct.half_wilson_vector*]* %hwvec, i32 0, i64 0
  %94 = load %struct.half_wilson_vector** %arrayidx128, align 8
  %arrayidx129 = getelementptr inbounds [8 x %struct.half_wilson_vector*]* %hwvec, i32 0, i64 1
  %95 = load %struct.half_wilson_vector** %arrayidx129, align 8
  %96 = load i32* %nu, align 4
  %sub130 = sub nsw i32 7, %96
  call void @u_shift_hw_fermion(%struct.half_wilson_vector* %94, %struct.half_wilson_vector* %95, i32 %sub130)
  %arrayidx131 = getelementptr inbounds [8 x %struct.half_wilson_vector*]* %hwvec, i32 0, i64 1
  %97 = load %struct.half_wilson_vector** %arrayidx131, align 8
  %arrayidx132 = getelementptr inbounds [8 x %struct.half_wilson_vector*]* %hwvec, i32 0, i64 6
  %98 = load %struct.half_wilson_vector** %arrayidx132, align 8
  %99 = load i32* %sig, align 4
  call void @u_shift_hw_fermion(%struct.half_wilson_vector* %97, %struct.half_wilson_vector* %98, i32 %99)
  %100 = load i32* %sig, align 4
  %cmp133 = icmp sle i32 %100, 3
  br i1 %cmp133, label %if.then135, label %if.end139

if.then135:                                       ; preds = %if.then127
  %arrayidx136 = getelementptr inbounds [8 x %struct.half_wilson_vector*]* %hwvec, i32 0, i64 6
  %101 = load %struct.half_wilson_vector** %arrayidx136, align 8
  %arrayidx137 = getelementptr inbounds [8 x %struct.half_wilson_vector*]* %hwvec, i32 0, i64 1
  %102 = load %struct.half_wilson_vector** %arrayidx137, align 8
  %103 = load i32* %sig, align 4
  %arraydecay138 = getelementptr inbounds [2 x double]* %FiveSt, i32 0, i32 0
  call void @add_3f_force_to_mom(%struct.half_wilson_vector* %101, %struct.half_wilson_vector* %102, i32 %103, double* %arraydecay138)
  br label %if.end139

if.end139:                                        ; preds = %if.then135, %if.then127
  store i32 0, i32* %rho, align 4
  br label %for.cond140

for.cond140:                                      ; preds = %for.inc233, %if.end139
  %104 = load i32* %rho, align 4
  %cmp141 = icmp slt i32 %104, 8
  br i1 %cmp141, label %for.body143, label %for.end235

for.body143:                                      ; preds = %for.cond140
  %105 = load i32* %rho, align 4
  %106 = load i32* %mu, align 4
  %cmp144 = icmp ne i32 %105, %106
  br i1 %cmp144, label %land.lhs.true146, label %if.end232

land.lhs.true146:                                 ; preds = %for.body143
  %107 = load i32* %rho, align 4
  %108 = load i32* %mu, align 4
  %sub147 = sub nsw i32 7, %108
  %cmp148 = icmp ne i32 %107, %sub147
  br i1 %cmp148, label %land.lhs.true150, label %if.end232

land.lhs.true150:                                 ; preds = %land.lhs.true146
  %109 = load i32* %rho, align 4
  %110 = load i32* %nu, align 4
  %cmp151 = icmp ne i32 %109, %110
  br i1 %cmp151, label %land.lhs.true153, label %if.end232

land.lhs.true153:                                 ; preds = %land.lhs.true150
  %111 = load i32* %rho, align 4
  %112 = load i32* %nu, align 4
  %sub154 = sub nsw i32 7, %112
  %cmp155 = icmp ne i32 %111, %sub154
  br i1 %cmp155, label %land.lhs.true157, label %if.end232

land.lhs.true157:                                 ; preds = %land.lhs.true153
  %113 = load i32* %rho, align 4
  %114 = load i32* %sig, align 4
  %cmp158 = icmp ne i32 %113, %114
  br i1 %cmp158, label %land.lhs.true160, label %if.end232

land.lhs.true160:                                 ; preds = %land.lhs.true157
  %115 = load i32* %rho, align 4
  %116 = load i32* %sig, align 4
  %sub161 = sub nsw i32 7, %116
  %cmp162 = icmp ne i32 %115, %sub161
  br i1 %cmp162, label %if.then164, label %if.end232

if.then164:                                       ; preds = %land.lhs.true160
  %arrayidx165 = getelementptr inbounds [8 x %struct.half_wilson_vector*]* %hwvec, i32 0, i64 1
  %117 = load %struct.half_wilson_vector** %arrayidx165, align 8
  %arrayidx166 = getelementptr inbounds [8 x %struct.half_wilson_vector*]* %hwvec, i32 0, i64 2
  %118 = load %struct.half_wilson_vector** %arrayidx166, align 8
  %119 = load i32* %rho, align 4
  %sub167 = sub nsw i32 7, %119
  call void @u_shift_hw_fermion(%struct.half_wilson_vector* %117, %struct.half_wilson_vector* %118, i32 %sub167)
  %arrayidx168 = getelementptr inbounds [8 x %struct.half_wilson_vector*]* %hwvec, i32 0, i64 2
  %120 = load %struct.half_wilson_vector** %arrayidx168, align 8
  %arrayidx169 = getelementptr inbounds [8 x %struct.half_wilson_vector*]* %hwvec, i32 0, i64 3
  %121 = load %struct.half_wilson_vector** %arrayidx169, align 8
  %122 = load i32* %sig, align 4
  call void @u_shift_hw_fermion(%struct.half_wilson_vector* %120, %struct.half_wilson_vector* %121, i32 %122)
  %123 = load i32* %sig, align 4
  %cmp170 = icmp sle i32 %123, 3
  br i1 %cmp170, label %if.then172, label %if.end176

if.then172:                                       ; preds = %if.then164
  %arrayidx173 = getelementptr inbounds [8 x %struct.half_wilson_vector*]* %hwvec, i32 0, i64 3
  %124 = load %struct.half_wilson_vector** %arrayidx173, align 8
  %arrayidx174 = getelementptr inbounds [8 x %struct.half_wilson_vector*]* %hwvec, i32 0, i64 2
  %125 = load %struct.half_wilson_vector** %arrayidx174, align 8
  %126 = load i32* %sig, align 4
  %arraydecay175 = getelementptr inbounds [2 x double]* %mSevenSt, i32 0, i32 0
  call void @add_3f_force_to_mom(%struct.half_wilson_vector* %124, %struct.half_wilson_vector* %125, i32 %126, double* %arraydecay175)
  br label %if.end176

if.end176:                                        ; preds = %if.then172, %if.then164
  %arrayidx177 = getelementptr inbounds [8 x %struct.half_wilson_vector*]* %hwvec, i32 0, i64 3
  %127 = load %struct.half_wilson_vector** %arrayidx177, align 8
  %arrayidx178 = getelementptr inbounds [8 x %struct.half_wilson_vector*]* %hwvec, i32 0, i64 4
  %128 = load %struct.half_wilson_vector** %arrayidx178, align 8
  %129 = load i32* %rho, align 4
  call void @u_shift_hw_fermion(%struct.half_wilson_vector* %127, %struct.half_wilson_vector* %128, i32 %129)
  %130 = load i32* %rho, align 4
  %131 = load i32* %sig, align 4
  %arraydecay179 = getelementptr inbounds [2 x double]* %SevenSt, i32 0, i32 0
  %arrayidx180 = getelementptr inbounds [8 x %struct.half_wilson_vector*]* %hwvec, i32 0, i64 1
  %132 = load %struct.half_wilson_vector** %arrayidx180, align 8
  %arrayidx181 = getelementptr inbounds [8 x %struct.half_wilson_vector*]* %hwvec, i32 0, i64 3
  %133 = load %struct.half_wilson_vector** %arrayidx181, align 8
  %arrayidx182 = getelementptr inbounds [8 x %struct.half_wilson_vector*]* %hwvec, i32 0, i64 2
  %134 = load %struct.half_wilson_vector** %arrayidx182, align 8
  %arrayidx183 = getelementptr inbounds [8 x %struct.half_wilson_vector*]* %hwvec, i32 0, i64 4
  %135 = load %struct.half_wilson_vector** %arrayidx183, align 8
  call void @side_link_3f_force(i32 %130, i32 %131, double* %arraydecay179, %struct.half_wilson_vector* %132, %struct.half_wilson_vector* %133, %struct.half_wilson_vector* %134, %struct.half_wilson_vector* %135)
  %arrayidx184 = getelementptr inbounds [2 x double]* %SevenSt, i32 0, i64 0
  %136 = load double* %arrayidx184, align 8
  %arrayidx185 = getelementptr inbounds [2 x double]* %FiveSt, i32 0, i64 0
  %137 = load double* %arrayidx185, align 8
  %div186 = fdiv double %136, %137
  %arrayidx187 = getelementptr inbounds [2 x double]* %coeff, i32 0, i64 0
  store double %div186, double* %arrayidx187, align 8
  %arrayidx188 = getelementptr inbounds [2 x double]* %SevenSt, i32 0, i64 1
  %138 = load double* %arrayidx188, align 8
  %arrayidx189 = getelementptr inbounds [2 x double]* %FiveSt, i32 0, i64 1
  %139 = load double* %arrayidx189, align 8
  %div190 = fdiv double %138, %139
  %arrayidx191 = getelementptr inbounds [2 x double]* %coeff, i32 0, i64 1
  store double %div190, double* %arrayidx191, align 8
  store i32 0, i32* %i, align 4
  %140 = load %struct.site** @lattice, align 8
  store %struct.site* %140, %struct.site** %s, align 8
  br label %for.cond192

for.cond192:                                      ; preds = %for.inc228, %if.end176
  %141 = load i32* %i, align 4
  %142 = load i32* @sites_on_node, align 4
  %cmp193 = icmp slt i32 %141, %142
  br i1 %cmp193, label %for.body195, label %for.end231

for.body195:                                      ; preds = %for.cond192
  %143 = load i32* %i, align 4
  %idxprom196 = sext i32 %143 to i64
  %arrayidx197 = getelementptr inbounds [8 x %struct.half_wilson_vector*]* %hwvec, i32 0, i64 6
  %144 = load %struct.half_wilson_vector** %arrayidx197, align 8
  %arrayidx198 = getelementptr inbounds %struct.half_wilson_vector* %144, i64 %idxprom196
  %h199 = getelementptr inbounds %struct.half_wilson_vector* %arrayidx198, i32 0, i32 0
  %arrayidx200 = getelementptr inbounds [2 x %struct.su3_vector]* %h199, i32 0, i64 0
  %145 = load i32* %i, align 4
  %idxprom201 = sext i32 %145 to i64
  %arrayidx202 = getelementptr inbounds [8 x %struct.half_wilson_vector*]* %hwvec, i32 0, i64 4
  %146 = load %struct.half_wilson_vector** %arrayidx202, align 8
  %arrayidx203 = getelementptr inbounds %struct.half_wilson_vector* %146, i64 %idxprom201
  %h204 = getelementptr inbounds %struct.half_wilson_vector* %arrayidx203, i32 0, i32 0
  %arrayidx205 = getelementptr inbounds [2 x %struct.su3_vector]* %h204, i32 0, i64 0
  %arrayidx206 = getelementptr inbounds [2 x double]* %coeff, i32 0, i64 0
  %147 = load double* %arrayidx206, align 8
  %148 = load i32* %i, align 4
  %idxprom207 = sext i32 %148 to i64
  %arrayidx208 = getelementptr inbounds [8 x %struct.half_wilson_vector*]* %hwvec, i32 0, i64 6
  %149 = load %struct.half_wilson_vector** %arrayidx208, align 8
  %arrayidx209 = getelementptr inbounds %struct.half_wilson_vector* %149, i64 %idxprom207
  %h210 = getelementptr inbounds %struct.half_wilson_vector* %arrayidx209, i32 0, i32 0
  %arrayidx211 = getelementptr inbounds [2 x %struct.su3_vector]* %h210, i32 0, i64 0
  call void @scalar_mult_add_su3_vector(%struct.su3_vector* %arrayidx200, %struct.su3_vector* %arrayidx205, double %147, %struct.su3_vector* %arrayidx211)
  %150 = load i32* %i, align 4
  %idxprom212 = sext i32 %150 to i64
  %arrayidx213 = getelementptr inbounds [8 x %struct.half_wilson_vector*]* %hwvec, i32 0, i64 6
  %151 = load %struct.half_wilson_vector** %arrayidx213, align 8
  %arrayidx214 = getelementptr inbounds %struct.half_wilson_vector* %151, i64 %idxprom212
  %h215 = getelementptr inbounds %struct.half_wilson_vector* %arrayidx214, i32 0, i32 0
  %arrayidx216 = getelementptr inbounds [2 x %struct.su3_vector]* %h215, i32 0, i64 1
  %152 = load i32* %i, align 4
  %idxprom217 = sext i32 %152 to i64
  %arrayidx218 = getelementptr inbounds [8 x %struct.half_wilson_vector*]* %hwvec, i32 0, i64 4
  %153 = load %struct.half_wilson_vector** %arrayidx218, align 8
  %arrayidx219 = getelementptr inbounds %struct.half_wilson_vector* %153, i64 %idxprom217
  %h220 = getelementptr inbounds %struct.half_wilson_vector* %arrayidx219, i32 0, i32 0
  %arrayidx221 = getelementptr inbounds [2 x %struct.su3_vector]* %h220, i32 0, i64 1
  %arrayidx222 = getelementptr inbounds [2 x double]* %coeff, i32 0, i64 1
  %154 = load double* %arrayidx222, align 8
  %155 = load i32* %i, align 4
  %idxprom223 = sext i32 %155 to i64
  %arrayidx224 = getelementptr inbounds [8 x %struct.half_wilson_vector*]* %hwvec, i32 0, i64 6
  %156 = load %struct.half_wilson_vector** %arrayidx224, align 8
  %arrayidx225 = getelementptr inbounds %struct.half_wilson_vector* %156, i64 %idxprom223
  %h226 = getelementptr inbounds %struct.half_wilson_vector* %arrayidx225, i32 0, i32 0
  %arrayidx227 = getelementptr inbounds [2 x %struct.su3_vector]* %h226, i32 0, i64 1
  call void @scalar_mult_add_su3_vector(%struct.su3_vector* %arrayidx216, %struct.su3_vector* %arrayidx221, double %154, %struct.su3_vector* %arrayidx227)
  br label %for.inc228

for.inc228:                                       ; preds = %for.body195
  %157 = load i32* %i, align 4
  %inc229 = add nsw i32 %157, 1
  store i32 %inc229, i32* %i, align 4
  %158 = load %struct.site** %s, align 8
  %incdec.ptr230 = getelementptr inbounds %struct.site* %158, i32 1
  store %struct.site* %incdec.ptr230, %struct.site** %s, align 8
  br label %for.cond192

for.end231:                                       ; preds = %for.cond192
  br label %if.end232

if.end232:                                        ; preds = %for.end231, %land.lhs.true160, %land.lhs.true157, %land.lhs.true153, %land.lhs.true150, %land.lhs.true146, %for.body143
  br label %for.inc233

for.inc233:                                       ; preds = %if.end232
  %159 = load i32* %rho, align 4
  %inc234 = add nsw i32 %159, 1
  store i32 %inc234, i32* %rho, align 4
  br label %for.cond140

for.end235:                                       ; preds = %for.cond140
  %arrayidx236 = getelementptr inbounds [8 x %struct.half_wilson_vector*]* %hwvec, i32 0, i64 6
  %160 = load %struct.half_wilson_vector** %arrayidx236, align 8
  %arrayidx237 = getelementptr inbounds [8 x %struct.half_wilson_vector*]* %hwvec, i32 0, i64 3
  %161 = load %struct.half_wilson_vector** %arrayidx237, align 8
  %162 = load i32* %nu, align 4
  call void @u_shift_hw_fermion(%struct.half_wilson_vector* %160, %struct.half_wilson_vector* %161, i32 %162)
  %163 = load i32* %nu, align 4
  %164 = load i32* %sig, align 4
  %arraydecay238 = getelementptr inbounds [2 x double]* %mFiveSt, i32 0, i32 0
  %arrayidx239 = getelementptr inbounds [8 x %struct.half_wilson_vector*]* %hwvec, i32 0, i64 0
  %165 = load %struct.half_wilson_vector** %arrayidx239, align 8
  %arrayidx240 = getelementptr inbounds [8 x %struct.half_wilson_vector*]* %hwvec, i32 0, i64 6
  %166 = load %struct.half_wilson_vector** %arrayidx240, align 8
  %arrayidx241 = getelementptr inbounds [8 x %struct.half_wilson_vector*]* %hwvec, i32 0, i64 1
  %167 = load %struct.half_wilson_vector** %arrayidx241, align 8
  %arrayidx242 = getelementptr inbounds [8 x %struct.half_wilson_vector*]* %hwvec, i32 0, i64 3
  %168 = load %struct.half_wilson_vector** %arrayidx242, align 8
  call void @side_link_3f_force(i32 %163, i32 %164, double* %arraydecay238, %struct.half_wilson_vector* %165, %struct.half_wilson_vector* %166, %struct.half_wilson_vector* %167, %struct.half_wilson_vector* %168)
  %arrayidx243 = getelementptr inbounds [2 x double]* %FiveSt, i32 0, i64 0
  %169 = load double* %arrayidx243, align 8
  %arrayidx244 = getelementptr inbounds [2 x double]* %ThreeSt, i32 0, i64 0
  %170 = load double* %arrayidx244, align 8
  %div245 = fdiv double %169, %170
  %arrayidx246 = getelementptr inbounds [2 x double]* %coeff, i32 0, i64 0
  store double %div245, double* %arrayidx246, align 8
  %arrayidx247 = getelementptr inbounds [2 x double]* %FiveSt, i32 0, i64 1
  %171 = load double* %arrayidx247, align 8
  %arrayidx248 = getelementptr inbounds [2 x double]* %ThreeSt, i32 0, i64 1
  %172 = load double* %arrayidx248, align 8
  %div249 = fdiv double %171, %172
  %arrayidx250 = getelementptr inbounds [2 x double]* %coeff, i32 0, i64 1
  store double %div249, double* %arrayidx250, align 8
  store i32 0, i32* %i, align 4
  %173 = load %struct.site** @lattice, align 8
  store %struct.site* %173, %struct.site** %s, align 8
  br label %for.cond251

for.cond251:                                      ; preds = %for.inc287, %for.end235
  %174 = load i32* %i, align 4
  %175 = load i32* @sites_on_node, align 4
  %cmp252 = icmp slt i32 %174, %175
  br i1 %cmp252, label %for.body254, label %for.end290

for.body254:                                      ; preds = %for.cond251
  %176 = load i32* %i, align 4
  %idxprom255 = sext i32 %176 to i64
  %arrayidx256 = getelementptr inbounds [8 x %struct.half_wilson_vector*]* %hwvec, i32 0, i64 7
  %177 = load %struct.half_wilson_vector** %arrayidx256, align 8
  %arrayidx257 = getelementptr inbounds %struct.half_wilson_vector* %177, i64 %idxprom255
  %h258 = getelementptr inbounds %struct.half_wilson_vector* %arrayidx257, i32 0, i32 0
  %arrayidx259 = getelementptr inbounds [2 x %struct.su3_vector]* %h258, i32 0, i64 0
  %178 = load i32* %i, align 4
  %idxprom260 = sext i32 %178 to i64
  %arrayidx261 = getelementptr inbounds [8 x %struct.half_wilson_vector*]* %hwvec, i32 0, i64 3
  %179 = load %struct.half_wilson_vector** %arrayidx261, align 8
  %arrayidx262 = getelementptr inbounds %struct.half_wilson_vector* %179, i64 %idxprom260
  %h263 = getelementptr inbounds %struct.half_wilson_vector* %arrayidx262, i32 0, i32 0
  %arrayidx264 = getelementptr inbounds [2 x %struct.su3_vector]* %h263, i32 0, i64 0
  %arrayidx265 = getelementptr inbounds [2 x double]* %coeff, i32 0, i64 0
  %180 = load double* %arrayidx265, align 8
  %181 = load i32* %i, align 4
  %idxprom266 = sext i32 %181 to i64
  %arrayidx267 = getelementptr inbounds [8 x %struct.half_wilson_vector*]* %hwvec, i32 0, i64 7
  %182 = load %struct.half_wilson_vector** %arrayidx267, align 8
  %arrayidx268 = getelementptr inbounds %struct.half_wilson_vector* %182, i64 %idxprom266
  %h269 = getelementptr inbounds %struct.half_wilson_vector* %arrayidx268, i32 0, i32 0
  %arrayidx270 = getelementptr inbounds [2 x %struct.su3_vector]* %h269, i32 0, i64 0
  call void @scalar_mult_add_su3_vector(%struct.su3_vector* %arrayidx259, %struct.su3_vector* %arrayidx264, double %180, %struct.su3_vector* %arrayidx270)
  %183 = load i32* %i, align 4
  %idxprom271 = sext i32 %183 to i64
  %arrayidx272 = getelementptr inbounds [8 x %struct.half_wilson_vector*]* %hwvec, i32 0, i64 7
  %184 = load %struct.half_wilson_vector** %arrayidx272, align 8
  %arrayidx273 = getelementptr inbounds %struct.half_wilson_vector* %184, i64 %idxprom271
  %h274 = getelementptr inbounds %struct.half_wilson_vector* %arrayidx273, i32 0, i32 0
  %arrayidx275 = getelementptr inbounds [2 x %struct.su3_vector]* %h274, i32 0, i64 1
  %185 = load i32* %i, align 4
  %idxprom276 = sext i32 %185 to i64
  %arrayidx277 = getelementptr inbounds [8 x %struct.half_wilson_vector*]* %hwvec, i32 0, i64 3
  %186 = load %struct.half_wilson_vector** %arrayidx277, align 8
  %arrayidx278 = getelementptr inbounds %struct.half_wilson_vector* %186, i64 %idxprom276
  %h279 = getelementptr inbounds %struct.half_wilson_vector* %arrayidx278, i32 0, i32 0
  %arrayidx280 = getelementptr inbounds [2 x %struct.su3_vector]* %h279, i32 0, i64 1
  %arrayidx281 = getelementptr inbounds [2 x double]* %coeff, i32 0, i64 1
  %187 = load double* %arrayidx281, align 8
  %188 = load i32* %i, align 4
  %idxprom282 = sext i32 %188 to i64
  %arrayidx283 = getelementptr inbounds [8 x %struct.half_wilson_vector*]* %hwvec, i32 0, i64 7
  %189 = load %struct.half_wilson_vector** %arrayidx283, align 8
  %arrayidx284 = getelementptr inbounds %struct.half_wilson_vector* %189, i64 %idxprom282
  %h285 = getelementptr inbounds %struct.half_wilson_vector* %arrayidx284, i32 0, i32 0
  %arrayidx286 = getelementptr inbounds [2 x %struct.su3_vector]* %h285, i32 0, i64 1
  call void @scalar_mult_add_su3_vector(%struct.su3_vector* %arrayidx275, %struct.su3_vector* %arrayidx280, double %187, %struct.su3_vector* %arrayidx286)
  br label %for.inc287

for.inc287:                                       ; preds = %for.body254
  %190 = load i32* %i, align 4
  %inc288 = add nsw i32 %190, 1
  store i32 %inc288, i32* %i, align 4
  %191 = load %struct.site** %s, align 8
  %incdec.ptr289 = getelementptr inbounds %struct.site* %191, i32 1
  store %struct.site* %incdec.ptr289, %struct.site** %s, align 8
  br label %for.cond251

for.end290:                                       ; preds = %for.cond251
  br label %if.end291

if.end291:                                        ; preds = %for.end290, %land.lhs.true123, %land.lhs.true120, %land.lhs.true116, %for.body113
  br label %for.inc292

for.inc292:                                       ; preds = %if.end291
  %192 = load i32* %nu, align 4
  %inc293 = add nsw i32 %192, 1
  store i32 %inc293, i32* %nu, align 4
  br label %for.cond110

for.end294:                                       ; preds = %for.cond110
  %arrayidx295 = getelementptr inbounds [8 x %struct.half_wilson_vector*]* %hwvec, i32 0, i64 0
  %193 = load %struct.half_wilson_vector** %arrayidx295, align 8
  %arrayidx296 = getelementptr inbounds [8 x %struct.half_wilson_vector*]* %hwvec, i32 0, i64 1
  %194 = load %struct.half_wilson_vector** %arrayidx296, align 8
  %195 = load i32* %mu, align 4
  %sub297 = sub nsw i32 7, %195
  call void @u_shift_hw_fermion(%struct.half_wilson_vector* %193, %struct.half_wilson_vector* %194, i32 %sub297)
  %arrayidx298 = getelementptr inbounds [8 x %struct.half_wilson_vector*]* %hwvec, i32 0, i64 1
  %196 = load %struct.half_wilson_vector** %arrayidx298, align 8
  %arrayidx299 = getelementptr inbounds [8 x %struct.half_wilson_vector*]* %hwvec, i32 0, i64 6
  %197 = load %struct.half_wilson_vector** %arrayidx299, align 8
  %198 = load i32* %sig, align 4
  call void @u_shift_hw_fermion(%struct.half_wilson_vector* %196, %struct.half_wilson_vector* %197, i32 %198)
  %199 = load i32* %sig, align 4
  %cmp300 = icmp sle i32 %199, 3
  br i1 %cmp300, label %if.then302, label %if.end306

if.then302:                                       ; preds = %for.end294
  %arrayidx303 = getelementptr inbounds [8 x %struct.half_wilson_vector*]* %hwvec, i32 0, i64 6
  %200 = load %struct.half_wilson_vector** %arrayidx303, align 8
  %arrayidx304 = getelementptr inbounds [8 x %struct.half_wilson_vector*]* %hwvec, i32 0, i64 1
  %201 = load %struct.half_wilson_vector** %arrayidx304, align 8
  %202 = load i32* %sig, align 4
  %arraydecay305 = getelementptr inbounds [2 x double]* %Lepage, i32 0, i32 0
  call void @add_3f_force_to_mom(%struct.half_wilson_vector* %200, %struct.half_wilson_vector* %201, i32 %202, double* %arraydecay305)
  br label %if.end306

if.end306:                                        ; preds = %if.then302, %for.end294
  %arrayidx307 = getelementptr inbounds [8 x %struct.half_wilson_vector*]* %hwvec, i32 0, i64 6
  %203 = load %struct.half_wilson_vector** %arrayidx307, align 8
  %arrayidx308 = getelementptr inbounds [8 x %struct.half_wilson_vector*]* %hwvec, i32 0, i64 3
  %204 = load %struct.half_wilson_vector** %arrayidx308, align 8
  %205 = load i32* %mu, align 4
  call void @u_shift_hw_fermion(%struct.half_wilson_vector* %203, %struct.half_wilson_vector* %204, i32 %205)
  %206 = load i32* %mu, align 4
  %207 = load i32* %sig, align 4
  %arraydecay309 = getelementptr inbounds [2 x double]* %mLepage, i32 0, i32 0
  %arrayidx310 = getelementptr inbounds [8 x %struct.half_wilson_vector*]* %hwvec, i32 0, i64 0
  %208 = load %struct.half_wilson_vector** %arrayidx310, align 8
  %arrayidx311 = getelementptr inbounds [8 x %struct.half_wilson_vector*]* %hwvec, i32 0, i64 6
  %209 = load %struct.half_wilson_vector** %arrayidx311, align 8
  %arrayidx312 = getelementptr inbounds [8 x %struct.half_wilson_vector*]* %hwvec, i32 0, i64 1
  %210 = load %struct.half_wilson_vector** %arrayidx312, align 8
  %arrayidx313 = getelementptr inbounds [8 x %struct.half_wilson_vector*]* %hwvec, i32 0, i64 3
  %211 = load %struct.half_wilson_vector** %arrayidx313, align 8
  call void @side_link_3f_force(i32 %206, i32 %207, double* %arraydecay309, %struct.half_wilson_vector* %208, %struct.half_wilson_vector* %209, %struct.half_wilson_vector* %210, %struct.half_wilson_vector* %211)
  %arrayidx314 = getelementptr inbounds [2 x double]* %Lepage, i32 0, i64 0
  %212 = load double* %arrayidx314, align 8
  %arrayidx315 = getelementptr inbounds [2 x double]* %ThreeSt, i32 0, i64 0
  %213 = load double* %arrayidx315, align 8
  %div316 = fdiv double %212, %213
  %arrayidx317 = getelementptr inbounds [2 x double]* %coeff, i32 0, i64 0
  store double %div316, double* %arrayidx317, align 8
  %arrayidx318 = getelementptr inbounds [2 x double]* %Lepage, i32 0, i64 1
  %214 = load double* %arrayidx318, align 8
  %arrayidx319 = getelementptr inbounds [2 x double]* %ThreeSt, i32 0, i64 1
  %215 = load double* %arrayidx319, align 8
  %div320 = fdiv double %214, %215
  %arrayidx321 = getelementptr inbounds [2 x double]* %coeff, i32 0, i64 1
  store double %div320, double* %arrayidx321, align 8
  store i32 0, i32* %i, align 4
  %216 = load %struct.site** @lattice, align 8
  store %struct.site* %216, %struct.site** %s, align 8
  br label %for.cond322

for.cond322:                                      ; preds = %for.inc358, %if.end306
  %217 = load i32* %i, align 4
  %218 = load i32* @sites_on_node, align 4
  %cmp323 = icmp slt i32 %217, %218
  br i1 %cmp323, label %for.body325, label %for.end361

for.body325:                                      ; preds = %for.cond322
  %219 = load i32* %i, align 4
  %idxprom326 = sext i32 %219 to i64
  %arrayidx327 = getelementptr inbounds [8 x %struct.half_wilson_vector*]* %hwvec, i32 0, i64 7
  %220 = load %struct.half_wilson_vector** %arrayidx327, align 8
  %arrayidx328 = getelementptr inbounds %struct.half_wilson_vector* %220, i64 %idxprom326
  %h329 = getelementptr inbounds %struct.half_wilson_vector* %arrayidx328, i32 0, i32 0
  %arrayidx330 = getelementptr inbounds [2 x %struct.su3_vector]* %h329, i32 0, i64 0
  %221 = load i32* %i, align 4
  %idxprom331 = sext i32 %221 to i64
  %arrayidx332 = getelementptr inbounds [8 x %struct.half_wilson_vector*]* %hwvec, i32 0, i64 3
  %222 = load %struct.half_wilson_vector** %arrayidx332, align 8
  %arrayidx333 = getelementptr inbounds %struct.half_wilson_vector* %222, i64 %idxprom331
  %h334 = getelementptr inbounds %struct.half_wilson_vector* %arrayidx333, i32 0, i32 0
  %arrayidx335 = getelementptr inbounds [2 x %struct.su3_vector]* %h334, i32 0, i64 0
  %arrayidx336 = getelementptr inbounds [2 x double]* %coeff, i32 0, i64 0
  %223 = load double* %arrayidx336, align 8
  %224 = load i32* %i, align 4
  %idxprom337 = sext i32 %224 to i64
  %arrayidx338 = getelementptr inbounds [8 x %struct.half_wilson_vector*]* %hwvec, i32 0, i64 7
  %225 = load %struct.half_wilson_vector** %arrayidx338, align 8
  %arrayidx339 = getelementptr inbounds %struct.half_wilson_vector* %225, i64 %idxprom337
  %h340 = getelementptr inbounds %struct.half_wilson_vector* %arrayidx339, i32 0, i32 0
  %arrayidx341 = getelementptr inbounds [2 x %struct.su3_vector]* %h340, i32 0, i64 0
  call void @scalar_mult_add_su3_vector(%struct.su3_vector* %arrayidx330, %struct.su3_vector* %arrayidx335, double %223, %struct.su3_vector* %arrayidx341)
  %226 = load i32* %i, align 4
  %idxprom342 = sext i32 %226 to i64
  %arrayidx343 = getelementptr inbounds [8 x %struct.half_wilson_vector*]* %hwvec, i32 0, i64 7
  %227 = load %struct.half_wilson_vector** %arrayidx343, align 8
  %arrayidx344 = getelementptr inbounds %struct.half_wilson_vector* %227, i64 %idxprom342
  %h345 = getelementptr inbounds %struct.half_wilson_vector* %arrayidx344, i32 0, i32 0
  %arrayidx346 = getelementptr inbounds [2 x %struct.su3_vector]* %h345, i32 0, i64 1
  %228 = load i32* %i, align 4
  %idxprom347 = sext i32 %228 to i64
  %arrayidx348 = getelementptr inbounds [8 x %struct.half_wilson_vector*]* %hwvec, i32 0, i64 3
  %229 = load %struct.half_wilson_vector** %arrayidx348, align 8
  %arrayidx349 = getelementptr inbounds %struct.half_wilson_vector* %229, i64 %idxprom347
  %h350 = getelementptr inbounds %struct.half_wilson_vector* %arrayidx349, i32 0, i32 0
  %arrayidx351 = getelementptr inbounds [2 x %struct.su3_vector]* %h350, i32 0, i64 1
  %arrayidx352 = getelementptr inbounds [2 x double]* %coeff, i32 0, i64 1
  %230 = load double* %arrayidx352, align 8
  %231 = load i32* %i, align 4
  %idxprom353 = sext i32 %231 to i64
  %arrayidx354 = getelementptr inbounds [8 x %struct.half_wilson_vector*]* %hwvec, i32 0, i64 7
  %232 = load %struct.half_wilson_vector** %arrayidx354, align 8
  %arrayidx355 = getelementptr inbounds %struct.half_wilson_vector* %232, i64 %idxprom353
  %h356 = getelementptr inbounds %struct.half_wilson_vector* %arrayidx355, i32 0, i32 0
  %arrayidx357 = getelementptr inbounds [2 x %struct.su3_vector]* %h356, i32 0, i64 1
  call void @scalar_mult_add_su3_vector(%struct.su3_vector* %arrayidx346, %struct.su3_vector* %arrayidx351, double %230, %struct.su3_vector* %arrayidx357)
  br label %for.inc358

for.inc358:                                       ; preds = %for.body325
  %233 = load i32* %i, align 4
  %inc359 = add nsw i32 %233, 1
  store i32 %inc359, i32* %i, align 4
  %234 = load %struct.site** %s, align 8
  %incdec.ptr360 = getelementptr inbounds %struct.site* %234, i32 1
  store %struct.site* %incdec.ptr360, %struct.site** %s, align 8
  br label %for.cond322

for.end361:                                       ; preds = %for.cond322
  %235 = load i32* %mu, align 4
  %cmp362 = icmp sle i32 %235, 3
  br i1 %cmp362, label %if.then364, label %if.end367

if.then364:                                       ; preds = %for.end361
  %arrayidx365 = getelementptr inbounds [8 x %struct.half_wilson_vector*]* %hwvec, i32 0, i64 7
  %236 = load %struct.half_wilson_vector** %arrayidx365, align 8
  %arrayidx366 = getelementptr inbounds [8 x %struct.half_wilson_vector*]* %hwvec, i32 0, i64 3
  %237 = load %struct.half_wilson_vector** %arrayidx366, align 8
  %238 = load i32* %mu, align 4
  call void @u_shift_hw_fermion(%struct.half_wilson_vector* %236, %struct.half_wilson_vector* %237, i32 %238)
  br label %if.end367

if.end367:                                        ; preds = %if.then364, %for.end361
  %239 = load i32* %mu, align 4
  %240 = load i32* %sig, align 4
  %arraydecay368 = getelementptr inbounds [2 x double]* %ThreeSt, i32 0, i32 0
  %241 = load %struct.half_wilson_vector** %temp_x, align 8
  %arrayidx369 = getelementptr inbounds [8 x %struct.half_wilson_vector*]* %hwvec, i32 0, i64 7
  %242 = load %struct.half_wilson_vector** %arrayidx369, align 8
  %arrayidx370 = getelementptr inbounds [8 x %struct.half_wilson_vector*]* %hwvec, i32 0, i64 0
  %243 = load %struct.half_wilson_vector** %arrayidx370, align 8
  %arrayidx371 = getelementptr inbounds [8 x %struct.half_wilson_vector*]* %hwvec, i32 0, i64 3
  %244 = load %struct.half_wilson_vector** %arrayidx371, align 8
  call void @side_link_3f_force(i32 %239, i32 %240, double* %arraydecay368, %struct.half_wilson_vector* %241, %struct.half_wilson_vector* %242, %struct.half_wilson_vector* %243, %struct.half_wilson_vector* %244)
  %245 = load i32* %mu, align 4
  %idxprom372 = sext i32 %245 to i64
  %arrayidx373 = getelementptr inbounds [8 x i32]* %DirectLinks, i32 0, i64 %idxprom372
  %246 = load i32* %arrayidx373, align 4
  %tobool = icmp ne i32 %246, 0
  br i1 %tobool, label %if.end399, label %if.then374

if.then374:                                       ; preds = %if.end367
  %247 = load i32* %mu, align 4
  %idxprom375 = sext i32 %247 to i64
  %arrayidx376 = getelementptr inbounds [8 x i32]* %DirectLinks, i32 0, i64 %idxprom375
  store i32 1, i32* %arrayidx376, align 4
  %248 = load i32* %mu, align 4
  %cmp377 = icmp sgt i32 %248, 3
  br i1 %cmp377, label %if.then379, label %if.else

if.then379:                                       ; preds = %if.then374
  %arrayidx380 = getelementptr inbounds [8 x %struct.half_wilson_vector*]* %hwvec, i32 0, i64 0
  %249 = load %struct.half_wilson_vector** %arrayidx380, align 8
  %250 = load %struct.half_wilson_vector** %temp_x, align 8
  %251 = load i32* %mu, align 4
  %sub381 = sub nsw i32 7, %251
  %arraydecay382 = getelementptr inbounds [2 x double]* %OneLink, i32 0, i32 0
  call void @add_3f_force_to_mom(%struct.half_wilson_vector* %249, %struct.half_wilson_vector* %250, i32 %sub381, double* %arraydecay382)
  %252 = load %struct.half_wilson_vector** %temp_x, align 8
  %arrayidx383 = getelementptr inbounds [8 x %struct.half_wilson_vector*]* %hwvec, i32 0, i64 4
  %253 = load %struct.half_wilson_vector** %arrayidx383, align 8
  %254 = load i32* %mu, align 4
  call void @u_shift_hw_fermion(%struct.half_wilson_vector* %252, %struct.half_wilson_vector* %253, i32 %254)
  %arrayidx384 = getelementptr inbounds [8 x %struct.half_wilson_vector*]* %hwvec, i32 0, i64 1
  %255 = load %struct.half_wilson_vector** %arrayidx384, align 8
  %arrayidx385 = getelementptr inbounds [8 x %struct.half_wilson_vector*]* %hwvec, i32 0, i64 4
  %256 = load %struct.half_wilson_vector** %arrayidx385, align 8
  %257 = load i32* %mu, align 4
  %sub386 = sub nsw i32 7, %257
  %arraydecay387 = getelementptr inbounds [2 x double]* %mNaik, i32 0, i32 0
  call void @add_3f_force_to_mom(%struct.half_wilson_vector* %255, %struct.half_wilson_vector* %256, i32 %sub386, double* %arraydecay387)
  %arrayidx388 = getelementptr inbounds [8 x %struct.half_wilson_vector*]* %hwvec, i32 0, i64 1
  %258 = load %struct.half_wilson_vector** %arrayidx388, align 8
  %arrayidx389 = getelementptr inbounds [8 x %struct.half_wilson_vector*]* %hwvec, i32 0, i64 4
  %259 = load %struct.half_wilson_vector** %arrayidx389, align 8
  %260 = load i32* %mu, align 4
  %sub390 = sub nsw i32 7, %260
  call void @u_shift_hw_fermion(%struct.half_wilson_vector* %258, %struct.half_wilson_vector* %259, i32 %sub390)
  %arrayidx391 = getelementptr inbounds [8 x %struct.half_wilson_vector*]* %hwvec, i32 0, i64 4
  %261 = load %struct.half_wilson_vector** %arrayidx391, align 8
  %262 = load %struct.half_wilson_vector** %temp_x, align 8
  %263 = load i32* %mu, align 4
  %sub392 = sub nsw i32 7, %263
  %arraydecay393 = getelementptr inbounds [2 x double]* %Naik, i32 0, i32 0
  call void @add_3f_force_to_mom(%struct.half_wilson_vector* %261, %struct.half_wilson_vector* %262, i32 %sub392, double* %arraydecay393)
  br label %if.end398

if.else:                                          ; preds = %if.then374
  %264 = load %struct.half_wilson_vector** %temp_x, align 8
  %arrayidx394 = getelementptr inbounds [8 x %struct.half_wilson_vector*]* %hwvec, i32 0, i64 4
  %265 = load %struct.half_wilson_vector** %arrayidx394, align 8
  %266 = load i32* %mu, align 4
  call void @u_shift_hw_fermion(%struct.half_wilson_vector* %264, %struct.half_wilson_vector* %265, i32 %266)
  %arrayidx395 = getelementptr inbounds [8 x %struct.half_wilson_vector*]* %hwvec, i32 0, i64 4
  %267 = load %struct.half_wilson_vector** %arrayidx395, align 8
  %arrayidx396 = getelementptr inbounds [8 x %struct.half_wilson_vector*]* %hwvec, i32 0, i64 1
  %268 = load %struct.half_wilson_vector** %arrayidx396, align 8
  %269 = load i32* %mu, align 4
  %arraydecay397 = getelementptr inbounds [2 x double]* %Naik, i32 0, i32 0
  call void @add_3f_force_to_mom(%struct.half_wilson_vector* %267, %struct.half_wilson_vector* %268, i32 %269, double* %arraydecay397)
  br label %if.end398

if.end398:                                        ; preds = %if.else, %if.then379
  br label %if.end399

if.end399:                                        ; preds = %if.end398, %if.end367
  br label %if.end400

if.end400:                                        ; preds = %if.end399, %land.lhs.true, %for.body95
  br label %for.inc401

for.inc401:                                       ; preds = %if.end400
  %270 = load i32* %mu, align 4
  %inc402 = add nsw i32 %270, 1
  store i32 %inc402, i32* %mu, align 4
  br label %for.cond92

for.end403:                                       ; preds = %for.cond92
  br label %for.inc404

for.inc404:                                       ; preds = %for.end403
  %271 = load i32* %sig, align 4
  %inc405 = add nsw i32 %271, 1
  store i32 %inc405, i32* %sig, align 4
  br label %for.cond88

for.end406:                                       ; preds = %for.cond88
  %272 = load %struct.half_wilson_vector** %temp_x, align 8
  %273 = bitcast %struct.half_wilson_vector* %272 to i8*
  call void @free(i8* %273) #2
  store i32 0, i32* %mu, align 4
  br label %for.cond407

for.cond407:                                      ; preds = %for.inc413, %for.end406
  %274 = load i32* %mu, align 4
  %cmp408 = icmp slt i32 %274, 8
  br i1 %cmp408, label %for.body410, label %for.end415

for.body410:                                      ; preds = %for.cond407
  %275 = load i32* %mu, align 4
  %idxprom411 = sext i32 %275 to i64
  %arrayidx412 = getelementptr inbounds [8 x %struct.half_wilson_vector*]* %hwvec, i32 0, i64 %idxprom411
  %276 = load %struct.half_wilson_vector** %arrayidx412, align 8
  %277 = bitcast %struct.half_wilson_vector* %276 to i8*
  call void @free(i8* %277) #2
  br label %for.inc413

for.inc413:                                       ; preds = %for.body410
  %278 = load i32* %mu, align 4
  %inc414 = add nsw i32 %278, 1
  store i32 %inc414, i32* %mu, align 4
  br label %for.cond407

for.end415:                                       ; preds = %for.cond407
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @u_shift_hw_fermion(%struct.half_wilson_vector* %src, %struct.half_wilson_vector* %dest, i32 %dir) #0 {
entry:
  %src.addr = alloca %struct.half_wilson_vector*, align 8
  %dest.addr = alloca %struct.half_wilson_vector*, align 8
  %dir.addr = alloca i32, align 4
  %tmpvec = alloca %struct.half_wilson_vector*, align 8
  %mtag = alloca %struct.msg_tag*, align 8
  %s = alloca %struct.site*, align 8
  %i = alloca i32, align 4
  store %struct.half_wilson_vector* %src, %struct.half_wilson_vector** %src.addr, align 8
  store %struct.half_wilson_vector* %dest, %struct.half_wilson_vector** %dest.addr, align 8
  store i32 %dir, i32* %dir.addr, align 4
  %0 = load i32* %dir.addr, align 4
  %cmp = icmp sle i32 %0, 3
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  %1 = load %struct.half_wilson_vector** %src.addr, align 8
  %2 = bitcast %struct.half_wilson_vector* %1 to i8*
  %3 = load i32* %dir.addr, align 4
  %4 = load i8*** getelementptr inbounds ([16 x i8**]* @gen_pt, i32 0, i64 0), align 8
  %call = call %struct.msg_tag* @start_gather_from_temp(i8* %2, i32 96, i32 %3, i32 3, i8** %4)
  store %struct.msg_tag* %call, %struct.msg_tag** %mtag, align 8
  %5 = load %struct.msg_tag** %mtag, align 8
  call void @wait_gather(%struct.msg_tag* %5)
  store i32 0, i32* %i, align 4
  %6 = load %struct.site** @lattice, align 8
  store %struct.site* %6, %struct.site** %s, align 8
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.then
  %7 = load i32* %i, align 4
  %8 = load i32* @sites_on_node, align 4
  %cmp1 = icmp slt i32 %7, %8
  br i1 %cmp1, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %9 = load i32* %dir.addr, align 4
  %idxprom = sext i32 %9 to i64
  %10 = load %struct.site** %s, align 8
  %link = getelementptr inbounds %struct.site* %10, i32 0, i32 8
  %arrayidx = getelementptr inbounds [4 x %struct.su3_matrix]* %link, i32 0, i64 %idxprom
  %11 = load i32* %i, align 4
  %idxprom2 = sext i32 %11 to i64
  %12 = load i8*** getelementptr inbounds ([16 x i8**]* @gen_pt, i32 0, i64 0), align 8
  %arrayidx3 = getelementptr inbounds i8** %12, i64 %idxprom2
  %13 = load i8** %arrayidx3, align 8
  %14 = bitcast i8* %13 to %struct.half_wilson_vector*
  %15 = load i32* %i, align 4
  %idxprom4 = sext i32 %15 to i64
  %16 = load %struct.half_wilson_vector** %dest.addr, align 8
  %arrayidx5 = getelementptr inbounds %struct.half_wilson_vector* %16, i64 %idxprom4
  call void @mult_su3_mat_hwvec(%struct.su3_matrix* %arrayidx, %struct.half_wilson_vector* %14, %struct.half_wilson_vector* %arrayidx5)
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %17 = load i32* %i, align 4
  %inc = add nsw i32 %17, 1
  store i32 %inc, i32* %i, align 4
  %18 = load %struct.site** %s, align 8
  %incdec.ptr = getelementptr inbounds %struct.site* %18, i32 1
  store %struct.site* %incdec.ptr, %struct.site** %s, align 8
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %19 = load %struct.msg_tag** %mtag, align 8
  call void @cleanup_gather(%struct.msg_tag* %19)
  br label %if.end

if.else:                                          ; preds = %entry
  %20 = load i32* @sites_on_node, align 4
  %conv = sext i32 %20 to i64
  %call6 = call noalias i8* @calloc(i64 %conv, i64 96) #2
  %21 = bitcast i8* %call6 to %struct.half_wilson_vector*
  store %struct.half_wilson_vector* %21, %struct.half_wilson_vector** %tmpvec, align 8
  store i32 0, i32* %i, align 4
  %22 = load %struct.site** @lattice, align 8
  store %struct.site* %22, %struct.site** %s, align 8
  br label %for.cond7

for.cond7:                                        ; preds = %for.inc18, %if.else
  %23 = load i32* %i, align 4
  %24 = load i32* @sites_on_node, align 4
  %cmp8 = icmp slt i32 %23, %24
  br i1 %cmp8, label %for.body10, label %for.end21

for.body10:                                       ; preds = %for.cond7
  %25 = load i32* %dir.addr, align 4
  %sub = sub nsw i32 7, %25
  %idxprom11 = sext i32 %sub to i64
  %26 = load %struct.site** %s, align 8
  %link12 = getelementptr inbounds %struct.site* %26, i32 0, i32 8
  %arrayidx13 = getelementptr inbounds [4 x %struct.su3_matrix]* %link12, i32 0, i64 %idxprom11
  %27 = load i32* %i, align 4
  %idxprom14 = sext i32 %27 to i64
  %28 = load %struct.half_wilson_vector** %src.addr, align 8
  %arrayidx15 = getelementptr inbounds %struct.half_wilson_vector* %28, i64 %idxprom14
  %29 = load i32* %i, align 4
  %idxprom16 = sext i32 %29 to i64
  %30 = load %struct.half_wilson_vector** %tmpvec, align 8
  %arrayidx17 = getelementptr inbounds %struct.half_wilson_vector* %30, i64 %idxprom16
  call void @mult_adj_su3_mat_hwvec(%struct.su3_matrix* %arrayidx13, %struct.half_wilson_vector* %arrayidx15, %struct.half_wilson_vector* %arrayidx17)
  br label %for.inc18

for.inc18:                                        ; preds = %for.body10
  %31 = load i32* %i, align 4
  %inc19 = add nsw i32 %31, 1
  store i32 %inc19, i32* %i, align 4
  %32 = load %struct.site** %s, align 8
  %incdec.ptr20 = getelementptr inbounds %struct.site* %32, i32 1
  store %struct.site* %incdec.ptr20, %struct.site** %s, align 8
  br label %for.cond7

for.end21:                                        ; preds = %for.cond7
  %33 = load %struct.half_wilson_vector** %tmpvec, align 8
  %34 = bitcast %struct.half_wilson_vector* %33 to i8*
  %35 = load i32* %dir.addr, align 4
  %36 = load i8*** getelementptr inbounds ([16 x i8**]* @gen_pt, i32 0, i64 0), align 8
  %call22 = call %struct.msg_tag* @start_gather_from_temp(i8* %34, i32 96, i32 %35, i32 3, i8** %36)
  store %struct.msg_tag* %call22, %struct.msg_tag** %mtag, align 8
  %37 = load %struct.msg_tag** %mtag, align 8
  call void @wait_gather(%struct.msg_tag* %37)
  store i32 0, i32* %i, align 4
  %38 = load %struct.site** @lattice, align 8
  store %struct.site* %38, %struct.site** %s, align 8
  br label %for.cond23

for.cond23:                                       ; preds = %for.inc31, %for.end21
  %39 = load i32* %i, align 4
  %40 = load i32* @sites_on_node, align 4
  %cmp24 = icmp slt i32 %39, %40
  br i1 %cmp24, label %for.body26, label %for.end34

for.body26:                                       ; preds = %for.cond23
  %41 = load i32* %i, align 4
  %idxprom27 = sext i32 %41 to i64
  %42 = load %struct.half_wilson_vector** %dest.addr, align 8
  %arrayidx28 = getelementptr inbounds %struct.half_wilson_vector* %42, i64 %idxprom27
  %43 = load i32* %i, align 4
  %idxprom29 = sext i32 %43 to i64
  %44 = load i8*** getelementptr inbounds ([16 x i8**]* @gen_pt, i32 0, i64 0), align 8
  %arrayidx30 = getelementptr inbounds i8** %44, i64 %idxprom29
  %45 = load i8** %arrayidx30, align 8
  %46 = bitcast i8* %45 to %struct.half_wilson_vector*
  %47 = bitcast %struct.half_wilson_vector* %arrayidx28 to i8*
  %48 = bitcast %struct.half_wilson_vector* %46 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %47, i8* %48, i64 96, i32 8, i1 false)
  br label %for.inc31

for.inc31:                                        ; preds = %for.body26
  %49 = load i32* %i, align 4
  %inc32 = add nsw i32 %49, 1
  store i32 %inc32, i32* %i, align 4
  %50 = load %struct.site** %s, align 8
  %incdec.ptr33 = getelementptr inbounds %struct.site* %50, i32 1
  store %struct.site* %incdec.ptr33, %struct.site** %s, align 8
  br label %for.cond23

for.end34:                                        ; preds = %for.cond23
  %51 = load %struct.msg_tag** %mtag, align 8
  call void @cleanup_gather(%struct.msg_tag* %51)
  %52 = load %struct.half_wilson_vector** %tmpvec, align 8
  %53 = bitcast %struct.half_wilson_vector* %52 to i8*
  call void @free(i8* %53) #2
  br label %if.end

if.end:                                           ; preds = %for.end34, %for.end
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @add_3f_force_to_mom(%struct.half_wilson_vector* %back, %struct.half_wilson_vector* %forw, i32 %dir, double* %coeff) #0 {
entry:
  %back.addr = alloca %struct.half_wilson_vector*, align 8
  %forw.addr = alloca %struct.half_wilson_vector*, align 8
  %dir.addr = alloca i32, align 4
  %coeff.addr = alloca double*, align 8
  %s = alloca %struct.site*, align 8
  %i = alloca i32, align 4
  %tmp_coeff = alloca [2 x double], align 16
  %tmat = alloca %struct.su3_matrix, align 8
  %tmat2 = alloca %struct.su3_matrix, align 8
  store %struct.half_wilson_vector* %back, %struct.half_wilson_vector** %back.addr, align 8
  store %struct.half_wilson_vector* %forw, %struct.half_wilson_vector** %forw.addr, align 8
  store i32 %dir, i32* %dir.addr, align 4
  store double* %coeff, double** %coeff.addr, align 8
  %0 = load i32* %dir.addr, align 4
  %cmp = icmp sgt i32 %0, 3
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %1 = load i32* %dir.addr, align 4
  %sub = sub nsw i32 7, %1
  store i32 %sub, i32* %dir.addr, align 4
  %2 = load double** %coeff.addr, align 8
  %arrayidx = getelementptr inbounds double* %2, i64 0
  %3 = load double* %arrayidx, align 8
  %sub1 = fsub double -0.000000e+00, %3
  %4 = load double** %coeff.addr, align 8
  %arrayidx2 = getelementptr inbounds double* %4, i64 0
  store double %sub1, double* %arrayidx2, align 8
  %5 = load double** %coeff.addr, align 8
  %arrayidx3 = getelementptr inbounds double* %5, i64 1
  %6 = load double* %arrayidx3, align 8
  %sub4 = fsub double -0.000000e+00, %6
  %7 = load double** %coeff.addr, align 8
  %arrayidx5 = getelementptr inbounds double* %7, i64 1
  store double %sub4, double* %arrayidx5, align 8
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  store i32 0, i32* %i, align 4
  %8 = load %struct.site** @lattice, align 8
  store %struct.site* %8, %struct.site** %s, align 8
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.end
  %9 = load i32* %i, align 4
  %10 = load i32* @sites_on_node, align 4
  %cmp6 = icmp slt i32 %9, %10
  br i1 %cmp6, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %11 = load %struct.site** %s, align 8
  %parity = getelementptr inbounds %struct.site* %11, i32 0, i32 4
  %12 = load i8* %parity, align 1
  %conv = sext i8 %12 to i32
  %cmp7 = icmp eq i32 %conv, 1
  br i1 %cmp7, label %if.then9, label %if.else

if.then9:                                         ; preds = %for.body
  %13 = load double** %coeff.addr, align 8
  %arrayidx10 = getelementptr inbounds double* %13, i64 0
  %14 = load double* %arrayidx10, align 8
  %sub11 = fsub double -0.000000e+00, %14
  %arrayidx12 = getelementptr inbounds [2 x double]* %tmp_coeff, i32 0, i64 0
  store double %sub11, double* %arrayidx12, align 8
  %15 = load double** %coeff.addr, align 8
  %arrayidx13 = getelementptr inbounds double* %15, i64 1
  %16 = load double* %arrayidx13, align 8
  %sub14 = fsub double -0.000000e+00, %16
  %arrayidx15 = getelementptr inbounds [2 x double]* %tmp_coeff, i32 0, i64 1
  store double %sub14, double* %arrayidx15, align 8
  br label %if.end20

if.else:                                          ; preds = %for.body
  %17 = load double** %coeff.addr, align 8
  %arrayidx16 = getelementptr inbounds double* %17, i64 0
  %18 = load double* %arrayidx16, align 8
  %arrayidx17 = getelementptr inbounds [2 x double]* %tmp_coeff, i32 0, i64 0
  store double %18, double* %arrayidx17, align 8
  %19 = load double** %coeff.addr, align 8
  %arrayidx18 = getelementptr inbounds double* %19, i64 1
  %20 = load double* %arrayidx18, align 8
  %arrayidx19 = getelementptr inbounds [2 x double]* %tmp_coeff, i32 0, i64 1
  store double %20, double* %arrayidx19, align 8
  br label %if.end20

if.end20:                                         ; preds = %if.else, %if.then9
  %21 = load i32* %dir.addr, align 4
  %idxprom = sext i32 %21 to i64
  %22 = load %struct.site** %s, align 8
  %mom = getelementptr inbounds %struct.site* %22, i32 0, i32 9
  %arrayidx21 = getelementptr inbounds [4 x %struct.anti_hermitmat]* %mom, i32 0, i64 %idxprom
  call void @uncompress_anti_hermitian(%struct.anti_hermitmat* %arrayidx21, %struct.su3_matrix* %tmat2)
  %23 = load i32* %i, align 4
  %idxprom22 = sext i32 %23 to i64
  %24 = load %struct.half_wilson_vector** %back.addr, align 8
  %arrayidx23 = getelementptr inbounds %struct.half_wilson_vector* %24, i64 %idxprom22
  %h = getelementptr inbounds %struct.half_wilson_vector* %arrayidx23, i32 0, i32 0
  %arrayidx24 = getelementptr inbounds [2 x %struct.su3_vector]* %h, i32 0, i64 0
  %25 = load i32* %i, align 4
  %idxprom25 = sext i32 %25 to i64
  %26 = load %struct.half_wilson_vector** %forw.addr, align 8
  %arrayidx26 = getelementptr inbounds %struct.half_wilson_vector* %26, i64 %idxprom25
  %h27 = getelementptr inbounds %struct.half_wilson_vector* %arrayidx26, i32 0, i32 0
  %arrayidx28 = getelementptr inbounds [2 x %struct.su3_vector]* %h27, i32 0, i64 0
  call void @su3_projector(%struct.su3_vector* %arrayidx24, %struct.su3_vector* %arrayidx28, %struct.su3_matrix* %tmat)
  %arrayidx29 = getelementptr inbounds [2 x double]* %tmp_coeff, i32 0, i64 0
  %27 = load double* %arrayidx29, align 8
  call void @scalar_mult_add_su3_matrix(%struct.su3_matrix* %tmat2, %struct.su3_matrix* %tmat, double %27, %struct.su3_matrix* %tmat2)
  %28 = load i32* %i, align 4
  %idxprom30 = sext i32 %28 to i64
  %29 = load %struct.half_wilson_vector** %back.addr, align 8
  %arrayidx31 = getelementptr inbounds %struct.half_wilson_vector* %29, i64 %idxprom30
  %h32 = getelementptr inbounds %struct.half_wilson_vector* %arrayidx31, i32 0, i32 0
  %arrayidx33 = getelementptr inbounds [2 x %struct.su3_vector]* %h32, i32 0, i64 1
  %30 = load i32* %i, align 4
  %idxprom34 = sext i32 %30 to i64
  %31 = load %struct.half_wilson_vector** %forw.addr, align 8
  %arrayidx35 = getelementptr inbounds %struct.half_wilson_vector* %31, i64 %idxprom34
  %h36 = getelementptr inbounds %struct.half_wilson_vector* %arrayidx35, i32 0, i32 0
  %arrayidx37 = getelementptr inbounds [2 x %struct.su3_vector]* %h36, i32 0, i64 1
  call void @su3_projector(%struct.su3_vector* %arrayidx33, %struct.su3_vector* %arrayidx37, %struct.su3_matrix* %tmat)
  %arrayidx38 = getelementptr inbounds [2 x double]* %tmp_coeff, i32 0, i64 1
  %32 = load double* %arrayidx38, align 8
  call void @scalar_mult_add_su3_matrix(%struct.su3_matrix* %tmat2, %struct.su3_matrix* %tmat, double %32, %struct.su3_matrix* %tmat2)
  %33 = load i32* %dir.addr, align 4
  %idxprom39 = sext i32 %33 to i64
  %34 = load %struct.site** %s, align 8
  %mom40 = getelementptr inbounds %struct.site* %34, i32 0, i32 9
  %arrayidx41 = getelementptr inbounds [4 x %struct.anti_hermitmat]* %mom40, i32 0, i64 %idxprom39
  call void @make_anti_hermitian(%struct.su3_matrix* %tmat2, %struct.anti_hermitmat* %arrayidx41)
  br label %for.inc

for.inc:                                          ; preds = %if.end20
  %35 = load i32* %i, align 4
  %inc = add nsw i32 %35, 1
  store i32 %inc, i32* %i, align 4
  %36 = load %struct.site** %s, align 8
  %incdec.ptr = getelementptr inbounds %struct.site* %36, i32 1
  store %struct.site* %incdec.ptr, %struct.site** %s, align 8
  br label %for.cond

for.end:                                          ; preds = %for.cond
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @side_link_3f_force(i32 %mu, i32 %nu, double* %coeff, %struct.half_wilson_vector* %Path, %struct.half_wilson_vector* %Path_nu, %struct.half_wilson_vector* %Path_mu, %struct.half_wilson_vector* %Path_numu) #0 {
entry:
  %mu.addr = alloca i32, align 4
  %nu.addr = alloca i32, align 4
  %coeff.addr = alloca double*, align 8
  %Path.addr = alloca %struct.half_wilson_vector*, align 8
  %Path_nu.addr = alloca %struct.half_wilson_vector*, align 8
  %Path_mu.addr = alloca %struct.half_wilson_vector*, align 8
  %Path_numu.addr = alloca %struct.half_wilson_vector*, align 8
  %m_coeff = alloca [2 x double], align 16
  store i32 %mu, i32* %mu.addr, align 4
  store i32 %nu, i32* %nu.addr, align 4
  store double* %coeff, double** %coeff.addr, align 8
  store %struct.half_wilson_vector* %Path, %struct.half_wilson_vector** %Path.addr, align 8
  store %struct.half_wilson_vector* %Path_nu, %struct.half_wilson_vector** %Path_nu.addr, align 8
  store %struct.half_wilson_vector* %Path_mu, %struct.half_wilson_vector** %Path_mu.addr, align 8
  store %struct.half_wilson_vector* %Path_numu, %struct.half_wilson_vector** %Path_numu.addr, align 8
  %0 = load double** %coeff.addr, align 8
  %arrayidx = getelementptr inbounds double* %0, i64 0
  %1 = load double* %arrayidx, align 8
  %sub = fsub double -0.000000e+00, %1
  %arrayidx1 = getelementptr inbounds [2 x double]* %m_coeff, i32 0, i64 0
  store double %sub, double* %arrayidx1, align 8
  %2 = load double** %coeff.addr, align 8
  %arrayidx2 = getelementptr inbounds double* %2, i64 1
  %3 = load double* %arrayidx2, align 8
  %sub3 = fsub double -0.000000e+00, %3
  %arrayidx4 = getelementptr inbounds [2 x double]* %m_coeff, i32 0, i64 1
  store double %sub3, double* %arrayidx4, align 8
  %4 = load i32* %mu.addr, align 4
  %cmp = icmp sle i32 %4, 3
  br i1 %cmp, label %if.then, label %if.else8

if.then:                                          ; preds = %entry
  %5 = load i32* %nu.addr, align 4
  %cmp5 = icmp sle i32 %5, 3
  br i1 %cmp5, label %if.then6, label %if.else

if.then6:                                         ; preds = %if.then
  %6 = load %struct.half_wilson_vector** %Path_numu.addr, align 8
  %7 = load %struct.half_wilson_vector** %Path.addr, align 8
  %8 = load i32* %mu.addr, align 4
  %9 = load double** %coeff.addr, align 8
  call void @add_3f_force_to_mom(%struct.half_wilson_vector* %6, %struct.half_wilson_vector* %7, i32 %8, double* %9)
  br label %if.end

if.else:                                          ; preds = %if.then
  %10 = load %struct.half_wilson_vector** %Path.addr, align 8
  %11 = load %struct.half_wilson_vector** %Path_numu.addr, align 8
  %12 = load i32* %mu.addr, align 4
  %sub7 = sub nsw i32 7, %12
  %arraydecay = getelementptr inbounds [2 x double]* %m_coeff, i32 0, i32 0
  call void @add_3f_force_to_mom(%struct.half_wilson_vector* %10, %struct.half_wilson_vector* %11, i32 %sub7, double* %arraydecay)
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then6
  br label %if.end15

if.else8:                                         ; preds = %entry
  %13 = load i32* %nu.addr, align 4
  %cmp9 = icmp sle i32 %13, 3
  br i1 %cmp9, label %if.then10, label %if.else12

if.then10:                                        ; preds = %if.else8
  %14 = load %struct.half_wilson_vector** %Path_nu.addr, align 8
  %15 = load %struct.half_wilson_vector** %Path_mu.addr, align 8
  %16 = load i32* %mu.addr, align 4
  %arraydecay11 = getelementptr inbounds [2 x double]* %m_coeff, i32 0, i32 0
  call void @add_3f_force_to_mom(%struct.half_wilson_vector* %14, %struct.half_wilson_vector* %15, i32 %16, double* %arraydecay11)
  br label %if.end14

if.else12:                                        ; preds = %if.else8
  %17 = load %struct.half_wilson_vector** %Path_mu.addr, align 8
  %18 = load %struct.half_wilson_vector** %Path_nu.addr, align 8
  %19 = load i32* %mu.addr, align 4
  %sub13 = sub nsw i32 7, %19
  %20 = load double** %coeff.addr, align 8
  call void @add_3f_force_to_mom(%struct.half_wilson_vector* %17, %struct.half_wilson_vector* %18, i32 %sub13, double* %20)
  br label %if.end14

if.end14:                                         ; preds = %if.else12, %if.then10
  br label %if.end15

if.end15:                                         ; preds = %if.end14, %if.end
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @phaseset() #0 {
entry:
  %sit = alloca %struct.site*, align 8
  %i = alloca i32, align 4
  store i32 0, i32* %i, align 4
  %0 = load %struct.site** @lattice, align 8
  store %struct.site* %0, %struct.site** %sit, align 8
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %1 = load i32* %i, align 4
  %2 = load i32* @sites_on_node, align 4
  %cmp = icmp slt i32 %1, %2
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %3 = load %struct.site** %sit, align 8
  %phase = getelementptr inbounds %struct.site* %3, i32 0, i32 10
  %arrayidx = getelementptr inbounds [4 x double]* %phase, i32 0, i64 3
  store double 1.000000e+00, double* %arrayidx, align 8
  %4 = load %struct.site** %sit, align 8
  %t = getelementptr inbounds %struct.site* %4, i32 0, i32 3
  %5 = load i16* %t, align 2
  %conv = sext i16 %5 to i32
  %rem = srem i32 %conv, 2
  %cmp1 = icmp eq i32 %rem, 1
  br i1 %cmp1, label %if.then, label %if.else

if.then:                                          ; preds = %for.body
  %6 = load %struct.site** %sit, align 8
  %phase3 = getelementptr inbounds %struct.site* %6, i32 0, i32 10
  %arrayidx4 = getelementptr inbounds [4 x double]* %phase3, i32 0, i64 0
  store double -1.000000e+00, double* %arrayidx4, align 8
  br label %if.end

if.else:                                          ; preds = %for.body
  %7 = load %struct.site** %sit, align 8
  %phase5 = getelementptr inbounds %struct.site* %7, i32 0, i32 10
  %arrayidx6 = getelementptr inbounds [4 x double]* %phase5, i32 0, i64 0
  store double 1.000000e+00, double* %arrayidx6, align 8
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %8 = load %struct.site** %sit, align 8
  %x = getelementptr inbounds %struct.site* %8, i32 0, i32 0
  %9 = load i16* %x, align 2
  %conv7 = sext i16 %9 to i32
  %rem8 = srem i32 %conv7, 2
  %cmp9 = icmp eq i32 %rem8, 1
  br i1 %cmp9, label %if.then11, label %if.else16

if.then11:                                        ; preds = %if.end
  %10 = load %struct.site** %sit, align 8
  %phase12 = getelementptr inbounds %struct.site* %10, i32 0, i32 10
  %arrayidx13 = getelementptr inbounds [4 x double]* %phase12, i32 0, i64 0
  %11 = load double* %arrayidx13, align 8
  %sub = fsub double -0.000000e+00, %11
  %12 = load %struct.site** %sit, align 8
  %phase14 = getelementptr inbounds %struct.site* %12, i32 0, i32 10
  %arrayidx15 = getelementptr inbounds [4 x double]* %phase14, i32 0, i64 1
  store double %sub, double* %arrayidx15, align 8
  br label %if.end21

if.else16:                                        ; preds = %if.end
  %13 = load %struct.site** %sit, align 8
  %phase17 = getelementptr inbounds %struct.site* %13, i32 0, i32 10
  %arrayidx18 = getelementptr inbounds [4 x double]* %phase17, i32 0, i64 0
  %14 = load double* %arrayidx18, align 8
  %15 = load %struct.site** %sit, align 8
  %phase19 = getelementptr inbounds %struct.site* %15, i32 0, i32 10
  %arrayidx20 = getelementptr inbounds [4 x double]* %phase19, i32 0, i64 1
  store double %14, double* %arrayidx20, align 8
  br label %if.end21

if.end21:                                         ; preds = %if.else16, %if.then11
  %16 = load %struct.site** %sit, align 8
  %y = getelementptr inbounds %struct.site* %16, i32 0, i32 1
  %17 = load i16* %y, align 2
  %conv22 = sext i16 %17 to i32
  %rem23 = srem i32 %conv22, 2
  %cmp24 = icmp eq i32 %rem23, 1
  br i1 %cmp24, label %if.then26, label %if.else32

if.then26:                                        ; preds = %if.end21
  %18 = load %struct.site** %sit, align 8
  %phase27 = getelementptr inbounds %struct.site* %18, i32 0, i32 10
  %arrayidx28 = getelementptr inbounds [4 x double]* %phase27, i32 0, i64 1
  %19 = load double* %arrayidx28, align 8
  %sub29 = fsub double -0.000000e+00, %19
  %20 = load %struct.site** %sit, align 8
  %phase30 = getelementptr inbounds %struct.site* %20, i32 0, i32 10
  %arrayidx31 = getelementptr inbounds [4 x double]* %phase30, i32 0, i64 2
  store double %sub29, double* %arrayidx31, align 8
  br label %if.end37

if.else32:                                        ; preds = %if.end21
  %21 = load %struct.site** %sit, align 8
  %phase33 = getelementptr inbounds %struct.site* %21, i32 0, i32 10
  %arrayidx34 = getelementptr inbounds [4 x double]* %phase33, i32 0, i64 1
  %22 = load double* %arrayidx34, align 8
  %23 = load %struct.site** %sit, align 8
  %phase35 = getelementptr inbounds %struct.site* %23, i32 0, i32 10
  %arrayidx36 = getelementptr inbounds [4 x double]* %phase35, i32 0, i64 2
  store double %22, double* %arrayidx36, align 8
  br label %if.end37

if.end37:                                         ; preds = %if.else32, %if.then26
  %24 = load %struct.site** %sit, align 8
  %t38 = getelementptr inbounds %struct.site* %24, i32 0, i32 3
  %25 = load i16* %t38, align 2
  %conv39 = sext i16 %25 to i32
  %26 = load i32* @nt, align 4
  %sub40 = sub nsw i32 %26, 1
  %cmp41 = icmp eq i32 %conv39, %sub40
  br i1 %cmp41, label %if.then43, label %if.end49

if.then43:                                        ; preds = %if.end37
  %27 = load %struct.site** %sit, align 8
  %phase44 = getelementptr inbounds %struct.site* %27, i32 0, i32 10
  %arrayidx45 = getelementptr inbounds [4 x double]* %phase44, i32 0, i64 3
  %28 = load double* %arrayidx45, align 8
  %sub46 = fsub double -0.000000e+00, %28
  %29 = load %struct.site** %sit, align 8
  %phase47 = getelementptr inbounds %struct.site* %29, i32 0, i32 10
  %arrayidx48 = getelementptr inbounds [4 x double]* %phase47, i32 0, i64 3
  store double %sub46, double* %arrayidx48, align 8
  br label %if.end49

if.end49:                                         ; preds = %if.then43, %if.end37
  br label %for.inc

for.inc:                                          ; preds = %if.end49
  %30 = load i32* %i, align 4
  %inc = add nsw i32 %30, 1
  store i32 %inc, i32* %i, align 4
  %31 = load %struct.site** %sit, align 8
  %incdec.ptr = getelementptr inbounds %struct.site* %31, i32 1
  store %struct.site* %incdec.ptr, %struct.site** %sit, align 8
  br label %for.cond

for.end:                                          ; preds = %for.cond
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @rephase(i32 %flag) #0 {
entry:
  %flag.addr = alloca i32, align 4
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %k = alloca i32, align 4
  %dir = alloca i32, align 4
  %s = alloca %struct.site*, align 8
  store i32 %flag, i32* %flag.addr, align 4
  %0 = load i32* %flag.addr, align 4
  %cmp = icmp eq i32 %0, 1
  br i1 %cmp, label %land.lhs.true, label %lor.lhs.false

land.lhs.true:                                    ; preds = %entry
  %1 = load i32* @phases_in, align 4
  %cmp1 = icmp eq i32 %1, 0
  br i1 %cmp1, label %if.end7, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %land.lhs.true, %entry
  %2 = load i32* %flag.addr, align 4
  %cmp2 = icmp eq i32 %2, 0
  br i1 %cmp2, label %land.lhs.true3, label %if.then

land.lhs.true3:                                   ; preds = %lor.lhs.false
  %3 = load i32* @phases_in, align 4
  %cmp4 = icmp eq i32 %3, 1
  br i1 %cmp4, label %if.end7, label %if.then

if.then:                                          ; preds = %land.lhs.true3, %lor.lhs.false
  %4 = load i32* @this_node, align 4
  %cmp5 = icmp eq i32 %4, 0
  br i1 %cmp5, label %if.then6, label %if.end

if.then6:                                         ; preds = %if.then
  %call = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([33 x i8]* @.str334, i32 0, i32 0))
  br label %if.end

if.end:                                           ; preds = %if.then6, %if.then
  call void @terminate(i32 1)
  br label %if.end7

if.end7:                                          ; preds = %if.end, %land.lhs.true3, %land.lhs.true
  store i32 0, i32* %i, align 4
  %5 = load %struct.site** @lattice, align 8
  store %struct.site* %5, %struct.site** %s, align 8
  br label %for.cond

for.cond:                                         ; preds = %for.inc42, %if.end7
  %6 = load i32* %i, align 4
  %7 = load i32* @sites_on_node, align 4
  %cmp8 = icmp slt i32 %6, %7
  br i1 %cmp8, label %for.body, label %for.end44

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %dir, align 4
  br label %for.cond9

for.cond9:                                        ; preds = %for.inc39, %for.body
  %8 = load i32* %dir, align 4
  %cmp10 = icmp sle i32 %8, 3
  br i1 %cmp10, label %for.body11, label %for.end41

for.body11:                                       ; preds = %for.cond9
  store i32 0, i32* %j, align 4
  br label %for.cond12

for.cond12:                                       ; preds = %for.inc36, %for.body11
  %9 = load i32* %j, align 4
  %cmp13 = icmp slt i32 %9, 3
  br i1 %cmp13, label %for.body14, label %for.end38

for.body14:                                       ; preds = %for.cond12
  store i32 0, i32* %k, align 4
  br label %for.cond15

for.cond15:                                       ; preds = %for.inc, %for.body14
  %10 = load i32* %k, align 4
  %cmp16 = icmp slt i32 %10, 3
  br i1 %cmp16, label %for.body17, label %for.end

for.body17:                                       ; preds = %for.cond15
  %11 = load i32* %dir, align 4
  %idxprom = sext i32 %11 to i64
  %12 = load %struct.site** %s, align 8
  %phase = getelementptr inbounds %struct.site* %12, i32 0, i32 10
  %arrayidx = getelementptr inbounds [4 x double]* %phase, i32 0, i64 %idxprom
  %13 = load double* %arrayidx, align 8
  %14 = load i32* %k, align 4
  %idxprom18 = sext i32 %14 to i64
  %15 = load i32* %j, align 4
  %idxprom19 = sext i32 %15 to i64
  %16 = load i32* %dir, align 4
  %idxprom20 = sext i32 %16 to i64
  %17 = load %struct.site** %s, align 8
  %link = getelementptr inbounds %struct.site* %17, i32 0, i32 8
  %arrayidx21 = getelementptr inbounds [4 x %struct.su3_matrix]* %link, i32 0, i64 %idxprom20
  %e = getelementptr inbounds %struct.su3_matrix* %arrayidx21, i32 0, i32 0
  %arrayidx22 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e, i32 0, i64 %idxprom19
  %arrayidx23 = getelementptr inbounds [3 x %struct.complex]* %arrayidx22, i32 0, i64 %idxprom18
  %real = getelementptr inbounds %struct.complex* %arrayidx23, i32 0, i32 0
  %18 = load double* %real, align 8
  %mul = fmul double %18, %13
  store double %mul, double* %real, align 8
  %19 = load i32* %dir, align 4
  %idxprom24 = sext i32 %19 to i64
  %20 = load %struct.site** %s, align 8
  %phase25 = getelementptr inbounds %struct.site* %20, i32 0, i32 10
  %arrayidx26 = getelementptr inbounds [4 x double]* %phase25, i32 0, i64 %idxprom24
  %21 = load double* %arrayidx26, align 8
  %22 = load i32* %k, align 4
  %idxprom27 = sext i32 %22 to i64
  %23 = load i32* %j, align 4
  %idxprom28 = sext i32 %23 to i64
  %24 = load i32* %dir, align 4
  %idxprom29 = sext i32 %24 to i64
  %25 = load %struct.site** %s, align 8
  %link30 = getelementptr inbounds %struct.site* %25, i32 0, i32 8
  %arrayidx31 = getelementptr inbounds [4 x %struct.su3_matrix]* %link30, i32 0, i64 %idxprom29
  %e32 = getelementptr inbounds %struct.su3_matrix* %arrayidx31, i32 0, i32 0
  %arrayidx33 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e32, i32 0, i64 %idxprom28
  %arrayidx34 = getelementptr inbounds [3 x %struct.complex]* %arrayidx33, i32 0, i64 %idxprom27
  %imag = getelementptr inbounds %struct.complex* %arrayidx34, i32 0, i32 1
  %26 = load double* %imag, align 8
  %mul35 = fmul double %26, %21
  store double %mul35, double* %imag, align 8
  br label %for.inc

for.inc:                                          ; preds = %for.body17
  %27 = load i32* %k, align 4
  %inc = add nsw i32 %27, 1
  store i32 %inc, i32* %k, align 4
  br label %for.cond15

for.end:                                          ; preds = %for.cond15
  br label %for.inc36

for.inc36:                                        ; preds = %for.end
  %28 = load i32* %j, align 4
  %inc37 = add nsw i32 %28, 1
  store i32 %inc37, i32* %j, align 4
  br label %for.cond12

for.end38:                                        ; preds = %for.cond12
  br label %for.inc39

for.inc39:                                        ; preds = %for.end38
  %29 = load i32* %dir, align 4
  %inc40 = add nsw i32 %29, 1
  store i32 %inc40, i32* %dir, align 4
  br label %for.cond9

for.end41:                                        ; preds = %for.cond9
  br label %for.inc42

for.inc42:                                        ; preds = %for.end41
  %30 = load i32* %i, align 4
  %inc43 = add nsw i32 %30, 1
  store i32 %inc43, i32* %i, align 4
  %31 = load %struct.site** %s, align 8
  %incdec.ptr = getelementptr inbounds %struct.site* %31, i32 1
  store %struct.site* %incdec.ptr, %struct.site** %s, align 8
  br label %for.cond

for.end44:                                        ; preds = %for.cond
  %32 = load i32* %flag.addr, align 4
  store i32 %32, i32* @phases_in, align 4
  ret void
}

; Function Attrs: nounwind uwtable
define internal { double, double } @cmplx(double %x, double %y) #0 {
entry:
  %retval = alloca %struct.complex, align 8
  %x.addr = alloca double, align 8
  %y.addr = alloca double, align 8
  %c = alloca %struct.complex, align 8
  store double %x, double* %x.addr, align 8
  store double %y, double* %y.addr, align 8
  %0 = load double* %x.addr, align 8
  %real = getelementptr inbounds %struct.complex* %c, i32 0, i32 0
  store double %0, double* %real, align 8
  %1 = load double* %y.addr, align 8
  %imag = getelementptr inbounds %struct.complex* %c, i32 0, i32 1
  store double %1, double* %imag, align 8
  %2 = bitcast %struct.complex* %retval to i8*
  %3 = bitcast %struct.complex* %c to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %2, i8* %3, i64 16, i32 8, i1 false)
  %4 = bitcast %struct.complex* %retval to { double, double }*
  %5 = load { double, double }* %4, align 1
  ret { double, double } %5
}

; Function Attrs: nounwind uwtable
define internal void @add_su3_matrix(%struct.su3_matrix* %a, %struct.su3_matrix* %b, %struct.su3_matrix* %c) #0 {
entry:
  %a.addr = alloca %struct.su3_matrix*, align 8
  %b.addr = alloca %struct.su3_matrix*, align 8
  %c.addr = alloca %struct.su3_matrix*, align 8
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  store %struct.su3_matrix* %a, %struct.su3_matrix** %a.addr, align 8
  store %struct.su3_matrix* %b, %struct.su3_matrix** %b.addr, align 8
  store %struct.su3_matrix* %c, %struct.su3_matrix** %c.addr, align 8
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc36, %entry
  %0 = load i32* %i, align 4
  %cmp = icmp slt i32 %0, 3
  br i1 %cmp, label %for.body, label %for.end38

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %j, align 4
  br label %for.cond1

for.cond1:                                        ; preds = %for.inc, %for.body
  %1 = load i32* %j, align 4
  %cmp2 = icmp slt i32 %1, 3
  br i1 %cmp2, label %for.body3, label %for.end

for.body3:                                        ; preds = %for.cond1
  %2 = load i32* %j, align 4
  %idxprom = sext i32 %2 to i64
  %3 = load i32* %i, align 4
  %idxprom4 = sext i32 %3 to i64
  %4 = load %struct.su3_matrix** %a.addr, align 8
  %e = getelementptr inbounds %struct.su3_matrix* %4, i32 0, i32 0
  %arrayidx = getelementptr inbounds [3 x [3 x %struct.complex]]* %e, i32 0, i64 %idxprom4
  %arrayidx5 = getelementptr inbounds [3 x %struct.complex]* %arrayidx, i32 0, i64 %idxprom
  %real = getelementptr inbounds %struct.complex* %arrayidx5, i32 0, i32 0
  %5 = load double* %real, align 8
  %6 = load i32* %j, align 4
  %idxprom6 = sext i32 %6 to i64
  %7 = load i32* %i, align 4
  %idxprom7 = sext i32 %7 to i64
  %8 = load %struct.su3_matrix** %b.addr, align 8
  %e8 = getelementptr inbounds %struct.su3_matrix* %8, i32 0, i32 0
  %arrayidx9 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e8, i32 0, i64 %idxprom7
  %arrayidx10 = getelementptr inbounds [3 x %struct.complex]* %arrayidx9, i32 0, i64 %idxprom6
  %real11 = getelementptr inbounds %struct.complex* %arrayidx10, i32 0, i32 0
  %9 = load double* %real11, align 8
  %add = fadd double %5, %9
  %10 = load i32* %j, align 4
  %idxprom12 = sext i32 %10 to i64
  %11 = load i32* %i, align 4
  %idxprom13 = sext i32 %11 to i64
  %12 = load %struct.su3_matrix** %c.addr, align 8
  %e14 = getelementptr inbounds %struct.su3_matrix* %12, i32 0, i32 0
  %arrayidx15 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e14, i32 0, i64 %idxprom13
  %arrayidx16 = getelementptr inbounds [3 x %struct.complex]* %arrayidx15, i32 0, i64 %idxprom12
  %real17 = getelementptr inbounds %struct.complex* %arrayidx16, i32 0, i32 0
  store double %add, double* %real17, align 8
  %13 = load i32* %j, align 4
  %idxprom18 = sext i32 %13 to i64
  %14 = load i32* %i, align 4
  %idxprom19 = sext i32 %14 to i64
  %15 = load %struct.su3_matrix** %a.addr, align 8
  %e20 = getelementptr inbounds %struct.su3_matrix* %15, i32 0, i32 0
  %arrayidx21 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e20, i32 0, i64 %idxprom19
  %arrayidx22 = getelementptr inbounds [3 x %struct.complex]* %arrayidx21, i32 0, i64 %idxprom18
  %imag = getelementptr inbounds %struct.complex* %arrayidx22, i32 0, i32 1
  %16 = load double* %imag, align 8
  %17 = load i32* %j, align 4
  %idxprom23 = sext i32 %17 to i64
  %18 = load i32* %i, align 4
  %idxprom24 = sext i32 %18 to i64
  %19 = load %struct.su3_matrix** %b.addr, align 8
  %e25 = getelementptr inbounds %struct.su3_matrix* %19, i32 0, i32 0
  %arrayidx26 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e25, i32 0, i64 %idxprom24
  %arrayidx27 = getelementptr inbounds [3 x %struct.complex]* %arrayidx26, i32 0, i64 %idxprom23
  %imag28 = getelementptr inbounds %struct.complex* %arrayidx27, i32 0, i32 1
  %20 = load double* %imag28, align 8
  %add29 = fadd double %16, %20
  %21 = load i32* %j, align 4
  %idxprom30 = sext i32 %21 to i64
  %22 = load i32* %i, align 4
  %idxprom31 = sext i32 %22 to i64
  %23 = load %struct.su3_matrix** %c.addr, align 8
  %e32 = getelementptr inbounds %struct.su3_matrix* %23, i32 0, i32 0
  %arrayidx33 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e32, i32 0, i64 %idxprom31
  %arrayidx34 = getelementptr inbounds [3 x %struct.complex]* %arrayidx33, i32 0, i64 %idxprom30
  %imag35 = getelementptr inbounds %struct.complex* %arrayidx34, i32 0, i32 1
  store double %add29, double* %imag35, align 8
  br label %for.inc

for.inc:                                          ; preds = %for.body3
  %24 = load i32* %j, align 4
  %inc = add nsw i32 %24, 1
  store i32 %inc, i32* %j, align 4
  br label %for.cond1

for.end:                                          ; preds = %for.cond1
  br label %for.inc36

for.inc36:                                        ; preds = %for.end
  %25 = load i32* %i, align 4
  %inc37 = add nsw i32 %25, 1
  store i32 %inc37, i32* %i, align 4
  br label %for.cond

for.end38:                                        ; preds = %for.cond
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @add_su3_vector(%struct.su3_vector* %a, %struct.su3_vector* %b, %struct.su3_vector* %c) #0 {
entry:
  %a.addr = alloca %struct.su3_vector*, align 8
  %b.addr = alloca %struct.su3_vector*, align 8
  %c.addr = alloca %struct.su3_vector*, align 8
  %i = alloca i32, align 4
  store %struct.su3_vector* %a, %struct.su3_vector** %a.addr, align 8
  store %struct.su3_vector* %b, %struct.su3_vector** %b.addr, align 8
  store %struct.su3_vector* %c, %struct.su3_vector** %c.addr, align 8
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32* %i, align 4
  %cmp = icmp slt i32 %0, 3
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %1 = load i32* %i, align 4
  %idxprom = sext i32 %1 to i64
  %2 = load %struct.su3_vector** %a.addr, align 8
  %c1 = getelementptr inbounds %struct.su3_vector* %2, i32 0, i32 0
  %arrayidx = getelementptr inbounds [3 x %struct.complex]* %c1, i32 0, i64 %idxprom
  %real = getelementptr inbounds %struct.complex* %arrayidx, i32 0, i32 0
  %3 = load double* %real, align 8
  %4 = load i32* %i, align 4
  %idxprom2 = sext i32 %4 to i64
  %5 = load %struct.su3_vector** %b.addr, align 8
  %c3 = getelementptr inbounds %struct.su3_vector* %5, i32 0, i32 0
  %arrayidx4 = getelementptr inbounds [3 x %struct.complex]* %c3, i32 0, i64 %idxprom2
  %real5 = getelementptr inbounds %struct.complex* %arrayidx4, i32 0, i32 0
  %6 = load double* %real5, align 8
  %add = fadd double %3, %6
  %7 = load i32* %i, align 4
  %idxprom6 = sext i32 %7 to i64
  %8 = load %struct.su3_vector** %c.addr, align 8
  %c7 = getelementptr inbounds %struct.su3_vector* %8, i32 0, i32 0
  %arrayidx8 = getelementptr inbounds [3 x %struct.complex]* %c7, i32 0, i64 %idxprom6
  %real9 = getelementptr inbounds %struct.complex* %arrayidx8, i32 0, i32 0
  store double %add, double* %real9, align 8
  %9 = load i32* %i, align 4
  %idxprom10 = sext i32 %9 to i64
  %10 = load %struct.su3_vector** %a.addr, align 8
  %c11 = getelementptr inbounds %struct.su3_vector* %10, i32 0, i32 0
  %arrayidx12 = getelementptr inbounds [3 x %struct.complex]* %c11, i32 0, i64 %idxprom10
  %imag = getelementptr inbounds %struct.complex* %arrayidx12, i32 0, i32 1
  %11 = load double* %imag, align 8
  %12 = load i32* %i, align 4
  %idxprom13 = sext i32 %12 to i64
  %13 = load %struct.su3_vector** %b.addr, align 8
  %c14 = getelementptr inbounds %struct.su3_vector* %13, i32 0, i32 0
  %arrayidx15 = getelementptr inbounds [3 x %struct.complex]* %c14, i32 0, i64 %idxprom13
  %imag16 = getelementptr inbounds %struct.complex* %arrayidx15, i32 0, i32 1
  %14 = load double* %imag16, align 8
  %add17 = fadd double %11, %14
  %15 = load i32* %i, align 4
  %idxprom18 = sext i32 %15 to i64
  %16 = load %struct.su3_vector** %c.addr, align 8
  %c19 = getelementptr inbounds %struct.su3_vector* %16, i32 0, i32 0
  %arrayidx20 = getelementptr inbounds [3 x %struct.complex]* %c19, i32 0, i64 %idxprom18
  %imag21 = getelementptr inbounds %struct.complex* %arrayidx20, i32 0, i32 1
  store double %add17, double* %imag21, align 8
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %17 = load i32* %i, align 4
  %inc = add nsw i32 %17, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @clear_su3mat(%struct.su3_matrix* %dest) #0 {
entry:
  %dest.addr = alloca %struct.su3_matrix*, align 8
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  store %struct.su3_matrix* %dest, %struct.su3_matrix** %dest.addr, align 8
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc11, %entry
  %0 = load i32* %i, align 4
  %cmp = icmp slt i32 %0, 3
  br i1 %cmp, label %for.body, label %for.end13

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %j, align 4
  br label %for.cond1

for.cond1:                                        ; preds = %for.inc, %for.body
  %1 = load i32* %j, align 4
  %cmp2 = icmp slt i32 %1, 3
  br i1 %cmp2, label %for.body3, label %for.end

for.body3:                                        ; preds = %for.cond1
  %2 = load i32* %j, align 4
  %idxprom = sext i32 %2 to i64
  %3 = load i32* %i, align 4
  %idxprom4 = sext i32 %3 to i64
  %4 = load %struct.su3_matrix** %dest.addr, align 8
  %e = getelementptr inbounds %struct.su3_matrix* %4, i32 0, i32 0
  %arrayidx = getelementptr inbounds [3 x [3 x %struct.complex]]* %e, i32 0, i64 %idxprom4
  %arrayidx5 = getelementptr inbounds [3 x %struct.complex]* %arrayidx, i32 0, i64 %idxprom
  %imag = getelementptr inbounds %struct.complex* %arrayidx5, i32 0, i32 1
  store double 0.000000e+00, double* %imag, align 8
  %5 = load i32* %j, align 4
  %idxprom6 = sext i32 %5 to i64
  %6 = load i32* %i, align 4
  %idxprom7 = sext i32 %6 to i64
  %7 = load %struct.su3_matrix** %dest.addr, align 8
  %e8 = getelementptr inbounds %struct.su3_matrix* %7, i32 0, i32 0
  %arrayidx9 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e8, i32 0, i64 %idxprom7
  %arrayidx10 = getelementptr inbounds [3 x %struct.complex]* %arrayidx9, i32 0, i64 %idxprom6
  %real = getelementptr inbounds %struct.complex* %arrayidx10, i32 0, i32 0
  store double 0.000000e+00, double* %real, align 8
  br label %for.inc

for.inc:                                          ; preds = %for.body3
  %8 = load i32* %j, align 4
  %inc = add nsw i32 %8, 1
  store i32 %inc, i32* %j, align 4
  br label %for.cond1

for.end:                                          ; preds = %for.cond1
  br label %for.inc11

for.inc11:                                        ; preds = %for.end
  %9 = load i32* %i, align 4
  %inc12 = add nsw i32 %9, 1
  store i32 %inc12, i32* %i, align 4
  br label %for.cond

for.end13:                                        ; preds = %for.cond
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @clearvec(%struct.su3_vector* %v) #0 {
entry:
  %v.addr = alloca %struct.su3_vector*, align 8
  store %struct.su3_vector* %v, %struct.su3_vector** %v.addr, align 8
  %0 = load %struct.su3_vector** %v.addr, align 8
  %c = getelementptr inbounds %struct.su3_vector* %0, i32 0, i32 0
  %arrayidx = getelementptr inbounds [3 x %struct.complex]* %c, i32 0, i64 0
  %imag = getelementptr inbounds %struct.complex* %arrayidx, i32 0, i32 1
  store double 0.000000e+00, double* %imag, align 8
  %1 = load %struct.su3_vector** %v.addr, align 8
  %c1 = getelementptr inbounds %struct.su3_vector* %1, i32 0, i32 0
  %arrayidx2 = getelementptr inbounds [3 x %struct.complex]* %c1, i32 0, i64 0
  %real = getelementptr inbounds %struct.complex* %arrayidx2, i32 0, i32 0
  store double 0.000000e+00, double* %real, align 8
  %2 = load %struct.su3_vector** %v.addr, align 8
  %c3 = getelementptr inbounds %struct.su3_vector* %2, i32 0, i32 0
  %arrayidx4 = getelementptr inbounds [3 x %struct.complex]* %c3, i32 0, i64 1
  %imag5 = getelementptr inbounds %struct.complex* %arrayidx4, i32 0, i32 1
  store double 0.000000e+00, double* %imag5, align 8
  %3 = load %struct.su3_vector** %v.addr, align 8
  %c6 = getelementptr inbounds %struct.su3_vector* %3, i32 0, i32 0
  %arrayidx7 = getelementptr inbounds [3 x %struct.complex]* %c6, i32 0, i64 1
  %real8 = getelementptr inbounds %struct.complex* %arrayidx7, i32 0, i32 0
  store double 0.000000e+00, double* %real8, align 8
  %4 = load %struct.su3_vector** %v.addr, align 8
  %c9 = getelementptr inbounds %struct.su3_vector* %4, i32 0, i32 0
  %arrayidx10 = getelementptr inbounds [3 x %struct.complex]* %c9, i32 0, i64 2
  %imag11 = getelementptr inbounds %struct.complex* %arrayidx10, i32 0, i32 1
  store double 0.000000e+00, double* %imag11, align 8
  %5 = load %struct.su3_vector** %v.addr, align 8
  %c12 = getelementptr inbounds %struct.su3_vector* %5, i32 0, i32 0
  %arrayidx13 = getelementptr inbounds [3 x %struct.complex]* %c12, i32 0, i64 2
  %real14 = getelementptr inbounds %struct.complex* %arrayidx13, i32 0, i32 0
  store double 0.000000e+00, double* %real14, align 8
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @mult_adj_su3_mat_vec(%struct.su3_matrix* %a, %struct.su3_vector* %b, %struct.su3_vector* %c) #0 {
entry:
  %a.addr = alloca %struct.su3_matrix*, align 8
  %b.addr = alloca %struct.su3_vector*, align 8
  %c.addr = alloca %struct.su3_vector*, align 8
  %i = alloca i32, align 4
  %t = alloca double, align 8
  %ar = alloca double, align 8
  %ai = alloca double, align 8
  %br = alloca double, align 8
  %bi = alloca double, align 8
  %cr = alloca double, align 8
  %ci = alloca double, align 8
  store %struct.su3_matrix* %a, %struct.su3_matrix** %a.addr, align 8
  store %struct.su3_vector* %b, %struct.su3_vector** %b.addr, align 8
  store %struct.su3_vector* %c, %struct.su3_vector** %c.addr, align 8
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32* %i, align 4
  %cmp = icmp slt i32 %0, 3
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %1 = load i32* %i, align 4
  %idxprom = sext i32 %1 to i64
  %2 = load %struct.su3_matrix** %a.addr, align 8
  %e = getelementptr inbounds %struct.su3_matrix* %2, i32 0, i32 0
  %arrayidx = getelementptr inbounds [3 x [3 x %struct.complex]]* %e, i32 0, i64 0
  %arrayidx1 = getelementptr inbounds [3 x %struct.complex]* %arrayidx, i32 0, i64 %idxprom
  %real = getelementptr inbounds %struct.complex* %arrayidx1, i32 0, i32 0
  %3 = load double* %real, align 8
  store double %3, double* %ar, align 8
  %4 = load i32* %i, align 4
  %idxprom2 = sext i32 %4 to i64
  %5 = load %struct.su3_matrix** %a.addr, align 8
  %e3 = getelementptr inbounds %struct.su3_matrix* %5, i32 0, i32 0
  %arrayidx4 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e3, i32 0, i64 0
  %arrayidx5 = getelementptr inbounds [3 x %struct.complex]* %arrayidx4, i32 0, i64 %idxprom2
  %imag = getelementptr inbounds %struct.complex* %arrayidx5, i32 0, i32 1
  %6 = load double* %imag, align 8
  store double %6, double* %ai, align 8
  %7 = load %struct.su3_vector** %b.addr, align 8
  %c6 = getelementptr inbounds %struct.su3_vector* %7, i32 0, i32 0
  %arrayidx7 = getelementptr inbounds [3 x %struct.complex]* %c6, i32 0, i64 0
  %real8 = getelementptr inbounds %struct.complex* %arrayidx7, i32 0, i32 0
  %8 = load double* %real8, align 8
  store double %8, double* %br, align 8
  %9 = load %struct.su3_vector** %b.addr, align 8
  %c9 = getelementptr inbounds %struct.su3_vector* %9, i32 0, i32 0
  %arrayidx10 = getelementptr inbounds [3 x %struct.complex]* %c9, i32 0, i64 0
  %imag11 = getelementptr inbounds %struct.complex* %arrayidx10, i32 0, i32 1
  %10 = load double* %imag11, align 8
  store double %10, double* %bi, align 8
  %11 = load double* %ar, align 8
  %12 = load double* %br, align 8
  %mul = fmul double %11, %12
  store double %mul, double* %cr, align 8
  %13 = load double* %ai, align 8
  %14 = load double* %bi, align 8
  %mul12 = fmul double %13, %14
  store double %mul12, double* %t, align 8
  %15 = load double* %t, align 8
  %16 = load double* %cr, align 8
  %add = fadd double %16, %15
  store double %add, double* %cr, align 8
  %17 = load double* %ar, align 8
  %18 = load double* %bi, align 8
  %mul13 = fmul double %17, %18
  store double %mul13, double* %ci, align 8
  %19 = load double* %ai, align 8
  %20 = load double* %br, align 8
  %mul14 = fmul double %19, %20
  store double %mul14, double* %t, align 8
  %21 = load double* %t, align 8
  %22 = load double* %ci, align 8
  %sub = fsub double %22, %21
  store double %sub, double* %ci, align 8
  %23 = load i32* %i, align 4
  %idxprom15 = sext i32 %23 to i64
  %24 = load %struct.su3_matrix** %a.addr, align 8
  %e16 = getelementptr inbounds %struct.su3_matrix* %24, i32 0, i32 0
  %arrayidx17 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e16, i32 0, i64 1
  %arrayidx18 = getelementptr inbounds [3 x %struct.complex]* %arrayidx17, i32 0, i64 %idxprom15
  %real19 = getelementptr inbounds %struct.complex* %arrayidx18, i32 0, i32 0
  %25 = load double* %real19, align 8
  store double %25, double* %ar, align 8
  %26 = load i32* %i, align 4
  %idxprom20 = sext i32 %26 to i64
  %27 = load %struct.su3_matrix** %a.addr, align 8
  %e21 = getelementptr inbounds %struct.su3_matrix* %27, i32 0, i32 0
  %arrayidx22 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e21, i32 0, i64 1
  %arrayidx23 = getelementptr inbounds [3 x %struct.complex]* %arrayidx22, i32 0, i64 %idxprom20
  %imag24 = getelementptr inbounds %struct.complex* %arrayidx23, i32 0, i32 1
  %28 = load double* %imag24, align 8
  store double %28, double* %ai, align 8
  %29 = load %struct.su3_vector** %b.addr, align 8
  %c25 = getelementptr inbounds %struct.su3_vector* %29, i32 0, i32 0
  %arrayidx26 = getelementptr inbounds [3 x %struct.complex]* %c25, i32 0, i64 1
  %real27 = getelementptr inbounds %struct.complex* %arrayidx26, i32 0, i32 0
  %30 = load double* %real27, align 8
  store double %30, double* %br, align 8
  %31 = load %struct.su3_vector** %b.addr, align 8
  %c28 = getelementptr inbounds %struct.su3_vector* %31, i32 0, i32 0
  %arrayidx29 = getelementptr inbounds [3 x %struct.complex]* %c28, i32 0, i64 1
  %imag30 = getelementptr inbounds %struct.complex* %arrayidx29, i32 0, i32 1
  %32 = load double* %imag30, align 8
  store double %32, double* %bi, align 8
  %33 = load double* %ar, align 8
  %34 = load double* %br, align 8
  %mul31 = fmul double %33, %34
  store double %mul31, double* %t, align 8
  %35 = load double* %t, align 8
  %36 = load double* %cr, align 8
  %add32 = fadd double %36, %35
  store double %add32, double* %cr, align 8
  %37 = load double* %ai, align 8
  %38 = load double* %bi, align 8
  %mul33 = fmul double %37, %38
  store double %mul33, double* %t, align 8
  %39 = load double* %t, align 8
  %40 = load double* %cr, align 8
  %add34 = fadd double %40, %39
  store double %add34, double* %cr, align 8
  %41 = load double* %ar, align 8
  %42 = load double* %bi, align 8
  %mul35 = fmul double %41, %42
  store double %mul35, double* %t, align 8
  %43 = load double* %t, align 8
  %44 = load double* %ci, align 8
  %add36 = fadd double %44, %43
  store double %add36, double* %ci, align 8
  %45 = load double* %ai, align 8
  %46 = load double* %br, align 8
  %mul37 = fmul double %45, %46
  store double %mul37, double* %t, align 8
  %47 = load double* %t, align 8
  %48 = load double* %ci, align 8
  %sub38 = fsub double %48, %47
  store double %sub38, double* %ci, align 8
  %49 = load i32* %i, align 4
  %idxprom39 = sext i32 %49 to i64
  %50 = load %struct.su3_matrix** %a.addr, align 8
  %e40 = getelementptr inbounds %struct.su3_matrix* %50, i32 0, i32 0
  %arrayidx41 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e40, i32 0, i64 2
  %arrayidx42 = getelementptr inbounds [3 x %struct.complex]* %arrayidx41, i32 0, i64 %idxprom39
  %real43 = getelementptr inbounds %struct.complex* %arrayidx42, i32 0, i32 0
  %51 = load double* %real43, align 8
  store double %51, double* %ar, align 8
  %52 = load i32* %i, align 4
  %idxprom44 = sext i32 %52 to i64
  %53 = load %struct.su3_matrix** %a.addr, align 8
  %e45 = getelementptr inbounds %struct.su3_matrix* %53, i32 0, i32 0
  %arrayidx46 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e45, i32 0, i64 2
  %arrayidx47 = getelementptr inbounds [3 x %struct.complex]* %arrayidx46, i32 0, i64 %idxprom44
  %imag48 = getelementptr inbounds %struct.complex* %arrayidx47, i32 0, i32 1
  %54 = load double* %imag48, align 8
  store double %54, double* %ai, align 8
  %55 = load %struct.su3_vector** %b.addr, align 8
  %c49 = getelementptr inbounds %struct.su3_vector* %55, i32 0, i32 0
  %arrayidx50 = getelementptr inbounds [3 x %struct.complex]* %c49, i32 0, i64 2
  %real51 = getelementptr inbounds %struct.complex* %arrayidx50, i32 0, i32 0
  %56 = load double* %real51, align 8
  store double %56, double* %br, align 8
  %57 = load %struct.su3_vector** %b.addr, align 8
  %c52 = getelementptr inbounds %struct.su3_vector* %57, i32 0, i32 0
  %arrayidx53 = getelementptr inbounds [3 x %struct.complex]* %c52, i32 0, i64 2
  %imag54 = getelementptr inbounds %struct.complex* %arrayidx53, i32 0, i32 1
  %58 = load double* %imag54, align 8
  store double %58, double* %bi, align 8
  %59 = load double* %ar, align 8
  %60 = load double* %br, align 8
  %mul55 = fmul double %59, %60
  store double %mul55, double* %t, align 8
  %61 = load double* %t, align 8
  %62 = load double* %cr, align 8
  %add56 = fadd double %62, %61
  store double %add56, double* %cr, align 8
  %63 = load double* %ai, align 8
  %64 = load double* %bi, align 8
  %mul57 = fmul double %63, %64
  store double %mul57, double* %t, align 8
  %65 = load double* %t, align 8
  %66 = load double* %cr, align 8
  %add58 = fadd double %66, %65
  store double %add58, double* %cr, align 8
  %67 = load double* %ar, align 8
  %68 = load double* %bi, align 8
  %mul59 = fmul double %67, %68
  store double %mul59, double* %t, align 8
  %69 = load double* %t, align 8
  %70 = load double* %ci, align 8
  %add60 = fadd double %70, %69
  store double %add60, double* %ci, align 8
  %71 = load double* %ai, align 8
  %72 = load double* %br, align 8
  %mul61 = fmul double %71, %72
  store double %mul61, double* %t, align 8
  %73 = load double* %t, align 8
  %74 = load double* %ci, align 8
  %sub62 = fsub double %74, %73
  store double %sub62, double* %ci, align 8
  %75 = load double* %cr, align 8
  %76 = load i32* %i, align 4
  %idxprom63 = sext i32 %76 to i64
  %77 = load %struct.su3_vector** %c.addr, align 8
  %c64 = getelementptr inbounds %struct.su3_vector* %77, i32 0, i32 0
  %arrayidx65 = getelementptr inbounds [3 x %struct.complex]* %c64, i32 0, i64 %idxprom63
  %real66 = getelementptr inbounds %struct.complex* %arrayidx65, i32 0, i32 0
  store double %75, double* %real66, align 8
  %78 = load double* %ci, align 8
  %79 = load i32* %i, align 4
  %idxprom67 = sext i32 %79 to i64
  %80 = load %struct.su3_vector** %c.addr, align 8
  %c68 = getelementptr inbounds %struct.su3_vector* %80, i32 0, i32 0
  %arrayidx69 = getelementptr inbounds [3 x %struct.complex]* %c68, i32 0, i64 %idxprom67
  %imag70 = getelementptr inbounds %struct.complex* %arrayidx69, i32 0, i32 1
  store double %78, double* %imag70, align 8
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %81 = load i32* %i, align 4
  %inc = add nsw i32 %81, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @mult_su3_an(%struct.su3_matrix* %a, %struct.su3_matrix* %b, %struct.su3_matrix* %c) #0 {
entry:
  %a.addr = alloca %struct.su3_matrix*, align 8
  %b.addr = alloca %struct.su3_matrix*, align 8
  %c.addr = alloca %struct.su3_matrix*, align 8
  %j = alloca i32, align 4
  %a0r = alloca double, align 8
  %a0i = alloca double, align 8
  %a1r = alloca double, align 8
  %a1i = alloca double, align 8
  %a2r = alloca double, align 8
  %a2i = alloca double, align 8
  %b0r = alloca double, align 8
  %b0i = alloca double, align 8
  %b1r = alloca double, align 8
  %b1i = alloca double, align 8
  %b2r = alloca double, align 8
  %b2i = alloca double, align 8
  store %struct.su3_matrix* %a, %struct.su3_matrix** %a.addr, align 8
  store %struct.su3_matrix* %b, %struct.su3_matrix** %b.addr, align 8
  store %struct.su3_matrix* %c, %struct.su3_matrix** %c.addr, align 8
  store i32 0, i32* %j, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32* %j, align 4
  %cmp = icmp slt i32 %0, 3
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %1 = load %struct.su3_matrix** %a.addr, align 8
  %e = getelementptr inbounds %struct.su3_matrix* %1, i32 0, i32 0
  %arrayidx = getelementptr inbounds [3 x [3 x %struct.complex]]* %e, i32 0, i64 0
  %arrayidx1 = getelementptr inbounds [3 x %struct.complex]* %arrayidx, i32 0, i64 0
  %real = getelementptr inbounds %struct.complex* %arrayidx1, i32 0, i32 0
  %2 = load double* %real, align 8
  store double %2, double* %a0r, align 8
  %3 = load %struct.su3_matrix** %a.addr, align 8
  %e2 = getelementptr inbounds %struct.su3_matrix* %3, i32 0, i32 0
  %arrayidx3 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e2, i32 0, i64 0
  %arrayidx4 = getelementptr inbounds [3 x %struct.complex]* %arrayidx3, i32 0, i64 0
  %imag = getelementptr inbounds %struct.complex* %arrayidx4, i32 0, i32 1
  %4 = load double* %imag, align 8
  store double %4, double* %a0i, align 8
  %5 = load i32* %j, align 4
  %idxprom = sext i32 %5 to i64
  %6 = load %struct.su3_matrix** %b.addr, align 8
  %e5 = getelementptr inbounds %struct.su3_matrix* %6, i32 0, i32 0
  %arrayidx6 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e5, i32 0, i64 0
  %arrayidx7 = getelementptr inbounds [3 x %struct.complex]* %arrayidx6, i32 0, i64 %idxprom
  %real8 = getelementptr inbounds %struct.complex* %arrayidx7, i32 0, i32 0
  %7 = load double* %real8, align 8
  store double %7, double* %b0r, align 8
  %8 = load i32* %j, align 4
  %idxprom9 = sext i32 %8 to i64
  %9 = load %struct.su3_matrix** %b.addr, align 8
  %e10 = getelementptr inbounds %struct.su3_matrix* %9, i32 0, i32 0
  %arrayidx11 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e10, i32 0, i64 0
  %arrayidx12 = getelementptr inbounds [3 x %struct.complex]* %arrayidx11, i32 0, i64 %idxprom9
  %imag13 = getelementptr inbounds %struct.complex* %arrayidx12, i32 0, i32 1
  %10 = load double* %imag13, align 8
  store double %10, double* %b0i, align 8
  %11 = load %struct.su3_matrix** %a.addr, align 8
  %e14 = getelementptr inbounds %struct.su3_matrix* %11, i32 0, i32 0
  %arrayidx15 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e14, i32 0, i64 1
  %arrayidx16 = getelementptr inbounds [3 x %struct.complex]* %arrayidx15, i32 0, i64 0
  %real17 = getelementptr inbounds %struct.complex* %arrayidx16, i32 0, i32 0
  %12 = load double* %real17, align 8
  store double %12, double* %a1r, align 8
  %13 = load %struct.su3_matrix** %a.addr, align 8
  %e18 = getelementptr inbounds %struct.su3_matrix* %13, i32 0, i32 0
  %arrayidx19 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e18, i32 0, i64 1
  %arrayidx20 = getelementptr inbounds [3 x %struct.complex]* %arrayidx19, i32 0, i64 0
  %imag21 = getelementptr inbounds %struct.complex* %arrayidx20, i32 0, i32 1
  %14 = load double* %imag21, align 8
  store double %14, double* %a1i, align 8
  %15 = load i32* %j, align 4
  %idxprom22 = sext i32 %15 to i64
  %16 = load %struct.su3_matrix** %b.addr, align 8
  %e23 = getelementptr inbounds %struct.su3_matrix* %16, i32 0, i32 0
  %arrayidx24 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e23, i32 0, i64 1
  %arrayidx25 = getelementptr inbounds [3 x %struct.complex]* %arrayidx24, i32 0, i64 %idxprom22
  %real26 = getelementptr inbounds %struct.complex* %arrayidx25, i32 0, i32 0
  %17 = load double* %real26, align 8
  store double %17, double* %b1r, align 8
  %18 = load i32* %j, align 4
  %idxprom27 = sext i32 %18 to i64
  %19 = load %struct.su3_matrix** %b.addr, align 8
  %e28 = getelementptr inbounds %struct.su3_matrix* %19, i32 0, i32 0
  %arrayidx29 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e28, i32 0, i64 1
  %arrayidx30 = getelementptr inbounds [3 x %struct.complex]* %arrayidx29, i32 0, i64 %idxprom27
  %imag31 = getelementptr inbounds %struct.complex* %arrayidx30, i32 0, i32 1
  %20 = load double* %imag31, align 8
  store double %20, double* %b1i, align 8
  %21 = load %struct.su3_matrix** %a.addr, align 8
  %e32 = getelementptr inbounds %struct.su3_matrix* %21, i32 0, i32 0
  %arrayidx33 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e32, i32 0, i64 2
  %arrayidx34 = getelementptr inbounds [3 x %struct.complex]* %arrayidx33, i32 0, i64 0
  %real35 = getelementptr inbounds %struct.complex* %arrayidx34, i32 0, i32 0
  %22 = load double* %real35, align 8
  store double %22, double* %a2r, align 8
  %23 = load %struct.su3_matrix** %a.addr, align 8
  %e36 = getelementptr inbounds %struct.su3_matrix* %23, i32 0, i32 0
  %arrayidx37 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e36, i32 0, i64 2
  %arrayidx38 = getelementptr inbounds [3 x %struct.complex]* %arrayidx37, i32 0, i64 0
  %imag39 = getelementptr inbounds %struct.complex* %arrayidx38, i32 0, i32 1
  %24 = load double* %imag39, align 8
  store double %24, double* %a2i, align 8
  %25 = load i32* %j, align 4
  %idxprom40 = sext i32 %25 to i64
  %26 = load %struct.su3_matrix** %b.addr, align 8
  %e41 = getelementptr inbounds %struct.su3_matrix* %26, i32 0, i32 0
  %arrayidx42 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e41, i32 0, i64 2
  %arrayidx43 = getelementptr inbounds [3 x %struct.complex]* %arrayidx42, i32 0, i64 %idxprom40
  %real44 = getelementptr inbounds %struct.complex* %arrayidx43, i32 0, i32 0
  %27 = load double* %real44, align 8
  store double %27, double* %b2r, align 8
  %28 = load i32* %j, align 4
  %idxprom45 = sext i32 %28 to i64
  %29 = load %struct.su3_matrix** %b.addr, align 8
  %e46 = getelementptr inbounds %struct.su3_matrix* %29, i32 0, i32 0
  %arrayidx47 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e46, i32 0, i64 2
  %arrayidx48 = getelementptr inbounds [3 x %struct.complex]* %arrayidx47, i32 0, i64 %idxprom45
  %imag49 = getelementptr inbounds %struct.complex* %arrayidx48, i32 0, i32 1
  %30 = load double* %imag49, align 8
  store double %30, double* %b2i, align 8
  %31 = load double* %a0r, align 8
  %32 = load double* %b0r, align 8
  %mul = fmul double %31, %32
  %33 = load double* %a0i, align 8
  %34 = load double* %b0i, align 8
  %mul50 = fmul double %33, %34
  %add = fadd double %mul, %mul50
  %35 = load double* %a1r, align 8
  %36 = load double* %b1r, align 8
  %mul51 = fmul double %35, %36
  %add52 = fadd double %add, %mul51
  %37 = load double* %a1i, align 8
  %38 = load double* %b1i, align 8
  %mul53 = fmul double %37, %38
  %add54 = fadd double %add52, %mul53
  %39 = load double* %a2r, align 8
  %40 = load double* %b2r, align 8
  %mul55 = fmul double %39, %40
  %add56 = fadd double %add54, %mul55
  %41 = load double* %a2i, align 8
  %42 = load double* %b2i, align 8
  %mul57 = fmul double %41, %42
  %add58 = fadd double %add56, %mul57
  %43 = load i32* %j, align 4
  %idxprom59 = sext i32 %43 to i64
  %44 = load %struct.su3_matrix** %c.addr, align 8
  %e60 = getelementptr inbounds %struct.su3_matrix* %44, i32 0, i32 0
  %arrayidx61 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e60, i32 0, i64 0
  %arrayidx62 = getelementptr inbounds [3 x %struct.complex]* %arrayidx61, i32 0, i64 %idxprom59
  %real63 = getelementptr inbounds %struct.complex* %arrayidx62, i32 0, i32 0
  store double %add58, double* %real63, align 8
  %45 = load double* %a0r, align 8
  %46 = load double* %b0i, align 8
  %mul64 = fmul double %45, %46
  %47 = load double* %a0i, align 8
  %48 = load double* %b0r, align 8
  %mul65 = fmul double %47, %48
  %sub = fsub double %mul64, %mul65
  %49 = load double* %a1r, align 8
  %50 = load double* %b1i, align 8
  %mul66 = fmul double %49, %50
  %add67 = fadd double %sub, %mul66
  %51 = load double* %a1i, align 8
  %52 = load double* %b1r, align 8
  %mul68 = fmul double %51, %52
  %sub69 = fsub double %add67, %mul68
  %53 = load double* %a2r, align 8
  %54 = load double* %b2i, align 8
  %mul70 = fmul double %53, %54
  %add71 = fadd double %sub69, %mul70
  %55 = load double* %a2i, align 8
  %56 = load double* %b2r, align 8
  %mul72 = fmul double %55, %56
  %sub73 = fsub double %add71, %mul72
  %57 = load i32* %j, align 4
  %idxprom74 = sext i32 %57 to i64
  %58 = load %struct.su3_matrix** %c.addr, align 8
  %e75 = getelementptr inbounds %struct.su3_matrix* %58, i32 0, i32 0
  %arrayidx76 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e75, i32 0, i64 0
  %arrayidx77 = getelementptr inbounds [3 x %struct.complex]* %arrayidx76, i32 0, i64 %idxprom74
  %imag78 = getelementptr inbounds %struct.complex* %arrayidx77, i32 0, i32 1
  store double %sub73, double* %imag78, align 8
  %59 = load %struct.su3_matrix** %a.addr, align 8
  %e79 = getelementptr inbounds %struct.su3_matrix* %59, i32 0, i32 0
  %arrayidx80 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e79, i32 0, i64 0
  %arrayidx81 = getelementptr inbounds [3 x %struct.complex]* %arrayidx80, i32 0, i64 1
  %real82 = getelementptr inbounds %struct.complex* %arrayidx81, i32 0, i32 0
  %60 = load double* %real82, align 8
  store double %60, double* %a0r, align 8
  %61 = load %struct.su3_matrix** %a.addr, align 8
  %e83 = getelementptr inbounds %struct.su3_matrix* %61, i32 0, i32 0
  %arrayidx84 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e83, i32 0, i64 0
  %arrayidx85 = getelementptr inbounds [3 x %struct.complex]* %arrayidx84, i32 0, i64 1
  %imag86 = getelementptr inbounds %struct.complex* %arrayidx85, i32 0, i32 1
  %62 = load double* %imag86, align 8
  store double %62, double* %a0i, align 8
  %63 = load i32* %j, align 4
  %idxprom87 = sext i32 %63 to i64
  %64 = load %struct.su3_matrix** %b.addr, align 8
  %e88 = getelementptr inbounds %struct.su3_matrix* %64, i32 0, i32 0
  %arrayidx89 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e88, i32 0, i64 0
  %arrayidx90 = getelementptr inbounds [3 x %struct.complex]* %arrayidx89, i32 0, i64 %idxprom87
  %real91 = getelementptr inbounds %struct.complex* %arrayidx90, i32 0, i32 0
  %65 = load double* %real91, align 8
  store double %65, double* %b0r, align 8
  %66 = load i32* %j, align 4
  %idxprom92 = sext i32 %66 to i64
  %67 = load %struct.su3_matrix** %b.addr, align 8
  %e93 = getelementptr inbounds %struct.su3_matrix* %67, i32 0, i32 0
  %arrayidx94 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e93, i32 0, i64 0
  %arrayidx95 = getelementptr inbounds [3 x %struct.complex]* %arrayidx94, i32 0, i64 %idxprom92
  %imag96 = getelementptr inbounds %struct.complex* %arrayidx95, i32 0, i32 1
  %68 = load double* %imag96, align 8
  store double %68, double* %b0i, align 8
  %69 = load %struct.su3_matrix** %a.addr, align 8
  %e97 = getelementptr inbounds %struct.su3_matrix* %69, i32 0, i32 0
  %arrayidx98 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e97, i32 0, i64 1
  %arrayidx99 = getelementptr inbounds [3 x %struct.complex]* %arrayidx98, i32 0, i64 1
  %real100 = getelementptr inbounds %struct.complex* %arrayidx99, i32 0, i32 0
  %70 = load double* %real100, align 8
  store double %70, double* %a1r, align 8
  %71 = load %struct.su3_matrix** %a.addr, align 8
  %e101 = getelementptr inbounds %struct.su3_matrix* %71, i32 0, i32 0
  %arrayidx102 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e101, i32 0, i64 1
  %arrayidx103 = getelementptr inbounds [3 x %struct.complex]* %arrayidx102, i32 0, i64 1
  %imag104 = getelementptr inbounds %struct.complex* %arrayidx103, i32 0, i32 1
  %72 = load double* %imag104, align 8
  store double %72, double* %a1i, align 8
  %73 = load i32* %j, align 4
  %idxprom105 = sext i32 %73 to i64
  %74 = load %struct.su3_matrix** %b.addr, align 8
  %e106 = getelementptr inbounds %struct.su3_matrix* %74, i32 0, i32 0
  %arrayidx107 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e106, i32 0, i64 1
  %arrayidx108 = getelementptr inbounds [3 x %struct.complex]* %arrayidx107, i32 0, i64 %idxprom105
  %real109 = getelementptr inbounds %struct.complex* %arrayidx108, i32 0, i32 0
  %75 = load double* %real109, align 8
  store double %75, double* %b1r, align 8
  %76 = load i32* %j, align 4
  %idxprom110 = sext i32 %76 to i64
  %77 = load %struct.su3_matrix** %b.addr, align 8
  %e111 = getelementptr inbounds %struct.su3_matrix* %77, i32 0, i32 0
  %arrayidx112 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e111, i32 0, i64 1
  %arrayidx113 = getelementptr inbounds [3 x %struct.complex]* %arrayidx112, i32 0, i64 %idxprom110
  %imag114 = getelementptr inbounds %struct.complex* %arrayidx113, i32 0, i32 1
  %78 = load double* %imag114, align 8
  store double %78, double* %b1i, align 8
  %79 = load %struct.su3_matrix** %a.addr, align 8
  %e115 = getelementptr inbounds %struct.su3_matrix* %79, i32 0, i32 0
  %arrayidx116 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e115, i32 0, i64 2
  %arrayidx117 = getelementptr inbounds [3 x %struct.complex]* %arrayidx116, i32 0, i64 1
  %real118 = getelementptr inbounds %struct.complex* %arrayidx117, i32 0, i32 0
  %80 = load double* %real118, align 8
  store double %80, double* %a2r, align 8
  %81 = load %struct.su3_matrix** %a.addr, align 8
  %e119 = getelementptr inbounds %struct.su3_matrix* %81, i32 0, i32 0
  %arrayidx120 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e119, i32 0, i64 2
  %arrayidx121 = getelementptr inbounds [3 x %struct.complex]* %arrayidx120, i32 0, i64 1
  %imag122 = getelementptr inbounds %struct.complex* %arrayidx121, i32 0, i32 1
  %82 = load double* %imag122, align 8
  store double %82, double* %a2i, align 8
  %83 = load i32* %j, align 4
  %idxprom123 = sext i32 %83 to i64
  %84 = load %struct.su3_matrix** %b.addr, align 8
  %e124 = getelementptr inbounds %struct.su3_matrix* %84, i32 0, i32 0
  %arrayidx125 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e124, i32 0, i64 2
  %arrayidx126 = getelementptr inbounds [3 x %struct.complex]* %arrayidx125, i32 0, i64 %idxprom123
  %real127 = getelementptr inbounds %struct.complex* %arrayidx126, i32 0, i32 0
  %85 = load double* %real127, align 8
  store double %85, double* %b2r, align 8
  %86 = load i32* %j, align 4
  %idxprom128 = sext i32 %86 to i64
  %87 = load %struct.su3_matrix** %b.addr, align 8
  %e129 = getelementptr inbounds %struct.su3_matrix* %87, i32 0, i32 0
  %arrayidx130 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e129, i32 0, i64 2
  %arrayidx131 = getelementptr inbounds [3 x %struct.complex]* %arrayidx130, i32 0, i64 %idxprom128
  %imag132 = getelementptr inbounds %struct.complex* %arrayidx131, i32 0, i32 1
  %88 = load double* %imag132, align 8
  store double %88, double* %b2i, align 8
  %89 = load double* %a0r, align 8
  %90 = load double* %b0r, align 8
  %mul133 = fmul double %89, %90
  %91 = load double* %a0i, align 8
  %92 = load double* %b0i, align 8
  %mul134 = fmul double %91, %92
  %add135 = fadd double %mul133, %mul134
  %93 = load double* %a1r, align 8
  %94 = load double* %b1r, align 8
  %mul136 = fmul double %93, %94
  %add137 = fadd double %add135, %mul136
  %95 = load double* %a1i, align 8
  %96 = load double* %b1i, align 8
  %mul138 = fmul double %95, %96
  %add139 = fadd double %add137, %mul138
  %97 = load double* %a2r, align 8
  %98 = load double* %b2r, align 8
  %mul140 = fmul double %97, %98
  %add141 = fadd double %add139, %mul140
  %99 = load double* %a2i, align 8
  %100 = load double* %b2i, align 8
  %mul142 = fmul double %99, %100
  %add143 = fadd double %add141, %mul142
  %101 = load i32* %j, align 4
  %idxprom144 = sext i32 %101 to i64
  %102 = load %struct.su3_matrix** %c.addr, align 8
  %e145 = getelementptr inbounds %struct.su3_matrix* %102, i32 0, i32 0
  %arrayidx146 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e145, i32 0, i64 1
  %arrayidx147 = getelementptr inbounds [3 x %struct.complex]* %arrayidx146, i32 0, i64 %idxprom144
  %real148 = getelementptr inbounds %struct.complex* %arrayidx147, i32 0, i32 0
  store double %add143, double* %real148, align 8
  %103 = load double* %a0r, align 8
  %104 = load double* %b0i, align 8
  %mul149 = fmul double %103, %104
  %105 = load double* %a0i, align 8
  %106 = load double* %b0r, align 8
  %mul150 = fmul double %105, %106
  %sub151 = fsub double %mul149, %mul150
  %107 = load double* %a1r, align 8
  %108 = load double* %b1i, align 8
  %mul152 = fmul double %107, %108
  %add153 = fadd double %sub151, %mul152
  %109 = load double* %a1i, align 8
  %110 = load double* %b1r, align 8
  %mul154 = fmul double %109, %110
  %sub155 = fsub double %add153, %mul154
  %111 = load double* %a2r, align 8
  %112 = load double* %b2i, align 8
  %mul156 = fmul double %111, %112
  %add157 = fadd double %sub155, %mul156
  %113 = load double* %a2i, align 8
  %114 = load double* %b2r, align 8
  %mul158 = fmul double %113, %114
  %sub159 = fsub double %add157, %mul158
  %115 = load i32* %j, align 4
  %idxprom160 = sext i32 %115 to i64
  %116 = load %struct.su3_matrix** %c.addr, align 8
  %e161 = getelementptr inbounds %struct.su3_matrix* %116, i32 0, i32 0
  %arrayidx162 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e161, i32 0, i64 1
  %arrayidx163 = getelementptr inbounds [3 x %struct.complex]* %arrayidx162, i32 0, i64 %idxprom160
  %imag164 = getelementptr inbounds %struct.complex* %arrayidx163, i32 0, i32 1
  store double %sub159, double* %imag164, align 8
  %117 = load %struct.su3_matrix** %a.addr, align 8
  %e165 = getelementptr inbounds %struct.su3_matrix* %117, i32 0, i32 0
  %arrayidx166 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e165, i32 0, i64 0
  %arrayidx167 = getelementptr inbounds [3 x %struct.complex]* %arrayidx166, i32 0, i64 2
  %real168 = getelementptr inbounds %struct.complex* %arrayidx167, i32 0, i32 0
  %118 = load double* %real168, align 8
  store double %118, double* %a0r, align 8
  %119 = load %struct.su3_matrix** %a.addr, align 8
  %e169 = getelementptr inbounds %struct.su3_matrix* %119, i32 0, i32 0
  %arrayidx170 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e169, i32 0, i64 0
  %arrayidx171 = getelementptr inbounds [3 x %struct.complex]* %arrayidx170, i32 0, i64 2
  %imag172 = getelementptr inbounds %struct.complex* %arrayidx171, i32 0, i32 1
  %120 = load double* %imag172, align 8
  store double %120, double* %a0i, align 8
  %121 = load i32* %j, align 4
  %idxprom173 = sext i32 %121 to i64
  %122 = load %struct.su3_matrix** %b.addr, align 8
  %e174 = getelementptr inbounds %struct.su3_matrix* %122, i32 0, i32 0
  %arrayidx175 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e174, i32 0, i64 0
  %arrayidx176 = getelementptr inbounds [3 x %struct.complex]* %arrayidx175, i32 0, i64 %idxprom173
  %real177 = getelementptr inbounds %struct.complex* %arrayidx176, i32 0, i32 0
  %123 = load double* %real177, align 8
  store double %123, double* %b0r, align 8
  %124 = load i32* %j, align 4
  %idxprom178 = sext i32 %124 to i64
  %125 = load %struct.su3_matrix** %b.addr, align 8
  %e179 = getelementptr inbounds %struct.su3_matrix* %125, i32 0, i32 0
  %arrayidx180 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e179, i32 0, i64 0
  %arrayidx181 = getelementptr inbounds [3 x %struct.complex]* %arrayidx180, i32 0, i64 %idxprom178
  %imag182 = getelementptr inbounds %struct.complex* %arrayidx181, i32 0, i32 1
  %126 = load double* %imag182, align 8
  store double %126, double* %b0i, align 8
  %127 = load %struct.su3_matrix** %a.addr, align 8
  %e183 = getelementptr inbounds %struct.su3_matrix* %127, i32 0, i32 0
  %arrayidx184 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e183, i32 0, i64 1
  %arrayidx185 = getelementptr inbounds [3 x %struct.complex]* %arrayidx184, i32 0, i64 2
  %real186 = getelementptr inbounds %struct.complex* %arrayidx185, i32 0, i32 0
  %128 = load double* %real186, align 8
  store double %128, double* %a1r, align 8
  %129 = load %struct.su3_matrix** %a.addr, align 8
  %e187 = getelementptr inbounds %struct.su3_matrix* %129, i32 0, i32 0
  %arrayidx188 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e187, i32 0, i64 1
  %arrayidx189 = getelementptr inbounds [3 x %struct.complex]* %arrayidx188, i32 0, i64 2
  %imag190 = getelementptr inbounds %struct.complex* %arrayidx189, i32 0, i32 1
  %130 = load double* %imag190, align 8
  store double %130, double* %a1i, align 8
  %131 = load i32* %j, align 4
  %idxprom191 = sext i32 %131 to i64
  %132 = load %struct.su3_matrix** %b.addr, align 8
  %e192 = getelementptr inbounds %struct.su3_matrix* %132, i32 0, i32 0
  %arrayidx193 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e192, i32 0, i64 1
  %arrayidx194 = getelementptr inbounds [3 x %struct.complex]* %arrayidx193, i32 0, i64 %idxprom191
  %real195 = getelementptr inbounds %struct.complex* %arrayidx194, i32 0, i32 0
  %133 = load double* %real195, align 8
  store double %133, double* %b1r, align 8
  %134 = load i32* %j, align 4
  %idxprom196 = sext i32 %134 to i64
  %135 = load %struct.su3_matrix** %b.addr, align 8
  %e197 = getelementptr inbounds %struct.su3_matrix* %135, i32 0, i32 0
  %arrayidx198 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e197, i32 0, i64 1
  %arrayidx199 = getelementptr inbounds [3 x %struct.complex]* %arrayidx198, i32 0, i64 %idxprom196
  %imag200 = getelementptr inbounds %struct.complex* %arrayidx199, i32 0, i32 1
  %136 = load double* %imag200, align 8
  store double %136, double* %b1i, align 8
  %137 = load %struct.su3_matrix** %a.addr, align 8
  %e201 = getelementptr inbounds %struct.su3_matrix* %137, i32 0, i32 0
  %arrayidx202 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e201, i32 0, i64 2
  %arrayidx203 = getelementptr inbounds [3 x %struct.complex]* %arrayidx202, i32 0, i64 2
  %real204 = getelementptr inbounds %struct.complex* %arrayidx203, i32 0, i32 0
  %138 = load double* %real204, align 8
  store double %138, double* %a2r, align 8
  %139 = load %struct.su3_matrix** %a.addr, align 8
  %e205 = getelementptr inbounds %struct.su3_matrix* %139, i32 0, i32 0
  %arrayidx206 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e205, i32 0, i64 2
  %arrayidx207 = getelementptr inbounds [3 x %struct.complex]* %arrayidx206, i32 0, i64 2
  %imag208 = getelementptr inbounds %struct.complex* %arrayidx207, i32 0, i32 1
  %140 = load double* %imag208, align 8
  store double %140, double* %a2i, align 8
  %141 = load i32* %j, align 4
  %idxprom209 = sext i32 %141 to i64
  %142 = load %struct.su3_matrix** %b.addr, align 8
  %e210 = getelementptr inbounds %struct.su3_matrix* %142, i32 0, i32 0
  %arrayidx211 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e210, i32 0, i64 2
  %arrayidx212 = getelementptr inbounds [3 x %struct.complex]* %arrayidx211, i32 0, i64 %idxprom209
  %real213 = getelementptr inbounds %struct.complex* %arrayidx212, i32 0, i32 0
  %143 = load double* %real213, align 8
  store double %143, double* %b2r, align 8
  %144 = load i32* %j, align 4
  %idxprom214 = sext i32 %144 to i64
  %145 = load %struct.su3_matrix** %b.addr, align 8
  %e215 = getelementptr inbounds %struct.su3_matrix* %145, i32 0, i32 0
  %arrayidx216 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e215, i32 0, i64 2
  %arrayidx217 = getelementptr inbounds [3 x %struct.complex]* %arrayidx216, i32 0, i64 %idxprom214
  %imag218 = getelementptr inbounds %struct.complex* %arrayidx217, i32 0, i32 1
  %146 = load double* %imag218, align 8
  store double %146, double* %b2i, align 8
  %147 = load double* %a0r, align 8
  %148 = load double* %b0r, align 8
  %mul219 = fmul double %147, %148
  %149 = load double* %a0i, align 8
  %150 = load double* %b0i, align 8
  %mul220 = fmul double %149, %150
  %add221 = fadd double %mul219, %mul220
  %151 = load double* %a1r, align 8
  %152 = load double* %b1r, align 8
  %mul222 = fmul double %151, %152
  %add223 = fadd double %add221, %mul222
  %153 = load double* %a1i, align 8
  %154 = load double* %b1i, align 8
  %mul224 = fmul double %153, %154
  %add225 = fadd double %add223, %mul224
  %155 = load double* %a2r, align 8
  %156 = load double* %b2r, align 8
  %mul226 = fmul double %155, %156
  %add227 = fadd double %add225, %mul226
  %157 = load double* %a2i, align 8
  %158 = load double* %b2i, align 8
  %mul228 = fmul double %157, %158
  %add229 = fadd double %add227, %mul228
  %159 = load i32* %j, align 4
  %idxprom230 = sext i32 %159 to i64
  %160 = load %struct.su3_matrix** %c.addr, align 8
  %e231 = getelementptr inbounds %struct.su3_matrix* %160, i32 0, i32 0
  %arrayidx232 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e231, i32 0, i64 2
  %arrayidx233 = getelementptr inbounds [3 x %struct.complex]* %arrayidx232, i32 0, i64 %idxprom230
  %real234 = getelementptr inbounds %struct.complex* %arrayidx233, i32 0, i32 0
  store double %add229, double* %real234, align 8
  %161 = load double* %a0r, align 8
  %162 = load double* %b0i, align 8
  %mul235 = fmul double %161, %162
  %163 = load double* %a0i, align 8
  %164 = load double* %b0r, align 8
  %mul236 = fmul double %163, %164
  %sub237 = fsub double %mul235, %mul236
  %165 = load double* %a1r, align 8
  %166 = load double* %b1i, align 8
  %mul238 = fmul double %165, %166
  %add239 = fadd double %sub237, %mul238
  %167 = load double* %a1i, align 8
  %168 = load double* %b1r, align 8
  %mul240 = fmul double %167, %168
  %sub241 = fsub double %add239, %mul240
  %169 = load double* %a2r, align 8
  %170 = load double* %b2i, align 8
  %mul242 = fmul double %169, %170
  %add243 = fadd double %sub241, %mul242
  %171 = load double* %a2i, align 8
  %172 = load double* %b2r, align 8
  %mul244 = fmul double %171, %172
  %sub245 = fsub double %add243, %mul244
  %173 = load i32* %j, align 4
  %idxprom246 = sext i32 %173 to i64
  %174 = load %struct.su3_matrix** %c.addr, align 8
  %e247 = getelementptr inbounds %struct.su3_matrix* %174, i32 0, i32 0
  %arrayidx248 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e247, i32 0, i64 2
  %arrayidx249 = getelementptr inbounds [3 x %struct.complex]* %arrayidx248, i32 0, i64 %idxprom246
  %imag250 = getelementptr inbounds %struct.complex* %arrayidx249, i32 0, i32 1
  store double %sub245, double* %imag250, align 8
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %175 = load i32* %j, align 4
  %inc = add nsw i32 %175, 1
  store i32 %inc, i32* %j, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @mult_su3_na(%struct.su3_matrix* %a, %struct.su3_matrix* %b, %struct.su3_matrix* %c) #0 {
entry:
  %a.addr = alloca %struct.su3_matrix*, align 8
  %b.addr = alloca %struct.su3_matrix*, align 8
  %c.addr = alloca %struct.su3_matrix*, align 8
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %t = alloca double, align 8
  %ar = alloca double, align 8
  %ai = alloca double, align 8
  %br = alloca double, align 8
  %bi = alloca double, align 8
  %cr = alloca double, align 8
  %ci = alloca double, align 8
  store %struct.su3_matrix* %a, %struct.su3_matrix** %a.addr, align 8
  store %struct.su3_matrix* %b, %struct.su3_matrix** %b.addr, align 8
  store %struct.su3_matrix* %c, %struct.su3_matrix** %c.addr, align 8
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc90, %entry
  %0 = load i32* %i, align 4
  %cmp = icmp slt i32 %0, 3
  br i1 %cmp, label %for.body, label %for.end92

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %j, align 4
  br label %for.cond1

for.cond1:                                        ; preds = %for.inc, %for.body
  %1 = load i32* %j, align 4
  %cmp2 = icmp slt i32 %1, 3
  br i1 %cmp2, label %for.body3, label %for.end

for.body3:                                        ; preds = %for.cond1
  %2 = load i32* %i, align 4
  %idxprom = sext i32 %2 to i64
  %3 = load %struct.su3_matrix** %a.addr, align 8
  %e = getelementptr inbounds %struct.su3_matrix* %3, i32 0, i32 0
  %arrayidx = getelementptr inbounds [3 x [3 x %struct.complex]]* %e, i32 0, i64 %idxprom
  %arrayidx4 = getelementptr inbounds [3 x %struct.complex]* %arrayidx, i32 0, i64 0
  %real = getelementptr inbounds %struct.complex* %arrayidx4, i32 0, i32 0
  %4 = load double* %real, align 8
  store double %4, double* %ar, align 8
  %5 = load i32* %i, align 4
  %idxprom5 = sext i32 %5 to i64
  %6 = load %struct.su3_matrix** %a.addr, align 8
  %e6 = getelementptr inbounds %struct.su3_matrix* %6, i32 0, i32 0
  %arrayidx7 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e6, i32 0, i64 %idxprom5
  %arrayidx8 = getelementptr inbounds [3 x %struct.complex]* %arrayidx7, i32 0, i64 0
  %imag = getelementptr inbounds %struct.complex* %arrayidx8, i32 0, i32 1
  %7 = load double* %imag, align 8
  store double %7, double* %ai, align 8
  %8 = load i32* %j, align 4
  %idxprom9 = sext i32 %8 to i64
  %9 = load %struct.su3_matrix** %b.addr, align 8
  %e10 = getelementptr inbounds %struct.su3_matrix* %9, i32 0, i32 0
  %arrayidx11 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e10, i32 0, i64 %idxprom9
  %arrayidx12 = getelementptr inbounds [3 x %struct.complex]* %arrayidx11, i32 0, i64 0
  %real13 = getelementptr inbounds %struct.complex* %arrayidx12, i32 0, i32 0
  %10 = load double* %real13, align 8
  store double %10, double* %br, align 8
  %11 = load i32* %j, align 4
  %idxprom14 = sext i32 %11 to i64
  %12 = load %struct.su3_matrix** %b.addr, align 8
  %e15 = getelementptr inbounds %struct.su3_matrix* %12, i32 0, i32 0
  %arrayidx16 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e15, i32 0, i64 %idxprom14
  %arrayidx17 = getelementptr inbounds [3 x %struct.complex]* %arrayidx16, i32 0, i64 0
  %imag18 = getelementptr inbounds %struct.complex* %arrayidx17, i32 0, i32 1
  %13 = load double* %imag18, align 8
  store double %13, double* %bi, align 8
  %14 = load double* %ar, align 8
  %15 = load double* %br, align 8
  %mul = fmul double %14, %15
  store double %mul, double* %cr, align 8
  %16 = load double* %ai, align 8
  %17 = load double* %bi, align 8
  %mul19 = fmul double %16, %17
  store double %mul19, double* %t, align 8
  %18 = load double* %t, align 8
  %19 = load double* %cr, align 8
  %add = fadd double %19, %18
  store double %add, double* %cr, align 8
  %20 = load double* %ai, align 8
  %21 = load double* %br, align 8
  %mul20 = fmul double %20, %21
  store double %mul20, double* %ci, align 8
  %22 = load double* %ar, align 8
  %23 = load double* %bi, align 8
  %mul21 = fmul double %22, %23
  store double %mul21, double* %t, align 8
  %24 = load double* %t, align 8
  %25 = load double* %ci, align 8
  %sub = fsub double %25, %24
  store double %sub, double* %ci, align 8
  %26 = load i32* %i, align 4
  %idxprom22 = sext i32 %26 to i64
  %27 = load %struct.su3_matrix** %a.addr, align 8
  %e23 = getelementptr inbounds %struct.su3_matrix* %27, i32 0, i32 0
  %arrayidx24 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e23, i32 0, i64 %idxprom22
  %arrayidx25 = getelementptr inbounds [3 x %struct.complex]* %arrayidx24, i32 0, i64 1
  %real26 = getelementptr inbounds %struct.complex* %arrayidx25, i32 0, i32 0
  %28 = load double* %real26, align 8
  store double %28, double* %ar, align 8
  %29 = load i32* %i, align 4
  %idxprom27 = sext i32 %29 to i64
  %30 = load %struct.su3_matrix** %a.addr, align 8
  %e28 = getelementptr inbounds %struct.su3_matrix* %30, i32 0, i32 0
  %arrayidx29 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e28, i32 0, i64 %idxprom27
  %arrayidx30 = getelementptr inbounds [3 x %struct.complex]* %arrayidx29, i32 0, i64 1
  %imag31 = getelementptr inbounds %struct.complex* %arrayidx30, i32 0, i32 1
  %31 = load double* %imag31, align 8
  store double %31, double* %ai, align 8
  %32 = load i32* %j, align 4
  %idxprom32 = sext i32 %32 to i64
  %33 = load %struct.su3_matrix** %b.addr, align 8
  %e33 = getelementptr inbounds %struct.su3_matrix* %33, i32 0, i32 0
  %arrayidx34 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e33, i32 0, i64 %idxprom32
  %arrayidx35 = getelementptr inbounds [3 x %struct.complex]* %arrayidx34, i32 0, i64 1
  %real36 = getelementptr inbounds %struct.complex* %arrayidx35, i32 0, i32 0
  %34 = load double* %real36, align 8
  store double %34, double* %br, align 8
  %35 = load i32* %j, align 4
  %idxprom37 = sext i32 %35 to i64
  %36 = load %struct.su3_matrix** %b.addr, align 8
  %e38 = getelementptr inbounds %struct.su3_matrix* %36, i32 0, i32 0
  %arrayidx39 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e38, i32 0, i64 %idxprom37
  %arrayidx40 = getelementptr inbounds [3 x %struct.complex]* %arrayidx39, i32 0, i64 1
  %imag41 = getelementptr inbounds %struct.complex* %arrayidx40, i32 0, i32 1
  %37 = load double* %imag41, align 8
  store double %37, double* %bi, align 8
  %38 = load double* %ar, align 8
  %39 = load double* %br, align 8
  %mul42 = fmul double %38, %39
  store double %mul42, double* %t, align 8
  %40 = load double* %t, align 8
  %41 = load double* %cr, align 8
  %add43 = fadd double %41, %40
  store double %add43, double* %cr, align 8
  %42 = load double* %ai, align 8
  %43 = load double* %bi, align 8
  %mul44 = fmul double %42, %43
  store double %mul44, double* %t, align 8
  %44 = load double* %t, align 8
  %45 = load double* %cr, align 8
  %add45 = fadd double %45, %44
  store double %add45, double* %cr, align 8
  %46 = load double* %ar, align 8
  %47 = load double* %bi, align 8
  %mul46 = fmul double %46, %47
  store double %mul46, double* %t, align 8
  %48 = load double* %t, align 8
  %49 = load double* %ci, align 8
  %sub47 = fsub double %49, %48
  store double %sub47, double* %ci, align 8
  %50 = load double* %ai, align 8
  %51 = load double* %br, align 8
  %mul48 = fmul double %50, %51
  store double %mul48, double* %t, align 8
  %52 = load double* %t, align 8
  %53 = load double* %ci, align 8
  %add49 = fadd double %53, %52
  store double %add49, double* %ci, align 8
  %54 = load i32* %i, align 4
  %idxprom50 = sext i32 %54 to i64
  %55 = load %struct.su3_matrix** %a.addr, align 8
  %e51 = getelementptr inbounds %struct.su3_matrix* %55, i32 0, i32 0
  %arrayidx52 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e51, i32 0, i64 %idxprom50
  %arrayidx53 = getelementptr inbounds [3 x %struct.complex]* %arrayidx52, i32 0, i64 2
  %real54 = getelementptr inbounds %struct.complex* %arrayidx53, i32 0, i32 0
  %56 = load double* %real54, align 8
  store double %56, double* %ar, align 8
  %57 = load i32* %i, align 4
  %idxprom55 = sext i32 %57 to i64
  %58 = load %struct.su3_matrix** %a.addr, align 8
  %e56 = getelementptr inbounds %struct.su3_matrix* %58, i32 0, i32 0
  %arrayidx57 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e56, i32 0, i64 %idxprom55
  %arrayidx58 = getelementptr inbounds [3 x %struct.complex]* %arrayidx57, i32 0, i64 2
  %imag59 = getelementptr inbounds %struct.complex* %arrayidx58, i32 0, i32 1
  %59 = load double* %imag59, align 8
  store double %59, double* %ai, align 8
  %60 = load i32* %j, align 4
  %idxprom60 = sext i32 %60 to i64
  %61 = load %struct.su3_matrix** %b.addr, align 8
  %e61 = getelementptr inbounds %struct.su3_matrix* %61, i32 0, i32 0
  %arrayidx62 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e61, i32 0, i64 %idxprom60
  %arrayidx63 = getelementptr inbounds [3 x %struct.complex]* %arrayidx62, i32 0, i64 2
  %real64 = getelementptr inbounds %struct.complex* %arrayidx63, i32 0, i32 0
  %62 = load double* %real64, align 8
  store double %62, double* %br, align 8
  %63 = load i32* %j, align 4
  %idxprom65 = sext i32 %63 to i64
  %64 = load %struct.su3_matrix** %b.addr, align 8
  %e66 = getelementptr inbounds %struct.su3_matrix* %64, i32 0, i32 0
  %arrayidx67 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e66, i32 0, i64 %idxprom65
  %arrayidx68 = getelementptr inbounds [3 x %struct.complex]* %arrayidx67, i32 0, i64 2
  %imag69 = getelementptr inbounds %struct.complex* %arrayidx68, i32 0, i32 1
  %65 = load double* %imag69, align 8
  store double %65, double* %bi, align 8
  %66 = load double* %ar, align 8
  %67 = load double* %br, align 8
  %mul70 = fmul double %66, %67
  store double %mul70, double* %t, align 8
  %68 = load double* %t, align 8
  %69 = load double* %cr, align 8
  %add71 = fadd double %69, %68
  store double %add71, double* %cr, align 8
  %70 = load double* %ai, align 8
  %71 = load double* %bi, align 8
  %mul72 = fmul double %70, %71
  store double %mul72, double* %t, align 8
  %72 = load double* %t, align 8
  %73 = load double* %cr, align 8
  %add73 = fadd double %73, %72
  store double %add73, double* %cr, align 8
  %74 = load double* %ar, align 8
  %75 = load double* %bi, align 8
  %mul74 = fmul double %74, %75
  store double %mul74, double* %t, align 8
  %76 = load double* %t, align 8
  %77 = load double* %ci, align 8
  %sub75 = fsub double %77, %76
  store double %sub75, double* %ci, align 8
  %78 = load double* %ai, align 8
  %79 = load double* %br, align 8
  %mul76 = fmul double %78, %79
  store double %mul76, double* %t, align 8
  %80 = load double* %t, align 8
  %81 = load double* %ci, align 8
  %add77 = fadd double %81, %80
  store double %add77, double* %ci, align 8
  %82 = load double* %cr, align 8
  %83 = load i32* %j, align 4
  %idxprom78 = sext i32 %83 to i64
  %84 = load i32* %i, align 4
  %idxprom79 = sext i32 %84 to i64
  %85 = load %struct.su3_matrix** %c.addr, align 8
  %e80 = getelementptr inbounds %struct.su3_matrix* %85, i32 0, i32 0
  %arrayidx81 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e80, i32 0, i64 %idxprom79
  %arrayidx82 = getelementptr inbounds [3 x %struct.complex]* %arrayidx81, i32 0, i64 %idxprom78
  %real83 = getelementptr inbounds %struct.complex* %arrayidx82, i32 0, i32 0
  store double %82, double* %real83, align 8
  %86 = load double* %ci, align 8
  %87 = load i32* %j, align 4
  %idxprom84 = sext i32 %87 to i64
  %88 = load i32* %i, align 4
  %idxprom85 = sext i32 %88 to i64
  %89 = load %struct.su3_matrix** %c.addr, align 8
  %e86 = getelementptr inbounds %struct.su3_matrix* %89, i32 0, i32 0
  %arrayidx87 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e86, i32 0, i64 %idxprom85
  %arrayidx88 = getelementptr inbounds [3 x %struct.complex]* %arrayidx87, i32 0, i64 %idxprom84
  %imag89 = getelementptr inbounds %struct.complex* %arrayidx88, i32 0, i32 1
  store double %86, double* %imag89, align 8
  br label %for.inc

for.inc:                                          ; preds = %for.body3
  %90 = load i32* %j, align 4
  %inc = add nsw i32 %90, 1
  store i32 %inc, i32* %j, align 4
  br label %for.cond1

for.end:                                          ; preds = %for.cond1
  br label %for.inc90

for.inc90:                                        ; preds = %for.end
  %91 = load i32* %i, align 4
  %inc91 = add nsw i32 %91, 1
  store i32 %inc91, i32* %i, align 4
  br label %for.cond

for.end92:                                        ; preds = %for.cond
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @mult_su3_nn(%struct.su3_matrix* %a, %struct.su3_matrix* %b, %struct.su3_matrix* %c) #0 {
entry:
  %a.addr = alloca %struct.su3_matrix*, align 8
  %b.addr = alloca %struct.su3_matrix*, align 8
  %c.addr = alloca %struct.su3_matrix*, align 8
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %t = alloca double, align 8
  %ar = alloca double, align 8
  %ai = alloca double, align 8
  %br = alloca double, align 8
  %bi = alloca double, align 8
  %cr = alloca double, align 8
  %ci = alloca double, align 8
  store %struct.su3_matrix* %a, %struct.su3_matrix** %a.addr, align 8
  store %struct.su3_matrix* %b, %struct.su3_matrix** %b.addr, align 8
  store %struct.su3_matrix* %c, %struct.su3_matrix** %c.addr, align 8
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc90, %entry
  %0 = load i32* %i, align 4
  %cmp = icmp slt i32 %0, 3
  br i1 %cmp, label %for.body, label %for.end92

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %j, align 4
  br label %for.cond1

for.cond1:                                        ; preds = %for.inc, %for.body
  %1 = load i32* %j, align 4
  %cmp2 = icmp slt i32 %1, 3
  br i1 %cmp2, label %for.body3, label %for.end

for.body3:                                        ; preds = %for.cond1
  %2 = load i32* %i, align 4
  %idxprom = sext i32 %2 to i64
  %3 = load %struct.su3_matrix** %a.addr, align 8
  %e = getelementptr inbounds %struct.su3_matrix* %3, i32 0, i32 0
  %arrayidx = getelementptr inbounds [3 x [3 x %struct.complex]]* %e, i32 0, i64 %idxprom
  %arrayidx4 = getelementptr inbounds [3 x %struct.complex]* %arrayidx, i32 0, i64 0
  %real = getelementptr inbounds %struct.complex* %arrayidx4, i32 0, i32 0
  %4 = load double* %real, align 8
  store double %4, double* %ar, align 8
  %5 = load i32* %i, align 4
  %idxprom5 = sext i32 %5 to i64
  %6 = load %struct.su3_matrix** %a.addr, align 8
  %e6 = getelementptr inbounds %struct.su3_matrix* %6, i32 0, i32 0
  %arrayidx7 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e6, i32 0, i64 %idxprom5
  %arrayidx8 = getelementptr inbounds [3 x %struct.complex]* %arrayidx7, i32 0, i64 0
  %imag = getelementptr inbounds %struct.complex* %arrayidx8, i32 0, i32 1
  %7 = load double* %imag, align 8
  store double %7, double* %ai, align 8
  %8 = load i32* %j, align 4
  %idxprom9 = sext i32 %8 to i64
  %9 = load %struct.su3_matrix** %b.addr, align 8
  %e10 = getelementptr inbounds %struct.su3_matrix* %9, i32 0, i32 0
  %arrayidx11 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e10, i32 0, i64 0
  %arrayidx12 = getelementptr inbounds [3 x %struct.complex]* %arrayidx11, i32 0, i64 %idxprom9
  %real13 = getelementptr inbounds %struct.complex* %arrayidx12, i32 0, i32 0
  %10 = load double* %real13, align 8
  store double %10, double* %br, align 8
  %11 = load i32* %j, align 4
  %idxprom14 = sext i32 %11 to i64
  %12 = load %struct.su3_matrix** %b.addr, align 8
  %e15 = getelementptr inbounds %struct.su3_matrix* %12, i32 0, i32 0
  %arrayidx16 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e15, i32 0, i64 0
  %arrayidx17 = getelementptr inbounds [3 x %struct.complex]* %arrayidx16, i32 0, i64 %idxprom14
  %imag18 = getelementptr inbounds %struct.complex* %arrayidx17, i32 0, i32 1
  %13 = load double* %imag18, align 8
  store double %13, double* %bi, align 8
  %14 = load double* %ar, align 8
  %15 = load double* %br, align 8
  %mul = fmul double %14, %15
  store double %mul, double* %cr, align 8
  %16 = load double* %ai, align 8
  %17 = load double* %bi, align 8
  %mul19 = fmul double %16, %17
  store double %mul19, double* %t, align 8
  %18 = load double* %t, align 8
  %19 = load double* %cr, align 8
  %sub = fsub double %19, %18
  store double %sub, double* %cr, align 8
  %20 = load double* %ar, align 8
  %21 = load double* %bi, align 8
  %mul20 = fmul double %20, %21
  store double %mul20, double* %ci, align 8
  %22 = load double* %ai, align 8
  %23 = load double* %br, align 8
  %mul21 = fmul double %22, %23
  store double %mul21, double* %t, align 8
  %24 = load double* %t, align 8
  %25 = load double* %ci, align 8
  %add = fadd double %25, %24
  store double %add, double* %ci, align 8
  %26 = load i32* %i, align 4
  %idxprom22 = sext i32 %26 to i64
  %27 = load %struct.su3_matrix** %a.addr, align 8
  %e23 = getelementptr inbounds %struct.su3_matrix* %27, i32 0, i32 0
  %arrayidx24 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e23, i32 0, i64 %idxprom22
  %arrayidx25 = getelementptr inbounds [3 x %struct.complex]* %arrayidx24, i32 0, i64 1
  %real26 = getelementptr inbounds %struct.complex* %arrayidx25, i32 0, i32 0
  %28 = load double* %real26, align 8
  store double %28, double* %ar, align 8
  %29 = load i32* %i, align 4
  %idxprom27 = sext i32 %29 to i64
  %30 = load %struct.su3_matrix** %a.addr, align 8
  %e28 = getelementptr inbounds %struct.su3_matrix* %30, i32 0, i32 0
  %arrayidx29 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e28, i32 0, i64 %idxprom27
  %arrayidx30 = getelementptr inbounds [3 x %struct.complex]* %arrayidx29, i32 0, i64 1
  %imag31 = getelementptr inbounds %struct.complex* %arrayidx30, i32 0, i32 1
  %31 = load double* %imag31, align 8
  store double %31, double* %ai, align 8
  %32 = load i32* %j, align 4
  %idxprom32 = sext i32 %32 to i64
  %33 = load %struct.su3_matrix** %b.addr, align 8
  %e33 = getelementptr inbounds %struct.su3_matrix* %33, i32 0, i32 0
  %arrayidx34 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e33, i32 0, i64 1
  %arrayidx35 = getelementptr inbounds [3 x %struct.complex]* %arrayidx34, i32 0, i64 %idxprom32
  %real36 = getelementptr inbounds %struct.complex* %arrayidx35, i32 0, i32 0
  %34 = load double* %real36, align 8
  store double %34, double* %br, align 8
  %35 = load i32* %j, align 4
  %idxprom37 = sext i32 %35 to i64
  %36 = load %struct.su3_matrix** %b.addr, align 8
  %e38 = getelementptr inbounds %struct.su3_matrix* %36, i32 0, i32 0
  %arrayidx39 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e38, i32 0, i64 1
  %arrayidx40 = getelementptr inbounds [3 x %struct.complex]* %arrayidx39, i32 0, i64 %idxprom37
  %imag41 = getelementptr inbounds %struct.complex* %arrayidx40, i32 0, i32 1
  %37 = load double* %imag41, align 8
  store double %37, double* %bi, align 8
  %38 = load double* %ar, align 8
  %39 = load double* %br, align 8
  %mul42 = fmul double %38, %39
  store double %mul42, double* %t, align 8
  %40 = load double* %t, align 8
  %41 = load double* %cr, align 8
  %add43 = fadd double %41, %40
  store double %add43, double* %cr, align 8
  %42 = load double* %ai, align 8
  %43 = load double* %bi, align 8
  %mul44 = fmul double %42, %43
  store double %mul44, double* %t, align 8
  %44 = load double* %t, align 8
  %45 = load double* %cr, align 8
  %sub45 = fsub double %45, %44
  store double %sub45, double* %cr, align 8
  %46 = load double* %ar, align 8
  %47 = load double* %bi, align 8
  %mul46 = fmul double %46, %47
  store double %mul46, double* %t, align 8
  %48 = load double* %t, align 8
  %49 = load double* %ci, align 8
  %add47 = fadd double %49, %48
  store double %add47, double* %ci, align 8
  %50 = load double* %ai, align 8
  %51 = load double* %br, align 8
  %mul48 = fmul double %50, %51
  store double %mul48, double* %t, align 8
  %52 = load double* %t, align 8
  %53 = load double* %ci, align 8
  %add49 = fadd double %53, %52
  store double %add49, double* %ci, align 8
  %54 = load i32* %i, align 4
  %idxprom50 = sext i32 %54 to i64
  %55 = load %struct.su3_matrix** %a.addr, align 8
  %e51 = getelementptr inbounds %struct.su3_matrix* %55, i32 0, i32 0
  %arrayidx52 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e51, i32 0, i64 %idxprom50
  %arrayidx53 = getelementptr inbounds [3 x %struct.complex]* %arrayidx52, i32 0, i64 2
  %real54 = getelementptr inbounds %struct.complex* %arrayidx53, i32 0, i32 0
  %56 = load double* %real54, align 8
  store double %56, double* %ar, align 8
  %57 = load i32* %i, align 4
  %idxprom55 = sext i32 %57 to i64
  %58 = load %struct.su3_matrix** %a.addr, align 8
  %e56 = getelementptr inbounds %struct.su3_matrix* %58, i32 0, i32 0
  %arrayidx57 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e56, i32 0, i64 %idxprom55
  %arrayidx58 = getelementptr inbounds [3 x %struct.complex]* %arrayidx57, i32 0, i64 2
  %imag59 = getelementptr inbounds %struct.complex* %arrayidx58, i32 0, i32 1
  %59 = load double* %imag59, align 8
  store double %59, double* %ai, align 8
  %60 = load i32* %j, align 4
  %idxprom60 = sext i32 %60 to i64
  %61 = load %struct.su3_matrix** %b.addr, align 8
  %e61 = getelementptr inbounds %struct.su3_matrix* %61, i32 0, i32 0
  %arrayidx62 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e61, i32 0, i64 2
  %arrayidx63 = getelementptr inbounds [3 x %struct.complex]* %arrayidx62, i32 0, i64 %idxprom60
  %real64 = getelementptr inbounds %struct.complex* %arrayidx63, i32 0, i32 0
  %62 = load double* %real64, align 8
  store double %62, double* %br, align 8
  %63 = load i32* %j, align 4
  %idxprom65 = sext i32 %63 to i64
  %64 = load %struct.su3_matrix** %b.addr, align 8
  %e66 = getelementptr inbounds %struct.su3_matrix* %64, i32 0, i32 0
  %arrayidx67 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e66, i32 0, i64 2
  %arrayidx68 = getelementptr inbounds [3 x %struct.complex]* %arrayidx67, i32 0, i64 %idxprom65
  %imag69 = getelementptr inbounds %struct.complex* %arrayidx68, i32 0, i32 1
  %65 = load double* %imag69, align 8
  store double %65, double* %bi, align 8
  %66 = load double* %ar, align 8
  %67 = load double* %br, align 8
  %mul70 = fmul double %66, %67
  store double %mul70, double* %t, align 8
  %68 = load double* %t, align 8
  %69 = load double* %cr, align 8
  %add71 = fadd double %69, %68
  store double %add71, double* %cr, align 8
  %70 = load double* %ai, align 8
  %71 = load double* %bi, align 8
  %mul72 = fmul double %70, %71
  store double %mul72, double* %t, align 8
  %72 = load double* %t, align 8
  %73 = load double* %cr, align 8
  %sub73 = fsub double %73, %72
  store double %sub73, double* %cr, align 8
  %74 = load double* %ar, align 8
  %75 = load double* %bi, align 8
  %mul74 = fmul double %74, %75
  store double %mul74, double* %t, align 8
  %76 = load double* %t, align 8
  %77 = load double* %ci, align 8
  %add75 = fadd double %77, %76
  store double %add75, double* %ci, align 8
  %78 = load double* %ai, align 8
  %79 = load double* %br, align 8
  %mul76 = fmul double %78, %79
  store double %mul76, double* %t, align 8
  %80 = load double* %t, align 8
  %81 = load double* %ci, align 8
  %add77 = fadd double %81, %80
  store double %add77, double* %ci, align 8
  %82 = load double* %cr, align 8
  %83 = load i32* %j, align 4
  %idxprom78 = sext i32 %83 to i64
  %84 = load i32* %i, align 4
  %idxprom79 = sext i32 %84 to i64
  %85 = load %struct.su3_matrix** %c.addr, align 8
  %e80 = getelementptr inbounds %struct.su3_matrix* %85, i32 0, i32 0
  %arrayidx81 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e80, i32 0, i64 %idxprom79
  %arrayidx82 = getelementptr inbounds [3 x %struct.complex]* %arrayidx81, i32 0, i64 %idxprom78
  %real83 = getelementptr inbounds %struct.complex* %arrayidx82, i32 0, i32 0
  store double %82, double* %real83, align 8
  %86 = load double* %ci, align 8
  %87 = load i32* %j, align 4
  %idxprom84 = sext i32 %87 to i64
  %88 = load i32* %i, align 4
  %idxprom85 = sext i32 %88 to i64
  %89 = load %struct.su3_matrix** %c.addr, align 8
  %e86 = getelementptr inbounds %struct.su3_matrix* %89, i32 0, i32 0
  %arrayidx87 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e86, i32 0, i64 %idxprom85
  %arrayidx88 = getelementptr inbounds [3 x %struct.complex]* %arrayidx87, i32 0, i64 %idxprom84
  %imag89 = getelementptr inbounds %struct.complex* %arrayidx88, i32 0, i32 1
  store double %86, double* %imag89, align 8
  br label %for.inc

for.inc:                                          ; preds = %for.body3
  %90 = load i32* %j, align 4
  %inc = add nsw i32 %90, 1
  store i32 %inc, i32* %j, align 4
  br label %for.cond1

for.end:                                          ; preds = %for.cond1
  br label %for.inc90

for.inc90:                                        ; preds = %for.end
  %91 = load i32* %i, align 4
  %inc91 = add nsw i32 %91, 1
  store i32 %inc91, i32* %i, align 4
  br label %for.cond

for.end92:                                        ; preds = %for.cond
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @mult_su3_mat_vec(%struct.su3_matrix* %a, %struct.su3_vector* %b, %struct.su3_vector* %c) #0 {
entry:
  %a.addr = alloca %struct.su3_matrix*, align 8
  %b.addr = alloca %struct.su3_vector*, align 8
  %c.addr = alloca %struct.su3_vector*, align 8
  %i = alloca i32, align 4
  %t = alloca double, align 8
  %ar = alloca double, align 8
  %ai = alloca double, align 8
  %br = alloca double, align 8
  %bi = alloca double, align 8
  %cr = alloca double, align 8
  %ci = alloca double, align 8
  store %struct.su3_matrix* %a, %struct.su3_matrix** %a.addr, align 8
  store %struct.su3_vector* %b, %struct.su3_vector** %b.addr, align 8
  store %struct.su3_vector* %c, %struct.su3_vector** %c.addr, align 8
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32* %i, align 4
  %cmp = icmp slt i32 %0, 3
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %1 = load i32* %i, align 4
  %idxprom = sext i32 %1 to i64
  %2 = load %struct.su3_matrix** %a.addr, align 8
  %e = getelementptr inbounds %struct.su3_matrix* %2, i32 0, i32 0
  %arrayidx = getelementptr inbounds [3 x [3 x %struct.complex]]* %e, i32 0, i64 %idxprom
  %arrayidx1 = getelementptr inbounds [3 x %struct.complex]* %arrayidx, i32 0, i64 0
  %real = getelementptr inbounds %struct.complex* %arrayidx1, i32 0, i32 0
  %3 = load double* %real, align 8
  store double %3, double* %ar, align 8
  %4 = load i32* %i, align 4
  %idxprom2 = sext i32 %4 to i64
  %5 = load %struct.su3_matrix** %a.addr, align 8
  %e3 = getelementptr inbounds %struct.su3_matrix* %5, i32 0, i32 0
  %arrayidx4 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e3, i32 0, i64 %idxprom2
  %arrayidx5 = getelementptr inbounds [3 x %struct.complex]* %arrayidx4, i32 0, i64 0
  %imag = getelementptr inbounds %struct.complex* %arrayidx5, i32 0, i32 1
  %6 = load double* %imag, align 8
  store double %6, double* %ai, align 8
  %7 = load %struct.su3_vector** %b.addr, align 8
  %c6 = getelementptr inbounds %struct.su3_vector* %7, i32 0, i32 0
  %arrayidx7 = getelementptr inbounds [3 x %struct.complex]* %c6, i32 0, i64 0
  %real8 = getelementptr inbounds %struct.complex* %arrayidx7, i32 0, i32 0
  %8 = load double* %real8, align 8
  store double %8, double* %br, align 8
  %9 = load %struct.su3_vector** %b.addr, align 8
  %c9 = getelementptr inbounds %struct.su3_vector* %9, i32 0, i32 0
  %arrayidx10 = getelementptr inbounds [3 x %struct.complex]* %c9, i32 0, i64 0
  %imag11 = getelementptr inbounds %struct.complex* %arrayidx10, i32 0, i32 1
  %10 = load double* %imag11, align 8
  store double %10, double* %bi, align 8
  %11 = load double* %ar, align 8
  %12 = load double* %br, align 8
  %mul = fmul double %11, %12
  store double %mul, double* %cr, align 8
  %13 = load double* %ai, align 8
  %14 = load double* %bi, align 8
  %mul12 = fmul double %13, %14
  store double %mul12, double* %t, align 8
  %15 = load double* %t, align 8
  %16 = load double* %cr, align 8
  %sub = fsub double %16, %15
  store double %sub, double* %cr, align 8
  %17 = load double* %ar, align 8
  %18 = load double* %bi, align 8
  %mul13 = fmul double %17, %18
  store double %mul13, double* %ci, align 8
  %19 = load double* %ai, align 8
  %20 = load double* %br, align 8
  %mul14 = fmul double %19, %20
  store double %mul14, double* %t, align 8
  %21 = load double* %t, align 8
  %22 = load double* %ci, align 8
  %add = fadd double %22, %21
  store double %add, double* %ci, align 8
  %23 = load i32* %i, align 4
  %idxprom15 = sext i32 %23 to i64
  %24 = load %struct.su3_matrix** %a.addr, align 8
  %e16 = getelementptr inbounds %struct.su3_matrix* %24, i32 0, i32 0
  %arrayidx17 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e16, i32 0, i64 %idxprom15
  %arrayidx18 = getelementptr inbounds [3 x %struct.complex]* %arrayidx17, i32 0, i64 1
  %real19 = getelementptr inbounds %struct.complex* %arrayidx18, i32 0, i32 0
  %25 = load double* %real19, align 8
  store double %25, double* %ar, align 8
  %26 = load i32* %i, align 4
  %idxprom20 = sext i32 %26 to i64
  %27 = load %struct.su3_matrix** %a.addr, align 8
  %e21 = getelementptr inbounds %struct.su3_matrix* %27, i32 0, i32 0
  %arrayidx22 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e21, i32 0, i64 %idxprom20
  %arrayidx23 = getelementptr inbounds [3 x %struct.complex]* %arrayidx22, i32 0, i64 1
  %imag24 = getelementptr inbounds %struct.complex* %arrayidx23, i32 0, i32 1
  %28 = load double* %imag24, align 8
  store double %28, double* %ai, align 8
  %29 = load %struct.su3_vector** %b.addr, align 8
  %c25 = getelementptr inbounds %struct.su3_vector* %29, i32 0, i32 0
  %arrayidx26 = getelementptr inbounds [3 x %struct.complex]* %c25, i32 0, i64 1
  %real27 = getelementptr inbounds %struct.complex* %arrayidx26, i32 0, i32 0
  %30 = load double* %real27, align 8
  store double %30, double* %br, align 8
  %31 = load %struct.su3_vector** %b.addr, align 8
  %c28 = getelementptr inbounds %struct.su3_vector* %31, i32 0, i32 0
  %arrayidx29 = getelementptr inbounds [3 x %struct.complex]* %c28, i32 0, i64 1
  %imag30 = getelementptr inbounds %struct.complex* %arrayidx29, i32 0, i32 1
  %32 = load double* %imag30, align 8
  store double %32, double* %bi, align 8
  %33 = load double* %ar, align 8
  %34 = load double* %br, align 8
  %mul31 = fmul double %33, %34
  store double %mul31, double* %t, align 8
  %35 = load double* %t, align 8
  %36 = load double* %cr, align 8
  %add32 = fadd double %36, %35
  store double %add32, double* %cr, align 8
  %37 = load double* %ai, align 8
  %38 = load double* %bi, align 8
  %mul33 = fmul double %37, %38
  store double %mul33, double* %t, align 8
  %39 = load double* %t, align 8
  %40 = load double* %cr, align 8
  %sub34 = fsub double %40, %39
  store double %sub34, double* %cr, align 8
  %41 = load double* %ar, align 8
  %42 = load double* %bi, align 8
  %mul35 = fmul double %41, %42
  store double %mul35, double* %t, align 8
  %43 = load double* %t, align 8
  %44 = load double* %ci, align 8
  %add36 = fadd double %44, %43
  store double %add36, double* %ci, align 8
  %45 = load double* %ai, align 8
  %46 = load double* %br, align 8
  %mul37 = fmul double %45, %46
  store double %mul37, double* %t, align 8
  %47 = load double* %t, align 8
  %48 = load double* %ci, align 8
  %add38 = fadd double %48, %47
  store double %add38, double* %ci, align 8
  %49 = load i32* %i, align 4
  %idxprom39 = sext i32 %49 to i64
  %50 = load %struct.su3_matrix** %a.addr, align 8
  %e40 = getelementptr inbounds %struct.su3_matrix* %50, i32 0, i32 0
  %arrayidx41 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e40, i32 0, i64 %idxprom39
  %arrayidx42 = getelementptr inbounds [3 x %struct.complex]* %arrayidx41, i32 0, i64 2
  %real43 = getelementptr inbounds %struct.complex* %arrayidx42, i32 0, i32 0
  %51 = load double* %real43, align 8
  store double %51, double* %ar, align 8
  %52 = load i32* %i, align 4
  %idxprom44 = sext i32 %52 to i64
  %53 = load %struct.su3_matrix** %a.addr, align 8
  %e45 = getelementptr inbounds %struct.su3_matrix* %53, i32 0, i32 0
  %arrayidx46 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e45, i32 0, i64 %idxprom44
  %arrayidx47 = getelementptr inbounds [3 x %struct.complex]* %arrayidx46, i32 0, i64 2
  %imag48 = getelementptr inbounds %struct.complex* %arrayidx47, i32 0, i32 1
  %54 = load double* %imag48, align 8
  store double %54, double* %ai, align 8
  %55 = load %struct.su3_vector** %b.addr, align 8
  %c49 = getelementptr inbounds %struct.su3_vector* %55, i32 0, i32 0
  %arrayidx50 = getelementptr inbounds [3 x %struct.complex]* %c49, i32 0, i64 2
  %real51 = getelementptr inbounds %struct.complex* %arrayidx50, i32 0, i32 0
  %56 = load double* %real51, align 8
  store double %56, double* %br, align 8
  %57 = load %struct.su3_vector** %b.addr, align 8
  %c52 = getelementptr inbounds %struct.su3_vector* %57, i32 0, i32 0
  %arrayidx53 = getelementptr inbounds [3 x %struct.complex]* %c52, i32 0, i64 2
  %imag54 = getelementptr inbounds %struct.complex* %arrayidx53, i32 0, i32 1
  %58 = load double* %imag54, align 8
  store double %58, double* %bi, align 8
  %59 = load double* %ar, align 8
  %60 = load double* %br, align 8
  %mul55 = fmul double %59, %60
  store double %mul55, double* %t, align 8
  %61 = load double* %t, align 8
  %62 = load double* %cr, align 8
  %add56 = fadd double %62, %61
  store double %add56, double* %cr, align 8
  %63 = load double* %ai, align 8
  %64 = load double* %bi, align 8
  %mul57 = fmul double %63, %64
  store double %mul57, double* %t, align 8
  %65 = load double* %t, align 8
  %66 = load double* %cr, align 8
  %sub58 = fsub double %66, %65
  store double %sub58, double* %cr, align 8
  %67 = load double* %ar, align 8
  %68 = load double* %bi, align 8
  %mul59 = fmul double %67, %68
  store double %mul59, double* %t, align 8
  %69 = load double* %t, align 8
  %70 = load double* %ci, align 8
  %add60 = fadd double %70, %69
  store double %add60, double* %ci, align 8
  %71 = load double* %ai, align 8
  %72 = load double* %br, align 8
  %mul61 = fmul double %71, %72
  store double %mul61, double* %t, align 8
  %73 = load double* %t, align 8
  %74 = load double* %ci, align 8
  %add62 = fadd double %74, %73
  store double %add62, double* %ci, align 8
  %75 = load double* %cr, align 8
  %76 = load i32* %i, align 4
  %idxprom63 = sext i32 %76 to i64
  %77 = load %struct.su3_vector** %c.addr, align 8
  %c64 = getelementptr inbounds %struct.su3_vector* %77, i32 0, i32 0
  %arrayidx65 = getelementptr inbounds [3 x %struct.complex]* %c64, i32 0, i64 %idxprom63
  %real66 = getelementptr inbounds %struct.complex* %arrayidx65, i32 0, i32 0
  store double %75, double* %real66, align 8
  %78 = load double* %ci, align 8
  %79 = load i32* %i, align 4
  %idxprom67 = sext i32 %79 to i64
  %80 = load %struct.su3_vector** %c.addr, align 8
  %c68 = getelementptr inbounds %struct.su3_vector* %80, i32 0, i32 0
  %arrayidx69 = getelementptr inbounds [3 x %struct.complex]* %c68, i32 0, i64 %idxprom67
  %imag70 = getelementptr inbounds %struct.complex* %arrayidx69, i32 0, i32 1
  store double %78, double* %imag70, align 8
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %81 = load i32* %i, align 4
  %inc = add nsw i32 %81, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @make_anti_hermitian(%struct.su3_matrix* %m3, %struct.anti_hermitmat* %ah3) #0 {
entry:
  %m3.addr = alloca %struct.su3_matrix*, align 8
  %ah3.addr = alloca %struct.anti_hermitmat*, align 8
  %temp = alloca double, align 8
  %temp2 = alloca double, align 8
  store %struct.su3_matrix* %m3, %struct.su3_matrix** %m3.addr, align 8
  store %struct.anti_hermitmat* %ah3, %struct.anti_hermitmat** %ah3.addr, align 8
  %0 = load %struct.su3_matrix** %m3.addr, align 8
  %e = getelementptr inbounds %struct.su3_matrix* %0, i32 0, i32 0
  %arrayidx = getelementptr inbounds [3 x [3 x %struct.complex]]* %e, i32 0, i64 0
  %arrayidx1 = getelementptr inbounds [3 x %struct.complex]* %arrayidx, i32 0, i64 0
  %imag = getelementptr inbounds %struct.complex* %arrayidx1, i32 0, i32 1
  %1 = load double* %imag, align 8
  %2 = load %struct.su3_matrix** %m3.addr, align 8
  %e2 = getelementptr inbounds %struct.su3_matrix* %2, i32 0, i32 0
  %arrayidx3 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e2, i32 0, i64 1
  %arrayidx4 = getelementptr inbounds [3 x %struct.complex]* %arrayidx3, i32 0, i64 1
  %imag5 = getelementptr inbounds %struct.complex* %arrayidx4, i32 0, i32 1
  %3 = load double* %imag5, align 8
  %add = fadd double %1, %3
  store double %add, double* %temp, align 8
  %4 = load double* %temp, align 8
  %5 = load %struct.su3_matrix** %m3.addr, align 8
  %e6 = getelementptr inbounds %struct.su3_matrix* %5, i32 0, i32 0
  %arrayidx7 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e6, i32 0, i64 2
  %arrayidx8 = getelementptr inbounds [3 x %struct.complex]* %arrayidx7, i32 0, i64 2
  %imag9 = getelementptr inbounds %struct.complex* %arrayidx8, i32 0, i32 1
  %6 = load double* %imag9, align 8
  %add10 = fadd double %4, %6
  store double %add10, double* %temp2, align 8
  %7 = load double* %temp2, align 8
  %mul = fmul double %7, 0x3FD5555551C112DA
  store double %mul, double* %temp, align 8
  %8 = load %struct.su3_matrix** %m3.addr, align 8
  %e11 = getelementptr inbounds %struct.su3_matrix* %8, i32 0, i32 0
  %arrayidx12 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e11, i32 0, i64 0
  %arrayidx13 = getelementptr inbounds [3 x %struct.complex]* %arrayidx12, i32 0, i64 0
  %imag14 = getelementptr inbounds %struct.complex* %arrayidx13, i32 0, i32 1
  %9 = load double* %imag14, align 8
  %10 = load double* %temp, align 8
  %sub = fsub double %9, %10
  %11 = load %struct.anti_hermitmat** %ah3.addr, align 8
  %m00im = getelementptr inbounds %struct.anti_hermitmat* %11, i32 0, i32 3
  store double %sub, double* %m00im, align 8
  %12 = load %struct.su3_matrix** %m3.addr, align 8
  %e15 = getelementptr inbounds %struct.su3_matrix* %12, i32 0, i32 0
  %arrayidx16 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e15, i32 0, i64 1
  %arrayidx17 = getelementptr inbounds [3 x %struct.complex]* %arrayidx16, i32 0, i64 1
  %imag18 = getelementptr inbounds %struct.complex* %arrayidx17, i32 0, i32 1
  %13 = load double* %imag18, align 8
  %14 = load double* %temp, align 8
  %sub19 = fsub double %13, %14
  %15 = load %struct.anti_hermitmat** %ah3.addr, align 8
  %m11im = getelementptr inbounds %struct.anti_hermitmat* %15, i32 0, i32 4
  store double %sub19, double* %m11im, align 8
  %16 = load %struct.su3_matrix** %m3.addr, align 8
  %e20 = getelementptr inbounds %struct.su3_matrix* %16, i32 0, i32 0
  %arrayidx21 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e20, i32 0, i64 2
  %arrayidx22 = getelementptr inbounds [3 x %struct.complex]* %arrayidx21, i32 0, i64 2
  %imag23 = getelementptr inbounds %struct.complex* %arrayidx22, i32 0, i32 1
  %17 = load double* %imag23, align 8
  %18 = load double* %temp, align 8
  %sub24 = fsub double %17, %18
  %19 = load %struct.anti_hermitmat** %ah3.addr, align 8
  %m22im = getelementptr inbounds %struct.anti_hermitmat* %19, i32 0, i32 5
  store double %sub24, double* %m22im, align 8
  %20 = load %struct.su3_matrix** %m3.addr, align 8
  %e25 = getelementptr inbounds %struct.su3_matrix* %20, i32 0, i32 0
  %arrayidx26 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e25, i32 0, i64 0
  %arrayidx27 = getelementptr inbounds [3 x %struct.complex]* %arrayidx26, i32 0, i64 1
  %real = getelementptr inbounds %struct.complex* %arrayidx27, i32 0, i32 0
  %21 = load double* %real, align 8
  %22 = load %struct.su3_matrix** %m3.addr, align 8
  %e28 = getelementptr inbounds %struct.su3_matrix* %22, i32 0, i32 0
  %arrayidx29 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e28, i32 0, i64 1
  %arrayidx30 = getelementptr inbounds [3 x %struct.complex]* %arrayidx29, i32 0, i64 0
  %real31 = getelementptr inbounds %struct.complex* %arrayidx30, i32 0, i32 0
  %23 = load double* %real31, align 8
  %sub32 = fsub double %21, %23
  store double %sub32, double* %temp, align 8
  %24 = load double* %temp, align 8
  %mul33 = fmul double %24, 5.000000e-01
  %25 = load %struct.anti_hermitmat** %ah3.addr, align 8
  %m01 = getelementptr inbounds %struct.anti_hermitmat* %25, i32 0, i32 0
  %real34 = getelementptr inbounds %struct.complex* %m01, i32 0, i32 0
  store double %mul33, double* %real34, align 8
  %26 = load %struct.su3_matrix** %m3.addr, align 8
  %e35 = getelementptr inbounds %struct.su3_matrix* %26, i32 0, i32 0
  %arrayidx36 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e35, i32 0, i64 0
  %arrayidx37 = getelementptr inbounds [3 x %struct.complex]* %arrayidx36, i32 0, i64 2
  %real38 = getelementptr inbounds %struct.complex* %arrayidx37, i32 0, i32 0
  %27 = load double* %real38, align 8
  %28 = load %struct.su3_matrix** %m3.addr, align 8
  %e39 = getelementptr inbounds %struct.su3_matrix* %28, i32 0, i32 0
  %arrayidx40 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e39, i32 0, i64 2
  %arrayidx41 = getelementptr inbounds [3 x %struct.complex]* %arrayidx40, i32 0, i64 0
  %real42 = getelementptr inbounds %struct.complex* %arrayidx41, i32 0, i32 0
  %29 = load double* %real42, align 8
  %sub43 = fsub double %27, %29
  store double %sub43, double* %temp, align 8
  %30 = load double* %temp, align 8
  %mul44 = fmul double %30, 5.000000e-01
  %31 = load %struct.anti_hermitmat** %ah3.addr, align 8
  %m02 = getelementptr inbounds %struct.anti_hermitmat* %31, i32 0, i32 1
  %real45 = getelementptr inbounds %struct.complex* %m02, i32 0, i32 0
  store double %mul44, double* %real45, align 8
  %32 = load %struct.su3_matrix** %m3.addr, align 8
  %e46 = getelementptr inbounds %struct.su3_matrix* %32, i32 0, i32 0
  %arrayidx47 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e46, i32 0, i64 1
  %arrayidx48 = getelementptr inbounds [3 x %struct.complex]* %arrayidx47, i32 0, i64 2
  %real49 = getelementptr inbounds %struct.complex* %arrayidx48, i32 0, i32 0
  %33 = load double* %real49, align 8
  %34 = load %struct.su3_matrix** %m3.addr, align 8
  %e50 = getelementptr inbounds %struct.su3_matrix* %34, i32 0, i32 0
  %arrayidx51 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e50, i32 0, i64 2
  %arrayidx52 = getelementptr inbounds [3 x %struct.complex]* %arrayidx51, i32 0, i64 1
  %real53 = getelementptr inbounds %struct.complex* %arrayidx52, i32 0, i32 0
  %35 = load double* %real53, align 8
  %sub54 = fsub double %33, %35
  store double %sub54, double* %temp, align 8
  %36 = load double* %temp, align 8
  %mul55 = fmul double %36, 5.000000e-01
  %37 = load %struct.anti_hermitmat** %ah3.addr, align 8
  %m12 = getelementptr inbounds %struct.anti_hermitmat* %37, i32 0, i32 2
  %real56 = getelementptr inbounds %struct.complex* %m12, i32 0, i32 0
  store double %mul55, double* %real56, align 8
  %38 = load %struct.su3_matrix** %m3.addr, align 8
  %e57 = getelementptr inbounds %struct.su3_matrix* %38, i32 0, i32 0
  %arrayidx58 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e57, i32 0, i64 0
  %arrayidx59 = getelementptr inbounds [3 x %struct.complex]* %arrayidx58, i32 0, i64 1
  %imag60 = getelementptr inbounds %struct.complex* %arrayidx59, i32 0, i32 1
  %39 = load double* %imag60, align 8
  %40 = load %struct.su3_matrix** %m3.addr, align 8
  %e61 = getelementptr inbounds %struct.su3_matrix* %40, i32 0, i32 0
  %arrayidx62 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e61, i32 0, i64 1
  %arrayidx63 = getelementptr inbounds [3 x %struct.complex]* %arrayidx62, i32 0, i64 0
  %imag64 = getelementptr inbounds %struct.complex* %arrayidx63, i32 0, i32 1
  %41 = load double* %imag64, align 8
  %add65 = fadd double %39, %41
  store double %add65, double* %temp, align 8
  %42 = load double* %temp, align 8
  %mul66 = fmul double %42, 5.000000e-01
  %43 = load %struct.anti_hermitmat** %ah3.addr, align 8
  %m0167 = getelementptr inbounds %struct.anti_hermitmat* %43, i32 0, i32 0
  %imag68 = getelementptr inbounds %struct.complex* %m0167, i32 0, i32 1
  store double %mul66, double* %imag68, align 8
  %44 = load %struct.su3_matrix** %m3.addr, align 8
  %e69 = getelementptr inbounds %struct.su3_matrix* %44, i32 0, i32 0
  %arrayidx70 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e69, i32 0, i64 0
  %arrayidx71 = getelementptr inbounds [3 x %struct.complex]* %arrayidx70, i32 0, i64 2
  %imag72 = getelementptr inbounds %struct.complex* %arrayidx71, i32 0, i32 1
  %45 = load double* %imag72, align 8
  %46 = load %struct.su3_matrix** %m3.addr, align 8
  %e73 = getelementptr inbounds %struct.su3_matrix* %46, i32 0, i32 0
  %arrayidx74 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e73, i32 0, i64 2
  %arrayidx75 = getelementptr inbounds [3 x %struct.complex]* %arrayidx74, i32 0, i64 0
  %imag76 = getelementptr inbounds %struct.complex* %arrayidx75, i32 0, i32 1
  %47 = load double* %imag76, align 8
  %add77 = fadd double %45, %47
  store double %add77, double* %temp, align 8
  %48 = load double* %temp, align 8
  %mul78 = fmul double %48, 5.000000e-01
  %49 = load %struct.anti_hermitmat** %ah3.addr, align 8
  %m0279 = getelementptr inbounds %struct.anti_hermitmat* %49, i32 0, i32 1
  %imag80 = getelementptr inbounds %struct.complex* %m0279, i32 0, i32 1
  store double %mul78, double* %imag80, align 8
  %50 = load %struct.su3_matrix** %m3.addr, align 8
  %e81 = getelementptr inbounds %struct.su3_matrix* %50, i32 0, i32 0
  %arrayidx82 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e81, i32 0, i64 1
  %arrayidx83 = getelementptr inbounds [3 x %struct.complex]* %arrayidx82, i32 0, i64 2
  %imag84 = getelementptr inbounds %struct.complex* %arrayidx83, i32 0, i32 1
  %51 = load double* %imag84, align 8
  %52 = load %struct.su3_matrix** %m3.addr, align 8
  %e85 = getelementptr inbounds %struct.su3_matrix* %52, i32 0, i32 0
  %arrayidx86 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e85, i32 0, i64 2
  %arrayidx87 = getelementptr inbounds [3 x %struct.complex]* %arrayidx86, i32 0, i64 1
  %imag88 = getelementptr inbounds %struct.complex* %arrayidx87, i32 0, i32 1
  %53 = load double* %imag88, align 8
  %add89 = fadd double %51, %53
  store double %add89, double* %temp, align 8
  %54 = load double* %temp, align 8
  %mul90 = fmul double %54, 5.000000e-01
  %55 = load %struct.anti_hermitmat** %ah3.addr, align 8
  %m1291 = getelementptr inbounds %struct.anti_hermitmat* %55, i32 0, i32 2
  %imag92 = getelementptr inbounds %struct.complex* %m1291, i32 0, i32 1
  store double %mul90, double* %imag92, align 8
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @random_anti_hermitian(%struct.anti_hermitmat* %mat_antihermit, %struct.double_prn* %prn_pt) #0 {
entry:
  %mat_antihermit.addr = alloca %struct.anti_hermitmat*, align 8
  %prn_pt.addr = alloca %struct.double_prn*, align 8
  %r3 = alloca double, align 8
  %r8 = alloca double, align 8
  %sqrt_third = alloca double, align 8
  store %struct.anti_hermitmat* %mat_antihermit, %struct.anti_hermitmat** %mat_antihermit.addr, align 8
  store %struct.double_prn* %prn_pt, %struct.double_prn** %prn_pt.addr, align 8
  %call = call double @sqrt(double 0x3FD5555555555555) #2
  store double %call, double* %sqrt_third, align 8
  %0 = load %struct.double_prn** %prn_pt.addr, align 8
  %call1 = call double @gaussian_rand_no(%struct.double_prn* %0)
  store double %call1, double* %r3, align 8
  %1 = load %struct.double_prn** %prn_pt.addr, align 8
  %call2 = call double @gaussian_rand_no(%struct.double_prn* %1)
  store double %call2, double* %r8, align 8
  %2 = load double* %r3, align 8
  %3 = load double* %sqrt_third, align 8
  %4 = load double* %r8, align 8
  %mul = fmul double %3, %4
  %add = fadd double %2, %mul
  %5 = load %struct.anti_hermitmat** %mat_antihermit.addr, align 8
  %m00im = getelementptr inbounds %struct.anti_hermitmat* %5, i32 0, i32 3
  store double %add, double* %m00im, align 8
  %6 = load double* %r3, align 8
  %sub = fsub double -0.000000e+00, %6
  %7 = load double* %sqrt_third, align 8
  %8 = load double* %r8, align 8
  %mul3 = fmul double %7, %8
  %add4 = fadd double %sub, %mul3
  %9 = load %struct.anti_hermitmat** %mat_antihermit.addr, align 8
  %m11im = getelementptr inbounds %struct.anti_hermitmat* %9, i32 0, i32 4
  store double %add4, double* %m11im, align 8
  %10 = load double* %sqrt_third, align 8
  %mul5 = fmul double -2.000000e+00, %10
  %11 = load double* %r8, align 8
  %mul6 = fmul double %mul5, %11
  %12 = load %struct.anti_hermitmat** %mat_antihermit.addr, align 8
  %m22im = getelementptr inbounds %struct.anti_hermitmat* %12, i32 0, i32 5
  store double %mul6, double* %m22im, align 8
  %13 = load %struct.double_prn** %prn_pt.addr, align 8
  %call7 = call double @gaussian_rand_no(%struct.double_prn* %13)
  %14 = load %struct.anti_hermitmat** %mat_antihermit.addr, align 8
  %m01 = getelementptr inbounds %struct.anti_hermitmat* %14, i32 0, i32 0
  %real = getelementptr inbounds %struct.complex* %m01, i32 0, i32 0
  store double %call7, double* %real, align 8
  %15 = load %struct.double_prn** %prn_pt.addr, align 8
  %call8 = call double @gaussian_rand_no(%struct.double_prn* %15)
  %16 = load %struct.anti_hermitmat** %mat_antihermit.addr, align 8
  %m02 = getelementptr inbounds %struct.anti_hermitmat* %16, i32 0, i32 1
  %real9 = getelementptr inbounds %struct.complex* %m02, i32 0, i32 0
  store double %call8, double* %real9, align 8
  %17 = load %struct.double_prn** %prn_pt.addr, align 8
  %call10 = call double @gaussian_rand_no(%struct.double_prn* %17)
  %18 = load %struct.anti_hermitmat** %mat_antihermit.addr, align 8
  %m12 = getelementptr inbounds %struct.anti_hermitmat* %18, i32 0, i32 2
  %real11 = getelementptr inbounds %struct.complex* %m12, i32 0, i32 0
  store double %call10, double* %real11, align 8
  %19 = load %struct.double_prn** %prn_pt.addr, align 8
  %call12 = call double @gaussian_rand_no(%struct.double_prn* %19)
  %20 = load %struct.anti_hermitmat** %mat_antihermit.addr, align 8
  %m0113 = getelementptr inbounds %struct.anti_hermitmat* %20, i32 0, i32 0
  %imag = getelementptr inbounds %struct.complex* %m0113, i32 0, i32 1
  store double %call12, double* %imag, align 8
  %21 = load %struct.double_prn** %prn_pt.addr, align 8
  %call14 = call double @gaussian_rand_no(%struct.double_prn* %21)
  %22 = load %struct.anti_hermitmat** %mat_antihermit.addr, align 8
  %m0215 = getelementptr inbounds %struct.anti_hermitmat* %22, i32 0, i32 1
  %imag16 = getelementptr inbounds %struct.complex* %m0215, i32 0, i32 1
  store double %call14, double* %imag16, align 8
  %23 = load %struct.double_prn** %prn_pt.addr, align 8
  %call17 = call double @gaussian_rand_no(%struct.double_prn* %23)
  %24 = load %struct.anti_hermitmat** %mat_antihermit.addr, align 8
  %m1218 = getelementptr inbounds %struct.anti_hermitmat* %24, i32 0, i32 2
  %imag19 = getelementptr inbounds %struct.complex* %m1218, i32 0, i32 1
  store double %call17, double* %imag19, align 8
  ret void
}

; Function Attrs: nounwind uwtable
define internal double @realtrace_su3(%struct.su3_matrix* %a, %struct.su3_matrix* %b) #0 {
entry:
  %a.addr = alloca %struct.su3_matrix*, align 8
  %b.addr = alloca %struct.su3_matrix*, align 8
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %sum = alloca double, align 8
  store %struct.su3_matrix* %a, %struct.su3_matrix** %a.addr, align 8
  store %struct.su3_matrix* %b, %struct.su3_matrix** %b.addr, align 8
  store double 0.000000e+00, double* %sum, align 8
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc25, %entry
  %0 = load i32* %i, align 4
  %cmp = icmp slt i32 %0, 3
  br i1 %cmp, label %for.body, label %for.end27

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %j, align 4
  br label %for.cond1

for.cond1:                                        ; preds = %for.inc, %for.body
  %1 = load i32* %j, align 4
  %cmp2 = icmp slt i32 %1, 3
  br i1 %cmp2, label %for.body3, label %for.end

for.body3:                                        ; preds = %for.cond1
  %2 = load i32* %j, align 4
  %idxprom = sext i32 %2 to i64
  %3 = load i32* %i, align 4
  %idxprom4 = sext i32 %3 to i64
  %4 = load %struct.su3_matrix** %a.addr, align 8
  %e = getelementptr inbounds %struct.su3_matrix* %4, i32 0, i32 0
  %arrayidx = getelementptr inbounds [3 x [3 x %struct.complex]]* %e, i32 0, i64 %idxprom4
  %arrayidx5 = getelementptr inbounds [3 x %struct.complex]* %arrayidx, i32 0, i64 %idxprom
  %real = getelementptr inbounds %struct.complex* %arrayidx5, i32 0, i32 0
  %5 = load double* %real, align 8
  %6 = load i32* %j, align 4
  %idxprom6 = sext i32 %6 to i64
  %7 = load i32* %i, align 4
  %idxprom7 = sext i32 %7 to i64
  %8 = load %struct.su3_matrix** %b.addr, align 8
  %e8 = getelementptr inbounds %struct.su3_matrix* %8, i32 0, i32 0
  %arrayidx9 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e8, i32 0, i64 %idxprom7
  %arrayidx10 = getelementptr inbounds [3 x %struct.complex]* %arrayidx9, i32 0, i64 %idxprom6
  %real11 = getelementptr inbounds %struct.complex* %arrayidx10, i32 0, i32 0
  %9 = load double* %real11, align 8
  %mul = fmul double %5, %9
  %10 = load i32* %j, align 4
  %idxprom12 = sext i32 %10 to i64
  %11 = load i32* %i, align 4
  %idxprom13 = sext i32 %11 to i64
  %12 = load %struct.su3_matrix** %a.addr, align 8
  %e14 = getelementptr inbounds %struct.su3_matrix* %12, i32 0, i32 0
  %arrayidx15 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e14, i32 0, i64 %idxprom13
  %arrayidx16 = getelementptr inbounds [3 x %struct.complex]* %arrayidx15, i32 0, i64 %idxprom12
  %imag = getelementptr inbounds %struct.complex* %arrayidx16, i32 0, i32 1
  %13 = load double* %imag, align 8
  %14 = load i32* %j, align 4
  %idxprom17 = sext i32 %14 to i64
  %15 = load i32* %i, align 4
  %idxprom18 = sext i32 %15 to i64
  %16 = load %struct.su3_matrix** %b.addr, align 8
  %e19 = getelementptr inbounds %struct.su3_matrix* %16, i32 0, i32 0
  %arrayidx20 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e19, i32 0, i64 %idxprom18
  %arrayidx21 = getelementptr inbounds [3 x %struct.complex]* %arrayidx20, i32 0, i64 %idxprom17
  %imag22 = getelementptr inbounds %struct.complex* %arrayidx21, i32 0, i32 1
  %17 = load double* %imag22, align 8
  %mul23 = fmul double %13, %17
  %add = fadd double %mul, %mul23
  %18 = load double* %sum, align 8
  %add24 = fadd double %18, %add
  store double %add24, double* %sum, align 8
  br label %for.inc

for.inc:                                          ; preds = %for.body3
  %19 = load i32* %j, align 4
  %inc = add nsw i32 %19, 1
  store i32 %inc, i32* %j, align 4
  br label %for.cond1

for.end:                                          ; preds = %for.cond1
  br label %for.inc25

for.inc25:                                        ; preds = %for.end
  %20 = load i32* %i, align 4
  %inc26 = add nsw i32 %20, 1
  store i32 %inc26, i32* %i, align 4
  br label %for.cond

for.end27:                                        ; preds = %for.cond
  %21 = load double* %sum, align 8
  ret double %21
}

; Function Attrs: nounwind uwtable
define internal void @scalar_mult_add_su3_matrix(%struct.su3_matrix* %a, %struct.su3_matrix* %b, double %s, %struct.su3_matrix* %c) #0 {
entry:
  %a.addr = alloca %struct.su3_matrix*, align 8
  %b.addr = alloca %struct.su3_matrix*, align 8
  %s.addr = alloca double, align 8
  %c.addr = alloca %struct.su3_matrix*, align 8
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  store %struct.su3_matrix* %a, %struct.su3_matrix** %a.addr, align 8
  store %struct.su3_matrix* %b, %struct.su3_matrix** %b.addr, align 8
  store double %s, double* %s.addr, align 8
  store %struct.su3_matrix* %c, %struct.su3_matrix** %c.addr, align 8
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc37, %entry
  %0 = load i32* %i, align 4
  %cmp = icmp slt i32 %0, 3
  br i1 %cmp, label %for.body, label %for.end39

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %j, align 4
  br label %for.cond1

for.cond1:                                        ; preds = %for.inc, %for.body
  %1 = load i32* %j, align 4
  %cmp2 = icmp slt i32 %1, 3
  br i1 %cmp2, label %for.body3, label %for.end

for.body3:                                        ; preds = %for.cond1
  %2 = load i32* %j, align 4
  %idxprom = sext i32 %2 to i64
  %3 = load i32* %i, align 4
  %idxprom4 = sext i32 %3 to i64
  %4 = load %struct.su3_matrix** %a.addr, align 8
  %e = getelementptr inbounds %struct.su3_matrix* %4, i32 0, i32 0
  %arrayidx = getelementptr inbounds [3 x [3 x %struct.complex]]* %e, i32 0, i64 %idxprom4
  %arrayidx5 = getelementptr inbounds [3 x %struct.complex]* %arrayidx, i32 0, i64 %idxprom
  %real = getelementptr inbounds %struct.complex* %arrayidx5, i32 0, i32 0
  %5 = load double* %real, align 8
  %6 = load double* %s.addr, align 8
  %7 = load i32* %j, align 4
  %idxprom6 = sext i32 %7 to i64
  %8 = load i32* %i, align 4
  %idxprom7 = sext i32 %8 to i64
  %9 = load %struct.su3_matrix** %b.addr, align 8
  %e8 = getelementptr inbounds %struct.su3_matrix* %9, i32 0, i32 0
  %arrayidx9 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e8, i32 0, i64 %idxprom7
  %arrayidx10 = getelementptr inbounds [3 x %struct.complex]* %arrayidx9, i32 0, i64 %idxprom6
  %real11 = getelementptr inbounds %struct.complex* %arrayidx10, i32 0, i32 0
  %10 = load double* %real11, align 8
  %mul = fmul double %6, %10
  %add = fadd double %5, %mul
  %11 = load i32* %j, align 4
  %idxprom12 = sext i32 %11 to i64
  %12 = load i32* %i, align 4
  %idxprom13 = sext i32 %12 to i64
  %13 = load %struct.su3_matrix** %c.addr, align 8
  %e14 = getelementptr inbounds %struct.su3_matrix* %13, i32 0, i32 0
  %arrayidx15 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e14, i32 0, i64 %idxprom13
  %arrayidx16 = getelementptr inbounds [3 x %struct.complex]* %arrayidx15, i32 0, i64 %idxprom12
  %real17 = getelementptr inbounds %struct.complex* %arrayidx16, i32 0, i32 0
  store double %add, double* %real17, align 8
  %14 = load i32* %j, align 4
  %idxprom18 = sext i32 %14 to i64
  %15 = load i32* %i, align 4
  %idxprom19 = sext i32 %15 to i64
  %16 = load %struct.su3_matrix** %a.addr, align 8
  %e20 = getelementptr inbounds %struct.su3_matrix* %16, i32 0, i32 0
  %arrayidx21 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e20, i32 0, i64 %idxprom19
  %arrayidx22 = getelementptr inbounds [3 x %struct.complex]* %arrayidx21, i32 0, i64 %idxprom18
  %imag = getelementptr inbounds %struct.complex* %arrayidx22, i32 0, i32 1
  %17 = load double* %imag, align 8
  %18 = load double* %s.addr, align 8
  %19 = load i32* %j, align 4
  %idxprom23 = sext i32 %19 to i64
  %20 = load i32* %i, align 4
  %idxprom24 = sext i32 %20 to i64
  %21 = load %struct.su3_matrix** %b.addr, align 8
  %e25 = getelementptr inbounds %struct.su3_matrix* %21, i32 0, i32 0
  %arrayidx26 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e25, i32 0, i64 %idxprom24
  %arrayidx27 = getelementptr inbounds [3 x %struct.complex]* %arrayidx26, i32 0, i64 %idxprom23
  %imag28 = getelementptr inbounds %struct.complex* %arrayidx27, i32 0, i32 1
  %22 = load double* %imag28, align 8
  %mul29 = fmul double %18, %22
  %add30 = fadd double %17, %mul29
  %23 = load i32* %j, align 4
  %idxprom31 = sext i32 %23 to i64
  %24 = load i32* %i, align 4
  %idxprom32 = sext i32 %24 to i64
  %25 = load %struct.su3_matrix** %c.addr, align 8
  %e33 = getelementptr inbounds %struct.su3_matrix* %25, i32 0, i32 0
  %arrayidx34 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e33, i32 0, i64 %idxprom32
  %arrayidx35 = getelementptr inbounds [3 x %struct.complex]* %arrayidx34, i32 0, i64 %idxprom31
  %imag36 = getelementptr inbounds %struct.complex* %arrayidx35, i32 0, i32 1
  store double %add30, double* %imag36, align 8
  br label %for.inc

for.inc:                                          ; preds = %for.body3
  %26 = load i32* %j, align 4
  %inc = add nsw i32 %26, 1
  store i32 %inc, i32* %j, align 4
  br label %for.cond1

for.end:                                          ; preds = %for.cond1
  br label %for.inc37

for.inc37:                                        ; preds = %for.end
  %27 = load i32* %i, align 4
  %inc38 = add nsw i32 %27, 1
  store i32 %inc38, i32* %i, align 4
  br label %for.cond

for.end39:                                        ; preds = %for.cond
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @scalar_mult_add_su3_vector(%struct.su3_vector* %a, %struct.su3_vector* %b, double %s, %struct.su3_vector* %c) #0 {
entry:
  %a.addr = alloca %struct.su3_vector*, align 8
  %b.addr = alloca %struct.su3_vector*, align 8
  %s.addr = alloca double, align 8
  %c.addr = alloca %struct.su3_vector*, align 8
  %i = alloca i32, align 4
  store %struct.su3_vector* %a, %struct.su3_vector** %a.addr, align 8
  store %struct.su3_vector* %b, %struct.su3_vector** %b.addr, align 8
  store double %s, double* %s.addr, align 8
  store %struct.su3_vector* %c, %struct.su3_vector** %c.addr, align 8
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32* %i, align 4
  %cmp = icmp slt i32 %0, 3
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %1 = load i32* %i, align 4
  %idxprom = sext i32 %1 to i64
  %2 = load %struct.su3_vector** %a.addr, align 8
  %c1 = getelementptr inbounds %struct.su3_vector* %2, i32 0, i32 0
  %arrayidx = getelementptr inbounds [3 x %struct.complex]* %c1, i32 0, i64 %idxprom
  %real = getelementptr inbounds %struct.complex* %arrayidx, i32 0, i32 0
  %3 = load double* %real, align 8
  %4 = load double* %s.addr, align 8
  %5 = load i32* %i, align 4
  %idxprom2 = sext i32 %5 to i64
  %6 = load %struct.su3_vector** %b.addr, align 8
  %c3 = getelementptr inbounds %struct.su3_vector* %6, i32 0, i32 0
  %arrayidx4 = getelementptr inbounds [3 x %struct.complex]* %c3, i32 0, i64 %idxprom2
  %real5 = getelementptr inbounds %struct.complex* %arrayidx4, i32 0, i32 0
  %7 = load double* %real5, align 8
  %mul = fmul double %4, %7
  %add = fadd double %3, %mul
  %8 = load i32* %i, align 4
  %idxprom6 = sext i32 %8 to i64
  %9 = load %struct.su3_vector** %c.addr, align 8
  %c7 = getelementptr inbounds %struct.su3_vector* %9, i32 0, i32 0
  %arrayidx8 = getelementptr inbounds [3 x %struct.complex]* %c7, i32 0, i64 %idxprom6
  %real9 = getelementptr inbounds %struct.complex* %arrayidx8, i32 0, i32 0
  store double %add, double* %real9, align 8
  %10 = load i32* %i, align 4
  %idxprom10 = sext i32 %10 to i64
  %11 = load %struct.su3_vector** %a.addr, align 8
  %c11 = getelementptr inbounds %struct.su3_vector* %11, i32 0, i32 0
  %arrayidx12 = getelementptr inbounds [3 x %struct.complex]* %c11, i32 0, i64 %idxprom10
  %imag = getelementptr inbounds %struct.complex* %arrayidx12, i32 0, i32 1
  %12 = load double* %imag, align 8
  %13 = load double* %s.addr, align 8
  %14 = load i32* %i, align 4
  %idxprom13 = sext i32 %14 to i64
  %15 = load %struct.su3_vector** %b.addr, align 8
  %c14 = getelementptr inbounds %struct.su3_vector* %15, i32 0, i32 0
  %arrayidx15 = getelementptr inbounds [3 x %struct.complex]* %c14, i32 0, i64 %idxprom13
  %imag16 = getelementptr inbounds %struct.complex* %arrayidx15, i32 0, i32 1
  %16 = load double* %imag16, align 8
  %mul17 = fmul double %13, %16
  %add18 = fadd double %12, %mul17
  %17 = load i32* %i, align 4
  %idxprom19 = sext i32 %17 to i64
  %18 = load %struct.su3_vector** %c.addr, align 8
  %c20 = getelementptr inbounds %struct.su3_vector* %18, i32 0, i32 0
  %arrayidx21 = getelementptr inbounds [3 x %struct.complex]* %c20, i32 0, i64 %idxprom19
  %imag22 = getelementptr inbounds %struct.complex* %arrayidx21, i32 0, i32 1
  store double %add18, double* %imag22, align 8
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %19 = load i32* %i, align 4
  %inc = add nsw i32 %19, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @scalar_mult_sub_su3_matrix(%struct.su3_matrix* %a, %struct.su3_matrix* %b, double %s, %struct.su3_matrix* %c) #0 {
entry:
  %a.addr = alloca %struct.su3_matrix*, align 8
  %b.addr = alloca %struct.su3_matrix*, align 8
  %s.addr = alloca double, align 8
  %c.addr = alloca %struct.su3_matrix*, align 8
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  store %struct.su3_matrix* %a, %struct.su3_matrix** %a.addr, align 8
  store %struct.su3_matrix* %b, %struct.su3_matrix** %b.addr, align 8
  store double %s, double* %s.addr, align 8
  store %struct.su3_matrix* %c, %struct.su3_matrix** %c.addr, align 8
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc37, %entry
  %0 = load i32* %i, align 4
  %cmp = icmp slt i32 %0, 3
  br i1 %cmp, label %for.body, label %for.end39

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %j, align 4
  br label %for.cond1

for.cond1:                                        ; preds = %for.inc, %for.body
  %1 = load i32* %j, align 4
  %cmp2 = icmp slt i32 %1, 3
  br i1 %cmp2, label %for.body3, label %for.end

for.body3:                                        ; preds = %for.cond1
  %2 = load i32* %j, align 4
  %idxprom = sext i32 %2 to i64
  %3 = load i32* %i, align 4
  %idxprom4 = sext i32 %3 to i64
  %4 = load %struct.su3_matrix** %a.addr, align 8
  %e = getelementptr inbounds %struct.su3_matrix* %4, i32 0, i32 0
  %arrayidx = getelementptr inbounds [3 x [3 x %struct.complex]]* %e, i32 0, i64 %idxprom4
  %arrayidx5 = getelementptr inbounds [3 x %struct.complex]* %arrayidx, i32 0, i64 %idxprom
  %real = getelementptr inbounds %struct.complex* %arrayidx5, i32 0, i32 0
  %5 = load double* %real, align 8
  %6 = load double* %s.addr, align 8
  %7 = load i32* %j, align 4
  %idxprom6 = sext i32 %7 to i64
  %8 = load i32* %i, align 4
  %idxprom7 = sext i32 %8 to i64
  %9 = load %struct.su3_matrix** %b.addr, align 8
  %e8 = getelementptr inbounds %struct.su3_matrix* %9, i32 0, i32 0
  %arrayidx9 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e8, i32 0, i64 %idxprom7
  %arrayidx10 = getelementptr inbounds [3 x %struct.complex]* %arrayidx9, i32 0, i64 %idxprom6
  %real11 = getelementptr inbounds %struct.complex* %arrayidx10, i32 0, i32 0
  %10 = load double* %real11, align 8
  %mul = fmul double %6, %10
  %sub = fsub double %5, %mul
  %11 = load i32* %j, align 4
  %idxprom12 = sext i32 %11 to i64
  %12 = load i32* %i, align 4
  %idxprom13 = sext i32 %12 to i64
  %13 = load %struct.su3_matrix** %c.addr, align 8
  %e14 = getelementptr inbounds %struct.su3_matrix* %13, i32 0, i32 0
  %arrayidx15 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e14, i32 0, i64 %idxprom13
  %arrayidx16 = getelementptr inbounds [3 x %struct.complex]* %arrayidx15, i32 0, i64 %idxprom12
  %real17 = getelementptr inbounds %struct.complex* %arrayidx16, i32 0, i32 0
  store double %sub, double* %real17, align 8
  %14 = load i32* %j, align 4
  %idxprom18 = sext i32 %14 to i64
  %15 = load i32* %i, align 4
  %idxprom19 = sext i32 %15 to i64
  %16 = load %struct.su3_matrix** %a.addr, align 8
  %e20 = getelementptr inbounds %struct.su3_matrix* %16, i32 0, i32 0
  %arrayidx21 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e20, i32 0, i64 %idxprom19
  %arrayidx22 = getelementptr inbounds [3 x %struct.complex]* %arrayidx21, i32 0, i64 %idxprom18
  %imag = getelementptr inbounds %struct.complex* %arrayidx22, i32 0, i32 1
  %17 = load double* %imag, align 8
  %18 = load double* %s.addr, align 8
  %19 = load i32* %j, align 4
  %idxprom23 = sext i32 %19 to i64
  %20 = load i32* %i, align 4
  %idxprom24 = sext i32 %20 to i64
  %21 = load %struct.su3_matrix** %b.addr, align 8
  %e25 = getelementptr inbounds %struct.su3_matrix* %21, i32 0, i32 0
  %arrayidx26 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e25, i32 0, i64 %idxprom24
  %arrayidx27 = getelementptr inbounds [3 x %struct.complex]* %arrayidx26, i32 0, i64 %idxprom23
  %imag28 = getelementptr inbounds %struct.complex* %arrayidx27, i32 0, i32 1
  %22 = load double* %imag28, align 8
  %mul29 = fmul double %18, %22
  %sub30 = fsub double %17, %mul29
  %23 = load i32* %j, align 4
  %idxprom31 = sext i32 %23 to i64
  %24 = load i32* %i, align 4
  %idxprom32 = sext i32 %24 to i64
  %25 = load %struct.su3_matrix** %c.addr, align 8
  %e33 = getelementptr inbounds %struct.su3_matrix* %25, i32 0, i32 0
  %arrayidx34 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e33, i32 0, i64 %idxprom32
  %arrayidx35 = getelementptr inbounds [3 x %struct.complex]* %arrayidx34, i32 0, i64 %idxprom31
  %imag36 = getelementptr inbounds %struct.complex* %arrayidx35, i32 0, i32 1
  store double %sub30, double* %imag36, align 8
  br label %for.inc

for.inc:                                          ; preds = %for.body3
  %26 = load i32* %j, align 4
  %inc = add nsw i32 %26, 1
  store i32 %inc, i32* %j, align 4
  br label %for.cond1

for.end:                                          ; preds = %for.cond1
  br label %for.inc37

for.inc37:                                        ; preds = %for.end
  %27 = load i32* %i, align 4
  %inc38 = add nsw i32 %27, 1
  store i32 %inc38, i32* %i, align 4
  br label %for.cond

for.end39:                                        ; preds = %for.cond
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @scalar_mult_su3_vector(%struct.su3_vector* %a, double %s, %struct.su3_vector* %c) #0 {
entry:
  %a.addr = alloca %struct.su3_vector*, align 8
  %s.addr = alloca double, align 8
  %c.addr = alloca %struct.su3_vector*, align 8
  %i = alloca i32, align 4
  store %struct.su3_vector* %a, %struct.su3_vector** %a.addr, align 8
  store double %s, double* %s.addr, align 8
  store %struct.su3_vector* %c, %struct.su3_vector** %c.addr, align 8
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32* %i, align 4
  %cmp = icmp slt i32 %0, 3
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %1 = load double* %s.addr, align 8
  %2 = load i32* %i, align 4
  %idxprom = sext i32 %2 to i64
  %3 = load %struct.su3_vector** %a.addr, align 8
  %c1 = getelementptr inbounds %struct.su3_vector* %3, i32 0, i32 0
  %arrayidx = getelementptr inbounds [3 x %struct.complex]* %c1, i32 0, i64 %idxprom
  %real = getelementptr inbounds %struct.complex* %arrayidx, i32 0, i32 0
  %4 = load double* %real, align 8
  %mul = fmul double %1, %4
  %5 = load i32* %i, align 4
  %idxprom2 = sext i32 %5 to i64
  %6 = load %struct.su3_vector** %c.addr, align 8
  %c3 = getelementptr inbounds %struct.su3_vector* %6, i32 0, i32 0
  %arrayidx4 = getelementptr inbounds [3 x %struct.complex]* %c3, i32 0, i64 %idxprom2
  %real5 = getelementptr inbounds %struct.complex* %arrayidx4, i32 0, i32 0
  store double %mul, double* %real5, align 8
  %7 = load double* %s.addr, align 8
  %8 = load i32* %i, align 4
  %idxprom6 = sext i32 %8 to i64
  %9 = load %struct.su3_vector** %a.addr, align 8
  %c7 = getelementptr inbounds %struct.su3_vector* %9, i32 0, i32 0
  %arrayidx8 = getelementptr inbounds [3 x %struct.complex]* %c7, i32 0, i64 %idxprom6
  %imag = getelementptr inbounds %struct.complex* %arrayidx8, i32 0, i32 1
  %10 = load double* %imag, align 8
  %mul9 = fmul double %7, %10
  %11 = load i32* %i, align 4
  %idxprom10 = sext i32 %11 to i64
  %12 = load %struct.su3_vector** %c.addr, align 8
  %c11 = getelementptr inbounds %struct.su3_vector* %12, i32 0, i32 0
  %arrayidx12 = getelementptr inbounds [3 x %struct.complex]* %c11, i32 0, i64 %idxprom10
  %imag13 = getelementptr inbounds %struct.complex* %arrayidx12, i32 0, i32 1
  store double %mul9, double* %imag13, align 8
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %13 = load i32* %i, align 4
  %inc = add nsw i32 %13, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @scalar_mult_su3_matrix(%struct.su3_matrix* %a, double %s, %struct.su3_matrix* %b) #0 {
entry:
  %a.addr = alloca %struct.su3_matrix*, align 8
  %s.addr = alloca double, align 8
  %b.addr = alloca %struct.su3_matrix*, align 8
  %ss = alloca double, align 8
  store %struct.su3_matrix* %a, %struct.su3_matrix** %a.addr, align 8
  store double %s, double* %s.addr, align 8
  store %struct.su3_matrix* %b, %struct.su3_matrix** %b.addr, align 8
  %0 = load double* %s.addr, align 8
  store double %0, double* %ss, align 8
  %1 = load double* %ss, align 8
  %2 = load %struct.su3_matrix** %a.addr, align 8
  %e = getelementptr inbounds %struct.su3_matrix* %2, i32 0, i32 0
  %arrayidx = getelementptr inbounds [3 x [3 x %struct.complex]]* %e, i32 0, i64 0
  %arrayidx1 = getelementptr inbounds [3 x %struct.complex]* %arrayidx, i32 0, i64 0
  %real = getelementptr inbounds %struct.complex* %arrayidx1, i32 0, i32 0
  %3 = load double* %real, align 8
  %mul = fmul double %1, %3
  %4 = load %struct.su3_matrix** %b.addr, align 8
  %e2 = getelementptr inbounds %struct.su3_matrix* %4, i32 0, i32 0
  %arrayidx3 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e2, i32 0, i64 0
  %arrayidx4 = getelementptr inbounds [3 x %struct.complex]* %arrayidx3, i32 0, i64 0
  %real5 = getelementptr inbounds %struct.complex* %arrayidx4, i32 0, i32 0
  store double %mul, double* %real5, align 8
  %5 = load double* %ss, align 8
  %6 = load %struct.su3_matrix** %a.addr, align 8
  %e6 = getelementptr inbounds %struct.su3_matrix* %6, i32 0, i32 0
  %arrayidx7 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e6, i32 0, i64 0
  %arrayidx8 = getelementptr inbounds [3 x %struct.complex]* %arrayidx7, i32 0, i64 0
  %imag = getelementptr inbounds %struct.complex* %arrayidx8, i32 0, i32 1
  %7 = load double* %imag, align 8
  %mul9 = fmul double %5, %7
  %8 = load %struct.su3_matrix** %b.addr, align 8
  %e10 = getelementptr inbounds %struct.su3_matrix* %8, i32 0, i32 0
  %arrayidx11 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e10, i32 0, i64 0
  %arrayidx12 = getelementptr inbounds [3 x %struct.complex]* %arrayidx11, i32 0, i64 0
  %imag13 = getelementptr inbounds %struct.complex* %arrayidx12, i32 0, i32 1
  store double %mul9, double* %imag13, align 8
  %9 = load double* %ss, align 8
  %10 = load %struct.su3_matrix** %a.addr, align 8
  %e14 = getelementptr inbounds %struct.su3_matrix* %10, i32 0, i32 0
  %arrayidx15 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e14, i32 0, i64 0
  %arrayidx16 = getelementptr inbounds [3 x %struct.complex]* %arrayidx15, i32 0, i64 1
  %real17 = getelementptr inbounds %struct.complex* %arrayidx16, i32 0, i32 0
  %11 = load double* %real17, align 8
  %mul18 = fmul double %9, %11
  %12 = load %struct.su3_matrix** %b.addr, align 8
  %e19 = getelementptr inbounds %struct.su3_matrix* %12, i32 0, i32 0
  %arrayidx20 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e19, i32 0, i64 0
  %arrayidx21 = getelementptr inbounds [3 x %struct.complex]* %arrayidx20, i32 0, i64 1
  %real22 = getelementptr inbounds %struct.complex* %arrayidx21, i32 0, i32 0
  store double %mul18, double* %real22, align 8
  %13 = load double* %ss, align 8
  %14 = load %struct.su3_matrix** %a.addr, align 8
  %e23 = getelementptr inbounds %struct.su3_matrix* %14, i32 0, i32 0
  %arrayidx24 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e23, i32 0, i64 0
  %arrayidx25 = getelementptr inbounds [3 x %struct.complex]* %arrayidx24, i32 0, i64 1
  %imag26 = getelementptr inbounds %struct.complex* %arrayidx25, i32 0, i32 1
  %15 = load double* %imag26, align 8
  %mul27 = fmul double %13, %15
  %16 = load %struct.su3_matrix** %b.addr, align 8
  %e28 = getelementptr inbounds %struct.su3_matrix* %16, i32 0, i32 0
  %arrayidx29 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e28, i32 0, i64 0
  %arrayidx30 = getelementptr inbounds [3 x %struct.complex]* %arrayidx29, i32 0, i64 1
  %imag31 = getelementptr inbounds %struct.complex* %arrayidx30, i32 0, i32 1
  store double %mul27, double* %imag31, align 8
  %17 = load double* %ss, align 8
  %18 = load %struct.su3_matrix** %a.addr, align 8
  %e32 = getelementptr inbounds %struct.su3_matrix* %18, i32 0, i32 0
  %arrayidx33 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e32, i32 0, i64 0
  %arrayidx34 = getelementptr inbounds [3 x %struct.complex]* %arrayidx33, i32 0, i64 2
  %real35 = getelementptr inbounds %struct.complex* %arrayidx34, i32 0, i32 0
  %19 = load double* %real35, align 8
  %mul36 = fmul double %17, %19
  %20 = load %struct.su3_matrix** %b.addr, align 8
  %e37 = getelementptr inbounds %struct.su3_matrix* %20, i32 0, i32 0
  %arrayidx38 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e37, i32 0, i64 0
  %arrayidx39 = getelementptr inbounds [3 x %struct.complex]* %arrayidx38, i32 0, i64 2
  %real40 = getelementptr inbounds %struct.complex* %arrayidx39, i32 0, i32 0
  store double %mul36, double* %real40, align 8
  %21 = load double* %ss, align 8
  %22 = load %struct.su3_matrix** %a.addr, align 8
  %e41 = getelementptr inbounds %struct.su3_matrix* %22, i32 0, i32 0
  %arrayidx42 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e41, i32 0, i64 0
  %arrayidx43 = getelementptr inbounds [3 x %struct.complex]* %arrayidx42, i32 0, i64 2
  %imag44 = getelementptr inbounds %struct.complex* %arrayidx43, i32 0, i32 1
  %23 = load double* %imag44, align 8
  %mul45 = fmul double %21, %23
  %24 = load %struct.su3_matrix** %b.addr, align 8
  %e46 = getelementptr inbounds %struct.su3_matrix* %24, i32 0, i32 0
  %arrayidx47 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e46, i32 0, i64 0
  %arrayidx48 = getelementptr inbounds [3 x %struct.complex]* %arrayidx47, i32 0, i64 2
  %imag49 = getelementptr inbounds %struct.complex* %arrayidx48, i32 0, i32 1
  store double %mul45, double* %imag49, align 8
  %25 = load double* %ss, align 8
  %26 = load %struct.su3_matrix** %a.addr, align 8
  %e50 = getelementptr inbounds %struct.su3_matrix* %26, i32 0, i32 0
  %arrayidx51 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e50, i32 0, i64 1
  %arrayidx52 = getelementptr inbounds [3 x %struct.complex]* %arrayidx51, i32 0, i64 0
  %real53 = getelementptr inbounds %struct.complex* %arrayidx52, i32 0, i32 0
  %27 = load double* %real53, align 8
  %mul54 = fmul double %25, %27
  %28 = load %struct.su3_matrix** %b.addr, align 8
  %e55 = getelementptr inbounds %struct.su3_matrix* %28, i32 0, i32 0
  %arrayidx56 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e55, i32 0, i64 1
  %arrayidx57 = getelementptr inbounds [3 x %struct.complex]* %arrayidx56, i32 0, i64 0
  %real58 = getelementptr inbounds %struct.complex* %arrayidx57, i32 0, i32 0
  store double %mul54, double* %real58, align 8
  %29 = load double* %ss, align 8
  %30 = load %struct.su3_matrix** %a.addr, align 8
  %e59 = getelementptr inbounds %struct.su3_matrix* %30, i32 0, i32 0
  %arrayidx60 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e59, i32 0, i64 1
  %arrayidx61 = getelementptr inbounds [3 x %struct.complex]* %arrayidx60, i32 0, i64 0
  %imag62 = getelementptr inbounds %struct.complex* %arrayidx61, i32 0, i32 1
  %31 = load double* %imag62, align 8
  %mul63 = fmul double %29, %31
  %32 = load %struct.su3_matrix** %b.addr, align 8
  %e64 = getelementptr inbounds %struct.su3_matrix* %32, i32 0, i32 0
  %arrayidx65 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e64, i32 0, i64 1
  %arrayidx66 = getelementptr inbounds [3 x %struct.complex]* %arrayidx65, i32 0, i64 0
  %imag67 = getelementptr inbounds %struct.complex* %arrayidx66, i32 0, i32 1
  store double %mul63, double* %imag67, align 8
  %33 = load double* %ss, align 8
  %34 = load %struct.su3_matrix** %a.addr, align 8
  %e68 = getelementptr inbounds %struct.su3_matrix* %34, i32 0, i32 0
  %arrayidx69 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e68, i32 0, i64 1
  %arrayidx70 = getelementptr inbounds [3 x %struct.complex]* %arrayidx69, i32 0, i64 1
  %real71 = getelementptr inbounds %struct.complex* %arrayidx70, i32 0, i32 0
  %35 = load double* %real71, align 8
  %mul72 = fmul double %33, %35
  %36 = load %struct.su3_matrix** %b.addr, align 8
  %e73 = getelementptr inbounds %struct.su3_matrix* %36, i32 0, i32 0
  %arrayidx74 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e73, i32 0, i64 1
  %arrayidx75 = getelementptr inbounds [3 x %struct.complex]* %arrayidx74, i32 0, i64 1
  %real76 = getelementptr inbounds %struct.complex* %arrayidx75, i32 0, i32 0
  store double %mul72, double* %real76, align 8
  %37 = load double* %ss, align 8
  %38 = load %struct.su3_matrix** %a.addr, align 8
  %e77 = getelementptr inbounds %struct.su3_matrix* %38, i32 0, i32 0
  %arrayidx78 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e77, i32 0, i64 1
  %arrayidx79 = getelementptr inbounds [3 x %struct.complex]* %arrayidx78, i32 0, i64 1
  %imag80 = getelementptr inbounds %struct.complex* %arrayidx79, i32 0, i32 1
  %39 = load double* %imag80, align 8
  %mul81 = fmul double %37, %39
  %40 = load %struct.su3_matrix** %b.addr, align 8
  %e82 = getelementptr inbounds %struct.su3_matrix* %40, i32 0, i32 0
  %arrayidx83 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e82, i32 0, i64 1
  %arrayidx84 = getelementptr inbounds [3 x %struct.complex]* %arrayidx83, i32 0, i64 1
  %imag85 = getelementptr inbounds %struct.complex* %arrayidx84, i32 0, i32 1
  store double %mul81, double* %imag85, align 8
  %41 = load double* %ss, align 8
  %42 = load %struct.su3_matrix** %a.addr, align 8
  %e86 = getelementptr inbounds %struct.su3_matrix* %42, i32 0, i32 0
  %arrayidx87 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e86, i32 0, i64 1
  %arrayidx88 = getelementptr inbounds [3 x %struct.complex]* %arrayidx87, i32 0, i64 2
  %real89 = getelementptr inbounds %struct.complex* %arrayidx88, i32 0, i32 0
  %43 = load double* %real89, align 8
  %mul90 = fmul double %41, %43
  %44 = load %struct.su3_matrix** %b.addr, align 8
  %e91 = getelementptr inbounds %struct.su3_matrix* %44, i32 0, i32 0
  %arrayidx92 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e91, i32 0, i64 1
  %arrayidx93 = getelementptr inbounds [3 x %struct.complex]* %arrayidx92, i32 0, i64 2
  %real94 = getelementptr inbounds %struct.complex* %arrayidx93, i32 0, i32 0
  store double %mul90, double* %real94, align 8
  %45 = load double* %ss, align 8
  %46 = load %struct.su3_matrix** %a.addr, align 8
  %e95 = getelementptr inbounds %struct.su3_matrix* %46, i32 0, i32 0
  %arrayidx96 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e95, i32 0, i64 1
  %arrayidx97 = getelementptr inbounds [3 x %struct.complex]* %arrayidx96, i32 0, i64 2
  %imag98 = getelementptr inbounds %struct.complex* %arrayidx97, i32 0, i32 1
  %47 = load double* %imag98, align 8
  %mul99 = fmul double %45, %47
  %48 = load %struct.su3_matrix** %b.addr, align 8
  %e100 = getelementptr inbounds %struct.su3_matrix* %48, i32 0, i32 0
  %arrayidx101 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e100, i32 0, i64 1
  %arrayidx102 = getelementptr inbounds [3 x %struct.complex]* %arrayidx101, i32 0, i64 2
  %imag103 = getelementptr inbounds %struct.complex* %arrayidx102, i32 0, i32 1
  store double %mul99, double* %imag103, align 8
  %49 = load double* %ss, align 8
  %50 = load %struct.su3_matrix** %a.addr, align 8
  %e104 = getelementptr inbounds %struct.su3_matrix* %50, i32 0, i32 0
  %arrayidx105 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e104, i32 0, i64 2
  %arrayidx106 = getelementptr inbounds [3 x %struct.complex]* %arrayidx105, i32 0, i64 0
  %real107 = getelementptr inbounds %struct.complex* %arrayidx106, i32 0, i32 0
  %51 = load double* %real107, align 8
  %mul108 = fmul double %49, %51
  %52 = load %struct.su3_matrix** %b.addr, align 8
  %e109 = getelementptr inbounds %struct.su3_matrix* %52, i32 0, i32 0
  %arrayidx110 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e109, i32 0, i64 2
  %arrayidx111 = getelementptr inbounds [3 x %struct.complex]* %arrayidx110, i32 0, i64 0
  %real112 = getelementptr inbounds %struct.complex* %arrayidx111, i32 0, i32 0
  store double %mul108, double* %real112, align 8
  %53 = load double* %ss, align 8
  %54 = load %struct.su3_matrix** %a.addr, align 8
  %e113 = getelementptr inbounds %struct.su3_matrix* %54, i32 0, i32 0
  %arrayidx114 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e113, i32 0, i64 2
  %arrayidx115 = getelementptr inbounds [3 x %struct.complex]* %arrayidx114, i32 0, i64 0
  %imag116 = getelementptr inbounds %struct.complex* %arrayidx115, i32 0, i32 1
  %55 = load double* %imag116, align 8
  %mul117 = fmul double %53, %55
  %56 = load %struct.su3_matrix** %b.addr, align 8
  %e118 = getelementptr inbounds %struct.su3_matrix* %56, i32 0, i32 0
  %arrayidx119 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e118, i32 0, i64 2
  %arrayidx120 = getelementptr inbounds [3 x %struct.complex]* %arrayidx119, i32 0, i64 0
  %imag121 = getelementptr inbounds %struct.complex* %arrayidx120, i32 0, i32 1
  store double %mul117, double* %imag121, align 8
  %57 = load double* %ss, align 8
  %58 = load %struct.su3_matrix** %a.addr, align 8
  %e122 = getelementptr inbounds %struct.su3_matrix* %58, i32 0, i32 0
  %arrayidx123 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e122, i32 0, i64 2
  %arrayidx124 = getelementptr inbounds [3 x %struct.complex]* %arrayidx123, i32 0, i64 1
  %real125 = getelementptr inbounds %struct.complex* %arrayidx124, i32 0, i32 0
  %59 = load double* %real125, align 8
  %mul126 = fmul double %57, %59
  %60 = load %struct.su3_matrix** %b.addr, align 8
  %e127 = getelementptr inbounds %struct.su3_matrix* %60, i32 0, i32 0
  %arrayidx128 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e127, i32 0, i64 2
  %arrayidx129 = getelementptr inbounds [3 x %struct.complex]* %arrayidx128, i32 0, i64 1
  %real130 = getelementptr inbounds %struct.complex* %arrayidx129, i32 0, i32 0
  store double %mul126, double* %real130, align 8
  %61 = load double* %ss, align 8
  %62 = load %struct.su3_matrix** %a.addr, align 8
  %e131 = getelementptr inbounds %struct.su3_matrix* %62, i32 0, i32 0
  %arrayidx132 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e131, i32 0, i64 2
  %arrayidx133 = getelementptr inbounds [3 x %struct.complex]* %arrayidx132, i32 0, i64 1
  %imag134 = getelementptr inbounds %struct.complex* %arrayidx133, i32 0, i32 1
  %63 = load double* %imag134, align 8
  %mul135 = fmul double %61, %63
  %64 = load %struct.su3_matrix** %b.addr, align 8
  %e136 = getelementptr inbounds %struct.su3_matrix* %64, i32 0, i32 0
  %arrayidx137 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e136, i32 0, i64 2
  %arrayidx138 = getelementptr inbounds [3 x %struct.complex]* %arrayidx137, i32 0, i64 1
  %imag139 = getelementptr inbounds %struct.complex* %arrayidx138, i32 0, i32 1
  store double %mul135, double* %imag139, align 8
  %65 = load double* %ss, align 8
  %66 = load %struct.su3_matrix** %a.addr, align 8
  %e140 = getelementptr inbounds %struct.su3_matrix* %66, i32 0, i32 0
  %arrayidx141 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e140, i32 0, i64 2
  %arrayidx142 = getelementptr inbounds [3 x %struct.complex]* %arrayidx141, i32 0, i64 2
  %real143 = getelementptr inbounds %struct.complex* %arrayidx142, i32 0, i32 0
  %67 = load double* %real143, align 8
  %mul144 = fmul double %65, %67
  %68 = load %struct.su3_matrix** %b.addr, align 8
  %e145 = getelementptr inbounds %struct.su3_matrix* %68, i32 0, i32 0
  %arrayidx146 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e145, i32 0, i64 2
  %arrayidx147 = getelementptr inbounds [3 x %struct.complex]* %arrayidx146, i32 0, i64 2
  %real148 = getelementptr inbounds %struct.complex* %arrayidx147, i32 0, i32 0
  store double %mul144, double* %real148, align 8
  %69 = load double* %ss, align 8
  %70 = load %struct.su3_matrix** %a.addr, align 8
  %e149 = getelementptr inbounds %struct.su3_matrix* %70, i32 0, i32 0
  %arrayidx150 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e149, i32 0, i64 2
  %arrayidx151 = getelementptr inbounds [3 x %struct.complex]* %arrayidx150, i32 0, i64 2
  %imag152 = getelementptr inbounds %struct.complex* %arrayidx151, i32 0, i32 1
  %71 = load double* %imag152, align 8
  %mul153 = fmul double %69, %71
  %72 = load %struct.su3_matrix** %b.addr, align 8
  %e154 = getelementptr inbounds %struct.su3_matrix* %72, i32 0, i32 0
  %arrayidx155 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e154, i32 0, i64 2
  %arrayidx156 = getelementptr inbounds [3 x %struct.complex]* %arrayidx155, i32 0, i64 2
  %imag157 = getelementptr inbounds %struct.complex* %arrayidx156, i32 0, i32 1
  store double %mul153, double* %imag157, align 8
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @su3_adjoint(%struct.su3_matrix* %a, %struct.su3_matrix* %b) #0 {
entry:
  %a.addr = alloca %struct.su3_matrix*, align 8
  %b.addr = alloca %struct.su3_matrix*, align 8
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  store %struct.su3_matrix* %a, %struct.su3_matrix** %a.addr, align 8
  store %struct.su3_matrix* %b, %struct.su3_matrix** %b.addr, align 8
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc23, %entry
  %0 = load i32* %i, align 4
  %cmp = icmp slt i32 %0, 3
  br i1 %cmp, label %for.body, label %for.end25

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %j, align 4
  br label %for.cond1

for.cond1:                                        ; preds = %for.inc, %for.body
  %1 = load i32* %j, align 4
  %cmp2 = icmp slt i32 %1, 3
  br i1 %cmp2, label %for.body3, label %for.end

for.body3:                                        ; preds = %for.cond1
  %2 = load i32* %i, align 4
  %idxprom = sext i32 %2 to i64
  %3 = load i32* %j, align 4
  %idxprom4 = sext i32 %3 to i64
  %4 = load %struct.su3_matrix** %a.addr, align 8
  %e = getelementptr inbounds %struct.su3_matrix* %4, i32 0, i32 0
  %arrayidx = getelementptr inbounds [3 x [3 x %struct.complex]]* %e, i32 0, i64 %idxprom4
  %arrayidx5 = getelementptr inbounds [3 x %struct.complex]* %arrayidx, i32 0, i64 %idxprom
  %real = getelementptr inbounds %struct.complex* %arrayidx5, i32 0, i32 0
  %5 = load double* %real, align 8
  %6 = load i32* %j, align 4
  %idxprom6 = sext i32 %6 to i64
  %7 = load i32* %i, align 4
  %idxprom7 = sext i32 %7 to i64
  %8 = load %struct.su3_matrix** %b.addr, align 8
  %e8 = getelementptr inbounds %struct.su3_matrix* %8, i32 0, i32 0
  %arrayidx9 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e8, i32 0, i64 %idxprom7
  %arrayidx10 = getelementptr inbounds [3 x %struct.complex]* %arrayidx9, i32 0, i64 %idxprom6
  %real11 = getelementptr inbounds %struct.complex* %arrayidx10, i32 0, i32 0
  store double %5, double* %real11, align 8
  %9 = load i32* %i, align 4
  %idxprom12 = sext i32 %9 to i64
  %10 = load i32* %j, align 4
  %idxprom13 = sext i32 %10 to i64
  %11 = load %struct.su3_matrix** %a.addr, align 8
  %e14 = getelementptr inbounds %struct.su3_matrix* %11, i32 0, i32 0
  %arrayidx15 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e14, i32 0, i64 %idxprom13
  %arrayidx16 = getelementptr inbounds [3 x %struct.complex]* %arrayidx15, i32 0, i64 %idxprom12
  %imag = getelementptr inbounds %struct.complex* %arrayidx16, i32 0, i32 1
  %12 = load double* %imag, align 8
  %sub = fsub double -0.000000e+00, %12
  %13 = load i32* %j, align 4
  %idxprom17 = sext i32 %13 to i64
  %14 = load i32* %i, align 4
  %idxprom18 = sext i32 %14 to i64
  %15 = load %struct.su3_matrix** %b.addr, align 8
  %e19 = getelementptr inbounds %struct.su3_matrix* %15, i32 0, i32 0
  %arrayidx20 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e19, i32 0, i64 %idxprom18
  %arrayidx21 = getelementptr inbounds [3 x %struct.complex]* %arrayidx20, i32 0, i64 %idxprom17
  %imag22 = getelementptr inbounds %struct.complex* %arrayidx21, i32 0, i32 1
  store double %sub, double* %imag22, align 8
  br label %for.inc

for.inc:                                          ; preds = %for.body3
  %16 = load i32* %j, align 4
  %inc = add nsw i32 %16, 1
  store i32 %inc, i32* %j, align 4
  br label %for.cond1

for.end:                                          ; preds = %for.cond1
  br label %for.inc23

for.inc23:                                        ; preds = %for.end
  %17 = load i32* %i, align 4
  %inc24 = add nsw i32 %17, 1
  store i32 %inc24, i32* %i, align 4
  br label %for.cond

for.end25:                                        ; preds = %for.cond
  ret void
}

; Function Attrs: nounwind uwtable
define internal { double, double } @su3_dot(%struct.su3_vector* %a, %struct.su3_vector* %b) #0 {
entry:
  %retval = alloca %struct.complex, align 8
  %a.addr = alloca %struct.su3_vector*, align 8
  %b.addr = alloca %struct.su3_vector*, align 8
  %ar = alloca double, align 8
  %ai = alloca double, align 8
  %br = alloca double, align 8
  %bi = alloca double, align 8
  %cr = alloca double, align 8
  %ci = alloca double, align 8
  %cc = alloca %struct.complex, align 8
  store %struct.su3_vector* %a, %struct.su3_vector** %a.addr, align 8
  store %struct.su3_vector* %b, %struct.su3_vector** %b.addr, align 8
  %0 = load %struct.su3_vector** %a.addr, align 8
  %c = getelementptr inbounds %struct.su3_vector* %0, i32 0, i32 0
  %arrayidx = getelementptr inbounds [3 x %struct.complex]* %c, i32 0, i64 0
  %real = getelementptr inbounds %struct.complex* %arrayidx, i32 0, i32 0
  %1 = load double* %real, align 8
  store double %1, double* %ar, align 8
  %2 = load %struct.su3_vector** %a.addr, align 8
  %c1 = getelementptr inbounds %struct.su3_vector* %2, i32 0, i32 0
  %arrayidx2 = getelementptr inbounds [3 x %struct.complex]* %c1, i32 0, i64 0
  %imag = getelementptr inbounds %struct.complex* %arrayidx2, i32 0, i32 1
  %3 = load double* %imag, align 8
  store double %3, double* %ai, align 8
  %4 = load %struct.su3_vector** %b.addr, align 8
  %c3 = getelementptr inbounds %struct.su3_vector* %4, i32 0, i32 0
  %arrayidx4 = getelementptr inbounds [3 x %struct.complex]* %c3, i32 0, i64 0
  %real5 = getelementptr inbounds %struct.complex* %arrayidx4, i32 0, i32 0
  %5 = load double* %real5, align 8
  store double %5, double* %br, align 8
  %6 = load %struct.su3_vector** %b.addr, align 8
  %c6 = getelementptr inbounds %struct.su3_vector* %6, i32 0, i32 0
  %arrayidx7 = getelementptr inbounds [3 x %struct.complex]* %c6, i32 0, i64 0
  %imag8 = getelementptr inbounds %struct.complex* %arrayidx7, i32 0, i32 1
  %7 = load double* %imag8, align 8
  store double %7, double* %bi, align 8
  %8 = load double* %ar, align 8
  %9 = load double* %br, align 8
  %mul = fmul double %8, %9
  %10 = load double* %ai, align 8
  %11 = load double* %bi, align 8
  %mul9 = fmul double %10, %11
  %add = fadd double %mul, %mul9
  store double %add, double* %cr, align 8
  %12 = load double* %ar, align 8
  %13 = load double* %bi, align 8
  %mul10 = fmul double %12, %13
  %14 = load double* %ai, align 8
  %15 = load double* %br, align 8
  %mul11 = fmul double %14, %15
  %sub = fsub double %mul10, %mul11
  store double %sub, double* %ci, align 8
  %16 = load %struct.su3_vector** %a.addr, align 8
  %c12 = getelementptr inbounds %struct.su3_vector* %16, i32 0, i32 0
  %arrayidx13 = getelementptr inbounds [3 x %struct.complex]* %c12, i32 0, i64 1
  %real14 = getelementptr inbounds %struct.complex* %arrayidx13, i32 0, i32 0
  %17 = load double* %real14, align 8
  store double %17, double* %ar, align 8
  %18 = load %struct.su3_vector** %a.addr, align 8
  %c15 = getelementptr inbounds %struct.su3_vector* %18, i32 0, i32 0
  %arrayidx16 = getelementptr inbounds [3 x %struct.complex]* %c15, i32 0, i64 1
  %imag17 = getelementptr inbounds %struct.complex* %arrayidx16, i32 0, i32 1
  %19 = load double* %imag17, align 8
  store double %19, double* %ai, align 8
  %20 = load %struct.su3_vector** %b.addr, align 8
  %c18 = getelementptr inbounds %struct.su3_vector* %20, i32 0, i32 0
  %arrayidx19 = getelementptr inbounds [3 x %struct.complex]* %c18, i32 0, i64 1
  %real20 = getelementptr inbounds %struct.complex* %arrayidx19, i32 0, i32 0
  %21 = load double* %real20, align 8
  store double %21, double* %br, align 8
  %22 = load %struct.su3_vector** %b.addr, align 8
  %c21 = getelementptr inbounds %struct.su3_vector* %22, i32 0, i32 0
  %arrayidx22 = getelementptr inbounds [3 x %struct.complex]* %c21, i32 0, i64 1
  %imag23 = getelementptr inbounds %struct.complex* %arrayidx22, i32 0, i32 1
  %23 = load double* %imag23, align 8
  store double %23, double* %bi, align 8
  %24 = load double* %ar, align 8
  %25 = load double* %br, align 8
  %mul24 = fmul double %24, %25
  %26 = load double* %ai, align 8
  %27 = load double* %bi, align 8
  %mul25 = fmul double %26, %27
  %add26 = fadd double %mul24, %mul25
  %28 = load double* %cr, align 8
  %add27 = fadd double %28, %add26
  store double %add27, double* %cr, align 8
  %29 = load double* %ar, align 8
  %30 = load double* %bi, align 8
  %mul28 = fmul double %29, %30
  %31 = load double* %ai, align 8
  %32 = load double* %br, align 8
  %mul29 = fmul double %31, %32
  %sub30 = fsub double %mul28, %mul29
  %33 = load double* %ci, align 8
  %add31 = fadd double %33, %sub30
  store double %add31, double* %ci, align 8
  %34 = load %struct.su3_vector** %a.addr, align 8
  %c32 = getelementptr inbounds %struct.su3_vector* %34, i32 0, i32 0
  %arrayidx33 = getelementptr inbounds [3 x %struct.complex]* %c32, i32 0, i64 2
  %real34 = getelementptr inbounds %struct.complex* %arrayidx33, i32 0, i32 0
  %35 = load double* %real34, align 8
  store double %35, double* %ar, align 8
  %36 = load %struct.su3_vector** %a.addr, align 8
  %c35 = getelementptr inbounds %struct.su3_vector* %36, i32 0, i32 0
  %arrayidx36 = getelementptr inbounds [3 x %struct.complex]* %c35, i32 0, i64 2
  %imag37 = getelementptr inbounds %struct.complex* %arrayidx36, i32 0, i32 1
  %37 = load double* %imag37, align 8
  store double %37, double* %ai, align 8
  %38 = load %struct.su3_vector** %b.addr, align 8
  %c38 = getelementptr inbounds %struct.su3_vector* %38, i32 0, i32 0
  %arrayidx39 = getelementptr inbounds [3 x %struct.complex]* %c38, i32 0, i64 2
  %real40 = getelementptr inbounds %struct.complex* %arrayidx39, i32 0, i32 0
  %39 = load double* %real40, align 8
  store double %39, double* %br, align 8
  %40 = load %struct.su3_vector** %b.addr, align 8
  %c41 = getelementptr inbounds %struct.su3_vector* %40, i32 0, i32 0
  %arrayidx42 = getelementptr inbounds [3 x %struct.complex]* %c41, i32 0, i64 2
  %imag43 = getelementptr inbounds %struct.complex* %arrayidx42, i32 0, i32 1
  %41 = load double* %imag43, align 8
  store double %41, double* %bi, align 8
  %42 = load double* %ar, align 8
  %43 = load double* %br, align 8
  %mul44 = fmul double %42, %43
  %44 = load double* %ai, align 8
  %45 = load double* %bi, align 8
  %mul45 = fmul double %44, %45
  %add46 = fadd double %mul44, %mul45
  %46 = load double* %cr, align 8
  %add47 = fadd double %46, %add46
  store double %add47, double* %cr, align 8
  %47 = load double* %ar, align 8
  %48 = load double* %bi, align 8
  %mul48 = fmul double %47, %48
  %49 = load double* %ai, align 8
  %50 = load double* %br, align 8
  %mul49 = fmul double %49, %50
  %sub50 = fsub double %mul48, %mul49
  %51 = load double* %ci, align 8
  %add51 = fadd double %51, %sub50
  store double %add51, double* %ci, align 8
  %52 = load double* %cr, align 8
  %real52 = getelementptr inbounds %struct.complex* %cc, i32 0, i32 0
  store double %52, double* %real52, align 8
  %53 = load double* %ci, align 8
  %imag53 = getelementptr inbounds %struct.complex* %cc, i32 0, i32 1
  store double %53, double* %imag53, align 8
  %54 = bitcast %struct.complex* %retval to i8*
  %55 = bitcast %struct.complex* %cc to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %54, i8* %55, i64 16, i32 8, i1 false)
  %56 = bitcast %struct.complex* %retval to { double, double }*
  %57 = load { double, double }* %56, align 1
  ret { double, double } %57
}

; Function Attrs: nounwind uwtable
define internal double @su3_rdot(%struct.su3_vector* %a, %struct.su3_vector* %b) #0 {
entry:
  %a.addr = alloca %struct.su3_vector*, align 8
  %b.addr = alloca %struct.su3_vector*, align 8
  %temp1 = alloca double, align 8
  %temp2 = alloca double, align 8
  store %struct.su3_vector* %a, %struct.su3_vector** %a.addr, align 8
  store %struct.su3_vector* %b, %struct.su3_vector** %b.addr, align 8
  %0 = load %struct.su3_vector** %a.addr, align 8
  %c = getelementptr inbounds %struct.su3_vector* %0, i32 0, i32 0
  %arrayidx = getelementptr inbounds [3 x %struct.complex]* %c, i32 0, i64 0
  %real = getelementptr inbounds %struct.complex* %arrayidx, i32 0, i32 0
  %1 = load double* %real, align 8
  %2 = load %struct.su3_vector** %b.addr, align 8
  %c1 = getelementptr inbounds %struct.su3_vector* %2, i32 0, i32 0
  %arrayidx2 = getelementptr inbounds [3 x %struct.complex]* %c1, i32 0, i64 0
  %real3 = getelementptr inbounds %struct.complex* %arrayidx2, i32 0, i32 0
  %3 = load double* %real3, align 8
  %mul = fmul double %1, %3
  store double %mul, double* %temp2, align 8
  %4 = load %struct.su3_vector** %a.addr, align 8
  %c4 = getelementptr inbounds %struct.su3_vector* %4, i32 0, i32 0
  %arrayidx5 = getelementptr inbounds [3 x %struct.complex]* %c4, i32 0, i64 0
  %imag = getelementptr inbounds %struct.complex* %arrayidx5, i32 0, i32 1
  %5 = load double* %imag, align 8
  %6 = load %struct.su3_vector** %b.addr, align 8
  %c6 = getelementptr inbounds %struct.su3_vector* %6, i32 0, i32 0
  %arrayidx7 = getelementptr inbounds [3 x %struct.complex]* %c6, i32 0, i64 0
  %imag8 = getelementptr inbounds %struct.complex* %arrayidx7, i32 0, i32 1
  %7 = load double* %imag8, align 8
  %mul9 = fmul double %5, %7
  store double %mul9, double* %temp1, align 8
  %8 = load double* %temp1, align 8
  %9 = load double* %temp2, align 8
  %add = fadd double %9, %8
  store double %add, double* %temp2, align 8
  %10 = load %struct.su3_vector** %a.addr, align 8
  %c10 = getelementptr inbounds %struct.su3_vector* %10, i32 0, i32 0
  %arrayidx11 = getelementptr inbounds [3 x %struct.complex]* %c10, i32 0, i64 1
  %real12 = getelementptr inbounds %struct.complex* %arrayidx11, i32 0, i32 0
  %11 = load double* %real12, align 8
  %12 = load %struct.su3_vector** %b.addr, align 8
  %c13 = getelementptr inbounds %struct.su3_vector* %12, i32 0, i32 0
  %arrayidx14 = getelementptr inbounds [3 x %struct.complex]* %c13, i32 0, i64 1
  %real15 = getelementptr inbounds %struct.complex* %arrayidx14, i32 0, i32 0
  %13 = load double* %real15, align 8
  %mul16 = fmul double %11, %13
  store double %mul16, double* %temp1, align 8
  %14 = load double* %temp1, align 8
  %15 = load double* %temp2, align 8
  %add17 = fadd double %15, %14
  store double %add17, double* %temp2, align 8
  %16 = load %struct.su3_vector** %a.addr, align 8
  %c18 = getelementptr inbounds %struct.su3_vector* %16, i32 0, i32 0
  %arrayidx19 = getelementptr inbounds [3 x %struct.complex]* %c18, i32 0, i64 1
  %imag20 = getelementptr inbounds %struct.complex* %arrayidx19, i32 0, i32 1
  %17 = load double* %imag20, align 8
  %18 = load %struct.su3_vector** %b.addr, align 8
  %c21 = getelementptr inbounds %struct.su3_vector* %18, i32 0, i32 0
  %arrayidx22 = getelementptr inbounds [3 x %struct.complex]* %c21, i32 0, i64 1
  %imag23 = getelementptr inbounds %struct.complex* %arrayidx22, i32 0, i32 1
  %19 = load double* %imag23, align 8
  %mul24 = fmul double %17, %19
  store double %mul24, double* %temp1, align 8
  %20 = load double* %temp1, align 8
  %21 = load double* %temp2, align 8
  %add25 = fadd double %21, %20
  store double %add25, double* %temp2, align 8
  %22 = load %struct.su3_vector** %a.addr, align 8
  %c26 = getelementptr inbounds %struct.su3_vector* %22, i32 0, i32 0
  %arrayidx27 = getelementptr inbounds [3 x %struct.complex]* %c26, i32 0, i64 2
  %real28 = getelementptr inbounds %struct.complex* %arrayidx27, i32 0, i32 0
  %23 = load double* %real28, align 8
  %24 = load %struct.su3_vector** %b.addr, align 8
  %c29 = getelementptr inbounds %struct.su3_vector* %24, i32 0, i32 0
  %arrayidx30 = getelementptr inbounds [3 x %struct.complex]* %c29, i32 0, i64 2
  %real31 = getelementptr inbounds %struct.complex* %arrayidx30, i32 0, i32 0
  %25 = load double* %real31, align 8
  %mul32 = fmul double %23, %25
  store double %mul32, double* %temp1, align 8
  %26 = load double* %temp1, align 8
  %27 = load double* %temp2, align 8
  %add33 = fadd double %27, %26
  store double %add33, double* %temp2, align 8
  %28 = load %struct.su3_vector** %a.addr, align 8
  %c34 = getelementptr inbounds %struct.su3_vector* %28, i32 0, i32 0
  %arrayidx35 = getelementptr inbounds [3 x %struct.complex]* %c34, i32 0, i64 2
  %imag36 = getelementptr inbounds %struct.complex* %arrayidx35, i32 0, i32 1
  %29 = load double* %imag36, align 8
  %30 = load %struct.su3_vector** %b.addr, align 8
  %c37 = getelementptr inbounds %struct.su3_vector* %30, i32 0, i32 0
  %arrayidx38 = getelementptr inbounds [3 x %struct.complex]* %c37, i32 0, i64 2
  %imag39 = getelementptr inbounds %struct.complex* %arrayidx38, i32 0, i32 1
  %31 = load double* %imag39, align 8
  %mul40 = fmul double %29, %31
  store double %mul40, double* %temp1, align 8
  %32 = load double* %temp1, align 8
  %33 = load double* %temp2, align 8
  %add41 = fadd double %33, %32
  store double %add41, double* %temp2, align 8
  %34 = load double* %temp2, align 8
  ret double %34
}

; Function Attrs: nounwind uwtable
define internal void @su3_projector(%struct.su3_vector* %a, %struct.su3_vector* %b, %struct.su3_matrix* %c) #0 {
entry:
  %a.addr = alloca %struct.su3_vector*, align 8
  %b.addr = alloca %struct.su3_vector*, align 8
  %c.addr = alloca %struct.su3_matrix*, align 8
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %tmp = alloca double, align 8
  %tmp2 = alloca double, align 8
  store %struct.su3_vector* %a, %struct.su3_vector** %a.addr, align 8
  store %struct.su3_vector* %b, %struct.su3_vector** %b.addr, align 8
  store %struct.su3_matrix* %c, %struct.su3_matrix** %c.addr, align 8
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc47, %entry
  %0 = load i32* %i, align 4
  %cmp = icmp slt i32 %0, 3
  br i1 %cmp, label %for.body, label %for.end49

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %j, align 4
  br label %for.cond2

for.cond2:                                        ; preds = %for.inc, %for.body
  %1 = load i32* %j, align 4
  %cmp3 = icmp slt i32 %1, 3
  br i1 %cmp3, label %for.body4, label %for.end

for.body4:                                        ; preds = %for.cond2
  %2 = load i32* %i, align 4
  %idxprom = sext i32 %2 to i64
  %3 = load %struct.su3_vector** %a.addr, align 8
  %c5 = getelementptr inbounds %struct.su3_vector* %3, i32 0, i32 0
  %arrayidx = getelementptr inbounds [3 x %struct.complex]* %c5, i32 0, i64 %idxprom
  %real = getelementptr inbounds %struct.complex* %arrayidx, i32 0, i32 0
  %4 = load double* %real, align 8
  %5 = load i32* %j, align 4
  %idxprom6 = sext i32 %5 to i64
  %6 = load %struct.su3_vector** %b.addr, align 8
  %c7 = getelementptr inbounds %struct.su3_vector* %6, i32 0, i32 0
  %arrayidx8 = getelementptr inbounds [3 x %struct.complex]* %c7, i32 0, i64 %idxprom6
  %real9 = getelementptr inbounds %struct.complex* %arrayidx8, i32 0, i32 0
  %7 = load double* %real9, align 8
  %mul = fmul double %4, %7
  store double %mul, double* %tmp2, align 8
  %8 = load i32* %i, align 4
  %idxprom10 = sext i32 %8 to i64
  %9 = load %struct.su3_vector** %a.addr, align 8
  %c11 = getelementptr inbounds %struct.su3_vector* %9, i32 0, i32 0
  %arrayidx12 = getelementptr inbounds [3 x %struct.complex]* %c11, i32 0, i64 %idxprom10
  %imag = getelementptr inbounds %struct.complex* %arrayidx12, i32 0, i32 1
  %10 = load double* %imag, align 8
  %11 = load i32* %j, align 4
  %idxprom13 = sext i32 %11 to i64
  %12 = load %struct.su3_vector** %b.addr, align 8
  %c14 = getelementptr inbounds %struct.su3_vector* %12, i32 0, i32 0
  %arrayidx15 = getelementptr inbounds [3 x %struct.complex]* %c14, i32 0, i64 %idxprom13
  %imag16 = getelementptr inbounds %struct.complex* %arrayidx15, i32 0, i32 1
  %13 = load double* %imag16, align 8
  %mul17 = fmul double %10, %13
  store double %mul17, double* %tmp, align 8
  %14 = load double* %tmp, align 8
  %15 = load double* %tmp2, align 8
  %add = fadd double %14, %15
  %16 = load i32* %j, align 4
  %idxprom18 = sext i32 %16 to i64
  %17 = load i32* %i, align 4
  %idxprom19 = sext i32 %17 to i64
  %18 = load %struct.su3_matrix** %c.addr, align 8
  %e = getelementptr inbounds %struct.su3_matrix* %18, i32 0, i32 0
  %arrayidx20 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e, i32 0, i64 %idxprom19
  %arrayidx21 = getelementptr inbounds [3 x %struct.complex]* %arrayidx20, i32 0, i64 %idxprom18
  %real22 = getelementptr inbounds %struct.complex* %arrayidx21, i32 0, i32 0
  store double %add, double* %real22, align 8
  %19 = load i32* %i, align 4
  %idxprom23 = sext i32 %19 to i64
  %20 = load %struct.su3_vector** %a.addr, align 8
  %c24 = getelementptr inbounds %struct.su3_vector* %20, i32 0, i32 0
  %arrayidx25 = getelementptr inbounds [3 x %struct.complex]* %c24, i32 0, i64 %idxprom23
  %real26 = getelementptr inbounds %struct.complex* %arrayidx25, i32 0, i32 0
  %21 = load double* %real26, align 8
  %22 = load i32* %j, align 4
  %idxprom27 = sext i32 %22 to i64
  %23 = load %struct.su3_vector** %b.addr, align 8
  %c28 = getelementptr inbounds %struct.su3_vector* %23, i32 0, i32 0
  %arrayidx29 = getelementptr inbounds [3 x %struct.complex]* %c28, i32 0, i64 %idxprom27
  %imag30 = getelementptr inbounds %struct.complex* %arrayidx29, i32 0, i32 1
  %24 = load double* %imag30, align 8
  %mul31 = fmul double %21, %24
  store double %mul31, double* %tmp2, align 8
  %25 = load i32* %i, align 4
  %idxprom32 = sext i32 %25 to i64
  %26 = load %struct.su3_vector** %a.addr, align 8
  %c33 = getelementptr inbounds %struct.su3_vector* %26, i32 0, i32 0
  %arrayidx34 = getelementptr inbounds [3 x %struct.complex]* %c33, i32 0, i64 %idxprom32
  %imag35 = getelementptr inbounds %struct.complex* %arrayidx34, i32 0, i32 1
  %27 = load double* %imag35, align 8
  %28 = load i32* %j, align 4
  %idxprom36 = sext i32 %28 to i64
  %29 = load %struct.su3_vector** %b.addr, align 8
  %c37 = getelementptr inbounds %struct.su3_vector* %29, i32 0, i32 0
  %arrayidx38 = getelementptr inbounds [3 x %struct.complex]* %c37, i32 0, i64 %idxprom36
  %real39 = getelementptr inbounds %struct.complex* %arrayidx38, i32 0, i32 0
  %30 = load double* %real39, align 8
  %mul40 = fmul double %27, %30
  store double %mul40, double* %tmp, align 8
  %31 = load double* %tmp, align 8
  %32 = load double* %tmp2, align 8
  %sub = fsub double %31, %32
  %33 = load i32* %j, align 4
  %idxprom41 = sext i32 %33 to i64
  %34 = load i32* %i, align 4
  %idxprom42 = sext i32 %34 to i64
  %35 = load %struct.su3_matrix** %c.addr, align 8
  %e43 = getelementptr inbounds %struct.su3_matrix* %35, i32 0, i32 0
  %arrayidx44 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e43, i32 0, i64 %idxprom42
  %arrayidx45 = getelementptr inbounds [3 x %struct.complex]* %arrayidx44, i32 0, i64 %idxprom41
  %imag46 = getelementptr inbounds %struct.complex* %arrayidx45, i32 0, i32 1
  store double %sub, double* %imag46, align 8
  br label %for.inc

for.inc:                                          ; preds = %for.body4
  %36 = load i32* %j, align 4
  %inc = add nsw i32 %36, 1
  store i32 %inc, i32* %j, align 4
  br label %for.cond2

for.end:                                          ; preds = %for.cond2
  br label %for.inc47

for.inc47:                                        ; preds = %for.end
  %37 = load i32* %i, align 4
  %inc48 = add nsw i32 %37, 1
  store i32 %inc48, i32* %i, align 4
  br label %for.cond

for.end49:                                        ; preds = %for.cond
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @su3mat_copy(%struct.su3_matrix* %a, %struct.su3_matrix* %b) #0 {
entry:
  %a.addr = alloca %struct.su3_matrix*, align 8
  %b.addr = alloca %struct.su3_matrix*, align 8
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  store %struct.su3_matrix* %a, %struct.su3_matrix** %a.addr, align 8
  store %struct.su3_matrix* %b, %struct.su3_matrix** %b.addr, align 8
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc23, %entry
  %0 = load i32* %i, align 4
  %cmp = icmp slt i32 %0, 3
  br i1 %cmp, label %for.body, label %for.end25

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %j, align 4
  br label %for.cond1

for.cond1:                                        ; preds = %for.inc, %for.body
  %1 = load i32* %j, align 4
  %cmp2 = icmp slt i32 %1, 3
  br i1 %cmp2, label %for.body3, label %for.end

for.body3:                                        ; preds = %for.cond1
  %2 = load i32* %j, align 4
  %idxprom = sext i32 %2 to i64
  %3 = load i32* %i, align 4
  %idxprom4 = sext i32 %3 to i64
  %4 = load %struct.su3_matrix** %a.addr, align 8
  %e = getelementptr inbounds %struct.su3_matrix* %4, i32 0, i32 0
  %arrayidx = getelementptr inbounds [3 x [3 x %struct.complex]]* %e, i32 0, i64 %idxprom4
  %arrayidx5 = getelementptr inbounds [3 x %struct.complex]* %arrayidx, i32 0, i64 %idxprom
  %real = getelementptr inbounds %struct.complex* %arrayidx5, i32 0, i32 0
  %5 = load double* %real, align 8
  %6 = load i32* %j, align 4
  %idxprom6 = sext i32 %6 to i64
  %7 = load i32* %i, align 4
  %idxprom7 = sext i32 %7 to i64
  %8 = load %struct.su3_matrix** %b.addr, align 8
  %e8 = getelementptr inbounds %struct.su3_matrix* %8, i32 0, i32 0
  %arrayidx9 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e8, i32 0, i64 %idxprom7
  %arrayidx10 = getelementptr inbounds [3 x %struct.complex]* %arrayidx9, i32 0, i64 %idxprom6
  %real11 = getelementptr inbounds %struct.complex* %arrayidx10, i32 0, i32 0
  store double %5, double* %real11, align 8
  %9 = load i32* %j, align 4
  %idxprom12 = sext i32 %9 to i64
  %10 = load i32* %i, align 4
  %idxprom13 = sext i32 %10 to i64
  %11 = load %struct.su3_matrix** %a.addr, align 8
  %e14 = getelementptr inbounds %struct.su3_matrix* %11, i32 0, i32 0
  %arrayidx15 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e14, i32 0, i64 %idxprom13
  %arrayidx16 = getelementptr inbounds [3 x %struct.complex]* %arrayidx15, i32 0, i64 %idxprom12
  %imag = getelementptr inbounds %struct.complex* %arrayidx16, i32 0, i32 1
  %12 = load double* %imag, align 8
  %13 = load i32* %j, align 4
  %idxprom17 = sext i32 %13 to i64
  %14 = load i32* %i, align 4
  %idxprom18 = sext i32 %14 to i64
  %15 = load %struct.su3_matrix** %b.addr, align 8
  %e19 = getelementptr inbounds %struct.su3_matrix* %15, i32 0, i32 0
  %arrayidx20 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e19, i32 0, i64 %idxprom18
  %arrayidx21 = getelementptr inbounds [3 x %struct.complex]* %arrayidx20, i32 0, i64 %idxprom17
  %imag22 = getelementptr inbounds %struct.complex* %arrayidx21, i32 0, i32 1
  store double %12, double* %imag22, align 8
  br label %for.inc

for.inc:                                          ; preds = %for.body3
  %16 = load i32* %j, align 4
  %inc = add nsw i32 %16, 1
  store i32 %inc, i32* %j, align 4
  br label %for.cond1

for.end:                                          ; preds = %for.cond1
  br label %for.inc23

for.inc23:                                        ; preds = %for.end
  %17 = load i32* %i, align 4
  %inc24 = add nsw i32 %17, 1
  store i32 %inc24, i32* %i, align 4
  br label %for.cond

for.end25:                                        ; preds = %for.cond
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @sub_su3_matrix(%struct.su3_matrix* %a, %struct.su3_matrix* %b, %struct.su3_matrix* %c) #0 {
entry:
  %a.addr = alloca %struct.su3_matrix*, align 8
  %b.addr = alloca %struct.su3_matrix*, align 8
  %c.addr = alloca %struct.su3_matrix*, align 8
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  store %struct.su3_matrix* %a, %struct.su3_matrix** %a.addr, align 8
  store %struct.su3_matrix* %b, %struct.su3_matrix** %b.addr, align 8
  store %struct.su3_matrix* %c, %struct.su3_matrix** %c.addr, align 8
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc36, %entry
  %0 = load i32* %i, align 4
  %cmp = icmp slt i32 %0, 3
  br i1 %cmp, label %for.body, label %for.end38

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %j, align 4
  br label %for.cond1

for.cond1:                                        ; preds = %for.inc, %for.body
  %1 = load i32* %j, align 4
  %cmp2 = icmp slt i32 %1, 3
  br i1 %cmp2, label %for.body3, label %for.end

for.body3:                                        ; preds = %for.cond1
  %2 = load i32* %j, align 4
  %idxprom = sext i32 %2 to i64
  %3 = load i32* %i, align 4
  %idxprom4 = sext i32 %3 to i64
  %4 = load %struct.su3_matrix** %a.addr, align 8
  %e = getelementptr inbounds %struct.su3_matrix* %4, i32 0, i32 0
  %arrayidx = getelementptr inbounds [3 x [3 x %struct.complex]]* %e, i32 0, i64 %idxprom4
  %arrayidx5 = getelementptr inbounds [3 x %struct.complex]* %arrayidx, i32 0, i64 %idxprom
  %real = getelementptr inbounds %struct.complex* %arrayidx5, i32 0, i32 0
  %5 = load double* %real, align 8
  %6 = load i32* %j, align 4
  %idxprom6 = sext i32 %6 to i64
  %7 = load i32* %i, align 4
  %idxprom7 = sext i32 %7 to i64
  %8 = load %struct.su3_matrix** %b.addr, align 8
  %e8 = getelementptr inbounds %struct.su3_matrix* %8, i32 0, i32 0
  %arrayidx9 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e8, i32 0, i64 %idxprom7
  %arrayidx10 = getelementptr inbounds [3 x %struct.complex]* %arrayidx9, i32 0, i64 %idxprom6
  %real11 = getelementptr inbounds %struct.complex* %arrayidx10, i32 0, i32 0
  %9 = load double* %real11, align 8
  %sub = fsub double %5, %9
  %10 = load i32* %j, align 4
  %idxprom12 = sext i32 %10 to i64
  %11 = load i32* %i, align 4
  %idxprom13 = sext i32 %11 to i64
  %12 = load %struct.su3_matrix** %c.addr, align 8
  %e14 = getelementptr inbounds %struct.su3_matrix* %12, i32 0, i32 0
  %arrayidx15 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e14, i32 0, i64 %idxprom13
  %arrayidx16 = getelementptr inbounds [3 x %struct.complex]* %arrayidx15, i32 0, i64 %idxprom12
  %real17 = getelementptr inbounds %struct.complex* %arrayidx16, i32 0, i32 0
  store double %sub, double* %real17, align 8
  %13 = load i32* %j, align 4
  %idxprom18 = sext i32 %13 to i64
  %14 = load i32* %i, align 4
  %idxprom19 = sext i32 %14 to i64
  %15 = load %struct.su3_matrix** %a.addr, align 8
  %e20 = getelementptr inbounds %struct.su3_matrix* %15, i32 0, i32 0
  %arrayidx21 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e20, i32 0, i64 %idxprom19
  %arrayidx22 = getelementptr inbounds [3 x %struct.complex]* %arrayidx21, i32 0, i64 %idxprom18
  %imag = getelementptr inbounds %struct.complex* %arrayidx22, i32 0, i32 1
  %16 = load double* %imag, align 8
  %17 = load i32* %j, align 4
  %idxprom23 = sext i32 %17 to i64
  %18 = load i32* %i, align 4
  %idxprom24 = sext i32 %18 to i64
  %19 = load %struct.su3_matrix** %b.addr, align 8
  %e25 = getelementptr inbounds %struct.su3_matrix* %19, i32 0, i32 0
  %arrayidx26 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e25, i32 0, i64 %idxprom24
  %arrayidx27 = getelementptr inbounds [3 x %struct.complex]* %arrayidx26, i32 0, i64 %idxprom23
  %imag28 = getelementptr inbounds %struct.complex* %arrayidx27, i32 0, i32 1
  %20 = load double* %imag28, align 8
  %sub29 = fsub double %16, %20
  %21 = load i32* %j, align 4
  %idxprom30 = sext i32 %21 to i64
  %22 = load i32* %i, align 4
  %idxprom31 = sext i32 %22 to i64
  %23 = load %struct.su3_matrix** %c.addr, align 8
  %e32 = getelementptr inbounds %struct.su3_matrix* %23, i32 0, i32 0
  %arrayidx33 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e32, i32 0, i64 %idxprom31
  %arrayidx34 = getelementptr inbounds [3 x %struct.complex]* %arrayidx33, i32 0, i64 %idxprom30
  %imag35 = getelementptr inbounds %struct.complex* %arrayidx34, i32 0, i32 1
  store double %sub29, double* %imag35, align 8
  br label %for.inc

for.inc:                                          ; preds = %for.body3
  %24 = load i32* %j, align 4
  %inc = add nsw i32 %24, 1
  store i32 %inc, i32* %j, align 4
  br label %for.cond1

for.end:                                          ; preds = %for.cond1
  br label %for.inc36

for.inc36:                                        ; preds = %for.end
  %25 = load i32* %i, align 4
  %inc37 = add nsw i32 %25, 1
  store i32 %inc37, i32* %i, align 4
  br label %for.cond

for.end38:                                        ; preds = %for.cond
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @sub_su3_vector(%struct.su3_vector* %a, %struct.su3_vector* %b, %struct.su3_vector* %c) #0 {
entry:
  %a.addr = alloca %struct.su3_vector*, align 8
  %b.addr = alloca %struct.su3_vector*, align 8
  %c.addr = alloca %struct.su3_vector*, align 8
  %i = alloca i32, align 4
  store %struct.su3_vector* %a, %struct.su3_vector** %a.addr, align 8
  store %struct.su3_vector* %b, %struct.su3_vector** %b.addr, align 8
  store %struct.su3_vector* %c, %struct.su3_vector** %c.addr, align 8
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32* %i, align 4
  %cmp = icmp slt i32 %0, 3
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %1 = load i32* %i, align 4
  %idxprom = sext i32 %1 to i64
  %2 = load %struct.su3_vector** %a.addr, align 8
  %c1 = getelementptr inbounds %struct.su3_vector* %2, i32 0, i32 0
  %arrayidx = getelementptr inbounds [3 x %struct.complex]* %c1, i32 0, i64 %idxprom
  %real = getelementptr inbounds %struct.complex* %arrayidx, i32 0, i32 0
  %3 = load double* %real, align 8
  %4 = load i32* %i, align 4
  %idxprom2 = sext i32 %4 to i64
  %5 = load %struct.su3_vector** %b.addr, align 8
  %c3 = getelementptr inbounds %struct.su3_vector* %5, i32 0, i32 0
  %arrayidx4 = getelementptr inbounds [3 x %struct.complex]* %c3, i32 0, i64 %idxprom2
  %real5 = getelementptr inbounds %struct.complex* %arrayidx4, i32 0, i32 0
  %6 = load double* %real5, align 8
  %sub = fsub double %3, %6
  %7 = load i32* %i, align 4
  %idxprom6 = sext i32 %7 to i64
  %8 = load %struct.su3_vector** %c.addr, align 8
  %c7 = getelementptr inbounds %struct.su3_vector* %8, i32 0, i32 0
  %arrayidx8 = getelementptr inbounds [3 x %struct.complex]* %c7, i32 0, i64 %idxprom6
  %real9 = getelementptr inbounds %struct.complex* %arrayidx8, i32 0, i32 0
  store double %sub, double* %real9, align 8
  %9 = load i32* %i, align 4
  %idxprom10 = sext i32 %9 to i64
  %10 = load %struct.su3_vector** %a.addr, align 8
  %c11 = getelementptr inbounds %struct.su3_vector* %10, i32 0, i32 0
  %arrayidx12 = getelementptr inbounds [3 x %struct.complex]* %c11, i32 0, i64 %idxprom10
  %imag = getelementptr inbounds %struct.complex* %arrayidx12, i32 0, i32 1
  %11 = load double* %imag, align 8
  %12 = load i32* %i, align 4
  %idxprom13 = sext i32 %12 to i64
  %13 = load %struct.su3_vector** %b.addr, align 8
  %c14 = getelementptr inbounds %struct.su3_vector* %13, i32 0, i32 0
  %arrayidx15 = getelementptr inbounds [3 x %struct.complex]* %c14, i32 0, i64 %idxprom13
  %imag16 = getelementptr inbounds %struct.complex* %arrayidx15, i32 0, i32 1
  %14 = load double* %imag16, align 8
  %sub17 = fsub double %11, %14
  %15 = load i32* %i, align 4
  %idxprom18 = sext i32 %15 to i64
  %16 = load %struct.su3_vector** %c.addr, align 8
  %c19 = getelementptr inbounds %struct.su3_vector* %16, i32 0, i32 0
  %arrayidx20 = getelementptr inbounds [3 x %struct.complex]* %c19, i32 0, i64 %idxprom18
  %imag21 = getelementptr inbounds %struct.complex* %arrayidx20, i32 0, i32 1
  store double %sub17, double* %imag21, align 8
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %17 = load i32* %i, align 4
  %inc = add nsw i32 %17, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  ret void
}

; Function Attrs: nounwind uwtable
define internal { double, double } @trace_su3(%struct.su3_matrix* %a) #0 {
entry:
  %retval = alloca %struct.complex, align 8
  %a.addr = alloca %struct.su3_matrix*, align 8
  %t1 = alloca %struct.complex, align 8
  %t2 = alloca %struct.complex, align 8
  store %struct.su3_matrix* %a, %struct.su3_matrix** %a.addr, align 8
  %0 = load %struct.su3_matrix** %a.addr, align 8
  %e = getelementptr inbounds %struct.su3_matrix* %0, i32 0, i32 0
  %arrayidx = getelementptr inbounds [3 x [3 x %struct.complex]]* %e, i32 0, i64 0
  %arrayidx1 = getelementptr inbounds [3 x %struct.complex]* %arrayidx, i32 0, i64 0
  %real = getelementptr inbounds %struct.complex* %arrayidx1, i32 0, i32 0
  %1 = load double* %real, align 8
  %2 = load %struct.su3_matrix** %a.addr, align 8
  %e2 = getelementptr inbounds %struct.su3_matrix* %2, i32 0, i32 0
  %arrayidx3 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e2, i32 0, i64 1
  %arrayidx4 = getelementptr inbounds [3 x %struct.complex]* %arrayidx3, i32 0, i64 1
  %real5 = getelementptr inbounds %struct.complex* %arrayidx4, i32 0, i32 0
  %3 = load double* %real5, align 8
  %add = fadd double %1, %3
  %real6 = getelementptr inbounds %struct.complex* %t1, i32 0, i32 0
  store double %add, double* %real6, align 8
  %4 = load %struct.su3_matrix** %a.addr, align 8
  %e7 = getelementptr inbounds %struct.su3_matrix* %4, i32 0, i32 0
  %arrayidx8 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e7, i32 0, i64 0
  %arrayidx9 = getelementptr inbounds [3 x %struct.complex]* %arrayidx8, i32 0, i64 0
  %imag = getelementptr inbounds %struct.complex* %arrayidx9, i32 0, i32 1
  %5 = load double* %imag, align 8
  %6 = load %struct.su3_matrix** %a.addr, align 8
  %e10 = getelementptr inbounds %struct.su3_matrix* %6, i32 0, i32 0
  %arrayidx11 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e10, i32 0, i64 1
  %arrayidx12 = getelementptr inbounds [3 x %struct.complex]* %arrayidx11, i32 0, i64 1
  %imag13 = getelementptr inbounds %struct.complex* %arrayidx12, i32 0, i32 1
  %7 = load double* %imag13, align 8
  %add14 = fadd double %5, %7
  %imag15 = getelementptr inbounds %struct.complex* %t1, i32 0, i32 1
  store double %add14, double* %imag15, align 8
  %real16 = getelementptr inbounds %struct.complex* %t1, i32 0, i32 0
  %8 = load double* %real16, align 8
  %9 = load %struct.su3_matrix** %a.addr, align 8
  %e17 = getelementptr inbounds %struct.su3_matrix* %9, i32 0, i32 0
  %arrayidx18 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e17, i32 0, i64 2
  %arrayidx19 = getelementptr inbounds [3 x %struct.complex]* %arrayidx18, i32 0, i64 2
  %real20 = getelementptr inbounds %struct.complex* %arrayidx19, i32 0, i32 0
  %10 = load double* %real20, align 8
  %add21 = fadd double %8, %10
  %real22 = getelementptr inbounds %struct.complex* %t2, i32 0, i32 0
  store double %add21, double* %real22, align 8
  %imag23 = getelementptr inbounds %struct.complex* %t1, i32 0, i32 1
  %11 = load double* %imag23, align 8
  %12 = load %struct.su3_matrix** %a.addr, align 8
  %e24 = getelementptr inbounds %struct.su3_matrix* %12, i32 0, i32 0
  %arrayidx25 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e24, i32 0, i64 2
  %arrayidx26 = getelementptr inbounds [3 x %struct.complex]* %arrayidx25, i32 0, i64 2
  %imag27 = getelementptr inbounds %struct.complex* %arrayidx26, i32 0, i32 1
  %13 = load double* %imag27, align 8
  %add28 = fadd double %11, %13
  %imag29 = getelementptr inbounds %struct.complex* %t2, i32 0, i32 1
  store double %add28, double* %imag29, align 8
  %14 = bitcast %struct.complex* %retval to i8*
  %15 = bitcast %struct.complex* %t2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %14, i8* %15, i64 16, i32 8, i1 false)
  %16 = bitcast %struct.complex* %retval to { double, double }*
  %17 = load { double, double }* %16, align 1
  ret { double, double } %17
}

; Function Attrs: nounwind uwtable
define internal void @uncompress_anti_hermitian(%struct.anti_hermitmat* %mat_antihermit, %struct.su3_matrix* %mat_su3) #0 {
entry:
  %mat_antihermit.addr = alloca %struct.anti_hermitmat*, align 8
  %mat_su3.addr = alloca %struct.su3_matrix*, align 8
  %temp1 = alloca double, align 8
  store %struct.anti_hermitmat* %mat_antihermit, %struct.anti_hermitmat** %mat_antihermit.addr, align 8
  store %struct.su3_matrix* %mat_su3, %struct.su3_matrix** %mat_su3.addr, align 8
  %0 = load %struct.anti_hermitmat** %mat_antihermit.addr, align 8
  %m00im = getelementptr inbounds %struct.anti_hermitmat* %0, i32 0, i32 3
  %1 = load double* %m00im, align 8
  %2 = load %struct.su3_matrix** %mat_su3.addr, align 8
  %e = getelementptr inbounds %struct.su3_matrix* %2, i32 0, i32 0
  %arrayidx = getelementptr inbounds [3 x [3 x %struct.complex]]* %e, i32 0, i64 0
  %arrayidx1 = getelementptr inbounds [3 x %struct.complex]* %arrayidx, i32 0, i64 0
  %imag = getelementptr inbounds %struct.complex* %arrayidx1, i32 0, i32 1
  store double %1, double* %imag, align 8
  %3 = load %struct.su3_matrix** %mat_su3.addr, align 8
  %e2 = getelementptr inbounds %struct.su3_matrix* %3, i32 0, i32 0
  %arrayidx3 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e2, i32 0, i64 0
  %arrayidx4 = getelementptr inbounds [3 x %struct.complex]* %arrayidx3, i32 0, i64 0
  %real = getelementptr inbounds %struct.complex* %arrayidx4, i32 0, i32 0
  store double 0.000000e+00, double* %real, align 8
  %4 = load %struct.anti_hermitmat** %mat_antihermit.addr, align 8
  %m11im = getelementptr inbounds %struct.anti_hermitmat* %4, i32 0, i32 4
  %5 = load double* %m11im, align 8
  %6 = load %struct.su3_matrix** %mat_su3.addr, align 8
  %e5 = getelementptr inbounds %struct.su3_matrix* %6, i32 0, i32 0
  %arrayidx6 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e5, i32 0, i64 1
  %arrayidx7 = getelementptr inbounds [3 x %struct.complex]* %arrayidx6, i32 0, i64 1
  %imag8 = getelementptr inbounds %struct.complex* %arrayidx7, i32 0, i32 1
  store double %5, double* %imag8, align 8
  %7 = load %struct.su3_matrix** %mat_su3.addr, align 8
  %e9 = getelementptr inbounds %struct.su3_matrix* %7, i32 0, i32 0
  %arrayidx10 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e9, i32 0, i64 1
  %arrayidx11 = getelementptr inbounds [3 x %struct.complex]* %arrayidx10, i32 0, i64 1
  %real12 = getelementptr inbounds %struct.complex* %arrayidx11, i32 0, i32 0
  store double 0.000000e+00, double* %real12, align 8
  %8 = load %struct.anti_hermitmat** %mat_antihermit.addr, align 8
  %m22im = getelementptr inbounds %struct.anti_hermitmat* %8, i32 0, i32 5
  %9 = load double* %m22im, align 8
  %10 = load %struct.su3_matrix** %mat_su3.addr, align 8
  %e13 = getelementptr inbounds %struct.su3_matrix* %10, i32 0, i32 0
  %arrayidx14 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e13, i32 0, i64 2
  %arrayidx15 = getelementptr inbounds [3 x %struct.complex]* %arrayidx14, i32 0, i64 2
  %imag16 = getelementptr inbounds %struct.complex* %arrayidx15, i32 0, i32 1
  store double %9, double* %imag16, align 8
  %11 = load %struct.su3_matrix** %mat_su3.addr, align 8
  %e17 = getelementptr inbounds %struct.su3_matrix* %11, i32 0, i32 0
  %arrayidx18 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e17, i32 0, i64 2
  %arrayidx19 = getelementptr inbounds [3 x %struct.complex]* %arrayidx18, i32 0, i64 2
  %real20 = getelementptr inbounds %struct.complex* %arrayidx19, i32 0, i32 0
  store double 0.000000e+00, double* %real20, align 8
  %12 = load %struct.anti_hermitmat** %mat_antihermit.addr, align 8
  %m01 = getelementptr inbounds %struct.anti_hermitmat* %12, i32 0, i32 0
  %imag21 = getelementptr inbounds %struct.complex* %m01, i32 0, i32 1
  %13 = load double* %imag21, align 8
  %14 = load %struct.su3_matrix** %mat_su3.addr, align 8
  %e22 = getelementptr inbounds %struct.su3_matrix* %14, i32 0, i32 0
  %arrayidx23 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e22, i32 0, i64 0
  %arrayidx24 = getelementptr inbounds [3 x %struct.complex]* %arrayidx23, i32 0, i64 1
  %imag25 = getelementptr inbounds %struct.complex* %arrayidx24, i32 0, i32 1
  store double %13, double* %imag25, align 8
  %15 = load %struct.anti_hermitmat** %mat_antihermit.addr, align 8
  %m0126 = getelementptr inbounds %struct.anti_hermitmat* %15, i32 0, i32 0
  %real27 = getelementptr inbounds %struct.complex* %m0126, i32 0, i32 0
  %16 = load double* %real27, align 8
  store double %16, double* %temp1, align 8
  %17 = load double* %temp1, align 8
  %18 = load %struct.su3_matrix** %mat_su3.addr, align 8
  %e28 = getelementptr inbounds %struct.su3_matrix* %18, i32 0, i32 0
  %arrayidx29 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e28, i32 0, i64 0
  %arrayidx30 = getelementptr inbounds [3 x %struct.complex]* %arrayidx29, i32 0, i64 1
  %real31 = getelementptr inbounds %struct.complex* %arrayidx30, i32 0, i32 0
  store double %17, double* %real31, align 8
  %19 = load double* %temp1, align 8
  %sub = fsub double -0.000000e+00, %19
  %20 = load %struct.su3_matrix** %mat_su3.addr, align 8
  %e32 = getelementptr inbounds %struct.su3_matrix* %20, i32 0, i32 0
  %arrayidx33 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e32, i32 0, i64 1
  %arrayidx34 = getelementptr inbounds [3 x %struct.complex]* %arrayidx33, i32 0, i64 0
  %real35 = getelementptr inbounds %struct.complex* %arrayidx34, i32 0, i32 0
  store double %sub, double* %real35, align 8
  %21 = load %struct.anti_hermitmat** %mat_antihermit.addr, align 8
  %m0136 = getelementptr inbounds %struct.anti_hermitmat* %21, i32 0, i32 0
  %imag37 = getelementptr inbounds %struct.complex* %m0136, i32 0, i32 1
  %22 = load double* %imag37, align 8
  %23 = load %struct.su3_matrix** %mat_su3.addr, align 8
  %e38 = getelementptr inbounds %struct.su3_matrix* %23, i32 0, i32 0
  %arrayidx39 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e38, i32 0, i64 1
  %arrayidx40 = getelementptr inbounds [3 x %struct.complex]* %arrayidx39, i32 0, i64 0
  %imag41 = getelementptr inbounds %struct.complex* %arrayidx40, i32 0, i32 1
  store double %22, double* %imag41, align 8
  %24 = load %struct.anti_hermitmat** %mat_antihermit.addr, align 8
  %m02 = getelementptr inbounds %struct.anti_hermitmat* %24, i32 0, i32 1
  %imag42 = getelementptr inbounds %struct.complex* %m02, i32 0, i32 1
  %25 = load double* %imag42, align 8
  %26 = load %struct.su3_matrix** %mat_su3.addr, align 8
  %e43 = getelementptr inbounds %struct.su3_matrix* %26, i32 0, i32 0
  %arrayidx44 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e43, i32 0, i64 0
  %arrayidx45 = getelementptr inbounds [3 x %struct.complex]* %arrayidx44, i32 0, i64 2
  %imag46 = getelementptr inbounds %struct.complex* %arrayidx45, i32 0, i32 1
  store double %25, double* %imag46, align 8
  %27 = load %struct.anti_hermitmat** %mat_antihermit.addr, align 8
  %m0247 = getelementptr inbounds %struct.anti_hermitmat* %27, i32 0, i32 1
  %real48 = getelementptr inbounds %struct.complex* %m0247, i32 0, i32 0
  %28 = load double* %real48, align 8
  store double %28, double* %temp1, align 8
  %29 = load double* %temp1, align 8
  %30 = load %struct.su3_matrix** %mat_su3.addr, align 8
  %e49 = getelementptr inbounds %struct.su3_matrix* %30, i32 0, i32 0
  %arrayidx50 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e49, i32 0, i64 0
  %arrayidx51 = getelementptr inbounds [3 x %struct.complex]* %arrayidx50, i32 0, i64 2
  %real52 = getelementptr inbounds %struct.complex* %arrayidx51, i32 0, i32 0
  store double %29, double* %real52, align 8
  %31 = load double* %temp1, align 8
  %sub53 = fsub double -0.000000e+00, %31
  %32 = load %struct.su3_matrix** %mat_su3.addr, align 8
  %e54 = getelementptr inbounds %struct.su3_matrix* %32, i32 0, i32 0
  %arrayidx55 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e54, i32 0, i64 2
  %arrayidx56 = getelementptr inbounds [3 x %struct.complex]* %arrayidx55, i32 0, i64 0
  %real57 = getelementptr inbounds %struct.complex* %arrayidx56, i32 0, i32 0
  store double %sub53, double* %real57, align 8
  %33 = load %struct.anti_hermitmat** %mat_antihermit.addr, align 8
  %m0258 = getelementptr inbounds %struct.anti_hermitmat* %33, i32 0, i32 1
  %imag59 = getelementptr inbounds %struct.complex* %m0258, i32 0, i32 1
  %34 = load double* %imag59, align 8
  %35 = load %struct.su3_matrix** %mat_su3.addr, align 8
  %e60 = getelementptr inbounds %struct.su3_matrix* %35, i32 0, i32 0
  %arrayidx61 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e60, i32 0, i64 2
  %arrayidx62 = getelementptr inbounds [3 x %struct.complex]* %arrayidx61, i32 0, i64 0
  %imag63 = getelementptr inbounds %struct.complex* %arrayidx62, i32 0, i32 1
  store double %34, double* %imag63, align 8
  %36 = load %struct.anti_hermitmat** %mat_antihermit.addr, align 8
  %m12 = getelementptr inbounds %struct.anti_hermitmat* %36, i32 0, i32 2
  %imag64 = getelementptr inbounds %struct.complex* %m12, i32 0, i32 1
  %37 = load double* %imag64, align 8
  %38 = load %struct.su3_matrix** %mat_su3.addr, align 8
  %e65 = getelementptr inbounds %struct.su3_matrix* %38, i32 0, i32 0
  %arrayidx66 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e65, i32 0, i64 1
  %arrayidx67 = getelementptr inbounds [3 x %struct.complex]* %arrayidx66, i32 0, i64 2
  %imag68 = getelementptr inbounds %struct.complex* %arrayidx67, i32 0, i32 1
  store double %37, double* %imag68, align 8
  %39 = load %struct.anti_hermitmat** %mat_antihermit.addr, align 8
  %m1269 = getelementptr inbounds %struct.anti_hermitmat* %39, i32 0, i32 2
  %real70 = getelementptr inbounds %struct.complex* %m1269, i32 0, i32 0
  %40 = load double* %real70, align 8
  store double %40, double* %temp1, align 8
  %41 = load double* %temp1, align 8
  %42 = load %struct.su3_matrix** %mat_su3.addr, align 8
  %e71 = getelementptr inbounds %struct.su3_matrix* %42, i32 0, i32 0
  %arrayidx72 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e71, i32 0, i64 1
  %arrayidx73 = getelementptr inbounds [3 x %struct.complex]* %arrayidx72, i32 0, i64 2
  %real74 = getelementptr inbounds %struct.complex* %arrayidx73, i32 0, i32 0
  store double %41, double* %real74, align 8
  %43 = load double* %temp1, align 8
  %sub75 = fsub double -0.000000e+00, %43
  %44 = load %struct.su3_matrix** %mat_su3.addr, align 8
  %e76 = getelementptr inbounds %struct.su3_matrix* %44, i32 0, i32 0
  %arrayidx77 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e76, i32 0, i64 2
  %arrayidx78 = getelementptr inbounds [3 x %struct.complex]* %arrayidx77, i32 0, i64 1
  %real79 = getelementptr inbounds %struct.complex* %arrayidx78, i32 0, i32 0
  store double %sub75, double* %real79, align 8
  %45 = load %struct.anti_hermitmat** %mat_antihermit.addr, align 8
  %m1280 = getelementptr inbounds %struct.anti_hermitmat* %45, i32 0, i32 2
  %imag81 = getelementptr inbounds %struct.complex* %m1280, i32 0, i32 1
  %46 = load double* %imag81, align 8
  %47 = load %struct.su3_matrix** %mat_su3.addr, align 8
  %e82 = getelementptr inbounds %struct.su3_matrix* %47, i32 0, i32 0
  %arrayidx83 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e82, i32 0, i64 2
  %arrayidx84 = getelementptr inbounds [3 x %struct.complex]* %arrayidx83, i32 0, i64 1
  %imag85 = getelementptr inbounds %struct.complex* %arrayidx84, i32 0, i32 1
  store double %46, double* %imag85, align 8
  ret void
}

; Function Attrs: nounwind uwtable
define internal double @magsq_su3vec(%struct.su3_vector* %a) #0 {
entry:
  %a.addr = alloca %struct.su3_vector*, align 8
  %temp = alloca double, align 8
  %sum = alloca double, align 8
  store %struct.su3_vector* %a, %struct.su3_vector** %a.addr, align 8
  store double 0.000000e+00, double* %sum, align 8
  %0 = load %struct.su3_vector** %a.addr, align 8
  %c = getelementptr inbounds %struct.su3_vector* %0, i32 0, i32 0
  %arrayidx = getelementptr inbounds [3 x %struct.complex]* %c, i32 0, i64 0
  %real = getelementptr inbounds %struct.complex* %arrayidx, i32 0, i32 0
  %1 = load double* %real, align 8
  %2 = load %struct.su3_vector** %a.addr, align 8
  %c1 = getelementptr inbounds %struct.su3_vector* %2, i32 0, i32 0
  %arrayidx2 = getelementptr inbounds [3 x %struct.complex]* %c1, i32 0, i64 0
  %real3 = getelementptr inbounds %struct.complex* %arrayidx2, i32 0, i32 0
  %3 = load double* %real3, align 8
  %mul = fmul double %1, %3
  store double %mul, double* %temp, align 8
  %4 = load double* %temp, align 8
  %5 = load double* %sum, align 8
  %add = fadd double %5, %4
  store double %add, double* %sum, align 8
  %6 = load %struct.su3_vector** %a.addr, align 8
  %c4 = getelementptr inbounds %struct.su3_vector* %6, i32 0, i32 0
  %arrayidx5 = getelementptr inbounds [3 x %struct.complex]* %c4, i32 0, i64 0
  %imag = getelementptr inbounds %struct.complex* %arrayidx5, i32 0, i32 1
  %7 = load double* %imag, align 8
  %8 = load %struct.su3_vector** %a.addr, align 8
  %c6 = getelementptr inbounds %struct.su3_vector* %8, i32 0, i32 0
  %arrayidx7 = getelementptr inbounds [3 x %struct.complex]* %c6, i32 0, i64 0
  %imag8 = getelementptr inbounds %struct.complex* %arrayidx7, i32 0, i32 1
  %9 = load double* %imag8, align 8
  %mul9 = fmul double %7, %9
  store double %mul9, double* %temp, align 8
  %10 = load double* %temp, align 8
  %11 = load double* %sum, align 8
  %add10 = fadd double %11, %10
  store double %add10, double* %sum, align 8
  %12 = load %struct.su3_vector** %a.addr, align 8
  %c11 = getelementptr inbounds %struct.su3_vector* %12, i32 0, i32 0
  %arrayidx12 = getelementptr inbounds [3 x %struct.complex]* %c11, i32 0, i64 1
  %real13 = getelementptr inbounds %struct.complex* %arrayidx12, i32 0, i32 0
  %13 = load double* %real13, align 8
  %14 = load %struct.su3_vector** %a.addr, align 8
  %c14 = getelementptr inbounds %struct.su3_vector* %14, i32 0, i32 0
  %arrayidx15 = getelementptr inbounds [3 x %struct.complex]* %c14, i32 0, i64 1
  %real16 = getelementptr inbounds %struct.complex* %arrayidx15, i32 0, i32 0
  %15 = load double* %real16, align 8
  %mul17 = fmul double %13, %15
  store double %mul17, double* %temp, align 8
  %16 = load double* %temp, align 8
  %17 = load double* %sum, align 8
  %add18 = fadd double %17, %16
  store double %add18, double* %sum, align 8
  %18 = load %struct.su3_vector** %a.addr, align 8
  %c19 = getelementptr inbounds %struct.su3_vector* %18, i32 0, i32 0
  %arrayidx20 = getelementptr inbounds [3 x %struct.complex]* %c19, i32 0, i64 1
  %imag21 = getelementptr inbounds %struct.complex* %arrayidx20, i32 0, i32 1
  %19 = load double* %imag21, align 8
  %20 = load %struct.su3_vector** %a.addr, align 8
  %c22 = getelementptr inbounds %struct.su3_vector* %20, i32 0, i32 0
  %arrayidx23 = getelementptr inbounds [3 x %struct.complex]* %c22, i32 0, i64 1
  %imag24 = getelementptr inbounds %struct.complex* %arrayidx23, i32 0, i32 1
  %21 = load double* %imag24, align 8
  %mul25 = fmul double %19, %21
  store double %mul25, double* %temp, align 8
  %22 = load double* %temp, align 8
  %23 = load double* %sum, align 8
  %add26 = fadd double %23, %22
  store double %add26, double* %sum, align 8
  %24 = load %struct.su3_vector** %a.addr, align 8
  %c27 = getelementptr inbounds %struct.su3_vector* %24, i32 0, i32 0
  %arrayidx28 = getelementptr inbounds [3 x %struct.complex]* %c27, i32 0, i64 2
  %real29 = getelementptr inbounds %struct.complex* %arrayidx28, i32 0, i32 0
  %25 = load double* %real29, align 8
  %26 = load %struct.su3_vector** %a.addr, align 8
  %c30 = getelementptr inbounds %struct.su3_vector* %26, i32 0, i32 0
  %arrayidx31 = getelementptr inbounds [3 x %struct.complex]* %c30, i32 0, i64 2
  %real32 = getelementptr inbounds %struct.complex* %arrayidx31, i32 0, i32 0
  %27 = load double* %real32, align 8
  %mul33 = fmul double %25, %27
  store double %mul33, double* %temp, align 8
  %28 = load double* %temp, align 8
  %29 = load double* %sum, align 8
  %add34 = fadd double %29, %28
  store double %add34, double* %sum, align 8
  %30 = load %struct.su3_vector** %a.addr, align 8
  %c35 = getelementptr inbounds %struct.su3_vector* %30, i32 0, i32 0
  %arrayidx36 = getelementptr inbounds [3 x %struct.complex]* %c35, i32 0, i64 2
  %imag37 = getelementptr inbounds %struct.complex* %arrayidx36, i32 0, i32 1
  %31 = load double* %imag37, align 8
  %32 = load %struct.su3_vector** %a.addr, align 8
  %c38 = getelementptr inbounds %struct.su3_vector* %32, i32 0, i32 0
  %arrayidx39 = getelementptr inbounds [3 x %struct.complex]* %c38, i32 0, i64 2
  %imag40 = getelementptr inbounds %struct.complex* %arrayidx39, i32 0, i32 1
  %33 = load double* %imag40, align 8
  %mul41 = fmul double %31, %33
  store double %mul41, double* %temp, align 8
  %34 = load double* %temp, align 8
  %35 = load double* %sum, align 8
  %add42 = fadd double %35, %34
  store double %add42, double* %sum, align 8
  %36 = load double* %sum, align 8
  ret double %36
}

; Function Attrs: nounwind uwtable
define internal void @sub_four_su3_vecs(%struct.su3_vector* %a, %struct.su3_vector* %b1, %struct.su3_vector* %b2, %struct.su3_vector* %b3, %struct.su3_vector* %b4) #0 {
entry:
  %a.addr = alloca %struct.su3_vector*, align 8
  %b1.addr = alloca %struct.su3_vector*, align 8
  %b2.addr = alloca %struct.su3_vector*, align 8
  %b3.addr = alloca %struct.su3_vector*, align 8
  %b4.addr = alloca %struct.su3_vector*, align 8
  store %struct.su3_vector* %a, %struct.su3_vector** %a.addr, align 8
  store %struct.su3_vector* %b1, %struct.su3_vector** %b1.addr, align 8
  store %struct.su3_vector* %b2, %struct.su3_vector** %b2.addr, align 8
  store %struct.su3_vector* %b3, %struct.su3_vector** %b3.addr, align 8
  store %struct.su3_vector* %b4, %struct.su3_vector** %b4.addr, align 8
  %0 = load %struct.su3_vector** %a.addr, align 8
  %c = getelementptr inbounds %struct.su3_vector* %0, i32 0, i32 0
  %arrayidx = getelementptr inbounds [3 x %struct.complex]* %c, i32 0, i64 0
  %real = getelementptr inbounds %struct.complex* %arrayidx, i32 0, i32 0
  %1 = load double* %real, align 8
  %2 = load %struct.su3_vector** %b1.addr, align 8
  %c1 = getelementptr inbounds %struct.su3_vector* %2, i32 0, i32 0
  %arrayidx2 = getelementptr inbounds [3 x %struct.complex]* %c1, i32 0, i64 0
  %real3 = getelementptr inbounds %struct.complex* %arrayidx2, i32 0, i32 0
  %3 = load double* %real3, align 8
  %sub = fsub double %1, %3
  %4 = load %struct.su3_vector** %a.addr, align 8
  %c4 = getelementptr inbounds %struct.su3_vector* %4, i32 0, i32 0
  %arrayidx5 = getelementptr inbounds [3 x %struct.complex]* %c4, i32 0, i64 0
  %real6 = getelementptr inbounds %struct.complex* %arrayidx5, i32 0, i32 0
  store double %sub, double* %real6, align 8
  %5 = load %struct.su3_vector** %a.addr, align 8
  %c7 = getelementptr inbounds %struct.su3_vector* %5, i32 0, i32 0
  %arrayidx8 = getelementptr inbounds [3 x %struct.complex]* %c7, i32 0, i64 0
  %imag = getelementptr inbounds %struct.complex* %arrayidx8, i32 0, i32 1
  %6 = load double* %imag, align 8
  %7 = load %struct.su3_vector** %b1.addr, align 8
  %c9 = getelementptr inbounds %struct.su3_vector* %7, i32 0, i32 0
  %arrayidx10 = getelementptr inbounds [3 x %struct.complex]* %c9, i32 0, i64 0
  %imag11 = getelementptr inbounds %struct.complex* %arrayidx10, i32 0, i32 1
  %8 = load double* %imag11, align 8
  %sub12 = fsub double %6, %8
  %9 = load %struct.su3_vector** %a.addr, align 8
  %c13 = getelementptr inbounds %struct.su3_vector* %9, i32 0, i32 0
  %arrayidx14 = getelementptr inbounds [3 x %struct.complex]* %c13, i32 0, i64 0
  %imag15 = getelementptr inbounds %struct.complex* %arrayidx14, i32 0, i32 1
  store double %sub12, double* %imag15, align 8
  %10 = load %struct.su3_vector** %a.addr, align 8
  %c16 = getelementptr inbounds %struct.su3_vector* %10, i32 0, i32 0
  %arrayidx17 = getelementptr inbounds [3 x %struct.complex]* %c16, i32 0, i64 1
  %real18 = getelementptr inbounds %struct.complex* %arrayidx17, i32 0, i32 0
  %11 = load double* %real18, align 8
  %12 = load %struct.su3_vector** %b1.addr, align 8
  %c19 = getelementptr inbounds %struct.su3_vector* %12, i32 0, i32 0
  %arrayidx20 = getelementptr inbounds [3 x %struct.complex]* %c19, i32 0, i64 1
  %real21 = getelementptr inbounds %struct.complex* %arrayidx20, i32 0, i32 0
  %13 = load double* %real21, align 8
  %sub22 = fsub double %11, %13
  %14 = load %struct.su3_vector** %a.addr, align 8
  %c23 = getelementptr inbounds %struct.su3_vector* %14, i32 0, i32 0
  %arrayidx24 = getelementptr inbounds [3 x %struct.complex]* %c23, i32 0, i64 1
  %real25 = getelementptr inbounds %struct.complex* %arrayidx24, i32 0, i32 0
  store double %sub22, double* %real25, align 8
  %15 = load %struct.su3_vector** %a.addr, align 8
  %c26 = getelementptr inbounds %struct.su3_vector* %15, i32 0, i32 0
  %arrayidx27 = getelementptr inbounds [3 x %struct.complex]* %c26, i32 0, i64 1
  %imag28 = getelementptr inbounds %struct.complex* %arrayidx27, i32 0, i32 1
  %16 = load double* %imag28, align 8
  %17 = load %struct.su3_vector** %b1.addr, align 8
  %c29 = getelementptr inbounds %struct.su3_vector* %17, i32 0, i32 0
  %arrayidx30 = getelementptr inbounds [3 x %struct.complex]* %c29, i32 0, i64 1
  %imag31 = getelementptr inbounds %struct.complex* %arrayidx30, i32 0, i32 1
  %18 = load double* %imag31, align 8
  %sub32 = fsub double %16, %18
  %19 = load %struct.su3_vector** %a.addr, align 8
  %c33 = getelementptr inbounds %struct.su3_vector* %19, i32 0, i32 0
  %arrayidx34 = getelementptr inbounds [3 x %struct.complex]* %c33, i32 0, i64 1
  %imag35 = getelementptr inbounds %struct.complex* %arrayidx34, i32 0, i32 1
  store double %sub32, double* %imag35, align 8
  %20 = load %struct.su3_vector** %a.addr, align 8
  %c36 = getelementptr inbounds %struct.su3_vector* %20, i32 0, i32 0
  %arrayidx37 = getelementptr inbounds [3 x %struct.complex]* %c36, i32 0, i64 2
  %real38 = getelementptr inbounds %struct.complex* %arrayidx37, i32 0, i32 0
  %21 = load double* %real38, align 8
  %22 = load %struct.su3_vector** %b1.addr, align 8
  %c39 = getelementptr inbounds %struct.su3_vector* %22, i32 0, i32 0
  %arrayidx40 = getelementptr inbounds [3 x %struct.complex]* %c39, i32 0, i64 2
  %real41 = getelementptr inbounds %struct.complex* %arrayidx40, i32 0, i32 0
  %23 = load double* %real41, align 8
  %sub42 = fsub double %21, %23
  %24 = load %struct.su3_vector** %a.addr, align 8
  %c43 = getelementptr inbounds %struct.su3_vector* %24, i32 0, i32 0
  %arrayidx44 = getelementptr inbounds [3 x %struct.complex]* %c43, i32 0, i64 2
  %real45 = getelementptr inbounds %struct.complex* %arrayidx44, i32 0, i32 0
  store double %sub42, double* %real45, align 8
  %25 = load %struct.su3_vector** %a.addr, align 8
  %c46 = getelementptr inbounds %struct.su3_vector* %25, i32 0, i32 0
  %arrayidx47 = getelementptr inbounds [3 x %struct.complex]* %c46, i32 0, i64 2
  %imag48 = getelementptr inbounds %struct.complex* %arrayidx47, i32 0, i32 1
  %26 = load double* %imag48, align 8
  %27 = load %struct.su3_vector** %b1.addr, align 8
  %c49 = getelementptr inbounds %struct.su3_vector* %27, i32 0, i32 0
  %arrayidx50 = getelementptr inbounds [3 x %struct.complex]* %c49, i32 0, i64 2
  %imag51 = getelementptr inbounds %struct.complex* %arrayidx50, i32 0, i32 1
  %28 = load double* %imag51, align 8
  %sub52 = fsub double %26, %28
  %29 = load %struct.su3_vector** %a.addr, align 8
  %c53 = getelementptr inbounds %struct.su3_vector* %29, i32 0, i32 0
  %arrayidx54 = getelementptr inbounds [3 x %struct.complex]* %c53, i32 0, i64 2
  %imag55 = getelementptr inbounds %struct.complex* %arrayidx54, i32 0, i32 1
  store double %sub52, double* %imag55, align 8
  %30 = load %struct.su3_vector** %a.addr, align 8
  %c56 = getelementptr inbounds %struct.su3_vector* %30, i32 0, i32 0
  %arrayidx57 = getelementptr inbounds [3 x %struct.complex]* %c56, i32 0, i64 0
  %real58 = getelementptr inbounds %struct.complex* %arrayidx57, i32 0, i32 0
  %31 = load double* %real58, align 8
  %32 = load %struct.su3_vector** %b2.addr, align 8
  %c59 = getelementptr inbounds %struct.su3_vector* %32, i32 0, i32 0
  %arrayidx60 = getelementptr inbounds [3 x %struct.complex]* %c59, i32 0, i64 0
  %real61 = getelementptr inbounds %struct.complex* %arrayidx60, i32 0, i32 0
  %33 = load double* %real61, align 8
  %sub62 = fsub double %31, %33
  %34 = load %struct.su3_vector** %a.addr, align 8
  %c63 = getelementptr inbounds %struct.su3_vector* %34, i32 0, i32 0
  %arrayidx64 = getelementptr inbounds [3 x %struct.complex]* %c63, i32 0, i64 0
  %real65 = getelementptr inbounds %struct.complex* %arrayidx64, i32 0, i32 0
  store double %sub62, double* %real65, align 8
  %35 = load %struct.su3_vector** %a.addr, align 8
  %c66 = getelementptr inbounds %struct.su3_vector* %35, i32 0, i32 0
  %arrayidx67 = getelementptr inbounds [3 x %struct.complex]* %c66, i32 0, i64 0
  %imag68 = getelementptr inbounds %struct.complex* %arrayidx67, i32 0, i32 1
  %36 = load double* %imag68, align 8
  %37 = load %struct.su3_vector** %b2.addr, align 8
  %c69 = getelementptr inbounds %struct.su3_vector* %37, i32 0, i32 0
  %arrayidx70 = getelementptr inbounds [3 x %struct.complex]* %c69, i32 0, i64 0
  %imag71 = getelementptr inbounds %struct.complex* %arrayidx70, i32 0, i32 1
  %38 = load double* %imag71, align 8
  %sub72 = fsub double %36, %38
  %39 = load %struct.su3_vector** %a.addr, align 8
  %c73 = getelementptr inbounds %struct.su3_vector* %39, i32 0, i32 0
  %arrayidx74 = getelementptr inbounds [3 x %struct.complex]* %c73, i32 0, i64 0
  %imag75 = getelementptr inbounds %struct.complex* %arrayidx74, i32 0, i32 1
  store double %sub72, double* %imag75, align 8
  %40 = load %struct.su3_vector** %a.addr, align 8
  %c76 = getelementptr inbounds %struct.su3_vector* %40, i32 0, i32 0
  %arrayidx77 = getelementptr inbounds [3 x %struct.complex]* %c76, i32 0, i64 1
  %real78 = getelementptr inbounds %struct.complex* %arrayidx77, i32 0, i32 0
  %41 = load double* %real78, align 8
  %42 = load %struct.su3_vector** %b2.addr, align 8
  %c79 = getelementptr inbounds %struct.su3_vector* %42, i32 0, i32 0
  %arrayidx80 = getelementptr inbounds [3 x %struct.complex]* %c79, i32 0, i64 1
  %real81 = getelementptr inbounds %struct.complex* %arrayidx80, i32 0, i32 0
  %43 = load double* %real81, align 8
  %sub82 = fsub double %41, %43
  %44 = load %struct.su3_vector** %a.addr, align 8
  %c83 = getelementptr inbounds %struct.su3_vector* %44, i32 0, i32 0
  %arrayidx84 = getelementptr inbounds [3 x %struct.complex]* %c83, i32 0, i64 1
  %real85 = getelementptr inbounds %struct.complex* %arrayidx84, i32 0, i32 0
  store double %sub82, double* %real85, align 8
  %45 = load %struct.su3_vector** %a.addr, align 8
  %c86 = getelementptr inbounds %struct.su3_vector* %45, i32 0, i32 0
  %arrayidx87 = getelementptr inbounds [3 x %struct.complex]* %c86, i32 0, i64 1
  %imag88 = getelementptr inbounds %struct.complex* %arrayidx87, i32 0, i32 1
  %46 = load double* %imag88, align 8
  %47 = load %struct.su3_vector** %b2.addr, align 8
  %c89 = getelementptr inbounds %struct.su3_vector* %47, i32 0, i32 0
  %arrayidx90 = getelementptr inbounds [3 x %struct.complex]* %c89, i32 0, i64 1
  %imag91 = getelementptr inbounds %struct.complex* %arrayidx90, i32 0, i32 1
  %48 = load double* %imag91, align 8
  %sub92 = fsub double %46, %48
  %49 = load %struct.su3_vector** %a.addr, align 8
  %c93 = getelementptr inbounds %struct.su3_vector* %49, i32 0, i32 0
  %arrayidx94 = getelementptr inbounds [3 x %struct.complex]* %c93, i32 0, i64 1
  %imag95 = getelementptr inbounds %struct.complex* %arrayidx94, i32 0, i32 1
  store double %sub92, double* %imag95, align 8
  %50 = load %struct.su3_vector** %a.addr, align 8
  %c96 = getelementptr inbounds %struct.su3_vector* %50, i32 0, i32 0
  %arrayidx97 = getelementptr inbounds [3 x %struct.complex]* %c96, i32 0, i64 2
  %real98 = getelementptr inbounds %struct.complex* %arrayidx97, i32 0, i32 0
  %51 = load double* %real98, align 8
  %52 = load %struct.su3_vector** %b2.addr, align 8
  %c99 = getelementptr inbounds %struct.su3_vector* %52, i32 0, i32 0
  %arrayidx100 = getelementptr inbounds [3 x %struct.complex]* %c99, i32 0, i64 2
  %real101 = getelementptr inbounds %struct.complex* %arrayidx100, i32 0, i32 0
  %53 = load double* %real101, align 8
  %sub102 = fsub double %51, %53
  %54 = load %struct.su3_vector** %a.addr, align 8
  %c103 = getelementptr inbounds %struct.su3_vector* %54, i32 0, i32 0
  %arrayidx104 = getelementptr inbounds [3 x %struct.complex]* %c103, i32 0, i64 2
  %real105 = getelementptr inbounds %struct.complex* %arrayidx104, i32 0, i32 0
  store double %sub102, double* %real105, align 8
  %55 = load %struct.su3_vector** %a.addr, align 8
  %c106 = getelementptr inbounds %struct.su3_vector* %55, i32 0, i32 0
  %arrayidx107 = getelementptr inbounds [3 x %struct.complex]* %c106, i32 0, i64 2
  %imag108 = getelementptr inbounds %struct.complex* %arrayidx107, i32 0, i32 1
  %56 = load double* %imag108, align 8
  %57 = load %struct.su3_vector** %b2.addr, align 8
  %c109 = getelementptr inbounds %struct.su3_vector* %57, i32 0, i32 0
  %arrayidx110 = getelementptr inbounds [3 x %struct.complex]* %c109, i32 0, i64 2
  %imag111 = getelementptr inbounds %struct.complex* %arrayidx110, i32 0, i32 1
  %58 = load double* %imag111, align 8
  %sub112 = fsub double %56, %58
  %59 = load %struct.su3_vector** %a.addr, align 8
  %c113 = getelementptr inbounds %struct.su3_vector* %59, i32 0, i32 0
  %arrayidx114 = getelementptr inbounds [3 x %struct.complex]* %c113, i32 0, i64 2
  %imag115 = getelementptr inbounds %struct.complex* %arrayidx114, i32 0, i32 1
  store double %sub112, double* %imag115, align 8
  %60 = load %struct.su3_vector** %a.addr, align 8
  %c116 = getelementptr inbounds %struct.su3_vector* %60, i32 0, i32 0
  %arrayidx117 = getelementptr inbounds [3 x %struct.complex]* %c116, i32 0, i64 0
  %real118 = getelementptr inbounds %struct.complex* %arrayidx117, i32 0, i32 0
  %61 = load double* %real118, align 8
  %62 = load %struct.su3_vector** %b3.addr, align 8
  %c119 = getelementptr inbounds %struct.su3_vector* %62, i32 0, i32 0
  %arrayidx120 = getelementptr inbounds [3 x %struct.complex]* %c119, i32 0, i64 0
  %real121 = getelementptr inbounds %struct.complex* %arrayidx120, i32 0, i32 0
  %63 = load double* %real121, align 8
  %sub122 = fsub double %61, %63
  %64 = load %struct.su3_vector** %a.addr, align 8
  %c123 = getelementptr inbounds %struct.su3_vector* %64, i32 0, i32 0
  %arrayidx124 = getelementptr inbounds [3 x %struct.complex]* %c123, i32 0, i64 0
  %real125 = getelementptr inbounds %struct.complex* %arrayidx124, i32 0, i32 0
  store double %sub122, double* %real125, align 8
  %65 = load %struct.su3_vector** %a.addr, align 8
  %c126 = getelementptr inbounds %struct.su3_vector* %65, i32 0, i32 0
  %arrayidx127 = getelementptr inbounds [3 x %struct.complex]* %c126, i32 0, i64 0
  %imag128 = getelementptr inbounds %struct.complex* %arrayidx127, i32 0, i32 1
  %66 = load double* %imag128, align 8
  %67 = load %struct.su3_vector** %b3.addr, align 8
  %c129 = getelementptr inbounds %struct.su3_vector* %67, i32 0, i32 0
  %arrayidx130 = getelementptr inbounds [3 x %struct.complex]* %c129, i32 0, i64 0
  %imag131 = getelementptr inbounds %struct.complex* %arrayidx130, i32 0, i32 1
  %68 = load double* %imag131, align 8
  %sub132 = fsub double %66, %68
  %69 = load %struct.su3_vector** %a.addr, align 8
  %c133 = getelementptr inbounds %struct.su3_vector* %69, i32 0, i32 0
  %arrayidx134 = getelementptr inbounds [3 x %struct.complex]* %c133, i32 0, i64 0
  %imag135 = getelementptr inbounds %struct.complex* %arrayidx134, i32 0, i32 1
  store double %sub132, double* %imag135, align 8
  %70 = load %struct.su3_vector** %a.addr, align 8
  %c136 = getelementptr inbounds %struct.su3_vector* %70, i32 0, i32 0
  %arrayidx137 = getelementptr inbounds [3 x %struct.complex]* %c136, i32 0, i64 1
  %real138 = getelementptr inbounds %struct.complex* %arrayidx137, i32 0, i32 0
  %71 = load double* %real138, align 8
  %72 = load %struct.su3_vector** %b3.addr, align 8
  %c139 = getelementptr inbounds %struct.su3_vector* %72, i32 0, i32 0
  %arrayidx140 = getelementptr inbounds [3 x %struct.complex]* %c139, i32 0, i64 1
  %real141 = getelementptr inbounds %struct.complex* %arrayidx140, i32 0, i32 0
  %73 = load double* %real141, align 8
  %sub142 = fsub double %71, %73
  %74 = load %struct.su3_vector** %a.addr, align 8
  %c143 = getelementptr inbounds %struct.su3_vector* %74, i32 0, i32 0
  %arrayidx144 = getelementptr inbounds [3 x %struct.complex]* %c143, i32 0, i64 1
  %real145 = getelementptr inbounds %struct.complex* %arrayidx144, i32 0, i32 0
  store double %sub142, double* %real145, align 8
  %75 = load %struct.su3_vector** %a.addr, align 8
  %c146 = getelementptr inbounds %struct.su3_vector* %75, i32 0, i32 0
  %arrayidx147 = getelementptr inbounds [3 x %struct.complex]* %c146, i32 0, i64 1
  %imag148 = getelementptr inbounds %struct.complex* %arrayidx147, i32 0, i32 1
  %76 = load double* %imag148, align 8
  %77 = load %struct.su3_vector** %b3.addr, align 8
  %c149 = getelementptr inbounds %struct.su3_vector* %77, i32 0, i32 0
  %arrayidx150 = getelementptr inbounds [3 x %struct.complex]* %c149, i32 0, i64 1
  %imag151 = getelementptr inbounds %struct.complex* %arrayidx150, i32 0, i32 1
  %78 = load double* %imag151, align 8
  %sub152 = fsub double %76, %78
  %79 = load %struct.su3_vector** %a.addr, align 8
  %c153 = getelementptr inbounds %struct.su3_vector* %79, i32 0, i32 0
  %arrayidx154 = getelementptr inbounds [3 x %struct.complex]* %c153, i32 0, i64 1
  %imag155 = getelementptr inbounds %struct.complex* %arrayidx154, i32 0, i32 1
  store double %sub152, double* %imag155, align 8
  %80 = load %struct.su3_vector** %a.addr, align 8
  %c156 = getelementptr inbounds %struct.su3_vector* %80, i32 0, i32 0
  %arrayidx157 = getelementptr inbounds [3 x %struct.complex]* %c156, i32 0, i64 2
  %real158 = getelementptr inbounds %struct.complex* %arrayidx157, i32 0, i32 0
  %81 = load double* %real158, align 8
  %82 = load %struct.su3_vector** %b3.addr, align 8
  %c159 = getelementptr inbounds %struct.su3_vector* %82, i32 0, i32 0
  %arrayidx160 = getelementptr inbounds [3 x %struct.complex]* %c159, i32 0, i64 2
  %real161 = getelementptr inbounds %struct.complex* %arrayidx160, i32 0, i32 0
  %83 = load double* %real161, align 8
  %sub162 = fsub double %81, %83
  %84 = load %struct.su3_vector** %a.addr, align 8
  %c163 = getelementptr inbounds %struct.su3_vector* %84, i32 0, i32 0
  %arrayidx164 = getelementptr inbounds [3 x %struct.complex]* %c163, i32 0, i64 2
  %real165 = getelementptr inbounds %struct.complex* %arrayidx164, i32 0, i32 0
  store double %sub162, double* %real165, align 8
  %85 = load %struct.su3_vector** %a.addr, align 8
  %c166 = getelementptr inbounds %struct.su3_vector* %85, i32 0, i32 0
  %arrayidx167 = getelementptr inbounds [3 x %struct.complex]* %c166, i32 0, i64 2
  %imag168 = getelementptr inbounds %struct.complex* %arrayidx167, i32 0, i32 1
  %86 = load double* %imag168, align 8
  %87 = load %struct.su3_vector** %b3.addr, align 8
  %c169 = getelementptr inbounds %struct.su3_vector* %87, i32 0, i32 0
  %arrayidx170 = getelementptr inbounds [3 x %struct.complex]* %c169, i32 0, i64 2
  %imag171 = getelementptr inbounds %struct.complex* %arrayidx170, i32 0, i32 1
  %88 = load double* %imag171, align 8
  %sub172 = fsub double %86, %88
  %89 = load %struct.su3_vector** %a.addr, align 8
  %c173 = getelementptr inbounds %struct.su3_vector* %89, i32 0, i32 0
  %arrayidx174 = getelementptr inbounds [3 x %struct.complex]* %c173, i32 0, i64 2
  %imag175 = getelementptr inbounds %struct.complex* %arrayidx174, i32 0, i32 1
  store double %sub172, double* %imag175, align 8
  %90 = load %struct.su3_vector** %a.addr, align 8
  %c176 = getelementptr inbounds %struct.su3_vector* %90, i32 0, i32 0
  %arrayidx177 = getelementptr inbounds [3 x %struct.complex]* %c176, i32 0, i64 0
  %real178 = getelementptr inbounds %struct.complex* %arrayidx177, i32 0, i32 0
  %91 = load double* %real178, align 8
  %92 = load %struct.su3_vector** %b4.addr, align 8
  %c179 = getelementptr inbounds %struct.su3_vector* %92, i32 0, i32 0
  %arrayidx180 = getelementptr inbounds [3 x %struct.complex]* %c179, i32 0, i64 0
  %real181 = getelementptr inbounds %struct.complex* %arrayidx180, i32 0, i32 0
  %93 = load double* %real181, align 8
  %sub182 = fsub double %91, %93
  %94 = load %struct.su3_vector** %a.addr, align 8
  %c183 = getelementptr inbounds %struct.su3_vector* %94, i32 0, i32 0
  %arrayidx184 = getelementptr inbounds [3 x %struct.complex]* %c183, i32 0, i64 0
  %real185 = getelementptr inbounds %struct.complex* %arrayidx184, i32 0, i32 0
  store double %sub182, double* %real185, align 8
  %95 = load %struct.su3_vector** %a.addr, align 8
  %c186 = getelementptr inbounds %struct.su3_vector* %95, i32 0, i32 0
  %arrayidx187 = getelementptr inbounds [3 x %struct.complex]* %c186, i32 0, i64 0
  %imag188 = getelementptr inbounds %struct.complex* %arrayidx187, i32 0, i32 1
  %96 = load double* %imag188, align 8
  %97 = load %struct.su3_vector** %b4.addr, align 8
  %c189 = getelementptr inbounds %struct.su3_vector* %97, i32 0, i32 0
  %arrayidx190 = getelementptr inbounds [3 x %struct.complex]* %c189, i32 0, i64 0
  %imag191 = getelementptr inbounds %struct.complex* %arrayidx190, i32 0, i32 1
  %98 = load double* %imag191, align 8
  %sub192 = fsub double %96, %98
  %99 = load %struct.su3_vector** %a.addr, align 8
  %c193 = getelementptr inbounds %struct.su3_vector* %99, i32 0, i32 0
  %arrayidx194 = getelementptr inbounds [3 x %struct.complex]* %c193, i32 0, i64 0
  %imag195 = getelementptr inbounds %struct.complex* %arrayidx194, i32 0, i32 1
  store double %sub192, double* %imag195, align 8
  %100 = load %struct.su3_vector** %a.addr, align 8
  %c196 = getelementptr inbounds %struct.su3_vector* %100, i32 0, i32 0
  %arrayidx197 = getelementptr inbounds [3 x %struct.complex]* %c196, i32 0, i64 1
  %real198 = getelementptr inbounds %struct.complex* %arrayidx197, i32 0, i32 0
  %101 = load double* %real198, align 8
  %102 = load %struct.su3_vector** %b4.addr, align 8
  %c199 = getelementptr inbounds %struct.su3_vector* %102, i32 0, i32 0
  %arrayidx200 = getelementptr inbounds [3 x %struct.complex]* %c199, i32 0, i64 1
  %real201 = getelementptr inbounds %struct.complex* %arrayidx200, i32 0, i32 0
  %103 = load double* %real201, align 8
  %sub202 = fsub double %101, %103
  %104 = load %struct.su3_vector** %a.addr, align 8
  %c203 = getelementptr inbounds %struct.su3_vector* %104, i32 0, i32 0
  %arrayidx204 = getelementptr inbounds [3 x %struct.complex]* %c203, i32 0, i64 1
  %real205 = getelementptr inbounds %struct.complex* %arrayidx204, i32 0, i32 0
  store double %sub202, double* %real205, align 8
  %105 = load %struct.su3_vector** %a.addr, align 8
  %c206 = getelementptr inbounds %struct.su3_vector* %105, i32 0, i32 0
  %arrayidx207 = getelementptr inbounds [3 x %struct.complex]* %c206, i32 0, i64 1
  %imag208 = getelementptr inbounds %struct.complex* %arrayidx207, i32 0, i32 1
  %106 = load double* %imag208, align 8
  %107 = load %struct.su3_vector** %b4.addr, align 8
  %c209 = getelementptr inbounds %struct.su3_vector* %107, i32 0, i32 0
  %arrayidx210 = getelementptr inbounds [3 x %struct.complex]* %c209, i32 0, i64 1
  %imag211 = getelementptr inbounds %struct.complex* %arrayidx210, i32 0, i32 1
  %108 = load double* %imag211, align 8
  %sub212 = fsub double %106, %108
  %109 = load %struct.su3_vector** %a.addr, align 8
  %c213 = getelementptr inbounds %struct.su3_vector* %109, i32 0, i32 0
  %arrayidx214 = getelementptr inbounds [3 x %struct.complex]* %c213, i32 0, i64 1
  %imag215 = getelementptr inbounds %struct.complex* %arrayidx214, i32 0, i32 1
  store double %sub212, double* %imag215, align 8
  %110 = load %struct.su3_vector** %a.addr, align 8
  %c216 = getelementptr inbounds %struct.su3_vector* %110, i32 0, i32 0
  %arrayidx217 = getelementptr inbounds [3 x %struct.complex]* %c216, i32 0, i64 2
  %real218 = getelementptr inbounds %struct.complex* %arrayidx217, i32 0, i32 0
  %111 = load double* %real218, align 8
  %112 = load %struct.su3_vector** %b4.addr, align 8
  %c219 = getelementptr inbounds %struct.su3_vector* %112, i32 0, i32 0
  %arrayidx220 = getelementptr inbounds [3 x %struct.complex]* %c219, i32 0, i64 2
  %real221 = getelementptr inbounds %struct.complex* %arrayidx220, i32 0, i32 0
  %113 = load double* %real221, align 8
  %sub222 = fsub double %111, %113
  %114 = load %struct.su3_vector** %a.addr, align 8
  %c223 = getelementptr inbounds %struct.su3_vector* %114, i32 0, i32 0
  %arrayidx224 = getelementptr inbounds [3 x %struct.complex]* %c223, i32 0, i64 2
  %real225 = getelementptr inbounds %struct.complex* %arrayidx224, i32 0, i32 0
  store double %sub222, double* %real225, align 8
  %115 = load %struct.su3_vector** %a.addr, align 8
  %c226 = getelementptr inbounds %struct.su3_vector* %115, i32 0, i32 0
  %arrayidx227 = getelementptr inbounds [3 x %struct.complex]* %c226, i32 0, i64 2
  %imag228 = getelementptr inbounds %struct.complex* %arrayidx227, i32 0, i32 1
  %116 = load double* %imag228, align 8
  %117 = load %struct.su3_vector** %b4.addr, align 8
  %c229 = getelementptr inbounds %struct.su3_vector* %117, i32 0, i32 0
  %arrayidx230 = getelementptr inbounds [3 x %struct.complex]* %c229, i32 0, i64 2
  %imag231 = getelementptr inbounds %struct.complex* %arrayidx230, i32 0, i32 1
  %118 = load double* %imag231, align 8
  %sub232 = fsub double %116, %118
  %119 = load %struct.su3_vector** %a.addr, align 8
  %c233 = getelementptr inbounds %struct.su3_vector* %119, i32 0, i32 0
  %arrayidx234 = getelementptr inbounds [3 x %struct.complex]* %c233, i32 0, i64 2
  %imag235 = getelementptr inbounds %struct.complex* %arrayidx234, i32 0, i32 1
  store double %sub232, double* %imag235, align 8
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @mult_adj_su3_mat_vec_4dir(%struct.su3_matrix* %mat, %struct.su3_vector* %src, %struct.su3_vector* %dest) #0 {
entry:
  %mat.addr = alloca %struct.su3_matrix*, align 8
  %src.addr = alloca %struct.su3_vector*, align 8
  %dest.addr = alloca %struct.su3_vector*, align 8
  %n = alloca i32, align 4
  %c0r = alloca double, align 8
  %c0i = alloca double, align 8
  %c1r = alloca double, align 8
  %c1i = alloca double, align 8
  %c2r = alloca double, align 8
  %c2i = alloca double, align 8
  %br = alloca double, align 8
  %bi = alloca double, align 8
  %a0 = alloca double, align 8
  %a1 = alloca double, align 8
  %a2 = alloca double, align 8
  %a = alloca %struct.su3_matrix*, align 8
  %b = alloca %struct.su3_vector*, align 8
  %c = alloca %struct.su3_vector*, align 8
  store %struct.su3_matrix* %mat, %struct.su3_matrix** %mat.addr, align 8
  store %struct.su3_vector* %src, %struct.su3_vector** %src.addr, align 8
  store %struct.su3_vector* %dest, %struct.su3_vector** %dest.addr, align 8
  %0 = load %struct.su3_matrix** %mat.addr, align 8
  store %struct.su3_matrix* %0, %struct.su3_matrix** %a, align 8
  %1 = load %struct.su3_vector** %dest.addr, align 8
  store %struct.su3_vector* %1, %struct.su3_vector** %c, align 8
  %2 = load %struct.su3_vector** %src.addr, align 8
  store %struct.su3_vector* %2, %struct.su3_vector** %b, align 8
  store i32 0, i32* %n, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %3 = load i32* %n, align 4
  %cmp = icmp slt i32 %3, 4
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %4 = load %struct.su3_vector** %b, align 8
  %c1 = getelementptr inbounds %struct.su3_vector* %4, i32 0, i32 0
  %arrayidx = getelementptr inbounds [3 x %struct.complex]* %c1, i32 0, i64 0
  %real = getelementptr inbounds %struct.complex* %arrayidx, i32 0, i32 0
  %5 = load double* %real, align 8
  store double %5, double* %br, align 8
  %6 = load %struct.su3_vector** %b, align 8
  %c2 = getelementptr inbounds %struct.su3_vector* %6, i32 0, i32 0
  %arrayidx3 = getelementptr inbounds [3 x %struct.complex]* %c2, i32 0, i64 0
  %imag = getelementptr inbounds %struct.complex* %arrayidx3, i32 0, i32 1
  %7 = load double* %imag, align 8
  store double %7, double* %bi, align 8
  %8 = load %struct.su3_matrix** %a, align 8
  %e = getelementptr inbounds %struct.su3_matrix* %8, i32 0, i32 0
  %arrayidx4 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e, i32 0, i64 0
  %arrayidx5 = getelementptr inbounds [3 x %struct.complex]* %arrayidx4, i32 0, i64 0
  %real6 = getelementptr inbounds %struct.complex* %arrayidx5, i32 0, i32 0
  %9 = load double* %real6, align 8
  store double %9, double* %a0, align 8
  %10 = load %struct.su3_matrix** %a, align 8
  %e7 = getelementptr inbounds %struct.su3_matrix* %10, i32 0, i32 0
  %arrayidx8 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e7, i32 0, i64 0
  %arrayidx9 = getelementptr inbounds [3 x %struct.complex]* %arrayidx8, i32 0, i64 1
  %real10 = getelementptr inbounds %struct.complex* %arrayidx9, i32 0, i32 0
  %11 = load double* %real10, align 8
  store double %11, double* %a1, align 8
  %12 = load %struct.su3_matrix** %a, align 8
  %e11 = getelementptr inbounds %struct.su3_matrix* %12, i32 0, i32 0
  %arrayidx12 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e11, i32 0, i64 0
  %arrayidx13 = getelementptr inbounds [3 x %struct.complex]* %arrayidx12, i32 0, i64 2
  %real14 = getelementptr inbounds %struct.complex* %arrayidx13, i32 0, i32 0
  %13 = load double* %real14, align 8
  store double %13, double* %a2, align 8
  %14 = load double* %a0, align 8
  %15 = load double* %br, align 8
  %mul = fmul double %14, %15
  store double %mul, double* %c0r, align 8
  %16 = load double* %a1, align 8
  %17 = load double* %br, align 8
  %mul15 = fmul double %16, %17
  store double %mul15, double* %c1r, align 8
  %18 = load double* %a2, align 8
  %19 = load double* %br, align 8
  %mul16 = fmul double %18, %19
  store double %mul16, double* %c2r, align 8
  %20 = load double* %a0, align 8
  %21 = load double* %bi, align 8
  %mul17 = fmul double %20, %21
  store double %mul17, double* %c0i, align 8
  %22 = load double* %a1, align 8
  %23 = load double* %bi, align 8
  %mul18 = fmul double %22, %23
  store double %mul18, double* %c1i, align 8
  %24 = load double* %a2, align 8
  %25 = load double* %bi, align 8
  %mul19 = fmul double %24, %25
  store double %mul19, double* %c2i, align 8
  %26 = load %struct.su3_matrix** %a, align 8
  %e20 = getelementptr inbounds %struct.su3_matrix* %26, i32 0, i32 0
  %arrayidx21 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e20, i32 0, i64 0
  %arrayidx22 = getelementptr inbounds [3 x %struct.complex]* %arrayidx21, i32 0, i64 0
  %imag23 = getelementptr inbounds %struct.complex* %arrayidx22, i32 0, i32 1
  %27 = load double* %imag23, align 8
  store double %27, double* %a0, align 8
  %28 = load %struct.su3_matrix** %a, align 8
  %e24 = getelementptr inbounds %struct.su3_matrix* %28, i32 0, i32 0
  %arrayidx25 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e24, i32 0, i64 0
  %arrayidx26 = getelementptr inbounds [3 x %struct.complex]* %arrayidx25, i32 0, i64 1
  %imag27 = getelementptr inbounds %struct.complex* %arrayidx26, i32 0, i32 1
  %29 = load double* %imag27, align 8
  store double %29, double* %a1, align 8
  %30 = load %struct.su3_matrix** %a, align 8
  %e28 = getelementptr inbounds %struct.su3_matrix* %30, i32 0, i32 0
  %arrayidx29 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e28, i32 0, i64 0
  %arrayidx30 = getelementptr inbounds [3 x %struct.complex]* %arrayidx29, i32 0, i64 2
  %imag31 = getelementptr inbounds %struct.complex* %arrayidx30, i32 0, i32 1
  %31 = load double* %imag31, align 8
  store double %31, double* %a2, align 8
  %32 = load double* %a0, align 8
  %33 = load double* %bi, align 8
  %mul32 = fmul double %32, %33
  %34 = load double* %c0r, align 8
  %add = fadd double %34, %mul32
  store double %add, double* %c0r, align 8
  %35 = load double* %a1, align 8
  %36 = load double* %bi, align 8
  %mul33 = fmul double %35, %36
  %37 = load double* %c1r, align 8
  %add34 = fadd double %37, %mul33
  store double %add34, double* %c1r, align 8
  %38 = load double* %a2, align 8
  %39 = load double* %bi, align 8
  %mul35 = fmul double %38, %39
  %40 = load double* %c2r, align 8
  %add36 = fadd double %40, %mul35
  store double %add36, double* %c2r, align 8
  %41 = load double* %a0, align 8
  %42 = load double* %br, align 8
  %mul37 = fmul double %41, %42
  %43 = load double* %c0i, align 8
  %sub = fsub double %43, %mul37
  store double %sub, double* %c0i, align 8
  %44 = load double* %a1, align 8
  %45 = load double* %br, align 8
  %mul38 = fmul double %44, %45
  %46 = load double* %c1i, align 8
  %sub39 = fsub double %46, %mul38
  store double %sub39, double* %c1i, align 8
  %47 = load double* %a2, align 8
  %48 = load double* %br, align 8
  %mul40 = fmul double %47, %48
  %49 = load double* %c2i, align 8
  %sub41 = fsub double %49, %mul40
  store double %sub41, double* %c2i, align 8
  %50 = load %struct.su3_vector** %b, align 8
  %c42 = getelementptr inbounds %struct.su3_vector* %50, i32 0, i32 0
  %arrayidx43 = getelementptr inbounds [3 x %struct.complex]* %c42, i32 0, i64 1
  %real44 = getelementptr inbounds %struct.complex* %arrayidx43, i32 0, i32 0
  %51 = load double* %real44, align 8
  store double %51, double* %br, align 8
  %52 = load %struct.su3_vector** %b, align 8
  %c45 = getelementptr inbounds %struct.su3_vector* %52, i32 0, i32 0
  %arrayidx46 = getelementptr inbounds [3 x %struct.complex]* %c45, i32 0, i64 1
  %imag47 = getelementptr inbounds %struct.complex* %arrayidx46, i32 0, i32 1
  %53 = load double* %imag47, align 8
  store double %53, double* %bi, align 8
  %54 = load %struct.su3_matrix** %a, align 8
  %e48 = getelementptr inbounds %struct.su3_matrix* %54, i32 0, i32 0
  %arrayidx49 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e48, i32 0, i64 1
  %arrayidx50 = getelementptr inbounds [3 x %struct.complex]* %arrayidx49, i32 0, i64 0
  %real51 = getelementptr inbounds %struct.complex* %arrayidx50, i32 0, i32 0
  %55 = load double* %real51, align 8
  store double %55, double* %a0, align 8
  %56 = load %struct.su3_matrix** %a, align 8
  %e52 = getelementptr inbounds %struct.su3_matrix* %56, i32 0, i32 0
  %arrayidx53 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e52, i32 0, i64 1
  %arrayidx54 = getelementptr inbounds [3 x %struct.complex]* %arrayidx53, i32 0, i64 1
  %real55 = getelementptr inbounds %struct.complex* %arrayidx54, i32 0, i32 0
  %57 = load double* %real55, align 8
  store double %57, double* %a1, align 8
  %58 = load %struct.su3_matrix** %a, align 8
  %e56 = getelementptr inbounds %struct.su3_matrix* %58, i32 0, i32 0
  %arrayidx57 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e56, i32 0, i64 1
  %arrayidx58 = getelementptr inbounds [3 x %struct.complex]* %arrayidx57, i32 0, i64 2
  %real59 = getelementptr inbounds %struct.complex* %arrayidx58, i32 0, i32 0
  %59 = load double* %real59, align 8
  store double %59, double* %a2, align 8
  %60 = load double* %a0, align 8
  %61 = load double* %br, align 8
  %mul60 = fmul double %60, %61
  %62 = load double* %c0r, align 8
  %add61 = fadd double %62, %mul60
  store double %add61, double* %c0r, align 8
  %63 = load double* %a1, align 8
  %64 = load double* %br, align 8
  %mul62 = fmul double %63, %64
  %65 = load double* %c1r, align 8
  %add63 = fadd double %65, %mul62
  store double %add63, double* %c1r, align 8
  %66 = load double* %a2, align 8
  %67 = load double* %br, align 8
  %mul64 = fmul double %66, %67
  %68 = load double* %c2r, align 8
  %add65 = fadd double %68, %mul64
  store double %add65, double* %c2r, align 8
  %69 = load double* %a0, align 8
  %70 = load double* %bi, align 8
  %mul66 = fmul double %69, %70
  %71 = load double* %c0i, align 8
  %add67 = fadd double %71, %mul66
  store double %add67, double* %c0i, align 8
  %72 = load double* %a1, align 8
  %73 = load double* %bi, align 8
  %mul68 = fmul double %72, %73
  %74 = load double* %c1i, align 8
  %add69 = fadd double %74, %mul68
  store double %add69, double* %c1i, align 8
  %75 = load double* %a2, align 8
  %76 = load double* %bi, align 8
  %mul70 = fmul double %75, %76
  %77 = load double* %c2i, align 8
  %add71 = fadd double %77, %mul70
  store double %add71, double* %c2i, align 8
  %78 = load %struct.su3_matrix** %a, align 8
  %e72 = getelementptr inbounds %struct.su3_matrix* %78, i32 0, i32 0
  %arrayidx73 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e72, i32 0, i64 1
  %arrayidx74 = getelementptr inbounds [3 x %struct.complex]* %arrayidx73, i32 0, i64 0
  %imag75 = getelementptr inbounds %struct.complex* %arrayidx74, i32 0, i32 1
  %79 = load double* %imag75, align 8
  store double %79, double* %a0, align 8
  %80 = load %struct.su3_matrix** %a, align 8
  %e76 = getelementptr inbounds %struct.su3_matrix* %80, i32 0, i32 0
  %arrayidx77 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e76, i32 0, i64 1
  %arrayidx78 = getelementptr inbounds [3 x %struct.complex]* %arrayidx77, i32 0, i64 1
  %imag79 = getelementptr inbounds %struct.complex* %arrayidx78, i32 0, i32 1
  %81 = load double* %imag79, align 8
  store double %81, double* %a1, align 8
  %82 = load %struct.su3_matrix** %a, align 8
  %e80 = getelementptr inbounds %struct.su3_matrix* %82, i32 0, i32 0
  %arrayidx81 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e80, i32 0, i64 1
  %arrayidx82 = getelementptr inbounds [3 x %struct.complex]* %arrayidx81, i32 0, i64 2
  %imag83 = getelementptr inbounds %struct.complex* %arrayidx82, i32 0, i32 1
  %83 = load double* %imag83, align 8
  store double %83, double* %a2, align 8
  %84 = load double* %a0, align 8
  %85 = load double* %bi, align 8
  %mul84 = fmul double %84, %85
  %86 = load double* %c0r, align 8
  %add85 = fadd double %86, %mul84
  store double %add85, double* %c0r, align 8
  %87 = load double* %a1, align 8
  %88 = load double* %bi, align 8
  %mul86 = fmul double %87, %88
  %89 = load double* %c1r, align 8
  %add87 = fadd double %89, %mul86
  store double %add87, double* %c1r, align 8
  %90 = load double* %a2, align 8
  %91 = load double* %bi, align 8
  %mul88 = fmul double %90, %91
  %92 = load double* %c2r, align 8
  %add89 = fadd double %92, %mul88
  store double %add89, double* %c2r, align 8
  %93 = load double* %a0, align 8
  %94 = load double* %br, align 8
  %mul90 = fmul double %93, %94
  %95 = load double* %c0i, align 8
  %sub91 = fsub double %95, %mul90
  store double %sub91, double* %c0i, align 8
  %96 = load double* %a1, align 8
  %97 = load double* %br, align 8
  %mul92 = fmul double %96, %97
  %98 = load double* %c1i, align 8
  %sub93 = fsub double %98, %mul92
  store double %sub93, double* %c1i, align 8
  %99 = load double* %a2, align 8
  %100 = load double* %br, align 8
  %mul94 = fmul double %99, %100
  %101 = load double* %c2i, align 8
  %sub95 = fsub double %101, %mul94
  store double %sub95, double* %c2i, align 8
  %102 = load %struct.su3_vector** %b, align 8
  %c96 = getelementptr inbounds %struct.su3_vector* %102, i32 0, i32 0
  %arrayidx97 = getelementptr inbounds [3 x %struct.complex]* %c96, i32 0, i64 2
  %real98 = getelementptr inbounds %struct.complex* %arrayidx97, i32 0, i32 0
  %103 = load double* %real98, align 8
  store double %103, double* %br, align 8
  %104 = load %struct.su3_vector** %b, align 8
  %c99 = getelementptr inbounds %struct.su3_vector* %104, i32 0, i32 0
  %arrayidx100 = getelementptr inbounds [3 x %struct.complex]* %c99, i32 0, i64 2
  %imag101 = getelementptr inbounds %struct.complex* %arrayidx100, i32 0, i32 1
  %105 = load double* %imag101, align 8
  store double %105, double* %bi, align 8
  %106 = load %struct.su3_matrix** %a, align 8
  %e102 = getelementptr inbounds %struct.su3_matrix* %106, i32 0, i32 0
  %arrayidx103 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e102, i32 0, i64 2
  %arrayidx104 = getelementptr inbounds [3 x %struct.complex]* %arrayidx103, i32 0, i64 0
  %real105 = getelementptr inbounds %struct.complex* %arrayidx104, i32 0, i32 0
  %107 = load double* %real105, align 8
  store double %107, double* %a0, align 8
  %108 = load %struct.su3_matrix** %a, align 8
  %e106 = getelementptr inbounds %struct.su3_matrix* %108, i32 0, i32 0
  %arrayidx107 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e106, i32 0, i64 2
  %arrayidx108 = getelementptr inbounds [3 x %struct.complex]* %arrayidx107, i32 0, i64 1
  %real109 = getelementptr inbounds %struct.complex* %arrayidx108, i32 0, i32 0
  %109 = load double* %real109, align 8
  store double %109, double* %a1, align 8
  %110 = load %struct.su3_matrix** %a, align 8
  %e110 = getelementptr inbounds %struct.su3_matrix* %110, i32 0, i32 0
  %arrayidx111 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e110, i32 0, i64 2
  %arrayidx112 = getelementptr inbounds [3 x %struct.complex]* %arrayidx111, i32 0, i64 2
  %real113 = getelementptr inbounds %struct.complex* %arrayidx112, i32 0, i32 0
  %111 = load double* %real113, align 8
  store double %111, double* %a2, align 8
  %112 = load double* %a0, align 8
  %113 = load double* %br, align 8
  %mul114 = fmul double %112, %113
  %114 = load double* %c0r, align 8
  %add115 = fadd double %114, %mul114
  store double %add115, double* %c0r, align 8
  %115 = load double* %a1, align 8
  %116 = load double* %br, align 8
  %mul116 = fmul double %115, %116
  %117 = load double* %c1r, align 8
  %add117 = fadd double %117, %mul116
  store double %add117, double* %c1r, align 8
  %118 = load double* %a2, align 8
  %119 = load double* %br, align 8
  %mul118 = fmul double %118, %119
  %120 = load double* %c2r, align 8
  %add119 = fadd double %120, %mul118
  store double %add119, double* %c2r, align 8
  %121 = load double* %a0, align 8
  %122 = load double* %bi, align 8
  %mul120 = fmul double %121, %122
  %123 = load double* %c0i, align 8
  %add121 = fadd double %123, %mul120
  store double %add121, double* %c0i, align 8
  %124 = load double* %a1, align 8
  %125 = load double* %bi, align 8
  %mul122 = fmul double %124, %125
  %126 = load double* %c1i, align 8
  %add123 = fadd double %126, %mul122
  store double %add123, double* %c1i, align 8
  %127 = load double* %a2, align 8
  %128 = load double* %bi, align 8
  %mul124 = fmul double %127, %128
  %129 = load double* %c2i, align 8
  %add125 = fadd double %129, %mul124
  store double %add125, double* %c2i, align 8
  %130 = load %struct.su3_matrix** %a, align 8
  %e126 = getelementptr inbounds %struct.su3_matrix* %130, i32 0, i32 0
  %arrayidx127 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e126, i32 0, i64 2
  %arrayidx128 = getelementptr inbounds [3 x %struct.complex]* %arrayidx127, i32 0, i64 0
  %imag129 = getelementptr inbounds %struct.complex* %arrayidx128, i32 0, i32 1
  %131 = load double* %imag129, align 8
  store double %131, double* %a0, align 8
  %132 = load %struct.su3_matrix** %a, align 8
  %e130 = getelementptr inbounds %struct.su3_matrix* %132, i32 0, i32 0
  %arrayidx131 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e130, i32 0, i64 2
  %arrayidx132 = getelementptr inbounds [3 x %struct.complex]* %arrayidx131, i32 0, i64 1
  %imag133 = getelementptr inbounds %struct.complex* %arrayidx132, i32 0, i32 1
  %133 = load double* %imag133, align 8
  store double %133, double* %a1, align 8
  %134 = load %struct.su3_matrix** %a, align 8
  %e134 = getelementptr inbounds %struct.su3_matrix* %134, i32 0, i32 0
  %arrayidx135 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e134, i32 0, i64 2
  %arrayidx136 = getelementptr inbounds [3 x %struct.complex]* %arrayidx135, i32 0, i64 2
  %imag137 = getelementptr inbounds %struct.complex* %arrayidx136, i32 0, i32 1
  %135 = load double* %imag137, align 8
  store double %135, double* %a2, align 8
  %136 = load double* %a0, align 8
  %137 = load double* %bi, align 8
  %mul138 = fmul double %136, %137
  %138 = load double* %c0r, align 8
  %add139 = fadd double %138, %mul138
  store double %add139, double* %c0r, align 8
  %139 = load double* %a1, align 8
  %140 = load double* %bi, align 8
  %mul140 = fmul double %139, %140
  %141 = load double* %c1r, align 8
  %add141 = fadd double %141, %mul140
  store double %add141, double* %c1r, align 8
  %142 = load double* %a2, align 8
  %143 = load double* %bi, align 8
  %mul142 = fmul double %142, %143
  %144 = load double* %c2r, align 8
  %add143 = fadd double %144, %mul142
  store double %add143, double* %c2r, align 8
  %145 = load double* %a0, align 8
  %146 = load double* %br, align 8
  %mul144 = fmul double %145, %146
  %147 = load double* %c0i, align 8
  %sub145 = fsub double %147, %mul144
  store double %sub145, double* %c0i, align 8
  %148 = load double* %a1, align 8
  %149 = load double* %br, align 8
  %mul146 = fmul double %148, %149
  %150 = load double* %c1i, align 8
  %sub147 = fsub double %150, %mul146
  store double %sub147, double* %c1i, align 8
  %151 = load double* %a2, align 8
  %152 = load double* %br, align 8
  %mul148 = fmul double %151, %152
  %153 = load double* %c2i, align 8
  %sub149 = fsub double %153, %mul148
  store double %sub149, double* %c2i, align 8
  %154 = load double* %c0r, align 8
  %155 = load %struct.su3_vector** %c, align 8
  %c150 = getelementptr inbounds %struct.su3_vector* %155, i32 0, i32 0
  %arrayidx151 = getelementptr inbounds [3 x %struct.complex]* %c150, i32 0, i64 0
  %real152 = getelementptr inbounds %struct.complex* %arrayidx151, i32 0, i32 0
  store double %154, double* %real152, align 8
  %156 = load double* %c0i, align 8
  %157 = load %struct.su3_vector** %c, align 8
  %c153 = getelementptr inbounds %struct.su3_vector* %157, i32 0, i32 0
  %arrayidx154 = getelementptr inbounds [3 x %struct.complex]* %c153, i32 0, i64 0
  %imag155 = getelementptr inbounds %struct.complex* %arrayidx154, i32 0, i32 1
  store double %156, double* %imag155, align 8
  %158 = load double* %c1r, align 8
  %159 = load %struct.su3_vector** %c, align 8
  %c156 = getelementptr inbounds %struct.su3_vector* %159, i32 0, i32 0
  %arrayidx157 = getelementptr inbounds [3 x %struct.complex]* %c156, i32 0, i64 1
  %real158 = getelementptr inbounds %struct.complex* %arrayidx157, i32 0, i32 0
  store double %158, double* %real158, align 8
  %160 = load double* %c1i, align 8
  %161 = load %struct.su3_vector** %c, align 8
  %c159 = getelementptr inbounds %struct.su3_vector* %161, i32 0, i32 0
  %arrayidx160 = getelementptr inbounds [3 x %struct.complex]* %c159, i32 0, i64 1
  %imag161 = getelementptr inbounds %struct.complex* %arrayidx160, i32 0, i32 1
  store double %160, double* %imag161, align 8
  %162 = load double* %c2r, align 8
  %163 = load %struct.su3_vector** %c, align 8
  %c162 = getelementptr inbounds %struct.su3_vector* %163, i32 0, i32 0
  %arrayidx163 = getelementptr inbounds [3 x %struct.complex]* %c162, i32 0, i64 2
  %real164 = getelementptr inbounds %struct.complex* %arrayidx163, i32 0, i32 0
  store double %162, double* %real164, align 8
  %164 = load double* %c2i, align 8
  %165 = load %struct.su3_vector** %c, align 8
  %c165 = getelementptr inbounds %struct.su3_vector* %165, i32 0, i32 0
  %arrayidx166 = getelementptr inbounds [3 x %struct.complex]* %c165, i32 0, i64 2
  %imag167 = getelementptr inbounds %struct.complex* %arrayidx166, i32 0, i32 1
  store double %164, double* %imag167, align 8
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %166 = load i32* %n, align 4
  %inc = add nsw i32 %166, 1
  store i32 %inc, i32* %n, align 4
  %167 = load %struct.su3_matrix** %a, align 8
  %incdec.ptr = getelementptr inbounds %struct.su3_matrix* %167, i32 1
  store %struct.su3_matrix* %incdec.ptr, %struct.su3_matrix** %a, align 8
  %168 = load %struct.su3_vector** %c, align 8
  %incdec.ptr168 = getelementptr inbounds %struct.su3_vector* %168, i32 1
  store %struct.su3_vector* %incdec.ptr168, %struct.su3_vector** %c, align 8
  br label %for.cond

for.end:                                          ; preds = %for.cond
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @mult_adj_su3_mat_4vec(%struct.su3_matrix* %mat, %struct.su3_vector* %src, %struct.su3_vector* %dest0, %struct.su3_vector* %dest1, %struct.su3_vector* %dest2, %struct.su3_vector* %dest3) #0 {
entry:
  %mat.addr = alloca %struct.su3_matrix*, align 8
  %src.addr = alloca %struct.su3_vector*, align 8
  %dest0.addr = alloca %struct.su3_vector*, align 8
  %dest1.addr = alloca %struct.su3_vector*, align 8
  %dest2.addr = alloca %struct.su3_vector*, align 8
  %dest3.addr = alloca %struct.su3_vector*, align 8
  %n = alloca i32, align 4
  %c0r = alloca double, align 8
  %c0i = alloca double, align 8
  %c1r = alloca double, align 8
  %c1i = alloca double, align 8
  %c2r = alloca double, align 8
  %c2i = alloca double, align 8
  %br = alloca double, align 8
  %bi = alloca double, align 8
  %a0 = alloca double, align 8
  %a1 = alloca double, align 8
  %a2 = alloca double, align 8
  %a = alloca %struct.su3_matrix*, align 8
  %b = alloca %struct.su3_vector*, align 8
  %c = alloca %struct.su3_vector*, align 8
  %cc = alloca [4 x %struct.su3_vector*], align 16
  store %struct.su3_matrix* %mat, %struct.su3_matrix** %mat.addr, align 8
  store %struct.su3_vector* %src, %struct.su3_vector** %src.addr, align 8
  store %struct.su3_vector* %dest0, %struct.su3_vector** %dest0.addr, align 8
  store %struct.su3_vector* %dest1, %struct.su3_vector** %dest1.addr, align 8
  store %struct.su3_vector* %dest2, %struct.su3_vector** %dest2.addr, align 8
  store %struct.su3_vector* %dest3, %struct.su3_vector** %dest3.addr, align 8
  %0 = load %struct.su3_vector** %dest0.addr, align 8
  %arrayidx = getelementptr inbounds [4 x %struct.su3_vector*]* %cc, i32 0, i64 0
  store %struct.su3_vector* %0, %struct.su3_vector** %arrayidx, align 8
  %1 = load %struct.su3_vector** %dest1.addr, align 8
  %arrayidx1 = getelementptr inbounds [4 x %struct.su3_vector*]* %cc, i32 0, i64 1
  store %struct.su3_vector* %1, %struct.su3_vector** %arrayidx1, align 8
  %2 = load %struct.su3_vector** %dest2.addr, align 8
  %arrayidx2 = getelementptr inbounds [4 x %struct.su3_vector*]* %cc, i32 0, i64 2
  store %struct.su3_vector* %2, %struct.su3_vector** %arrayidx2, align 8
  %3 = load %struct.su3_vector** %dest3.addr, align 8
  %arrayidx3 = getelementptr inbounds [4 x %struct.su3_vector*]* %cc, i32 0, i64 3
  store %struct.su3_vector* %3, %struct.su3_vector** %arrayidx3, align 8
  %4 = load %struct.su3_matrix** %mat.addr, align 8
  store %struct.su3_matrix* %4, %struct.su3_matrix** %a, align 8
  %5 = load %struct.su3_vector** %dest0.addr, align 8
  store %struct.su3_vector* %5, %struct.su3_vector** %c, align 8
  %6 = load %struct.su3_vector** %src.addr, align 8
  store %struct.su3_vector* %6, %struct.su3_vector** %b, align 8
  store i32 0, i32* %n, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %7 = load i32* %n, align 4
  %cmp = icmp slt i32 %7, 4
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %8 = load i32* %n, align 4
  %idxprom = sext i32 %8 to i64
  %arrayidx4 = getelementptr inbounds [4 x %struct.su3_vector*]* %cc, i32 0, i64 %idxprom
  %9 = load %struct.su3_vector** %arrayidx4, align 8
  store %struct.su3_vector* %9, %struct.su3_vector** %c, align 8
  %10 = load %struct.su3_vector** %b, align 8
  %c5 = getelementptr inbounds %struct.su3_vector* %10, i32 0, i32 0
  %arrayidx6 = getelementptr inbounds [3 x %struct.complex]* %c5, i32 0, i64 0
  %real = getelementptr inbounds %struct.complex* %arrayidx6, i32 0, i32 0
  %11 = load double* %real, align 8
  store double %11, double* %br, align 8
  %12 = load %struct.su3_vector** %b, align 8
  %c7 = getelementptr inbounds %struct.su3_vector* %12, i32 0, i32 0
  %arrayidx8 = getelementptr inbounds [3 x %struct.complex]* %c7, i32 0, i64 0
  %imag = getelementptr inbounds %struct.complex* %arrayidx8, i32 0, i32 1
  %13 = load double* %imag, align 8
  store double %13, double* %bi, align 8
  %14 = load %struct.su3_matrix** %a, align 8
  %e = getelementptr inbounds %struct.su3_matrix* %14, i32 0, i32 0
  %arrayidx9 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e, i32 0, i64 0
  %arrayidx10 = getelementptr inbounds [3 x %struct.complex]* %arrayidx9, i32 0, i64 0
  %real11 = getelementptr inbounds %struct.complex* %arrayidx10, i32 0, i32 0
  %15 = load double* %real11, align 8
  store double %15, double* %a0, align 8
  %16 = load %struct.su3_matrix** %a, align 8
  %e12 = getelementptr inbounds %struct.su3_matrix* %16, i32 0, i32 0
  %arrayidx13 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e12, i32 0, i64 0
  %arrayidx14 = getelementptr inbounds [3 x %struct.complex]* %arrayidx13, i32 0, i64 1
  %real15 = getelementptr inbounds %struct.complex* %arrayidx14, i32 0, i32 0
  %17 = load double* %real15, align 8
  store double %17, double* %a1, align 8
  %18 = load %struct.su3_matrix** %a, align 8
  %e16 = getelementptr inbounds %struct.su3_matrix* %18, i32 0, i32 0
  %arrayidx17 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e16, i32 0, i64 0
  %arrayidx18 = getelementptr inbounds [3 x %struct.complex]* %arrayidx17, i32 0, i64 2
  %real19 = getelementptr inbounds %struct.complex* %arrayidx18, i32 0, i32 0
  %19 = load double* %real19, align 8
  store double %19, double* %a2, align 8
  %20 = load double* %a0, align 8
  %21 = load double* %br, align 8
  %mul = fmul double %20, %21
  store double %mul, double* %c0r, align 8
  %22 = load double* %a1, align 8
  %23 = load double* %br, align 8
  %mul20 = fmul double %22, %23
  store double %mul20, double* %c1r, align 8
  %24 = load double* %a2, align 8
  %25 = load double* %br, align 8
  %mul21 = fmul double %24, %25
  store double %mul21, double* %c2r, align 8
  %26 = load double* %a0, align 8
  %27 = load double* %bi, align 8
  %mul22 = fmul double %26, %27
  store double %mul22, double* %c0i, align 8
  %28 = load double* %a1, align 8
  %29 = load double* %bi, align 8
  %mul23 = fmul double %28, %29
  store double %mul23, double* %c1i, align 8
  %30 = load double* %a2, align 8
  %31 = load double* %bi, align 8
  %mul24 = fmul double %30, %31
  store double %mul24, double* %c2i, align 8
  %32 = load %struct.su3_matrix** %a, align 8
  %e25 = getelementptr inbounds %struct.su3_matrix* %32, i32 0, i32 0
  %arrayidx26 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e25, i32 0, i64 0
  %arrayidx27 = getelementptr inbounds [3 x %struct.complex]* %arrayidx26, i32 0, i64 0
  %imag28 = getelementptr inbounds %struct.complex* %arrayidx27, i32 0, i32 1
  %33 = load double* %imag28, align 8
  store double %33, double* %a0, align 8
  %34 = load %struct.su3_matrix** %a, align 8
  %e29 = getelementptr inbounds %struct.su3_matrix* %34, i32 0, i32 0
  %arrayidx30 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e29, i32 0, i64 0
  %arrayidx31 = getelementptr inbounds [3 x %struct.complex]* %arrayidx30, i32 0, i64 1
  %imag32 = getelementptr inbounds %struct.complex* %arrayidx31, i32 0, i32 1
  %35 = load double* %imag32, align 8
  store double %35, double* %a1, align 8
  %36 = load %struct.su3_matrix** %a, align 8
  %e33 = getelementptr inbounds %struct.su3_matrix* %36, i32 0, i32 0
  %arrayidx34 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e33, i32 0, i64 0
  %arrayidx35 = getelementptr inbounds [3 x %struct.complex]* %arrayidx34, i32 0, i64 2
  %imag36 = getelementptr inbounds %struct.complex* %arrayidx35, i32 0, i32 1
  %37 = load double* %imag36, align 8
  store double %37, double* %a2, align 8
  %38 = load double* %a0, align 8
  %39 = load double* %bi, align 8
  %mul37 = fmul double %38, %39
  %40 = load double* %c0r, align 8
  %add = fadd double %40, %mul37
  store double %add, double* %c0r, align 8
  %41 = load double* %a1, align 8
  %42 = load double* %bi, align 8
  %mul38 = fmul double %41, %42
  %43 = load double* %c1r, align 8
  %add39 = fadd double %43, %mul38
  store double %add39, double* %c1r, align 8
  %44 = load double* %a2, align 8
  %45 = load double* %bi, align 8
  %mul40 = fmul double %44, %45
  %46 = load double* %c2r, align 8
  %add41 = fadd double %46, %mul40
  store double %add41, double* %c2r, align 8
  %47 = load double* %a0, align 8
  %48 = load double* %br, align 8
  %mul42 = fmul double %47, %48
  %49 = load double* %c0i, align 8
  %sub = fsub double %49, %mul42
  store double %sub, double* %c0i, align 8
  %50 = load double* %a1, align 8
  %51 = load double* %br, align 8
  %mul43 = fmul double %50, %51
  %52 = load double* %c1i, align 8
  %sub44 = fsub double %52, %mul43
  store double %sub44, double* %c1i, align 8
  %53 = load double* %a2, align 8
  %54 = load double* %br, align 8
  %mul45 = fmul double %53, %54
  %55 = load double* %c2i, align 8
  %sub46 = fsub double %55, %mul45
  store double %sub46, double* %c2i, align 8
  %56 = load %struct.su3_vector** %b, align 8
  %c47 = getelementptr inbounds %struct.su3_vector* %56, i32 0, i32 0
  %arrayidx48 = getelementptr inbounds [3 x %struct.complex]* %c47, i32 0, i64 1
  %real49 = getelementptr inbounds %struct.complex* %arrayidx48, i32 0, i32 0
  %57 = load double* %real49, align 8
  store double %57, double* %br, align 8
  %58 = load %struct.su3_vector** %b, align 8
  %c50 = getelementptr inbounds %struct.su3_vector* %58, i32 0, i32 0
  %arrayidx51 = getelementptr inbounds [3 x %struct.complex]* %c50, i32 0, i64 1
  %imag52 = getelementptr inbounds %struct.complex* %arrayidx51, i32 0, i32 1
  %59 = load double* %imag52, align 8
  store double %59, double* %bi, align 8
  %60 = load %struct.su3_matrix** %a, align 8
  %e53 = getelementptr inbounds %struct.su3_matrix* %60, i32 0, i32 0
  %arrayidx54 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e53, i32 0, i64 1
  %arrayidx55 = getelementptr inbounds [3 x %struct.complex]* %arrayidx54, i32 0, i64 0
  %real56 = getelementptr inbounds %struct.complex* %arrayidx55, i32 0, i32 0
  %61 = load double* %real56, align 8
  store double %61, double* %a0, align 8
  %62 = load %struct.su3_matrix** %a, align 8
  %e57 = getelementptr inbounds %struct.su3_matrix* %62, i32 0, i32 0
  %arrayidx58 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e57, i32 0, i64 1
  %arrayidx59 = getelementptr inbounds [3 x %struct.complex]* %arrayidx58, i32 0, i64 1
  %real60 = getelementptr inbounds %struct.complex* %arrayidx59, i32 0, i32 0
  %63 = load double* %real60, align 8
  store double %63, double* %a1, align 8
  %64 = load %struct.su3_matrix** %a, align 8
  %e61 = getelementptr inbounds %struct.su3_matrix* %64, i32 0, i32 0
  %arrayidx62 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e61, i32 0, i64 1
  %arrayidx63 = getelementptr inbounds [3 x %struct.complex]* %arrayidx62, i32 0, i64 2
  %real64 = getelementptr inbounds %struct.complex* %arrayidx63, i32 0, i32 0
  %65 = load double* %real64, align 8
  store double %65, double* %a2, align 8
  %66 = load double* %a0, align 8
  %67 = load double* %br, align 8
  %mul65 = fmul double %66, %67
  %68 = load double* %c0r, align 8
  %add66 = fadd double %68, %mul65
  store double %add66, double* %c0r, align 8
  %69 = load double* %a1, align 8
  %70 = load double* %br, align 8
  %mul67 = fmul double %69, %70
  %71 = load double* %c1r, align 8
  %add68 = fadd double %71, %mul67
  store double %add68, double* %c1r, align 8
  %72 = load double* %a2, align 8
  %73 = load double* %br, align 8
  %mul69 = fmul double %72, %73
  %74 = load double* %c2r, align 8
  %add70 = fadd double %74, %mul69
  store double %add70, double* %c2r, align 8
  %75 = load double* %a0, align 8
  %76 = load double* %bi, align 8
  %mul71 = fmul double %75, %76
  %77 = load double* %c0i, align 8
  %add72 = fadd double %77, %mul71
  store double %add72, double* %c0i, align 8
  %78 = load double* %a1, align 8
  %79 = load double* %bi, align 8
  %mul73 = fmul double %78, %79
  %80 = load double* %c1i, align 8
  %add74 = fadd double %80, %mul73
  store double %add74, double* %c1i, align 8
  %81 = load double* %a2, align 8
  %82 = load double* %bi, align 8
  %mul75 = fmul double %81, %82
  %83 = load double* %c2i, align 8
  %add76 = fadd double %83, %mul75
  store double %add76, double* %c2i, align 8
  %84 = load %struct.su3_matrix** %a, align 8
  %e77 = getelementptr inbounds %struct.su3_matrix* %84, i32 0, i32 0
  %arrayidx78 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e77, i32 0, i64 1
  %arrayidx79 = getelementptr inbounds [3 x %struct.complex]* %arrayidx78, i32 0, i64 0
  %imag80 = getelementptr inbounds %struct.complex* %arrayidx79, i32 0, i32 1
  %85 = load double* %imag80, align 8
  store double %85, double* %a0, align 8
  %86 = load %struct.su3_matrix** %a, align 8
  %e81 = getelementptr inbounds %struct.su3_matrix* %86, i32 0, i32 0
  %arrayidx82 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e81, i32 0, i64 1
  %arrayidx83 = getelementptr inbounds [3 x %struct.complex]* %arrayidx82, i32 0, i64 1
  %imag84 = getelementptr inbounds %struct.complex* %arrayidx83, i32 0, i32 1
  %87 = load double* %imag84, align 8
  store double %87, double* %a1, align 8
  %88 = load %struct.su3_matrix** %a, align 8
  %e85 = getelementptr inbounds %struct.su3_matrix* %88, i32 0, i32 0
  %arrayidx86 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e85, i32 0, i64 1
  %arrayidx87 = getelementptr inbounds [3 x %struct.complex]* %arrayidx86, i32 0, i64 2
  %imag88 = getelementptr inbounds %struct.complex* %arrayidx87, i32 0, i32 1
  %89 = load double* %imag88, align 8
  store double %89, double* %a2, align 8
  %90 = load double* %a0, align 8
  %91 = load double* %bi, align 8
  %mul89 = fmul double %90, %91
  %92 = load double* %c0r, align 8
  %add90 = fadd double %92, %mul89
  store double %add90, double* %c0r, align 8
  %93 = load double* %a1, align 8
  %94 = load double* %bi, align 8
  %mul91 = fmul double %93, %94
  %95 = load double* %c1r, align 8
  %add92 = fadd double %95, %mul91
  store double %add92, double* %c1r, align 8
  %96 = load double* %a2, align 8
  %97 = load double* %bi, align 8
  %mul93 = fmul double %96, %97
  %98 = load double* %c2r, align 8
  %add94 = fadd double %98, %mul93
  store double %add94, double* %c2r, align 8
  %99 = load double* %a0, align 8
  %100 = load double* %br, align 8
  %mul95 = fmul double %99, %100
  %101 = load double* %c0i, align 8
  %sub96 = fsub double %101, %mul95
  store double %sub96, double* %c0i, align 8
  %102 = load double* %a1, align 8
  %103 = load double* %br, align 8
  %mul97 = fmul double %102, %103
  %104 = load double* %c1i, align 8
  %sub98 = fsub double %104, %mul97
  store double %sub98, double* %c1i, align 8
  %105 = load double* %a2, align 8
  %106 = load double* %br, align 8
  %mul99 = fmul double %105, %106
  %107 = load double* %c2i, align 8
  %sub100 = fsub double %107, %mul99
  store double %sub100, double* %c2i, align 8
  %108 = load %struct.su3_vector** %b, align 8
  %c101 = getelementptr inbounds %struct.su3_vector* %108, i32 0, i32 0
  %arrayidx102 = getelementptr inbounds [3 x %struct.complex]* %c101, i32 0, i64 2
  %real103 = getelementptr inbounds %struct.complex* %arrayidx102, i32 0, i32 0
  %109 = load double* %real103, align 8
  store double %109, double* %br, align 8
  %110 = load %struct.su3_vector** %b, align 8
  %c104 = getelementptr inbounds %struct.su3_vector* %110, i32 0, i32 0
  %arrayidx105 = getelementptr inbounds [3 x %struct.complex]* %c104, i32 0, i64 2
  %imag106 = getelementptr inbounds %struct.complex* %arrayidx105, i32 0, i32 1
  %111 = load double* %imag106, align 8
  store double %111, double* %bi, align 8
  %112 = load %struct.su3_matrix** %a, align 8
  %e107 = getelementptr inbounds %struct.su3_matrix* %112, i32 0, i32 0
  %arrayidx108 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e107, i32 0, i64 2
  %arrayidx109 = getelementptr inbounds [3 x %struct.complex]* %arrayidx108, i32 0, i64 0
  %real110 = getelementptr inbounds %struct.complex* %arrayidx109, i32 0, i32 0
  %113 = load double* %real110, align 8
  store double %113, double* %a0, align 8
  %114 = load %struct.su3_matrix** %a, align 8
  %e111 = getelementptr inbounds %struct.su3_matrix* %114, i32 0, i32 0
  %arrayidx112 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e111, i32 0, i64 2
  %arrayidx113 = getelementptr inbounds [3 x %struct.complex]* %arrayidx112, i32 0, i64 1
  %real114 = getelementptr inbounds %struct.complex* %arrayidx113, i32 0, i32 0
  %115 = load double* %real114, align 8
  store double %115, double* %a1, align 8
  %116 = load %struct.su3_matrix** %a, align 8
  %e115 = getelementptr inbounds %struct.su3_matrix* %116, i32 0, i32 0
  %arrayidx116 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e115, i32 0, i64 2
  %arrayidx117 = getelementptr inbounds [3 x %struct.complex]* %arrayidx116, i32 0, i64 2
  %real118 = getelementptr inbounds %struct.complex* %arrayidx117, i32 0, i32 0
  %117 = load double* %real118, align 8
  store double %117, double* %a2, align 8
  %118 = load double* %a0, align 8
  %119 = load double* %br, align 8
  %mul119 = fmul double %118, %119
  %120 = load double* %c0r, align 8
  %add120 = fadd double %120, %mul119
  store double %add120, double* %c0r, align 8
  %121 = load double* %a1, align 8
  %122 = load double* %br, align 8
  %mul121 = fmul double %121, %122
  %123 = load double* %c1r, align 8
  %add122 = fadd double %123, %mul121
  store double %add122, double* %c1r, align 8
  %124 = load double* %a2, align 8
  %125 = load double* %br, align 8
  %mul123 = fmul double %124, %125
  %126 = load double* %c2r, align 8
  %add124 = fadd double %126, %mul123
  store double %add124, double* %c2r, align 8
  %127 = load double* %a0, align 8
  %128 = load double* %bi, align 8
  %mul125 = fmul double %127, %128
  %129 = load double* %c0i, align 8
  %add126 = fadd double %129, %mul125
  store double %add126, double* %c0i, align 8
  %130 = load double* %a1, align 8
  %131 = load double* %bi, align 8
  %mul127 = fmul double %130, %131
  %132 = load double* %c1i, align 8
  %add128 = fadd double %132, %mul127
  store double %add128, double* %c1i, align 8
  %133 = load double* %a2, align 8
  %134 = load double* %bi, align 8
  %mul129 = fmul double %133, %134
  %135 = load double* %c2i, align 8
  %add130 = fadd double %135, %mul129
  store double %add130, double* %c2i, align 8
  %136 = load %struct.su3_matrix** %a, align 8
  %e131 = getelementptr inbounds %struct.su3_matrix* %136, i32 0, i32 0
  %arrayidx132 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e131, i32 0, i64 2
  %arrayidx133 = getelementptr inbounds [3 x %struct.complex]* %arrayidx132, i32 0, i64 0
  %imag134 = getelementptr inbounds %struct.complex* %arrayidx133, i32 0, i32 1
  %137 = load double* %imag134, align 8
  store double %137, double* %a0, align 8
  %138 = load %struct.su3_matrix** %a, align 8
  %e135 = getelementptr inbounds %struct.su3_matrix* %138, i32 0, i32 0
  %arrayidx136 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e135, i32 0, i64 2
  %arrayidx137 = getelementptr inbounds [3 x %struct.complex]* %arrayidx136, i32 0, i64 1
  %imag138 = getelementptr inbounds %struct.complex* %arrayidx137, i32 0, i32 1
  %139 = load double* %imag138, align 8
  store double %139, double* %a1, align 8
  %140 = load %struct.su3_matrix** %a, align 8
  %e139 = getelementptr inbounds %struct.su3_matrix* %140, i32 0, i32 0
  %arrayidx140 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e139, i32 0, i64 2
  %arrayidx141 = getelementptr inbounds [3 x %struct.complex]* %arrayidx140, i32 0, i64 2
  %imag142 = getelementptr inbounds %struct.complex* %arrayidx141, i32 0, i32 1
  %141 = load double* %imag142, align 8
  store double %141, double* %a2, align 8
  %142 = load double* %a0, align 8
  %143 = load double* %bi, align 8
  %mul143 = fmul double %142, %143
  %144 = load double* %c0r, align 8
  %add144 = fadd double %144, %mul143
  store double %add144, double* %c0r, align 8
  %145 = load double* %a1, align 8
  %146 = load double* %bi, align 8
  %mul145 = fmul double %145, %146
  %147 = load double* %c1r, align 8
  %add146 = fadd double %147, %mul145
  store double %add146, double* %c1r, align 8
  %148 = load double* %a2, align 8
  %149 = load double* %bi, align 8
  %mul147 = fmul double %148, %149
  %150 = load double* %c2r, align 8
  %add148 = fadd double %150, %mul147
  store double %add148, double* %c2r, align 8
  %151 = load double* %a0, align 8
  %152 = load double* %br, align 8
  %mul149 = fmul double %151, %152
  %153 = load double* %c0i, align 8
  %sub150 = fsub double %153, %mul149
  store double %sub150, double* %c0i, align 8
  %154 = load double* %a1, align 8
  %155 = load double* %br, align 8
  %mul151 = fmul double %154, %155
  %156 = load double* %c1i, align 8
  %sub152 = fsub double %156, %mul151
  store double %sub152, double* %c1i, align 8
  %157 = load double* %a2, align 8
  %158 = load double* %br, align 8
  %mul153 = fmul double %157, %158
  %159 = load double* %c2i, align 8
  %sub154 = fsub double %159, %mul153
  store double %sub154, double* %c2i, align 8
  %160 = load double* %c0r, align 8
  %161 = load %struct.su3_vector** %c, align 8
  %c155 = getelementptr inbounds %struct.su3_vector* %161, i32 0, i32 0
  %arrayidx156 = getelementptr inbounds [3 x %struct.complex]* %c155, i32 0, i64 0
  %real157 = getelementptr inbounds %struct.complex* %arrayidx156, i32 0, i32 0
  store double %160, double* %real157, align 8
  %162 = load double* %c0i, align 8
  %163 = load %struct.su3_vector** %c, align 8
  %c158 = getelementptr inbounds %struct.su3_vector* %163, i32 0, i32 0
  %arrayidx159 = getelementptr inbounds [3 x %struct.complex]* %c158, i32 0, i64 0
  %imag160 = getelementptr inbounds %struct.complex* %arrayidx159, i32 0, i32 1
  store double %162, double* %imag160, align 8
  %164 = load double* %c1r, align 8
  %165 = load %struct.su3_vector** %c, align 8
  %c161 = getelementptr inbounds %struct.su3_vector* %165, i32 0, i32 0
  %arrayidx162 = getelementptr inbounds [3 x %struct.complex]* %c161, i32 0, i64 1
  %real163 = getelementptr inbounds %struct.complex* %arrayidx162, i32 0, i32 0
  store double %164, double* %real163, align 8
  %166 = load double* %c1i, align 8
  %167 = load %struct.su3_vector** %c, align 8
  %c164 = getelementptr inbounds %struct.su3_vector* %167, i32 0, i32 0
  %arrayidx165 = getelementptr inbounds [3 x %struct.complex]* %c164, i32 0, i64 1
  %imag166 = getelementptr inbounds %struct.complex* %arrayidx165, i32 0, i32 1
  store double %166, double* %imag166, align 8
  %168 = load double* %c2r, align 8
  %169 = load %struct.su3_vector** %c, align 8
  %c167 = getelementptr inbounds %struct.su3_vector* %169, i32 0, i32 0
  %arrayidx168 = getelementptr inbounds [3 x %struct.complex]* %c167, i32 0, i64 2
  %real169 = getelementptr inbounds %struct.complex* %arrayidx168, i32 0, i32 0
  store double %168, double* %real169, align 8
  %170 = load double* %c2i, align 8
  %171 = load %struct.su3_vector** %c, align 8
  %c170 = getelementptr inbounds %struct.su3_vector* %171, i32 0, i32 0
  %arrayidx171 = getelementptr inbounds [3 x %struct.complex]* %c170, i32 0, i64 2
  %imag172 = getelementptr inbounds %struct.complex* %arrayidx171, i32 0, i32 1
  store double %170, double* %imag172, align 8
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %172 = load i32* %n, align 4
  %inc = add nsw i32 %172, 1
  store i32 %inc, i32* %n, align 4
  %173 = load %struct.su3_matrix** %a, align 8
  %incdec.ptr = getelementptr inbounds %struct.su3_matrix* %173, i32 1
  store %struct.su3_matrix* %incdec.ptr, %struct.su3_matrix** %a, align 8
  br label %for.cond

for.end:                                          ; preds = %for.cond
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @mult_su3_mat_vec_sum_4dir(%struct.su3_matrix* %a, %struct.su3_vector* %b0, %struct.su3_vector* %b1, %struct.su3_vector* %b2, %struct.su3_vector* %b3, %struct.su3_vector* %c) #0 {
entry:
  %a.addr = alloca %struct.su3_matrix*, align 8
  %b0.addr = alloca %struct.su3_vector*, align 8
  %b1.addr = alloca %struct.su3_vector*, align 8
  %b2.addr = alloca %struct.su3_vector*, align 8
  %b3.addr = alloca %struct.su3_vector*, align 8
  %c.addr = alloca %struct.su3_vector*, align 8
  %i = alloca i32, align 4
  %n = alloca i32, align 4
  %at = alloca %struct.su3_matrix*, align 8
  %b = alloca %struct.su3_vector*, align 8
  %t = alloca double, align 8
  %ar = alloca double, align 8
  %ai = alloca double, align 8
  %br = alloca double, align 8
  %bi = alloca double, align 8
  %cr = alloca double, align 8
  %ci = alloca double, align 8
  store %struct.su3_matrix* %a, %struct.su3_matrix** %a.addr, align 8
  store %struct.su3_vector* %b0, %struct.su3_vector** %b0.addr, align 8
  store %struct.su3_vector* %b1, %struct.su3_vector** %b1.addr, align 8
  store %struct.su3_vector* %b2, %struct.su3_vector** %b2.addr, align 8
  store %struct.su3_vector* %b3, %struct.su3_vector** %b3.addr, align 8
  store %struct.su3_vector* %c, %struct.su3_vector** %c.addr, align 8
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32* %i, align 4
  %cmp = icmp slt i32 %0, 3
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %1 = load i32* %i, align 4
  %idxprom = sext i32 %1 to i64
  %2 = load %struct.su3_vector** %c.addr, align 8
  %c1 = getelementptr inbounds %struct.su3_vector* %2, i32 0, i32 0
  %arrayidx = getelementptr inbounds [3 x %struct.complex]* %c1, i32 0, i64 %idxprom
  %real = getelementptr inbounds %struct.complex* %arrayidx, i32 0, i32 0
  store double 0.000000e+00, double* %real, align 8
  %3 = load i32* %i, align 4
  %idxprom2 = sext i32 %3 to i64
  %4 = load %struct.su3_vector** %c.addr, align 8
  %c3 = getelementptr inbounds %struct.su3_vector* %4, i32 0, i32 0
  %arrayidx4 = getelementptr inbounds [3 x %struct.complex]* %c3, i32 0, i64 %idxprom2
  %imag = getelementptr inbounds %struct.complex* %arrayidx4, i32 0, i32 1
  store double 0.000000e+00, double* %imag, align 8
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %5 = load i32* %i, align 4
  %inc = add nsw i32 %5, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  store i32 0, i32* %n, align 4
  br label %for.cond5

for.cond5:                                        ; preds = %for.inc93, %for.end
  %6 = load i32* %n, align 4
  %cmp6 = icmp slt i32 %6, 4
  br i1 %cmp6, label %for.body7, label %for.end95

for.body7:                                        ; preds = %for.cond5
  %7 = load %struct.su3_matrix** %a.addr, align 8
  %8 = load i32* %n, align 4
  %idx.ext = sext i32 %8 to i64
  %add.ptr = getelementptr inbounds %struct.su3_matrix* %7, i64 %idx.ext
  store %struct.su3_matrix* %add.ptr, %struct.su3_matrix** %at, align 8
  %9 = load i32* %n, align 4
  switch i32 %9, label %sw.epilog [
    i32 0, label %sw.bb
    i32 1, label %sw.bb8
    i32 2, label %sw.bb9
    i32 3, label %sw.bb10
  ]

sw.bb:                                            ; preds = %for.body7
  %10 = load %struct.su3_vector** %b0.addr, align 8
  store %struct.su3_vector* %10, %struct.su3_vector** %b, align 8
  br label %sw.epilog

sw.bb8:                                           ; preds = %for.body7
  %11 = load %struct.su3_vector** %b1.addr, align 8
  store %struct.su3_vector* %11, %struct.su3_vector** %b, align 8
  br label %sw.epilog

sw.bb9:                                           ; preds = %for.body7
  %12 = load %struct.su3_vector** %b2.addr, align 8
  store %struct.su3_vector* %12, %struct.su3_vector** %b, align 8
  br label %sw.epilog

sw.bb10:                                          ; preds = %for.body7
  %13 = load %struct.su3_vector** %b3.addr, align 8
  store %struct.su3_vector* %13, %struct.su3_vector** %b, align 8
  br label %sw.epilog

sw.epilog:                                        ; preds = %sw.bb10, %sw.bb9, %sw.bb8, %sw.bb, %for.body7
  store i32 0, i32* %i, align 4
  br label %for.cond11

for.cond11:                                       ; preds = %for.inc90, %sw.epilog
  %14 = load i32* %i, align 4
  %cmp12 = icmp slt i32 %14, 3
  br i1 %cmp12, label %for.body13, label %for.end92

for.body13:                                       ; preds = %for.cond11
  %15 = load i32* %i, align 4
  %idxprom14 = sext i32 %15 to i64
  %16 = load %struct.su3_matrix** %at, align 8
  %e = getelementptr inbounds %struct.su3_matrix* %16, i32 0, i32 0
  %arrayidx15 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e, i32 0, i64 %idxprom14
  %arrayidx16 = getelementptr inbounds [3 x %struct.complex]* %arrayidx15, i32 0, i64 0
  %real17 = getelementptr inbounds %struct.complex* %arrayidx16, i32 0, i32 0
  %17 = load double* %real17, align 8
  store double %17, double* %ar, align 8
  %18 = load i32* %i, align 4
  %idxprom18 = sext i32 %18 to i64
  %19 = load %struct.su3_matrix** %at, align 8
  %e19 = getelementptr inbounds %struct.su3_matrix* %19, i32 0, i32 0
  %arrayidx20 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e19, i32 0, i64 %idxprom18
  %arrayidx21 = getelementptr inbounds [3 x %struct.complex]* %arrayidx20, i32 0, i64 0
  %imag22 = getelementptr inbounds %struct.complex* %arrayidx21, i32 0, i32 1
  %20 = load double* %imag22, align 8
  store double %20, double* %ai, align 8
  %21 = load %struct.su3_vector** %b, align 8
  %c23 = getelementptr inbounds %struct.su3_vector* %21, i32 0, i32 0
  %arrayidx24 = getelementptr inbounds [3 x %struct.complex]* %c23, i32 0, i64 0
  %real25 = getelementptr inbounds %struct.complex* %arrayidx24, i32 0, i32 0
  %22 = load double* %real25, align 8
  store double %22, double* %br, align 8
  %23 = load %struct.su3_vector** %b, align 8
  %c26 = getelementptr inbounds %struct.su3_vector* %23, i32 0, i32 0
  %arrayidx27 = getelementptr inbounds [3 x %struct.complex]* %c26, i32 0, i64 0
  %imag28 = getelementptr inbounds %struct.complex* %arrayidx27, i32 0, i32 1
  %24 = load double* %imag28, align 8
  store double %24, double* %bi, align 8
  %25 = load double* %ar, align 8
  %26 = load double* %br, align 8
  %mul = fmul double %25, %26
  store double %mul, double* %cr, align 8
  %27 = load double* %ai, align 8
  %28 = load double* %bi, align 8
  %mul29 = fmul double %27, %28
  store double %mul29, double* %t, align 8
  %29 = load double* %t, align 8
  %30 = load double* %cr, align 8
  %sub = fsub double %30, %29
  store double %sub, double* %cr, align 8
  %31 = load double* %ar, align 8
  %32 = load double* %bi, align 8
  %mul30 = fmul double %31, %32
  store double %mul30, double* %ci, align 8
  %33 = load double* %ai, align 8
  %34 = load double* %br, align 8
  %mul31 = fmul double %33, %34
  store double %mul31, double* %t, align 8
  %35 = load double* %t, align 8
  %36 = load double* %ci, align 8
  %add = fadd double %36, %35
  store double %add, double* %ci, align 8
  %37 = load i32* %i, align 4
  %idxprom32 = sext i32 %37 to i64
  %38 = load %struct.su3_matrix** %at, align 8
  %e33 = getelementptr inbounds %struct.su3_matrix* %38, i32 0, i32 0
  %arrayidx34 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e33, i32 0, i64 %idxprom32
  %arrayidx35 = getelementptr inbounds [3 x %struct.complex]* %arrayidx34, i32 0, i64 1
  %real36 = getelementptr inbounds %struct.complex* %arrayidx35, i32 0, i32 0
  %39 = load double* %real36, align 8
  store double %39, double* %ar, align 8
  %40 = load i32* %i, align 4
  %idxprom37 = sext i32 %40 to i64
  %41 = load %struct.su3_matrix** %at, align 8
  %e38 = getelementptr inbounds %struct.su3_matrix* %41, i32 0, i32 0
  %arrayidx39 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e38, i32 0, i64 %idxprom37
  %arrayidx40 = getelementptr inbounds [3 x %struct.complex]* %arrayidx39, i32 0, i64 1
  %imag41 = getelementptr inbounds %struct.complex* %arrayidx40, i32 0, i32 1
  %42 = load double* %imag41, align 8
  store double %42, double* %ai, align 8
  %43 = load %struct.su3_vector** %b, align 8
  %c42 = getelementptr inbounds %struct.su3_vector* %43, i32 0, i32 0
  %arrayidx43 = getelementptr inbounds [3 x %struct.complex]* %c42, i32 0, i64 1
  %real44 = getelementptr inbounds %struct.complex* %arrayidx43, i32 0, i32 0
  %44 = load double* %real44, align 8
  store double %44, double* %br, align 8
  %45 = load %struct.su3_vector** %b, align 8
  %c45 = getelementptr inbounds %struct.su3_vector* %45, i32 0, i32 0
  %arrayidx46 = getelementptr inbounds [3 x %struct.complex]* %c45, i32 0, i64 1
  %imag47 = getelementptr inbounds %struct.complex* %arrayidx46, i32 0, i32 1
  %46 = load double* %imag47, align 8
  store double %46, double* %bi, align 8
  %47 = load double* %ar, align 8
  %48 = load double* %br, align 8
  %mul48 = fmul double %47, %48
  store double %mul48, double* %t, align 8
  %49 = load double* %t, align 8
  %50 = load double* %cr, align 8
  %add49 = fadd double %50, %49
  store double %add49, double* %cr, align 8
  %51 = load double* %ai, align 8
  %52 = load double* %bi, align 8
  %mul50 = fmul double %51, %52
  store double %mul50, double* %t, align 8
  %53 = load double* %t, align 8
  %54 = load double* %cr, align 8
  %sub51 = fsub double %54, %53
  store double %sub51, double* %cr, align 8
  %55 = load double* %ar, align 8
  %56 = load double* %bi, align 8
  %mul52 = fmul double %55, %56
  store double %mul52, double* %t, align 8
  %57 = load double* %t, align 8
  %58 = load double* %ci, align 8
  %add53 = fadd double %58, %57
  store double %add53, double* %ci, align 8
  %59 = load double* %ai, align 8
  %60 = load double* %br, align 8
  %mul54 = fmul double %59, %60
  store double %mul54, double* %t, align 8
  %61 = load double* %t, align 8
  %62 = load double* %ci, align 8
  %add55 = fadd double %62, %61
  store double %add55, double* %ci, align 8
  %63 = load i32* %i, align 4
  %idxprom56 = sext i32 %63 to i64
  %64 = load %struct.su3_matrix** %at, align 8
  %e57 = getelementptr inbounds %struct.su3_matrix* %64, i32 0, i32 0
  %arrayidx58 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e57, i32 0, i64 %idxprom56
  %arrayidx59 = getelementptr inbounds [3 x %struct.complex]* %arrayidx58, i32 0, i64 2
  %real60 = getelementptr inbounds %struct.complex* %arrayidx59, i32 0, i32 0
  %65 = load double* %real60, align 8
  store double %65, double* %ar, align 8
  %66 = load i32* %i, align 4
  %idxprom61 = sext i32 %66 to i64
  %67 = load %struct.su3_matrix** %at, align 8
  %e62 = getelementptr inbounds %struct.su3_matrix* %67, i32 0, i32 0
  %arrayidx63 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e62, i32 0, i64 %idxprom61
  %arrayidx64 = getelementptr inbounds [3 x %struct.complex]* %arrayidx63, i32 0, i64 2
  %imag65 = getelementptr inbounds %struct.complex* %arrayidx64, i32 0, i32 1
  %68 = load double* %imag65, align 8
  store double %68, double* %ai, align 8
  %69 = load %struct.su3_vector** %b, align 8
  %c66 = getelementptr inbounds %struct.su3_vector* %69, i32 0, i32 0
  %arrayidx67 = getelementptr inbounds [3 x %struct.complex]* %c66, i32 0, i64 2
  %real68 = getelementptr inbounds %struct.complex* %arrayidx67, i32 0, i32 0
  %70 = load double* %real68, align 8
  store double %70, double* %br, align 8
  %71 = load %struct.su3_vector** %b, align 8
  %c69 = getelementptr inbounds %struct.su3_vector* %71, i32 0, i32 0
  %arrayidx70 = getelementptr inbounds [3 x %struct.complex]* %c69, i32 0, i64 2
  %imag71 = getelementptr inbounds %struct.complex* %arrayidx70, i32 0, i32 1
  %72 = load double* %imag71, align 8
  store double %72, double* %bi, align 8
  %73 = load double* %ar, align 8
  %74 = load double* %br, align 8
  %mul72 = fmul double %73, %74
  store double %mul72, double* %t, align 8
  %75 = load double* %t, align 8
  %76 = load double* %cr, align 8
  %add73 = fadd double %76, %75
  store double %add73, double* %cr, align 8
  %77 = load double* %ai, align 8
  %78 = load double* %bi, align 8
  %mul74 = fmul double %77, %78
  store double %mul74, double* %t, align 8
  %79 = load double* %t, align 8
  %80 = load double* %cr, align 8
  %sub75 = fsub double %80, %79
  store double %sub75, double* %cr, align 8
  %81 = load double* %ar, align 8
  %82 = load double* %bi, align 8
  %mul76 = fmul double %81, %82
  store double %mul76, double* %t, align 8
  %83 = load double* %t, align 8
  %84 = load double* %ci, align 8
  %add77 = fadd double %84, %83
  store double %add77, double* %ci, align 8
  %85 = load double* %ai, align 8
  %86 = load double* %br, align 8
  %mul78 = fmul double %85, %86
  store double %mul78, double* %t, align 8
  %87 = load double* %t, align 8
  %88 = load double* %ci, align 8
  %add79 = fadd double %88, %87
  store double %add79, double* %ci, align 8
  %89 = load double* %cr, align 8
  %90 = load i32* %i, align 4
  %idxprom80 = sext i32 %90 to i64
  %91 = load %struct.su3_vector** %c.addr, align 8
  %c81 = getelementptr inbounds %struct.su3_vector* %91, i32 0, i32 0
  %arrayidx82 = getelementptr inbounds [3 x %struct.complex]* %c81, i32 0, i64 %idxprom80
  %real83 = getelementptr inbounds %struct.complex* %arrayidx82, i32 0, i32 0
  %92 = load double* %real83, align 8
  %add84 = fadd double %92, %89
  store double %add84, double* %real83, align 8
  %93 = load double* %ci, align 8
  %94 = load i32* %i, align 4
  %idxprom85 = sext i32 %94 to i64
  %95 = load %struct.su3_vector** %c.addr, align 8
  %c86 = getelementptr inbounds %struct.su3_vector* %95, i32 0, i32 0
  %arrayidx87 = getelementptr inbounds [3 x %struct.complex]* %c86, i32 0, i64 %idxprom85
  %imag88 = getelementptr inbounds %struct.complex* %arrayidx87, i32 0, i32 1
  %96 = load double* %imag88, align 8
  %add89 = fadd double %96, %93
  store double %add89, double* %imag88, align 8
  br label %for.inc90

for.inc90:                                        ; preds = %for.body13
  %97 = load i32* %i, align 4
  %inc91 = add nsw i32 %97, 1
  store i32 %inc91, i32* %i, align 4
  br label %for.cond11

for.end92:                                        ; preds = %for.cond11
  br label %for.inc93

for.inc93:                                        ; preds = %for.end92
  %98 = load i32* %n, align 4
  %inc94 = add nsw i32 %98, 1
  store i32 %inc94, i32* %n, align 4
  br label %for.cond5

for.end95:                                        ; preds = %for.cond5
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @mult_su2_mat_vec_elem_n(%struct.su2_matrix* %u, %struct.complex* %x0, %struct.complex* %x1) #0 {
entry:
  %u.addr = alloca %struct.su2_matrix*, align 8
  %x0.addr = alloca %struct.complex*, align 8
  %x1.addr = alloca %struct.complex*, align 8
  %z0 = alloca %struct.complex, align 8
  %z1 = alloca %struct.complex, align 8
  %t0 = alloca %struct.complex, align 8
  %t1 = alloca %struct.complex, align 8
  store %struct.su2_matrix* %u, %struct.su2_matrix** %u.addr, align 8
  store %struct.complex* %x0, %struct.complex** %x0.addr, align 8
  store %struct.complex* %x1, %struct.complex** %x1.addr, align 8
  %0 = load %struct.complex** %x0.addr, align 8
  %1 = bitcast %struct.complex* %t0 to i8*
  %2 = bitcast %struct.complex* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %1, i8* %2, i64 16, i32 8, i1 false)
  %3 = load %struct.complex** %x1.addr, align 8
  %4 = bitcast %struct.complex* %t1 to i8*
  %5 = bitcast %struct.complex* %3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %4, i8* %5, i64 16, i32 8, i1 false)
  %6 = load %struct.su2_matrix** %u.addr, align 8
  %e = getelementptr inbounds %struct.su2_matrix* %6, i32 0, i32 0
  %arrayidx = getelementptr inbounds [2 x [2 x %struct.complex]]* %e, i32 0, i64 0
  %arrayidx1 = getelementptr inbounds [2 x %struct.complex]* %arrayidx, i32 0, i64 0
  %real = getelementptr inbounds %struct.complex* %arrayidx1, i32 0, i32 0
  %7 = load double* %real, align 8
  %real2 = getelementptr inbounds %struct.complex* %t0, i32 0, i32 0
  %8 = load double* %real2, align 8
  %mul = fmul double %7, %8
  %9 = load %struct.su2_matrix** %u.addr, align 8
  %e3 = getelementptr inbounds %struct.su2_matrix* %9, i32 0, i32 0
  %arrayidx4 = getelementptr inbounds [2 x [2 x %struct.complex]]* %e3, i32 0, i64 0
  %arrayidx5 = getelementptr inbounds [2 x %struct.complex]* %arrayidx4, i32 0, i64 0
  %imag = getelementptr inbounds %struct.complex* %arrayidx5, i32 0, i32 1
  %10 = load double* %imag, align 8
  %imag6 = getelementptr inbounds %struct.complex* %t0, i32 0, i32 1
  %11 = load double* %imag6, align 8
  %mul7 = fmul double %10, %11
  %sub = fsub double %mul, %mul7
  %real8 = getelementptr inbounds %struct.complex* %z0, i32 0, i32 0
  store double %sub, double* %real8, align 8
  %12 = load %struct.su2_matrix** %u.addr, align 8
  %e9 = getelementptr inbounds %struct.su2_matrix* %12, i32 0, i32 0
  %arrayidx10 = getelementptr inbounds [2 x [2 x %struct.complex]]* %e9, i32 0, i64 0
  %arrayidx11 = getelementptr inbounds [2 x %struct.complex]* %arrayidx10, i32 0, i64 0
  %real12 = getelementptr inbounds %struct.complex* %arrayidx11, i32 0, i32 0
  %13 = load double* %real12, align 8
  %imag13 = getelementptr inbounds %struct.complex* %t0, i32 0, i32 1
  %14 = load double* %imag13, align 8
  %mul14 = fmul double %13, %14
  %15 = load %struct.su2_matrix** %u.addr, align 8
  %e15 = getelementptr inbounds %struct.su2_matrix* %15, i32 0, i32 0
  %arrayidx16 = getelementptr inbounds [2 x [2 x %struct.complex]]* %e15, i32 0, i64 0
  %arrayidx17 = getelementptr inbounds [2 x %struct.complex]* %arrayidx16, i32 0, i64 0
  %imag18 = getelementptr inbounds %struct.complex* %arrayidx17, i32 0, i32 1
  %16 = load double* %imag18, align 8
  %real19 = getelementptr inbounds %struct.complex* %t0, i32 0, i32 0
  %17 = load double* %real19, align 8
  %mul20 = fmul double %16, %17
  %add = fadd double %mul14, %mul20
  %imag21 = getelementptr inbounds %struct.complex* %z0, i32 0, i32 1
  store double %add, double* %imag21, align 8
  %18 = load %struct.su2_matrix** %u.addr, align 8
  %e22 = getelementptr inbounds %struct.su2_matrix* %18, i32 0, i32 0
  %arrayidx23 = getelementptr inbounds [2 x [2 x %struct.complex]]* %e22, i32 0, i64 0
  %arrayidx24 = getelementptr inbounds [2 x %struct.complex]* %arrayidx23, i32 0, i64 1
  %real25 = getelementptr inbounds %struct.complex* %arrayidx24, i32 0, i32 0
  %19 = load double* %real25, align 8
  %real26 = getelementptr inbounds %struct.complex* %t1, i32 0, i32 0
  %20 = load double* %real26, align 8
  %mul27 = fmul double %19, %20
  %21 = load %struct.su2_matrix** %u.addr, align 8
  %e28 = getelementptr inbounds %struct.su2_matrix* %21, i32 0, i32 0
  %arrayidx29 = getelementptr inbounds [2 x [2 x %struct.complex]]* %e28, i32 0, i64 0
  %arrayidx30 = getelementptr inbounds [2 x %struct.complex]* %arrayidx29, i32 0, i64 1
  %imag31 = getelementptr inbounds %struct.complex* %arrayidx30, i32 0, i32 1
  %22 = load double* %imag31, align 8
  %imag32 = getelementptr inbounds %struct.complex* %t1, i32 0, i32 1
  %23 = load double* %imag32, align 8
  %mul33 = fmul double %22, %23
  %sub34 = fsub double %mul27, %mul33
  %real35 = getelementptr inbounds %struct.complex* %z1, i32 0, i32 0
  store double %sub34, double* %real35, align 8
  %24 = load %struct.su2_matrix** %u.addr, align 8
  %e36 = getelementptr inbounds %struct.su2_matrix* %24, i32 0, i32 0
  %arrayidx37 = getelementptr inbounds [2 x [2 x %struct.complex]]* %e36, i32 0, i64 0
  %arrayidx38 = getelementptr inbounds [2 x %struct.complex]* %arrayidx37, i32 0, i64 1
  %real39 = getelementptr inbounds %struct.complex* %arrayidx38, i32 0, i32 0
  %25 = load double* %real39, align 8
  %imag40 = getelementptr inbounds %struct.complex* %t1, i32 0, i32 1
  %26 = load double* %imag40, align 8
  %mul41 = fmul double %25, %26
  %27 = load %struct.su2_matrix** %u.addr, align 8
  %e42 = getelementptr inbounds %struct.su2_matrix* %27, i32 0, i32 0
  %arrayidx43 = getelementptr inbounds [2 x [2 x %struct.complex]]* %e42, i32 0, i64 0
  %arrayidx44 = getelementptr inbounds [2 x %struct.complex]* %arrayidx43, i32 0, i64 1
  %imag45 = getelementptr inbounds %struct.complex* %arrayidx44, i32 0, i32 1
  %28 = load double* %imag45, align 8
  %real46 = getelementptr inbounds %struct.complex* %t1, i32 0, i32 0
  %29 = load double* %real46, align 8
  %mul47 = fmul double %28, %29
  %add48 = fadd double %mul41, %mul47
  %imag49 = getelementptr inbounds %struct.complex* %z1, i32 0, i32 1
  store double %add48, double* %imag49, align 8
  %real50 = getelementptr inbounds %struct.complex* %z0, i32 0, i32 0
  %30 = load double* %real50, align 8
  %real51 = getelementptr inbounds %struct.complex* %z1, i32 0, i32 0
  %31 = load double* %real51, align 8
  %add52 = fadd double %30, %31
  %32 = load %struct.complex** %x0.addr, align 8
  %real53 = getelementptr inbounds %struct.complex* %32, i32 0, i32 0
  store double %add52, double* %real53, align 8
  %imag54 = getelementptr inbounds %struct.complex* %z0, i32 0, i32 1
  %33 = load double* %imag54, align 8
  %imag55 = getelementptr inbounds %struct.complex* %z1, i32 0, i32 1
  %34 = load double* %imag55, align 8
  %add56 = fadd double %33, %34
  %35 = load %struct.complex** %x0.addr, align 8
  %imag57 = getelementptr inbounds %struct.complex* %35, i32 0, i32 1
  store double %add56, double* %imag57, align 8
  %36 = load %struct.su2_matrix** %u.addr, align 8
  %e58 = getelementptr inbounds %struct.su2_matrix* %36, i32 0, i32 0
  %arrayidx59 = getelementptr inbounds [2 x [2 x %struct.complex]]* %e58, i32 0, i64 1
  %arrayidx60 = getelementptr inbounds [2 x %struct.complex]* %arrayidx59, i32 0, i64 0
  %real61 = getelementptr inbounds %struct.complex* %arrayidx60, i32 0, i32 0
  %37 = load double* %real61, align 8
  %real62 = getelementptr inbounds %struct.complex* %t0, i32 0, i32 0
  %38 = load double* %real62, align 8
  %mul63 = fmul double %37, %38
  %39 = load %struct.su2_matrix** %u.addr, align 8
  %e64 = getelementptr inbounds %struct.su2_matrix* %39, i32 0, i32 0
  %arrayidx65 = getelementptr inbounds [2 x [2 x %struct.complex]]* %e64, i32 0, i64 1
  %arrayidx66 = getelementptr inbounds [2 x %struct.complex]* %arrayidx65, i32 0, i64 0
  %imag67 = getelementptr inbounds %struct.complex* %arrayidx66, i32 0, i32 1
  %40 = load double* %imag67, align 8
  %imag68 = getelementptr inbounds %struct.complex* %t0, i32 0, i32 1
  %41 = load double* %imag68, align 8
  %mul69 = fmul double %40, %41
  %sub70 = fsub double %mul63, %mul69
  %real71 = getelementptr inbounds %struct.complex* %z0, i32 0, i32 0
  store double %sub70, double* %real71, align 8
  %42 = load %struct.su2_matrix** %u.addr, align 8
  %e72 = getelementptr inbounds %struct.su2_matrix* %42, i32 0, i32 0
  %arrayidx73 = getelementptr inbounds [2 x [2 x %struct.complex]]* %e72, i32 0, i64 1
  %arrayidx74 = getelementptr inbounds [2 x %struct.complex]* %arrayidx73, i32 0, i64 0
  %real75 = getelementptr inbounds %struct.complex* %arrayidx74, i32 0, i32 0
  %43 = load double* %real75, align 8
  %imag76 = getelementptr inbounds %struct.complex* %t0, i32 0, i32 1
  %44 = load double* %imag76, align 8
  %mul77 = fmul double %43, %44
  %45 = load %struct.su2_matrix** %u.addr, align 8
  %e78 = getelementptr inbounds %struct.su2_matrix* %45, i32 0, i32 0
  %arrayidx79 = getelementptr inbounds [2 x [2 x %struct.complex]]* %e78, i32 0, i64 1
  %arrayidx80 = getelementptr inbounds [2 x %struct.complex]* %arrayidx79, i32 0, i64 0
  %imag81 = getelementptr inbounds %struct.complex* %arrayidx80, i32 0, i32 1
  %46 = load double* %imag81, align 8
  %real82 = getelementptr inbounds %struct.complex* %t0, i32 0, i32 0
  %47 = load double* %real82, align 8
  %mul83 = fmul double %46, %47
  %add84 = fadd double %mul77, %mul83
  %imag85 = getelementptr inbounds %struct.complex* %z0, i32 0, i32 1
  store double %add84, double* %imag85, align 8
  %48 = load %struct.su2_matrix** %u.addr, align 8
  %e86 = getelementptr inbounds %struct.su2_matrix* %48, i32 0, i32 0
  %arrayidx87 = getelementptr inbounds [2 x [2 x %struct.complex]]* %e86, i32 0, i64 1
  %arrayidx88 = getelementptr inbounds [2 x %struct.complex]* %arrayidx87, i32 0, i64 1
  %real89 = getelementptr inbounds %struct.complex* %arrayidx88, i32 0, i32 0
  %49 = load double* %real89, align 8
  %real90 = getelementptr inbounds %struct.complex* %t1, i32 0, i32 0
  %50 = load double* %real90, align 8
  %mul91 = fmul double %49, %50
  %51 = load %struct.su2_matrix** %u.addr, align 8
  %e92 = getelementptr inbounds %struct.su2_matrix* %51, i32 0, i32 0
  %arrayidx93 = getelementptr inbounds [2 x [2 x %struct.complex]]* %e92, i32 0, i64 1
  %arrayidx94 = getelementptr inbounds [2 x %struct.complex]* %arrayidx93, i32 0, i64 1
  %imag95 = getelementptr inbounds %struct.complex* %arrayidx94, i32 0, i32 1
  %52 = load double* %imag95, align 8
  %imag96 = getelementptr inbounds %struct.complex* %t1, i32 0, i32 1
  %53 = load double* %imag96, align 8
  %mul97 = fmul double %52, %53
  %sub98 = fsub double %mul91, %mul97
  %real99 = getelementptr inbounds %struct.complex* %z1, i32 0, i32 0
  store double %sub98, double* %real99, align 8
  %54 = load %struct.su2_matrix** %u.addr, align 8
  %e100 = getelementptr inbounds %struct.su2_matrix* %54, i32 0, i32 0
  %arrayidx101 = getelementptr inbounds [2 x [2 x %struct.complex]]* %e100, i32 0, i64 1
  %arrayidx102 = getelementptr inbounds [2 x %struct.complex]* %arrayidx101, i32 0, i64 1
  %real103 = getelementptr inbounds %struct.complex* %arrayidx102, i32 0, i32 0
  %55 = load double* %real103, align 8
  %imag104 = getelementptr inbounds %struct.complex* %t1, i32 0, i32 1
  %56 = load double* %imag104, align 8
  %mul105 = fmul double %55, %56
  %57 = load %struct.su2_matrix** %u.addr, align 8
  %e106 = getelementptr inbounds %struct.su2_matrix* %57, i32 0, i32 0
  %arrayidx107 = getelementptr inbounds [2 x [2 x %struct.complex]]* %e106, i32 0, i64 1
  %arrayidx108 = getelementptr inbounds [2 x %struct.complex]* %arrayidx107, i32 0, i64 1
  %imag109 = getelementptr inbounds %struct.complex* %arrayidx108, i32 0, i32 1
  %58 = load double* %imag109, align 8
  %real110 = getelementptr inbounds %struct.complex* %t1, i32 0, i32 0
  %59 = load double* %real110, align 8
  %mul111 = fmul double %58, %59
  %add112 = fadd double %mul105, %mul111
  %imag113 = getelementptr inbounds %struct.complex* %z1, i32 0, i32 1
  store double %add112, double* %imag113, align 8
  %real114 = getelementptr inbounds %struct.complex* %z0, i32 0, i32 0
  %60 = load double* %real114, align 8
  %real115 = getelementptr inbounds %struct.complex* %z1, i32 0, i32 0
  %61 = load double* %real115, align 8
  %add116 = fadd double %60, %61
  %62 = load %struct.complex** %x1.addr, align 8
  %real117 = getelementptr inbounds %struct.complex* %62, i32 0, i32 0
  store double %add116, double* %real117, align 8
  %imag118 = getelementptr inbounds %struct.complex* %z0, i32 0, i32 1
  %63 = load double* %imag118, align 8
  %imag119 = getelementptr inbounds %struct.complex* %z1, i32 0, i32 1
  %64 = load double* %imag119, align 8
  %add120 = fadd double %63, %64
  %65 = load %struct.complex** %x1.addr, align 8
  %imag121 = getelementptr inbounds %struct.complex* %65, i32 0, i32 1
  store double %add120, double* %imag121, align 8
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @left_su2_hit_n(%struct.su2_matrix* %u, i32 %p, i32 %q, %struct.su3_matrix* %link) #0 {
entry:
  %u.addr = alloca %struct.su2_matrix*, align 8
  %p.addr = alloca i32, align 4
  %q.addr = alloca i32, align 4
  %link.addr = alloca %struct.su3_matrix*, align 8
  %m = alloca i32, align 4
  store %struct.su2_matrix* %u, %struct.su2_matrix** %u.addr, align 8
  store i32 %p, i32* %p.addr, align 4
  store i32 %q, i32* %q.addr, align 4
  store %struct.su3_matrix* %link, %struct.su3_matrix** %link.addr, align 8
  store i32 0, i32* %m, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32* %m, align 4
  %cmp = icmp slt i32 %0, 3
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %1 = load %struct.su2_matrix** %u.addr, align 8
  %2 = load i32* %m, align 4
  %idxprom = sext i32 %2 to i64
  %3 = load i32* %p.addr, align 4
  %idxprom1 = sext i32 %3 to i64
  %4 = load %struct.su3_matrix** %link.addr, align 8
  %e = getelementptr inbounds %struct.su3_matrix* %4, i32 0, i32 0
  %arrayidx = getelementptr inbounds [3 x [3 x %struct.complex]]* %e, i32 0, i64 %idxprom1
  %arrayidx2 = getelementptr inbounds [3 x %struct.complex]* %arrayidx, i32 0, i64 %idxprom
  %5 = load i32* %m, align 4
  %idxprom3 = sext i32 %5 to i64
  %6 = load i32* %q.addr, align 4
  %idxprom4 = sext i32 %6 to i64
  %7 = load %struct.su3_matrix** %link.addr, align 8
  %e5 = getelementptr inbounds %struct.su3_matrix* %7, i32 0, i32 0
  %arrayidx6 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e5, i32 0, i64 %idxprom4
  %arrayidx7 = getelementptr inbounds [3 x %struct.complex]* %arrayidx6, i32 0, i64 %idxprom3
  call void @mult_su2_mat_vec_elem_n(%struct.su2_matrix* %1, %struct.complex* %arrayidx2, %struct.complex* %arrayidx7)
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %8 = load i32* %m, align 4
  %inc = add nsw i32 %8, 1
  store i32 %inc, i32* %m, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @right_su2_hit_a(%struct.su2_matrix* %u, i32 %p, i32 %q, %struct.su3_matrix* %link) #0 {
entry:
  %u.addr = alloca %struct.su2_matrix*, align 8
  %p.addr = alloca i32, align 4
  %q.addr = alloca i32, align 4
  %link.addr = alloca %struct.su3_matrix*, align 8
  %m = alloca i32, align 4
  store %struct.su2_matrix* %u, %struct.su2_matrix** %u.addr, align 8
  store i32 %p, i32* %p.addr, align 4
  store i32 %q, i32* %q.addr, align 4
  store %struct.su3_matrix* %link, %struct.su3_matrix** %link.addr, align 8
  store i32 0, i32* %m, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32* %m, align 4
  %cmp = icmp slt i32 %0, 3
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %1 = load %struct.su2_matrix** %u.addr, align 8
  %2 = load i32* %p.addr, align 4
  %idxprom = sext i32 %2 to i64
  %3 = load i32* %m, align 4
  %idxprom1 = sext i32 %3 to i64
  %4 = load %struct.su3_matrix** %link.addr, align 8
  %e = getelementptr inbounds %struct.su3_matrix* %4, i32 0, i32 0
  %arrayidx = getelementptr inbounds [3 x [3 x %struct.complex]]* %e, i32 0, i64 %idxprom1
  %arrayidx2 = getelementptr inbounds [3 x %struct.complex]* %arrayidx, i32 0, i64 %idxprom
  %5 = load i32* %q.addr, align 4
  %idxprom3 = sext i32 %5 to i64
  %6 = load i32* %m, align 4
  %idxprom4 = sext i32 %6 to i64
  %7 = load %struct.su3_matrix** %link.addr, align 8
  %e5 = getelementptr inbounds %struct.su3_matrix* %7, i32 0, i32 0
  %arrayidx6 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e5, i32 0, i64 %idxprom4
  %arrayidx7 = getelementptr inbounds [3 x %struct.complex]* %arrayidx6, i32 0, i64 %idxprom3
  call void @mult_su2_mat_vec_elem_a(%struct.su2_matrix* %1, %struct.complex* %arrayidx2, %struct.complex* %arrayidx7)
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %8 = load i32* %m, align 4
  %inc = add nsw i32 %8, 1
  store i32 %inc, i32* %m, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @mult_su2_mat_vec_elem_a(%struct.su2_matrix* %u, %struct.complex* %x0, %struct.complex* %x1) #0 {
entry:
  %u.addr = alloca %struct.su2_matrix*, align 8
  %x0.addr = alloca %struct.complex*, align 8
  %x1.addr = alloca %struct.complex*, align 8
  %z0 = alloca %struct.complex, align 8
  %z1 = alloca %struct.complex, align 8
  %t0 = alloca %struct.complex, align 8
  %t1 = alloca %struct.complex, align 8
  store %struct.su2_matrix* %u, %struct.su2_matrix** %u.addr, align 8
  store %struct.complex* %x0, %struct.complex** %x0.addr, align 8
  store %struct.complex* %x1, %struct.complex** %x1.addr, align 8
  %0 = load %struct.complex** %x0.addr, align 8
  %1 = bitcast %struct.complex* %t0 to i8*
  %2 = bitcast %struct.complex* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %1, i8* %2, i64 16, i32 8, i1 false)
  %3 = load %struct.complex** %x1.addr, align 8
  %4 = bitcast %struct.complex* %t1 to i8*
  %5 = bitcast %struct.complex* %3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %4, i8* %5, i64 16, i32 8, i1 false)
  %real = getelementptr inbounds %struct.complex* %t0, i32 0, i32 0
  %6 = load double* %real, align 8
  %7 = load %struct.su2_matrix** %u.addr, align 8
  %e = getelementptr inbounds %struct.su2_matrix* %7, i32 0, i32 0
  %arrayidx = getelementptr inbounds [2 x [2 x %struct.complex]]* %e, i32 0, i64 0
  %arrayidx1 = getelementptr inbounds [2 x %struct.complex]* %arrayidx, i32 0, i64 0
  %real2 = getelementptr inbounds %struct.complex* %arrayidx1, i32 0, i32 0
  %8 = load double* %real2, align 8
  %mul = fmul double %6, %8
  %imag = getelementptr inbounds %struct.complex* %t0, i32 0, i32 1
  %9 = load double* %imag, align 8
  %10 = load %struct.su2_matrix** %u.addr, align 8
  %e3 = getelementptr inbounds %struct.su2_matrix* %10, i32 0, i32 0
  %arrayidx4 = getelementptr inbounds [2 x [2 x %struct.complex]]* %e3, i32 0, i64 0
  %arrayidx5 = getelementptr inbounds [2 x %struct.complex]* %arrayidx4, i32 0, i64 0
  %imag6 = getelementptr inbounds %struct.complex* %arrayidx5, i32 0, i32 1
  %11 = load double* %imag6, align 8
  %mul7 = fmul double %9, %11
  %add = fadd double %mul, %mul7
  %real8 = getelementptr inbounds %struct.complex* %z0, i32 0, i32 0
  store double %add, double* %real8, align 8
  %imag9 = getelementptr inbounds %struct.complex* %t0, i32 0, i32 1
  %12 = load double* %imag9, align 8
  %13 = load %struct.su2_matrix** %u.addr, align 8
  %e10 = getelementptr inbounds %struct.su2_matrix* %13, i32 0, i32 0
  %arrayidx11 = getelementptr inbounds [2 x [2 x %struct.complex]]* %e10, i32 0, i64 0
  %arrayidx12 = getelementptr inbounds [2 x %struct.complex]* %arrayidx11, i32 0, i64 0
  %real13 = getelementptr inbounds %struct.complex* %arrayidx12, i32 0, i32 0
  %14 = load double* %real13, align 8
  %mul14 = fmul double %12, %14
  %real15 = getelementptr inbounds %struct.complex* %t0, i32 0, i32 0
  %15 = load double* %real15, align 8
  %16 = load %struct.su2_matrix** %u.addr, align 8
  %e16 = getelementptr inbounds %struct.su2_matrix* %16, i32 0, i32 0
  %arrayidx17 = getelementptr inbounds [2 x [2 x %struct.complex]]* %e16, i32 0, i64 0
  %arrayidx18 = getelementptr inbounds [2 x %struct.complex]* %arrayidx17, i32 0, i64 0
  %imag19 = getelementptr inbounds %struct.complex* %arrayidx18, i32 0, i32 1
  %17 = load double* %imag19, align 8
  %mul20 = fmul double %15, %17
  %sub = fsub double %mul14, %mul20
  %imag21 = getelementptr inbounds %struct.complex* %z0, i32 0, i32 1
  store double %sub, double* %imag21, align 8
  %real22 = getelementptr inbounds %struct.complex* %t1, i32 0, i32 0
  %18 = load double* %real22, align 8
  %19 = load %struct.su2_matrix** %u.addr, align 8
  %e23 = getelementptr inbounds %struct.su2_matrix* %19, i32 0, i32 0
  %arrayidx24 = getelementptr inbounds [2 x [2 x %struct.complex]]* %e23, i32 0, i64 0
  %arrayidx25 = getelementptr inbounds [2 x %struct.complex]* %arrayidx24, i32 0, i64 1
  %real26 = getelementptr inbounds %struct.complex* %arrayidx25, i32 0, i32 0
  %20 = load double* %real26, align 8
  %mul27 = fmul double %18, %20
  %imag28 = getelementptr inbounds %struct.complex* %t1, i32 0, i32 1
  %21 = load double* %imag28, align 8
  %22 = load %struct.su2_matrix** %u.addr, align 8
  %e29 = getelementptr inbounds %struct.su2_matrix* %22, i32 0, i32 0
  %arrayidx30 = getelementptr inbounds [2 x [2 x %struct.complex]]* %e29, i32 0, i64 0
  %arrayidx31 = getelementptr inbounds [2 x %struct.complex]* %arrayidx30, i32 0, i64 1
  %imag32 = getelementptr inbounds %struct.complex* %arrayidx31, i32 0, i32 1
  %23 = load double* %imag32, align 8
  %mul33 = fmul double %21, %23
  %add34 = fadd double %mul27, %mul33
  %real35 = getelementptr inbounds %struct.complex* %z1, i32 0, i32 0
  store double %add34, double* %real35, align 8
  %imag36 = getelementptr inbounds %struct.complex* %t1, i32 0, i32 1
  %24 = load double* %imag36, align 8
  %25 = load %struct.su2_matrix** %u.addr, align 8
  %e37 = getelementptr inbounds %struct.su2_matrix* %25, i32 0, i32 0
  %arrayidx38 = getelementptr inbounds [2 x [2 x %struct.complex]]* %e37, i32 0, i64 0
  %arrayidx39 = getelementptr inbounds [2 x %struct.complex]* %arrayidx38, i32 0, i64 1
  %real40 = getelementptr inbounds %struct.complex* %arrayidx39, i32 0, i32 0
  %26 = load double* %real40, align 8
  %mul41 = fmul double %24, %26
  %real42 = getelementptr inbounds %struct.complex* %t1, i32 0, i32 0
  %27 = load double* %real42, align 8
  %28 = load %struct.su2_matrix** %u.addr, align 8
  %e43 = getelementptr inbounds %struct.su2_matrix* %28, i32 0, i32 0
  %arrayidx44 = getelementptr inbounds [2 x [2 x %struct.complex]]* %e43, i32 0, i64 0
  %arrayidx45 = getelementptr inbounds [2 x %struct.complex]* %arrayidx44, i32 0, i64 1
  %imag46 = getelementptr inbounds %struct.complex* %arrayidx45, i32 0, i32 1
  %29 = load double* %imag46, align 8
  %mul47 = fmul double %27, %29
  %sub48 = fsub double %mul41, %mul47
  %imag49 = getelementptr inbounds %struct.complex* %z1, i32 0, i32 1
  store double %sub48, double* %imag49, align 8
  %real50 = getelementptr inbounds %struct.complex* %z0, i32 0, i32 0
  %30 = load double* %real50, align 8
  %real51 = getelementptr inbounds %struct.complex* %z1, i32 0, i32 0
  %31 = load double* %real51, align 8
  %add52 = fadd double %30, %31
  %32 = load %struct.complex** %x0.addr, align 8
  %real53 = getelementptr inbounds %struct.complex* %32, i32 0, i32 0
  store double %add52, double* %real53, align 8
  %imag54 = getelementptr inbounds %struct.complex* %z0, i32 0, i32 1
  %33 = load double* %imag54, align 8
  %imag55 = getelementptr inbounds %struct.complex* %z1, i32 0, i32 1
  %34 = load double* %imag55, align 8
  %add56 = fadd double %33, %34
  %35 = load %struct.complex** %x0.addr, align 8
  %imag57 = getelementptr inbounds %struct.complex* %35, i32 0, i32 1
  store double %add56, double* %imag57, align 8
  %real58 = getelementptr inbounds %struct.complex* %t0, i32 0, i32 0
  %36 = load double* %real58, align 8
  %37 = load %struct.su2_matrix** %u.addr, align 8
  %e59 = getelementptr inbounds %struct.su2_matrix* %37, i32 0, i32 0
  %arrayidx60 = getelementptr inbounds [2 x [2 x %struct.complex]]* %e59, i32 0, i64 1
  %arrayidx61 = getelementptr inbounds [2 x %struct.complex]* %arrayidx60, i32 0, i64 0
  %real62 = getelementptr inbounds %struct.complex* %arrayidx61, i32 0, i32 0
  %38 = load double* %real62, align 8
  %mul63 = fmul double %36, %38
  %imag64 = getelementptr inbounds %struct.complex* %t0, i32 0, i32 1
  %39 = load double* %imag64, align 8
  %40 = load %struct.su2_matrix** %u.addr, align 8
  %e65 = getelementptr inbounds %struct.su2_matrix* %40, i32 0, i32 0
  %arrayidx66 = getelementptr inbounds [2 x [2 x %struct.complex]]* %e65, i32 0, i64 1
  %arrayidx67 = getelementptr inbounds [2 x %struct.complex]* %arrayidx66, i32 0, i64 0
  %imag68 = getelementptr inbounds %struct.complex* %arrayidx67, i32 0, i32 1
  %41 = load double* %imag68, align 8
  %mul69 = fmul double %39, %41
  %add70 = fadd double %mul63, %mul69
  %real71 = getelementptr inbounds %struct.complex* %z0, i32 0, i32 0
  store double %add70, double* %real71, align 8
  %imag72 = getelementptr inbounds %struct.complex* %t0, i32 0, i32 1
  %42 = load double* %imag72, align 8
  %43 = load %struct.su2_matrix** %u.addr, align 8
  %e73 = getelementptr inbounds %struct.su2_matrix* %43, i32 0, i32 0
  %arrayidx74 = getelementptr inbounds [2 x [2 x %struct.complex]]* %e73, i32 0, i64 1
  %arrayidx75 = getelementptr inbounds [2 x %struct.complex]* %arrayidx74, i32 0, i64 0
  %real76 = getelementptr inbounds %struct.complex* %arrayidx75, i32 0, i32 0
  %44 = load double* %real76, align 8
  %mul77 = fmul double %42, %44
  %real78 = getelementptr inbounds %struct.complex* %t0, i32 0, i32 0
  %45 = load double* %real78, align 8
  %46 = load %struct.su2_matrix** %u.addr, align 8
  %e79 = getelementptr inbounds %struct.su2_matrix* %46, i32 0, i32 0
  %arrayidx80 = getelementptr inbounds [2 x [2 x %struct.complex]]* %e79, i32 0, i64 1
  %arrayidx81 = getelementptr inbounds [2 x %struct.complex]* %arrayidx80, i32 0, i64 0
  %imag82 = getelementptr inbounds %struct.complex* %arrayidx81, i32 0, i32 1
  %47 = load double* %imag82, align 8
  %mul83 = fmul double %45, %47
  %sub84 = fsub double %mul77, %mul83
  %imag85 = getelementptr inbounds %struct.complex* %z0, i32 0, i32 1
  store double %sub84, double* %imag85, align 8
  %real86 = getelementptr inbounds %struct.complex* %t1, i32 0, i32 0
  %48 = load double* %real86, align 8
  %49 = load %struct.su2_matrix** %u.addr, align 8
  %e87 = getelementptr inbounds %struct.su2_matrix* %49, i32 0, i32 0
  %arrayidx88 = getelementptr inbounds [2 x [2 x %struct.complex]]* %e87, i32 0, i64 1
  %arrayidx89 = getelementptr inbounds [2 x %struct.complex]* %arrayidx88, i32 0, i64 1
  %real90 = getelementptr inbounds %struct.complex* %arrayidx89, i32 0, i32 0
  %50 = load double* %real90, align 8
  %mul91 = fmul double %48, %50
  %imag92 = getelementptr inbounds %struct.complex* %t1, i32 0, i32 1
  %51 = load double* %imag92, align 8
  %52 = load %struct.su2_matrix** %u.addr, align 8
  %e93 = getelementptr inbounds %struct.su2_matrix* %52, i32 0, i32 0
  %arrayidx94 = getelementptr inbounds [2 x [2 x %struct.complex]]* %e93, i32 0, i64 1
  %arrayidx95 = getelementptr inbounds [2 x %struct.complex]* %arrayidx94, i32 0, i64 1
  %imag96 = getelementptr inbounds %struct.complex* %arrayidx95, i32 0, i32 1
  %53 = load double* %imag96, align 8
  %mul97 = fmul double %51, %53
  %add98 = fadd double %mul91, %mul97
  %real99 = getelementptr inbounds %struct.complex* %z1, i32 0, i32 0
  store double %add98, double* %real99, align 8
  %imag100 = getelementptr inbounds %struct.complex* %t1, i32 0, i32 1
  %54 = load double* %imag100, align 8
  %55 = load %struct.su2_matrix** %u.addr, align 8
  %e101 = getelementptr inbounds %struct.su2_matrix* %55, i32 0, i32 0
  %arrayidx102 = getelementptr inbounds [2 x [2 x %struct.complex]]* %e101, i32 0, i64 1
  %arrayidx103 = getelementptr inbounds [2 x %struct.complex]* %arrayidx102, i32 0, i64 1
  %real104 = getelementptr inbounds %struct.complex* %arrayidx103, i32 0, i32 0
  %56 = load double* %real104, align 8
  %mul105 = fmul double %54, %56
  %real106 = getelementptr inbounds %struct.complex* %t1, i32 0, i32 0
  %57 = load double* %real106, align 8
  %58 = load %struct.su2_matrix** %u.addr, align 8
  %e107 = getelementptr inbounds %struct.su2_matrix* %58, i32 0, i32 0
  %arrayidx108 = getelementptr inbounds [2 x [2 x %struct.complex]]* %e107, i32 0, i64 1
  %arrayidx109 = getelementptr inbounds [2 x %struct.complex]* %arrayidx108, i32 0, i64 1
  %imag110 = getelementptr inbounds %struct.complex* %arrayidx109, i32 0, i32 1
  %59 = load double* %imag110, align 8
  %mul111 = fmul double %57, %59
  %sub112 = fsub double %mul105, %mul111
  %imag113 = getelementptr inbounds %struct.complex* %z1, i32 0, i32 1
  store double %sub112, double* %imag113, align 8
  %real114 = getelementptr inbounds %struct.complex* %z0, i32 0, i32 0
  %60 = load double* %real114, align 8
  %real115 = getelementptr inbounds %struct.complex* %z1, i32 0, i32 0
  %61 = load double* %real115, align 8
  %add116 = fadd double %60, %61
  %62 = load %struct.complex** %x1.addr, align 8
  %real117 = getelementptr inbounds %struct.complex* %62, i32 0, i32 0
  store double %add116, double* %real117, align 8
  %imag118 = getelementptr inbounds %struct.complex* %z0, i32 0, i32 1
  %63 = load double* %imag118, align 8
  %imag119 = getelementptr inbounds %struct.complex* %z1, i32 0, i32 1
  %64 = load double* %imag119, align 8
  %add120 = fadd double %63, %64
  %65 = load %struct.complex** %x1.addr, align 8
  %imag121 = getelementptr inbounds %struct.complex* %65, i32 0, i32 1
  store double %add120, double* %imag121, align 8
  ret void
}

; Function Attrs: nounwind uwtable
define internal double @gaussian_rand_no(%struct.double_prn* %prn_pt) #0 {
entry:
  %retval = alloca double, align 8
  %prn_pt.addr = alloca %struct.double_prn*, align 8
  %fac = alloca double, align 8
  %r = alloca double, align 8
  %v1 = alloca double, align 8
  %v2 = alloca double, align 8
  store %struct.double_prn* %prn_pt, %struct.double_prn** %prn_pt.addr, align 8
  %0 = load i32* @gaussian_rand_no.iset, align 4
  %cmp = icmp eq i32 %0, 0
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  br label %do.body

do.body:                                          ; preds = %do.cond, %if.then
  %1 = load %struct.double_prn** %prn_pt.addr, align 8
  %call = call double @myrand(%struct.double_prn* %1)
  %mul = fmul double 2.000000e+00, %call
  %sub = fsub double %mul, 1.000000e+00
  store double %sub, double* %v1, align 8
  %2 = load %struct.double_prn** %prn_pt.addr, align 8
  %call1 = call double @myrand(%struct.double_prn* %2)
  %mul2 = fmul double 2.000000e+00, %call1
  %sub3 = fsub double %mul2, 1.000000e+00
  store double %sub3, double* %v2, align 8
  %3 = load double* %v1, align 8
  %4 = load double* %v1, align 8
  %mul4 = fmul double %3, %4
  %5 = load double* %v2, align 8
  %6 = load double* %v2, align 8
  %mul5 = fmul double %5, %6
  %add = fadd double %mul4, %mul5
  store double %add, double* %r, align 8
  br label %do.cond

do.cond:                                          ; preds = %do.body
  %7 = load double* %r, align 8
  %cmp6 = fcmp oge double %7, 1.000000e+00
  br i1 %cmp6, label %do.body, label %do.end

do.end:                                           ; preds = %do.cond
  %8 = load double* %r, align 8
  %call7 = call double @log(double %8) #2
  %sub8 = fsub double -0.000000e+00, %call7
  %9 = load double* %r, align 8
  %div = fdiv double %sub8, %9
  %call9 = call double @sqrt(double %div) #2
  store double %call9, double* %fac, align 8
  %10 = load double* %v1, align 8
  %11 = load double* %fac, align 8
  %mul10 = fmul double %10, %11
  store double %mul10, double* @gaussian_rand_no.gset, align 8
  store i32 1, i32* @gaussian_rand_no.iset, align 4
  %12 = load double* %v2, align 8
  %13 = load double* %fac, align 8
  %mul11 = fmul double %12, %13
  store double %mul11, double* %retval
  br label %return

if.else:                                          ; preds = %entry
  store i32 0, i32* @gaussian_rand_no.iset, align 4
  %14 = load double* @gaussian_rand_no.gset, align 8
  store double %14, double* %retval
  br label %return

return:                                           ; preds = %if.else, %do.end
  %15 = load double* %retval
  ret double %15
}

; Function Attrs: nounwind uwtable
define internal void @byterevn(i32* %w, i32 %n) #0 {
entry:
  %w.addr = alloca i32*, align 8
  %n.addr = alloca i32, align 4
  %old = alloca i32, align 4
  %newv = alloca i32, align 4
  %j = alloca i32, align 4
  store i32* %w, i32** %w.addr, align 8
  store i32 %n, i32* %n.addr, align 4
  store i32 0, i32* %j, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32* %j, align 4
  %1 = load i32* %n.addr, align 4
  %cmp = icmp slt i32 %0, %1
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %2 = load i32* %j, align 4
  %idxprom = sext i32 %2 to i64
  %3 = load i32** %w.addr, align 8
  %arrayidx = getelementptr inbounds i32* %3, i64 %idxprom
  %4 = load i32* %arrayidx, align 4
  store i32 %4, i32* %old, align 4
  %5 = load i32* %old, align 4
  %shr = ashr i32 %5, 24
  %and = and i32 %shr, 255
  store i32 %and, i32* %newv, align 4
  %6 = load i32* %old, align 4
  %shr1 = ashr i32 %6, 8
  %and2 = and i32 %shr1, 65280
  %7 = load i32* %newv, align 4
  %or = or i32 %7, %and2
  store i32 %or, i32* %newv, align 4
  %8 = load i32* %old, align 4
  %shl = shl i32 %8, 8
  %and3 = and i32 %shl, 16711680
  %9 = load i32* %newv, align 4
  %or4 = or i32 %9, %and3
  store i32 %or4, i32* %newv, align 4
  %10 = load i32* %old, align 4
  %shl5 = shl i32 %10, 24
  %and6 = and i32 %shl5, -16777216
  %11 = load i32* %newv, align 4
  %or7 = or i32 %11, %and6
  store i32 %or7, i32* %newv, align 4
  %12 = load i32* %newv, align 4
  %13 = load i32* %j, align 4
  %idxprom8 = sext i32 %13 to i64
  %14 = load i32** %w.addr, align 8
  %arrayidx9 = getelementptr inbounds i32* %14, i64 %idxprom8
  store i32 %12, i32* %arrayidx9, align 4
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %15 = load i32* %j, align 4
  %inc = add nsw i32 %15, 1
  store i32 %inc, i32* %j, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @mult_su3_mat_hwvec(%struct.su3_matrix* %mat, %struct.half_wilson_vector* %src, %struct.half_wilson_vector* %dest) #0 {
entry:
  %mat.addr = alloca %struct.su3_matrix*, align 8
  %src.addr = alloca %struct.half_wilson_vector*, align 8
  %dest.addr = alloca %struct.half_wilson_vector*, align 8
  %a0r = alloca double, align 8
  %a0i = alloca double, align 8
  %a1r = alloca double, align 8
  %a1i = alloca double, align 8
  %a2r = alloca double, align 8
  %a2i = alloca double, align 8
  %b0r = alloca double, align 8
  %b0i = alloca double, align 8
  %b1r = alloca double, align 8
  %b1i = alloca double, align 8
  %b2r = alloca double, align 8
  %b2i = alloca double, align 8
  store %struct.su3_matrix* %mat, %struct.su3_matrix** %mat.addr, align 8
  store %struct.half_wilson_vector* %src, %struct.half_wilson_vector** %src.addr, align 8
  store %struct.half_wilson_vector* %dest, %struct.half_wilson_vector** %dest.addr, align 8
  %0 = load %struct.su3_matrix** %mat.addr, align 8
  %e = getelementptr inbounds %struct.su3_matrix* %0, i32 0, i32 0
  %arrayidx = getelementptr inbounds [3 x [3 x %struct.complex]]* %e, i32 0, i64 0
  %arrayidx1 = getelementptr inbounds [3 x %struct.complex]* %arrayidx, i32 0, i64 0
  %real = getelementptr inbounds %struct.complex* %arrayidx1, i32 0, i32 0
  %1 = load double* %real, align 8
  store double %1, double* %a0r, align 8
  %2 = load %struct.su3_matrix** %mat.addr, align 8
  %e2 = getelementptr inbounds %struct.su3_matrix* %2, i32 0, i32 0
  %arrayidx3 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e2, i32 0, i64 0
  %arrayidx4 = getelementptr inbounds [3 x %struct.complex]* %arrayidx3, i32 0, i64 0
  %imag = getelementptr inbounds %struct.complex* %arrayidx4, i32 0, i32 1
  %3 = load double* %imag, align 8
  store double %3, double* %a0i, align 8
  %4 = load %struct.half_wilson_vector** %src.addr, align 8
  %h = getelementptr inbounds %struct.half_wilson_vector* %4, i32 0, i32 0
  %arrayidx5 = getelementptr inbounds [2 x %struct.su3_vector]* %h, i32 0, i64 0
  %c = getelementptr inbounds %struct.su3_vector* %arrayidx5, i32 0, i32 0
  %arrayidx6 = getelementptr inbounds [3 x %struct.complex]* %c, i32 0, i64 0
  %real7 = getelementptr inbounds %struct.complex* %arrayidx6, i32 0, i32 0
  %5 = load double* %real7, align 8
  store double %5, double* %b0r, align 8
  %6 = load %struct.half_wilson_vector** %src.addr, align 8
  %h8 = getelementptr inbounds %struct.half_wilson_vector* %6, i32 0, i32 0
  %arrayidx9 = getelementptr inbounds [2 x %struct.su3_vector]* %h8, i32 0, i64 0
  %c10 = getelementptr inbounds %struct.su3_vector* %arrayidx9, i32 0, i32 0
  %arrayidx11 = getelementptr inbounds [3 x %struct.complex]* %c10, i32 0, i64 0
  %imag12 = getelementptr inbounds %struct.complex* %arrayidx11, i32 0, i32 1
  %7 = load double* %imag12, align 8
  store double %7, double* %b0i, align 8
  %8 = load %struct.su3_matrix** %mat.addr, align 8
  %e13 = getelementptr inbounds %struct.su3_matrix* %8, i32 0, i32 0
  %arrayidx14 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e13, i32 0, i64 0
  %arrayidx15 = getelementptr inbounds [3 x %struct.complex]* %arrayidx14, i32 0, i64 1
  %real16 = getelementptr inbounds %struct.complex* %arrayidx15, i32 0, i32 0
  %9 = load double* %real16, align 8
  store double %9, double* %a1r, align 8
  %10 = load %struct.su3_matrix** %mat.addr, align 8
  %e17 = getelementptr inbounds %struct.su3_matrix* %10, i32 0, i32 0
  %arrayidx18 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e17, i32 0, i64 0
  %arrayidx19 = getelementptr inbounds [3 x %struct.complex]* %arrayidx18, i32 0, i64 1
  %imag20 = getelementptr inbounds %struct.complex* %arrayidx19, i32 0, i32 1
  %11 = load double* %imag20, align 8
  store double %11, double* %a1i, align 8
  %12 = load %struct.half_wilson_vector** %src.addr, align 8
  %h21 = getelementptr inbounds %struct.half_wilson_vector* %12, i32 0, i32 0
  %arrayidx22 = getelementptr inbounds [2 x %struct.su3_vector]* %h21, i32 0, i64 0
  %c23 = getelementptr inbounds %struct.su3_vector* %arrayidx22, i32 0, i32 0
  %arrayidx24 = getelementptr inbounds [3 x %struct.complex]* %c23, i32 0, i64 1
  %real25 = getelementptr inbounds %struct.complex* %arrayidx24, i32 0, i32 0
  %13 = load double* %real25, align 8
  store double %13, double* %b1r, align 8
  %14 = load %struct.half_wilson_vector** %src.addr, align 8
  %h26 = getelementptr inbounds %struct.half_wilson_vector* %14, i32 0, i32 0
  %arrayidx27 = getelementptr inbounds [2 x %struct.su3_vector]* %h26, i32 0, i64 0
  %c28 = getelementptr inbounds %struct.su3_vector* %arrayidx27, i32 0, i32 0
  %arrayidx29 = getelementptr inbounds [3 x %struct.complex]* %c28, i32 0, i64 1
  %imag30 = getelementptr inbounds %struct.complex* %arrayidx29, i32 0, i32 1
  %15 = load double* %imag30, align 8
  store double %15, double* %b1i, align 8
  %16 = load %struct.su3_matrix** %mat.addr, align 8
  %e31 = getelementptr inbounds %struct.su3_matrix* %16, i32 0, i32 0
  %arrayidx32 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e31, i32 0, i64 0
  %arrayidx33 = getelementptr inbounds [3 x %struct.complex]* %arrayidx32, i32 0, i64 2
  %real34 = getelementptr inbounds %struct.complex* %arrayidx33, i32 0, i32 0
  %17 = load double* %real34, align 8
  store double %17, double* %a2r, align 8
  %18 = load %struct.su3_matrix** %mat.addr, align 8
  %e35 = getelementptr inbounds %struct.su3_matrix* %18, i32 0, i32 0
  %arrayidx36 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e35, i32 0, i64 0
  %arrayidx37 = getelementptr inbounds [3 x %struct.complex]* %arrayidx36, i32 0, i64 2
  %imag38 = getelementptr inbounds %struct.complex* %arrayidx37, i32 0, i32 1
  %19 = load double* %imag38, align 8
  store double %19, double* %a2i, align 8
  %20 = load %struct.half_wilson_vector** %src.addr, align 8
  %h39 = getelementptr inbounds %struct.half_wilson_vector* %20, i32 0, i32 0
  %arrayidx40 = getelementptr inbounds [2 x %struct.su3_vector]* %h39, i32 0, i64 0
  %c41 = getelementptr inbounds %struct.su3_vector* %arrayidx40, i32 0, i32 0
  %arrayidx42 = getelementptr inbounds [3 x %struct.complex]* %c41, i32 0, i64 2
  %real43 = getelementptr inbounds %struct.complex* %arrayidx42, i32 0, i32 0
  %21 = load double* %real43, align 8
  store double %21, double* %b2r, align 8
  %22 = load %struct.half_wilson_vector** %src.addr, align 8
  %h44 = getelementptr inbounds %struct.half_wilson_vector* %22, i32 0, i32 0
  %arrayidx45 = getelementptr inbounds [2 x %struct.su3_vector]* %h44, i32 0, i64 0
  %c46 = getelementptr inbounds %struct.su3_vector* %arrayidx45, i32 0, i32 0
  %arrayidx47 = getelementptr inbounds [3 x %struct.complex]* %c46, i32 0, i64 2
  %imag48 = getelementptr inbounds %struct.complex* %arrayidx47, i32 0, i32 1
  %23 = load double* %imag48, align 8
  store double %23, double* %b2i, align 8
  %24 = load double* %a0r, align 8
  %25 = load double* %b0r, align 8
  %mul = fmul double %24, %25
  %26 = load double* %a0i, align 8
  %27 = load double* %b0i, align 8
  %mul49 = fmul double %26, %27
  %sub = fsub double %mul, %mul49
  %28 = load double* %a1r, align 8
  %29 = load double* %b1r, align 8
  %mul50 = fmul double %28, %29
  %add = fadd double %sub, %mul50
  %30 = load double* %a1i, align 8
  %31 = load double* %b1i, align 8
  %mul51 = fmul double %30, %31
  %sub52 = fsub double %add, %mul51
  %32 = load double* %a2r, align 8
  %33 = load double* %b2r, align 8
  %mul53 = fmul double %32, %33
  %add54 = fadd double %sub52, %mul53
  %34 = load double* %a2i, align 8
  %35 = load double* %b2i, align 8
  %mul55 = fmul double %34, %35
  %sub56 = fsub double %add54, %mul55
  %36 = load %struct.half_wilson_vector** %dest.addr, align 8
  %h57 = getelementptr inbounds %struct.half_wilson_vector* %36, i32 0, i32 0
  %arrayidx58 = getelementptr inbounds [2 x %struct.su3_vector]* %h57, i32 0, i64 0
  %c59 = getelementptr inbounds %struct.su3_vector* %arrayidx58, i32 0, i32 0
  %arrayidx60 = getelementptr inbounds [3 x %struct.complex]* %c59, i32 0, i64 0
  %real61 = getelementptr inbounds %struct.complex* %arrayidx60, i32 0, i32 0
  store double %sub56, double* %real61, align 8
  %37 = load double* %a0r, align 8
  %38 = load double* %b0i, align 8
  %mul62 = fmul double %37, %38
  %39 = load double* %a0i, align 8
  %40 = load double* %b0r, align 8
  %mul63 = fmul double %39, %40
  %add64 = fadd double %mul62, %mul63
  %41 = load double* %a1r, align 8
  %42 = load double* %b1i, align 8
  %mul65 = fmul double %41, %42
  %add66 = fadd double %add64, %mul65
  %43 = load double* %a1i, align 8
  %44 = load double* %b1r, align 8
  %mul67 = fmul double %43, %44
  %add68 = fadd double %add66, %mul67
  %45 = load double* %a2r, align 8
  %46 = load double* %b2i, align 8
  %mul69 = fmul double %45, %46
  %add70 = fadd double %add68, %mul69
  %47 = load double* %a2i, align 8
  %48 = load double* %b2r, align 8
  %mul71 = fmul double %47, %48
  %add72 = fadd double %add70, %mul71
  %49 = load %struct.half_wilson_vector** %dest.addr, align 8
  %h73 = getelementptr inbounds %struct.half_wilson_vector* %49, i32 0, i32 0
  %arrayidx74 = getelementptr inbounds [2 x %struct.su3_vector]* %h73, i32 0, i64 0
  %c75 = getelementptr inbounds %struct.su3_vector* %arrayidx74, i32 0, i32 0
  %arrayidx76 = getelementptr inbounds [3 x %struct.complex]* %c75, i32 0, i64 0
  %imag77 = getelementptr inbounds %struct.complex* %arrayidx76, i32 0, i32 1
  store double %add72, double* %imag77, align 8
  %50 = load %struct.su3_matrix** %mat.addr, align 8
  %e78 = getelementptr inbounds %struct.su3_matrix* %50, i32 0, i32 0
  %arrayidx79 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e78, i32 0, i64 1
  %arrayidx80 = getelementptr inbounds [3 x %struct.complex]* %arrayidx79, i32 0, i64 0
  %real81 = getelementptr inbounds %struct.complex* %arrayidx80, i32 0, i32 0
  %51 = load double* %real81, align 8
  store double %51, double* %a0r, align 8
  %52 = load %struct.su3_matrix** %mat.addr, align 8
  %e82 = getelementptr inbounds %struct.su3_matrix* %52, i32 0, i32 0
  %arrayidx83 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e82, i32 0, i64 1
  %arrayidx84 = getelementptr inbounds [3 x %struct.complex]* %arrayidx83, i32 0, i64 0
  %imag85 = getelementptr inbounds %struct.complex* %arrayidx84, i32 0, i32 1
  %53 = load double* %imag85, align 8
  store double %53, double* %a0i, align 8
  %54 = load %struct.half_wilson_vector** %src.addr, align 8
  %h86 = getelementptr inbounds %struct.half_wilson_vector* %54, i32 0, i32 0
  %arrayidx87 = getelementptr inbounds [2 x %struct.su3_vector]* %h86, i32 0, i64 0
  %c88 = getelementptr inbounds %struct.su3_vector* %arrayidx87, i32 0, i32 0
  %arrayidx89 = getelementptr inbounds [3 x %struct.complex]* %c88, i32 0, i64 0
  %real90 = getelementptr inbounds %struct.complex* %arrayidx89, i32 0, i32 0
  %55 = load double* %real90, align 8
  store double %55, double* %b0r, align 8
  %56 = load %struct.half_wilson_vector** %src.addr, align 8
  %h91 = getelementptr inbounds %struct.half_wilson_vector* %56, i32 0, i32 0
  %arrayidx92 = getelementptr inbounds [2 x %struct.su3_vector]* %h91, i32 0, i64 0
  %c93 = getelementptr inbounds %struct.su3_vector* %arrayidx92, i32 0, i32 0
  %arrayidx94 = getelementptr inbounds [3 x %struct.complex]* %c93, i32 0, i64 0
  %imag95 = getelementptr inbounds %struct.complex* %arrayidx94, i32 0, i32 1
  %57 = load double* %imag95, align 8
  store double %57, double* %b0i, align 8
  %58 = load %struct.su3_matrix** %mat.addr, align 8
  %e96 = getelementptr inbounds %struct.su3_matrix* %58, i32 0, i32 0
  %arrayidx97 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e96, i32 0, i64 1
  %arrayidx98 = getelementptr inbounds [3 x %struct.complex]* %arrayidx97, i32 0, i64 1
  %real99 = getelementptr inbounds %struct.complex* %arrayidx98, i32 0, i32 0
  %59 = load double* %real99, align 8
  store double %59, double* %a1r, align 8
  %60 = load %struct.su3_matrix** %mat.addr, align 8
  %e100 = getelementptr inbounds %struct.su3_matrix* %60, i32 0, i32 0
  %arrayidx101 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e100, i32 0, i64 1
  %arrayidx102 = getelementptr inbounds [3 x %struct.complex]* %arrayidx101, i32 0, i64 1
  %imag103 = getelementptr inbounds %struct.complex* %arrayidx102, i32 0, i32 1
  %61 = load double* %imag103, align 8
  store double %61, double* %a1i, align 8
  %62 = load %struct.half_wilson_vector** %src.addr, align 8
  %h104 = getelementptr inbounds %struct.half_wilson_vector* %62, i32 0, i32 0
  %arrayidx105 = getelementptr inbounds [2 x %struct.su3_vector]* %h104, i32 0, i64 0
  %c106 = getelementptr inbounds %struct.su3_vector* %arrayidx105, i32 0, i32 0
  %arrayidx107 = getelementptr inbounds [3 x %struct.complex]* %c106, i32 0, i64 1
  %real108 = getelementptr inbounds %struct.complex* %arrayidx107, i32 0, i32 0
  %63 = load double* %real108, align 8
  store double %63, double* %b1r, align 8
  %64 = load %struct.half_wilson_vector** %src.addr, align 8
  %h109 = getelementptr inbounds %struct.half_wilson_vector* %64, i32 0, i32 0
  %arrayidx110 = getelementptr inbounds [2 x %struct.su3_vector]* %h109, i32 0, i64 0
  %c111 = getelementptr inbounds %struct.su3_vector* %arrayidx110, i32 0, i32 0
  %arrayidx112 = getelementptr inbounds [3 x %struct.complex]* %c111, i32 0, i64 1
  %imag113 = getelementptr inbounds %struct.complex* %arrayidx112, i32 0, i32 1
  %65 = load double* %imag113, align 8
  store double %65, double* %b1i, align 8
  %66 = load %struct.su3_matrix** %mat.addr, align 8
  %e114 = getelementptr inbounds %struct.su3_matrix* %66, i32 0, i32 0
  %arrayidx115 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e114, i32 0, i64 1
  %arrayidx116 = getelementptr inbounds [3 x %struct.complex]* %arrayidx115, i32 0, i64 2
  %real117 = getelementptr inbounds %struct.complex* %arrayidx116, i32 0, i32 0
  %67 = load double* %real117, align 8
  store double %67, double* %a2r, align 8
  %68 = load %struct.su3_matrix** %mat.addr, align 8
  %e118 = getelementptr inbounds %struct.su3_matrix* %68, i32 0, i32 0
  %arrayidx119 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e118, i32 0, i64 1
  %arrayidx120 = getelementptr inbounds [3 x %struct.complex]* %arrayidx119, i32 0, i64 2
  %imag121 = getelementptr inbounds %struct.complex* %arrayidx120, i32 0, i32 1
  %69 = load double* %imag121, align 8
  store double %69, double* %a2i, align 8
  %70 = load %struct.half_wilson_vector** %src.addr, align 8
  %h122 = getelementptr inbounds %struct.half_wilson_vector* %70, i32 0, i32 0
  %arrayidx123 = getelementptr inbounds [2 x %struct.su3_vector]* %h122, i32 0, i64 0
  %c124 = getelementptr inbounds %struct.su3_vector* %arrayidx123, i32 0, i32 0
  %arrayidx125 = getelementptr inbounds [3 x %struct.complex]* %c124, i32 0, i64 2
  %real126 = getelementptr inbounds %struct.complex* %arrayidx125, i32 0, i32 0
  %71 = load double* %real126, align 8
  store double %71, double* %b2r, align 8
  %72 = load %struct.half_wilson_vector** %src.addr, align 8
  %h127 = getelementptr inbounds %struct.half_wilson_vector* %72, i32 0, i32 0
  %arrayidx128 = getelementptr inbounds [2 x %struct.su3_vector]* %h127, i32 0, i64 0
  %c129 = getelementptr inbounds %struct.su3_vector* %arrayidx128, i32 0, i32 0
  %arrayidx130 = getelementptr inbounds [3 x %struct.complex]* %c129, i32 0, i64 2
  %imag131 = getelementptr inbounds %struct.complex* %arrayidx130, i32 0, i32 1
  %73 = load double* %imag131, align 8
  store double %73, double* %b2i, align 8
  %74 = load double* %a0r, align 8
  %75 = load double* %b0r, align 8
  %mul132 = fmul double %74, %75
  %76 = load double* %a0i, align 8
  %77 = load double* %b0i, align 8
  %mul133 = fmul double %76, %77
  %sub134 = fsub double %mul132, %mul133
  %78 = load double* %a1r, align 8
  %79 = load double* %b1r, align 8
  %mul135 = fmul double %78, %79
  %add136 = fadd double %sub134, %mul135
  %80 = load double* %a1i, align 8
  %81 = load double* %b1i, align 8
  %mul137 = fmul double %80, %81
  %sub138 = fsub double %add136, %mul137
  %82 = load double* %a2r, align 8
  %83 = load double* %b2r, align 8
  %mul139 = fmul double %82, %83
  %add140 = fadd double %sub138, %mul139
  %84 = load double* %a2i, align 8
  %85 = load double* %b2i, align 8
  %mul141 = fmul double %84, %85
  %sub142 = fsub double %add140, %mul141
  %86 = load %struct.half_wilson_vector** %dest.addr, align 8
  %h143 = getelementptr inbounds %struct.half_wilson_vector* %86, i32 0, i32 0
  %arrayidx144 = getelementptr inbounds [2 x %struct.su3_vector]* %h143, i32 0, i64 0
  %c145 = getelementptr inbounds %struct.su3_vector* %arrayidx144, i32 0, i32 0
  %arrayidx146 = getelementptr inbounds [3 x %struct.complex]* %c145, i32 0, i64 1
  %real147 = getelementptr inbounds %struct.complex* %arrayidx146, i32 0, i32 0
  store double %sub142, double* %real147, align 8
  %87 = load double* %a0r, align 8
  %88 = load double* %b0i, align 8
  %mul148 = fmul double %87, %88
  %89 = load double* %a0i, align 8
  %90 = load double* %b0r, align 8
  %mul149 = fmul double %89, %90
  %add150 = fadd double %mul148, %mul149
  %91 = load double* %a1r, align 8
  %92 = load double* %b1i, align 8
  %mul151 = fmul double %91, %92
  %add152 = fadd double %add150, %mul151
  %93 = load double* %a1i, align 8
  %94 = load double* %b1r, align 8
  %mul153 = fmul double %93, %94
  %add154 = fadd double %add152, %mul153
  %95 = load double* %a2r, align 8
  %96 = load double* %b2i, align 8
  %mul155 = fmul double %95, %96
  %add156 = fadd double %add154, %mul155
  %97 = load double* %a2i, align 8
  %98 = load double* %b2r, align 8
  %mul157 = fmul double %97, %98
  %add158 = fadd double %add156, %mul157
  %99 = load %struct.half_wilson_vector** %dest.addr, align 8
  %h159 = getelementptr inbounds %struct.half_wilson_vector* %99, i32 0, i32 0
  %arrayidx160 = getelementptr inbounds [2 x %struct.su3_vector]* %h159, i32 0, i64 0
  %c161 = getelementptr inbounds %struct.su3_vector* %arrayidx160, i32 0, i32 0
  %arrayidx162 = getelementptr inbounds [3 x %struct.complex]* %c161, i32 0, i64 1
  %imag163 = getelementptr inbounds %struct.complex* %arrayidx162, i32 0, i32 1
  store double %add158, double* %imag163, align 8
  %100 = load %struct.su3_matrix** %mat.addr, align 8
  %e164 = getelementptr inbounds %struct.su3_matrix* %100, i32 0, i32 0
  %arrayidx165 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e164, i32 0, i64 2
  %arrayidx166 = getelementptr inbounds [3 x %struct.complex]* %arrayidx165, i32 0, i64 0
  %real167 = getelementptr inbounds %struct.complex* %arrayidx166, i32 0, i32 0
  %101 = load double* %real167, align 8
  store double %101, double* %a0r, align 8
  %102 = load %struct.su3_matrix** %mat.addr, align 8
  %e168 = getelementptr inbounds %struct.su3_matrix* %102, i32 0, i32 0
  %arrayidx169 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e168, i32 0, i64 2
  %arrayidx170 = getelementptr inbounds [3 x %struct.complex]* %arrayidx169, i32 0, i64 0
  %imag171 = getelementptr inbounds %struct.complex* %arrayidx170, i32 0, i32 1
  %103 = load double* %imag171, align 8
  store double %103, double* %a0i, align 8
  %104 = load %struct.half_wilson_vector** %src.addr, align 8
  %h172 = getelementptr inbounds %struct.half_wilson_vector* %104, i32 0, i32 0
  %arrayidx173 = getelementptr inbounds [2 x %struct.su3_vector]* %h172, i32 0, i64 0
  %c174 = getelementptr inbounds %struct.su3_vector* %arrayidx173, i32 0, i32 0
  %arrayidx175 = getelementptr inbounds [3 x %struct.complex]* %c174, i32 0, i64 0
  %real176 = getelementptr inbounds %struct.complex* %arrayidx175, i32 0, i32 0
  %105 = load double* %real176, align 8
  store double %105, double* %b0r, align 8
  %106 = load %struct.half_wilson_vector** %src.addr, align 8
  %h177 = getelementptr inbounds %struct.half_wilson_vector* %106, i32 0, i32 0
  %arrayidx178 = getelementptr inbounds [2 x %struct.su3_vector]* %h177, i32 0, i64 0
  %c179 = getelementptr inbounds %struct.su3_vector* %arrayidx178, i32 0, i32 0
  %arrayidx180 = getelementptr inbounds [3 x %struct.complex]* %c179, i32 0, i64 0
  %imag181 = getelementptr inbounds %struct.complex* %arrayidx180, i32 0, i32 1
  %107 = load double* %imag181, align 8
  store double %107, double* %b0i, align 8
  %108 = load %struct.su3_matrix** %mat.addr, align 8
  %e182 = getelementptr inbounds %struct.su3_matrix* %108, i32 0, i32 0
  %arrayidx183 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e182, i32 0, i64 2
  %arrayidx184 = getelementptr inbounds [3 x %struct.complex]* %arrayidx183, i32 0, i64 1
  %real185 = getelementptr inbounds %struct.complex* %arrayidx184, i32 0, i32 0
  %109 = load double* %real185, align 8
  store double %109, double* %a1r, align 8
  %110 = load %struct.su3_matrix** %mat.addr, align 8
  %e186 = getelementptr inbounds %struct.su3_matrix* %110, i32 0, i32 0
  %arrayidx187 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e186, i32 0, i64 2
  %arrayidx188 = getelementptr inbounds [3 x %struct.complex]* %arrayidx187, i32 0, i64 1
  %imag189 = getelementptr inbounds %struct.complex* %arrayidx188, i32 0, i32 1
  %111 = load double* %imag189, align 8
  store double %111, double* %a1i, align 8
  %112 = load %struct.half_wilson_vector** %src.addr, align 8
  %h190 = getelementptr inbounds %struct.half_wilson_vector* %112, i32 0, i32 0
  %arrayidx191 = getelementptr inbounds [2 x %struct.su3_vector]* %h190, i32 0, i64 0
  %c192 = getelementptr inbounds %struct.su3_vector* %arrayidx191, i32 0, i32 0
  %arrayidx193 = getelementptr inbounds [3 x %struct.complex]* %c192, i32 0, i64 1
  %real194 = getelementptr inbounds %struct.complex* %arrayidx193, i32 0, i32 0
  %113 = load double* %real194, align 8
  store double %113, double* %b1r, align 8
  %114 = load %struct.half_wilson_vector** %src.addr, align 8
  %h195 = getelementptr inbounds %struct.half_wilson_vector* %114, i32 0, i32 0
  %arrayidx196 = getelementptr inbounds [2 x %struct.su3_vector]* %h195, i32 0, i64 0
  %c197 = getelementptr inbounds %struct.su3_vector* %arrayidx196, i32 0, i32 0
  %arrayidx198 = getelementptr inbounds [3 x %struct.complex]* %c197, i32 0, i64 1
  %imag199 = getelementptr inbounds %struct.complex* %arrayidx198, i32 0, i32 1
  %115 = load double* %imag199, align 8
  store double %115, double* %b1i, align 8
  %116 = load %struct.su3_matrix** %mat.addr, align 8
  %e200 = getelementptr inbounds %struct.su3_matrix* %116, i32 0, i32 0
  %arrayidx201 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e200, i32 0, i64 2
  %arrayidx202 = getelementptr inbounds [3 x %struct.complex]* %arrayidx201, i32 0, i64 2
  %real203 = getelementptr inbounds %struct.complex* %arrayidx202, i32 0, i32 0
  %117 = load double* %real203, align 8
  store double %117, double* %a2r, align 8
  %118 = load %struct.su3_matrix** %mat.addr, align 8
  %e204 = getelementptr inbounds %struct.su3_matrix* %118, i32 0, i32 0
  %arrayidx205 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e204, i32 0, i64 2
  %arrayidx206 = getelementptr inbounds [3 x %struct.complex]* %arrayidx205, i32 0, i64 2
  %imag207 = getelementptr inbounds %struct.complex* %arrayidx206, i32 0, i32 1
  %119 = load double* %imag207, align 8
  store double %119, double* %a2i, align 8
  %120 = load %struct.half_wilson_vector** %src.addr, align 8
  %h208 = getelementptr inbounds %struct.half_wilson_vector* %120, i32 0, i32 0
  %arrayidx209 = getelementptr inbounds [2 x %struct.su3_vector]* %h208, i32 0, i64 0
  %c210 = getelementptr inbounds %struct.su3_vector* %arrayidx209, i32 0, i32 0
  %arrayidx211 = getelementptr inbounds [3 x %struct.complex]* %c210, i32 0, i64 2
  %real212 = getelementptr inbounds %struct.complex* %arrayidx211, i32 0, i32 0
  %121 = load double* %real212, align 8
  store double %121, double* %b2r, align 8
  %122 = load %struct.half_wilson_vector** %src.addr, align 8
  %h213 = getelementptr inbounds %struct.half_wilson_vector* %122, i32 0, i32 0
  %arrayidx214 = getelementptr inbounds [2 x %struct.su3_vector]* %h213, i32 0, i64 0
  %c215 = getelementptr inbounds %struct.su3_vector* %arrayidx214, i32 0, i32 0
  %arrayidx216 = getelementptr inbounds [3 x %struct.complex]* %c215, i32 0, i64 2
  %imag217 = getelementptr inbounds %struct.complex* %arrayidx216, i32 0, i32 1
  %123 = load double* %imag217, align 8
  store double %123, double* %b2i, align 8
  %124 = load double* %a0r, align 8
  %125 = load double* %b0r, align 8
  %mul218 = fmul double %124, %125
  %126 = load double* %a0i, align 8
  %127 = load double* %b0i, align 8
  %mul219 = fmul double %126, %127
  %sub220 = fsub double %mul218, %mul219
  %128 = load double* %a1r, align 8
  %129 = load double* %b1r, align 8
  %mul221 = fmul double %128, %129
  %add222 = fadd double %sub220, %mul221
  %130 = load double* %a1i, align 8
  %131 = load double* %b1i, align 8
  %mul223 = fmul double %130, %131
  %sub224 = fsub double %add222, %mul223
  %132 = load double* %a2r, align 8
  %133 = load double* %b2r, align 8
  %mul225 = fmul double %132, %133
  %add226 = fadd double %sub224, %mul225
  %134 = load double* %a2i, align 8
  %135 = load double* %b2i, align 8
  %mul227 = fmul double %134, %135
  %sub228 = fsub double %add226, %mul227
  %136 = load %struct.half_wilson_vector** %dest.addr, align 8
  %h229 = getelementptr inbounds %struct.half_wilson_vector* %136, i32 0, i32 0
  %arrayidx230 = getelementptr inbounds [2 x %struct.su3_vector]* %h229, i32 0, i64 0
  %c231 = getelementptr inbounds %struct.su3_vector* %arrayidx230, i32 0, i32 0
  %arrayidx232 = getelementptr inbounds [3 x %struct.complex]* %c231, i32 0, i64 2
  %real233 = getelementptr inbounds %struct.complex* %arrayidx232, i32 0, i32 0
  store double %sub228, double* %real233, align 8
  %137 = load double* %a0r, align 8
  %138 = load double* %b0i, align 8
  %mul234 = fmul double %137, %138
  %139 = load double* %a0i, align 8
  %140 = load double* %b0r, align 8
  %mul235 = fmul double %139, %140
  %add236 = fadd double %mul234, %mul235
  %141 = load double* %a1r, align 8
  %142 = load double* %b1i, align 8
  %mul237 = fmul double %141, %142
  %add238 = fadd double %add236, %mul237
  %143 = load double* %a1i, align 8
  %144 = load double* %b1r, align 8
  %mul239 = fmul double %143, %144
  %add240 = fadd double %add238, %mul239
  %145 = load double* %a2r, align 8
  %146 = load double* %b2i, align 8
  %mul241 = fmul double %145, %146
  %add242 = fadd double %add240, %mul241
  %147 = load double* %a2i, align 8
  %148 = load double* %b2r, align 8
  %mul243 = fmul double %147, %148
  %add244 = fadd double %add242, %mul243
  %149 = load %struct.half_wilson_vector** %dest.addr, align 8
  %h245 = getelementptr inbounds %struct.half_wilson_vector* %149, i32 0, i32 0
  %arrayidx246 = getelementptr inbounds [2 x %struct.su3_vector]* %h245, i32 0, i64 0
  %c247 = getelementptr inbounds %struct.su3_vector* %arrayidx246, i32 0, i32 0
  %arrayidx248 = getelementptr inbounds [3 x %struct.complex]* %c247, i32 0, i64 2
  %imag249 = getelementptr inbounds %struct.complex* %arrayidx248, i32 0, i32 1
  store double %add244, double* %imag249, align 8
  %150 = load %struct.su3_matrix** %mat.addr, align 8
  %e250 = getelementptr inbounds %struct.su3_matrix* %150, i32 0, i32 0
  %arrayidx251 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e250, i32 0, i64 0
  %arrayidx252 = getelementptr inbounds [3 x %struct.complex]* %arrayidx251, i32 0, i64 0
  %real253 = getelementptr inbounds %struct.complex* %arrayidx252, i32 0, i32 0
  %151 = load double* %real253, align 8
  store double %151, double* %a0r, align 8
  %152 = load %struct.su3_matrix** %mat.addr, align 8
  %e254 = getelementptr inbounds %struct.su3_matrix* %152, i32 0, i32 0
  %arrayidx255 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e254, i32 0, i64 0
  %arrayidx256 = getelementptr inbounds [3 x %struct.complex]* %arrayidx255, i32 0, i64 0
  %imag257 = getelementptr inbounds %struct.complex* %arrayidx256, i32 0, i32 1
  %153 = load double* %imag257, align 8
  store double %153, double* %a0i, align 8
  %154 = load %struct.half_wilson_vector** %src.addr, align 8
  %h258 = getelementptr inbounds %struct.half_wilson_vector* %154, i32 0, i32 0
  %arrayidx259 = getelementptr inbounds [2 x %struct.su3_vector]* %h258, i32 0, i64 1
  %c260 = getelementptr inbounds %struct.su3_vector* %arrayidx259, i32 0, i32 0
  %arrayidx261 = getelementptr inbounds [3 x %struct.complex]* %c260, i32 0, i64 0
  %real262 = getelementptr inbounds %struct.complex* %arrayidx261, i32 0, i32 0
  %155 = load double* %real262, align 8
  store double %155, double* %b0r, align 8
  %156 = load %struct.half_wilson_vector** %src.addr, align 8
  %h263 = getelementptr inbounds %struct.half_wilson_vector* %156, i32 0, i32 0
  %arrayidx264 = getelementptr inbounds [2 x %struct.su3_vector]* %h263, i32 0, i64 1
  %c265 = getelementptr inbounds %struct.su3_vector* %arrayidx264, i32 0, i32 0
  %arrayidx266 = getelementptr inbounds [3 x %struct.complex]* %c265, i32 0, i64 0
  %imag267 = getelementptr inbounds %struct.complex* %arrayidx266, i32 0, i32 1
  %157 = load double* %imag267, align 8
  store double %157, double* %b0i, align 8
  %158 = load %struct.su3_matrix** %mat.addr, align 8
  %e268 = getelementptr inbounds %struct.su3_matrix* %158, i32 0, i32 0
  %arrayidx269 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e268, i32 0, i64 0
  %arrayidx270 = getelementptr inbounds [3 x %struct.complex]* %arrayidx269, i32 0, i64 1
  %real271 = getelementptr inbounds %struct.complex* %arrayidx270, i32 0, i32 0
  %159 = load double* %real271, align 8
  store double %159, double* %a1r, align 8
  %160 = load %struct.su3_matrix** %mat.addr, align 8
  %e272 = getelementptr inbounds %struct.su3_matrix* %160, i32 0, i32 0
  %arrayidx273 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e272, i32 0, i64 0
  %arrayidx274 = getelementptr inbounds [3 x %struct.complex]* %arrayidx273, i32 0, i64 1
  %imag275 = getelementptr inbounds %struct.complex* %arrayidx274, i32 0, i32 1
  %161 = load double* %imag275, align 8
  store double %161, double* %a1i, align 8
  %162 = load %struct.half_wilson_vector** %src.addr, align 8
  %h276 = getelementptr inbounds %struct.half_wilson_vector* %162, i32 0, i32 0
  %arrayidx277 = getelementptr inbounds [2 x %struct.su3_vector]* %h276, i32 0, i64 1
  %c278 = getelementptr inbounds %struct.su3_vector* %arrayidx277, i32 0, i32 0
  %arrayidx279 = getelementptr inbounds [3 x %struct.complex]* %c278, i32 0, i64 1
  %real280 = getelementptr inbounds %struct.complex* %arrayidx279, i32 0, i32 0
  %163 = load double* %real280, align 8
  store double %163, double* %b1r, align 8
  %164 = load %struct.half_wilson_vector** %src.addr, align 8
  %h281 = getelementptr inbounds %struct.half_wilson_vector* %164, i32 0, i32 0
  %arrayidx282 = getelementptr inbounds [2 x %struct.su3_vector]* %h281, i32 0, i64 1
  %c283 = getelementptr inbounds %struct.su3_vector* %arrayidx282, i32 0, i32 0
  %arrayidx284 = getelementptr inbounds [3 x %struct.complex]* %c283, i32 0, i64 1
  %imag285 = getelementptr inbounds %struct.complex* %arrayidx284, i32 0, i32 1
  %165 = load double* %imag285, align 8
  store double %165, double* %b1i, align 8
  %166 = load %struct.su3_matrix** %mat.addr, align 8
  %e286 = getelementptr inbounds %struct.su3_matrix* %166, i32 0, i32 0
  %arrayidx287 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e286, i32 0, i64 0
  %arrayidx288 = getelementptr inbounds [3 x %struct.complex]* %arrayidx287, i32 0, i64 2
  %real289 = getelementptr inbounds %struct.complex* %arrayidx288, i32 0, i32 0
  %167 = load double* %real289, align 8
  store double %167, double* %a2r, align 8
  %168 = load %struct.su3_matrix** %mat.addr, align 8
  %e290 = getelementptr inbounds %struct.su3_matrix* %168, i32 0, i32 0
  %arrayidx291 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e290, i32 0, i64 0
  %arrayidx292 = getelementptr inbounds [3 x %struct.complex]* %arrayidx291, i32 0, i64 2
  %imag293 = getelementptr inbounds %struct.complex* %arrayidx292, i32 0, i32 1
  %169 = load double* %imag293, align 8
  store double %169, double* %a2i, align 8
  %170 = load %struct.half_wilson_vector** %src.addr, align 8
  %h294 = getelementptr inbounds %struct.half_wilson_vector* %170, i32 0, i32 0
  %arrayidx295 = getelementptr inbounds [2 x %struct.su3_vector]* %h294, i32 0, i64 1
  %c296 = getelementptr inbounds %struct.su3_vector* %arrayidx295, i32 0, i32 0
  %arrayidx297 = getelementptr inbounds [3 x %struct.complex]* %c296, i32 0, i64 2
  %real298 = getelementptr inbounds %struct.complex* %arrayidx297, i32 0, i32 0
  %171 = load double* %real298, align 8
  store double %171, double* %b2r, align 8
  %172 = load %struct.half_wilson_vector** %src.addr, align 8
  %h299 = getelementptr inbounds %struct.half_wilson_vector* %172, i32 0, i32 0
  %arrayidx300 = getelementptr inbounds [2 x %struct.su3_vector]* %h299, i32 0, i64 1
  %c301 = getelementptr inbounds %struct.su3_vector* %arrayidx300, i32 0, i32 0
  %arrayidx302 = getelementptr inbounds [3 x %struct.complex]* %c301, i32 0, i64 2
  %imag303 = getelementptr inbounds %struct.complex* %arrayidx302, i32 0, i32 1
  %173 = load double* %imag303, align 8
  store double %173, double* %b2i, align 8
  %174 = load double* %a0r, align 8
  %175 = load double* %b0r, align 8
  %mul304 = fmul double %174, %175
  %176 = load double* %a0i, align 8
  %177 = load double* %b0i, align 8
  %mul305 = fmul double %176, %177
  %sub306 = fsub double %mul304, %mul305
  %178 = load double* %a1r, align 8
  %179 = load double* %b1r, align 8
  %mul307 = fmul double %178, %179
  %add308 = fadd double %sub306, %mul307
  %180 = load double* %a1i, align 8
  %181 = load double* %b1i, align 8
  %mul309 = fmul double %180, %181
  %sub310 = fsub double %add308, %mul309
  %182 = load double* %a2r, align 8
  %183 = load double* %b2r, align 8
  %mul311 = fmul double %182, %183
  %add312 = fadd double %sub310, %mul311
  %184 = load double* %a2i, align 8
  %185 = load double* %b2i, align 8
  %mul313 = fmul double %184, %185
  %sub314 = fsub double %add312, %mul313
  %186 = load %struct.half_wilson_vector** %dest.addr, align 8
  %h315 = getelementptr inbounds %struct.half_wilson_vector* %186, i32 0, i32 0
  %arrayidx316 = getelementptr inbounds [2 x %struct.su3_vector]* %h315, i32 0, i64 1
  %c317 = getelementptr inbounds %struct.su3_vector* %arrayidx316, i32 0, i32 0
  %arrayidx318 = getelementptr inbounds [3 x %struct.complex]* %c317, i32 0, i64 0
  %real319 = getelementptr inbounds %struct.complex* %arrayidx318, i32 0, i32 0
  store double %sub314, double* %real319, align 8
  %187 = load double* %a0r, align 8
  %188 = load double* %b0i, align 8
  %mul320 = fmul double %187, %188
  %189 = load double* %a0i, align 8
  %190 = load double* %b0r, align 8
  %mul321 = fmul double %189, %190
  %add322 = fadd double %mul320, %mul321
  %191 = load double* %a1r, align 8
  %192 = load double* %b1i, align 8
  %mul323 = fmul double %191, %192
  %add324 = fadd double %add322, %mul323
  %193 = load double* %a1i, align 8
  %194 = load double* %b1r, align 8
  %mul325 = fmul double %193, %194
  %add326 = fadd double %add324, %mul325
  %195 = load double* %a2r, align 8
  %196 = load double* %b2i, align 8
  %mul327 = fmul double %195, %196
  %add328 = fadd double %add326, %mul327
  %197 = load double* %a2i, align 8
  %198 = load double* %b2r, align 8
  %mul329 = fmul double %197, %198
  %add330 = fadd double %add328, %mul329
  %199 = load %struct.half_wilson_vector** %dest.addr, align 8
  %h331 = getelementptr inbounds %struct.half_wilson_vector* %199, i32 0, i32 0
  %arrayidx332 = getelementptr inbounds [2 x %struct.su3_vector]* %h331, i32 0, i64 1
  %c333 = getelementptr inbounds %struct.su3_vector* %arrayidx332, i32 0, i32 0
  %arrayidx334 = getelementptr inbounds [3 x %struct.complex]* %c333, i32 0, i64 0
  %imag335 = getelementptr inbounds %struct.complex* %arrayidx334, i32 0, i32 1
  store double %add330, double* %imag335, align 8
  %200 = load %struct.su3_matrix** %mat.addr, align 8
  %e336 = getelementptr inbounds %struct.su3_matrix* %200, i32 0, i32 0
  %arrayidx337 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e336, i32 0, i64 1
  %arrayidx338 = getelementptr inbounds [3 x %struct.complex]* %arrayidx337, i32 0, i64 0
  %real339 = getelementptr inbounds %struct.complex* %arrayidx338, i32 0, i32 0
  %201 = load double* %real339, align 8
  store double %201, double* %a0r, align 8
  %202 = load %struct.su3_matrix** %mat.addr, align 8
  %e340 = getelementptr inbounds %struct.su3_matrix* %202, i32 0, i32 0
  %arrayidx341 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e340, i32 0, i64 1
  %arrayidx342 = getelementptr inbounds [3 x %struct.complex]* %arrayidx341, i32 0, i64 0
  %imag343 = getelementptr inbounds %struct.complex* %arrayidx342, i32 0, i32 1
  %203 = load double* %imag343, align 8
  store double %203, double* %a0i, align 8
  %204 = load %struct.half_wilson_vector** %src.addr, align 8
  %h344 = getelementptr inbounds %struct.half_wilson_vector* %204, i32 0, i32 0
  %arrayidx345 = getelementptr inbounds [2 x %struct.su3_vector]* %h344, i32 0, i64 1
  %c346 = getelementptr inbounds %struct.su3_vector* %arrayidx345, i32 0, i32 0
  %arrayidx347 = getelementptr inbounds [3 x %struct.complex]* %c346, i32 0, i64 0
  %real348 = getelementptr inbounds %struct.complex* %arrayidx347, i32 0, i32 0
  %205 = load double* %real348, align 8
  store double %205, double* %b0r, align 8
  %206 = load %struct.half_wilson_vector** %src.addr, align 8
  %h349 = getelementptr inbounds %struct.half_wilson_vector* %206, i32 0, i32 0
  %arrayidx350 = getelementptr inbounds [2 x %struct.su3_vector]* %h349, i32 0, i64 1
  %c351 = getelementptr inbounds %struct.su3_vector* %arrayidx350, i32 0, i32 0
  %arrayidx352 = getelementptr inbounds [3 x %struct.complex]* %c351, i32 0, i64 0
  %imag353 = getelementptr inbounds %struct.complex* %arrayidx352, i32 0, i32 1
  %207 = load double* %imag353, align 8
  store double %207, double* %b0i, align 8
  %208 = load %struct.su3_matrix** %mat.addr, align 8
  %e354 = getelementptr inbounds %struct.su3_matrix* %208, i32 0, i32 0
  %arrayidx355 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e354, i32 0, i64 1
  %arrayidx356 = getelementptr inbounds [3 x %struct.complex]* %arrayidx355, i32 0, i64 1
  %real357 = getelementptr inbounds %struct.complex* %arrayidx356, i32 0, i32 0
  %209 = load double* %real357, align 8
  store double %209, double* %a1r, align 8
  %210 = load %struct.su3_matrix** %mat.addr, align 8
  %e358 = getelementptr inbounds %struct.su3_matrix* %210, i32 0, i32 0
  %arrayidx359 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e358, i32 0, i64 1
  %arrayidx360 = getelementptr inbounds [3 x %struct.complex]* %arrayidx359, i32 0, i64 1
  %imag361 = getelementptr inbounds %struct.complex* %arrayidx360, i32 0, i32 1
  %211 = load double* %imag361, align 8
  store double %211, double* %a1i, align 8
  %212 = load %struct.half_wilson_vector** %src.addr, align 8
  %h362 = getelementptr inbounds %struct.half_wilson_vector* %212, i32 0, i32 0
  %arrayidx363 = getelementptr inbounds [2 x %struct.su3_vector]* %h362, i32 0, i64 1
  %c364 = getelementptr inbounds %struct.su3_vector* %arrayidx363, i32 0, i32 0
  %arrayidx365 = getelementptr inbounds [3 x %struct.complex]* %c364, i32 0, i64 1
  %real366 = getelementptr inbounds %struct.complex* %arrayidx365, i32 0, i32 0
  %213 = load double* %real366, align 8
  store double %213, double* %b1r, align 8
  %214 = load %struct.half_wilson_vector** %src.addr, align 8
  %h367 = getelementptr inbounds %struct.half_wilson_vector* %214, i32 0, i32 0
  %arrayidx368 = getelementptr inbounds [2 x %struct.su3_vector]* %h367, i32 0, i64 1
  %c369 = getelementptr inbounds %struct.su3_vector* %arrayidx368, i32 0, i32 0
  %arrayidx370 = getelementptr inbounds [3 x %struct.complex]* %c369, i32 0, i64 1
  %imag371 = getelementptr inbounds %struct.complex* %arrayidx370, i32 0, i32 1
  %215 = load double* %imag371, align 8
  store double %215, double* %b1i, align 8
  %216 = load %struct.su3_matrix** %mat.addr, align 8
  %e372 = getelementptr inbounds %struct.su3_matrix* %216, i32 0, i32 0
  %arrayidx373 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e372, i32 0, i64 1
  %arrayidx374 = getelementptr inbounds [3 x %struct.complex]* %arrayidx373, i32 0, i64 2
  %real375 = getelementptr inbounds %struct.complex* %arrayidx374, i32 0, i32 0
  %217 = load double* %real375, align 8
  store double %217, double* %a2r, align 8
  %218 = load %struct.su3_matrix** %mat.addr, align 8
  %e376 = getelementptr inbounds %struct.su3_matrix* %218, i32 0, i32 0
  %arrayidx377 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e376, i32 0, i64 1
  %arrayidx378 = getelementptr inbounds [3 x %struct.complex]* %arrayidx377, i32 0, i64 2
  %imag379 = getelementptr inbounds %struct.complex* %arrayidx378, i32 0, i32 1
  %219 = load double* %imag379, align 8
  store double %219, double* %a2i, align 8
  %220 = load %struct.half_wilson_vector** %src.addr, align 8
  %h380 = getelementptr inbounds %struct.half_wilson_vector* %220, i32 0, i32 0
  %arrayidx381 = getelementptr inbounds [2 x %struct.su3_vector]* %h380, i32 0, i64 1
  %c382 = getelementptr inbounds %struct.su3_vector* %arrayidx381, i32 0, i32 0
  %arrayidx383 = getelementptr inbounds [3 x %struct.complex]* %c382, i32 0, i64 2
  %real384 = getelementptr inbounds %struct.complex* %arrayidx383, i32 0, i32 0
  %221 = load double* %real384, align 8
  store double %221, double* %b2r, align 8
  %222 = load %struct.half_wilson_vector** %src.addr, align 8
  %h385 = getelementptr inbounds %struct.half_wilson_vector* %222, i32 0, i32 0
  %arrayidx386 = getelementptr inbounds [2 x %struct.su3_vector]* %h385, i32 0, i64 1
  %c387 = getelementptr inbounds %struct.su3_vector* %arrayidx386, i32 0, i32 0
  %arrayidx388 = getelementptr inbounds [3 x %struct.complex]* %c387, i32 0, i64 2
  %imag389 = getelementptr inbounds %struct.complex* %arrayidx388, i32 0, i32 1
  %223 = load double* %imag389, align 8
  store double %223, double* %b2i, align 8
  %224 = load double* %a0r, align 8
  %225 = load double* %b0r, align 8
  %mul390 = fmul double %224, %225
  %226 = load double* %a0i, align 8
  %227 = load double* %b0i, align 8
  %mul391 = fmul double %226, %227
  %sub392 = fsub double %mul390, %mul391
  %228 = load double* %a1r, align 8
  %229 = load double* %b1r, align 8
  %mul393 = fmul double %228, %229
  %add394 = fadd double %sub392, %mul393
  %230 = load double* %a1i, align 8
  %231 = load double* %b1i, align 8
  %mul395 = fmul double %230, %231
  %sub396 = fsub double %add394, %mul395
  %232 = load double* %a2r, align 8
  %233 = load double* %b2r, align 8
  %mul397 = fmul double %232, %233
  %add398 = fadd double %sub396, %mul397
  %234 = load double* %a2i, align 8
  %235 = load double* %b2i, align 8
  %mul399 = fmul double %234, %235
  %sub400 = fsub double %add398, %mul399
  %236 = load %struct.half_wilson_vector** %dest.addr, align 8
  %h401 = getelementptr inbounds %struct.half_wilson_vector* %236, i32 0, i32 0
  %arrayidx402 = getelementptr inbounds [2 x %struct.su3_vector]* %h401, i32 0, i64 1
  %c403 = getelementptr inbounds %struct.su3_vector* %arrayidx402, i32 0, i32 0
  %arrayidx404 = getelementptr inbounds [3 x %struct.complex]* %c403, i32 0, i64 1
  %real405 = getelementptr inbounds %struct.complex* %arrayidx404, i32 0, i32 0
  store double %sub400, double* %real405, align 8
  %237 = load double* %a0r, align 8
  %238 = load double* %b0i, align 8
  %mul406 = fmul double %237, %238
  %239 = load double* %a0i, align 8
  %240 = load double* %b0r, align 8
  %mul407 = fmul double %239, %240
  %add408 = fadd double %mul406, %mul407
  %241 = load double* %a1r, align 8
  %242 = load double* %b1i, align 8
  %mul409 = fmul double %241, %242
  %add410 = fadd double %add408, %mul409
  %243 = load double* %a1i, align 8
  %244 = load double* %b1r, align 8
  %mul411 = fmul double %243, %244
  %add412 = fadd double %add410, %mul411
  %245 = load double* %a2r, align 8
  %246 = load double* %b2i, align 8
  %mul413 = fmul double %245, %246
  %add414 = fadd double %add412, %mul413
  %247 = load double* %a2i, align 8
  %248 = load double* %b2r, align 8
  %mul415 = fmul double %247, %248
  %add416 = fadd double %add414, %mul415
  %249 = load %struct.half_wilson_vector** %dest.addr, align 8
  %h417 = getelementptr inbounds %struct.half_wilson_vector* %249, i32 0, i32 0
  %arrayidx418 = getelementptr inbounds [2 x %struct.su3_vector]* %h417, i32 0, i64 1
  %c419 = getelementptr inbounds %struct.su3_vector* %arrayidx418, i32 0, i32 0
  %arrayidx420 = getelementptr inbounds [3 x %struct.complex]* %c419, i32 0, i64 1
  %imag421 = getelementptr inbounds %struct.complex* %arrayidx420, i32 0, i32 1
  store double %add416, double* %imag421, align 8
  %250 = load %struct.su3_matrix** %mat.addr, align 8
  %e422 = getelementptr inbounds %struct.su3_matrix* %250, i32 0, i32 0
  %arrayidx423 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e422, i32 0, i64 2
  %arrayidx424 = getelementptr inbounds [3 x %struct.complex]* %arrayidx423, i32 0, i64 0
  %real425 = getelementptr inbounds %struct.complex* %arrayidx424, i32 0, i32 0
  %251 = load double* %real425, align 8
  store double %251, double* %a0r, align 8
  %252 = load %struct.su3_matrix** %mat.addr, align 8
  %e426 = getelementptr inbounds %struct.su3_matrix* %252, i32 0, i32 0
  %arrayidx427 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e426, i32 0, i64 2
  %arrayidx428 = getelementptr inbounds [3 x %struct.complex]* %arrayidx427, i32 0, i64 0
  %imag429 = getelementptr inbounds %struct.complex* %arrayidx428, i32 0, i32 1
  %253 = load double* %imag429, align 8
  store double %253, double* %a0i, align 8
  %254 = load %struct.half_wilson_vector** %src.addr, align 8
  %h430 = getelementptr inbounds %struct.half_wilson_vector* %254, i32 0, i32 0
  %arrayidx431 = getelementptr inbounds [2 x %struct.su3_vector]* %h430, i32 0, i64 1
  %c432 = getelementptr inbounds %struct.su3_vector* %arrayidx431, i32 0, i32 0
  %arrayidx433 = getelementptr inbounds [3 x %struct.complex]* %c432, i32 0, i64 0
  %real434 = getelementptr inbounds %struct.complex* %arrayidx433, i32 0, i32 0
  %255 = load double* %real434, align 8
  store double %255, double* %b0r, align 8
  %256 = load %struct.half_wilson_vector** %src.addr, align 8
  %h435 = getelementptr inbounds %struct.half_wilson_vector* %256, i32 0, i32 0
  %arrayidx436 = getelementptr inbounds [2 x %struct.su3_vector]* %h435, i32 0, i64 1
  %c437 = getelementptr inbounds %struct.su3_vector* %arrayidx436, i32 0, i32 0
  %arrayidx438 = getelementptr inbounds [3 x %struct.complex]* %c437, i32 0, i64 0
  %imag439 = getelementptr inbounds %struct.complex* %arrayidx438, i32 0, i32 1
  %257 = load double* %imag439, align 8
  store double %257, double* %b0i, align 8
  %258 = load %struct.su3_matrix** %mat.addr, align 8
  %e440 = getelementptr inbounds %struct.su3_matrix* %258, i32 0, i32 0
  %arrayidx441 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e440, i32 0, i64 2
  %arrayidx442 = getelementptr inbounds [3 x %struct.complex]* %arrayidx441, i32 0, i64 1
  %real443 = getelementptr inbounds %struct.complex* %arrayidx442, i32 0, i32 0
  %259 = load double* %real443, align 8
  store double %259, double* %a1r, align 8
  %260 = load %struct.su3_matrix** %mat.addr, align 8
  %e444 = getelementptr inbounds %struct.su3_matrix* %260, i32 0, i32 0
  %arrayidx445 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e444, i32 0, i64 2
  %arrayidx446 = getelementptr inbounds [3 x %struct.complex]* %arrayidx445, i32 0, i64 1
  %imag447 = getelementptr inbounds %struct.complex* %arrayidx446, i32 0, i32 1
  %261 = load double* %imag447, align 8
  store double %261, double* %a1i, align 8
  %262 = load %struct.half_wilson_vector** %src.addr, align 8
  %h448 = getelementptr inbounds %struct.half_wilson_vector* %262, i32 0, i32 0
  %arrayidx449 = getelementptr inbounds [2 x %struct.su3_vector]* %h448, i32 0, i64 1
  %c450 = getelementptr inbounds %struct.su3_vector* %arrayidx449, i32 0, i32 0
  %arrayidx451 = getelementptr inbounds [3 x %struct.complex]* %c450, i32 0, i64 1
  %real452 = getelementptr inbounds %struct.complex* %arrayidx451, i32 0, i32 0
  %263 = load double* %real452, align 8
  store double %263, double* %b1r, align 8
  %264 = load %struct.half_wilson_vector** %src.addr, align 8
  %h453 = getelementptr inbounds %struct.half_wilson_vector* %264, i32 0, i32 0
  %arrayidx454 = getelementptr inbounds [2 x %struct.su3_vector]* %h453, i32 0, i64 1
  %c455 = getelementptr inbounds %struct.su3_vector* %arrayidx454, i32 0, i32 0
  %arrayidx456 = getelementptr inbounds [3 x %struct.complex]* %c455, i32 0, i64 1
  %imag457 = getelementptr inbounds %struct.complex* %arrayidx456, i32 0, i32 1
  %265 = load double* %imag457, align 8
  store double %265, double* %b1i, align 8
  %266 = load %struct.su3_matrix** %mat.addr, align 8
  %e458 = getelementptr inbounds %struct.su3_matrix* %266, i32 0, i32 0
  %arrayidx459 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e458, i32 0, i64 2
  %arrayidx460 = getelementptr inbounds [3 x %struct.complex]* %arrayidx459, i32 0, i64 2
  %real461 = getelementptr inbounds %struct.complex* %arrayidx460, i32 0, i32 0
  %267 = load double* %real461, align 8
  store double %267, double* %a2r, align 8
  %268 = load %struct.su3_matrix** %mat.addr, align 8
  %e462 = getelementptr inbounds %struct.su3_matrix* %268, i32 0, i32 0
  %arrayidx463 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e462, i32 0, i64 2
  %arrayidx464 = getelementptr inbounds [3 x %struct.complex]* %arrayidx463, i32 0, i64 2
  %imag465 = getelementptr inbounds %struct.complex* %arrayidx464, i32 0, i32 1
  %269 = load double* %imag465, align 8
  store double %269, double* %a2i, align 8
  %270 = load %struct.half_wilson_vector** %src.addr, align 8
  %h466 = getelementptr inbounds %struct.half_wilson_vector* %270, i32 0, i32 0
  %arrayidx467 = getelementptr inbounds [2 x %struct.su3_vector]* %h466, i32 0, i64 1
  %c468 = getelementptr inbounds %struct.su3_vector* %arrayidx467, i32 0, i32 0
  %arrayidx469 = getelementptr inbounds [3 x %struct.complex]* %c468, i32 0, i64 2
  %real470 = getelementptr inbounds %struct.complex* %arrayidx469, i32 0, i32 0
  %271 = load double* %real470, align 8
  store double %271, double* %b2r, align 8
  %272 = load %struct.half_wilson_vector** %src.addr, align 8
  %h471 = getelementptr inbounds %struct.half_wilson_vector* %272, i32 0, i32 0
  %arrayidx472 = getelementptr inbounds [2 x %struct.su3_vector]* %h471, i32 0, i64 1
  %c473 = getelementptr inbounds %struct.su3_vector* %arrayidx472, i32 0, i32 0
  %arrayidx474 = getelementptr inbounds [3 x %struct.complex]* %c473, i32 0, i64 2
  %imag475 = getelementptr inbounds %struct.complex* %arrayidx474, i32 0, i32 1
  %273 = load double* %imag475, align 8
  store double %273, double* %b2i, align 8
  %274 = load double* %a0r, align 8
  %275 = load double* %b0r, align 8
  %mul476 = fmul double %274, %275
  %276 = load double* %a0i, align 8
  %277 = load double* %b0i, align 8
  %mul477 = fmul double %276, %277
  %sub478 = fsub double %mul476, %mul477
  %278 = load double* %a1r, align 8
  %279 = load double* %b1r, align 8
  %mul479 = fmul double %278, %279
  %add480 = fadd double %sub478, %mul479
  %280 = load double* %a1i, align 8
  %281 = load double* %b1i, align 8
  %mul481 = fmul double %280, %281
  %sub482 = fsub double %add480, %mul481
  %282 = load double* %a2r, align 8
  %283 = load double* %b2r, align 8
  %mul483 = fmul double %282, %283
  %add484 = fadd double %sub482, %mul483
  %284 = load double* %a2i, align 8
  %285 = load double* %b2i, align 8
  %mul485 = fmul double %284, %285
  %sub486 = fsub double %add484, %mul485
  %286 = load %struct.half_wilson_vector** %dest.addr, align 8
  %h487 = getelementptr inbounds %struct.half_wilson_vector* %286, i32 0, i32 0
  %arrayidx488 = getelementptr inbounds [2 x %struct.su3_vector]* %h487, i32 0, i64 1
  %c489 = getelementptr inbounds %struct.su3_vector* %arrayidx488, i32 0, i32 0
  %arrayidx490 = getelementptr inbounds [3 x %struct.complex]* %c489, i32 0, i64 2
  %real491 = getelementptr inbounds %struct.complex* %arrayidx490, i32 0, i32 0
  store double %sub486, double* %real491, align 8
  %287 = load double* %a0r, align 8
  %288 = load double* %b0i, align 8
  %mul492 = fmul double %287, %288
  %289 = load double* %a0i, align 8
  %290 = load double* %b0r, align 8
  %mul493 = fmul double %289, %290
  %add494 = fadd double %mul492, %mul493
  %291 = load double* %a1r, align 8
  %292 = load double* %b1i, align 8
  %mul495 = fmul double %291, %292
  %add496 = fadd double %add494, %mul495
  %293 = load double* %a1i, align 8
  %294 = load double* %b1r, align 8
  %mul497 = fmul double %293, %294
  %add498 = fadd double %add496, %mul497
  %295 = load double* %a2r, align 8
  %296 = load double* %b2i, align 8
  %mul499 = fmul double %295, %296
  %add500 = fadd double %add498, %mul499
  %297 = load double* %a2i, align 8
  %298 = load double* %b2r, align 8
  %mul501 = fmul double %297, %298
  %add502 = fadd double %add500, %mul501
  %299 = load %struct.half_wilson_vector** %dest.addr, align 8
  %h503 = getelementptr inbounds %struct.half_wilson_vector* %299, i32 0, i32 0
  %arrayidx504 = getelementptr inbounds [2 x %struct.su3_vector]* %h503, i32 0, i64 1
  %c505 = getelementptr inbounds %struct.su3_vector* %arrayidx504, i32 0, i32 0
  %arrayidx506 = getelementptr inbounds [3 x %struct.complex]* %c505, i32 0, i64 2
  %imag507 = getelementptr inbounds %struct.complex* %arrayidx506, i32 0, i32 1
  store double %add502, double* %imag507, align 8
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @mult_adj_su3_mat_hwvec(%struct.su3_matrix* %mat, %struct.half_wilson_vector* %src, %struct.half_wilson_vector* %dest) #0 {
entry:
  %mat.addr = alloca %struct.su3_matrix*, align 8
  %src.addr = alloca %struct.half_wilson_vector*, align 8
  %dest.addr = alloca %struct.half_wilson_vector*, align 8
  %a0r = alloca double, align 8
  %a0i = alloca double, align 8
  %a1r = alloca double, align 8
  %a1i = alloca double, align 8
  %a2r = alloca double, align 8
  %a2i = alloca double, align 8
  %b0r = alloca double, align 8
  %b0i = alloca double, align 8
  %b1r = alloca double, align 8
  %b1i = alloca double, align 8
  %b2r = alloca double, align 8
  %b2i = alloca double, align 8
  store %struct.su3_matrix* %mat, %struct.su3_matrix** %mat.addr, align 8
  store %struct.half_wilson_vector* %src, %struct.half_wilson_vector** %src.addr, align 8
  store %struct.half_wilson_vector* %dest, %struct.half_wilson_vector** %dest.addr, align 8
  %0 = load %struct.su3_matrix** %mat.addr, align 8
  %e = getelementptr inbounds %struct.su3_matrix* %0, i32 0, i32 0
  %arrayidx = getelementptr inbounds [3 x [3 x %struct.complex]]* %e, i32 0, i64 0
  %arrayidx1 = getelementptr inbounds [3 x %struct.complex]* %arrayidx, i32 0, i64 0
  %real = getelementptr inbounds %struct.complex* %arrayidx1, i32 0, i32 0
  %1 = load double* %real, align 8
  store double %1, double* %a0r, align 8
  %2 = load %struct.su3_matrix** %mat.addr, align 8
  %e2 = getelementptr inbounds %struct.su3_matrix* %2, i32 0, i32 0
  %arrayidx3 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e2, i32 0, i64 0
  %arrayidx4 = getelementptr inbounds [3 x %struct.complex]* %arrayidx3, i32 0, i64 0
  %imag = getelementptr inbounds %struct.complex* %arrayidx4, i32 0, i32 1
  %3 = load double* %imag, align 8
  store double %3, double* %a0i, align 8
  %4 = load %struct.half_wilson_vector** %src.addr, align 8
  %h = getelementptr inbounds %struct.half_wilson_vector* %4, i32 0, i32 0
  %arrayidx5 = getelementptr inbounds [2 x %struct.su3_vector]* %h, i32 0, i64 0
  %c = getelementptr inbounds %struct.su3_vector* %arrayidx5, i32 0, i32 0
  %arrayidx6 = getelementptr inbounds [3 x %struct.complex]* %c, i32 0, i64 0
  %real7 = getelementptr inbounds %struct.complex* %arrayidx6, i32 0, i32 0
  %5 = load double* %real7, align 8
  store double %5, double* %b0r, align 8
  %6 = load %struct.half_wilson_vector** %src.addr, align 8
  %h8 = getelementptr inbounds %struct.half_wilson_vector* %6, i32 0, i32 0
  %arrayidx9 = getelementptr inbounds [2 x %struct.su3_vector]* %h8, i32 0, i64 0
  %c10 = getelementptr inbounds %struct.su3_vector* %arrayidx9, i32 0, i32 0
  %arrayidx11 = getelementptr inbounds [3 x %struct.complex]* %c10, i32 0, i64 0
  %imag12 = getelementptr inbounds %struct.complex* %arrayidx11, i32 0, i32 1
  %7 = load double* %imag12, align 8
  store double %7, double* %b0i, align 8
  %8 = load %struct.su3_matrix** %mat.addr, align 8
  %e13 = getelementptr inbounds %struct.su3_matrix* %8, i32 0, i32 0
  %arrayidx14 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e13, i32 0, i64 1
  %arrayidx15 = getelementptr inbounds [3 x %struct.complex]* %arrayidx14, i32 0, i64 0
  %real16 = getelementptr inbounds %struct.complex* %arrayidx15, i32 0, i32 0
  %9 = load double* %real16, align 8
  store double %9, double* %a1r, align 8
  %10 = load %struct.su3_matrix** %mat.addr, align 8
  %e17 = getelementptr inbounds %struct.su3_matrix* %10, i32 0, i32 0
  %arrayidx18 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e17, i32 0, i64 1
  %arrayidx19 = getelementptr inbounds [3 x %struct.complex]* %arrayidx18, i32 0, i64 0
  %imag20 = getelementptr inbounds %struct.complex* %arrayidx19, i32 0, i32 1
  %11 = load double* %imag20, align 8
  store double %11, double* %a1i, align 8
  %12 = load %struct.half_wilson_vector** %src.addr, align 8
  %h21 = getelementptr inbounds %struct.half_wilson_vector* %12, i32 0, i32 0
  %arrayidx22 = getelementptr inbounds [2 x %struct.su3_vector]* %h21, i32 0, i64 0
  %c23 = getelementptr inbounds %struct.su3_vector* %arrayidx22, i32 0, i32 0
  %arrayidx24 = getelementptr inbounds [3 x %struct.complex]* %c23, i32 0, i64 1
  %real25 = getelementptr inbounds %struct.complex* %arrayidx24, i32 0, i32 0
  %13 = load double* %real25, align 8
  store double %13, double* %b1r, align 8
  %14 = load %struct.half_wilson_vector** %src.addr, align 8
  %h26 = getelementptr inbounds %struct.half_wilson_vector* %14, i32 0, i32 0
  %arrayidx27 = getelementptr inbounds [2 x %struct.su3_vector]* %h26, i32 0, i64 0
  %c28 = getelementptr inbounds %struct.su3_vector* %arrayidx27, i32 0, i32 0
  %arrayidx29 = getelementptr inbounds [3 x %struct.complex]* %c28, i32 0, i64 1
  %imag30 = getelementptr inbounds %struct.complex* %arrayidx29, i32 0, i32 1
  %15 = load double* %imag30, align 8
  store double %15, double* %b1i, align 8
  %16 = load %struct.su3_matrix** %mat.addr, align 8
  %e31 = getelementptr inbounds %struct.su3_matrix* %16, i32 0, i32 0
  %arrayidx32 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e31, i32 0, i64 2
  %arrayidx33 = getelementptr inbounds [3 x %struct.complex]* %arrayidx32, i32 0, i64 0
  %real34 = getelementptr inbounds %struct.complex* %arrayidx33, i32 0, i32 0
  %17 = load double* %real34, align 8
  store double %17, double* %a2r, align 8
  %18 = load %struct.su3_matrix** %mat.addr, align 8
  %e35 = getelementptr inbounds %struct.su3_matrix* %18, i32 0, i32 0
  %arrayidx36 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e35, i32 0, i64 2
  %arrayidx37 = getelementptr inbounds [3 x %struct.complex]* %arrayidx36, i32 0, i64 0
  %imag38 = getelementptr inbounds %struct.complex* %arrayidx37, i32 0, i32 1
  %19 = load double* %imag38, align 8
  store double %19, double* %a2i, align 8
  %20 = load %struct.half_wilson_vector** %src.addr, align 8
  %h39 = getelementptr inbounds %struct.half_wilson_vector* %20, i32 0, i32 0
  %arrayidx40 = getelementptr inbounds [2 x %struct.su3_vector]* %h39, i32 0, i64 0
  %c41 = getelementptr inbounds %struct.su3_vector* %arrayidx40, i32 0, i32 0
  %arrayidx42 = getelementptr inbounds [3 x %struct.complex]* %c41, i32 0, i64 2
  %real43 = getelementptr inbounds %struct.complex* %arrayidx42, i32 0, i32 0
  %21 = load double* %real43, align 8
  store double %21, double* %b2r, align 8
  %22 = load %struct.half_wilson_vector** %src.addr, align 8
  %h44 = getelementptr inbounds %struct.half_wilson_vector* %22, i32 0, i32 0
  %arrayidx45 = getelementptr inbounds [2 x %struct.su3_vector]* %h44, i32 0, i64 0
  %c46 = getelementptr inbounds %struct.su3_vector* %arrayidx45, i32 0, i32 0
  %arrayidx47 = getelementptr inbounds [3 x %struct.complex]* %c46, i32 0, i64 2
  %imag48 = getelementptr inbounds %struct.complex* %arrayidx47, i32 0, i32 1
  %23 = load double* %imag48, align 8
  store double %23, double* %b2i, align 8
  %24 = load double* %a0r, align 8
  %25 = load double* %b0r, align 8
  %mul = fmul double %24, %25
  %26 = load double* %a0i, align 8
  %27 = load double* %b0i, align 8
  %mul49 = fmul double %26, %27
  %add = fadd double %mul, %mul49
  %28 = load double* %a1r, align 8
  %29 = load double* %b1r, align 8
  %mul50 = fmul double %28, %29
  %add51 = fadd double %add, %mul50
  %30 = load double* %a1i, align 8
  %31 = load double* %b1i, align 8
  %mul52 = fmul double %30, %31
  %add53 = fadd double %add51, %mul52
  %32 = load double* %a2r, align 8
  %33 = load double* %b2r, align 8
  %mul54 = fmul double %32, %33
  %add55 = fadd double %add53, %mul54
  %34 = load double* %a2i, align 8
  %35 = load double* %b2i, align 8
  %mul56 = fmul double %34, %35
  %add57 = fadd double %add55, %mul56
  %36 = load %struct.half_wilson_vector** %dest.addr, align 8
  %h58 = getelementptr inbounds %struct.half_wilson_vector* %36, i32 0, i32 0
  %arrayidx59 = getelementptr inbounds [2 x %struct.su3_vector]* %h58, i32 0, i64 0
  %c60 = getelementptr inbounds %struct.su3_vector* %arrayidx59, i32 0, i32 0
  %arrayidx61 = getelementptr inbounds [3 x %struct.complex]* %c60, i32 0, i64 0
  %real62 = getelementptr inbounds %struct.complex* %arrayidx61, i32 0, i32 0
  store double %add57, double* %real62, align 8
  %37 = load double* %a0r, align 8
  %38 = load double* %b0i, align 8
  %mul63 = fmul double %37, %38
  %39 = load double* %a0i, align 8
  %40 = load double* %b0r, align 8
  %mul64 = fmul double %39, %40
  %sub = fsub double %mul63, %mul64
  %41 = load double* %a1r, align 8
  %42 = load double* %b1i, align 8
  %mul65 = fmul double %41, %42
  %add66 = fadd double %sub, %mul65
  %43 = load double* %a1i, align 8
  %44 = load double* %b1r, align 8
  %mul67 = fmul double %43, %44
  %sub68 = fsub double %add66, %mul67
  %45 = load double* %a2r, align 8
  %46 = load double* %b2i, align 8
  %mul69 = fmul double %45, %46
  %add70 = fadd double %sub68, %mul69
  %47 = load double* %a2i, align 8
  %48 = load double* %b2r, align 8
  %mul71 = fmul double %47, %48
  %sub72 = fsub double %add70, %mul71
  %49 = load %struct.half_wilson_vector** %dest.addr, align 8
  %h73 = getelementptr inbounds %struct.half_wilson_vector* %49, i32 0, i32 0
  %arrayidx74 = getelementptr inbounds [2 x %struct.su3_vector]* %h73, i32 0, i64 0
  %c75 = getelementptr inbounds %struct.su3_vector* %arrayidx74, i32 0, i32 0
  %arrayidx76 = getelementptr inbounds [3 x %struct.complex]* %c75, i32 0, i64 0
  %imag77 = getelementptr inbounds %struct.complex* %arrayidx76, i32 0, i32 1
  store double %sub72, double* %imag77, align 8
  %50 = load %struct.su3_matrix** %mat.addr, align 8
  %e78 = getelementptr inbounds %struct.su3_matrix* %50, i32 0, i32 0
  %arrayidx79 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e78, i32 0, i64 0
  %arrayidx80 = getelementptr inbounds [3 x %struct.complex]* %arrayidx79, i32 0, i64 1
  %real81 = getelementptr inbounds %struct.complex* %arrayidx80, i32 0, i32 0
  %51 = load double* %real81, align 8
  store double %51, double* %a0r, align 8
  %52 = load %struct.su3_matrix** %mat.addr, align 8
  %e82 = getelementptr inbounds %struct.su3_matrix* %52, i32 0, i32 0
  %arrayidx83 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e82, i32 0, i64 0
  %arrayidx84 = getelementptr inbounds [3 x %struct.complex]* %arrayidx83, i32 0, i64 1
  %imag85 = getelementptr inbounds %struct.complex* %arrayidx84, i32 0, i32 1
  %53 = load double* %imag85, align 8
  store double %53, double* %a0i, align 8
  %54 = load %struct.half_wilson_vector** %src.addr, align 8
  %h86 = getelementptr inbounds %struct.half_wilson_vector* %54, i32 0, i32 0
  %arrayidx87 = getelementptr inbounds [2 x %struct.su3_vector]* %h86, i32 0, i64 0
  %c88 = getelementptr inbounds %struct.su3_vector* %arrayidx87, i32 0, i32 0
  %arrayidx89 = getelementptr inbounds [3 x %struct.complex]* %c88, i32 0, i64 0
  %real90 = getelementptr inbounds %struct.complex* %arrayidx89, i32 0, i32 0
  %55 = load double* %real90, align 8
  store double %55, double* %b0r, align 8
  %56 = load %struct.half_wilson_vector** %src.addr, align 8
  %h91 = getelementptr inbounds %struct.half_wilson_vector* %56, i32 0, i32 0
  %arrayidx92 = getelementptr inbounds [2 x %struct.su3_vector]* %h91, i32 0, i64 0
  %c93 = getelementptr inbounds %struct.su3_vector* %arrayidx92, i32 0, i32 0
  %arrayidx94 = getelementptr inbounds [3 x %struct.complex]* %c93, i32 0, i64 0
  %imag95 = getelementptr inbounds %struct.complex* %arrayidx94, i32 0, i32 1
  %57 = load double* %imag95, align 8
  store double %57, double* %b0i, align 8
  %58 = load %struct.su3_matrix** %mat.addr, align 8
  %e96 = getelementptr inbounds %struct.su3_matrix* %58, i32 0, i32 0
  %arrayidx97 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e96, i32 0, i64 1
  %arrayidx98 = getelementptr inbounds [3 x %struct.complex]* %arrayidx97, i32 0, i64 1
  %real99 = getelementptr inbounds %struct.complex* %arrayidx98, i32 0, i32 0
  %59 = load double* %real99, align 8
  store double %59, double* %a1r, align 8
  %60 = load %struct.su3_matrix** %mat.addr, align 8
  %e100 = getelementptr inbounds %struct.su3_matrix* %60, i32 0, i32 0
  %arrayidx101 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e100, i32 0, i64 1
  %arrayidx102 = getelementptr inbounds [3 x %struct.complex]* %arrayidx101, i32 0, i64 1
  %imag103 = getelementptr inbounds %struct.complex* %arrayidx102, i32 0, i32 1
  %61 = load double* %imag103, align 8
  store double %61, double* %a1i, align 8
  %62 = load %struct.half_wilson_vector** %src.addr, align 8
  %h104 = getelementptr inbounds %struct.half_wilson_vector* %62, i32 0, i32 0
  %arrayidx105 = getelementptr inbounds [2 x %struct.su3_vector]* %h104, i32 0, i64 0
  %c106 = getelementptr inbounds %struct.su3_vector* %arrayidx105, i32 0, i32 0
  %arrayidx107 = getelementptr inbounds [3 x %struct.complex]* %c106, i32 0, i64 1
  %real108 = getelementptr inbounds %struct.complex* %arrayidx107, i32 0, i32 0
  %63 = load double* %real108, align 8
  store double %63, double* %b1r, align 8
  %64 = load %struct.half_wilson_vector** %src.addr, align 8
  %h109 = getelementptr inbounds %struct.half_wilson_vector* %64, i32 0, i32 0
  %arrayidx110 = getelementptr inbounds [2 x %struct.su3_vector]* %h109, i32 0, i64 0
  %c111 = getelementptr inbounds %struct.su3_vector* %arrayidx110, i32 0, i32 0
  %arrayidx112 = getelementptr inbounds [3 x %struct.complex]* %c111, i32 0, i64 1
  %imag113 = getelementptr inbounds %struct.complex* %arrayidx112, i32 0, i32 1
  %65 = load double* %imag113, align 8
  store double %65, double* %b1i, align 8
  %66 = load %struct.su3_matrix** %mat.addr, align 8
  %e114 = getelementptr inbounds %struct.su3_matrix* %66, i32 0, i32 0
  %arrayidx115 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e114, i32 0, i64 2
  %arrayidx116 = getelementptr inbounds [3 x %struct.complex]* %arrayidx115, i32 0, i64 1
  %real117 = getelementptr inbounds %struct.complex* %arrayidx116, i32 0, i32 0
  %67 = load double* %real117, align 8
  store double %67, double* %a2r, align 8
  %68 = load %struct.su3_matrix** %mat.addr, align 8
  %e118 = getelementptr inbounds %struct.su3_matrix* %68, i32 0, i32 0
  %arrayidx119 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e118, i32 0, i64 2
  %arrayidx120 = getelementptr inbounds [3 x %struct.complex]* %arrayidx119, i32 0, i64 1
  %imag121 = getelementptr inbounds %struct.complex* %arrayidx120, i32 0, i32 1
  %69 = load double* %imag121, align 8
  store double %69, double* %a2i, align 8
  %70 = load %struct.half_wilson_vector** %src.addr, align 8
  %h122 = getelementptr inbounds %struct.half_wilson_vector* %70, i32 0, i32 0
  %arrayidx123 = getelementptr inbounds [2 x %struct.su3_vector]* %h122, i32 0, i64 0
  %c124 = getelementptr inbounds %struct.su3_vector* %arrayidx123, i32 0, i32 0
  %arrayidx125 = getelementptr inbounds [3 x %struct.complex]* %c124, i32 0, i64 2
  %real126 = getelementptr inbounds %struct.complex* %arrayidx125, i32 0, i32 0
  %71 = load double* %real126, align 8
  store double %71, double* %b2r, align 8
  %72 = load %struct.half_wilson_vector** %src.addr, align 8
  %h127 = getelementptr inbounds %struct.half_wilson_vector* %72, i32 0, i32 0
  %arrayidx128 = getelementptr inbounds [2 x %struct.su3_vector]* %h127, i32 0, i64 0
  %c129 = getelementptr inbounds %struct.su3_vector* %arrayidx128, i32 0, i32 0
  %arrayidx130 = getelementptr inbounds [3 x %struct.complex]* %c129, i32 0, i64 2
  %imag131 = getelementptr inbounds %struct.complex* %arrayidx130, i32 0, i32 1
  %73 = load double* %imag131, align 8
  store double %73, double* %b2i, align 8
  %74 = load double* %a0r, align 8
  %75 = load double* %b0r, align 8
  %mul132 = fmul double %74, %75
  %76 = load double* %a0i, align 8
  %77 = load double* %b0i, align 8
  %mul133 = fmul double %76, %77
  %add134 = fadd double %mul132, %mul133
  %78 = load double* %a1r, align 8
  %79 = load double* %b1r, align 8
  %mul135 = fmul double %78, %79
  %add136 = fadd double %add134, %mul135
  %80 = load double* %a1i, align 8
  %81 = load double* %b1i, align 8
  %mul137 = fmul double %80, %81
  %add138 = fadd double %add136, %mul137
  %82 = load double* %a2r, align 8
  %83 = load double* %b2r, align 8
  %mul139 = fmul double %82, %83
  %add140 = fadd double %add138, %mul139
  %84 = load double* %a2i, align 8
  %85 = load double* %b2i, align 8
  %mul141 = fmul double %84, %85
  %add142 = fadd double %add140, %mul141
  %86 = load %struct.half_wilson_vector** %dest.addr, align 8
  %h143 = getelementptr inbounds %struct.half_wilson_vector* %86, i32 0, i32 0
  %arrayidx144 = getelementptr inbounds [2 x %struct.su3_vector]* %h143, i32 0, i64 0
  %c145 = getelementptr inbounds %struct.su3_vector* %arrayidx144, i32 0, i32 0
  %arrayidx146 = getelementptr inbounds [3 x %struct.complex]* %c145, i32 0, i64 1
  %real147 = getelementptr inbounds %struct.complex* %arrayidx146, i32 0, i32 0
  store double %add142, double* %real147, align 8
  %87 = load double* %a0r, align 8
  %88 = load double* %b0i, align 8
  %mul148 = fmul double %87, %88
  %89 = load double* %a0i, align 8
  %90 = load double* %b0r, align 8
  %mul149 = fmul double %89, %90
  %sub150 = fsub double %mul148, %mul149
  %91 = load double* %a1r, align 8
  %92 = load double* %b1i, align 8
  %mul151 = fmul double %91, %92
  %add152 = fadd double %sub150, %mul151
  %93 = load double* %a1i, align 8
  %94 = load double* %b1r, align 8
  %mul153 = fmul double %93, %94
  %sub154 = fsub double %add152, %mul153
  %95 = load double* %a2r, align 8
  %96 = load double* %b2i, align 8
  %mul155 = fmul double %95, %96
  %add156 = fadd double %sub154, %mul155
  %97 = load double* %a2i, align 8
  %98 = load double* %b2r, align 8
  %mul157 = fmul double %97, %98
  %sub158 = fsub double %add156, %mul157
  %99 = load %struct.half_wilson_vector** %dest.addr, align 8
  %h159 = getelementptr inbounds %struct.half_wilson_vector* %99, i32 0, i32 0
  %arrayidx160 = getelementptr inbounds [2 x %struct.su3_vector]* %h159, i32 0, i64 0
  %c161 = getelementptr inbounds %struct.su3_vector* %arrayidx160, i32 0, i32 0
  %arrayidx162 = getelementptr inbounds [3 x %struct.complex]* %c161, i32 0, i64 1
  %imag163 = getelementptr inbounds %struct.complex* %arrayidx162, i32 0, i32 1
  store double %sub158, double* %imag163, align 8
  %100 = load %struct.su3_matrix** %mat.addr, align 8
  %e164 = getelementptr inbounds %struct.su3_matrix* %100, i32 0, i32 0
  %arrayidx165 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e164, i32 0, i64 0
  %arrayidx166 = getelementptr inbounds [3 x %struct.complex]* %arrayidx165, i32 0, i64 2
  %real167 = getelementptr inbounds %struct.complex* %arrayidx166, i32 0, i32 0
  %101 = load double* %real167, align 8
  store double %101, double* %a0r, align 8
  %102 = load %struct.su3_matrix** %mat.addr, align 8
  %e168 = getelementptr inbounds %struct.su3_matrix* %102, i32 0, i32 0
  %arrayidx169 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e168, i32 0, i64 0
  %arrayidx170 = getelementptr inbounds [3 x %struct.complex]* %arrayidx169, i32 0, i64 2
  %imag171 = getelementptr inbounds %struct.complex* %arrayidx170, i32 0, i32 1
  %103 = load double* %imag171, align 8
  store double %103, double* %a0i, align 8
  %104 = load %struct.half_wilson_vector** %src.addr, align 8
  %h172 = getelementptr inbounds %struct.half_wilson_vector* %104, i32 0, i32 0
  %arrayidx173 = getelementptr inbounds [2 x %struct.su3_vector]* %h172, i32 0, i64 0
  %c174 = getelementptr inbounds %struct.su3_vector* %arrayidx173, i32 0, i32 0
  %arrayidx175 = getelementptr inbounds [3 x %struct.complex]* %c174, i32 0, i64 0
  %real176 = getelementptr inbounds %struct.complex* %arrayidx175, i32 0, i32 0
  %105 = load double* %real176, align 8
  store double %105, double* %b0r, align 8
  %106 = load %struct.half_wilson_vector** %src.addr, align 8
  %h177 = getelementptr inbounds %struct.half_wilson_vector* %106, i32 0, i32 0
  %arrayidx178 = getelementptr inbounds [2 x %struct.su3_vector]* %h177, i32 0, i64 0
  %c179 = getelementptr inbounds %struct.su3_vector* %arrayidx178, i32 0, i32 0
  %arrayidx180 = getelementptr inbounds [3 x %struct.complex]* %c179, i32 0, i64 0
  %imag181 = getelementptr inbounds %struct.complex* %arrayidx180, i32 0, i32 1
  %107 = load double* %imag181, align 8
  store double %107, double* %b0i, align 8
  %108 = load %struct.su3_matrix** %mat.addr, align 8
  %e182 = getelementptr inbounds %struct.su3_matrix* %108, i32 0, i32 0
  %arrayidx183 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e182, i32 0, i64 1
  %arrayidx184 = getelementptr inbounds [3 x %struct.complex]* %arrayidx183, i32 0, i64 2
  %real185 = getelementptr inbounds %struct.complex* %arrayidx184, i32 0, i32 0
  %109 = load double* %real185, align 8
  store double %109, double* %a1r, align 8
  %110 = load %struct.su3_matrix** %mat.addr, align 8
  %e186 = getelementptr inbounds %struct.su3_matrix* %110, i32 0, i32 0
  %arrayidx187 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e186, i32 0, i64 1
  %arrayidx188 = getelementptr inbounds [3 x %struct.complex]* %arrayidx187, i32 0, i64 2
  %imag189 = getelementptr inbounds %struct.complex* %arrayidx188, i32 0, i32 1
  %111 = load double* %imag189, align 8
  store double %111, double* %a1i, align 8
  %112 = load %struct.half_wilson_vector** %src.addr, align 8
  %h190 = getelementptr inbounds %struct.half_wilson_vector* %112, i32 0, i32 0
  %arrayidx191 = getelementptr inbounds [2 x %struct.su3_vector]* %h190, i32 0, i64 0
  %c192 = getelementptr inbounds %struct.su3_vector* %arrayidx191, i32 0, i32 0
  %arrayidx193 = getelementptr inbounds [3 x %struct.complex]* %c192, i32 0, i64 1
  %real194 = getelementptr inbounds %struct.complex* %arrayidx193, i32 0, i32 0
  %113 = load double* %real194, align 8
  store double %113, double* %b1r, align 8
  %114 = load %struct.half_wilson_vector** %src.addr, align 8
  %h195 = getelementptr inbounds %struct.half_wilson_vector* %114, i32 0, i32 0
  %arrayidx196 = getelementptr inbounds [2 x %struct.su3_vector]* %h195, i32 0, i64 0
  %c197 = getelementptr inbounds %struct.su3_vector* %arrayidx196, i32 0, i32 0
  %arrayidx198 = getelementptr inbounds [3 x %struct.complex]* %c197, i32 0, i64 1
  %imag199 = getelementptr inbounds %struct.complex* %arrayidx198, i32 0, i32 1
  %115 = load double* %imag199, align 8
  store double %115, double* %b1i, align 8
  %116 = load %struct.su3_matrix** %mat.addr, align 8
  %e200 = getelementptr inbounds %struct.su3_matrix* %116, i32 0, i32 0
  %arrayidx201 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e200, i32 0, i64 2
  %arrayidx202 = getelementptr inbounds [3 x %struct.complex]* %arrayidx201, i32 0, i64 2
  %real203 = getelementptr inbounds %struct.complex* %arrayidx202, i32 0, i32 0
  %117 = load double* %real203, align 8
  store double %117, double* %a2r, align 8
  %118 = load %struct.su3_matrix** %mat.addr, align 8
  %e204 = getelementptr inbounds %struct.su3_matrix* %118, i32 0, i32 0
  %arrayidx205 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e204, i32 0, i64 2
  %arrayidx206 = getelementptr inbounds [3 x %struct.complex]* %arrayidx205, i32 0, i64 2
  %imag207 = getelementptr inbounds %struct.complex* %arrayidx206, i32 0, i32 1
  %119 = load double* %imag207, align 8
  store double %119, double* %a2i, align 8
  %120 = load %struct.half_wilson_vector** %src.addr, align 8
  %h208 = getelementptr inbounds %struct.half_wilson_vector* %120, i32 0, i32 0
  %arrayidx209 = getelementptr inbounds [2 x %struct.su3_vector]* %h208, i32 0, i64 0
  %c210 = getelementptr inbounds %struct.su3_vector* %arrayidx209, i32 0, i32 0
  %arrayidx211 = getelementptr inbounds [3 x %struct.complex]* %c210, i32 0, i64 2
  %real212 = getelementptr inbounds %struct.complex* %arrayidx211, i32 0, i32 0
  %121 = load double* %real212, align 8
  store double %121, double* %b2r, align 8
  %122 = load %struct.half_wilson_vector** %src.addr, align 8
  %h213 = getelementptr inbounds %struct.half_wilson_vector* %122, i32 0, i32 0
  %arrayidx214 = getelementptr inbounds [2 x %struct.su3_vector]* %h213, i32 0, i64 0
  %c215 = getelementptr inbounds %struct.su3_vector* %arrayidx214, i32 0, i32 0
  %arrayidx216 = getelementptr inbounds [3 x %struct.complex]* %c215, i32 0, i64 2
  %imag217 = getelementptr inbounds %struct.complex* %arrayidx216, i32 0, i32 1
  %123 = load double* %imag217, align 8
  store double %123, double* %b2i, align 8
  %124 = load double* %a0r, align 8
  %125 = load double* %b0r, align 8
  %mul218 = fmul double %124, %125
  %126 = load double* %a0i, align 8
  %127 = load double* %b0i, align 8
  %mul219 = fmul double %126, %127
  %add220 = fadd double %mul218, %mul219
  %128 = load double* %a1r, align 8
  %129 = load double* %b1r, align 8
  %mul221 = fmul double %128, %129
  %add222 = fadd double %add220, %mul221
  %130 = load double* %a1i, align 8
  %131 = load double* %b1i, align 8
  %mul223 = fmul double %130, %131
  %add224 = fadd double %add222, %mul223
  %132 = load double* %a2r, align 8
  %133 = load double* %b2r, align 8
  %mul225 = fmul double %132, %133
  %add226 = fadd double %add224, %mul225
  %134 = load double* %a2i, align 8
  %135 = load double* %b2i, align 8
  %mul227 = fmul double %134, %135
  %add228 = fadd double %add226, %mul227
  %136 = load %struct.half_wilson_vector** %dest.addr, align 8
  %h229 = getelementptr inbounds %struct.half_wilson_vector* %136, i32 0, i32 0
  %arrayidx230 = getelementptr inbounds [2 x %struct.su3_vector]* %h229, i32 0, i64 0
  %c231 = getelementptr inbounds %struct.su3_vector* %arrayidx230, i32 0, i32 0
  %arrayidx232 = getelementptr inbounds [3 x %struct.complex]* %c231, i32 0, i64 2
  %real233 = getelementptr inbounds %struct.complex* %arrayidx232, i32 0, i32 0
  store double %add228, double* %real233, align 8
  %137 = load double* %a0r, align 8
  %138 = load double* %b0i, align 8
  %mul234 = fmul double %137, %138
  %139 = load double* %a0i, align 8
  %140 = load double* %b0r, align 8
  %mul235 = fmul double %139, %140
  %sub236 = fsub double %mul234, %mul235
  %141 = load double* %a1r, align 8
  %142 = load double* %b1i, align 8
  %mul237 = fmul double %141, %142
  %add238 = fadd double %sub236, %mul237
  %143 = load double* %a1i, align 8
  %144 = load double* %b1r, align 8
  %mul239 = fmul double %143, %144
  %sub240 = fsub double %add238, %mul239
  %145 = load double* %a2r, align 8
  %146 = load double* %b2i, align 8
  %mul241 = fmul double %145, %146
  %add242 = fadd double %sub240, %mul241
  %147 = load double* %a2i, align 8
  %148 = load double* %b2r, align 8
  %mul243 = fmul double %147, %148
  %sub244 = fsub double %add242, %mul243
  %149 = load %struct.half_wilson_vector** %dest.addr, align 8
  %h245 = getelementptr inbounds %struct.half_wilson_vector* %149, i32 0, i32 0
  %arrayidx246 = getelementptr inbounds [2 x %struct.su3_vector]* %h245, i32 0, i64 0
  %c247 = getelementptr inbounds %struct.su3_vector* %arrayidx246, i32 0, i32 0
  %arrayidx248 = getelementptr inbounds [3 x %struct.complex]* %c247, i32 0, i64 2
  %imag249 = getelementptr inbounds %struct.complex* %arrayidx248, i32 0, i32 1
  store double %sub244, double* %imag249, align 8
  %150 = load %struct.su3_matrix** %mat.addr, align 8
  %e250 = getelementptr inbounds %struct.su3_matrix* %150, i32 0, i32 0
  %arrayidx251 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e250, i32 0, i64 0
  %arrayidx252 = getelementptr inbounds [3 x %struct.complex]* %arrayidx251, i32 0, i64 0
  %real253 = getelementptr inbounds %struct.complex* %arrayidx252, i32 0, i32 0
  %151 = load double* %real253, align 8
  store double %151, double* %a0r, align 8
  %152 = load %struct.su3_matrix** %mat.addr, align 8
  %e254 = getelementptr inbounds %struct.su3_matrix* %152, i32 0, i32 0
  %arrayidx255 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e254, i32 0, i64 0
  %arrayidx256 = getelementptr inbounds [3 x %struct.complex]* %arrayidx255, i32 0, i64 0
  %imag257 = getelementptr inbounds %struct.complex* %arrayidx256, i32 0, i32 1
  %153 = load double* %imag257, align 8
  store double %153, double* %a0i, align 8
  %154 = load %struct.half_wilson_vector** %src.addr, align 8
  %h258 = getelementptr inbounds %struct.half_wilson_vector* %154, i32 0, i32 0
  %arrayidx259 = getelementptr inbounds [2 x %struct.su3_vector]* %h258, i32 0, i64 1
  %c260 = getelementptr inbounds %struct.su3_vector* %arrayidx259, i32 0, i32 0
  %arrayidx261 = getelementptr inbounds [3 x %struct.complex]* %c260, i32 0, i64 0
  %real262 = getelementptr inbounds %struct.complex* %arrayidx261, i32 0, i32 0
  %155 = load double* %real262, align 8
  store double %155, double* %b0r, align 8
  %156 = load %struct.half_wilson_vector** %src.addr, align 8
  %h263 = getelementptr inbounds %struct.half_wilson_vector* %156, i32 0, i32 0
  %arrayidx264 = getelementptr inbounds [2 x %struct.su3_vector]* %h263, i32 0, i64 1
  %c265 = getelementptr inbounds %struct.su3_vector* %arrayidx264, i32 0, i32 0
  %arrayidx266 = getelementptr inbounds [3 x %struct.complex]* %c265, i32 0, i64 0
  %imag267 = getelementptr inbounds %struct.complex* %arrayidx266, i32 0, i32 1
  %157 = load double* %imag267, align 8
  store double %157, double* %b0i, align 8
  %158 = load %struct.su3_matrix** %mat.addr, align 8
  %e268 = getelementptr inbounds %struct.su3_matrix* %158, i32 0, i32 0
  %arrayidx269 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e268, i32 0, i64 1
  %arrayidx270 = getelementptr inbounds [3 x %struct.complex]* %arrayidx269, i32 0, i64 0
  %real271 = getelementptr inbounds %struct.complex* %arrayidx270, i32 0, i32 0
  %159 = load double* %real271, align 8
  store double %159, double* %a1r, align 8
  %160 = load %struct.su3_matrix** %mat.addr, align 8
  %e272 = getelementptr inbounds %struct.su3_matrix* %160, i32 0, i32 0
  %arrayidx273 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e272, i32 0, i64 1
  %arrayidx274 = getelementptr inbounds [3 x %struct.complex]* %arrayidx273, i32 0, i64 0
  %imag275 = getelementptr inbounds %struct.complex* %arrayidx274, i32 0, i32 1
  %161 = load double* %imag275, align 8
  store double %161, double* %a1i, align 8
  %162 = load %struct.half_wilson_vector** %src.addr, align 8
  %h276 = getelementptr inbounds %struct.half_wilson_vector* %162, i32 0, i32 0
  %arrayidx277 = getelementptr inbounds [2 x %struct.su3_vector]* %h276, i32 0, i64 1
  %c278 = getelementptr inbounds %struct.su3_vector* %arrayidx277, i32 0, i32 0
  %arrayidx279 = getelementptr inbounds [3 x %struct.complex]* %c278, i32 0, i64 1
  %real280 = getelementptr inbounds %struct.complex* %arrayidx279, i32 0, i32 0
  %163 = load double* %real280, align 8
  store double %163, double* %b1r, align 8
  %164 = load %struct.half_wilson_vector** %src.addr, align 8
  %h281 = getelementptr inbounds %struct.half_wilson_vector* %164, i32 0, i32 0
  %arrayidx282 = getelementptr inbounds [2 x %struct.su3_vector]* %h281, i32 0, i64 1
  %c283 = getelementptr inbounds %struct.su3_vector* %arrayidx282, i32 0, i32 0
  %arrayidx284 = getelementptr inbounds [3 x %struct.complex]* %c283, i32 0, i64 1
  %imag285 = getelementptr inbounds %struct.complex* %arrayidx284, i32 0, i32 1
  %165 = load double* %imag285, align 8
  store double %165, double* %b1i, align 8
  %166 = load %struct.su3_matrix** %mat.addr, align 8
  %e286 = getelementptr inbounds %struct.su3_matrix* %166, i32 0, i32 0
  %arrayidx287 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e286, i32 0, i64 2
  %arrayidx288 = getelementptr inbounds [3 x %struct.complex]* %arrayidx287, i32 0, i64 0
  %real289 = getelementptr inbounds %struct.complex* %arrayidx288, i32 0, i32 0
  %167 = load double* %real289, align 8
  store double %167, double* %a2r, align 8
  %168 = load %struct.su3_matrix** %mat.addr, align 8
  %e290 = getelementptr inbounds %struct.su3_matrix* %168, i32 0, i32 0
  %arrayidx291 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e290, i32 0, i64 2
  %arrayidx292 = getelementptr inbounds [3 x %struct.complex]* %arrayidx291, i32 0, i64 0
  %imag293 = getelementptr inbounds %struct.complex* %arrayidx292, i32 0, i32 1
  %169 = load double* %imag293, align 8
  store double %169, double* %a2i, align 8
  %170 = load %struct.half_wilson_vector** %src.addr, align 8
  %h294 = getelementptr inbounds %struct.half_wilson_vector* %170, i32 0, i32 0
  %arrayidx295 = getelementptr inbounds [2 x %struct.su3_vector]* %h294, i32 0, i64 1
  %c296 = getelementptr inbounds %struct.su3_vector* %arrayidx295, i32 0, i32 0
  %arrayidx297 = getelementptr inbounds [3 x %struct.complex]* %c296, i32 0, i64 2
  %real298 = getelementptr inbounds %struct.complex* %arrayidx297, i32 0, i32 0
  %171 = load double* %real298, align 8
  store double %171, double* %b2r, align 8
  %172 = load %struct.half_wilson_vector** %src.addr, align 8
  %h299 = getelementptr inbounds %struct.half_wilson_vector* %172, i32 0, i32 0
  %arrayidx300 = getelementptr inbounds [2 x %struct.su3_vector]* %h299, i32 0, i64 1
  %c301 = getelementptr inbounds %struct.su3_vector* %arrayidx300, i32 0, i32 0
  %arrayidx302 = getelementptr inbounds [3 x %struct.complex]* %c301, i32 0, i64 2
  %imag303 = getelementptr inbounds %struct.complex* %arrayidx302, i32 0, i32 1
  %173 = load double* %imag303, align 8
  store double %173, double* %b2i, align 8
  %174 = load double* %a0r, align 8
  %175 = load double* %b0r, align 8
  %mul304 = fmul double %174, %175
  %176 = load double* %a0i, align 8
  %177 = load double* %b0i, align 8
  %mul305 = fmul double %176, %177
  %add306 = fadd double %mul304, %mul305
  %178 = load double* %a1r, align 8
  %179 = load double* %b1r, align 8
  %mul307 = fmul double %178, %179
  %add308 = fadd double %add306, %mul307
  %180 = load double* %a1i, align 8
  %181 = load double* %b1i, align 8
  %mul309 = fmul double %180, %181
  %add310 = fadd double %add308, %mul309
  %182 = load double* %a2r, align 8
  %183 = load double* %b2r, align 8
  %mul311 = fmul double %182, %183
  %add312 = fadd double %add310, %mul311
  %184 = load double* %a2i, align 8
  %185 = load double* %b2i, align 8
  %mul313 = fmul double %184, %185
  %add314 = fadd double %add312, %mul313
  %186 = load %struct.half_wilson_vector** %dest.addr, align 8
  %h315 = getelementptr inbounds %struct.half_wilson_vector* %186, i32 0, i32 0
  %arrayidx316 = getelementptr inbounds [2 x %struct.su3_vector]* %h315, i32 0, i64 1
  %c317 = getelementptr inbounds %struct.su3_vector* %arrayidx316, i32 0, i32 0
  %arrayidx318 = getelementptr inbounds [3 x %struct.complex]* %c317, i32 0, i64 0
  %real319 = getelementptr inbounds %struct.complex* %arrayidx318, i32 0, i32 0
  store double %add314, double* %real319, align 8
  %187 = load double* %a0r, align 8
  %188 = load double* %b0i, align 8
  %mul320 = fmul double %187, %188
  %189 = load double* %a0i, align 8
  %190 = load double* %b0r, align 8
  %mul321 = fmul double %189, %190
  %sub322 = fsub double %mul320, %mul321
  %191 = load double* %a1r, align 8
  %192 = load double* %b1i, align 8
  %mul323 = fmul double %191, %192
  %add324 = fadd double %sub322, %mul323
  %193 = load double* %a1i, align 8
  %194 = load double* %b1r, align 8
  %mul325 = fmul double %193, %194
  %sub326 = fsub double %add324, %mul325
  %195 = load double* %a2r, align 8
  %196 = load double* %b2i, align 8
  %mul327 = fmul double %195, %196
  %add328 = fadd double %sub326, %mul327
  %197 = load double* %a2i, align 8
  %198 = load double* %b2r, align 8
  %mul329 = fmul double %197, %198
  %sub330 = fsub double %add328, %mul329
  %199 = load %struct.half_wilson_vector** %dest.addr, align 8
  %h331 = getelementptr inbounds %struct.half_wilson_vector* %199, i32 0, i32 0
  %arrayidx332 = getelementptr inbounds [2 x %struct.su3_vector]* %h331, i32 0, i64 1
  %c333 = getelementptr inbounds %struct.su3_vector* %arrayidx332, i32 0, i32 0
  %arrayidx334 = getelementptr inbounds [3 x %struct.complex]* %c333, i32 0, i64 0
  %imag335 = getelementptr inbounds %struct.complex* %arrayidx334, i32 0, i32 1
  store double %sub330, double* %imag335, align 8
  %200 = load %struct.su3_matrix** %mat.addr, align 8
  %e336 = getelementptr inbounds %struct.su3_matrix* %200, i32 0, i32 0
  %arrayidx337 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e336, i32 0, i64 0
  %arrayidx338 = getelementptr inbounds [3 x %struct.complex]* %arrayidx337, i32 0, i64 1
  %real339 = getelementptr inbounds %struct.complex* %arrayidx338, i32 0, i32 0
  %201 = load double* %real339, align 8
  store double %201, double* %a0r, align 8
  %202 = load %struct.su3_matrix** %mat.addr, align 8
  %e340 = getelementptr inbounds %struct.su3_matrix* %202, i32 0, i32 0
  %arrayidx341 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e340, i32 0, i64 0
  %arrayidx342 = getelementptr inbounds [3 x %struct.complex]* %arrayidx341, i32 0, i64 1
  %imag343 = getelementptr inbounds %struct.complex* %arrayidx342, i32 0, i32 1
  %203 = load double* %imag343, align 8
  store double %203, double* %a0i, align 8
  %204 = load %struct.half_wilson_vector** %src.addr, align 8
  %h344 = getelementptr inbounds %struct.half_wilson_vector* %204, i32 0, i32 0
  %arrayidx345 = getelementptr inbounds [2 x %struct.su3_vector]* %h344, i32 0, i64 1
  %c346 = getelementptr inbounds %struct.su3_vector* %arrayidx345, i32 0, i32 0
  %arrayidx347 = getelementptr inbounds [3 x %struct.complex]* %c346, i32 0, i64 0
  %real348 = getelementptr inbounds %struct.complex* %arrayidx347, i32 0, i32 0
  %205 = load double* %real348, align 8
  store double %205, double* %b0r, align 8
  %206 = load %struct.half_wilson_vector** %src.addr, align 8
  %h349 = getelementptr inbounds %struct.half_wilson_vector* %206, i32 0, i32 0
  %arrayidx350 = getelementptr inbounds [2 x %struct.su3_vector]* %h349, i32 0, i64 1
  %c351 = getelementptr inbounds %struct.su3_vector* %arrayidx350, i32 0, i32 0
  %arrayidx352 = getelementptr inbounds [3 x %struct.complex]* %c351, i32 0, i64 0
  %imag353 = getelementptr inbounds %struct.complex* %arrayidx352, i32 0, i32 1
  %207 = load double* %imag353, align 8
  store double %207, double* %b0i, align 8
  %208 = load %struct.su3_matrix** %mat.addr, align 8
  %e354 = getelementptr inbounds %struct.su3_matrix* %208, i32 0, i32 0
  %arrayidx355 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e354, i32 0, i64 1
  %arrayidx356 = getelementptr inbounds [3 x %struct.complex]* %arrayidx355, i32 0, i64 1
  %real357 = getelementptr inbounds %struct.complex* %arrayidx356, i32 0, i32 0
  %209 = load double* %real357, align 8
  store double %209, double* %a1r, align 8
  %210 = load %struct.su3_matrix** %mat.addr, align 8
  %e358 = getelementptr inbounds %struct.su3_matrix* %210, i32 0, i32 0
  %arrayidx359 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e358, i32 0, i64 1
  %arrayidx360 = getelementptr inbounds [3 x %struct.complex]* %arrayidx359, i32 0, i64 1
  %imag361 = getelementptr inbounds %struct.complex* %arrayidx360, i32 0, i32 1
  %211 = load double* %imag361, align 8
  store double %211, double* %a1i, align 8
  %212 = load %struct.half_wilson_vector** %src.addr, align 8
  %h362 = getelementptr inbounds %struct.half_wilson_vector* %212, i32 0, i32 0
  %arrayidx363 = getelementptr inbounds [2 x %struct.su3_vector]* %h362, i32 0, i64 1
  %c364 = getelementptr inbounds %struct.su3_vector* %arrayidx363, i32 0, i32 0
  %arrayidx365 = getelementptr inbounds [3 x %struct.complex]* %c364, i32 0, i64 1
  %real366 = getelementptr inbounds %struct.complex* %arrayidx365, i32 0, i32 0
  %213 = load double* %real366, align 8
  store double %213, double* %b1r, align 8
  %214 = load %struct.half_wilson_vector** %src.addr, align 8
  %h367 = getelementptr inbounds %struct.half_wilson_vector* %214, i32 0, i32 0
  %arrayidx368 = getelementptr inbounds [2 x %struct.su3_vector]* %h367, i32 0, i64 1
  %c369 = getelementptr inbounds %struct.su3_vector* %arrayidx368, i32 0, i32 0
  %arrayidx370 = getelementptr inbounds [3 x %struct.complex]* %c369, i32 0, i64 1
  %imag371 = getelementptr inbounds %struct.complex* %arrayidx370, i32 0, i32 1
  %215 = load double* %imag371, align 8
  store double %215, double* %b1i, align 8
  %216 = load %struct.su3_matrix** %mat.addr, align 8
  %e372 = getelementptr inbounds %struct.su3_matrix* %216, i32 0, i32 0
  %arrayidx373 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e372, i32 0, i64 2
  %arrayidx374 = getelementptr inbounds [3 x %struct.complex]* %arrayidx373, i32 0, i64 1
  %real375 = getelementptr inbounds %struct.complex* %arrayidx374, i32 0, i32 0
  %217 = load double* %real375, align 8
  store double %217, double* %a2r, align 8
  %218 = load %struct.su3_matrix** %mat.addr, align 8
  %e376 = getelementptr inbounds %struct.su3_matrix* %218, i32 0, i32 0
  %arrayidx377 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e376, i32 0, i64 2
  %arrayidx378 = getelementptr inbounds [3 x %struct.complex]* %arrayidx377, i32 0, i64 1
  %imag379 = getelementptr inbounds %struct.complex* %arrayidx378, i32 0, i32 1
  %219 = load double* %imag379, align 8
  store double %219, double* %a2i, align 8
  %220 = load %struct.half_wilson_vector** %src.addr, align 8
  %h380 = getelementptr inbounds %struct.half_wilson_vector* %220, i32 0, i32 0
  %arrayidx381 = getelementptr inbounds [2 x %struct.su3_vector]* %h380, i32 0, i64 1
  %c382 = getelementptr inbounds %struct.su3_vector* %arrayidx381, i32 0, i32 0
  %arrayidx383 = getelementptr inbounds [3 x %struct.complex]* %c382, i32 0, i64 2
  %real384 = getelementptr inbounds %struct.complex* %arrayidx383, i32 0, i32 0
  %221 = load double* %real384, align 8
  store double %221, double* %b2r, align 8
  %222 = load %struct.half_wilson_vector** %src.addr, align 8
  %h385 = getelementptr inbounds %struct.half_wilson_vector* %222, i32 0, i32 0
  %arrayidx386 = getelementptr inbounds [2 x %struct.su3_vector]* %h385, i32 0, i64 1
  %c387 = getelementptr inbounds %struct.su3_vector* %arrayidx386, i32 0, i32 0
  %arrayidx388 = getelementptr inbounds [3 x %struct.complex]* %c387, i32 0, i64 2
  %imag389 = getelementptr inbounds %struct.complex* %arrayidx388, i32 0, i32 1
  %223 = load double* %imag389, align 8
  store double %223, double* %b2i, align 8
  %224 = load double* %a0r, align 8
  %225 = load double* %b0r, align 8
  %mul390 = fmul double %224, %225
  %226 = load double* %a0i, align 8
  %227 = load double* %b0i, align 8
  %mul391 = fmul double %226, %227
  %add392 = fadd double %mul390, %mul391
  %228 = load double* %a1r, align 8
  %229 = load double* %b1r, align 8
  %mul393 = fmul double %228, %229
  %add394 = fadd double %add392, %mul393
  %230 = load double* %a1i, align 8
  %231 = load double* %b1i, align 8
  %mul395 = fmul double %230, %231
  %add396 = fadd double %add394, %mul395
  %232 = load double* %a2r, align 8
  %233 = load double* %b2r, align 8
  %mul397 = fmul double %232, %233
  %add398 = fadd double %add396, %mul397
  %234 = load double* %a2i, align 8
  %235 = load double* %b2i, align 8
  %mul399 = fmul double %234, %235
  %add400 = fadd double %add398, %mul399
  %236 = load %struct.half_wilson_vector** %dest.addr, align 8
  %h401 = getelementptr inbounds %struct.half_wilson_vector* %236, i32 0, i32 0
  %arrayidx402 = getelementptr inbounds [2 x %struct.su3_vector]* %h401, i32 0, i64 1
  %c403 = getelementptr inbounds %struct.su3_vector* %arrayidx402, i32 0, i32 0
  %arrayidx404 = getelementptr inbounds [3 x %struct.complex]* %c403, i32 0, i64 1
  %real405 = getelementptr inbounds %struct.complex* %arrayidx404, i32 0, i32 0
  store double %add400, double* %real405, align 8
  %237 = load double* %a0r, align 8
  %238 = load double* %b0i, align 8
  %mul406 = fmul double %237, %238
  %239 = load double* %a0i, align 8
  %240 = load double* %b0r, align 8
  %mul407 = fmul double %239, %240
  %sub408 = fsub double %mul406, %mul407
  %241 = load double* %a1r, align 8
  %242 = load double* %b1i, align 8
  %mul409 = fmul double %241, %242
  %add410 = fadd double %sub408, %mul409
  %243 = load double* %a1i, align 8
  %244 = load double* %b1r, align 8
  %mul411 = fmul double %243, %244
  %sub412 = fsub double %add410, %mul411
  %245 = load double* %a2r, align 8
  %246 = load double* %b2i, align 8
  %mul413 = fmul double %245, %246
  %add414 = fadd double %sub412, %mul413
  %247 = load double* %a2i, align 8
  %248 = load double* %b2r, align 8
  %mul415 = fmul double %247, %248
  %sub416 = fsub double %add414, %mul415
  %249 = load %struct.half_wilson_vector** %dest.addr, align 8
  %h417 = getelementptr inbounds %struct.half_wilson_vector* %249, i32 0, i32 0
  %arrayidx418 = getelementptr inbounds [2 x %struct.su3_vector]* %h417, i32 0, i64 1
  %c419 = getelementptr inbounds %struct.su3_vector* %arrayidx418, i32 0, i32 0
  %arrayidx420 = getelementptr inbounds [3 x %struct.complex]* %c419, i32 0, i64 1
  %imag421 = getelementptr inbounds %struct.complex* %arrayidx420, i32 0, i32 1
  store double %sub416, double* %imag421, align 8
  %250 = load %struct.su3_matrix** %mat.addr, align 8
  %e422 = getelementptr inbounds %struct.su3_matrix* %250, i32 0, i32 0
  %arrayidx423 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e422, i32 0, i64 0
  %arrayidx424 = getelementptr inbounds [3 x %struct.complex]* %arrayidx423, i32 0, i64 2
  %real425 = getelementptr inbounds %struct.complex* %arrayidx424, i32 0, i32 0
  %251 = load double* %real425, align 8
  store double %251, double* %a0r, align 8
  %252 = load %struct.su3_matrix** %mat.addr, align 8
  %e426 = getelementptr inbounds %struct.su3_matrix* %252, i32 0, i32 0
  %arrayidx427 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e426, i32 0, i64 0
  %arrayidx428 = getelementptr inbounds [3 x %struct.complex]* %arrayidx427, i32 0, i64 2
  %imag429 = getelementptr inbounds %struct.complex* %arrayidx428, i32 0, i32 1
  %253 = load double* %imag429, align 8
  store double %253, double* %a0i, align 8
  %254 = load %struct.half_wilson_vector** %src.addr, align 8
  %h430 = getelementptr inbounds %struct.half_wilson_vector* %254, i32 0, i32 0
  %arrayidx431 = getelementptr inbounds [2 x %struct.su3_vector]* %h430, i32 0, i64 1
  %c432 = getelementptr inbounds %struct.su3_vector* %arrayidx431, i32 0, i32 0
  %arrayidx433 = getelementptr inbounds [3 x %struct.complex]* %c432, i32 0, i64 0
  %real434 = getelementptr inbounds %struct.complex* %arrayidx433, i32 0, i32 0
  %255 = load double* %real434, align 8
  store double %255, double* %b0r, align 8
  %256 = load %struct.half_wilson_vector** %src.addr, align 8
  %h435 = getelementptr inbounds %struct.half_wilson_vector* %256, i32 0, i32 0
  %arrayidx436 = getelementptr inbounds [2 x %struct.su3_vector]* %h435, i32 0, i64 1
  %c437 = getelementptr inbounds %struct.su3_vector* %arrayidx436, i32 0, i32 0
  %arrayidx438 = getelementptr inbounds [3 x %struct.complex]* %c437, i32 0, i64 0
  %imag439 = getelementptr inbounds %struct.complex* %arrayidx438, i32 0, i32 1
  %257 = load double* %imag439, align 8
  store double %257, double* %b0i, align 8
  %258 = load %struct.su3_matrix** %mat.addr, align 8
  %e440 = getelementptr inbounds %struct.su3_matrix* %258, i32 0, i32 0
  %arrayidx441 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e440, i32 0, i64 1
  %arrayidx442 = getelementptr inbounds [3 x %struct.complex]* %arrayidx441, i32 0, i64 2
  %real443 = getelementptr inbounds %struct.complex* %arrayidx442, i32 0, i32 0
  %259 = load double* %real443, align 8
  store double %259, double* %a1r, align 8
  %260 = load %struct.su3_matrix** %mat.addr, align 8
  %e444 = getelementptr inbounds %struct.su3_matrix* %260, i32 0, i32 0
  %arrayidx445 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e444, i32 0, i64 1
  %arrayidx446 = getelementptr inbounds [3 x %struct.complex]* %arrayidx445, i32 0, i64 2
  %imag447 = getelementptr inbounds %struct.complex* %arrayidx446, i32 0, i32 1
  %261 = load double* %imag447, align 8
  store double %261, double* %a1i, align 8
  %262 = load %struct.half_wilson_vector** %src.addr, align 8
  %h448 = getelementptr inbounds %struct.half_wilson_vector* %262, i32 0, i32 0
  %arrayidx449 = getelementptr inbounds [2 x %struct.su3_vector]* %h448, i32 0, i64 1
  %c450 = getelementptr inbounds %struct.su3_vector* %arrayidx449, i32 0, i32 0
  %arrayidx451 = getelementptr inbounds [3 x %struct.complex]* %c450, i32 0, i64 1
  %real452 = getelementptr inbounds %struct.complex* %arrayidx451, i32 0, i32 0
  %263 = load double* %real452, align 8
  store double %263, double* %b1r, align 8
  %264 = load %struct.half_wilson_vector** %src.addr, align 8
  %h453 = getelementptr inbounds %struct.half_wilson_vector* %264, i32 0, i32 0
  %arrayidx454 = getelementptr inbounds [2 x %struct.su3_vector]* %h453, i32 0, i64 1
  %c455 = getelementptr inbounds %struct.su3_vector* %arrayidx454, i32 0, i32 0
  %arrayidx456 = getelementptr inbounds [3 x %struct.complex]* %c455, i32 0, i64 1
  %imag457 = getelementptr inbounds %struct.complex* %arrayidx456, i32 0, i32 1
  %265 = load double* %imag457, align 8
  store double %265, double* %b1i, align 8
  %266 = load %struct.su3_matrix** %mat.addr, align 8
  %e458 = getelementptr inbounds %struct.su3_matrix* %266, i32 0, i32 0
  %arrayidx459 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e458, i32 0, i64 2
  %arrayidx460 = getelementptr inbounds [3 x %struct.complex]* %arrayidx459, i32 0, i64 2
  %real461 = getelementptr inbounds %struct.complex* %arrayidx460, i32 0, i32 0
  %267 = load double* %real461, align 8
  store double %267, double* %a2r, align 8
  %268 = load %struct.su3_matrix** %mat.addr, align 8
  %e462 = getelementptr inbounds %struct.su3_matrix* %268, i32 0, i32 0
  %arrayidx463 = getelementptr inbounds [3 x [3 x %struct.complex]]* %e462, i32 0, i64 2
  %arrayidx464 = getelementptr inbounds [3 x %struct.complex]* %arrayidx463, i32 0, i64 2
  %imag465 = getelementptr inbounds %struct.complex* %arrayidx464, i32 0, i32 1
  %269 = load double* %imag465, align 8
  store double %269, double* %a2i, align 8
  %270 = load %struct.half_wilson_vector** %src.addr, align 8
  %h466 = getelementptr inbounds %struct.half_wilson_vector* %270, i32 0, i32 0
  %arrayidx467 = getelementptr inbounds [2 x %struct.su3_vector]* %h466, i32 0, i64 1
  %c468 = getelementptr inbounds %struct.su3_vector* %arrayidx467, i32 0, i32 0
  %arrayidx469 = getelementptr inbounds [3 x %struct.complex]* %c468, i32 0, i64 2
  %real470 = getelementptr inbounds %struct.complex* %arrayidx469, i32 0, i32 0
  %271 = load double* %real470, align 8
  store double %271, double* %b2r, align 8
  %272 = load %struct.half_wilson_vector** %src.addr, align 8
  %h471 = getelementptr inbounds %struct.half_wilson_vector* %272, i32 0, i32 0
  %arrayidx472 = getelementptr inbounds [2 x %struct.su3_vector]* %h471, i32 0, i64 1
  %c473 = getelementptr inbounds %struct.su3_vector* %arrayidx472, i32 0, i32 0
  %arrayidx474 = getelementptr inbounds [3 x %struct.complex]* %c473, i32 0, i64 2
  %imag475 = getelementptr inbounds %struct.complex* %arrayidx474, i32 0, i32 1
  %273 = load double* %imag475, align 8
  store double %273, double* %b2i, align 8
  %274 = load double* %a0r, align 8
  %275 = load double* %b0r, align 8
  %mul476 = fmul double %274, %275
  %276 = load double* %a0i, align 8
  %277 = load double* %b0i, align 8
  %mul477 = fmul double %276, %277
  %add478 = fadd double %mul476, %mul477
  %278 = load double* %a1r, align 8
  %279 = load double* %b1r, align 8
  %mul479 = fmul double %278, %279
  %add480 = fadd double %add478, %mul479
  %280 = load double* %a1i, align 8
  %281 = load double* %b1i, align 8
  %mul481 = fmul double %280, %281
  %add482 = fadd double %add480, %mul481
  %282 = load double* %a2r, align 8
  %283 = load double* %b2r, align 8
  %mul483 = fmul double %282, %283
  %add484 = fadd double %add482, %mul483
  %284 = load double* %a2i, align 8
  %285 = load double* %b2i, align 8
  %mul485 = fmul double %284, %285
  %add486 = fadd double %add484, %mul485
  %286 = load %struct.half_wilson_vector** %dest.addr, align 8
  %h487 = getelementptr inbounds %struct.half_wilson_vector* %286, i32 0, i32 0
  %arrayidx488 = getelementptr inbounds [2 x %struct.su3_vector]* %h487, i32 0, i64 1
  %c489 = getelementptr inbounds %struct.su3_vector* %arrayidx488, i32 0, i32 0
  %arrayidx490 = getelementptr inbounds [3 x %struct.complex]* %c489, i32 0, i64 2
  %real491 = getelementptr inbounds %struct.complex* %arrayidx490, i32 0, i32 0
  store double %add486, double* %real491, align 8
  %287 = load double* %a0r, align 8
  %288 = load double* %b0i, align 8
  %mul492 = fmul double %287, %288
  %289 = load double* %a0i, align 8
  %290 = load double* %b0r, align 8
  %mul493 = fmul double %289, %290
  %sub494 = fsub double %mul492, %mul493
  %291 = load double* %a1r, align 8
  %292 = load double* %b1i, align 8
  %mul495 = fmul double %291, %292
  %add496 = fadd double %sub494, %mul495
  %293 = load double* %a1i, align 8
  %294 = load double* %b1r, align 8
  %mul497 = fmul double %293, %294
  %sub498 = fsub double %add496, %mul497
  %295 = load double* %a2r, align 8
  %296 = load double* %b2i, align 8
  %mul499 = fmul double %295, %296
  %add500 = fadd double %sub498, %mul499
  %297 = load double* %a2i, align 8
  %298 = load double* %b2r, align 8
  %mul501 = fmul double %297, %298
  %sub502 = fsub double %add500, %mul501
  %299 = load %struct.half_wilson_vector** %dest.addr, align 8
  %h503 = getelementptr inbounds %struct.half_wilson_vector* %299, i32 0, i32 0
  %arrayidx504 = getelementptr inbounds [2 x %struct.su3_vector]* %h503, i32 0, i64 1
  %c505 = getelementptr inbounds %struct.su3_vector* %arrayidx504, i32 0, i32 0
  %arrayidx506 = getelementptr inbounds [3 x %struct.complex]* %c505, i32 0, i64 2
  %imag507 = getelementptr inbounds %struct.complex* %arrayidx506, i32 0, i32 1
  store double %sub502, double* %imag507, align 8
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @cleanup_gathers(%struct.msg_tag** %tags1, %struct.msg_tag** %tags2) #0 {
entry:
  %tags1.addr = alloca %struct.msg_tag**, align 8
  %tags2.addr = alloca %struct.msg_tag**, align 8
  %i = alloca i32, align 4
  store %struct.msg_tag** %tags1, %struct.msg_tag*** %tags1.addr, align 8
  store %struct.msg_tag** %tags2, %struct.msg_tag*** %tags2.addr, align 8
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32* %i, align 4
  %cmp = icmp sle i32 %0, 3
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %1 = load i32* %i, align 4
  %idxprom = sext i32 %1 to i64
  %2 = load %struct.msg_tag*** %tags1.addr, align 8
  %arrayidx = getelementptr inbounds %struct.msg_tag** %2, i64 %idxprom
  %3 = load %struct.msg_tag** %arrayidx, align 8
  call void @cleanup_gather(%struct.msg_tag* %3)
  %4 = load i32* %i, align 4
  %sub = sub nsw i32 7, %4
  %idxprom1 = sext i32 %sub to i64
  %5 = load %struct.msg_tag*** %tags1.addr, align 8
  %arrayidx2 = getelementptr inbounds %struct.msg_tag** %5, i64 %idxprom1
  %6 = load %struct.msg_tag** %arrayidx2, align 8
  call void @cleanup_gather(%struct.msg_tag* %6)
  %7 = load i32* %i, align 4
  %idxprom3 = sext i32 %7 to i64
  %8 = load %struct.msg_tag*** %tags2.addr, align 8
  %arrayidx4 = getelementptr inbounds %struct.msg_tag** %8, i64 %idxprom3
  %9 = load %struct.msg_tag** %arrayidx4, align 8
  call void @cleanup_gather(%struct.msg_tag* %9)
  %10 = load i32* %i, align 4
  %sub5 = sub nsw i32 7, %10
  %idxprom6 = sext i32 %sub5 to i64
  %11 = load %struct.msg_tag*** %tags2.addr, align 8
  %arrayidx7 = getelementptr inbounds %struct.msg_tag** %11, i64 %idxprom6
  %12 = load %struct.msg_tag** %arrayidx7, align 8
  call void @cleanup_gather(%struct.msg_tag* %12)
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %13 = load i32* %i, align 4
  %inc = add nsw i32 %13, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  store i32 8, i32* %i, align 4
  br label %for.cond8

for.cond8:                                        ; preds = %for.inc21, %for.end
  %14 = load i32* %i, align 4
  %cmp9 = icmp sle i32 %14, 11
  br i1 %cmp9, label %for.body10, label %for.end23

for.body10:                                       ; preds = %for.cond8
  %15 = load i32* %i, align 4
  %idxprom11 = sext i32 %15 to i64
  %16 = load %struct.msg_tag*** %tags1.addr, align 8
  %arrayidx12 = getelementptr inbounds %struct.msg_tag** %16, i64 %idxprom11
  %17 = load %struct.msg_tag** %arrayidx12, align 8
  call void @cleanup_gather(%struct.msg_tag* %17)
  %18 = load i32* %i, align 4
  %sub13 = sub nsw i32 23, %18
  %idxprom14 = sext i32 %sub13 to i64
  %19 = load %struct.msg_tag*** %tags1.addr, align 8
  %arrayidx15 = getelementptr inbounds %struct.msg_tag** %19, i64 %idxprom14
  %20 = load %struct.msg_tag** %arrayidx15, align 8
  call void @cleanup_gather(%struct.msg_tag* %20)
  %21 = load i32* %i, align 4
  %idxprom16 = sext i32 %21 to i64
  %22 = load %struct.msg_tag*** %tags2.addr, align 8
  %arrayidx17 = getelementptr inbounds %struct.msg_tag** %22, i64 %idxprom16
  %23 = load %struct.msg_tag** %arrayidx17, align 8
  call void @cleanup_gather(%struct.msg_tag* %23)
  %24 = load i32* %i, align 4
  %sub18 = sub nsw i32 23, %24
  %idxprom19 = sext i32 %sub18 to i64
  %25 = load %struct.msg_tag*** %tags2.addr, align 8
  %arrayidx20 = getelementptr inbounds %struct.msg_tag** %25, i64 %idxprom19
  %26 = load %struct.msg_tag** %arrayidx20, align 8
  call void @cleanup_gather(%struct.msg_tag* %26)
  br label %for.inc21

for.inc21:                                        ; preds = %for.body10
  %27 = load i32* %i, align 4
  %inc22 = add nsw i32 %27, 1
  store i32 %inc22, i32* %i, align 4
  br label %for.cond8

for.end23:                                        ; preds = %for.cond8
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @cleanup_dslash_temps() #0 {
entry:
  %i = alloca i32, align 4
  %0 = load i32* @temp_not_allocated, align 4
  %tobool = icmp ne i32 %0, 0
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.then
  %1 = load i32* %i, align 4
  %cmp = icmp slt i32 %1, 9
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %2 = load i32* %i, align 4
  %idxprom = sext i32 %2 to i64
  %arrayidx = getelementptr inbounds [9 x %struct.su3_vector*]* @temp, i32 0, i64 %idxprom
  %3 = load %struct.su3_vector** %arrayidx, align 8
  %4 = bitcast %struct.su3_vector* %3 to i8*
  call void @free(i8* %4) #2
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %5 = load i32* %i, align 4
  %inc = add nsw i32 %5, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  br label %if.end

if.end:                                           ; preds = %for.end, %entry
  store i32 1, i32* @temp_not_allocated, align 4
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @dslash_fn(i32 %src, i32 %dest, i32 %parity) #0 {
entry:
  %src.addr = alloca i32, align 4
  %dest.addr = alloca i32, align 4
  %parity.addr = alloca i32, align 4
  %i = alloca i32, align 4
  %s = alloca %struct.site*, align 8
  %dir = alloca i32, align 4
  %otherparity = alloca i32, align 4
  %fat4 = alloca %struct.su3_matrix*, align 8
  %long4 = alloca %struct.su3_matrix*, align 8
  %tag = alloca [16 x %struct.msg_tag*], align 16
  %loopend = alloca i32, align 4
  %loopend112 = alloca i32, align 4
  store i32 %src, i32* %src.addr, align 4
  store i32 %dest, i32* %dest.addr, align 4
  store i32 %parity, i32* %parity.addr, align 4
  %0 = load i32* @valid_longlinks, align 4
  %tobool = icmp ne i32 %0, 0
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  call void (...)* bitcast (void ()* @load_longlinks to void (...)*)()
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %1 = load i32* @valid_fatlinks, align 4
  %tobool1 = icmp ne i32 %1, 0
  br i1 %tobool1, label %if.end3, label %if.then2

if.then2:                                         ; preds = %if.end
  call void (...)* bitcast (void ()* @load_fatlinks to void (...)*)()
  br label %if.end3

if.end3:                                          ; preds = %if.then2, %if.end
  %2 = load i32* %parity.addr, align 4
  switch i32 %2, label %sw.epilog [
    i32 2, label %sw.bb
    i32 1, label %sw.bb4
    i32 3, label %sw.bb5
  ]

sw.bb:                                            ; preds = %if.end3
  store i32 1, i32* %otherparity, align 4
  br label %sw.epilog

sw.bb4:                                           ; preds = %if.end3
  store i32 2, i32* %otherparity, align 4
  br label %sw.epilog

sw.bb5:                                           ; preds = %if.end3
  store i32 3, i32* %otherparity, align 4
  br label %sw.epilog

sw.epilog:                                        ; preds = %sw.bb5, %sw.bb4, %sw.bb, %if.end3
  store i32 0, i32* %dir, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %sw.epilog
  %3 = load i32* %dir, align 4
  %cmp = icmp sle i32 %3, 3
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %4 = load i32* %src.addr, align 4
  %5 = load i32* %dir, align 4
  %6 = load i32* %parity.addr, align 4
  %7 = load i32* %dir, align 4
  %idxprom = sext i32 %7 to i64
  %arrayidx = getelementptr inbounds [16 x i8**]* @gen_pt, i32 0, i64 %idxprom
  %8 = load i8*** %arrayidx, align 8
  %call = call %struct.msg_tag* @start_gather(i32 %4, i32 48, i32 %5, i32 %6, i8** %8)
  %9 = load i32* %dir, align 4
  %idxprom6 = sext i32 %9 to i64
  %arrayidx7 = getelementptr inbounds [16 x %struct.msg_tag*]* %tag, i32 0, i64 %idxprom6
  store %struct.msg_tag* %call, %struct.msg_tag** %arrayidx7, align 8
  %10 = load i32* %src.addr, align 4
  %11 = load i32* %dir, align 4
  %add = add nsw i32 %11, 8
  %12 = load i32* %parity.addr, align 4
  %13 = load i32* %dir, align 4
  %add8 = add nsw i32 %13, 8
  %idxprom9 = sext i32 %add8 to i64
  %arrayidx10 = getelementptr inbounds [16 x i8**]* @gen_pt, i32 0, i64 %idxprom9
  %14 = load i8*** %arrayidx10, align 8
  %call11 = call %struct.msg_tag* @start_gather(i32 %10, i32 48, i32 %add, i32 %12, i8** %14)
  %15 = load i32* %dir, align 4
  %add12 = add nsw i32 %15, 8
  %idxprom13 = sext i32 %add12 to i64
  %arrayidx14 = getelementptr inbounds [16 x %struct.msg_tag*]* %tag, i32 0, i64 %idxprom13
  store %struct.msg_tag* %call11, %struct.msg_tag** %arrayidx14, align 8
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %16 = load i32* %dir, align 4
  %inc = add nsw i32 %16, 1
  store i32 %inc, i32* %dir, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %17 = load i32* %otherparity, align 4
  %cmp15 = icmp eq i32 %17, 2
  br i1 %cmp15, label %cond.true, label %cond.false

cond.true:                                        ; preds = %for.end
  %18 = load i32* @even_sites_on_node, align 4
  br label %cond.end

cond.false:                                       ; preds = %for.end
  %19 = load i32* @sites_on_node, align 4
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %18, %cond.true ], [ %19, %cond.false ]
  store i32 %cond, i32* %loopend, align 4
  %20 = load i32* %otherparity, align 4
  %cmp16 = icmp eq i32 %20, 1
  br i1 %cmp16, label %cond.true17, label %cond.false18

cond.true17:                                      ; preds = %cond.end
  %21 = load i32* @even_sites_on_node, align 4
  br label %cond.end19

cond.false18:                                     ; preds = %cond.end
  br label %cond.end19

cond.end19:                                       ; preds = %cond.false18, %cond.true17
  %cond20 = phi i32 [ %21, %cond.true17 ], [ 0, %cond.false18 ]
  store i32 %cond20, i32* %i, align 4
  %22 = load i32* %i, align 4
  %idxprom21 = sext i32 %22 to i64
  %23 = load %struct.site** @lattice, align 8
  %arrayidx22 = getelementptr inbounds %struct.site* %23, i64 %idxprom21
  store %struct.site* %arrayidx22, %struct.site** %s, align 8
  br label %for.cond23

for.cond23:                                       ; preds = %for.inc34, %cond.end19
  %24 = load i32* %i, align 4
  %25 = load i32* %loopend, align 4
  %cmp24 = icmp slt i32 %24, %25
  br i1 %cmp24, label %for.body25, label %for.end36

for.body25:                                       ; preds = %for.cond23
  %26 = load i32* %i, align 4
  %mul = mul nsw i32 4, %26
  %idxprom26 = sext i32 %mul to i64
  %27 = load %struct.su3_matrix** @t_fatlink, align 8
  %arrayidx27 = getelementptr inbounds %struct.su3_matrix* %27, i64 %idxprom26
  store %struct.su3_matrix* %arrayidx27, %struct.su3_matrix** %fat4, align 8
  %28 = load i32* %i, align 4
  %mul28 = mul nsw i32 4, %28
  %idxprom29 = sext i32 %mul28 to i64
  %29 = load %struct.su3_matrix** @t_longlink, align 8
  %arrayidx30 = getelementptr inbounds %struct.su3_matrix* %29, i64 %idxprom29
  store %struct.su3_matrix* %arrayidx30, %struct.su3_matrix** %long4, align 8
  %30 = load %struct.su3_matrix** %fat4, align 8
  %31 = load %struct.site** %s, align 8
  %32 = bitcast %struct.site* %31 to i8*
  %33 = load i32* %src.addr, align 4
  %idx.ext = sext i32 %33 to i64
  %add.ptr = getelementptr inbounds i8* %32, i64 %idx.ext
  %34 = bitcast i8* %add.ptr to %struct.su3_vector*
  %35 = load %struct.site** %s, align 8
  %tempvec = getelementptr inbounds %struct.site* %35, i32 0, i32 17
  %arraydecay = getelementptr inbounds [4 x %struct.su3_vector]* %tempvec, i32 0, i32 0
  call void @mult_adj_su3_mat_vec_4dir(%struct.su3_matrix* %30, %struct.su3_vector* %34, %struct.su3_vector* %arraydecay)
  %36 = load %struct.su3_matrix** %long4, align 8
  %37 = load %struct.site** %s, align 8
  %38 = bitcast %struct.site* %37 to i8*
  %39 = load i32* %src.addr, align 4
  %idx.ext31 = sext i32 %39 to i64
  %add.ptr32 = getelementptr inbounds i8* %38, i64 %idx.ext31
  %40 = bitcast i8* %add.ptr32 to %struct.su3_vector*
  %41 = load %struct.site** %s, align 8
  %templongvec = getelementptr inbounds %struct.site* %41, i32 0, i32 18
  %arraydecay33 = getelementptr inbounds [4 x %struct.su3_vector]* %templongvec, i32 0, i32 0
  call void @mult_adj_su3_mat_vec_4dir(%struct.su3_matrix* %36, %struct.su3_vector* %40, %struct.su3_vector* %arraydecay33)
  br label %for.inc34

for.inc34:                                        ; preds = %for.body25
  %42 = load i32* %i, align 4
  %inc35 = add nsw i32 %42, 1
  store i32 %inc35, i32* %i, align 4
  %43 = load %struct.site** %s, align 8
  %incdec.ptr = getelementptr inbounds %struct.site* %43, i32 1
  store %struct.site* %incdec.ptr, %struct.site** %s, align 8
  br label %for.cond23

for.end36:                                        ; preds = %for.cond23
  store i32 0, i32* %dir, align 4
  br label %for.cond37

for.cond37:                                       ; preds = %for.inc52, %for.end36
  %44 = load i32* %dir, align 4
  %cmp38 = icmp sle i32 %44, 3
  br i1 %cmp38, label %for.body39, label %for.end54

for.body39:                                       ; preds = %for.cond37
  %45 = load i32* %dir, align 4
  %idxprom40 = sext i32 %45 to i64
  %46 = load %struct.site** @lattice, align 8
  %arrayidx41 = getelementptr inbounds %struct.site* %46, i64 0
  %tempvec42 = getelementptr inbounds %struct.site* %arrayidx41, i32 0, i32 17
  %arrayidx43 = getelementptr inbounds [4 x %struct.su3_vector]* %tempvec42, i32 0, i64 %idxprom40
  %47 = bitcast %struct.su3_vector* %arrayidx43 to i8*
  %48 = load %struct.site** @lattice, align 8
  %arrayidx44 = getelementptr inbounds %struct.site* %48, i64 0
  %49 = bitcast %struct.site* %arrayidx44 to i8*
  %sub.ptr.lhs.cast = ptrtoint i8* %47 to i64
  %sub.ptr.rhs.cast = ptrtoint i8* %49 to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %conv = trunc i64 %sub.ptr.sub to i32
  %50 = load i32* %dir, align 4
  %sub = sub nsw i32 7, %50
  %51 = load i32* %parity.addr, align 4
  %52 = load i32* %dir, align 4
  %sub45 = sub nsw i32 7, %52
  %idxprom46 = sext i32 %sub45 to i64
  %arrayidx47 = getelementptr inbounds [16 x i8**]* @gen_pt, i32 0, i64 %idxprom46
  %53 = load i8*** %arrayidx47, align 8
  %call48 = call %struct.msg_tag* @start_gather(i32 %conv, i32 48, i32 %sub, i32 %51, i8** %53)
  %54 = load i32* %dir, align 4
  %sub49 = sub nsw i32 7, %54
  %idxprom50 = sext i32 %sub49 to i64
  %arrayidx51 = getelementptr inbounds [16 x %struct.msg_tag*]* %tag, i32 0, i64 %idxprom50
  store %struct.msg_tag* %call48, %struct.msg_tag** %arrayidx51, align 8
  br label %for.inc52

for.inc52:                                        ; preds = %for.body39
  %55 = load i32* %dir, align 4
  %inc53 = add nsw i32 %55, 1
  store i32 %inc53, i32* %dir, align 4
  br label %for.cond37

for.end54:                                        ; preds = %for.cond37
  store i32 8, i32* %dir, align 4
  br label %for.cond55

for.cond55:                                       ; preds = %for.inc77, %for.end54
  %56 = load i32* %dir, align 4
  %cmp56 = icmp sle i32 %56, 11
  br i1 %cmp56, label %for.body58, label %for.end79

for.body58:                                       ; preds = %for.cond55
  %57 = load i32* %dir, align 4
  %sub59 = sub nsw i32 %57, 8
  %idxprom60 = sext i32 %sub59 to i64
  %58 = load %struct.site** @lattice, align 8
  %arrayidx61 = getelementptr inbounds %struct.site* %58, i64 0
  %templongvec62 = getelementptr inbounds %struct.site* %arrayidx61, i32 0, i32 18
  %arrayidx63 = getelementptr inbounds [4 x %struct.su3_vector]* %templongvec62, i32 0, i64 %idxprom60
  %59 = bitcast %struct.su3_vector* %arrayidx63 to i8*
  %60 = load %struct.site** @lattice, align 8
  %arrayidx64 = getelementptr inbounds %struct.site* %60, i64 0
  %61 = bitcast %struct.site* %arrayidx64 to i8*
  %sub.ptr.lhs.cast65 = ptrtoint i8* %59 to i64
  %sub.ptr.rhs.cast66 = ptrtoint i8* %61 to i64
  %sub.ptr.sub67 = sub i64 %sub.ptr.lhs.cast65, %sub.ptr.rhs.cast66
  %conv68 = trunc i64 %sub.ptr.sub67 to i32
  %62 = load i32* %dir, align 4
  %sub69 = sub nsw i32 23, %62
  %63 = load i32* %parity.addr, align 4
  %64 = load i32* %dir, align 4
  %sub70 = sub nsw i32 23, %64
  %idxprom71 = sext i32 %sub70 to i64
  %arrayidx72 = getelementptr inbounds [16 x i8**]* @gen_pt, i32 0, i64 %idxprom71
  %65 = load i8*** %arrayidx72, align 8
  %call73 = call %struct.msg_tag* @start_gather(i32 %conv68, i32 48, i32 %sub69, i32 %63, i8** %65)
  %66 = load i32* %dir, align 4
  %sub74 = sub nsw i32 23, %66
  %idxprom75 = sext i32 %sub74 to i64
  %arrayidx76 = getelementptr inbounds [16 x %struct.msg_tag*]* %tag, i32 0, i64 %idxprom75
  store %struct.msg_tag* %call73, %struct.msg_tag** %arrayidx76, align 8
  br label %for.inc77

for.inc77:                                        ; preds = %for.body58
  %67 = load i32* %dir, align 4
  %inc78 = add nsw i32 %67, 1
  store i32 %inc78, i32* %dir, align 4
  br label %for.cond55

for.end79:                                        ; preds = %for.cond55
  store i32 0, i32* %dir, align 4
  br label %for.cond80

for.cond80:                                       ; preds = %for.inc89, %for.end79
  %68 = load i32* %dir, align 4
  %cmp81 = icmp sle i32 %68, 3
  br i1 %cmp81, label %for.body83, label %for.end91

for.body83:                                       ; preds = %for.cond80
  %69 = load i32* %dir, align 4
  %idxprom84 = sext i32 %69 to i64
  %arrayidx85 = getelementptr inbounds [16 x %struct.msg_tag*]* %tag, i32 0, i64 %idxprom84
  %70 = load %struct.msg_tag** %arrayidx85, align 8
  call void @wait_gather(%struct.msg_tag* %70)
  %71 = load i32* %dir, align 4
  %add86 = add nsw i32 %71, 8
  %idxprom87 = sext i32 %add86 to i64
  %arrayidx88 = getelementptr inbounds [16 x %struct.msg_tag*]* %tag, i32 0, i64 %idxprom87
  %72 = load %struct.msg_tag** %arrayidx88, align 8
  call void @wait_gather(%struct.msg_tag* %72)
  br label %for.inc89

for.inc89:                                        ; preds = %for.body83
  %73 = load i32* %dir, align 4
  %inc90 = add nsw i32 %73, 1
  store i32 %inc90, i32* %dir, align 4
  br label %for.cond80

for.end91:                                        ; preds = %for.cond80
  store i32 0, i32* %dir, align 4
  br label %for.cond92

for.cond92:                                       ; preds = %for.inc99, %for.end91
  %74 = load i32* %dir, align 4
  %cmp93 = icmp sle i32 %74, 3
  br i1 %cmp93, label %for.body95, label %for.end101

for.body95:                                       ; preds = %for.cond92
  %75 = load i32* %dir, align 4
  %sub96 = sub nsw i32 7, %75
  %idxprom97 = sext i32 %sub96 to i64
  %arrayidx98 = getelementptr inbounds [16 x %struct.msg_tag*]* %tag, i32 0, i64 %idxprom97
  %76 = load %struct.msg_tag** %arrayidx98, align 8
  call void @wait_gather(%struct.msg_tag* %76)
  br label %for.inc99

for.inc99:                                        ; preds = %for.body95
  %77 = load i32* %dir, align 4
  %inc100 = add nsw i32 %77, 1
  store i32 %inc100, i32* %dir, align 4
  br label %for.cond92

for.end101:                                       ; preds = %for.cond92
  store i32 8, i32* %dir, align 4
  br label %for.cond102

for.cond102:                                      ; preds = %for.inc109, %for.end101
  %78 = load i32* %dir, align 4
  %cmp103 = icmp sle i32 %78, 11
  br i1 %cmp103, label %for.body105, label %for.end111

for.body105:                                      ; preds = %for.cond102
  %79 = load i32* %dir, align 4
  %sub106 = sub nsw i32 23, %79
  %idxprom107 = sext i32 %sub106 to i64
  %arrayidx108 = getelementptr inbounds [16 x %struct.msg_tag*]* %tag, i32 0, i64 %idxprom107
  %80 = load %struct.msg_tag** %arrayidx108, align 8
  call void @wait_gather(%struct.msg_tag* %80)
  br label %for.inc109

for.inc109:                                       ; preds = %for.body105
  %81 = load i32* %dir, align 4
  %inc110 = add nsw i32 %81, 1
  store i32 %inc110, i32* %dir, align 4
  br label %for.cond102

for.end111:                                       ; preds = %for.cond102
  %82 = load i32* %parity.addr, align 4
  %cmp113 = icmp eq i32 %82, 2
  br i1 %cmp113, label %cond.true115, label %cond.false116

cond.true115:                                     ; preds = %for.end111
  %83 = load i32* @even_sites_on_node, align 4
  br label %cond.end117

cond.false116:                                    ; preds = %for.end111
  %84 = load i32* @sites_on_node, align 4
  br label %cond.end117

cond.end117:                                      ; preds = %cond.false116, %cond.true115
  %cond118 = phi i32 [ %83, %cond.true115 ], [ %84, %cond.false116 ]
  store i32 %cond118, i32* %loopend112, align 4
  %85 = load i32* %parity.addr, align 4
  %cmp119 = icmp eq i32 %85, 1
  br i1 %cmp119, label %cond.true121, label %cond.false122

cond.true121:                                     ; preds = %cond.end117
  %86 = load i32* @even_sites_on_node, align 4
  br label %cond.end123

cond.false122:                                    ; preds = %cond.end117
  br label %cond.end123

cond.end123:                                      ; preds = %cond.false122, %cond.true121
  %cond124 = phi i32 [ %86, %cond.true121 ], [ 0, %cond.false122 ]
  store i32 %cond124, i32* %i, align 4
  %87 = load i32* %i, align 4
  %idxprom125 = sext i32 %87 to i64
  %88 = load %struct.site** @lattice, align 8
  %arrayidx126 = getelementptr inbounds %struct.site* %88, i64 %idxprom125
  store %struct.site* %arrayidx126, %struct.site** %s, align 8
  br label %for.cond127

for.cond127:                                      ; preds = %for.inc179, %cond.end123
  %89 = load i32* %i, align 4
  %90 = load i32* %loopend112, align 4
  %cmp128 = icmp slt i32 %89, %90
  br i1 %cmp128, label %for.body130, label %for.end182

for.body130:                                      ; preds = %for.cond127
  %91 = load i32* %i, align 4
  %mul131 = mul nsw i32 4, %91
  %idxprom132 = sext i32 %mul131 to i64
  %92 = load %struct.su3_matrix** @t_fatlink, align 8
  %arrayidx133 = getelementptr inbounds %struct.su3_matrix* %92, i64 %idxprom132
  store %struct.su3_matrix* %arrayidx133, %struct.su3_matrix** %fat4, align 8
  %93 = load i32* %i, align 4
  %mul134 = mul nsw i32 4, %93
  %idxprom135 = sext i32 %mul134 to i64
  %94 = load %struct.su3_matrix** @t_longlink, align 8
  %arrayidx136 = getelementptr inbounds %struct.su3_matrix* %94, i64 %idxprom135
  store %struct.su3_matrix* %arrayidx136, %struct.su3_matrix** %long4, align 8
  %95 = load %struct.su3_matrix** %fat4, align 8
  %96 = load i32* %i, align 4
  %idxprom137 = sext i32 %96 to i64
  %97 = load i8*** getelementptr inbounds ([16 x i8**]* @gen_pt, i32 0, i64 0), align 8
  %arrayidx138 = getelementptr inbounds i8** %97, i64 %idxprom137
  %98 = load i8** %arrayidx138, align 8
  %99 = bitcast i8* %98 to %struct.su3_vector*
  %100 = load i32* %i, align 4
  %idxprom139 = sext i32 %100 to i64
  %101 = load i8*** getelementptr inbounds ([16 x i8**]* @gen_pt, i32 0, i64 1), align 8
  %arrayidx140 = getelementptr inbounds i8** %101, i64 %idxprom139
  %102 = load i8** %arrayidx140, align 8
  %103 = bitcast i8* %102 to %struct.su3_vector*
  %104 = load i32* %i, align 4
  %idxprom141 = sext i32 %104 to i64
  %105 = load i8*** getelementptr inbounds ([16 x i8**]* @gen_pt, i32 0, i64 2), align 8
  %arrayidx142 = getelementptr inbounds i8** %105, i64 %idxprom141
  %106 = load i8** %arrayidx142, align 8
  %107 = bitcast i8* %106 to %struct.su3_vector*
  %108 = load i32* %i, align 4
  %idxprom143 = sext i32 %108 to i64
  %109 = load i8*** getelementptr inbounds ([16 x i8**]* @gen_pt, i32 0, i64 3), align 8
  %arrayidx144 = getelementptr inbounds i8** %109, i64 %idxprom143
  %110 = load i8** %arrayidx144, align 8
  %111 = bitcast i8* %110 to %struct.su3_vector*
  %112 = load %struct.site** %s, align 8
  %113 = bitcast %struct.site* %112 to i8*
  %114 = load i32* %dest.addr, align 4
  %idx.ext145 = sext i32 %114 to i64
  %add.ptr146 = getelementptr inbounds i8* %113, i64 %idx.ext145
  %115 = bitcast i8* %add.ptr146 to %struct.su3_vector*
  call void @mult_su3_mat_vec_sum_4dir(%struct.su3_matrix* %95, %struct.su3_vector* %99, %struct.su3_vector* %103, %struct.su3_vector* %107, %struct.su3_vector* %111, %struct.su3_vector* %115)
  %116 = load %struct.su3_matrix** %long4, align 8
  %117 = load i32* %i, align 4
  %idxprom147 = sext i32 %117 to i64
  %118 = load i8*** getelementptr inbounds ([16 x i8**]* @gen_pt, i32 0, i64 8), align 8
  %arrayidx148 = getelementptr inbounds i8** %118, i64 %idxprom147
  %119 = load i8** %arrayidx148, align 8
  %120 = bitcast i8* %119 to %struct.su3_vector*
  %121 = load i32* %i, align 4
  %idxprom149 = sext i32 %121 to i64
  %122 = load i8*** getelementptr inbounds ([16 x i8**]* @gen_pt, i32 0, i64 9), align 8
  %arrayidx150 = getelementptr inbounds i8** %122, i64 %idxprom149
  %123 = load i8** %arrayidx150, align 8
  %124 = bitcast i8* %123 to %struct.su3_vector*
  %125 = load i32* %i, align 4
  %idxprom151 = sext i32 %125 to i64
  %126 = load i8*** getelementptr inbounds ([16 x i8**]* @gen_pt, i32 0, i64 10), align 8
  %arrayidx152 = getelementptr inbounds i8** %126, i64 %idxprom151
  %127 = load i8** %arrayidx152, align 8
  %128 = bitcast i8* %127 to %struct.su3_vector*
  %129 = load i32* %i, align 4
  %idxprom153 = sext i32 %129 to i64
  %130 = load i8*** getelementptr inbounds ([16 x i8**]* @gen_pt, i32 0, i64 11), align 8
  %arrayidx154 = getelementptr inbounds i8** %130, i64 %idxprom153
  %131 = load i8** %arrayidx154, align 8
  %132 = bitcast i8* %131 to %struct.su3_vector*
  %133 = load %struct.site** %s, align 8
  %templongv1 = getelementptr inbounds %struct.site* %133, i32 0, i32 19
  call void @mult_su3_mat_vec_sum_4dir(%struct.su3_matrix* %116, %struct.su3_vector* %120, %struct.su3_vector* %124, %struct.su3_vector* %128, %struct.su3_vector* %132, %struct.su3_vector* %templongv1)
  %134 = load %struct.site** %s, align 8
  %135 = bitcast %struct.site* %134 to i8*
  %136 = load i32* %dest.addr, align 4
  %idx.ext155 = sext i32 %136 to i64
  %add.ptr156 = getelementptr inbounds i8* %135, i64 %idx.ext155
  %137 = bitcast i8* %add.ptr156 to %struct.su3_vector*
  %138 = load i32* %i, align 4
  %idxprom157 = sext i32 %138 to i64
  %139 = load i8*** getelementptr inbounds ([16 x i8**]* @gen_pt, i32 0, i64 7), align 8
  %arrayidx158 = getelementptr inbounds i8** %139, i64 %idxprom157
  %140 = load i8** %arrayidx158, align 8
  %141 = bitcast i8* %140 to %struct.su3_vector*
  %142 = load i32* %i, align 4
  %idxprom159 = sext i32 %142 to i64
  %143 = load i8*** getelementptr inbounds ([16 x i8**]* @gen_pt, i32 0, i64 6), align 8
  %arrayidx160 = getelementptr inbounds i8** %143, i64 %idxprom159
  %144 = load i8** %arrayidx160, align 8
  %145 = bitcast i8* %144 to %struct.su3_vector*
  %146 = load i32* %i, align 4
  %idxprom161 = sext i32 %146 to i64
  %147 = load i8*** getelementptr inbounds ([16 x i8**]* @gen_pt, i32 0, i64 5), align 8
  %arrayidx162 = getelementptr inbounds i8** %147, i64 %idxprom161
  %148 = load i8** %arrayidx162, align 8
  %149 = bitcast i8* %148 to %struct.su3_vector*
  %150 = load i32* %i, align 4
  %idxprom163 = sext i32 %150 to i64
  %151 = load i8*** getelementptr inbounds ([16 x i8**]* @gen_pt, i32 0, i64 4), align 8
  %arrayidx164 = getelementptr inbounds i8** %151, i64 %idxprom163
  %152 = load i8** %arrayidx164, align 8
  %153 = bitcast i8* %152 to %struct.su3_vector*
  call void @sub_four_su3_vecs(%struct.su3_vector* %137, %struct.su3_vector* %141, %struct.su3_vector* %145, %struct.su3_vector* %149, %struct.su3_vector* %153)
  %154 = load %struct.site** %s, align 8
  %templongv1165 = getelementptr inbounds %struct.site* %154, i32 0, i32 19
  %155 = load i32* %i, align 4
  %idxprom166 = sext i32 %155 to i64
  %156 = load i8*** getelementptr inbounds ([16 x i8**]* @gen_pt, i32 0, i64 15), align 8
  %arrayidx167 = getelementptr inbounds i8** %156, i64 %idxprom166
  %157 = load i8** %arrayidx167, align 8
  %158 = bitcast i8* %157 to %struct.su3_vector*
  %159 = load i32* %i, align 4
  %idxprom168 = sext i32 %159 to i64
  %160 = load i8*** getelementptr inbounds ([16 x i8**]* @gen_pt, i32 0, i64 14), align 8
  %arrayidx169 = getelementptr inbounds i8** %160, i64 %idxprom168
  %161 = load i8** %arrayidx169, align 8
  %162 = bitcast i8* %161 to %struct.su3_vector*
  %163 = load i32* %i, align 4
  %idxprom170 = sext i32 %163 to i64
  %164 = load i8*** getelementptr inbounds ([16 x i8**]* @gen_pt, i32 0, i64 13), align 8
  %arrayidx171 = getelementptr inbounds i8** %164, i64 %idxprom170
  %165 = load i8** %arrayidx171, align 8
  %166 = bitcast i8* %165 to %struct.su3_vector*
  %167 = load i32* %i, align 4
  %idxprom172 = sext i32 %167 to i64
  %168 = load i8*** getelementptr inbounds ([16 x i8**]* @gen_pt, i32 0, i64 12), align 8
  %arrayidx173 = getelementptr inbounds i8** %168, i64 %idxprom172
  %169 = load i8** %arrayidx173, align 8
  %170 = bitcast i8* %169 to %struct.su3_vector*
  call void @sub_four_su3_vecs(%struct.su3_vector* %templongv1165, %struct.su3_vector* %158, %struct.su3_vector* %162, %struct.su3_vector* %166, %struct.su3_vector* %170)
  %171 = load %struct.site** %s, align 8
  %172 = bitcast %struct.site* %171 to i8*
  %173 = load i32* %dest.addr, align 4
  %idx.ext174 = sext i32 %173 to i64
  %add.ptr175 = getelementptr inbounds i8* %172, i64 %idx.ext174
  %174 = bitcast i8* %add.ptr175 to %struct.su3_vector*
  %175 = load %struct.site** %s, align 8
  %templongv1176 = getelementptr inbounds %struct.site* %175, i32 0, i32 19
  %176 = load %struct.site** %s, align 8
  %177 = bitcast %struct.site* %176 to i8*
  %178 = load i32* %dest.addr, align 4
  %idx.ext177 = sext i32 %178 to i64
  %add.ptr178 = getelementptr inbounds i8* %177, i64 %idx.ext177
  %179 = bitcast i8* %add.ptr178 to %struct.su3_vector*
  call void @add_su3_vector(%struct.su3_vector* %174, %struct.su3_vector* %templongv1176, %struct.su3_vector* %179)
  br label %for.inc179

for.inc179:                                       ; preds = %for.body130
  %180 = load i32* %i, align 4
  %inc180 = add nsw i32 %180, 1
  store i32 %inc180, i32* %i, align 4
  %181 = load %struct.site** %s, align 8
  %incdec.ptr181 = getelementptr inbounds %struct.site* %181, i32 1
  store %struct.site* %incdec.ptr181, %struct.site** %s, align 8
  br label %for.cond127

for.end182:                                       ; preds = %for.cond127
  store i32 0, i32* %dir, align 4
  br label %for.cond183

for.cond183:                                      ; preds = %for.inc192, %for.end182
  %182 = load i32* %dir, align 4
  %cmp184 = icmp sle i32 %182, 3
  br i1 %cmp184, label %for.body186, label %for.end194

for.body186:                                      ; preds = %for.cond183
  %183 = load i32* %dir, align 4
  %idxprom187 = sext i32 %183 to i64
  %arrayidx188 = getelementptr inbounds [16 x %struct.msg_tag*]* %tag, i32 0, i64 %idxprom187
  %184 = load %struct.msg_tag** %arrayidx188, align 8
  call void @cleanup_gather(%struct.msg_tag* %184)
  %185 = load i32* %dir, align 4
  %sub189 = sub nsw i32 7, %185
  %idxprom190 = sext i32 %sub189 to i64
  %arrayidx191 = getelementptr inbounds [16 x %struct.msg_tag*]* %tag, i32 0, i64 %idxprom190
  %186 = load %struct.msg_tag** %arrayidx191, align 8
  call void @cleanup_gather(%struct.msg_tag* %186)
  br label %for.inc192

for.inc192:                                       ; preds = %for.body186
  %187 = load i32* %dir, align 4
  %inc193 = add nsw i32 %187, 1
  store i32 %inc193, i32* %dir, align 4
  br label %for.cond183

for.end194:                                       ; preds = %for.cond183
  store i32 8, i32* %dir, align 4
  br label %for.cond195

for.cond195:                                      ; preds = %for.inc204, %for.end194
  %188 = load i32* %dir, align 4
  %cmp196 = icmp sle i32 %188, 11
  br i1 %cmp196, label %for.body198, label %for.end206

for.body198:                                      ; preds = %for.cond195
  %189 = load i32* %dir, align 4
  %idxprom199 = sext i32 %189 to i64
  %arrayidx200 = getelementptr inbounds [16 x %struct.msg_tag*]* %tag, i32 0, i64 %idxprom199
  %190 = load %struct.msg_tag** %arrayidx200, align 8
  call void @cleanup_gather(%struct.msg_tag* %190)
  %191 = load i32* %dir, align 4
  %sub201 = sub nsw i32 23, %191
  %idxprom202 = sext i32 %sub201 to i64
  %arrayidx203 = getelementptr inbounds [16 x %struct.msg_tag*]* %tag, i32 0, i64 %idxprom202
  %192 = load %struct.msg_tag** %arrayidx203, align 8
  call void @cleanup_gather(%struct.msg_tag* %192)
  br label %for.inc204

for.inc204:                                       ; preds = %for.body198
  %193 = load i32* %dir, align 4
  %inc205 = add nsw i32 %193, 1
  store i32 %inc205, i32* %dir, align 4
  br label %for.cond195

for.end206:                                       ; preds = %for.cond195
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @dslash_fn_special(i32 %src, i32 %dest, i32 %parity, %struct.msg_tag** %tag, i32 %start) #0 {
entry:
  %src.addr = alloca i32, align 4
  %dest.addr = alloca i32, align 4
  %parity.addr = alloca i32, align 4
  %tag.addr = alloca %struct.msg_tag**, align 8
  %start.addr = alloca i32, align 4
  %i = alloca i32, align 4
  %s = alloca %struct.site*, align 8
  %dir = alloca i32, align 4
  %otherparity = alloca i32, align 4
  %fat4 = alloca %struct.su3_matrix*, align 8
  %long4 = alloca %struct.su3_matrix*, align 8
  %loopend = alloca i32, align 4
  %loopend179 = alloca i32, align 4
  store i32 %src, i32* %src.addr, align 4
  store i32 %dest, i32* %dest.addr, align 4
  store i32 %parity, i32* %parity.addr, align 4
  store %struct.msg_tag** %tag, %struct.msg_tag*** %tag.addr, align 8
  store i32 %start, i32* %start.addr, align 4
  %0 = load i32* @valid_longlinks, align 4
  %tobool = icmp ne i32 %0, 0
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  call void (...)* bitcast (void ()* @load_longlinks to void (...)*)()
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %1 = load i32* @valid_fatlinks, align 4
  %tobool1 = icmp ne i32 %1, 0
  br i1 %tobool1, label %if.end3, label %if.then2

if.then2:                                         ; preds = %if.end
  call void (...)* bitcast (void ()* @load_fatlinks to void (...)*)()
  br label %if.end3

if.end3:                                          ; preds = %if.then2, %if.end
  %2 = load i32* %parity.addr, align 4
  switch i32 %2, label %sw.epilog [
    i32 2, label %sw.bb
    i32 1, label %sw.bb4
    i32 3, label %sw.bb5
  ]

sw.bb:                                            ; preds = %if.end3
  store i32 1, i32* %otherparity, align 4
  br label %sw.epilog

sw.bb4:                                           ; preds = %if.end3
  store i32 2, i32* %otherparity, align 4
  br label %sw.epilog

sw.bb5:                                           ; preds = %if.end3
  store i32 3, i32* %otherparity, align 4
  br label %sw.epilog

sw.epilog:                                        ; preds = %sw.bb5, %sw.bb4, %sw.bb, %if.end3
  store i32 0, i32* %dir, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %sw.epilog
  %3 = load i32* %dir, align 4
  %cmp = icmp sle i32 %3, 3
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %4 = load i32* %start.addr, align 4
  %cmp6 = icmp eq i32 %4, 1
  br i1 %cmp6, label %if.then7, label %if.else

if.then7:                                         ; preds = %for.body
  %5 = load i32* %src.addr, align 4
  %6 = load i32* %dir, align 4
  %7 = load i32* %parity.addr, align 4
  %8 = load i32* %dir, align 4
  %idxprom = sext i32 %8 to i64
  %arrayidx = getelementptr inbounds [16 x i8**]* @gen_pt, i32 0, i64 %idxprom
  %9 = load i8*** %arrayidx, align 8
  %call = call %struct.msg_tag* @start_gather(i32 %5, i32 48, i32 %6, i32 %7, i8** %9)
  %10 = load i32* %dir, align 4
  %idxprom8 = sext i32 %10 to i64
  %11 = load %struct.msg_tag*** %tag.addr, align 8
  %arrayidx9 = getelementptr inbounds %struct.msg_tag** %11, i64 %idxprom8
  store %struct.msg_tag* %call, %struct.msg_tag** %arrayidx9, align 8
  br label %if.end14

if.else:                                          ; preds = %for.body
  %12 = load i32* %src.addr, align 4
  %13 = load i32* %dir, align 4
  %14 = load i32* %parity.addr, align 4
  %15 = load i32* %dir, align 4
  %idxprom10 = sext i32 %15 to i64
  %arrayidx11 = getelementptr inbounds [16 x i8**]* @gen_pt, i32 0, i64 %idxprom10
  %16 = load i8*** %arrayidx11, align 8
  %17 = load i32* %dir, align 4
  %idxprom12 = sext i32 %17 to i64
  %18 = load %struct.msg_tag*** %tag.addr, align 8
  %arrayidx13 = getelementptr inbounds %struct.msg_tag** %18, i64 %idxprom12
  %19 = load %struct.msg_tag** %arrayidx13, align 8
  call void @restart_gather(i32 %12, i32 48, i32 %13, i32 %14, i8** %16, %struct.msg_tag* %19)
  br label %if.end14

if.end14:                                         ; preds = %if.else, %if.then7
  br label %for.inc

for.inc:                                          ; preds = %if.end14
  %20 = load i32* %dir, align 4
  %inc = add nsw i32 %20, 1
  store i32 %inc, i32* %dir, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  store i32 8, i32* %dir, align 4
  br label %for.cond15

for.cond15:                                       ; preds = %for.inc31, %for.end
  %21 = load i32* %dir, align 4
  %cmp16 = icmp sle i32 %21, 11
  br i1 %cmp16, label %for.body17, label %for.end33

for.body17:                                       ; preds = %for.cond15
  %22 = load i32* %start.addr, align 4
  %cmp18 = icmp eq i32 %22, 1
  br i1 %cmp18, label %if.then19, label %if.else25

if.then19:                                        ; preds = %for.body17
  %23 = load i32* %src.addr, align 4
  %24 = load i32* %dir, align 4
  %25 = load i32* %parity.addr, align 4
  %26 = load i32* %dir, align 4
  %idxprom20 = sext i32 %26 to i64
  %arrayidx21 = getelementptr inbounds [16 x i8**]* @gen_pt, i32 0, i64 %idxprom20
  %27 = load i8*** %arrayidx21, align 8
  %call22 = call %struct.msg_tag* @start_gather(i32 %23, i32 48, i32 %24, i32 %25, i8** %27)
  %28 = load i32* %dir, align 4
  %idxprom23 = sext i32 %28 to i64
  %29 = load %struct.msg_tag*** %tag.addr, align 8
  %arrayidx24 = getelementptr inbounds %struct.msg_tag** %29, i64 %idxprom23
  store %struct.msg_tag* %call22, %struct.msg_tag** %arrayidx24, align 8
  br label %if.end30

if.else25:                                        ; preds = %for.body17
  %30 = load i32* %src.addr, align 4
  %31 = load i32* %dir, align 4
  %32 = load i32* %parity.addr, align 4
  %33 = load i32* %dir, align 4
  %idxprom26 = sext i32 %33 to i64
  %arrayidx27 = getelementptr inbounds [16 x i8**]* @gen_pt, i32 0, i64 %idxprom26
  %34 = load i8*** %arrayidx27, align 8
  %35 = load i32* %dir, align 4
  %idxprom28 = sext i32 %35 to i64
  %36 = load %struct.msg_tag*** %tag.addr, align 8
  %arrayidx29 = getelementptr inbounds %struct.msg_tag** %36, i64 %idxprom28
  %37 = load %struct.msg_tag** %arrayidx29, align 8
  call void @restart_gather(i32 %30, i32 48, i32 %31, i32 %32, i8** %34, %struct.msg_tag* %37)
  br label %if.end30

if.end30:                                         ; preds = %if.else25, %if.then19
  br label %for.inc31

for.inc31:                                        ; preds = %if.end30
  %38 = load i32* %dir, align 4
  %inc32 = add nsw i32 %38, 1
  store i32 %inc32, i32* %dir, align 4
  br label %for.cond15

for.end33:                                        ; preds = %for.cond15
  %39 = load i32* %otherparity, align 4
  %cmp34 = icmp eq i32 %39, 2
  br i1 %cmp34, label %cond.true, label %cond.false

cond.true:                                        ; preds = %for.end33
  %40 = load i32* @even_sites_on_node, align 4
  br label %cond.end

cond.false:                                       ; preds = %for.end33
  %41 = load i32* @sites_on_node, align 4
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %40, %cond.true ], [ %41, %cond.false ]
  store i32 %cond, i32* %loopend, align 4
  %42 = load i32* %otherparity, align 4
  %cmp35 = icmp eq i32 %42, 1
  br i1 %cmp35, label %cond.true36, label %cond.false37

cond.true36:                                      ; preds = %cond.end
  %43 = load i32* @even_sites_on_node, align 4
  br label %cond.end38

cond.false37:                                     ; preds = %cond.end
  br label %cond.end38

cond.end38:                                       ; preds = %cond.false37, %cond.true36
  %cond39 = phi i32 [ %43, %cond.true36 ], [ 0, %cond.false37 ]
  store i32 %cond39, i32* %i, align 4
  %44 = load i32* %i, align 4
  %idxprom40 = sext i32 %44 to i64
  %45 = load %struct.site** @lattice, align 8
  %arrayidx41 = getelementptr inbounds %struct.site* %45, i64 %idxprom40
  store %struct.site* %arrayidx41, %struct.site** %s, align 8
  br label %for.cond42

for.cond42:                                       ; preds = %for.inc53, %cond.end38
  %46 = load i32* %i, align 4
  %47 = load i32* %loopend, align 4
  %cmp43 = icmp slt i32 %46, %47
  br i1 %cmp43, label %for.body44, label %for.end55

for.body44:                                       ; preds = %for.cond42
  %48 = load i32* %i, align 4
  %mul = mul nsw i32 4, %48
  %idxprom45 = sext i32 %mul to i64
  %49 = load %struct.su3_matrix** @t_fatlink, align 8
  %arrayidx46 = getelementptr inbounds %struct.su3_matrix* %49, i64 %idxprom45
  store %struct.su3_matrix* %arrayidx46, %struct.su3_matrix** %fat4, align 8
  %50 = load i32* %i, align 4
  %mul47 = mul nsw i32 4, %50
  %idxprom48 = sext i32 %mul47 to i64
  %51 = load %struct.su3_matrix** @t_longlink, align 8
  %arrayidx49 = getelementptr inbounds %struct.su3_matrix* %51, i64 %idxprom48
  store %struct.su3_matrix* %arrayidx49, %struct.su3_matrix** %long4, align 8
  %52 = load %struct.su3_matrix** %fat4, align 8
  %53 = load %struct.site** %s, align 8
  %54 = bitcast %struct.site* %53 to i8*
  %55 = load i32* %src.addr, align 4
  %idx.ext = sext i32 %55 to i64
  %add.ptr = getelementptr inbounds i8* %54, i64 %idx.ext
  %56 = bitcast i8* %add.ptr to %struct.su3_vector*
  %57 = load %struct.site** %s, align 8
  %tempvec = getelementptr inbounds %struct.site* %57, i32 0, i32 17
  %arraydecay = getelementptr inbounds [4 x %struct.su3_vector]* %tempvec, i32 0, i32 0
  call void @mult_adj_su3_mat_vec_4dir(%struct.su3_matrix* %52, %struct.su3_vector* %56, %struct.su3_vector* %arraydecay)
  %58 = load %struct.su3_matrix** %long4, align 8
  %59 = load %struct.site** %s, align 8
  %60 = bitcast %struct.site* %59 to i8*
  %61 = load i32* %src.addr, align 4
  %idx.ext50 = sext i32 %61 to i64
  %add.ptr51 = getelementptr inbounds i8* %60, i64 %idx.ext50
  %62 = bitcast i8* %add.ptr51 to %struct.su3_vector*
  %63 = load %struct.site** %s, align 8
  %templongvec = getelementptr inbounds %struct.site* %63, i32 0, i32 18
  %arraydecay52 = getelementptr inbounds [4 x %struct.su3_vector]* %templongvec, i32 0, i32 0
  call void @mult_adj_su3_mat_vec_4dir(%struct.su3_matrix* %58, %struct.su3_vector* %62, %struct.su3_vector* %arraydecay52)
  br label %for.inc53

for.inc53:                                        ; preds = %for.body44
  %64 = load i32* %i, align 4
  %inc54 = add nsw i32 %64, 1
  store i32 %inc54, i32* %i, align 4
  %65 = load %struct.site** %s, align 8
  %incdec.ptr = getelementptr inbounds %struct.site* %65, i32 1
  store %struct.site* %incdec.ptr, %struct.site** %s, align 8
  br label %for.cond42

for.end55:                                        ; preds = %for.cond42
  store i32 0, i32* %dir, align 4
  br label %for.cond56

for.cond56:                                       ; preds = %for.inc91, %for.end55
  %66 = load i32* %dir, align 4
  %cmp57 = icmp sle i32 %66, 3
  br i1 %cmp57, label %for.body58, label %for.end93

for.body58:                                       ; preds = %for.cond56
  %67 = load i32* %start.addr, align 4
  %cmp59 = icmp eq i32 %67, 1
  br i1 %cmp59, label %if.then60, label %if.else73

if.then60:                                        ; preds = %for.body58
  %68 = load i32* %dir, align 4
  %idxprom61 = sext i32 %68 to i64
  %69 = load %struct.site** @lattice, align 8
  %arrayidx62 = getelementptr inbounds %struct.site* %69, i64 0
  %tempvec63 = getelementptr inbounds %struct.site* %arrayidx62, i32 0, i32 17
  %arrayidx64 = getelementptr inbounds [4 x %struct.su3_vector]* %tempvec63, i32 0, i64 %idxprom61
  %70 = bitcast %struct.su3_vector* %arrayidx64 to i8*
  %71 = load %struct.site** @lattice, align 8
  %arrayidx65 = getelementptr inbounds %struct.site* %71, i64 0
  %72 = bitcast %struct.site* %arrayidx65 to i8*
  %sub.ptr.lhs.cast = ptrtoint i8* %70 to i64
  %sub.ptr.rhs.cast = ptrtoint i8* %72 to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %conv = trunc i64 %sub.ptr.sub to i32
  %73 = load i32* %dir, align 4
  %sub = sub nsw i32 7, %73
  %74 = load i32* %parity.addr, align 4
  %75 = load i32* %dir, align 4
  %sub66 = sub nsw i32 7, %75
  %idxprom67 = sext i32 %sub66 to i64
  %arrayidx68 = getelementptr inbounds [16 x i8**]* @gen_pt, i32 0, i64 %idxprom67
  %76 = load i8*** %arrayidx68, align 8
  %call69 = call %struct.msg_tag* @start_gather(i32 %conv, i32 48, i32 %sub, i32 %74, i8** %76)
  %77 = load i32* %dir, align 4
  %sub70 = sub nsw i32 7, %77
  %idxprom71 = sext i32 %sub70 to i64
  %78 = load %struct.msg_tag*** %tag.addr, align 8
  %arrayidx72 = getelementptr inbounds %struct.msg_tag** %78, i64 %idxprom71
  store %struct.msg_tag* %call69, %struct.msg_tag** %arrayidx72, align 8
  br label %if.end90

if.else73:                                        ; preds = %for.body58
  %79 = load i32* %dir, align 4
  %idxprom74 = sext i32 %79 to i64
  %80 = load %struct.site** @lattice, align 8
  %arrayidx75 = getelementptr inbounds %struct.site* %80, i64 0
  %tempvec76 = getelementptr inbounds %struct.site* %arrayidx75, i32 0, i32 17
  %arrayidx77 = getelementptr inbounds [4 x %struct.su3_vector]* %tempvec76, i32 0, i64 %idxprom74
  %81 = bitcast %struct.su3_vector* %arrayidx77 to i8*
  %82 = load %struct.site** @lattice, align 8
  %arrayidx78 = getelementptr inbounds %struct.site* %82, i64 0
  %83 = bitcast %struct.site* %arrayidx78 to i8*
  %sub.ptr.lhs.cast79 = ptrtoint i8* %81 to i64
  %sub.ptr.rhs.cast80 = ptrtoint i8* %83 to i64
  %sub.ptr.sub81 = sub i64 %sub.ptr.lhs.cast79, %sub.ptr.rhs.cast80
  %conv82 = trunc i64 %sub.ptr.sub81 to i32
  %84 = load i32* %dir, align 4
  %sub83 = sub nsw i32 7, %84
  %85 = load i32* %parity.addr, align 4
  %86 = load i32* %dir, align 4
  %sub84 = sub nsw i32 7, %86
  %idxprom85 = sext i32 %sub84 to i64
  %arrayidx86 = getelementptr inbounds [16 x i8**]* @gen_pt, i32 0, i64 %idxprom85
  %87 = load i8*** %arrayidx86, align 8
  %88 = load i32* %dir, align 4
  %sub87 = sub nsw i32 7, %88
  %idxprom88 = sext i32 %sub87 to i64
  %89 = load %struct.msg_tag*** %tag.addr, align 8
  %arrayidx89 = getelementptr inbounds %struct.msg_tag** %89, i64 %idxprom88
  %90 = load %struct.msg_tag** %arrayidx89, align 8
  call void @restart_gather(i32 %conv82, i32 48, i32 %sub83, i32 %85, i8** %87, %struct.msg_tag* %90)
  br label %if.end90

if.end90:                                         ; preds = %if.else73, %if.then60
  br label %for.inc91

for.inc91:                                        ; preds = %if.end90
  %91 = load i32* %dir, align 4
  %inc92 = add nsw i32 %91, 1
  store i32 %inc92, i32* %dir, align 4
  br label %for.cond56

for.end93:                                        ; preds = %for.cond56
  store i32 8, i32* %dir, align 4
  br label %for.cond94

for.cond94:                                       ; preds = %for.inc138, %for.end93
  %92 = load i32* %dir, align 4
  %cmp95 = icmp sle i32 %92, 11
  br i1 %cmp95, label %for.body97, label %for.end140

for.body97:                                       ; preds = %for.cond94
  %93 = load i32* %start.addr, align 4
  %cmp98 = icmp eq i32 %93, 1
  br i1 %cmp98, label %if.then100, label %if.else119

if.then100:                                       ; preds = %for.body97
  %94 = load i32* %dir, align 4
  %sub101 = sub nsw i32 %94, 8
  %idxprom102 = sext i32 %sub101 to i64
  %95 = load %struct.site** @lattice, align 8
  %arrayidx103 = getelementptr inbounds %struct.site* %95, i64 0
  %templongvec104 = getelementptr inbounds %struct.site* %arrayidx103, i32 0, i32 18
  %arrayidx105 = getelementptr inbounds [4 x %struct.su3_vector]* %templongvec104, i32 0, i64 %idxprom102
  %96 = bitcast %struct.su3_vector* %arrayidx105 to i8*
  %97 = load %struct.site** @lattice, align 8
  %arrayidx106 = getelementptr inbounds %struct.site* %97, i64 0
  %98 = bitcast %struct.site* %arrayidx106 to i8*
  %sub.ptr.lhs.cast107 = ptrtoint i8* %96 to i64
  %sub.ptr.rhs.cast108 = ptrtoint i8* %98 to i64
  %sub.ptr.sub109 = sub i64 %sub.ptr.lhs.cast107, %sub.ptr.rhs.cast108
  %conv110 = trunc i64 %sub.ptr.sub109 to i32
  %99 = load i32* %dir, align 4
  %sub111 = sub nsw i32 23, %99
  %100 = load i32* %parity.addr, align 4
  %101 = load i32* %dir, align 4
  %sub112 = sub nsw i32 23, %101
  %idxprom113 = sext i32 %sub112 to i64
  %arrayidx114 = getelementptr inbounds [16 x i8**]* @gen_pt, i32 0, i64 %idxprom113
  %102 = load i8*** %arrayidx114, align 8
  %call115 = call %struct.msg_tag* @start_gather(i32 %conv110, i32 48, i32 %sub111, i32 %100, i8** %102)
  %103 = load i32* %dir, align 4
  %sub116 = sub nsw i32 23, %103
  %idxprom117 = sext i32 %sub116 to i64
  %104 = load %struct.msg_tag*** %tag.addr, align 8
  %arrayidx118 = getelementptr inbounds %struct.msg_tag** %104, i64 %idxprom117
  store %struct.msg_tag* %call115, %struct.msg_tag** %arrayidx118, align 8
  br label %if.end137

if.else119:                                       ; preds = %for.body97
  %105 = load i32* %dir, align 4
  %sub120 = sub nsw i32 %105, 8
  %idxprom121 = sext i32 %sub120 to i64
  %106 = load %struct.site** @lattice, align 8
  %arrayidx122 = getelementptr inbounds %struct.site* %106, i64 0
  %templongvec123 = getelementptr inbounds %struct.site* %arrayidx122, i32 0, i32 18
  %arrayidx124 = getelementptr inbounds [4 x %struct.su3_vector]* %templongvec123, i32 0, i64 %idxprom121
  %107 = bitcast %struct.su3_vector* %arrayidx124 to i8*
  %108 = load %struct.site** @lattice, align 8
  %arrayidx125 = getelementptr inbounds %struct.site* %108, i64 0
  %109 = bitcast %struct.site* %arrayidx125 to i8*
  %sub.ptr.lhs.cast126 = ptrtoint i8* %107 to i64
  %sub.ptr.rhs.cast127 = ptrtoint i8* %109 to i64
  %sub.ptr.sub128 = sub i64 %sub.ptr.lhs.cast126, %sub.ptr.rhs.cast127
  %conv129 = trunc i64 %sub.ptr.sub128 to i32
  %110 = load i32* %dir, align 4
  %sub130 = sub nsw i32 23, %110
  %111 = load i32* %parity.addr, align 4
  %112 = load i32* %dir, align 4
  %sub131 = sub nsw i32 23, %112
  %idxprom132 = sext i32 %sub131 to i64
  %arrayidx133 = getelementptr inbounds [16 x i8**]* @gen_pt, i32 0, i64 %idxprom132
  %113 = load i8*** %arrayidx133, align 8
  %114 = load i32* %dir, align 4
  %sub134 = sub nsw i32 23, %114
  %idxprom135 = sext i32 %sub134 to i64
  %115 = load %struct.msg_tag*** %tag.addr, align 8
  %arrayidx136 = getelementptr inbounds %struct.msg_tag** %115, i64 %idxprom135
  %116 = load %struct.msg_tag** %arrayidx136, align 8
  call void @restart_gather(i32 %conv129, i32 48, i32 %sub130, i32 %111, i8** %113, %struct.msg_tag* %116)
  br label %if.end137

if.end137:                                        ; preds = %if.else119, %if.then100
  br label %for.inc138

for.inc138:                                       ; preds = %if.end137
  %117 = load i32* %dir, align 4
  %inc139 = add nsw i32 %117, 1
  store i32 %inc139, i32* %dir, align 4
  br label %for.cond94

for.end140:                                       ; preds = %for.cond94
  store i32 0, i32* %dir, align 4
  br label %for.cond141

for.cond141:                                      ; preds = %for.inc147, %for.end140
  %118 = load i32* %dir, align 4
  %cmp142 = icmp sle i32 %118, 3
  br i1 %cmp142, label %for.body144, label %for.end149

for.body144:                                      ; preds = %for.cond141
  %119 = load i32* %dir, align 4
  %idxprom145 = sext i32 %119 to i64
  %120 = load %struct.msg_tag*** %tag.addr, align 8
  %arrayidx146 = getelementptr inbounds %struct.msg_tag** %120, i64 %idxprom145
  %121 = load %struct.msg_tag** %arrayidx146, align 8
  call void @wait_gather(%struct.msg_tag* %121)
  br label %for.inc147

for.inc147:                                       ; preds = %for.body144
  %122 = load i32* %dir, align 4
  %inc148 = add nsw i32 %122, 1
  store i32 %inc148, i32* %dir, align 4
  br label %for.cond141

for.end149:                                       ; preds = %for.cond141
  store i32 8, i32* %dir, align 4
  br label %for.cond150

for.cond150:                                      ; preds = %for.inc156, %for.end149
  %123 = load i32* %dir, align 4
  %cmp151 = icmp sle i32 %123, 11
  br i1 %cmp151, label %for.body153, label %for.end158

for.body153:                                      ; preds = %for.cond150
  %124 = load i32* %dir, align 4
  %idxprom154 = sext i32 %124 to i64
  %125 = load %struct.msg_tag*** %tag.addr, align 8
  %arrayidx155 = getelementptr inbounds %struct.msg_tag** %125, i64 %idxprom154
  %126 = load %struct.msg_tag** %arrayidx155, align 8
  call void @wait_gather(%struct.msg_tag* %126)
  br label %for.inc156

for.inc156:                                       ; preds = %for.body153
  %127 = load i32* %dir, align 4
  %inc157 = add nsw i32 %127, 1
  store i32 %inc157, i32* %dir, align 4
  br label %for.cond150

for.end158:                                       ; preds = %for.cond150
  store i32 0, i32* %dir, align 4
  br label %for.cond159

for.cond159:                                      ; preds = %for.inc166, %for.end158
  %128 = load i32* %dir, align 4
  %cmp160 = icmp sle i32 %128, 3
  br i1 %cmp160, label %for.body162, label %for.end168

for.body162:                                      ; preds = %for.cond159
  %129 = load i32* %dir, align 4
  %sub163 = sub nsw i32 7, %129
  %idxprom164 = sext i32 %sub163 to i64
  %130 = load %struct.msg_tag*** %tag.addr, align 8
  %arrayidx165 = getelementptr inbounds %struct.msg_tag** %130, i64 %idxprom164
  %131 = load %struct.msg_tag** %arrayidx165, align 8
  call void @wait_gather(%struct.msg_tag* %131)
  br label %for.inc166

for.inc166:                                       ; preds = %for.body162
  %132 = load i32* %dir, align 4
  %inc167 = add nsw i32 %132, 1
  store i32 %inc167, i32* %dir, align 4
  br label %for.cond159

for.end168:                                       ; preds = %for.cond159
  store i32 8, i32* %dir, align 4
  br label %for.cond169

for.cond169:                                      ; preds = %for.inc176, %for.end168
  %133 = load i32* %dir, align 4
  %cmp170 = icmp sle i32 %133, 11
  br i1 %cmp170, label %for.body172, label %for.end178

for.body172:                                      ; preds = %for.cond169
  %134 = load i32* %dir, align 4
  %sub173 = sub nsw i32 23, %134
  %idxprom174 = sext i32 %sub173 to i64
  %135 = load %struct.msg_tag*** %tag.addr, align 8
  %arrayidx175 = getelementptr inbounds %struct.msg_tag** %135, i64 %idxprom174
  %136 = load %struct.msg_tag** %arrayidx175, align 8
  call void @wait_gather(%struct.msg_tag* %136)
  br label %for.inc176

for.inc176:                                       ; preds = %for.body172
  %137 = load i32* %dir, align 4
  %inc177 = add nsw i32 %137, 1
  store i32 %inc177, i32* %dir, align 4
  br label %for.cond169

for.end178:                                       ; preds = %for.cond169
  %138 = load i32* %parity.addr, align 4
  %cmp180 = icmp eq i32 %138, 2
  br i1 %cmp180, label %cond.true182, label %cond.false183

cond.true182:                                     ; preds = %for.end178
  %139 = load i32* @even_sites_on_node, align 4
  br label %cond.end184

cond.false183:                                    ; preds = %for.end178
  %140 = load i32* @sites_on_node, align 4
  br label %cond.end184

cond.end184:                                      ; preds = %cond.false183, %cond.true182
  %cond185 = phi i32 [ %139, %cond.true182 ], [ %140, %cond.false183 ]
  store i32 %cond185, i32* %loopend179, align 4
  %141 = load i32* %parity.addr, align 4
  %cmp186 = icmp eq i32 %141, 1
  br i1 %cmp186, label %cond.true188, label %cond.false189

cond.true188:                                     ; preds = %cond.end184
  %142 = load i32* @even_sites_on_node, align 4
  br label %cond.end190

cond.false189:                                    ; preds = %cond.end184
  br label %cond.end190

cond.end190:                                      ; preds = %cond.false189, %cond.true188
  %cond191 = phi i32 [ %142, %cond.true188 ], [ 0, %cond.false189 ]
  store i32 %cond191, i32* %i, align 4
  %143 = load i32* %i, align 4
  %idxprom192 = sext i32 %143 to i64
  %144 = load %struct.site** @lattice, align 8
  %arrayidx193 = getelementptr inbounds %struct.site* %144, i64 %idxprom192
  store %struct.site* %arrayidx193, %struct.site** %s, align 8
  br label %for.cond194

for.cond194:                                      ; preds = %for.inc246, %cond.end190
  %145 = load i32* %i, align 4
  %146 = load i32* %loopend179, align 4
  %cmp195 = icmp slt i32 %145, %146
  br i1 %cmp195, label %for.body197, label %for.end249

for.body197:                                      ; preds = %for.cond194
  %147 = load i32* %i, align 4
  %mul198 = mul nsw i32 4, %147
  %idxprom199 = sext i32 %mul198 to i64
  %148 = load %struct.su3_matrix** @t_fatlink, align 8
  %arrayidx200 = getelementptr inbounds %struct.su3_matrix* %148, i64 %idxprom199
  store %struct.su3_matrix* %arrayidx200, %struct.su3_matrix** %fat4, align 8
  %149 = load i32* %i, align 4
  %mul201 = mul nsw i32 4, %149
  %idxprom202 = sext i32 %mul201 to i64
  %150 = load %struct.su3_matrix** @t_longlink, align 8
  %arrayidx203 = getelementptr inbounds %struct.su3_matrix* %150, i64 %idxprom202
  store %struct.su3_matrix* %arrayidx203, %struct.su3_matrix** %long4, align 8
  %151 = load %struct.su3_matrix** %fat4, align 8
  %152 = load i32* %i, align 4
  %idxprom204 = sext i32 %152 to i64
  %153 = load i8*** getelementptr inbounds ([16 x i8**]* @gen_pt, i32 0, i64 0), align 8
  %arrayidx205 = getelementptr inbounds i8** %153, i64 %idxprom204
  %154 = load i8** %arrayidx205, align 8
  %155 = bitcast i8* %154 to %struct.su3_vector*
  %156 = load i32* %i, align 4
  %idxprom206 = sext i32 %156 to i64
  %157 = load i8*** getelementptr inbounds ([16 x i8**]* @gen_pt, i32 0, i64 1), align 8
  %arrayidx207 = getelementptr inbounds i8** %157, i64 %idxprom206
  %158 = load i8** %arrayidx207, align 8
  %159 = bitcast i8* %158 to %struct.su3_vector*
  %160 = load i32* %i, align 4
  %idxprom208 = sext i32 %160 to i64
  %161 = load i8*** getelementptr inbounds ([16 x i8**]* @gen_pt, i32 0, i64 2), align 8
  %arrayidx209 = getelementptr inbounds i8** %161, i64 %idxprom208
  %162 = load i8** %arrayidx209, align 8
  %163 = bitcast i8* %162 to %struct.su3_vector*
  %164 = load i32* %i, align 4
  %idxprom210 = sext i32 %164 to i64
  %165 = load i8*** getelementptr inbounds ([16 x i8**]* @gen_pt, i32 0, i64 3), align 8
  %arrayidx211 = getelementptr inbounds i8** %165, i64 %idxprom210
  %166 = load i8** %arrayidx211, align 8
  %167 = bitcast i8* %166 to %struct.su3_vector*
  %168 = load %struct.site** %s, align 8
  %169 = bitcast %struct.site* %168 to i8*
  %170 = load i32* %dest.addr, align 4
  %idx.ext212 = sext i32 %170 to i64
  %add.ptr213 = getelementptr inbounds i8* %169, i64 %idx.ext212
  %171 = bitcast i8* %add.ptr213 to %struct.su3_vector*
  call void @mult_su3_mat_vec_sum_4dir(%struct.su3_matrix* %151, %struct.su3_vector* %155, %struct.su3_vector* %159, %struct.su3_vector* %163, %struct.su3_vector* %167, %struct.su3_vector* %171)
  %172 = load %struct.su3_matrix** %long4, align 8
  %173 = load i32* %i, align 4
  %idxprom214 = sext i32 %173 to i64
  %174 = load i8*** getelementptr inbounds ([16 x i8**]* @gen_pt, i32 0, i64 8), align 8
  %arrayidx215 = getelementptr inbounds i8** %174, i64 %idxprom214
  %175 = load i8** %arrayidx215, align 8
  %176 = bitcast i8* %175 to %struct.su3_vector*
  %177 = load i32* %i, align 4
  %idxprom216 = sext i32 %177 to i64
  %178 = load i8*** getelementptr inbounds ([16 x i8**]* @gen_pt, i32 0, i64 9), align 8
  %arrayidx217 = getelementptr inbounds i8** %178, i64 %idxprom216
  %179 = load i8** %arrayidx217, align 8
  %180 = bitcast i8* %179 to %struct.su3_vector*
  %181 = load i32* %i, align 4
  %idxprom218 = sext i32 %181 to i64
  %182 = load i8*** getelementptr inbounds ([16 x i8**]* @gen_pt, i32 0, i64 10), align 8
  %arrayidx219 = getelementptr inbounds i8** %182, i64 %idxprom218
  %183 = load i8** %arrayidx219, align 8
  %184 = bitcast i8* %183 to %struct.su3_vector*
  %185 = load i32* %i, align 4
  %idxprom220 = sext i32 %185 to i64
  %186 = load i8*** getelementptr inbounds ([16 x i8**]* @gen_pt, i32 0, i64 11), align 8
  %arrayidx221 = getelementptr inbounds i8** %186, i64 %idxprom220
  %187 = load i8** %arrayidx221, align 8
  %188 = bitcast i8* %187 to %struct.su3_vector*
  %189 = load %struct.site** %s, align 8
  %templongv1 = getelementptr inbounds %struct.site* %189, i32 0, i32 19
  call void @mult_su3_mat_vec_sum_4dir(%struct.su3_matrix* %172, %struct.su3_vector* %176, %struct.su3_vector* %180, %struct.su3_vector* %184, %struct.su3_vector* %188, %struct.su3_vector* %templongv1)
  %190 = load %struct.site** %s, align 8
  %191 = bitcast %struct.site* %190 to i8*
  %192 = load i32* %dest.addr, align 4
  %idx.ext222 = sext i32 %192 to i64
  %add.ptr223 = getelementptr inbounds i8* %191, i64 %idx.ext222
  %193 = bitcast i8* %add.ptr223 to %struct.su3_vector*
  %194 = load i32* %i, align 4
  %idxprom224 = sext i32 %194 to i64
  %195 = load i8*** getelementptr inbounds ([16 x i8**]* @gen_pt, i32 0, i64 7), align 8
  %arrayidx225 = getelementptr inbounds i8** %195, i64 %idxprom224
  %196 = load i8** %arrayidx225, align 8
  %197 = bitcast i8* %196 to %struct.su3_vector*
  %198 = load i32* %i, align 4
  %idxprom226 = sext i32 %198 to i64
  %199 = load i8*** getelementptr inbounds ([16 x i8**]* @gen_pt, i32 0, i64 6), align 8
  %arrayidx227 = getelementptr inbounds i8** %199, i64 %idxprom226
  %200 = load i8** %arrayidx227, align 8
  %201 = bitcast i8* %200 to %struct.su3_vector*
  %202 = load i32* %i, align 4
  %idxprom228 = sext i32 %202 to i64
  %203 = load i8*** getelementptr inbounds ([16 x i8**]* @gen_pt, i32 0, i64 5), align 8
  %arrayidx229 = getelementptr inbounds i8** %203, i64 %idxprom228
  %204 = load i8** %arrayidx229, align 8
  %205 = bitcast i8* %204 to %struct.su3_vector*
  %206 = load i32* %i, align 4
  %idxprom230 = sext i32 %206 to i64
  %207 = load i8*** getelementptr inbounds ([16 x i8**]* @gen_pt, i32 0, i64 4), align 8
  %arrayidx231 = getelementptr inbounds i8** %207, i64 %idxprom230
  %208 = load i8** %arrayidx231, align 8
  %209 = bitcast i8* %208 to %struct.su3_vector*
  call void @sub_four_su3_vecs(%struct.su3_vector* %193, %struct.su3_vector* %197, %struct.su3_vector* %201, %struct.su3_vector* %205, %struct.su3_vector* %209)
  %210 = load %struct.site** %s, align 8
  %templongv1232 = getelementptr inbounds %struct.site* %210, i32 0, i32 19
  %211 = load i32* %i, align 4
  %idxprom233 = sext i32 %211 to i64
  %212 = load i8*** getelementptr inbounds ([16 x i8**]* @gen_pt, i32 0, i64 15), align 8
  %arrayidx234 = getelementptr inbounds i8** %212, i64 %idxprom233
  %213 = load i8** %arrayidx234, align 8
  %214 = bitcast i8* %213 to %struct.su3_vector*
  %215 = load i32* %i, align 4
  %idxprom235 = sext i32 %215 to i64
  %216 = load i8*** getelementptr inbounds ([16 x i8**]* @gen_pt, i32 0, i64 14), align 8
  %arrayidx236 = getelementptr inbounds i8** %216, i64 %idxprom235
  %217 = load i8** %arrayidx236, align 8
  %218 = bitcast i8* %217 to %struct.su3_vector*
  %219 = load i32* %i, align 4
  %idxprom237 = sext i32 %219 to i64
  %220 = load i8*** getelementptr inbounds ([16 x i8**]* @gen_pt, i32 0, i64 13), align 8
  %arrayidx238 = getelementptr inbounds i8** %220, i64 %idxprom237
  %221 = load i8** %arrayidx238, align 8
  %222 = bitcast i8* %221 to %struct.su3_vector*
  %223 = load i32* %i, align 4
  %idxprom239 = sext i32 %223 to i64
  %224 = load i8*** getelementptr inbounds ([16 x i8**]* @gen_pt, i32 0, i64 12), align 8
  %arrayidx240 = getelementptr inbounds i8** %224, i64 %idxprom239
  %225 = load i8** %arrayidx240, align 8
  %226 = bitcast i8* %225 to %struct.su3_vector*
  call void @sub_four_su3_vecs(%struct.su3_vector* %templongv1232, %struct.su3_vector* %214, %struct.su3_vector* %218, %struct.su3_vector* %222, %struct.su3_vector* %226)
  %227 = load %struct.site** %s, align 8
  %228 = bitcast %struct.site* %227 to i8*
  %229 = load i32* %dest.addr, align 4
  %idx.ext241 = sext i32 %229 to i64
  %add.ptr242 = getelementptr inbounds i8* %228, i64 %idx.ext241
  %230 = bitcast i8* %add.ptr242 to %struct.su3_vector*
  %231 = load %struct.site** %s, align 8
  %templongv1243 = getelementptr inbounds %struct.site* %231, i32 0, i32 19
  %232 = load %struct.site** %s, align 8
  %233 = bitcast %struct.site* %232 to i8*
  %234 = load i32* %dest.addr, align 4
  %idx.ext244 = sext i32 %234 to i64
  %add.ptr245 = getelementptr inbounds i8* %233, i64 %idx.ext244
  %235 = bitcast i8* %add.ptr245 to %struct.su3_vector*
  call void @add_su3_vector(%struct.su3_vector* %230, %struct.su3_vector* %templongv1243, %struct.su3_vector* %235)
  br label %for.inc246

for.inc246:                                       ; preds = %for.body197
  %236 = load i32* %i, align 4
  %inc247 = add nsw i32 %236, 1
  store i32 %inc247, i32* %i, align 4
  %237 = load %struct.site** %s, align 8
  %incdec.ptr248 = getelementptr inbounds %struct.site* %237, i32 1
  store %struct.site* %incdec.ptr248, %struct.site** %s, align 8
  br label %for.cond194

for.end249:                                       ; preds = %for.cond194
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @dslash_fn_on_temp(%struct.su3_vector* %src, %struct.su3_vector* %dest, i32 %parity) #0 {
entry:
  %src.addr = alloca %struct.su3_vector*, align 8
  %dest.addr = alloca %struct.su3_vector*, align 8
  %parity.addr = alloca i32, align 4
  %i = alloca i32, align 4
  %s = alloca %struct.site*, align 8
  %dir = alloca i32, align 4
  %otherparity = alloca i32, align 4
  %tag = alloca [16 x %struct.msg_tag*], align 16
  %tempvec = alloca [4 x %struct.su3_vector*], align 16
  %templongvec = alloca [4 x %struct.su3_vector*], align 16
  %templongv1 = alloca %struct.su3_vector*, align 8
  %fat4 = alloca %struct.su3_matrix*, align 8
  %long4 = alloca %struct.su3_matrix*, align 8
  %loopend = alloca i32, align 4
  %loopend127 = alloca i32, align 4
  %loopend196 = alloca i32, align 4
  store %struct.su3_vector* %src, %struct.su3_vector** %src.addr, align 8
  store %struct.su3_vector* %dest, %struct.su3_vector** %dest.addr, align 8
  store i32 %parity, i32* %parity.addr, align 4
  store i32 0, i32* %dir, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32* %dir, align 4
  %cmp = icmp sle i32 %0, 3
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %1 = load i32* @sites_on_node, align 4
  %conv = sext i32 %1 to i64
  %call = call noalias i8* @calloc(i64 %conv, i64 48) #2
  %2 = bitcast i8* %call to %struct.su3_vector*
  %3 = load i32* %dir, align 4
  %idxprom = sext i32 %3 to i64
  %arrayidx = getelementptr inbounds [4 x %struct.su3_vector*]* %tempvec, i32 0, i64 %idxprom
  store %struct.su3_vector* %2, %struct.su3_vector** %arrayidx, align 8
  %4 = load i32* @sites_on_node, align 4
  %conv1 = sext i32 %4 to i64
  %call2 = call noalias i8* @calloc(i64 %conv1, i64 48) #2
  %5 = bitcast i8* %call2 to %struct.su3_vector*
  %6 = load i32* %dir, align 4
  %idxprom3 = sext i32 %6 to i64
  %arrayidx4 = getelementptr inbounds [4 x %struct.su3_vector*]* %templongvec, i32 0, i64 %idxprom3
  store %struct.su3_vector* %5, %struct.su3_vector** %arrayidx4, align 8
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %7 = load i32* %dir, align 4
  %inc = add nsw i32 %7, 1
  store i32 %inc, i32* %dir, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %8 = load i32* @sites_on_node, align 4
  %conv5 = sext i32 %8 to i64
  %call6 = call noalias i8* @calloc(i64 %conv5, i64 48) #2
  %9 = bitcast i8* %call6 to %struct.su3_vector*
  store %struct.su3_vector* %9, %struct.su3_vector** %templongv1, align 8
  %10 = load i32* @valid_longlinks, align 4
  %tobool = icmp ne i32 %10, 0
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %for.end
  call void (...)* bitcast (void ()* @load_longlinks to void (...)*)()
  br label %if.end

if.end:                                           ; preds = %if.then, %for.end
  %11 = load i32* @valid_fatlinks, align 4
  %tobool7 = icmp ne i32 %11, 0
  br i1 %tobool7, label %if.end9, label %if.then8

if.then8:                                         ; preds = %if.end
  call void (...)* bitcast (void ()* @load_fatlinks to void (...)*)()
  br label %if.end9

if.end9:                                          ; preds = %if.then8, %if.end
  %12 = load i32* %parity.addr, align 4
  switch i32 %12, label %sw.epilog [
    i32 2, label %sw.bb
    i32 1, label %sw.bb10
    i32 3, label %sw.bb11
  ]

sw.bb:                                            ; preds = %if.end9
  store i32 1, i32* %otherparity, align 4
  br label %sw.epilog

sw.bb10:                                          ; preds = %if.end9
  store i32 2, i32* %otherparity, align 4
  br label %sw.epilog

sw.bb11:                                          ; preds = %if.end9
  store i32 3, i32* %otherparity, align 4
  br label %sw.epilog

sw.epilog:                                        ; preds = %sw.bb11, %sw.bb10, %sw.bb, %if.end9
  store i32 0, i32* %dir, align 4
  br label %for.cond12

for.cond12:                                       ; preds = %for.inc28, %sw.epilog
  %13 = load i32* %dir, align 4
  %cmp13 = icmp sle i32 %13, 3
  br i1 %cmp13, label %for.body15, label %for.end30

for.body15:                                       ; preds = %for.cond12
  %14 = load %struct.su3_vector** %src.addr, align 8
  %15 = bitcast %struct.su3_vector* %14 to i8*
  %16 = load i32* %dir, align 4
  %17 = load i32* %parity.addr, align 4
  %18 = load i32* %dir, align 4
  %idxprom16 = sext i32 %18 to i64
  %arrayidx17 = getelementptr inbounds [16 x i8**]* @gen_pt, i32 0, i64 %idxprom16
  %19 = load i8*** %arrayidx17, align 8
  %call18 = call %struct.msg_tag* @start_gather_from_temp(i8* %15, i32 48, i32 %16, i32 %17, i8** %19)
  %20 = load i32* %dir, align 4
  %idxprom19 = sext i32 %20 to i64
  %arrayidx20 = getelementptr inbounds [16 x %struct.msg_tag*]* %tag, i32 0, i64 %idxprom19
  store %struct.msg_tag* %call18, %struct.msg_tag** %arrayidx20, align 8
  %21 = load %struct.su3_vector** %src.addr, align 8
  %22 = bitcast %struct.su3_vector* %21 to i8*
  %23 = load i32* %dir, align 4
  %add = add nsw i32 %23, 8
  %24 = load i32* %parity.addr, align 4
  %25 = load i32* %dir, align 4
  %add21 = add nsw i32 %25, 8
  %idxprom22 = sext i32 %add21 to i64
  %arrayidx23 = getelementptr inbounds [16 x i8**]* @gen_pt, i32 0, i64 %idxprom22
  %26 = load i8*** %arrayidx23, align 8
  %call24 = call %struct.msg_tag* @start_gather_from_temp(i8* %22, i32 48, i32 %add, i32 %24, i8** %26)
  %27 = load i32* %dir, align 4
  %add25 = add nsw i32 %27, 8
  %idxprom26 = sext i32 %add25 to i64
  %arrayidx27 = getelementptr inbounds [16 x %struct.msg_tag*]* %tag, i32 0, i64 %idxprom26
  store %struct.msg_tag* %call24, %struct.msg_tag** %arrayidx27, align 8
  br label %for.inc28

for.inc28:                                        ; preds = %for.body15
  %28 = load i32* %dir, align 4
  %inc29 = add nsw i32 %28, 1
  store i32 %inc29, i32* %dir, align 4
  br label %for.cond12

for.end30:                                        ; preds = %for.cond12
  %29 = load i32* %otherparity, align 4
  %cmp31 = icmp eq i32 %29, 2
  br i1 %cmp31, label %cond.true, label %cond.false

cond.true:                                        ; preds = %for.end30
  %30 = load i32* @even_sites_on_node, align 4
  br label %cond.end

cond.false:                                       ; preds = %for.end30
  %31 = load i32* @sites_on_node, align 4
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %30, %cond.true ], [ %31, %cond.false ]
  store i32 %cond, i32* %loopend, align 4
  %32 = load i32* %otherparity, align 4
  %cmp33 = icmp eq i32 %32, 1
  br i1 %cmp33, label %cond.true35, label %cond.false36

cond.true35:                                      ; preds = %cond.end
  %33 = load i32* @even_sites_on_node, align 4
  br label %cond.end37

cond.false36:                                     ; preds = %cond.end
  br label %cond.end37

cond.end37:                                       ; preds = %cond.false36, %cond.true35
  %cond38 = phi i32 [ %33, %cond.true35 ], [ 0, %cond.false36 ]
  store i32 %cond38, i32* %i, align 4
  %34 = load i32* %i, align 4
  %idxprom39 = sext i32 %34 to i64
  %35 = load %struct.site** @lattice, align 8
  %arrayidx40 = getelementptr inbounds %struct.site* %35, i64 %idxprom39
  store %struct.site* %arrayidx40, %struct.site** %s, align 8
  br label %for.cond41

for.cond41:                                       ; preds = %for.inc78, %cond.end37
  %36 = load i32* %i, align 4
  %37 = load i32* %loopend, align 4
  %cmp42 = icmp slt i32 %36, %37
  br i1 %cmp42, label %for.body44, label %for.end80

for.body44:                                       ; preds = %for.cond41
  %38 = load i32* %i, align 4
  %mul = mul nsw i32 4, %38
  %idxprom45 = sext i32 %mul to i64
  %39 = load %struct.su3_matrix** @t_fatlink, align 8
  %arrayidx46 = getelementptr inbounds %struct.su3_matrix* %39, i64 %idxprom45
  store %struct.su3_matrix* %arrayidx46, %struct.su3_matrix** %fat4, align 8
  %40 = load i32* %i, align 4
  %mul47 = mul nsw i32 4, %40
  %idxprom48 = sext i32 %mul47 to i64
  %41 = load %struct.su3_matrix** @t_longlink, align 8
  %arrayidx49 = getelementptr inbounds %struct.su3_matrix* %41, i64 %idxprom48
  store %struct.su3_matrix* %arrayidx49, %struct.su3_matrix** %long4, align 8
  %42 = load %struct.su3_matrix** %fat4, align 8
  %43 = load i32* %i, align 4
  %idxprom50 = sext i32 %43 to i64
  %44 = load %struct.su3_vector** %src.addr, align 8
  %arrayidx51 = getelementptr inbounds %struct.su3_vector* %44, i64 %idxprom50
  %45 = load i32* %i, align 4
  %idxprom52 = sext i32 %45 to i64
  %arrayidx53 = getelementptr inbounds [4 x %struct.su3_vector*]* %tempvec, i32 0, i64 0
  %46 = load %struct.su3_vector** %arrayidx53, align 8
  %arrayidx54 = getelementptr inbounds %struct.su3_vector* %46, i64 %idxprom52
  %47 = load i32* %i, align 4
  %idxprom55 = sext i32 %47 to i64
  %arrayidx56 = getelementptr inbounds [4 x %struct.su3_vector*]* %tempvec, i32 0, i64 1
  %48 = load %struct.su3_vector** %arrayidx56, align 8
  %arrayidx57 = getelementptr inbounds %struct.su3_vector* %48, i64 %idxprom55
  %49 = load i32* %i, align 4
  %idxprom58 = sext i32 %49 to i64
  %arrayidx59 = getelementptr inbounds [4 x %struct.su3_vector*]* %tempvec, i32 0, i64 2
  %50 = load %struct.su3_vector** %arrayidx59, align 8
  %arrayidx60 = getelementptr inbounds %struct.su3_vector* %50, i64 %idxprom58
  %51 = load i32* %i, align 4
  %idxprom61 = sext i32 %51 to i64
  %arrayidx62 = getelementptr inbounds [4 x %struct.su3_vector*]* %tempvec, i32 0, i64 3
  %52 = load %struct.su3_vector** %arrayidx62, align 8
  %arrayidx63 = getelementptr inbounds %struct.su3_vector* %52, i64 %idxprom61
  call void @mult_adj_su3_mat_4vec(%struct.su3_matrix* %42, %struct.su3_vector* %arrayidx51, %struct.su3_vector* %arrayidx54, %struct.su3_vector* %arrayidx57, %struct.su3_vector* %arrayidx60, %struct.su3_vector* %arrayidx63)
  %53 = load %struct.su3_matrix** %long4, align 8
  %54 = load i32* %i, align 4
  %idxprom64 = sext i32 %54 to i64
  %55 = load %struct.su3_vector** %src.addr, align 8
  %arrayidx65 = getelementptr inbounds %struct.su3_vector* %55, i64 %idxprom64
  %56 = load i32* %i, align 4
  %idxprom66 = sext i32 %56 to i64
  %arrayidx67 = getelementptr inbounds [4 x %struct.su3_vector*]* %templongvec, i32 0, i64 0
  %57 = load %struct.su3_vector** %arrayidx67, align 8
  %arrayidx68 = getelementptr inbounds %struct.su3_vector* %57, i64 %idxprom66
  %58 = load i32* %i, align 4
  %idxprom69 = sext i32 %58 to i64
  %arrayidx70 = getelementptr inbounds [4 x %struct.su3_vector*]* %templongvec, i32 0, i64 1
  %59 = load %struct.su3_vector** %arrayidx70, align 8
  %arrayidx71 = getelementptr inbounds %struct.su3_vector* %59, i64 %idxprom69
  %60 = load i32* %i, align 4
  %idxprom72 = sext i32 %60 to i64
  %arrayidx73 = getelementptr inbounds [4 x %struct.su3_vector*]* %templongvec, i32 0, i64 2
  %61 = load %struct.su3_vector** %arrayidx73, align 8
  %arrayidx74 = getelementptr inbounds %struct.su3_vector* %61, i64 %idxprom72
  %62 = load i32* %i, align 4
  %idxprom75 = sext i32 %62 to i64
  %arrayidx76 = getelementptr inbounds [4 x %struct.su3_vector*]* %templongvec, i32 0, i64 3
  %63 = load %struct.su3_vector** %arrayidx76, align 8
  %arrayidx77 = getelementptr inbounds %struct.su3_vector* %63, i64 %idxprom75
  call void @mult_adj_su3_mat_4vec(%struct.su3_matrix* %53, %struct.su3_vector* %arrayidx65, %struct.su3_vector* %arrayidx68, %struct.su3_vector* %arrayidx71, %struct.su3_vector* %arrayidx74, %struct.su3_vector* %arrayidx77)
  br label %for.inc78

for.inc78:                                        ; preds = %for.body44
  %64 = load i32* %i, align 4
  %inc79 = add nsw i32 %64, 1
  store i32 %inc79, i32* %i, align 4
  %65 = load %struct.site** %s, align 8
  %incdec.ptr = getelementptr inbounds %struct.site* %65, i32 1
  store %struct.site* %incdec.ptr, %struct.site** %s, align 8
  br label %for.cond41

for.end80:                                        ; preds = %for.cond41
  store i32 0, i32* %dir, align 4
  br label %for.cond81

for.cond81:                                       ; preds = %for.inc94, %for.end80
  %66 = load i32* %dir, align 4
  %cmp82 = icmp sle i32 %66, 3
  br i1 %cmp82, label %for.body84, label %for.end96

for.body84:                                       ; preds = %for.cond81
  %67 = load i32* %dir, align 4
  %idxprom85 = sext i32 %67 to i64
  %arrayidx86 = getelementptr inbounds [4 x %struct.su3_vector*]* %tempvec, i32 0, i64 %idxprom85
  %68 = load %struct.su3_vector** %arrayidx86, align 8
  %69 = bitcast %struct.su3_vector* %68 to i8*
  %70 = load i32* %dir, align 4
  %sub = sub nsw i32 7, %70
  %71 = load i32* %parity.addr, align 4
  %72 = load i32* %dir, align 4
  %sub87 = sub nsw i32 7, %72
  %idxprom88 = sext i32 %sub87 to i64
  %arrayidx89 = getelementptr inbounds [16 x i8**]* @gen_pt, i32 0, i64 %idxprom88
  %73 = load i8*** %arrayidx89, align 8
  %call90 = call %struct.msg_tag* @start_gather_from_temp(i8* %69, i32 48, i32 %sub, i32 %71, i8** %73)
  %74 = load i32* %dir, align 4
  %sub91 = sub nsw i32 7, %74
  %idxprom92 = sext i32 %sub91 to i64
  %arrayidx93 = getelementptr inbounds [16 x %struct.msg_tag*]* %tag, i32 0, i64 %idxprom92
  store %struct.msg_tag* %call90, %struct.msg_tag** %arrayidx93, align 8
  br label %for.inc94

for.inc94:                                        ; preds = %for.body84
  %75 = load i32* %dir, align 4
  %inc95 = add nsw i32 %75, 1
  store i32 %inc95, i32* %dir, align 4
  br label %for.cond81

for.end96:                                        ; preds = %for.cond81
  store i32 8, i32* %dir, align 4
  br label %for.cond97

for.cond97:                                       ; preds = %for.inc112, %for.end96
  %76 = load i32* %dir, align 4
  %cmp98 = icmp sle i32 %76, 11
  br i1 %cmp98, label %for.body100, label %for.end114

for.body100:                                      ; preds = %for.cond97
  %77 = load i32* %dir, align 4
  %sub101 = sub nsw i32 %77, 8
  %idxprom102 = sext i32 %sub101 to i64
  %arrayidx103 = getelementptr inbounds [4 x %struct.su3_vector*]* %templongvec, i32 0, i64 %idxprom102
  %78 = load %struct.su3_vector** %arrayidx103, align 8
  %79 = bitcast %struct.su3_vector* %78 to i8*
  %80 = load i32* %dir, align 4
  %sub104 = sub nsw i32 23, %80
  %81 = load i32* %parity.addr, align 4
  %82 = load i32* %dir, align 4
  %sub105 = sub nsw i32 23, %82
  %idxprom106 = sext i32 %sub105 to i64
  %arrayidx107 = getelementptr inbounds [16 x i8**]* @gen_pt, i32 0, i64 %idxprom106
  %83 = load i8*** %arrayidx107, align 8
  %call108 = call %struct.msg_tag* @start_gather_from_temp(i8* %79, i32 48, i32 %sub104, i32 %81, i8** %83)
  %84 = load i32* %dir, align 4
  %sub109 = sub nsw i32 23, %84
  %idxprom110 = sext i32 %sub109 to i64
  %arrayidx111 = getelementptr inbounds [16 x %struct.msg_tag*]* %tag, i32 0, i64 %idxprom110
  store %struct.msg_tag* %call108, %struct.msg_tag** %arrayidx111, align 8
  br label %for.inc112

for.inc112:                                       ; preds = %for.body100
  %85 = load i32* %dir, align 4
  %inc113 = add nsw i32 %85, 1
  store i32 %inc113, i32* %dir, align 4
  br label %for.cond97

for.end114:                                       ; preds = %for.cond97
  store i32 0, i32* %dir, align 4
  br label %for.cond115

for.cond115:                                      ; preds = %for.inc124, %for.end114
  %86 = load i32* %dir, align 4
  %cmp116 = icmp sle i32 %86, 3
  br i1 %cmp116, label %for.body118, label %for.end126

for.body118:                                      ; preds = %for.cond115
  %87 = load i32* %dir, align 4
  %idxprom119 = sext i32 %87 to i64
  %arrayidx120 = getelementptr inbounds [16 x %struct.msg_tag*]* %tag, i32 0, i64 %idxprom119
  %88 = load %struct.msg_tag** %arrayidx120, align 8
  call void @wait_gather(%struct.msg_tag* %88)
  %89 = load i32* %dir, align 4
  %add121 = add nsw i32 %89, 8
  %idxprom122 = sext i32 %add121 to i64
  %arrayidx123 = getelementptr inbounds [16 x %struct.msg_tag*]* %tag, i32 0, i64 %idxprom122
  %90 = load %struct.msg_tag** %arrayidx123, align 8
  call void @wait_gather(%struct.msg_tag* %90)
  br label %for.inc124

for.inc124:                                       ; preds = %for.body118
  %91 = load i32* %dir, align 4
  %inc125 = add nsw i32 %91, 1
  store i32 %inc125, i32* %dir, align 4
  br label %for.cond115

for.end126:                                       ; preds = %for.cond115
  %92 = load i32* %parity.addr, align 4
  %cmp128 = icmp eq i32 %92, 2
  br i1 %cmp128, label %cond.true130, label %cond.false131

cond.true130:                                     ; preds = %for.end126
  %93 = load i32* @even_sites_on_node, align 4
  br label %cond.end132

cond.false131:                                    ; preds = %for.end126
  %94 = load i32* @sites_on_node, align 4
  br label %cond.end132

cond.end132:                                      ; preds = %cond.false131, %cond.true130
  %cond133 = phi i32 [ %93, %cond.true130 ], [ %94, %cond.false131 ]
  store i32 %cond133, i32* %loopend127, align 4
  %95 = load i32* %parity.addr, align 4
  %cmp134 = icmp eq i32 %95, 1
  br i1 %cmp134, label %cond.true136, label %cond.false137

cond.true136:                                     ; preds = %cond.end132
  %96 = load i32* @even_sites_on_node, align 4
  br label %cond.end138

cond.false137:                                    ; preds = %cond.end132
  br label %cond.end138

cond.end138:                                      ; preds = %cond.false137, %cond.true136
  %cond139 = phi i32 [ %96, %cond.true136 ], [ 0, %cond.false137 ]
  store i32 %cond139, i32* %i, align 4
  %97 = load i32* %i, align 4
  %idxprom140 = sext i32 %97 to i64
  %98 = load %struct.site** @lattice, align 8
  %arrayidx141 = getelementptr inbounds %struct.site* %98, i64 %idxprom140
  store %struct.site* %arrayidx141, %struct.site** %s, align 8
  br label %for.cond142

for.cond142:                                      ; preds = %for.inc172, %cond.end138
  %99 = load i32* %i, align 4
  %100 = load i32* %loopend127, align 4
  %cmp143 = icmp slt i32 %99, %100
  br i1 %cmp143, label %for.body145, label %for.end175

for.body145:                                      ; preds = %for.cond142
  %101 = load i32* %i, align 4
  %mul146 = mul nsw i32 4, %101
  %idxprom147 = sext i32 %mul146 to i64
  %102 = load %struct.su3_matrix** @t_fatlink, align 8
  %arrayidx148 = getelementptr inbounds %struct.su3_matrix* %102, i64 %idxprom147
  store %struct.su3_matrix* %arrayidx148, %struct.su3_matrix** %fat4, align 8
  %103 = load i32* %i, align 4
  %mul149 = mul nsw i32 4, %103
  %idxprom150 = sext i32 %mul149 to i64
  %104 = load %struct.su3_matrix** @t_longlink, align 8
  %arrayidx151 = getelementptr inbounds %struct.su3_matrix* %104, i64 %idxprom150
  store %struct.su3_matrix* %arrayidx151, %struct.su3_matrix** %long4, align 8
  %105 = load %struct.su3_matrix** %fat4, align 8
  %106 = load i32* %i, align 4
  %idxprom152 = sext i32 %106 to i64
  %107 = load i8*** getelementptr inbounds ([16 x i8**]* @gen_pt, i32 0, i64 0), align 8
  %arrayidx153 = getelementptr inbounds i8** %107, i64 %idxprom152
  %108 = load i8** %arrayidx153, align 8
  %109 = bitcast i8* %108 to %struct.su3_vector*
  %110 = load i32* %i, align 4
  %idxprom154 = sext i32 %110 to i64
  %111 = load i8*** getelementptr inbounds ([16 x i8**]* @gen_pt, i32 0, i64 1), align 8
  %arrayidx155 = getelementptr inbounds i8** %111, i64 %idxprom154
  %112 = load i8** %arrayidx155, align 8
  %113 = bitcast i8* %112 to %struct.su3_vector*
  %114 = load i32* %i, align 4
  %idxprom156 = sext i32 %114 to i64
  %115 = load i8*** getelementptr inbounds ([16 x i8**]* @gen_pt, i32 0, i64 2), align 8
  %arrayidx157 = getelementptr inbounds i8** %115, i64 %idxprom156
  %116 = load i8** %arrayidx157, align 8
  %117 = bitcast i8* %116 to %struct.su3_vector*
  %118 = load i32* %i, align 4
  %idxprom158 = sext i32 %118 to i64
  %119 = load i8*** getelementptr inbounds ([16 x i8**]* @gen_pt, i32 0, i64 3), align 8
  %arrayidx159 = getelementptr inbounds i8** %119, i64 %idxprom158
  %120 = load i8** %arrayidx159, align 8
  %121 = bitcast i8* %120 to %struct.su3_vector*
  %122 = load i32* %i, align 4
  %idxprom160 = sext i32 %122 to i64
  %123 = load %struct.su3_vector** %dest.addr, align 8
  %arrayidx161 = getelementptr inbounds %struct.su3_vector* %123, i64 %idxprom160
  call void @mult_su3_mat_vec_sum_4dir(%struct.su3_matrix* %105, %struct.su3_vector* %109, %struct.su3_vector* %113, %struct.su3_vector* %117, %struct.su3_vector* %121, %struct.su3_vector* %arrayidx161)
  %124 = load %struct.su3_matrix** %long4, align 8
  %125 = load i32* %i, align 4
  %idxprom162 = sext i32 %125 to i64
  %126 = load i8*** getelementptr inbounds ([16 x i8**]* @gen_pt, i32 0, i64 8), align 8
  %arrayidx163 = getelementptr inbounds i8** %126, i64 %idxprom162
  %127 = load i8** %arrayidx163, align 8
  %128 = bitcast i8* %127 to %struct.su3_vector*
  %129 = load i32* %i, align 4
  %idxprom164 = sext i32 %129 to i64
  %130 = load i8*** getelementptr inbounds ([16 x i8**]* @gen_pt, i32 0, i64 9), align 8
  %arrayidx165 = getelementptr inbounds i8** %130, i64 %idxprom164
  %131 = load i8** %arrayidx165, align 8
  %132 = bitcast i8* %131 to %struct.su3_vector*
  %133 = load i32* %i, align 4
  %idxprom166 = sext i32 %133 to i64
  %134 = load i8*** getelementptr inbounds ([16 x i8**]* @gen_pt, i32 0, i64 10), align 8
  %arrayidx167 = getelementptr inbounds i8** %134, i64 %idxprom166
  %135 = load i8** %arrayidx167, align 8
  %136 = bitcast i8* %135 to %struct.su3_vector*
  %137 = load i32* %i, align 4
  %idxprom168 = sext i32 %137 to i64
  %138 = load i8*** getelementptr inbounds ([16 x i8**]* @gen_pt, i32 0, i64 11), align 8
  %arrayidx169 = getelementptr inbounds i8** %138, i64 %idxprom168
  %139 = load i8** %arrayidx169, align 8
  %140 = bitcast i8* %139 to %struct.su3_vector*
  %141 = load i32* %i, align 4
  %idxprom170 = sext i32 %141 to i64
  %142 = load %struct.su3_vector** %templongv1, align 8
  %arrayidx171 = getelementptr inbounds %struct.su3_vector* %142, i64 %idxprom170
  call void @mult_su3_mat_vec_sum_4dir(%struct.su3_matrix* %124, %struct.su3_vector* %128, %struct.su3_vector* %132, %struct.su3_vector* %136, %struct.su3_vector* %140, %struct.su3_vector* %arrayidx171)
  br label %for.inc172

for.inc172:                                       ; preds = %for.body145
  %143 = load i32* %i, align 4
  %inc173 = add nsw i32 %143, 1
  store i32 %inc173, i32* %i, align 4
  %144 = load %struct.site** %s, align 8
  %incdec.ptr174 = getelementptr inbounds %struct.site* %144, i32 1
  store %struct.site* %incdec.ptr174, %struct.site** %s, align 8
  br label %for.cond142

for.end175:                                       ; preds = %for.cond142
  store i32 0, i32* %dir, align 4
  br label %for.cond176

for.cond176:                                      ; preds = %for.inc183, %for.end175
  %145 = load i32* %dir, align 4
  %cmp177 = icmp sle i32 %145, 3
  br i1 %cmp177, label %for.body179, label %for.end185

for.body179:                                      ; preds = %for.cond176
  %146 = load i32* %dir, align 4
  %sub180 = sub nsw i32 7, %146
  %idxprom181 = sext i32 %sub180 to i64
  %arrayidx182 = getelementptr inbounds [16 x %struct.msg_tag*]* %tag, i32 0, i64 %idxprom181
  %147 = load %struct.msg_tag** %arrayidx182, align 8
  call void @wait_gather(%struct.msg_tag* %147)
  br label %for.inc183

for.inc183:                                       ; preds = %for.body179
  %148 = load i32* %dir, align 4
  %inc184 = add nsw i32 %148, 1
  store i32 %inc184, i32* %dir, align 4
  br label %for.cond176

for.end185:                                       ; preds = %for.cond176
  store i32 8, i32* %dir, align 4
  br label %for.cond186

for.cond186:                                      ; preds = %for.inc193, %for.end185
  %149 = load i32* %dir, align 4
  %cmp187 = icmp sle i32 %149, 11
  br i1 %cmp187, label %for.body189, label %for.end195

for.body189:                                      ; preds = %for.cond186
  %150 = load i32* %dir, align 4
  %sub190 = sub nsw i32 23, %150
  %idxprom191 = sext i32 %sub190 to i64
  %arrayidx192 = getelementptr inbounds [16 x %struct.msg_tag*]* %tag, i32 0, i64 %idxprom191
  %151 = load %struct.msg_tag** %arrayidx192, align 8
  call void @wait_gather(%struct.msg_tag* %151)
  br label %for.inc193

for.inc193:                                       ; preds = %for.body189
  %152 = load i32* %dir, align 4
  %inc194 = add nsw i32 %152, 1
  store i32 %inc194, i32* %dir, align 4
  br label %for.cond186

for.end195:                                       ; preds = %for.cond186
  %153 = load i32* %parity.addr, align 4
  %cmp197 = icmp eq i32 %153, 2
  br i1 %cmp197, label %cond.true199, label %cond.false200

cond.true199:                                     ; preds = %for.end195
  %154 = load i32* @even_sites_on_node, align 4
  br label %cond.end201

cond.false200:                                    ; preds = %for.end195
  %155 = load i32* @sites_on_node, align 4
  br label %cond.end201

cond.end201:                                      ; preds = %cond.false200, %cond.true199
  %cond202 = phi i32 [ %154, %cond.true199 ], [ %155, %cond.false200 ]
  store i32 %cond202, i32* %loopend196, align 4
  %156 = load i32* %parity.addr, align 4
  %cmp203 = icmp eq i32 %156, 1
  br i1 %cmp203, label %cond.true205, label %cond.false206

cond.true205:                                     ; preds = %cond.end201
  %157 = load i32* @even_sites_on_node, align 4
  br label %cond.end207

cond.false206:                                    ; preds = %cond.end201
  br label %cond.end207

cond.end207:                                      ; preds = %cond.false206, %cond.true205
  %cond208 = phi i32 [ %157, %cond.true205 ], [ 0, %cond.false206 ]
  store i32 %cond208, i32* %i, align 4
  %158 = load i32* %i, align 4
  %idxprom209 = sext i32 %158 to i64
  %159 = load %struct.site** @lattice, align 8
  %arrayidx210 = getelementptr inbounds %struct.site* %159, i64 %idxprom209
  store %struct.site* %arrayidx210, %struct.site** %s, align 8
  br label %for.cond211

for.cond211:                                      ; preds = %for.inc241, %cond.end207
  %160 = load i32* %i, align 4
  %161 = load i32* %loopend196, align 4
  %cmp212 = icmp slt i32 %160, %161
  br i1 %cmp212, label %for.body214, label %for.end244

for.body214:                                      ; preds = %for.cond211
  %162 = load i32* %i, align 4
  %idxprom215 = sext i32 %162 to i64
  %163 = load %struct.su3_vector** %dest.addr, align 8
  %arrayidx216 = getelementptr inbounds %struct.su3_vector* %163, i64 %idxprom215
  %164 = load i32* %i, align 4
  %idxprom217 = sext i32 %164 to i64
  %165 = load i8*** getelementptr inbounds ([16 x i8**]* @gen_pt, i32 0, i64 7), align 8
  %arrayidx218 = getelementptr inbounds i8** %165, i64 %idxprom217
  %166 = load i8** %arrayidx218, align 8
  %167 = bitcast i8* %166 to %struct.su3_vector*
  %168 = load i32* %i, align 4
  %idxprom219 = sext i32 %168 to i64
  %169 = load i8*** getelementptr inbounds ([16 x i8**]* @gen_pt, i32 0, i64 6), align 8
  %arrayidx220 = getelementptr inbounds i8** %169, i64 %idxprom219
  %170 = load i8** %arrayidx220, align 8
  %171 = bitcast i8* %170 to %struct.su3_vector*
  %172 = load i32* %i, align 4
  %idxprom221 = sext i32 %172 to i64
  %173 = load i8*** getelementptr inbounds ([16 x i8**]* @gen_pt, i32 0, i64 5), align 8
  %arrayidx222 = getelementptr inbounds i8** %173, i64 %idxprom221
  %174 = load i8** %arrayidx222, align 8
  %175 = bitcast i8* %174 to %struct.su3_vector*
  %176 = load i32* %i, align 4
  %idxprom223 = sext i32 %176 to i64
  %177 = load i8*** getelementptr inbounds ([16 x i8**]* @gen_pt, i32 0, i64 4), align 8
  %arrayidx224 = getelementptr inbounds i8** %177, i64 %idxprom223
  %178 = load i8** %arrayidx224, align 8
  %179 = bitcast i8* %178 to %struct.su3_vector*
  call void @sub_four_su3_vecs(%struct.su3_vector* %arrayidx216, %struct.su3_vector* %167, %struct.su3_vector* %171, %struct.su3_vector* %175, %struct.su3_vector* %179)
  %180 = load i32* %i, align 4
  %idxprom225 = sext i32 %180 to i64
  %181 = load %struct.su3_vector** %templongv1, align 8
  %arrayidx226 = getelementptr inbounds %struct.su3_vector* %181, i64 %idxprom225
  %182 = load i32* %i, align 4
  %idxprom227 = sext i32 %182 to i64
  %183 = load i8*** getelementptr inbounds ([16 x i8**]* @gen_pt, i32 0, i64 15), align 8
  %arrayidx228 = getelementptr inbounds i8** %183, i64 %idxprom227
  %184 = load i8** %arrayidx228, align 8
  %185 = bitcast i8* %184 to %struct.su3_vector*
  %186 = load i32* %i, align 4
  %idxprom229 = sext i32 %186 to i64
  %187 = load i8*** getelementptr inbounds ([16 x i8**]* @gen_pt, i32 0, i64 14), align 8
  %arrayidx230 = getelementptr inbounds i8** %187, i64 %idxprom229
  %188 = load i8** %arrayidx230, align 8
  %189 = bitcast i8* %188 to %struct.su3_vector*
  %190 = load i32* %i, align 4
  %idxprom231 = sext i32 %190 to i64
  %191 = load i8*** getelementptr inbounds ([16 x i8**]* @gen_pt, i32 0, i64 13), align 8
  %arrayidx232 = getelementptr inbounds i8** %191, i64 %idxprom231
  %192 = load i8** %arrayidx232, align 8
  %193 = bitcast i8* %192 to %struct.su3_vector*
  %194 = load i32* %i, align 4
  %idxprom233 = sext i32 %194 to i64
  %195 = load i8*** getelementptr inbounds ([16 x i8**]* @gen_pt, i32 0, i64 12), align 8
  %arrayidx234 = getelementptr inbounds i8** %195, i64 %idxprom233
  %196 = load i8** %arrayidx234, align 8
  %197 = bitcast i8* %196 to %struct.su3_vector*
  call void @sub_four_su3_vecs(%struct.su3_vector* %arrayidx226, %struct.su3_vector* %185, %struct.su3_vector* %189, %struct.su3_vector* %193, %struct.su3_vector* %197)
  %198 = load i32* %i, align 4
  %idxprom235 = sext i32 %198 to i64
  %199 = load %struct.su3_vector** %dest.addr, align 8
  %arrayidx236 = getelementptr inbounds %struct.su3_vector* %199, i64 %idxprom235
  %200 = load i32* %i, align 4
  %idxprom237 = sext i32 %200 to i64
  %201 = load %struct.su3_vector** %templongv1, align 8
  %arrayidx238 = getelementptr inbounds %struct.su3_vector* %201, i64 %idxprom237
  %202 = load i32* %i, align 4
  %idxprom239 = sext i32 %202 to i64
  %203 = load %struct.su3_vector** %dest.addr, align 8
  %arrayidx240 = getelementptr inbounds %struct.su3_vector* %203, i64 %idxprom239
  call void @add_su3_vector(%struct.su3_vector* %arrayidx236, %struct.su3_vector* %arrayidx238, %struct.su3_vector* %arrayidx240)
  br label %for.inc241

for.inc241:                                       ; preds = %for.body214
  %204 = load i32* %i, align 4
  %inc242 = add nsw i32 %204, 1
  store i32 %inc242, i32* %i, align 4
  %205 = load %struct.site** %s, align 8
  %incdec.ptr243 = getelementptr inbounds %struct.site* %205, i32 1
  store %struct.site* %incdec.ptr243, %struct.site** %s, align 8
  br label %for.cond211

for.end244:                                       ; preds = %for.cond211
  store i32 0, i32* %dir, align 4
  br label %for.cond245

for.cond245:                                      ; preds = %for.inc254, %for.end244
  %206 = load i32* %dir, align 4
  %cmp246 = icmp sle i32 %206, 3
  br i1 %cmp246, label %for.body248, label %for.end256

for.body248:                                      ; preds = %for.cond245
  %207 = load i32* %dir, align 4
  %idxprom249 = sext i32 %207 to i64
  %arrayidx250 = getelementptr inbounds [16 x %struct.msg_tag*]* %tag, i32 0, i64 %idxprom249
  %208 = load %struct.msg_tag** %arrayidx250, align 8
  call void @cleanup_gather(%struct.msg_tag* %208)
  %209 = load i32* %dir, align 4
  %sub251 = sub nsw i32 7, %209
  %idxprom252 = sext i32 %sub251 to i64
  %arrayidx253 = getelementptr inbounds [16 x %struct.msg_tag*]* %tag, i32 0, i64 %idxprom252
  %210 = load %struct.msg_tag** %arrayidx253, align 8
  call void @cleanup_gather(%struct.msg_tag* %210)
  br label %for.inc254

for.inc254:                                       ; preds = %for.body248
  %211 = load i32* %dir, align 4
  %inc255 = add nsw i32 %211, 1
  store i32 %inc255, i32* %dir, align 4
  br label %for.cond245

for.end256:                                       ; preds = %for.cond245
  store i32 8, i32* %dir, align 4
  br label %for.cond257

for.cond257:                                      ; preds = %for.inc266, %for.end256
  %212 = load i32* %dir, align 4
  %cmp258 = icmp sle i32 %212, 11
  br i1 %cmp258, label %for.body260, label %for.end268

for.body260:                                      ; preds = %for.cond257
  %213 = load i32* %dir, align 4
  %idxprom261 = sext i32 %213 to i64
  %arrayidx262 = getelementptr inbounds [16 x %struct.msg_tag*]* %tag, i32 0, i64 %idxprom261
  %214 = load %struct.msg_tag** %arrayidx262, align 8
  call void @cleanup_gather(%struct.msg_tag* %214)
  %215 = load i32* %dir, align 4
  %sub263 = sub nsw i32 23, %215
  %idxprom264 = sext i32 %sub263 to i64
  %arrayidx265 = getelementptr inbounds [16 x %struct.msg_tag*]* %tag, i32 0, i64 %idxprom264
  %216 = load %struct.msg_tag** %arrayidx265, align 8
  call void @cleanup_gather(%struct.msg_tag* %216)
  br label %for.inc266

for.inc266:                                       ; preds = %for.body260
  %217 = load i32* %dir, align 4
  %inc267 = add nsw i32 %217, 1
  store i32 %inc267, i32* %dir, align 4
  br label %for.cond257

for.end268:                                       ; preds = %for.cond257
  store i32 0, i32* %dir, align 4
  br label %for.cond269

for.cond269:                                      ; preds = %for.inc277, %for.end268
  %218 = load i32* %dir, align 4
  %cmp270 = icmp sle i32 %218, 3
  br i1 %cmp270, label %for.body272, label %for.end279

for.body272:                                      ; preds = %for.cond269
  %219 = load i32* %dir, align 4
  %idxprom273 = sext i32 %219 to i64
  %arrayidx274 = getelementptr inbounds [4 x %struct.su3_vector*]* %tempvec, i32 0, i64 %idxprom273
  %220 = load %struct.su3_vector** %arrayidx274, align 8
  %221 = bitcast %struct.su3_vector* %220 to i8*
  call void @free(i8* %221) #2
  %222 = load i32* %dir, align 4
  %idxprom275 = sext i32 %222 to i64
  %arrayidx276 = getelementptr inbounds [4 x %struct.su3_vector*]* %templongvec, i32 0, i64 %idxprom275
  %223 = load %struct.su3_vector** %arrayidx276, align 8
  %224 = bitcast %struct.su3_vector* %223 to i8*
  call void @free(i8* %224) #2
  br label %for.inc277

for.inc277:                                       ; preds = %for.body272
  %225 = load i32* %dir, align 4
  %inc278 = add nsw i32 %225, 1
  store i32 %inc278, i32* %dir, align 4
  br label %for.cond269

for.end279:                                       ; preds = %for.cond269
  %226 = load %struct.su3_vector** %templongv1, align 8
  %227 = bitcast %struct.su3_vector* %226 to i8*
  call void @free(i8* %227) #2
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @dslash_fn_on_temp_special(%struct.su3_vector* %src, %struct.su3_vector* %dest, i32 %parity, %struct.msg_tag** %tag, i32 %start) #0 {
entry:
  %src.addr = alloca %struct.su3_vector*, align 8
  %dest.addr = alloca %struct.su3_vector*, align 8
  %parity.addr = alloca i32, align 4
  %tag.addr = alloca %struct.msg_tag**, align 8
  %start.addr = alloca i32, align 4
  %i = alloca i32, align 4
  %s = alloca %struct.site*, align 8
  %dir = alloca i32, align 4
  %otherparity = alloca i32, align 4
  %fat4 = alloca %struct.su3_matrix*, align 8
  %long4 = alloca %struct.su3_matrix*, align 8
  %loopend = alloca i32, align 4
  %loopend169 = alloca i32, align 4
  %loopend238 = alloca i32, align 4
  store %struct.su3_vector* %src, %struct.su3_vector** %src.addr, align 8
  store %struct.su3_vector* %dest, %struct.su3_vector** %dest.addr, align 8
  store i32 %parity, i32* %parity.addr, align 4
  store %struct.msg_tag** %tag, %struct.msg_tag*** %tag.addr, align 8
  store i32 %start, i32* %start.addr, align 4
  %0 = load i32* @temp_not_allocated, align 4
  %tobool = icmp ne i32 %0, 0
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  store i32 0, i32* %dir, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.then
  %1 = load i32* %dir, align 4
  %cmp = icmp sle i32 %1, 3
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %2 = load i32* @sites_on_node, align 4
  %conv = sext i32 %2 to i64
  %call = call noalias i8* @calloc(i64 %conv, i64 48) #2
  %3 = bitcast i8* %call to %struct.su3_vector*
  %4 = load i32* %dir, align 4
  %idxprom = sext i32 %4 to i64
  %arrayidx = getelementptr inbounds [9 x %struct.su3_vector*]* @temp, i32 0, i64 %idxprom
  store %struct.su3_vector* %3, %struct.su3_vector** %arrayidx, align 8
  %5 = load i32* @sites_on_node, align 4
  %conv1 = sext i32 %5 to i64
  %call2 = call noalias i8* @calloc(i64 %conv1, i64 48) #2
  %6 = bitcast i8* %call2 to %struct.su3_vector*
  %7 = load i32* %dir, align 4
  %add = add nsw i32 %7, 4
  %idxprom3 = sext i32 %add to i64
  %arrayidx4 = getelementptr inbounds [9 x %struct.su3_vector*]* @temp, i32 0, i64 %idxprom3
  store %struct.su3_vector* %6, %struct.su3_vector** %arrayidx4, align 8
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %8 = load i32* %dir, align 4
  %inc = add nsw i32 %8, 1
  store i32 %inc, i32* %dir, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %9 = load i32* @sites_on_node, align 4
  %conv5 = sext i32 %9 to i64
  %call6 = call noalias i8* @calloc(i64 %conv5, i64 48) #2
  %10 = bitcast i8* %call6 to %struct.su3_vector*
  store %struct.su3_vector* %10, %struct.su3_vector** getelementptr inbounds ([9 x %struct.su3_vector*]* @temp, i32 0, i64 8), align 8
  store i32 0, i32* @temp_not_allocated, align 4
  br label %if.end

if.end:                                           ; preds = %for.end, %entry
  %11 = load i32* @valid_longlinks, align 4
  %tobool7 = icmp ne i32 %11, 0
  br i1 %tobool7, label %if.end9, label %if.then8

if.then8:                                         ; preds = %if.end
  call void (...)* bitcast (void ()* @load_longlinks to void (...)*)()
  br label %if.end9

if.end9:                                          ; preds = %if.then8, %if.end
  %12 = load i32* @valid_fatlinks, align 4
  %tobool10 = icmp ne i32 %12, 0
  br i1 %tobool10, label %if.end12, label %if.then11

if.then11:                                        ; preds = %if.end9
  call void (...)* bitcast (void ()* @load_fatlinks to void (...)*)()
  br label %if.end12

if.end12:                                         ; preds = %if.then11, %if.end9
  %13 = load i32* %parity.addr, align 4
  switch i32 %13, label %sw.epilog [
    i32 2, label %sw.bb
    i32 1, label %sw.bb13
    i32 3, label %sw.bb14
  ]

sw.bb:                                            ; preds = %if.end12
  store i32 1, i32* %otherparity, align 4
  br label %sw.epilog

sw.bb13:                                          ; preds = %if.end12
  store i32 2, i32* %otherparity, align 4
  br label %sw.epilog

sw.bb14:                                          ; preds = %if.end12
  store i32 3, i32* %otherparity, align 4
  br label %sw.epilog

sw.epilog:                                        ; preds = %sw.bb14, %sw.bb13, %sw.bb, %if.end12
  store i32 0, i32* %dir, align 4
  br label %for.cond15

for.cond15:                                       ; preds = %for.inc47, %sw.epilog
  %14 = load i32* %dir, align 4
  %cmp16 = icmp sle i32 %14, 3
  br i1 %cmp16, label %for.body18, label %for.end49

for.body18:                                       ; preds = %for.cond15
  %15 = load i32* %start.addr, align 4
  %cmp19 = icmp eq i32 %15, 1
  br i1 %cmp19, label %if.then21, label %if.else

if.then21:                                        ; preds = %for.body18
  %16 = load %struct.su3_vector** %src.addr, align 8
  %17 = bitcast %struct.su3_vector* %16 to i8*
  %18 = load i32* %dir, align 4
  %19 = load i32* %parity.addr, align 4
  %20 = load i32* %dir, align 4
  %idxprom22 = sext i32 %20 to i64
  %arrayidx23 = getelementptr inbounds [16 x i8**]* @gen_pt, i32 0, i64 %idxprom22
  %21 = load i8*** %arrayidx23, align 8
  %call24 = call %struct.msg_tag* @start_gather_from_temp(i8* %17, i32 48, i32 %18, i32 %19, i8** %21)
  %22 = load i32* %dir, align 4
  %idxprom25 = sext i32 %22 to i64
  %23 = load %struct.msg_tag*** %tag.addr, align 8
  %arrayidx26 = getelementptr inbounds %struct.msg_tag** %23, i64 %idxprom25
  store %struct.msg_tag* %call24, %struct.msg_tag** %arrayidx26, align 8
  %24 = load %struct.su3_vector** %src.addr, align 8
  %25 = bitcast %struct.su3_vector* %24 to i8*
  %26 = load i32* %dir, align 4
  %add27 = add nsw i32 %26, 8
  %27 = load i32* %parity.addr, align 4
  %28 = load i32* %dir, align 4
  %add28 = add nsw i32 %28, 8
  %idxprom29 = sext i32 %add28 to i64
  %arrayidx30 = getelementptr inbounds [16 x i8**]* @gen_pt, i32 0, i64 %idxprom29
  %29 = load i8*** %arrayidx30, align 8
  %call31 = call %struct.msg_tag* @start_gather_from_temp(i8* %25, i32 48, i32 %add27, i32 %27, i8** %29)
  %30 = load i32* %dir, align 4
  %add32 = add nsw i32 %30, 8
  %idxprom33 = sext i32 %add32 to i64
  %31 = load %struct.msg_tag*** %tag.addr, align 8
  %arrayidx34 = getelementptr inbounds %struct.msg_tag** %31, i64 %idxprom33
  store %struct.msg_tag* %call31, %struct.msg_tag** %arrayidx34, align 8
  br label %if.end46

if.else:                                          ; preds = %for.body18
  %32 = load %struct.su3_vector** %src.addr, align 8
  %33 = bitcast %struct.su3_vector* %32 to i8*
  %34 = load i32* %dir, align 4
  %35 = load i32* %parity.addr, align 4
  %36 = load i32* %dir, align 4
  %idxprom35 = sext i32 %36 to i64
  %arrayidx36 = getelementptr inbounds [16 x i8**]* @gen_pt, i32 0, i64 %idxprom35
  %37 = load i8*** %arrayidx36, align 8
  %38 = load i32* %dir, align 4
  %idxprom37 = sext i32 %38 to i64
  %39 = load %struct.msg_tag*** %tag.addr, align 8
  %arrayidx38 = getelementptr inbounds %struct.msg_tag** %39, i64 %idxprom37
  %40 = load %struct.msg_tag** %arrayidx38, align 8
  call void @restart_gather_from_temp(i8* %33, i32 48, i32 %34, i32 %35, i8** %37, %struct.msg_tag* %40)
  %41 = load %struct.su3_vector** %src.addr, align 8
  %42 = bitcast %struct.su3_vector* %41 to i8*
  %43 = load i32* %dir, align 4
  %add39 = add nsw i32 %43, 8
  %44 = load i32* %parity.addr, align 4
  %45 = load i32* %dir, align 4
  %add40 = add nsw i32 %45, 8
  %idxprom41 = sext i32 %add40 to i64
  %arrayidx42 = getelementptr inbounds [16 x i8**]* @gen_pt, i32 0, i64 %idxprom41
  %46 = load i8*** %arrayidx42, align 8
  %47 = load i32* %dir, align 4
  %add43 = add nsw i32 %47, 8
  %idxprom44 = sext i32 %add43 to i64
  %48 = load %struct.msg_tag*** %tag.addr, align 8
  %arrayidx45 = getelementptr inbounds %struct.msg_tag** %48, i64 %idxprom44
  %49 = load %struct.msg_tag** %arrayidx45, align 8
  call void @restart_gather_from_temp(i8* %42, i32 48, i32 %add39, i32 %44, i8** %46, %struct.msg_tag* %49)
  br label %if.end46

if.end46:                                         ; preds = %if.else, %if.then21
  br label %for.inc47

for.inc47:                                        ; preds = %if.end46
  %50 = load i32* %dir, align 4
  %inc48 = add nsw i32 %50, 1
  store i32 %inc48, i32* %dir, align 4
  br label %for.cond15

for.end49:                                        ; preds = %for.cond15
  %51 = load i32* %otherparity, align 4
  %cmp50 = icmp eq i32 %51, 2
  br i1 %cmp50, label %cond.true, label %cond.false

cond.true:                                        ; preds = %for.end49
  %52 = load i32* @even_sites_on_node, align 4
  br label %cond.end

cond.false:                                       ; preds = %for.end49
  %53 = load i32* @sites_on_node, align 4
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %52, %cond.true ], [ %53, %cond.false ]
  store i32 %cond, i32* %loopend, align 4
  %54 = load i32* %otherparity, align 4
  %cmp52 = icmp eq i32 %54, 1
  br i1 %cmp52, label %cond.true54, label %cond.false55

cond.true54:                                      ; preds = %cond.end
  %55 = load i32* @even_sites_on_node, align 4
  br label %cond.end56

cond.false55:                                     ; preds = %cond.end
  br label %cond.end56

cond.end56:                                       ; preds = %cond.false55, %cond.true54
  %cond57 = phi i32 [ %55, %cond.true54 ], [ 0, %cond.false55 ]
  store i32 %cond57, i32* %i, align 4
  %56 = load i32* %i, align 4
  %idxprom58 = sext i32 %56 to i64
  %57 = load %struct.site** @lattice, align 8
  %arrayidx59 = getelementptr inbounds %struct.site* %57, i64 %idxprom58
  store %struct.site* %arrayidx59, %struct.site** %s, align 8
  br label %for.cond60

for.cond60:                                       ; preds = %for.inc89, %cond.end56
  %58 = load i32* %i, align 4
  %59 = load i32* %loopend, align 4
  %cmp61 = icmp slt i32 %58, %59
  br i1 %cmp61, label %for.body63, label %for.end91

for.body63:                                       ; preds = %for.cond60
  %60 = load i32* %i, align 4
  %mul = mul nsw i32 4, %60
  %idxprom64 = sext i32 %mul to i64
  %61 = load %struct.su3_matrix** @t_fatlink, align 8
  %arrayidx65 = getelementptr inbounds %struct.su3_matrix* %61, i64 %idxprom64
  store %struct.su3_matrix* %arrayidx65, %struct.su3_matrix** %fat4, align 8
  %62 = load i32* %i, align 4
  %mul66 = mul nsw i32 4, %62
  %idxprom67 = sext i32 %mul66 to i64
  %63 = load %struct.su3_matrix** @t_longlink, align 8
  %arrayidx68 = getelementptr inbounds %struct.su3_matrix* %63, i64 %idxprom67
  store %struct.su3_matrix* %arrayidx68, %struct.su3_matrix** %long4, align 8
  %64 = load %struct.su3_matrix** %fat4, align 8
  %65 = load i32* %i, align 4
  %idxprom69 = sext i32 %65 to i64
  %66 = load %struct.su3_vector** %src.addr, align 8
  %arrayidx70 = getelementptr inbounds %struct.su3_vector* %66, i64 %idxprom69
  %67 = load i32* %i, align 4
  %idxprom71 = sext i32 %67 to i64
  %68 = load %struct.su3_vector** getelementptr inbounds ([9 x %struct.su3_vector*]* @temp, i32 0, i64 0), align 8
  %arrayidx72 = getelementptr inbounds %struct.su3_vector* %68, i64 %idxprom71
  %69 = load i32* %i, align 4
  %idxprom73 = sext i32 %69 to i64
  %70 = load %struct.su3_vector** getelementptr inbounds ([9 x %struct.su3_vector*]* @temp, i32 0, i64 1), align 8
  %arrayidx74 = getelementptr inbounds %struct.su3_vector* %70, i64 %idxprom73
  %71 = load i32* %i, align 4
  %idxprom75 = sext i32 %71 to i64
  %72 = load %struct.su3_vector** getelementptr inbounds ([9 x %struct.su3_vector*]* @temp, i32 0, i64 2), align 8
  %arrayidx76 = getelementptr inbounds %struct.su3_vector* %72, i64 %idxprom75
  %73 = load i32* %i, align 4
  %idxprom77 = sext i32 %73 to i64
  %74 = load %struct.su3_vector** getelementptr inbounds ([9 x %struct.su3_vector*]* @temp, i32 0, i64 3), align 8
  %arrayidx78 = getelementptr inbounds %struct.su3_vector* %74, i64 %idxprom77
  call void @mult_adj_su3_mat_4vec(%struct.su3_matrix* %64, %struct.su3_vector* %arrayidx70, %struct.su3_vector* %arrayidx72, %struct.su3_vector* %arrayidx74, %struct.su3_vector* %arrayidx76, %struct.su3_vector* %arrayidx78)
  %75 = load %struct.su3_matrix** %long4, align 8
  %76 = load i32* %i, align 4
  %idxprom79 = sext i32 %76 to i64
  %77 = load %struct.su3_vector** %src.addr, align 8
  %arrayidx80 = getelementptr inbounds %struct.su3_vector* %77, i64 %idxprom79
  %78 = load i32* %i, align 4
  %idxprom81 = sext i32 %78 to i64
  %79 = load %struct.su3_vector** getelementptr inbounds ([9 x %struct.su3_vector*]* @temp, i32 0, i64 4), align 8
  %arrayidx82 = getelementptr inbounds %struct.su3_vector* %79, i64 %idxprom81
  %80 = load i32* %i, align 4
  %idxprom83 = sext i32 %80 to i64
  %81 = load %struct.su3_vector** getelementptr inbounds ([9 x %struct.su3_vector*]* @temp, i32 0, i64 5), align 8
  %arrayidx84 = getelementptr inbounds %struct.su3_vector* %81, i64 %idxprom83
  %82 = load i32* %i, align 4
  %idxprom85 = sext i32 %82 to i64
  %83 = load %struct.su3_vector** getelementptr inbounds ([9 x %struct.su3_vector*]* @temp, i32 0, i64 6), align 8
  %arrayidx86 = getelementptr inbounds %struct.su3_vector* %83, i64 %idxprom85
  %84 = load i32* %i, align 4
  %idxprom87 = sext i32 %84 to i64
  %85 = load %struct.su3_vector** getelementptr inbounds ([9 x %struct.su3_vector*]* @temp, i32 0, i64 7), align 8
  %arrayidx88 = getelementptr inbounds %struct.su3_vector* %85, i64 %idxprom87
  call void @mult_adj_su3_mat_4vec(%struct.su3_matrix* %75, %struct.su3_vector* %arrayidx80, %struct.su3_vector* %arrayidx82, %struct.su3_vector* %arrayidx84, %struct.su3_vector* %arrayidx86, %struct.su3_vector* %arrayidx88)
  br label %for.inc89

for.inc89:                                        ; preds = %for.body63
  %86 = load i32* %i, align 4
  %inc90 = add nsw i32 %86, 1
  store i32 %inc90, i32* %i, align 4
  %87 = load %struct.site** %s, align 8
  %incdec.ptr = getelementptr inbounds %struct.site* %87, i32 1
  store %struct.site* %incdec.ptr, %struct.site** %s, align 8
  br label %for.cond60

for.end91:                                        ; preds = %for.cond60
  store i32 0, i32* %dir, align 4
  br label %for.cond92

for.cond92:                                       ; preds = %for.inc119, %for.end91
  %88 = load i32* %dir, align 4
  %cmp93 = icmp sle i32 %88, 3
  br i1 %cmp93, label %for.body95, label %for.end121

for.body95:                                       ; preds = %for.cond92
  %89 = load i32* %start.addr, align 4
  %cmp96 = icmp eq i32 %89, 1
  br i1 %cmp96, label %if.then98, label %if.else108

if.then98:                                        ; preds = %for.body95
  %90 = load i32* %dir, align 4
  %idxprom99 = sext i32 %90 to i64
  %arrayidx100 = getelementptr inbounds [9 x %struct.su3_vector*]* @temp, i32 0, i64 %idxprom99
  %91 = load %struct.su3_vector** %arrayidx100, align 8
  %92 = bitcast %struct.su3_vector* %91 to i8*
  %93 = load i32* %dir, align 4
  %sub = sub nsw i32 7, %93
  %94 = load i32* %parity.addr, align 4
  %95 = load i32* %dir, align 4
  %sub101 = sub nsw i32 7, %95
  %idxprom102 = sext i32 %sub101 to i64
  %arrayidx103 = getelementptr inbounds [16 x i8**]* @gen_pt, i32 0, i64 %idxprom102
  %96 = load i8*** %arrayidx103, align 8
  %call104 = call %struct.msg_tag* @start_gather_from_temp(i8* %92, i32 48, i32 %sub, i32 %94, i8** %96)
  %97 = load i32* %dir, align 4
  %sub105 = sub nsw i32 7, %97
  %idxprom106 = sext i32 %sub105 to i64
  %98 = load %struct.msg_tag*** %tag.addr, align 8
  %arrayidx107 = getelementptr inbounds %struct.msg_tag** %98, i64 %idxprom106
  store %struct.msg_tag* %call104, %struct.msg_tag** %arrayidx107, align 8
  br label %if.end118

if.else108:                                       ; preds = %for.body95
  %99 = load i32* %dir, align 4
  %idxprom109 = sext i32 %99 to i64
  %arrayidx110 = getelementptr inbounds [9 x %struct.su3_vector*]* @temp, i32 0, i64 %idxprom109
  %100 = load %struct.su3_vector** %arrayidx110, align 8
  %101 = bitcast %struct.su3_vector* %100 to i8*
  %102 = load i32* %dir, align 4
  %sub111 = sub nsw i32 7, %102
  %103 = load i32* %parity.addr, align 4
  %104 = load i32* %dir, align 4
  %sub112 = sub nsw i32 7, %104
  %idxprom113 = sext i32 %sub112 to i64
  %arrayidx114 = getelementptr inbounds [16 x i8**]* @gen_pt, i32 0, i64 %idxprom113
  %105 = load i8*** %arrayidx114, align 8
  %106 = load i32* %dir, align 4
  %sub115 = sub nsw i32 7, %106
  %idxprom116 = sext i32 %sub115 to i64
  %107 = load %struct.msg_tag*** %tag.addr, align 8
  %arrayidx117 = getelementptr inbounds %struct.msg_tag** %107, i64 %idxprom116
  %108 = load %struct.msg_tag** %arrayidx117, align 8
  call void @restart_gather_from_temp(i8* %101, i32 48, i32 %sub111, i32 %103, i8** %105, %struct.msg_tag* %108)
  br label %if.end118

if.end118:                                        ; preds = %if.else108, %if.then98
  br label %for.inc119

for.inc119:                                       ; preds = %if.end118
  %109 = load i32* %dir, align 4
  %inc120 = add nsw i32 %109, 1
  store i32 %inc120, i32* %dir, align 4
  br label %for.cond92

for.end121:                                       ; preds = %for.cond92
  store i32 8, i32* %dir, align 4
  br label %for.cond122

for.cond122:                                      ; preds = %for.inc154, %for.end121
  %110 = load i32* %dir, align 4
  %cmp123 = icmp sle i32 %110, 11
  br i1 %cmp123, label %for.body125, label %for.end156

for.body125:                                      ; preds = %for.cond122
  %111 = load i32* %start.addr, align 4
  %cmp126 = icmp eq i32 %111, 1
  br i1 %cmp126, label %if.then128, label %if.else141

if.then128:                                       ; preds = %for.body125
  %112 = load i32* %dir, align 4
  %sub129 = sub nsw i32 %112, 8
  %add130 = add nsw i32 %sub129, 4
  %idxprom131 = sext i32 %add130 to i64
  %arrayidx132 = getelementptr inbounds [9 x %struct.su3_vector*]* @temp, i32 0, i64 %idxprom131
  %113 = load %struct.su3_vector** %arrayidx132, align 8
  %114 = bitcast %struct.su3_vector* %113 to i8*
  %115 = load i32* %dir, align 4
  %sub133 = sub nsw i32 23, %115
  %116 = load i32* %parity.addr, align 4
  %117 = load i32* %dir, align 4
  %sub134 = sub nsw i32 23, %117
  %idxprom135 = sext i32 %sub134 to i64
  %arrayidx136 = getelementptr inbounds [16 x i8**]* @gen_pt, i32 0, i64 %idxprom135
  %118 = load i8*** %arrayidx136, align 8
  %call137 = call %struct.msg_tag* @start_gather_from_temp(i8* %114, i32 48, i32 %sub133, i32 %116, i8** %118)
  %119 = load i32* %dir, align 4
  %sub138 = sub nsw i32 23, %119
  %idxprom139 = sext i32 %sub138 to i64
  %120 = load %struct.msg_tag*** %tag.addr, align 8
  %arrayidx140 = getelementptr inbounds %struct.msg_tag** %120, i64 %idxprom139
  store %struct.msg_tag* %call137, %struct.msg_tag** %arrayidx140, align 8
  br label %if.end153

if.else141:                                       ; preds = %for.body125
  %121 = load i32* %dir, align 4
  %sub142 = sub nsw i32 %121, 8
  %add143 = add nsw i32 %sub142, 4
  %idxprom144 = sext i32 %add143 to i64
  %arrayidx145 = getelementptr inbounds [9 x %struct.su3_vector*]* @temp, i32 0, i64 %idxprom144
  %122 = load %struct.su3_vector** %arrayidx145, align 8
  %123 = bitcast %struct.su3_vector* %122 to i8*
  %124 = load i32* %dir, align 4
  %sub146 = sub nsw i32 23, %124
  %125 = load i32* %parity.addr, align 4
  %126 = load i32* %dir, align 4
  %sub147 = sub nsw i32 23, %126
  %idxprom148 = sext i32 %sub147 to i64
  %arrayidx149 = getelementptr inbounds [16 x i8**]* @gen_pt, i32 0, i64 %idxprom148
  %127 = load i8*** %arrayidx149, align 8
  %128 = load i32* %dir, align 4
  %sub150 = sub nsw i32 23, %128
  %idxprom151 = sext i32 %sub150 to i64
  %129 = load %struct.msg_tag*** %tag.addr, align 8
  %arrayidx152 = getelementptr inbounds %struct.msg_tag** %129, i64 %idxprom151
  %130 = load %struct.msg_tag** %arrayidx152, align 8
  call void @restart_gather_from_temp(i8* %123, i32 48, i32 %sub146, i32 %125, i8** %127, %struct.msg_tag* %130)
  br label %if.end153

if.end153:                                        ; preds = %if.else141, %if.then128
  br label %for.inc154

for.inc154:                                       ; preds = %if.end153
  %131 = load i32* %dir, align 4
  %inc155 = add nsw i32 %131, 1
  store i32 %inc155, i32* %dir, align 4
  br label %for.cond122

for.end156:                                       ; preds = %for.cond122
  store i32 0, i32* %dir, align 4
  br label %for.cond157

for.cond157:                                      ; preds = %for.inc166, %for.end156
  %132 = load i32* %dir, align 4
  %cmp158 = icmp sle i32 %132, 3
  br i1 %cmp158, label %for.body160, label %for.end168

for.body160:                                      ; preds = %for.cond157
  %133 = load i32* %dir, align 4
  %idxprom161 = sext i32 %133 to i64
  %134 = load %struct.msg_tag*** %tag.addr, align 8
  %arrayidx162 = getelementptr inbounds %struct.msg_tag** %134, i64 %idxprom161
  %135 = load %struct.msg_tag** %arrayidx162, align 8
  call void @wait_gather(%struct.msg_tag* %135)
  %136 = load i32* %dir, align 4
  %add163 = add nsw i32 %136, 8
  %idxprom164 = sext i32 %add163 to i64
  %137 = load %struct.msg_tag*** %tag.addr, align 8
  %arrayidx165 = getelementptr inbounds %struct.msg_tag** %137, i64 %idxprom164
  %138 = load %struct.msg_tag** %arrayidx165, align 8
  call void @wait_gather(%struct.msg_tag* %138)
  br label %for.inc166

for.inc166:                                       ; preds = %for.body160
  %139 = load i32* %dir, align 4
  %inc167 = add nsw i32 %139, 1
  store i32 %inc167, i32* %dir, align 4
  br label %for.cond157

for.end168:                                       ; preds = %for.cond157
  %140 = load i32* %parity.addr, align 4
  %cmp170 = icmp eq i32 %140, 2
  br i1 %cmp170, label %cond.true172, label %cond.false173

cond.true172:                                     ; preds = %for.end168
  %141 = load i32* @even_sites_on_node, align 4
  br label %cond.end174

cond.false173:                                    ; preds = %for.end168
  %142 = load i32* @sites_on_node, align 4
  br label %cond.end174

cond.end174:                                      ; preds = %cond.false173, %cond.true172
  %cond175 = phi i32 [ %141, %cond.true172 ], [ %142, %cond.false173 ]
  store i32 %cond175, i32* %loopend169, align 4
  %143 = load i32* %parity.addr, align 4
  %cmp176 = icmp eq i32 %143, 1
  br i1 %cmp176, label %cond.true178, label %cond.false179

cond.true178:                                     ; preds = %cond.end174
  %144 = load i32* @even_sites_on_node, align 4
  br label %cond.end180

cond.false179:                                    ; preds = %cond.end174
  br label %cond.end180

cond.end180:                                      ; preds = %cond.false179, %cond.true178
  %cond181 = phi i32 [ %144, %cond.true178 ], [ 0, %cond.false179 ]
  store i32 %cond181, i32* %i, align 4
  %145 = load i32* %i, align 4
  %idxprom182 = sext i32 %145 to i64
  %146 = load %struct.site** @lattice, align 8
  %arrayidx183 = getelementptr inbounds %struct.site* %146, i64 %idxprom182
  store %struct.site* %arrayidx183, %struct.site** %s, align 8
  br label %for.cond184

for.cond184:                                      ; preds = %for.inc214, %cond.end180
  %147 = load i32* %i, align 4
  %148 = load i32* %loopend169, align 4
  %cmp185 = icmp slt i32 %147, %148
  br i1 %cmp185, label %for.body187, label %for.end217

for.body187:                                      ; preds = %for.cond184
  %149 = load i32* %i, align 4
  %mul188 = mul nsw i32 4, %149
  %idxprom189 = sext i32 %mul188 to i64
  %150 = load %struct.su3_matrix** @t_fatlink, align 8
  %arrayidx190 = getelementptr inbounds %struct.su3_matrix* %150, i64 %idxprom189
  store %struct.su3_matrix* %arrayidx190, %struct.su3_matrix** %fat4, align 8
  %151 = load i32* %i, align 4
  %mul191 = mul nsw i32 4, %151
  %idxprom192 = sext i32 %mul191 to i64
  %152 = load %struct.su3_matrix** @t_longlink, align 8
  %arrayidx193 = getelementptr inbounds %struct.su3_matrix* %152, i64 %idxprom192
  store %struct.su3_matrix* %arrayidx193, %struct.su3_matrix** %long4, align 8
  %153 = load %struct.su3_matrix** %fat4, align 8
  %154 = load i32* %i, align 4
  %idxprom194 = sext i32 %154 to i64
  %155 = load i8*** getelementptr inbounds ([16 x i8**]* @gen_pt, i32 0, i64 0), align 8
  %arrayidx195 = getelementptr inbounds i8** %155, i64 %idxprom194
  %156 = load i8** %arrayidx195, align 8
  %157 = bitcast i8* %156 to %struct.su3_vector*
  %158 = load i32* %i, align 4
  %idxprom196 = sext i32 %158 to i64
  %159 = load i8*** getelementptr inbounds ([16 x i8**]* @gen_pt, i32 0, i64 1), align 8
  %arrayidx197 = getelementptr inbounds i8** %159, i64 %idxprom196
  %160 = load i8** %arrayidx197, align 8
  %161 = bitcast i8* %160 to %struct.su3_vector*
  %162 = load i32* %i, align 4
  %idxprom198 = sext i32 %162 to i64
  %163 = load i8*** getelementptr inbounds ([16 x i8**]* @gen_pt, i32 0, i64 2), align 8
  %arrayidx199 = getelementptr inbounds i8** %163, i64 %idxprom198
  %164 = load i8** %arrayidx199, align 8
  %165 = bitcast i8* %164 to %struct.su3_vector*
  %166 = load i32* %i, align 4
  %idxprom200 = sext i32 %166 to i64
  %167 = load i8*** getelementptr inbounds ([16 x i8**]* @gen_pt, i32 0, i64 3), align 8
  %arrayidx201 = getelementptr inbounds i8** %167, i64 %idxprom200
  %168 = load i8** %arrayidx201, align 8
  %169 = bitcast i8* %168 to %struct.su3_vector*
  %170 = load i32* %i, align 4
  %idxprom202 = sext i32 %170 to i64
  %171 = load %struct.su3_vector** %dest.addr, align 8
  %arrayidx203 = getelementptr inbounds %struct.su3_vector* %171, i64 %idxprom202
  call void @mult_su3_mat_vec_sum_4dir(%struct.su3_matrix* %153, %struct.su3_vector* %157, %struct.su3_vector* %161, %struct.su3_vector* %165, %struct.su3_vector* %169, %struct.su3_vector* %arrayidx203)
  %172 = load %struct.su3_matrix** %long4, align 8
  %173 = load i32* %i, align 4
  %idxprom204 = sext i32 %173 to i64
  %174 = load i8*** getelementptr inbounds ([16 x i8**]* @gen_pt, i32 0, i64 8), align 8
  %arrayidx205 = getelementptr inbounds i8** %174, i64 %idxprom204
  %175 = load i8** %arrayidx205, align 8
  %176 = bitcast i8* %175 to %struct.su3_vector*
  %177 = load i32* %i, align 4
  %idxprom206 = sext i32 %177 to i64
  %178 = load i8*** getelementptr inbounds ([16 x i8**]* @gen_pt, i32 0, i64 9), align 8
  %arrayidx207 = getelementptr inbounds i8** %178, i64 %idxprom206
  %179 = load i8** %arrayidx207, align 8
  %180 = bitcast i8* %179 to %struct.su3_vector*
  %181 = load i32* %i, align 4
  %idxprom208 = sext i32 %181 to i64
  %182 = load i8*** getelementptr inbounds ([16 x i8**]* @gen_pt, i32 0, i64 10), align 8
  %arrayidx209 = getelementptr inbounds i8** %182, i64 %idxprom208
  %183 = load i8** %arrayidx209, align 8
  %184 = bitcast i8* %183 to %struct.su3_vector*
  %185 = load i32* %i, align 4
  %idxprom210 = sext i32 %185 to i64
  %186 = load i8*** getelementptr inbounds ([16 x i8**]* @gen_pt, i32 0, i64 11), align 8
  %arrayidx211 = getelementptr inbounds i8** %186, i64 %idxprom210
  %187 = load i8** %arrayidx211, align 8
  %188 = bitcast i8* %187 to %struct.su3_vector*
  %189 = load i32* %i, align 4
  %idxprom212 = sext i32 %189 to i64
  %190 = load %struct.su3_vector** getelementptr inbounds ([9 x %struct.su3_vector*]* @temp, i32 0, i64 8), align 8
  %arrayidx213 = getelementptr inbounds %struct.su3_vector* %190, i64 %idxprom212
  call void @mult_su3_mat_vec_sum_4dir(%struct.su3_matrix* %172, %struct.su3_vector* %176, %struct.su3_vector* %180, %struct.su3_vector* %184, %struct.su3_vector* %188, %struct.su3_vector* %arrayidx213)
  br label %for.inc214

for.inc214:                                       ; preds = %for.body187
  %191 = load i32* %i, align 4
  %inc215 = add nsw i32 %191, 1
  store i32 %inc215, i32* %i, align 4
  %192 = load %struct.site** %s, align 8
  %incdec.ptr216 = getelementptr inbounds %struct.site* %192, i32 1
  store %struct.site* %incdec.ptr216, %struct.site** %s, align 8
  br label %for.cond184

for.end217:                                       ; preds = %for.cond184
  store i32 0, i32* %dir, align 4
  br label %for.cond218

for.cond218:                                      ; preds = %for.inc225, %for.end217
  %193 = load i32* %dir, align 4
  %cmp219 = icmp sle i32 %193, 3
  br i1 %cmp219, label %for.body221, label %for.end227

for.body221:                                      ; preds = %for.cond218
  %194 = load i32* %dir, align 4
  %sub222 = sub nsw i32 7, %194
  %idxprom223 = sext i32 %sub222 to i64
  %195 = load %struct.msg_tag*** %tag.addr, align 8
  %arrayidx224 = getelementptr inbounds %struct.msg_tag** %195, i64 %idxprom223
  %196 = load %struct.msg_tag** %arrayidx224, align 8
  call void @wait_gather(%struct.msg_tag* %196)
  br label %for.inc225

for.inc225:                                       ; preds = %for.body221
  %197 = load i32* %dir, align 4
  %inc226 = add nsw i32 %197, 1
  store i32 %inc226, i32* %dir, align 4
  br label %for.cond218

for.end227:                                       ; preds = %for.cond218
  store i32 8, i32* %dir, align 4
  br label %for.cond228

for.cond228:                                      ; preds = %for.inc235, %for.end227
  %198 = load i32* %dir, align 4
  %cmp229 = icmp sle i32 %198, 11
  br i1 %cmp229, label %for.body231, label %for.end237

for.body231:                                      ; preds = %for.cond228
  %199 = load i32* %dir, align 4
  %sub232 = sub nsw i32 23, %199
  %idxprom233 = sext i32 %sub232 to i64
  %200 = load %struct.msg_tag*** %tag.addr, align 8
  %arrayidx234 = getelementptr inbounds %struct.msg_tag** %200, i64 %idxprom233
  %201 = load %struct.msg_tag** %arrayidx234, align 8
  call void @wait_gather(%struct.msg_tag* %201)
  br label %for.inc235

for.inc235:                                       ; preds = %for.body231
  %202 = load i32* %dir, align 4
  %inc236 = add nsw i32 %202, 1
  store i32 %inc236, i32* %dir, align 4
  br label %for.cond228

for.end237:                                       ; preds = %for.cond228
  %203 = load i32* %parity.addr, align 4
  %cmp239 = icmp eq i32 %203, 2
  br i1 %cmp239, label %cond.true241, label %cond.false242

cond.true241:                                     ; preds = %for.end237
  %204 = load i32* @even_sites_on_node, align 4
  br label %cond.end243

cond.false242:                                    ; preds = %for.end237
  %205 = load i32* @sites_on_node, align 4
  br label %cond.end243

cond.end243:                                      ; preds = %cond.false242, %cond.true241
  %cond244 = phi i32 [ %204, %cond.true241 ], [ %205, %cond.false242 ]
  store i32 %cond244, i32* %loopend238, align 4
  %206 = load i32* %parity.addr, align 4
  %cmp245 = icmp eq i32 %206, 1
  br i1 %cmp245, label %cond.true247, label %cond.false248

cond.true247:                                     ; preds = %cond.end243
  %207 = load i32* @even_sites_on_node, align 4
  br label %cond.end249

cond.false248:                                    ; preds = %cond.end243
  br label %cond.end249

cond.end249:                                      ; preds = %cond.false248, %cond.true247
  %cond250 = phi i32 [ %207, %cond.true247 ], [ 0, %cond.false248 ]
  store i32 %cond250, i32* %i, align 4
  %208 = load i32* %i, align 4
  %idxprom251 = sext i32 %208 to i64
  %209 = load %struct.site** @lattice, align 8
  %arrayidx252 = getelementptr inbounds %struct.site* %209, i64 %idxprom251
  store %struct.site* %arrayidx252, %struct.site** %s, align 8
  br label %for.cond253

for.cond253:                                      ; preds = %for.inc283, %cond.end249
  %210 = load i32* %i, align 4
  %211 = load i32* %loopend238, align 4
  %cmp254 = icmp slt i32 %210, %211
  br i1 %cmp254, label %for.body256, label %for.end286

for.body256:                                      ; preds = %for.cond253
  %212 = load i32* %i, align 4
  %idxprom257 = sext i32 %212 to i64
  %213 = load %struct.su3_vector** %dest.addr, align 8
  %arrayidx258 = getelementptr inbounds %struct.su3_vector* %213, i64 %idxprom257
  %214 = load i32* %i, align 4
  %idxprom259 = sext i32 %214 to i64
  %215 = load i8*** getelementptr inbounds ([16 x i8**]* @gen_pt, i32 0, i64 7), align 8
  %arrayidx260 = getelementptr inbounds i8** %215, i64 %idxprom259
  %216 = load i8** %arrayidx260, align 8
  %217 = bitcast i8* %216 to %struct.su3_vector*
  %218 = load i32* %i, align 4
  %idxprom261 = sext i32 %218 to i64
  %219 = load i8*** getelementptr inbounds ([16 x i8**]* @gen_pt, i32 0, i64 6), align 8
  %arrayidx262 = getelementptr inbounds i8** %219, i64 %idxprom261
  %220 = load i8** %arrayidx262, align 8
  %221 = bitcast i8* %220 to %struct.su3_vector*
  %222 = load i32* %i, align 4
  %idxprom263 = sext i32 %222 to i64
  %223 = load i8*** getelementptr inbounds ([16 x i8**]* @gen_pt, i32 0, i64 5), align 8
  %arrayidx264 = getelementptr inbounds i8** %223, i64 %idxprom263
  %224 = load i8** %arrayidx264, align 8
  %225 = bitcast i8* %224 to %struct.su3_vector*
  %226 = load i32* %i, align 4
  %idxprom265 = sext i32 %226 to i64
  %227 = load i8*** getelementptr inbounds ([16 x i8**]* @gen_pt, i32 0, i64 4), align 8
  %arrayidx266 = getelementptr inbounds i8** %227, i64 %idxprom265
  %228 = load i8** %arrayidx266, align 8
  %229 = bitcast i8* %228 to %struct.su3_vector*
  call void @sub_four_su3_vecs(%struct.su3_vector* %arrayidx258, %struct.su3_vector* %217, %struct.su3_vector* %221, %struct.su3_vector* %225, %struct.su3_vector* %229)
  %230 = load i32* %i, align 4
  %idxprom267 = sext i32 %230 to i64
  %231 = load %struct.su3_vector** getelementptr inbounds ([9 x %struct.su3_vector*]* @temp, i32 0, i64 8), align 8
  %arrayidx268 = getelementptr inbounds %struct.su3_vector* %231, i64 %idxprom267
  %232 = load i32* %i, align 4
  %idxprom269 = sext i32 %232 to i64
  %233 = load i8*** getelementptr inbounds ([16 x i8**]* @gen_pt, i32 0, i64 15), align 8
  %arrayidx270 = getelementptr inbounds i8** %233, i64 %idxprom269
  %234 = load i8** %arrayidx270, align 8
  %235 = bitcast i8* %234 to %struct.su3_vector*
  %236 = load i32* %i, align 4
  %idxprom271 = sext i32 %236 to i64
  %237 = load i8*** getelementptr inbounds ([16 x i8**]* @gen_pt, i32 0, i64 14), align 8
  %arrayidx272 = getelementptr inbounds i8** %237, i64 %idxprom271
  %238 = load i8** %arrayidx272, align 8
  %239 = bitcast i8* %238 to %struct.su3_vector*
  %240 = load i32* %i, align 4
  %idxprom273 = sext i32 %240 to i64
  %241 = load i8*** getelementptr inbounds ([16 x i8**]* @gen_pt, i32 0, i64 13), align 8
  %arrayidx274 = getelementptr inbounds i8** %241, i64 %idxprom273
  %242 = load i8** %arrayidx274, align 8
  %243 = bitcast i8* %242 to %struct.su3_vector*
  %244 = load i32* %i, align 4
  %idxprom275 = sext i32 %244 to i64
  %245 = load i8*** getelementptr inbounds ([16 x i8**]* @gen_pt, i32 0, i64 12), align 8
  %arrayidx276 = getelementptr inbounds i8** %245, i64 %idxprom275
  %246 = load i8** %arrayidx276, align 8
  %247 = bitcast i8* %246 to %struct.su3_vector*
  call void @sub_four_su3_vecs(%struct.su3_vector* %arrayidx268, %struct.su3_vector* %235, %struct.su3_vector* %239, %struct.su3_vector* %243, %struct.su3_vector* %247)
  %248 = load i32* %i, align 4
  %idxprom277 = sext i32 %248 to i64
  %249 = load %struct.su3_vector** %dest.addr, align 8
  %arrayidx278 = getelementptr inbounds %struct.su3_vector* %249, i64 %idxprom277
  %250 = load i32* %i, align 4
  %idxprom279 = sext i32 %250 to i64
  %251 = load %struct.su3_vector** getelementptr inbounds ([9 x %struct.su3_vector*]* @temp, i32 0, i64 8), align 8
  %arrayidx280 = getelementptr inbounds %struct.su3_vector* %251, i64 %idxprom279
  %252 = load i32* %i, align 4
  %idxprom281 = sext i32 %252 to i64
  %253 = load %struct.su3_vector** %dest.addr, align 8
  %arrayidx282 = getelementptr inbounds %struct.su3_vector* %253, i64 %idxprom281
  call void @add_su3_vector(%struct.su3_vector* %arrayidx278, %struct.su3_vector* %arrayidx280, %struct.su3_vector* %arrayidx282)
  br label %for.inc283

for.inc283:                                       ; preds = %for.body256
  %254 = load i32* %i, align 4
  %inc284 = add nsw i32 %254, 1
  store i32 %inc284, i32* %i, align 4
  %255 = load %struct.site** %s, align 8
  %incdec.ptr285 = getelementptr inbounds %struct.site* %255, i32 1
  store %struct.site* %incdec.ptr285, %struct.site** %s, align 8
  br label %for.cond253

for.end286:                                       ; preds = %for.cond253
  ret void
}

; Function Attrs: nounwind uwtable
define internal i32 @ks_congrad(i32 %src, i32 %dest, double %mass, i32 %niter, double %rsqmin, i32 %parity, double* %final_rsq_ptr) #0 {
entry:
  %retval = alloca i32, align 4
  %src.addr = alloca i32, align 4
  %dest.addr = alloca i32, align 4
  %mass.addr = alloca double, align 8
  %niter.addr = alloca i32, align 4
  %rsqmin.addr = alloca double, align 8
  %parity.addr = alloca i32, align 4
  %final_rsq_ptr.addr = alloca double*, align 8
  %i = alloca i32, align 4
  %s = alloca %struct.site*, align 8
  %iteration = alloca i32, align 4
  %a = alloca double, align 8
  %b = alloca double, align 8
  %rsq = alloca double, align 8
  %oldrsq = alloca double, align 8
  %pkp = alloca double, align 8
  %msq_x4 = alloca double, align 8
  %source_norm = alloca double, align 8
  %rsqstop = alloca double, align 8
  %l_parity = alloca i32, align 4
  %l_otherparity = alloca i32, align 4
  %tags1 = alloca [16 x %struct.msg_tag*], align 16
  %tags2 = alloca [16 x %struct.msg_tag*], align 16
  %special_started = alloca i32, align 4
  %nflop = alloca double, align 8
  %loopend = alloca i32, align 4
  %loopend94 = alloca i32, align 4
  %loopend133 = alloca i32, align 4
  %loopend175 = alloca i32, align 4
  %loopend214 = alloca i32, align 4
  %loopend250 = alloca i32, align 4
  store i32 %src, i32* %src.addr, align 4
  store i32 %dest, i32* %dest.addr, align 4
  store double %mass, double* %mass.addr, align 8
  store i32 %niter, i32* %niter.addr, align 4
  store double %rsqmin, double* %rsqmin.addr, align 8
  store i32 %parity, i32* %parity.addr, align 4
  store double* %final_rsq_ptr, double** %final_rsq_ptr.addr, align 8
  store double 1.187000e+03, double* %nflop, align 8
  %0 = load i32* %parity.addr, align 4
  %cmp = icmp eq i32 %0, 3
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %1 = load double* %nflop, align 8
  %mul = fmul double %1, 2.000000e+00
  store double %mul, double* %nflop, align 8
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  store i32 0, i32* %special_started, align 4
  %2 = load i32* %parity.addr, align 4
  switch i32 %2, label %sw.epilog [
    i32 2, label %sw.bb
    i32 1, label %sw.bb1
    i32 3, label %sw.bb2
  ]

sw.bb:                                            ; preds = %if.end
  store i32 2, i32* %l_parity, align 4
  store i32 1, i32* %l_otherparity, align 4
  br label %sw.epilog

sw.bb1:                                           ; preds = %if.end
  store i32 1, i32* %l_parity, align 4
  store i32 2, i32* %l_otherparity, align 4
  br label %sw.epilog

sw.bb2:                                           ; preds = %if.end
  store i32 2, i32* %l_parity, align 4
  store i32 1, i32* %l_otherparity, align 4
  br label %sw.epilog

sw.epilog:                                        ; preds = %sw.bb2, %sw.bb1, %sw.bb, %if.end
  %3 = load double* %mass.addr, align 8
  %mul3 = fmul double 4.000000e+00, %3
  %4 = load double* %mass.addr, align 8
  %mul4 = fmul double %mul3, %4
  store double %mul4, double* %msq_x4, align 8
  store i32 0, i32* %iteration, align 4
  %5 = load i32* @valid_longlinks, align 4
  %tobool = icmp ne i32 %5, 0
  br i1 %tobool, label %if.end6, label %if.then5

if.then5:                                         ; preds = %sw.epilog
  call void (...)* bitcast (void ()* @load_longlinks to void (...)*)()
  br label %if.end6

if.end6:                                          ; preds = %if.then5, %sw.epilog
  %6 = load i32* @valid_fatlinks, align 4
  %tobool7 = icmp ne i32 %6, 0
  br i1 %tobool7, label %if.end9, label %if.then8

if.then8:                                         ; preds = %if.end6
  call void (...)* bitcast (void ()* @load_fatlinks to void (...)*)()
  br label %if.end9

if.end9:                                          ; preds = %if.then8, %if.end6
  %7 = load i32* @first_congrad, align 4
  %tobool10 = icmp ne i32 %7, 0
  br i1 %tobool10, label %if.then11, label %if.end21

if.then11:                                        ; preds = %if.end9
  %8 = load i32* @sites_on_node, align 4
  %add = add nsw i32 %8, 0
  %conv = sext i32 %add to i64
  %call = call noalias i8* @calloc(i64 %conv, i64 48) #2
  %9 = bitcast i8* %call to %struct.su3_vector*
  store %struct.su3_vector* %9, %struct.su3_vector** @ttt, align 8
  %10 = load i32* @sites_on_node, align 4
  %add12 = add nsw i32 %10, 0
  %conv13 = sext i32 %add12 to i64
  %call14 = call noalias i8* @calloc(i64 %conv13, i64 48) #2
  %11 = bitcast i8* %call14 to %struct.su3_vector*
  store %struct.su3_vector* %11, %struct.su3_vector** @cg_p, align 8
  %12 = load i32* @sites_on_node, align 4
  %add15 = add nsw i32 %12, 0
  %conv16 = sext i32 %add15 to i64
  %call17 = call noalias i8* @calloc(i64 %conv16, i64 48) #2
  %13 = bitcast i8* %call17 to %struct.su3_vector*
  store %struct.su3_vector* %13, %struct.su3_vector** @resid, align 8
  %14 = load i32* @sites_on_node, align 4
  %add18 = add nsw i32 %14, 0
  %conv19 = sext i32 %add18 to i64
  %call20 = call noalias i8* @calloc(i64 %conv19, i64 48) #2
  %15 = bitcast i8* %call20 to %struct.su3_vector*
  store %struct.su3_vector* %15, %struct.su3_vector** @t_dest, align 8
  store i32 0, i32* @first_congrad, align 4
  br label %if.end21

if.end21:                                         ; preds = %if.then11, %if.end9
  store i32 0, i32* %i, align 4
  %16 = load %struct.site** @lattice, align 8
  store %struct.site* %16, %struct.site** %s, align 8
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.end21
  %17 = load i32* %i, align 4
  %18 = load i32* @sites_on_node, align 4
  %cmp22 = icmp slt i32 %17, %18
  br i1 %cmp22, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %19 = load i32* %i, align 4
  %idxprom = sext i32 %19 to i64
  %20 = load %struct.su3_vector** @t_dest, align 8
  %arrayidx = getelementptr inbounds %struct.su3_vector* %20, i64 %idxprom
  %21 = load %struct.site** %s, align 8
  %22 = bitcast %struct.site* %21 to i8*
  %23 = load i32* %dest.addr, align 4
  %idx.ext = sext i32 %23 to i64
  %add.ptr = getelementptr inbounds i8* %22, i64 %idx.ext
  %24 = bitcast i8* %add.ptr to %struct.su3_vector*
  %25 = bitcast %struct.su3_vector* %arrayidx to i8*
  %26 = bitcast %struct.su3_vector* %24 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %25, i8* %26, i64 48, i32 8, i1 false)
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %27 = load i32* %i, align 4
  %inc = add nsw i32 %27, 1
  store i32 %inc, i32* %i, align 4
  %28 = load %struct.site** %s, align 8
  %incdec.ptr = getelementptr inbounds %struct.site* %28, i32 1
  store %struct.site* %incdec.ptr, %struct.site** %s, align 8
  br label %for.cond

for.end:                                          ; preds = %for.cond
  br label %start

start:                                            ; preds = %if.then279, %if.then248, %if.then204, %if.then83, %for.end
  %29 = load i32* %special_started, align 4
  %cmp24 = icmp eq i32 %29, 1
  br i1 %cmp24, label %if.then26, label %if.end28

if.then26:                                        ; preds = %start
  %arraydecay = getelementptr inbounds [16 x %struct.msg_tag*]* %tags1, i32 0, i32 0
  %arraydecay27 = getelementptr inbounds [16 x %struct.msg_tag*]* %tags2, i32 0, i32 0
  call void @cleanup_gathers(%struct.msg_tag** %arraydecay, %struct.msg_tag** %arraydecay27)
  store i32 0, i32* %special_started, align 4
  br label %if.end28

if.end28:                                         ; preds = %if.then26, %start
  store double 0.000000e+00, double* %source_norm, align 8
  store double 0.000000e+00, double* %rsq, align 8
  %30 = load %struct.su3_vector** @t_dest, align 8
  %31 = load %struct.su3_vector** @ttt, align 8
  %32 = load i32* %l_otherparity, align 4
  %arraydecay29 = getelementptr inbounds [16 x %struct.msg_tag*]* %tags2, i32 0, i32 0
  call void @dslash_fn_on_temp_special(%struct.su3_vector* %30, %struct.su3_vector* %31, i32 %32, %struct.msg_tag** %arraydecay29, i32 1)
  %33 = load %struct.su3_vector** @ttt, align 8
  %34 = load %struct.su3_vector** @ttt, align 8
  %35 = load i32* %l_parity, align 4
  %arraydecay30 = getelementptr inbounds [16 x %struct.msg_tag*]* %tags1, i32 0, i32 0
  call void @dslash_fn_on_temp_special(%struct.su3_vector* %33, %struct.su3_vector* %34, i32 %35, %struct.msg_tag** %arraydecay30, i32 1)
  %arraydecay31 = getelementptr inbounds [16 x %struct.msg_tag*]* %tags1, i32 0, i32 0
  %arraydecay32 = getelementptr inbounds [16 x %struct.msg_tag*]* %tags2, i32 0, i32 0
  call void @cleanup_gathers(%struct.msg_tag** %arraydecay31, %struct.msg_tag** %arraydecay32)
  %36 = load i32* %l_parity, align 4
  %cmp33 = icmp eq i32 %36, 2
  br i1 %cmp33, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.end28
  %37 = load i32* @even_sites_on_node, align 4
  br label %cond.end

cond.false:                                       ; preds = %if.end28
  %38 = load i32* @sites_on_node, align 4
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %37, %cond.true ], [ %38, %cond.false ]
  store i32 %cond, i32* %loopend, align 4
  %39 = load i32* %l_parity, align 4
  %cmp35 = icmp eq i32 %39, 1
  br i1 %cmp35, label %cond.true37, label %cond.false38

cond.true37:                                      ; preds = %cond.end
  %40 = load i32* @even_sites_on_node, align 4
  br label %cond.end39

cond.false38:                                     ; preds = %cond.end
  br label %cond.end39

cond.end39:                                       ; preds = %cond.false38, %cond.true37
  %cond40 = phi i32 [ %40, %cond.true37 ], [ 0, %cond.false38 ]
  store i32 %cond40, i32* %i, align 4
  %41 = load i32* %i, align 4
  %idxprom41 = sext i32 %41 to i64
  %42 = load %struct.site** @lattice, align 8
  %arrayidx42 = getelementptr inbounds %struct.site* %42, i64 %idxprom41
  store %struct.site* %arrayidx42, %struct.site** %s, align 8
  br label %for.cond43

for.cond43:                                       ; preds = %for.inc71, %cond.end39
  %43 = load i32* %i, align 4
  %44 = load i32* %loopend, align 4
  %cmp44 = icmp slt i32 %43, %44
  br i1 %cmp44, label %for.body46, label %for.end74

for.body46:                                       ; preds = %for.cond43
  %45 = load i32* %i, align 4
  %idxprom47 = sext i32 %45 to i64
  %46 = load %struct.su3_vector** @ttt, align 8
  %arrayidx48 = getelementptr inbounds %struct.su3_vector* %46, i64 %idxprom47
  %47 = load i32* %i, align 4
  %idxprom49 = sext i32 %47 to i64
  %48 = load %struct.su3_vector** @t_dest, align 8
  %arrayidx50 = getelementptr inbounds %struct.su3_vector* %48, i64 %idxprom49
  %49 = load double* %msq_x4, align 8
  %sub = fsub double -0.000000e+00, %49
  %50 = load i32* %i, align 4
  %idxprom51 = sext i32 %50 to i64
  %51 = load %struct.su3_vector** @ttt, align 8
  %arrayidx52 = getelementptr inbounds %struct.su3_vector* %51, i64 %idxprom51
  call void @scalar_mult_add_su3_vector(%struct.su3_vector* %arrayidx48, %struct.su3_vector* %arrayidx50, double %sub, %struct.su3_vector* %arrayidx52)
  %52 = load %struct.site** %s, align 8
  %53 = bitcast %struct.site* %52 to i8*
  %54 = load i32* %src.addr, align 4
  %idx.ext53 = sext i32 %54 to i64
  %add.ptr54 = getelementptr inbounds i8* %53, i64 %idx.ext53
  %55 = bitcast i8* %add.ptr54 to %struct.su3_vector*
  %56 = load i32* %i, align 4
  %idxprom55 = sext i32 %56 to i64
  %57 = load %struct.su3_vector** @ttt, align 8
  %arrayidx56 = getelementptr inbounds %struct.su3_vector* %57, i64 %idxprom55
  %58 = load i32* %i, align 4
  %idxprom57 = sext i32 %58 to i64
  %59 = load %struct.su3_vector** @resid, align 8
  %arrayidx58 = getelementptr inbounds %struct.su3_vector* %59, i64 %idxprom57
  call void @add_su3_vector(%struct.su3_vector* %55, %struct.su3_vector* %arrayidx56, %struct.su3_vector* %arrayidx58)
  %60 = load i32* %i, align 4
  %idxprom59 = sext i32 %60 to i64
  %61 = load %struct.su3_vector** @cg_p, align 8
  %arrayidx60 = getelementptr inbounds %struct.su3_vector* %61, i64 %idxprom59
  %62 = load i32* %i, align 4
  %idxprom61 = sext i32 %62 to i64
  %63 = load %struct.su3_vector** @resid, align 8
  %arrayidx62 = getelementptr inbounds %struct.su3_vector* %63, i64 %idxprom61
  %64 = bitcast %struct.su3_vector* %arrayidx60 to i8*
  %65 = bitcast %struct.su3_vector* %arrayidx62 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %64, i8* %65, i64 48, i32 8, i1 false)
  %66 = load %struct.site** %s, align 8
  %67 = bitcast %struct.site* %66 to i8*
  %68 = load i32* %src.addr, align 4
  %idx.ext63 = sext i32 %68 to i64
  %add.ptr64 = getelementptr inbounds i8* %67, i64 %idx.ext63
  %69 = bitcast i8* %add.ptr64 to %struct.su3_vector*
  %call65 = call double @magsq_su3vec(%struct.su3_vector* %69)
  %70 = load double* %source_norm, align 8
  %add66 = fadd double %70, %call65
  store double %add66, double* %source_norm, align 8
  %71 = load i32* %i, align 4
  %idxprom67 = sext i32 %71 to i64
  %72 = load %struct.su3_vector** @resid, align 8
  %arrayidx68 = getelementptr inbounds %struct.su3_vector* %72, i64 %idxprom67
  %call69 = call double @magsq_su3vec(%struct.su3_vector* %arrayidx68)
  %73 = load double* %rsq, align 8
  %add70 = fadd double %73, %call69
  store double %add70, double* %rsq, align 8
  br label %for.inc71

for.inc71:                                        ; preds = %for.body46
  %74 = load i32* %i, align 4
  %inc72 = add nsw i32 %74, 1
  store i32 %inc72, i32* %i, align 4
  %75 = load %struct.site** %s, align 8
  %incdec.ptr73 = getelementptr inbounds %struct.site* %75, i32 1
  store %struct.site* %incdec.ptr73, %struct.site** %s, align 8
  br label %for.cond43

for.end74:                                        ; preds = %for.cond43
  call void @g_doublesum(double* %source_norm)
  call void @g_doublesum(double* %rsq)
  %76 = load i32* %iteration, align 4
  %inc75 = add nsw i32 %76, 1
  store i32 %inc75, i32* %iteration, align 4
  %77 = load i32* @total_iters, align 4
  %inc76 = add nsw i32 %77, 1
  store i32 %inc76, i32* @total_iters, align 4
  %78 = load double* %rsqmin.addr, align 8
  %79 = load double* %source_norm, align 8
  %mul77 = fmul double %78, %79
  store double %mul77, double* %rsqstop, align 8
  %80 = load double* %rsq, align 8
  %81 = load double* %rsqstop, align 8
  %cmp78 = fcmp ole double %80, %81
  br i1 %cmp78, label %if.then80, label %if.end85

if.then80:                                        ; preds = %for.end74
  %82 = load i32* %parity.addr, align 4
  %cmp81 = icmp eq i32 %82, 3
  br i1 %cmp81, label %if.then83, label %if.end84

if.then83:                                        ; preds = %if.then80
  store i32 1, i32* %l_parity, align 4
  store i32 2, i32* %l_otherparity, align 4
  store i32 2, i32* %parity.addr, align 4
  store i32 0, i32* %iteration, align 4
  br label %start

if.end84:                                         ; preds = %if.then80
  %83 = load double* %rsq, align 8
  %84 = load double** %final_rsq_ptr.addr, align 8
  store double %83, double* %84, align 8
  %85 = load i32* %iteration, align 4
  store i32 %85, i32* %retval
  br label %return

if.end85:                                         ; preds = %for.end74
  br label %do.body

do.body:                                          ; preds = %do.cond, %if.end85
  %86 = load double* %rsq, align 8
  store double %86, double* %oldrsq, align 8
  store double 0.000000e+00, double* %pkp, align 8
  %87 = load i32* %special_started, align 4
  %cmp86 = icmp eq i32 %87, 0
  br i1 %cmp86, label %if.then88, label %if.else

if.then88:                                        ; preds = %do.body
  %88 = load %struct.su3_vector** @cg_p, align 8
  %89 = load %struct.su3_vector** @ttt, align 8
  %90 = load i32* %l_otherparity, align 4
  %arraydecay89 = getelementptr inbounds [16 x %struct.msg_tag*]* %tags2, i32 0, i32 0
  call void @dslash_fn_on_temp_special(%struct.su3_vector* %88, %struct.su3_vector* %89, i32 %90, %struct.msg_tag** %arraydecay89, i32 1)
  %91 = load %struct.su3_vector** @ttt, align 8
  %92 = load %struct.su3_vector** @ttt, align 8
  %93 = load i32* %l_parity, align 4
  %arraydecay90 = getelementptr inbounds [16 x %struct.msg_tag*]* %tags1, i32 0, i32 0
  call void @dslash_fn_on_temp_special(%struct.su3_vector* %91, %struct.su3_vector* %92, i32 %93, %struct.msg_tag** %arraydecay90, i32 1)
  store i32 1, i32* %special_started, align 4
  br label %if.end93

if.else:                                          ; preds = %do.body
  %94 = load %struct.su3_vector** @cg_p, align 8
  %95 = load %struct.su3_vector** @ttt, align 8
  %96 = load i32* %l_otherparity, align 4
  %arraydecay91 = getelementptr inbounds [16 x %struct.msg_tag*]* %tags2, i32 0, i32 0
  call void @dslash_fn_on_temp_special(%struct.su3_vector* %94, %struct.su3_vector* %95, i32 %96, %struct.msg_tag** %arraydecay91, i32 0)
  %97 = load %struct.su3_vector** @ttt, align 8
  %98 = load %struct.su3_vector** @ttt, align 8
  %99 = load i32* %l_parity, align 4
  %arraydecay92 = getelementptr inbounds [16 x %struct.msg_tag*]* %tags1, i32 0, i32 0
  call void @dslash_fn_on_temp_special(%struct.su3_vector* %97, %struct.su3_vector* %98, i32 %99, %struct.msg_tag** %arraydecay92, i32 0)
  br label %if.end93

if.end93:                                         ; preds = %if.else, %if.then88
  store double 0.000000e+00, double* %pkp, align 8
  %100 = load i32* %l_parity, align 4
  %cmp95 = icmp eq i32 %100, 2
  br i1 %cmp95, label %cond.true97, label %cond.false98

cond.true97:                                      ; preds = %if.end93
  %101 = load i32* @even_sites_on_node, align 4
  br label %cond.end99

cond.false98:                                     ; preds = %if.end93
  %102 = load i32* @sites_on_node, align 4
  br label %cond.end99

cond.end99:                                       ; preds = %cond.false98, %cond.true97
  %cond100 = phi i32 [ %101, %cond.true97 ], [ %102, %cond.false98 ]
  store i32 %cond100, i32* %loopend94, align 4
  %103 = load i32* %l_parity, align 4
  %cmp101 = icmp eq i32 %103, 1
  br i1 %cmp101, label %cond.true103, label %cond.false104

cond.true103:                                     ; preds = %cond.end99
  %104 = load i32* @even_sites_on_node, align 4
  br label %cond.end105

cond.false104:                                    ; preds = %cond.end99
  br label %cond.end105

cond.end105:                                      ; preds = %cond.false104, %cond.true103
  %cond106 = phi i32 [ %104, %cond.true103 ], [ 0, %cond.false104 ]
  store i32 %cond106, i32* %i, align 4
  %105 = load i32* %i, align 4
  %idxprom107 = sext i32 %105 to i64
  %106 = load %struct.site** @lattice, align 8
  %arrayidx108 = getelementptr inbounds %struct.site* %106, i64 %idxprom107
  store %struct.site* %arrayidx108, %struct.site** %s, align 8
  br label %for.cond109

for.cond109:                                      ; preds = %for.inc126, %cond.end105
  %107 = load i32* %i, align 4
  %108 = load i32* %loopend94, align 4
  %cmp110 = icmp slt i32 %107, %108
  br i1 %cmp110, label %for.body112, label %for.end129

for.body112:                                      ; preds = %for.cond109
  %109 = load i32* %i, align 4
  %idxprom113 = sext i32 %109 to i64
  %110 = load %struct.su3_vector** @ttt, align 8
  %arrayidx114 = getelementptr inbounds %struct.su3_vector* %110, i64 %idxprom113
  %111 = load i32* %i, align 4
  %idxprom115 = sext i32 %111 to i64
  %112 = load %struct.su3_vector** @cg_p, align 8
  %arrayidx116 = getelementptr inbounds %struct.su3_vector* %112, i64 %idxprom115
  %113 = load double* %msq_x4, align 8
  %sub117 = fsub double -0.000000e+00, %113
  %114 = load i32* %i, align 4
  %idxprom118 = sext i32 %114 to i64
  %115 = load %struct.su3_vector** @ttt, align 8
  %arrayidx119 = getelementptr inbounds %struct.su3_vector* %115, i64 %idxprom118
  call void @scalar_mult_add_su3_vector(%struct.su3_vector* %arrayidx114, %struct.su3_vector* %arrayidx116, double %sub117, %struct.su3_vector* %arrayidx119)
  %116 = load i32* %i, align 4
  %idxprom120 = sext i32 %116 to i64
  %117 = load %struct.su3_vector** @cg_p, align 8
  %arrayidx121 = getelementptr inbounds %struct.su3_vector* %117, i64 %idxprom120
  %118 = load i32* %i, align 4
  %idxprom122 = sext i32 %118 to i64
  %119 = load %struct.su3_vector** @ttt, align 8
  %arrayidx123 = getelementptr inbounds %struct.su3_vector* %119, i64 %idxprom122
  %call124 = call double @su3_rdot(%struct.su3_vector* %arrayidx121, %struct.su3_vector* %arrayidx123)
  %120 = load double* %pkp, align 8
  %add125 = fadd double %120, %call124
  store double %add125, double* %pkp, align 8
  br label %for.inc126

for.inc126:                                       ; preds = %for.body112
  %121 = load i32* %i, align 4
  %inc127 = add nsw i32 %121, 1
  store i32 %inc127, i32* %i, align 4
  %122 = load %struct.site** %s, align 8
  %incdec.ptr128 = getelementptr inbounds %struct.site* %122, i32 1
  store %struct.site* %incdec.ptr128, %struct.site** %s, align 8
  br label %for.cond109

for.end129:                                       ; preds = %for.cond109
  call void @g_doublesum(double* %pkp)
  %123 = load i32* %iteration, align 4
  %inc130 = add nsw i32 %123, 1
  store i32 %inc130, i32* %iteration, align 4
  %124 = load i32* @total_iters, align 4
  %inc131 = add nsw i32 %124, 1
  store i32 %inc131, i32* @total_iters, align 4
  %125 = load double* %rsq, align 8
  %sub132 = fsub double -0.000000e+00, %125
  %126 = load double* %pkp, align 8
  %div = fdiv double %sub132, %126
  store double %div, double* %a, align 8
  store double 0.000000e+00, double* %rsq, align 8
  %127 = load i32* %l_parity, align 4
  %cmp134 = icmp eq i32 %127, 2
  br i1 %cmp134, label %cond.true136, label %cond.false137

cond.true136:                                     ; preds = %for.end129
  %128 = load i32* @even_sites_on_node, align 4
  br label %cond.end138

cond.false137:                                    ; preds = %for.end129
  %129 = load i32* @sites_on_node, align 4
  br label %cond.end138

cond.end138:                                      ; preds = %cond.false137, %cond.true136
  %cond139 = phi i32 [ %128, %cond.true136 ], [ %129, %cond.false137 ]
  store i32 %cond139, i32* %loopend133, align 4
  %130 = load i32* %l_parity, align 4
  %cmp140 = icmp eq i32 %130, 1
  br i1 %cmp140, label %cond.true142, label %cond.false143

cond.true142:                                     ; preds = %cond.end138
  %131 = load i32* @even_sites_on_node, align 4
  br label %cond.end144

cond.false143:                                    ; preds = %cond.end138
  br label %cond.end144

cond.end144:                                      ; preds = %cond.false143, %cond.true142
  %cond145 = phi i32 [ %131, %cond.true142 ], [ 0, %cond.false143 ]
  store i32 %cond145, i32* %i, align 4
  %132 = load i32* %i, align 4
  %idxprom146 = sext i32 %132 to i64
  %133 = load %struct.site** @lattice, align 8
  %arrayidx147 = getelementptr inbounds %struct.site* %133, i64 %idxprom146
  store %struct.site* %arrayidx147, %struct.site** %s, align 8
  br label %for.cond148

for.cond148:                                      ; preds = %for.inc168, %cond.end144
  %134 = load i32* %i, align 4
  %135 = load i32* %loopend133, align 4
  %cmp149 = icmp slt i32 %134, %135
  br i1 %cmp149, label %for.body151, label %for.end171

for.body151:                                      ; preds = %for.cond148
  %136 = load i32* %i, align 4
  %idxprom152 = sext i32 %136 to i64
  %137 = load %struct.su3_vector** @t_dest, align 8
  %arrayidx153 = getelementptr inbounds %struct.su3_vector* %137, i64 %idxprom152
  %138 = load i32* %i, align 4
  %idxprom154 = sext i32 %138 to i64
  %139 = load %struct.su3_vector** @cg_p, align 8
  %arrayidx155 = getelementptr inbounds %struct.su3_vector* %139, i64 %idxprom154
  %140 = load double* %a, align 8
  %141 = load i32* %i, align 4
  %idxprom156 = sext i32 %141 to i64
  %142 = load %struct.su3_vector** @t_dest, align 8
  %arrayidx157 = getelementptr inbounds %struct.su3_vector* %142, i64 %idxprom156
  call void @scalar_mult_add_su3_vector(%struct.su3_vector* %arrayidx153, %struct.su3_vector* %arrayidx155, double %140, %struct.su3_vector* %arrayidx157)
  %143 = load i32* %i, align 4
  %idxprom158 = sext i32 %143 to i64
  %144 = load %struct.su3_vector** @resid, align 8
  %arrayidx159 = getelementptr inbounds %struct.su3_vector* %144, i64 %idxprom158
  %145 = load i32* %i, align 4
  %idxprom160 = sext i32 %145 to i64
  %146 = load %struct.su3_vector** @ttt, align 8
  %arrayidx161 = getelementptr inbounds %struct.su3_vector* %146, i64 %idxprom160
  %147 = load double* %a, align 8
  %148 = load i32* %i, align 4
  %idxprom162 = sext i32 %148 to i64
  %149 = load %struct.su3_vector** @resid, align 8
  %arrayidx163 = getelementptr inbounds %struct.su3_vector* %149, i64 %idxprom162
  call void @scalar_mult_add_su3_vector(%struct.su3_vector* %arrayidx159, %struct.su3_vector* %arrayidx161, double %147, %struct.su3_vector* %arrayidx163)
  %150 = load i32* %i, align 4
  %idxprom164 = sext i32 %150 to i64
  %151 = load %struct.su3_vector** @resid, align 8
  %arrayidx165 = getelementptr inbounds %struct.su3_vector* %151, i64 %idxprom164
  %call166 = call double @magsq_su3vec(%struct.su3_vector* %arrayidx165)
  %152 = load double* %rsq, align 8
  %add167 = fadd double %152, %call166
  store double %add167, double* %rsq, align 8
  br label %for.inc168

for.inc168:                                       ; preds = %for.body151
  %153 = load i32* %i, align 4
  %inc169 = add nsw i32 %153, 1
  store i32 %inc169, i32* %i, align 4
  %154 = load %struct.site** %s, align 8
  %incdec.ptr170 = getelementptr inbounds %struct.site* %154, i32 1
  store %struct.site* %incdec.ptr170, %struct.site** %s, align 8
  br label %for.cond148

for.end171:                                       ; preds = %for.cond148
  call void @g_doublesum(double* %rsq)
  %155 = load double* %rsq, align 8
  %156 = load double* %rsqstop, align 8
  %cmp172 = fcmp ole double %155, %156
  br i1 %cmp172, label %if.then174, label %if.end212

if.then174:                                       ; preds = %for.end171
  %157 = load i32* %l_parity, align 4
  %cmp176 = icmp eq i32 %157, 2
  br i1 %cmp176, label %cond.true178, label %cond.false179

cond.true178:                                     ; preds = %if.then174
  %158 = load i32* @even_sites_on_node, align 4
  br label %cond.end180

cond.false179:                                    ; preds = %if.then174
  %159 = load i32* @sites_on_node, align 4
  br label %cond.end180

cond.end180:                                      ; preds = %cond.false179, %cond.true178
  %cond181 = phi i32 [ %158, %cond.true178 ], [ %159, %cond.false179 ]
  store i32 %cond181, i32* %loopend175, align 4
  %160 = load i32* %l_parity, align 4
  %cmp182 = icmp eq i32 %160, 1
  br i1 %cmp182, label %cond.true184, label %cond.false185

cond.true184:                                     ; preds = %cond.end180
  %161 = load i32* @even_sites_on_node, align 4
  br label %cond.end186

cond.false185:                                    ; preds = %cond.end180
  br label %cond.end186

cond.end186:                                      ; preds = %cond.false185, %cond.true184
  %cond187 = phi i32 [ %161, %cond.true184 ], [ 0, %cond.false185 ]
  store i32 %cond187, i32* %i, align 4
  %162 = load i32* %i, align 4
  %idxprom188 = sext i32 %162 to i64
  %163 = load %struct.site** @lattice, align 8
  %arrayidx189 = getelementptr inbounds %struct.site* %163, i64 %idxprom188
  store %struct.site* %arrayidx189, %struct.site** %s, align 8
  br label %for.cond190

for.cond190:                                      ; preds = %for.inc198, %cond.end186
  %164 = load i32* %i, align 4
  %165 = load i32* %loopend175, align 4
  %cmp191 = icmp slt i32 %164, %165
  br i1 %cmp191, label %for.body193, label %for.end201

for.body193:                                      ; preds = %for.cond190
  %166 = load %struct.site** %s, align 8
  %167 = bitcast %struct.site* %166 to i8*
  %168 = load i32* %dest.addr, align 4
  %idx.ext194 = sext i32 %168 to i64
  %add.ptr195 = getelementptr inbounds i8* %167, i64 %idx.ext194
  %169 = bitcast i8* %add.ptr195 to %struct.su3_vector*
  %170 = load i32* %i, align 4
  %idxprom196 = sext i32 %170 to i64
  %171 = load %struct.su3_vector** @t_dest, align 8
  %arrayidx197 = getelementptr inbounds %struct.su3_vector* %171, i64 %idxprom196
  %172 = bitcast %struct.su3_vector* %169 to i8*
  %173 = bitcast %struct.su3_vector* %arrayidx197 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %172, i8* %173, i64 48, i32 8, i1 false)
  br label %for.inc198

for.inc198:                                       ; preds = %for.body193
  %174 = load i32* %i, align 4
  %inc199 = add nsw i32 %174, 1
  store i32 %inc199, i32* %i, align 4
  %175 = load %struct.site** %s, align 8
  %incdec.ptr200 = getelementptr inbounds %struct.site* %175, i32 1
  store %struct.site* %incdec.ptr200, %struct.site** %s, align 8
  br label %for.cond190

for.end201:                                       ; preds = %for.cond190
  %176 = load i32* %parity.addr, align 4
  %cmp202 = icmp eq i32 %176, 3
  br i1 %cmp202, label %if.then204, label %if.end205

if.then204:                                       ; preds = %for.end201
  store i32 1, i32* %l_parity, align 4
  store i32 2, i32* %l_otherparity, align 4
  store i32 2, i32* %parity.addr, align 4
  store i32 0, i32* %iteration, align 4
  br label %start

if.end205:                                        ; preds = %for.end201
  %177 = load double* %rsq, align 8
  %178 = load double** %final_rsq_ptr.addr, align 8
  store double %177, double* %178, align 8
  %179 = load i32* %special_started, align 4
  %cmp206 = icmp eq i32 %179, 1
  br i1 %cmp206, label %if.then208, label %if.end211

if.then208:                                       ; preds = %if.end205
  %arraydecay209 = getelementptr inbounds [16 x %struct.msg_tag*]* %tags1, i32 0, i32 0
  %arraydecay210 = getelementptr inbounds [16 x %struct.msg_tag*]* %tags2, i32 0, i32 0
  call void @cleanup_gathers(%struct.msg_tag** %arraydecay209, %struct.msg_tag** %arraydecay210)
  store i32 0, i32* %special_started, align 4
  br label %if.end211

if.end211:                                        ; preds = %if.then208, %if.end205
  %180 = load i32* %iteration, align 4
  store i32 %180, i32* %retval
  br label %return

if.end212:                                        ; preds = %for.end171
  %181 = load double* %rsq, align 8
  %182 = load double* %oldrsq, align 8
  %div213 = fdiv double %181, %182
  store double %div213, double* %b, align 8
  %183 = load i32* %l_parity, align 4
  %cmp215 = icmp eq i32 %183, 2
  br i1 %cmp215, label %cond.true217, label %cond.false218

cond.true217:                                     ; preds = %if.end212
  %184 = load i32* @even_sites_on_node, align 4
  br label %cond.end219

cond.false218:                                    ; preds = %if.end212
  %185 = load i32* @sites_on_node, align 4
  br label %cond.end219

cond.end219:                                      ; preds = %cond.false218, %cond.true217
  %cond220 = phi i32 [ %184, %cond.true217 ], [ %185, %cond.false218 ]
  store i32 %cond220, i32* %loopend214, align 4
  %186 = load i32* %l_parity, align 4
  %cmp221 = icmp eq i32 %186, 1
  br i1 %cmp221, label %cond.true223, label %cond.false224

cond.true223:                                     ; preds = %cond.end219
  %187 = load i32* @even_sites_on_node, align 4
  br label %cond.end225

cond.false224:                                    ; preds = %cond.end219
  br label %cond.end225

cond.end225:                                      ; preds = %cond.false224, %cond.true223
  %cond226 = phi i32 [ %187, %cond.true223 ], [ 0, %cond.false224 ]
  store i32 %cond226, i32* %i, align 4
  %188 = load i32* %i, align 4
  %idxprom227 = sext i32 %188 to i64
  %189 = load %struct.site** @lattice, align 8
  %arrayidx228 = getelementptr inbounds %struct.site* %189, i64 %idxprom227
  store %struct.site* %arrayidx228, %struct.site** %s, align 8
  br label %for.cond229

for.cond229:                                      ; preds = %for.inc239, %cond.end225
  %190 = load i32* %i, align 4
  %191 = load i32* %loopend214, align 4
  %cmp230 = icmp slt i32 %190, %191
  br i1 %cmp230, label %for.body232, label %for.end242

for.body232:                                      ; preds = %for.cond229
  %192 = load i32* %i, align 4
  %idxprom233 = sext i32 %192 to i64
  %193 = load %struct.su3_vector** @resid, align 8
  %arrayidx234 = getelementptr inbounds %struct.su3_vector* %193, i64 %idxprom233
  %194 = load i32* %i, align 4
  %idxprom235 = sext i32 %194 to i64
  %195 = load %struct.su3_vector** @cg_p, align 8
  %arrayidx236 = getelementptr inbounds %struct.su3_vector* %195, i64 %idxprom235
  %196 = load double* %b, align 8
  %197 = load i32* %i, align 4
  %idxprom237 = sext i32 %197 to i64
  %198 = load %struct.su3_vector** @cg_p, align 8
  %arrayidx238 = getelementptr inbounds %struct.su3_vector* %198, i64 %idxprom237
  call void @scalar_mult_add_su3_vector(%struct.su3_vector* %arrayidx234, %struct.su3_vector* %arrayidx236, double %196, %struct.su3_vector* %arrayidx238)
  br label %for.inc239

for.inc239:                                       ; preds = %for.body232
  %199 = load i32* %i, align 4
  %inc240 = add nsw i32 %199, 1
  store i32 %inc240, i32* %i, align 4
  %200 = load %struct.site** %s, align 8
  %incdec.ptr241 = getelementptr inbounds %struct.site* %200, i32 1
  store %struct.site* %incdec.ptr241, %struct.site** %s, align 8
  br label %for.cond229

for.end242:                                       ; preds = %for.cond229
  br label %do.cond

do.cond:                                          ; preds = %for.end242
  %201 = load i32* %iteration, align 4
  %202 = load i32* %niter.addr, align 4
  %rem = srem i32 %201, %202
  %cmp243 = icmp ne i32 %rem, 0
  br i1 %cmp243, label %do.body, label %do.end

do.end:                                           ; preds = %do.cond
  %203 = load i32* %iteration, align 4
  %204 = load i32* %niter.addr, align 4
  %mul245 = mul nsw i32 5, %204
  %cmp246 = icmp slt i32 %203, %mul245
  br i1 %cmp246, label %if.then248, label %if.end249

if.then248:                                       ; preds = %do.end
  br label %start

if.end249:                                        ; preds = %do.end
  %205 = load i32* %l_parity, align 4
  %cmp251 = icmp eq i32 %205, 2
  br i1 %cmp251, label %cond.true253, label %cond.false254

cond.true253:                                     ; preds = %if.end249
  %206 = load i32* @even_sites_on_node, align 4
  br label %cond.end255

cond.false254:                                    ; preds = %if.end249
  %207 = load i32* @sites_on_node, align 4
  br label %cond.end255

cond.end255:                                      ; preds = %cond.false254, %cond.true253
  %cond256 = phi i32 [ %206, %cond.true253 ], [ %207, %cond.false254 ]
  store i32 %cond256, i32* %loopend250, align 4
  %208 = load i32* %l_parity, align 4
  %cmp257 = icmp eq i32 %208, 1
  br i1 %cmp257, label %cond.true259, label %cond.false260

cond.true259:                                     ; preds = %cond.end255
  %209 = load i32* @even_sites_on_node, align 4
  br label %cond.end261

cond.false260:                                    ; preds = %cond.end255
  br label %cond.end261

cond.end261:                                      ; preds = %cond.false260, %cond.true259
  %cond262 = phi i32 [ %209, %cond.true259 ], [ 0, %cond.false260 ]
  store i32 %cond262, i32* %i, align 4
  %210 = load i32* %i, align 4
  %idxprom263 = sext i32 %210 to i64
  %211 = load %struct.site** @lattice, align 8
  %arrayidx264 = getelementptr inbounds %struct.site* %211, i64 %idxprom263
  store %struct.site* %arrayidx264, %struct.site** %s, align 8
  br label %for.cond265

for.cond265:                                      ; preds = %for.inc273, %cond.end261
  %212 = load i32* %i, align 4
  %213 = load i32* %loopend250, align 4
  %cmp266 = icmp slt i32 %212, %213
  br i1 %cmp266, label %for.body268, label %for.end276

for.body268:                                      ; preds = %for.cond265
  %214 = load %struct.site** %s, align 8
  %215 = bitcast %struct.site* %214 to i8*
  %216 = load i32* %dest.addr, align 4
  %idx.ext269 = sext i32 %216 to i64
  %add.ptr270 = getelementptr inbounds i8* %215, i64 %idx.ext269
  %217 = bitcast i8* %add.ptr270 to %struct.su3_vector*
  %218 = load i32* %i, align 4
  %idxprom271 = sext i32 %218 to i64
  %219 = load %struct.su3_vector** @t_dest, align 8
  %arrayidx272 = getelementptr inbounds %struct.su3_vector* %219, i64 %idxprom271
  %220 = bitcast %struct.su3_vector* %217 to i8*
  %221 = bitcast %struct.su3_vector* %arrayidx272 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %220, i8* %221, i64 48, i32 8, i1 false)
  br label %for.inc273

for.inc273:                                       ; preds = %for.body268
  %222 = load i32* %i, align 4
  %inc274 = add nsw i32 %222, 1
  store i32 %inc274, i32* %i, align 4
  %223 = load %struct.site** %s, align 8
  %incdec.ptr275 = getelementptr inbounds %struct.site* %223, i32 1
  store %struct.site* %incdec.ptr275, %struct.site** %s, align 8
  br label %for.cond265

for.end276:                                       ; preds = %for.cond265
  %224 = load i32* %parity.addr, align 4
  %cmp277 = icmp eq i32 %224, 3
  br i1 %cmp277, label %if.then279, label %if.end280

if.then279:                                       ; preds = %for.end276
  store i32 1, i32* %l_parity, align 4
  store i32 2, i32* %l_otherparity, align 4
  store i32 2, i32* %parity.addr, align 4
  store i32 0, i32* %iteration, align 4
  br label %start

if.end280:                                        ; preds = %for.end276
  %225 = load double* %rsq, align 8
  %226 = load double** %final_rsq_ptr.addr, align 8
  store double %225, double* %226, align 8
  %227 = load i32* %special_started, align 4
  %cmp281 = icmp eq i32 %227, 1
  br i1 %cmp281, label %if.then283, label %if.end286

if.then283:                                       ; preds = %if.end280
  %arraydecay284 = getelementptr inbounds [16 x %struct.msg_tag*]* %tags1, i32 0, i32 0
  %arraydecay285 = getelementptr inbounds [16 x %struct.msg_tag*]* %tags2, i32 0, i32 0
  call void @cleanup_gathers(%struct.msg_tag** %arraydecay284, %struct.msg_tag** %arraydecay285)
  store i32 0, i32* %special_started, align 4
  br label %if.end286

if.end286:                                        ; preds = %if.then283, %if.end280
  %228 = load i32* @this_node, align 4
  %cmp287 = icmp eq i32 %228, 0
  br i1 %cmp287, label %if.then289, label %if.end291

if.then289:                                       ; preds = %if.end286
  %229 = load i32* %iteration, align 4
  %230 = load double* %rsq, align 8
  %231 = load double* %rsqstop, align 8
  %call290 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([59 x i8]* @.str409, i32 0, i32 0), i32 %229, double %230, double %231)
  br label %if.end291

if.end291:                                        ; preds = %if.then289, %if.end286
  %232 = load %struct._IO_FILE** @stdout, align 8
  %call292 = call i32 @fflush(%struct._IO_FILE* %232)
  %233 = load i32* %iteration, align 4
  store i32 %233, i32* %retval
  br label %return

return:                                           ; preds = %if.end291, %if.end211, %if.end84
  %234 = load i32* %retval
  ret i32 %234
}

; Function Attrs: nounwind uwtable
define internal void @clear_latvec(i32 %v, i32 %parity) #0 {
entry:
  %v.addr = alloca i32, align 4
  %parity.addr = alloca i32, align 4
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %s = alloca %struct.site*, align 8
  %vv = alloca %struct.su3_vector*, align 8
  store i32 %v, i32* %v.addr, align 4
  store i32 %parity, i32* %parity.addr, align 4
  %0 = load i32* %parity.addr, align 4
  switch i32 %0, label %sw.epilog [
    i32 2, label %sw.bb
    i32 1, label %sw.bb10
    i32 3, label %sw.bb36
  ]

sw.bb:                                            ; preds = %entry
  store i32 0, i32* %i, align 4
  %1 = load %struct.site** @lattice, align 8
  store %struct.site* %1, %struct.site** %s, align 8
  br label %for.cond

for.cond:                                         ; preds = %for.inc7, %sw.bb
  %2 = load i32* %i, align 4
  %3 = load i32* @even_sites_on_node, align 4
  %cmp = icmp slt i32 %2, %3
  br i1 %cmp, label %for.body, label %for.end9

for.body:                                         ; preds = %for.cond
  %4 = load %struct.site** %s, align 8
  %5 = bitcast %struct.site* %4 to i8*
  %6 = load i32* %v.addr, align 4
  %idx.ext = sext i32 %6 to i64
  %add.ptr = getelementptr inbounds i8* %5, i64 %idx.ext
  %7 = bitcast i8* %add.ptr to %struct.su3_vector*
  store %struct.su3_vector* %7, %struct.su3_vector** %vv, align 8
  store i32 0, i32* %j, align 4
  br label %for.cond1

for.cond1:                                        ; preds = %for.inc, %for.body
  %8 = load i32* %j, align 4
  %cmp2 = icmp slt i32 %8, 3
  br i1 %cmp2, label %for.body3, label %for.end

for.body3:                                        ; preds = %for.cond1
  %9 = load i32* %j, align 4
  %idxprom = sext i32 %9 to i64
  %10 = load %struct.su3_vector** %vv, align 8
  %c = getelementptr inbounds %struct.su3_vector* %10, i32 0, i32 0
  %arrayidx = getelementptr inbounds [3 x %struct.complex]* %c, i32 0, i64 %idxprom
  %imag = getelementptr inbounds %struct.complex* %arrayidx, i32 0, i32 1
  store double 0.000000e+00, double* %imag, align 8
  %11 = load i32* %j, align 4
  %idxprom4 = sext i32 %11 to i64
  %12 = load %struct.su3_vector** %vv, align 8
  %c5 = getelementptr inbounds %struct.su3_vector* %12, i32 0, i32 0
  %arrayidx6 = getelementptr inbounds [3 x %struct.complex]* %c5, i32 0, i64 %idxprom4
  %real = getelementptr inbounds %struct.complex* %arrayidx6, i32 0, i32 0
  store double 0.000000e+00, double* %real, align 8
  br label %for.inc

for.inc:                                          ; preds = %for.body3
  %13 = load i32* %j, align 4
  %inc = add nsw i32 %13, 1
  store i32 %inc, i32* %j, align 4
  br label %for.cond1

for.end:                                          ; preds = %for.cond1
  br label %for.inc7

for.inc7:                                         ; preds = %for.end
  %14 = load i32* %i, align 4
  %inc8 = add nsw i32 %14, 1
  store i32 %inc8, i32* %i, align 4
  %15 = load %struct.site** %s, align 8
  %incdec.ptr = getelementptr inbounds %struct.site* %15, i32 1
  store %struct.site* %incdec.ptr, %struct.site** %s, align 8
  br label %for.cond

for.end9:                                         ; preds = %for.cond
  br label %sw.epilog

sw.bb10:                                          ; preds = %entry
  %16 = load i32* @even_sites_on_node, align 4
  store i32 %16, i32* %i, align 4
  %17 = load i32* %i, align 4
  %idxprom11 = sext i32 %17 to i64
  %18 = load %struct.site** @lattice, align 8
  %arrayidx12 = getelementptr inbounds %struct.site* %18, i64 %idxprom11
  store %struct.site* %arrayidx12, %struct.site** %s, align 8
  br label %for.cond13

for.cond13:                                       ; preds = %for.inc32, %sw.bb10
  %19 = load i32* %i, align 4
  %20 = load i32* @sites_on_node, align 4
  %cmp14 = icmp slt i32 %19, %20
  br i1 %cmp14, label %for.body15, label %for.end35

for.body15:                                       ; preds = %for.cond13
  %21 = load %struct.site** %s, align 8
  %22 = bitcast %struct.site* %21 to i8*
  %23 = load i32* %v.addr, align 4
  %idx.ext16 = sext i32 %23 to i64
  %add.ptr17 = getelementptr inbounds i8* %22, i64 %idx.ext16
  %24 = bitcast i8* %add.ptr17 to %struct.su3_vector*
  store %struct.su3_vector* %24, %struct.su3_vector** %vv, align 8
  store i32 0, i32* %j, align 4
  br label %for.cond18

for.cond18:                                       ; preds = %for.inc29, %for.body15
  %25 = load i32* %j, align 4
  %cmp19 = icmp slt i32 %25, 3
  br i1 %cmp19, label %for.body20, label %for.end31

for.body20:                                       ; preds = %for.cond18
  %26 = load i32* %j, align 4
  %idxprom21 = sext i32 %26 to i64
  %27 = load %struct.su3_vector** %vv, align 8
  %c22 = getelementptr inbounds %struct.su3_vector* %27, i32 0, i32 0
  %arrayidx23 = getelementptr inbounds [3 x %struct.complex]* %c22, i32 0, i64 %idxprom21
  %imag24 = getelementptr inbounds %struct.complex* %arrayidx23, i32 0, i32 1
  store double 0.000000e+00, double* %imag24, align 8
  %28 = load i32* %j, align 4
  %idxprom25 = sext i32 %28 to i64
  %29 = load %struct.su3_vector** %vv, align 8
  %c26 = getelementptr inbounds %struct.su3_vector* %29, i32 0, i32 0
  %arrayidx27 = getelementptr inbounds [3 x %struct.complex]* %c26, i32 0, i64 %idxprom25
  %real28 = getelementptr inbounds %struct.complex* %arrayidx27, i32 0, i32 0
  store double 0.000000e+00, double* %real28, align 8
  br label %for.inc29

for.inc29:                                        ; preds = %for.body20
  %30 = load i32* %j, align 4
  %inc30 = add nsw i32 %30, 1
  store i32 %inc30, i32* %j, align 4
  br label %for.cond18

for.end31:                                        ; preds = %for.cond18
  br label %for.inc32

for.inc32:                                        ; preds = %for.end31
  %31 = load i32* %i, align 4
  %inc33 = add nsw i32 %31, 1
  store i32 %inc33, i32* %i, align 4
  %32 = load %struct.site** %s, align 8
  %incdec.ptr34 = getelementptr inbounds %struct.site* %32, i32 1
  store %struct.site* %incdec.ptr34, %struct.site** %s, align 8
  br label %for.cond13

for.end35:                                        ; preds = %for.cond13
  br label %sw.epilog

sw.bb36:                                          ; preds = %entry
  store i32 0, i32* %i, align 4
  %33 = load %struct.site** @lattice, align 8
  store %struct.site* %33, %struct.site** %s, align 8
  br label %for.cond37

for.cond37:                                       ; preds = %for.inc56, %sw.bb36
  %34 = load i32* %i, align 4
  %35 = load i32* @sites_on_node, align 4
  %cmp38 = icmp slt i32 %34, %35
  br i1 %cmp38, label %for.body39, label %for.end59

for.body39:                                       ; preds = %for.cond37
  %36 = load %struct.site** %s, align 8
  %37 = bitcast %struct.site* %36 to i8*
  %38 = load i32* %v.addr, align 4
  %idx.ext40 = sext i32 %38 to i64
  %add.ptr41 = getelementptr inbounds i8* %37, i64 %idx.ext40
  %39 = bitcast i8* %add.ptr41 to %struct.su3_vector*
  store %struct.su3_vector* %39, %struct.su3_vector** %vv, align 8
  store i32 0, i32* %j, align 4
  br label %for.cond42

for.cond42:                                       ; preds = %for.inc53, %for.body39
  %40 = load i32* %j, align 4
  %cmp43 = icmp slt i32 %40, 3
  br i1 %cmp43, label %for.body44, label %for.end55

for.body44:                                       ; preds = %for.cond42
  %41 = load i32* %j, align 4
  %idxprom45 = sext i32 %41 to i64
  %42 = load %struct.su3_vector** %vv, align 8
  %c46 = getelementptr inbounds %struct.su3_vector* %42, i32 0, i32 0
  %arrayidx47 = getelementptr inbounds [3 x %struct.complex]* %c46, i32 0, i64 %idxprom45
  %imag48 = getelementptr inbounds %struct.complex* %arrayidx47, i32 0, i32 1
  store double 0.000000e+00, double* %imag48, align 8
  %43 = load i32* %j, align 4
  %idxprom49 = sext i32 %43 to i64
  %44 = load %struct.su3_vector** %vv, align 8
  %c50 = getelementptr inbounds %struct.su3_vector* %44, i32 0, i32 0
  %arrayidx51 = getelementptr inbounds [3 x %struct.complex]* %c50, i32 0, i64 %idxprom49
  %real52 = getelementptr inbounds %struct.complex* %arrayidx51, i32 0, i32 0
  store double 0.000000e+00, double* %real52, align 8
  br label %for.inc53

for.inc53:                                        ; preds = %for.body44
  %45 = load i32* %j, align 4
  %inc54 = add nsw i32 %45, 1
  store i32 %inc54, i32* %j, align 4
  br label %for.cond42

for.end55:                                        ; preds = %for.cond42
  br label %for.inc56

for.inc56:                                        ; preds = %for.end55
  %46 = load i32* %i, align 4
  %inc57 = add nsw i32 %46, 1
  store i32 %inc57, i32* %i, align 4
  %47 = load %struct.site** %s, align 8
  %incdec.ptr58 = getelementptr inbounds %struct.site* %47, i32 1
  store %struct.site* %incdec.ptr58, %struct.site** %s, align 8
  br label %for.cond37

for.end59:                                        ; preds = %for.cond37
  br label %sw.epilog

sw.epilog:                                        ; preds = %for.end59, %for.end35, %for.end9, %entry
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @copy_latvec(i32 %src, i32 %dest, i32 %parity) #0 {
entry:
  %src.addr = alloca i32, align 4
  %dest.addr = alloca i32, align 4
  %parity.addr = alloca i32, align 4
  %i = alloca i32, align 4
  %s = alloca %struct.site*, align 8
  %spt = alloca %struct.su3_vector*, align 8
  %dpt = alloca %struct.su3_vector*, align 8
  store i32 %src, i32* %src.addr, align 4
  store i32 %dest, i32* %dest.addr, align 4
  store i32 %parity, i32* %parity.addr, align 4
  %0 = load i32* %parity.addr, align 4
  switch i32 %0, label %sw.epilog [
    i32 2, label %sw.bb
    i32 1, label %sw.bb3
    i32 3, label %sw.bb19
  ]

sw.bb:                                            ; preds = %entry
  store i32 0, i32* %i, align 4
  %1 = load %struct.site** @lattice, align 8
  store %struct.site* %1, %struct.site** %s, align 8
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %sw.bb
  %2 = load i32* %i, align 4
  %3 = load i32* @even_sites_on_node, align 4
  %cmp = icmp slt i32 %2, %3
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %4 = load i32* %i, align 4
  %idxprom = sext i32 %4 to i64
  %5 = load %struct.site** @lattice, align 8
  %arrayidx = getelementptr inbounds %struct.site* %5, i64 %idxprom
  store %struct.site* %arrayidx, %struct.site** %s, align 8
  %6 = load %struct.site** %s, align 8
  %7 = bitcast %struct.site* %6 to i8*
  %8 = load i32* %src.addr, align 4
  %idx.ext = sext i32 %8 to i64
  %add.ptr = getelementptr inbounds i8* %7, i64 %idx.ext
  %9 = bitcast i8* %add.ptr to %struct.su3_vector*
  store %struct.su3_vector* %9, %struct.su3_vector** %spt, align 8
  %10 = load %struct.site** %s, align 8
  %11 = bitcast %struct.site* %10 to i8*
  %12 = load i32* %dest.addr, align 4
  %idx.ext1 = sext i32 %12 to i64
  %add.ptr2 = getelementptr inbounds i8* %11, i64 %idx.ext1
  %13 = bitcast i8* %add.ptr2 to %struct.su3_vector*
  store %struct.su3_vector* %13, %struct.su3_vector** %dpt, align 8
  %14 = load %struct.su3_vector** %dpt, align 8
  %15 = load %struct.su3_vector** %spt, align 8
  %16 = bitcast %struct.su3_vector* %14 to i8*
  %17 = bitcast %struct.su3_vector* %15 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %16, i8* %17, i64 48, i32 8, i1 false)
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %18 = load i32* %i, align 4
  %inc = add nsw i32 %18, 1
  store i32 %inc, i32* %i, align 4
  %19 = load %struct.site** %s, align 8
  %incdec.ptr = getelementptr inbounds %struct.site* %19, i32 1
  store %struct.site* %incdec.ptr, %struct.site** %s, align 8
  br label %for.cond

for.end:                                          ; preds = %for.cond
  br label %sw.epilog

sw.bb3:                                           ; preds = %entry
  %20 = load i32* @even_sites_on_node, align 4
  store i32 %20, i32* %i, align 4
  %21 = load i32* %i, align 4
  %idxprom4 = sext i32 %21 to i64
  %22 = load %struct.site** @lattice, align 8
  %arrayidx5 = getelementptr inbounds %struct.site* %22, i64 %idxprom4
  store %struct.site* %arrayidx5, %struct.site** %s, align 8
  br label %for.cond6

for.cond6:                                        ; preds = %for.inc15, %sw.bb3
  %23 = load i32* %i, align 4
  %24 = load i32* @sites_on_node, align 4
  %cmp7 = icmp slt i32 %23, %24
  br i1 %cmp7, label %for.body8, label %for.end18

for.body8:                                        ; preds = %for.cond6
  %25 = load i32* %i, align 4
  %idxprom9 = sext i32 %25 to i64
  %26 = load %struct.site** @lattice, align 8
  %arrayidx10 = getelementptr inbounds %struct.site* %26, i64 %idxprom9
  store %struct.site* %arrayidx10, %struct.site** %s, align 8
  %27 = load %struct.site** %s, align 8
  %28 = bitcast %struct.site* %27 to i8*
  %29 = load i32* %src.addr, align 4
  %idx.ext11 = sext i32 %29 to i64
  %add.ptr12 = getelementptr inbounds i8* %28, i64 %idx.ext11
  %30 = bitcast i8* %add.ptr12 to %struct.su3_vector*
  store %struct.su3_vector* %30, %struct.su3_vector** %spt, align 8
  %31 = load %struct.site** %s, align 8
  %32 = bitcast %struct.site* %31 to i8*
  %33 = load i32* %dest.addr, align 4
  %idx.ext13 = sext i32 %33 to i64
  %add.ptr14 = getelementptr inbounds i8* %32, i64 %idx.ext13
  %34 = bitcast i8* %add.ptr14 to %struct.su3_vector*
  store %struct.su3_vector* %34, %struct.su3_vector** %dpt, align 8
  %35 = load %struct.su3_vector** %dpt, align 8
  %36 = load %struct.su3_vector** %spt, align 8
  %37 = bitcast %struct.su3_vector* %35 to i8*
  %38 = bitcast %struct.su3_vector* %36 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %37, i8* %38, i64 48, i32 8, i1 false)
  br label %for.inc15

for.inc15:                                        ; preds = %for.body8
  %39 = load i32* %i, align 4
  %inc16 = add nsw i32 %39, 1
  store i32 %inc16, i32* %i, align 4
  %40 = load %struct.site** %s, align 8
  %incdec.ptr17 = getelementptr inbounds %struct.site* %40, i32 1
  store %struct.site* %incdec.ptr17, %struct.site** %s, align 8
  br label %for.cond6

for.end18:                                        ; preds = %for.cond6
  br label %sw.epilog

sw.bb19:                                          ; preds = %entry
  store i32 0, i32* %i, align 4
  %41 = load %struct.site** @lattice, align 8
  store %struct.site* %41, %struct.site** %s, align 8
  br label %for.cond20

for.cond20:                                       ; preds = %for.inc29, %sw.bb19
  %42 = load i32* %i, align 4
  %43 = load i32* @sites_on_node, align 4
  %cmp21 = icmp slt i32 %42, %43
  br i1 %cmp21, label %for.body22, label %for.end32

for.body22:                                       ; preds = %for.cond20
  %44 = load i32* %i, align 4
  %idxprom23 = sext i32 %44 to i64
  %45 = load %struct.site** @lattice, align 8
  %arrayidx24 = getelementptr inbounds %struct.site* %45, i64 %idxprom23
  store %struct.site* %arrayidx24, %struct.site** %s, align 8
  %46 = load %struct.site** %s, align 8
  %47 = bitcast %struct.site* %46 to i8*
  %48 = load i32* %src.addr, align 4
  %idx.ext25 = sext i32 %48 to i64
  %add.ptr26 = getelementptr inbounds i8* %47, i64 %idx.ext25
  %49 = bitcast i8* %add.ptr26 to %struct.su3_vector*
  store %struct.su3_vector* %49, %struct.su3_vector** %spt, align 8
  %50 = load %struct.site** %s, align 8
  %51 = bitcast %struct.site* %50 to i8*
  %52 = load i32* %dest.addr, align 4
  %idx.ext27 = sext i32 %52 to i64
  %add.ptr28 = getelementptr inbounds i8* %51, i64 %idx.ext27
  %53 = bitcast i8* %add.ptr28 to %struct.su3_vector*
  store %struct.su3_vector* %53, %struct.su3_vector** %dpt, align 8
  %54 = load %struct.su3_vector** %dpt, align 8
  %55 = load %struct.su3_vector** %spt, align 8
  %56 = bitcast %struct.su3_vector* %54 to i8*
  %57 = bitcast %struct.su3_vector* %55 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %56, i8* %57, i64 48, i32 8, i1 false)
  br label %for.inc29

for.inc29:                                        ; preds = %for.body22
  %58 = load i32* %i, align 4
  %inc30 = add nsw i32 %58, 1
  store i32 %inc30, i32* %i, align 4
  %59 = load %struct.site** %s, align 8
  %incdec.ptr31 = getelementptr inbounds %struct.site* %59, i32 1
  store %struct.site* %incdec.ptr31, %struct.site** %s, align 8
  br label %for.cond20

for.end32:                                        ; preds = %for.cond20
  br label %sw.epilog

sw.epilog:                                        ; preds = %for.end32, %for.end18, %for.end, %entry
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @scalar_mult_add_latvec(i32 %src1, i32 %src2, double %scalar, i32 %dest, i32 %parity) #0 {
entry:
  %src1.addr = alloca i32, align 4
  %src2.addr = alloca i32, align 4
  %scalar.addr = alloca double, align 8
  %dest.addr = alloca i32, align 4
  %parity.addr = alloca i32, align 4
  %i = alloca i32, align 4
  %s = alloca %struct.site*, align 8
  %spt1 = alloca %struct.su3_vector*, align 8
  %spt2 = alloca %struct.su3_vector*, align 8
  %dpt = alloca %struct.su3_vector*, align 8
  %loopend = alloca i32, align 4
  store i32 %src1, i32* %src1.addr, align 4
  store i32 %src2, i32* %src2.addr, align 4
  store double %scalar, double* %scalar.addr, align 8
  store i32 %dest, i32* %dest.addr, align 4
  store i32 %parity, i32* %parity.addr, align 4
  %0 = load i32* %parity.addr, align 4
  %cmp = icmp eq i32 %0, 2
  br i1 %cmp, label %cond.true, label %cond.false

cond.true:                                        ; preds = %entry
  %1 = load i32* @even_sites_on_node, align 4
  br label %cond.end

cond.false:                                       ; preds = %entry
  %2 = load i32* @sites_on_node, align 4
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %1, %cond.true ], [ %2, %cond.false ]
  store i32 %cond, i32* %loopend, align 4
  %3 = load i32* %parity.addr, align 4
  %cmp1 = icmp eq i32 %3, 1
  br i1 %cmp1, label %cond.true2, label %cond.false3

cond.true2:                                       ; preds = %cond.end
  %4 = load i32* @even_sites_on_node, align 4
  br label %cond.end4

cond.false3:                                      ; preds = %cond.end
  br label %cond.end4

cond.end4:                                        ; preds = %cond.false3, %cond.true2
  %cond5 = phi i32 [ %4, %cond.true2 ], [ 0, %cond.false3 ]
  store i32 %cond5, i32* %i, align 4
  %5 = load i32* %i, align 4
  %idxprom = sext i32 %5 to i64
  %6 = load %struct.site** @lattice, align 8
  %arrayidx = getelementptr inbounds %struct.site* %6, i64 %idxprom
  store %struct.site* %arrayidx, %struct.site** %s, align 8
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %cond.end4
  %7 = load i32* %i, align 4
  %8 = load i32* %loopend, align 4
  %cmp6 = icmp slt i32 %7, %8
  br i1 %cmp6, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %9 = load %struct.site** %s, align 8
  %10 = bitcast %struct.site* %9 to i8*
  %11 = load i32* %src1.addr, align 4
  %idx.ext = sext i32 %11 to i64
  %add.ptr = getelementptr inbounds i8* %10, i64 %idx.ext
  %12 = bitcast i8* %add.ptr to %struct.su3_vector*
  store %struct.su3_vector* %12, %struct.su3_vector** %spt1, align 8
  %13 = load %struct.site** %s, align 8
  %14 = bitcast %struct.site* %13 to i8*
  %15 = load i32* %src2.addr, align 4
  %idx.ext7 = sext i32 %15 to i64
  %add.ptr8 = getelementptr inbounds i8* %14, i64 %idx.ext7
  %16 = bitcast i8* %add.ptr8 to %struct.su3_vector*
  store %struct.su3_vector* %16, %struct.su3_vector** %spt2, align 8
  %17 = load %struct.site** %s, align 8
  %18 = bitcast %struct.site* %17 to i8*
  %19 = load i32* %dest.addr, align 4
  %idx.ext9 = sext i32 %19 to i64
  %add.ptr10 = getelementptr inbounds i8* %18, i64 %idx.ext9
  %20 = bitcast i8* %add.ptr10 to %struct.su3_vector*
  store %struct.su3_vector* %20, %struct.su3_vector** %dpt, align 8
  %21 = load %struct.su3_vector** %spt1, align 8
  %22 = load %struct.su3_vector** %spt2, align 8
  %23 = load double* %scalar.addr, align 8
  %24 = load %struct.su3_vector** %dpt, align 8
  call void @scalar_mult_add_su3_vector(%struct.su3_vector* %21, %struct.su3_vector* %22, double %23, %struct.su3_vector* %24)
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %25 = load i32* %i, align 4
  %inc = add nsw i32 %25, 1
  store i32 %inc, i32* %i, align 4
  %26 = load %struct.site** %s, align 8
  %incdec.ptr = getelementptr inbounds %struct.site* %26, i32 1
  store %struct.site* %incdec.ptr, %struct.site** %s, align 8
  br label %for.cond

for.end:                                          ; preds = %for.cond
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @scalar2_mult_add_su3_vector(%struct.su3_vector* %a, double %s1, %struct.su3_vector* %b, double %s2, %struct.su3_vector* %c) #0 {
entry:
  %a.addr = alloca %struct.su3_vector*, align 8
  %s1.addr = alloca double, align 8
  %b.addr = alloca %struct.su3_vector*, align 8
  %s2.addr = alloca double, align 8
  %c.addr = alloca %struct.su3_vector*, align 8
  %i = alloca i32, align 4
  store %struct.su3_vector* %a, %struct.su3_vector** %a.addr, align 8
  store double %s1, double* %s1.addr, align 8
  store %struct.su3_vector* %b, %struct.su3_vector** %b.addr, align 8
  store double %s2, double* %s2.addr, align 8
  store %struct.su3_vector* %c, %struct.su3_vector** %c.addr, align 8
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32* %i, align 4
  %cmp = icmp slt i32 %0, 3
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %1 = load double* %s1.addr, align 8
  %2 = load i32* %i, align 4
  %idxprom = sext i32 %2 to i64
  %3 = load %struct.su3_vector** %a.addr, align 8
  %c1 = getelementptr inbounds %struct.su3_vector* %3, i32 0, i32 0
  %arrayidx = getelementptr inbounds [3 x %struct.complex]* %c1, i32 0, i64 %idxprom
  %real = getelementptr inbounds %struct.complex* %arrayidx, i32 0, i32 0
  %4 = load double* %real, align 8
  %mul = fmul double %1, %4
  %5 = load double* %s2.addr, align 8
  %6 = load i32* %i, align 4
  %idxprom2 = sext i32 %6 to i64
  %7 = load %struct.su3_vector** %b.addr, align 8
  %c3 = getelementptr inbounds %struct.su3_vector* %7, i32 0, i32 0
  %arrayidx4 = getelementptr inbounds [3 x %struct.complex]* %c3, i32 0, i64 %idxprom2
  %real5 = getelementptr inbounds %struct.complex* %arrayidx4, i32 0, i32 0
  %8 = load double* %real5, align 8
  %mul6 = fmul double %5, %8
  %add = fadd double %mul, %mul6
  %9 = load i32* %i, align 4
  %idxprom7 = sext i32 %9 to i64
  %10 = load %struct.su3_vector** %c.addr, align 8
  %c8 = getelementptr inbounds %struct.su3_vector* %10, i32 0, i32 0
  %arrayidx9 = getelementptr inbounds [3 x %struct.complex]* %c8, i32 0, i64 %idxprom7
  %real10 = getelementptr inbounds %struct.complex* %arrayidx9, i32 0, i32 0
  store double %add, double* %real10, align 8
  %11 = load double* %s1.addr, align 8
  %12 = load i32* %i, align 4
  %idxprom11 = sext i32 %12 to i64
  %13 = load %struct.su3_vector** %a.addr, align 8
  %c12 = getelementptr inbounds %struct.su3_vector* %13, i32 0, i32 0
  %arrayidx13 = getelementptr inbounds [3 x %struct.complex]* %c12, i32 0, i64 %idxprom11
  %imag = getelementptr inbounds %struct.complex* %arrayidx13, i32 0, i32 1
  %14 = load double* %imag, align 8
  %mul14 = fmul double %11, %14
  %15 = load double* %s2.addr, align 8
  %16 = load i32* %i, align 4
  %idxprom15 = sext i32 %16 to i64
  %17 = load %struct.su3_vector** %b.addr, align 8
  %c16 = getelementptr inbounds %struct.su3_vector* %17, i32 0, i32 0
  %arrayidx17 = getelementptr inbounds [3 x %struct.complex]* %c16, i32 0, i64 %idxprom15
  %imag18 = getelementptr inbounds %struct.complex* %arrayidx17, i32 0, i32 1
  %18 = load double* %imag18, align 8
  %mul19 = fmul double %15, %18
  %add20 = fadd double %mul14, %mul19
  %19 = load i32* %i, align 4
  %idxprom21 = sext i32 %19 to i64
  %20 = load %struct.su3_vector** %c.addr, align 8
  %c22 = getelementptr inbounds %struct.su3_vector* %20, i32 0, i32 0
  %arrayidx23 = getelementptr inbounds [3 x %struct.complex]* %c22, i32 0, i64 %idxprom21
  %imag24 = getelementptr inbounds %struct.complex* %arrayidx23, i32 0, i32 1
  store double %add20, double* %imag24, align 8
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %21 = load i32* %i, align 4
  %inc = add nsw i32 %21, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @scalar2_mult_add_latvec(i32 %src1, double %scalar1, i32 %src2, double %scalar2, i32 %dest, i32 %parity) #0 {
entry:
  %src1.addr = alloca i32, align 4
  %scalar1.addr = alloca double, align 8
  %src2.addr = alloca i32, align 4
  %scalar2.addr = alloca double, align 8
  %dest.addr = alloca i32, align 4
  %parity.addr = alloca i32, align 4
  %i = alloca i32, align 4
  %s = alloca %struct.site*, align 8
  %spt1 = alloca %struct.su3_vector*, align 8
  %spt2 = alloca %struct.su3_vector*, align 8
  %dpt = alloca %struct.su3_vector*, align 8
  %loopend = alloca i32, align 4
  store i32 %src1, i32* %src1.addr, align 4
  store double %scalar1, double* %scalar1.addr, align 8
  store i32 %src2, i32* %src2.addr, align 4
  store double %scalar2, double* %scalar2.addr, align 8
  store i32 %dest, i32* %dest.addr, align 4
  store i32 %parity, i32* %parity.addr, align 4
  %0 = load i32* %parity.addr, align 4
  %cmp = icmp eq i32 %0, 2
  br i1 %cmp, label %cond.true, label %cond.false

cond.true:                                        ; preds = %entry
  %1 = load i32* @even_sites_on_node, align 4
  br label %cond.end

cond.false:                                       ; preds = %entry
  %2 = load i32* @sites_on_node, align 4
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %1, %cond.true ], [ %2, %cond.false ]
  store i32 %cond, i32* %loopend, align 4
  %3 = load i32* %parity.addr, align 4
  %cmp1 = icmp eq i32 %3, 1
  br i1 %cmp1, label %cond.true2, label %cond.false3

cond.true2:                                       ; preds = %cond.end
  %4 = load i32* @even_sites_on_node, align 4
  br label %cond.end4

cond.false3:                                      ; preds = %cond.end
  br label %cond.end4

cond.end4:                                        ; preds = %cond.false3, %cond.true2
  %cond5 = phi i32 [ %4, %cond.true2 ], [ 0, %cond.false3 ]
  store i32 %cond5, i32* %i, align 4
  %5 = load i32* %i, align 4
  %idxprom = sext i32 %5 to i64
  %6 = load %struct.site** @lattice, align 8
  %arrayidx = getelementptr inbounds %struct.site* %6, i64 %idxprom
  store %struct.site* %arrayidx, %struct.site** %s, align 8
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %cond.end4
  %7 = load i32* %i, align 4
  %8 = load i32* %loopend, align 4
  %cmp6 = icmp slt i32 %7, %8
  br i1 %cmp6, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %9 = load %struct.site** %s, align 8
  %10 = bitcast %struct.site* %9 to i8*
  %11 = load i32* %src1.addr, align 4
  %idx.ext = sext i32 %11 to i64
  %add.ptr = getelementptr inbounds i8* %10, i64 %idx.ext
  %12 = bitcast i8* %add.ptr to %struct.su3_vector*
  store %struct.su3_vector* %12, %struct.su3_vector** %spt1, align 8
  %13 = load %struct.site** %s, align 8
  %14 = bitcast %struct.site* %13 to i8*
  %15 = load i32* %src2.addr, align 4
  %idx.ext7 = sext i32 %15 to i64
  %add.ptr8 = getelementptr inbounds i8* %14, i64 %idx.ext7
  %16 = bitcast i8* %add.ptr8 to %struct.su3_vector*
  store %struct.su3_vector* %16, %struct.su3_vector** %spt2, align 8
  %17 = load %struct.site** %s, align 8
  %18 = bitcast %struct.site* %17 to i8*
  %19 = load i32* %dest.addr, align 4
  %idx.ext9 = sext i32 %19 to i64
  %add.ptr10 = getelementptr inbounds i8* %18, i64 %idx.ext9
  %20 = bitcast i8* %add.ptr10 to %struct.su3_vector*
  store %struct.su3_vector* %20, %struct.su3_vector** %dpt, align 8
  %21 = load %struct.su3_vector** %spt1, align 8
  %22 = load double* %scalar1.addr, align 8
  %23 = load %struct.su3_vector** %spt2, align 8
  %24 = load double* %scalar2.addr, align 8
  %25 = load %struct.su3_vector** %dpt, align 8
  call void @scalar2_mult_add_su3_vector(%struct.su3_vector* %21, double %22, %struct.su3_vector* %23, double %24, %struct.su3_vector* %25)
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %26 = load i32* %i, align 4
  %inc = add nsw i32 %26, 1
  store i32 %inc, i32* %i, align 4
  %27 = load %struct.site** %s, align 8
  %incdec.ptr = getelementptr inbounds %struct.site* %27, i32 1
  store %struct.site* %incdec.ptr, %struct.site** %s, align 8
  br label %for.cond

for.end:                                          ; preds = %for.cond
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @scalar_mult_latvec(i32 %src, double %scalar, i32 %dest, i32 %parity) #0 {
entry:
  %src.addr = alloca i32, align 4
  %scalar.addr = alloca double, align 8
  %dest.addr = alloca i32, align 4
  %parity.addr = alloca i32, align 4
  %i = alloca i32, align 4
  %s = alloca %struct.site*, align 8
  %spt = alloca %struct.su3_vector*, align 8
  %dpt = alloca %struct.su3_vector*, align 8
  store i32 %src, i32* %src.addr, align 4
  store double %scalar, double* %scalar.addr, align 8
  store i32 %dest, i32* %dest.addr, align 4
  store i32 %parity, i32* %parity.addr, align 4
  %0 = load i32* %parity.addr, align 4
  switch i32 %0, label %sw.epilog [
    i32 2, label %sw.bb
    i32 1, label %sw.bb3
    i32 3, label %sw.bb15
  ]

sw.bb:                                            ; preds = %entry
  store i32 0, i32* %i, align 4
  %1 = load %struct.site** @lattice, align 8
  store %struct.site* %1, %struct.site** %s, align 8
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %sw.bb
  %2 = load i32* %i, align 4
  %3 = load i32* @even_sites_on_node, align 4
  %cmp = icmp slt i32 %2, %3
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %4 = load %struct.site** %s, align 8
  %5 = bitcast %struct.site* %4 to i8*
  %6 = load i32* %src.addr, align 4
  %idx.ext = sext i32 %6 to i64
  %add.ptr = getelementptr inbounds i8* %5, i64 %idx.ext
  %7 = bitcast i8* %add.ptr to %struct.su3_vector*
  store %struct.su3_vector* %7, %struct.su3_vector** %spt, align 8
  %8 = load %struct.site** %s, align 8
  %9 = bitcast %struct.site* %8 to i8*
  %10 = load i32* %dest.addr, align 4
  %idx.ext1 = sext i32 %10 to i64
  %add.ptr2 = getelementptr inbounds i8* %9, i64 %idx.ext1
  %11 = bitcast i8* %add.ptr2 to %struct.su3_vector*
  store %struct.su3_vector* %11, %struct.su3_vector** %dpt, align 8
  %12 = load %struct.su3_vector** %spt, align 8
  %13 = load double* %scalar.addr, align 8
  %14 = load %struct.su3_vector** %dpt, align 8
  call void @scalar_mult_su3_vector(%struct.su3_vector* %12, double %13, %struct.su3_vector* %14)
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %15 = load i32* %i, align 4
  %inc = add nsw i32 %15, 1
  store i32 %inc, i32* %i, align 4
  %16 = load %struct.site** %s, align 8
  %incdec.ptr = getelementptr inbounds %struct.site* %16, i32 1
  store %struct.site* %incdec.ptr, %struct.site** %s, align 8
  br label %for.cond

for.end:                                          ; preds = %for.cond
  br label %sw.epilog

sw.bb3:                                           ; preds = %entry
  %17 = load i32* @even_sites_on_node, align 4
  store i32 %17, i32* %i, align 4
  %18 = load i32* %i, align 4
  %idxprom = sext i32 %18 to i64
  %19 = load %struct.site** @lattice, align 8
  %arrayidx = getelementptr inbounds %struct.site* %19, i64 %idxprom
  store %struct.site* %arrayidx, %struct.site** %s, align 8
  br label %for.cond4

for.cond4:                                        ; preds = %for.inc11, %sw.bb3
  %20 = load i32* %i, align 4
  %21 = load i32* @sites_on_node, align 4
  %cmp5 = icmp slt i32 %20, %21
  br i1 %cmp5, label %for.body6, label %for.end14

for.body6:                                        ; preds = %for.cond4
  %22 = load %struct.site** %s, align 8
  %23 = bitcast %struct.site* %22 to i8*
  %24 = load i32* %src.addr, align 4
  %idx.ext7 = sext i32 %24 to i64
  %add.ptr8 = getelementptr inbounds i8* %23, i64 %idx.ext7
  %25 = bitcast i8* %add.ptr8 to %struct.su3_vector*
  store %struct.su3_vector* %25, %struct.su3_vector** %spt, align 8
  %26 = load %struct.site** %s, align 8
  %27 = bitcast %struct.site* %26 to i8*
  %28 = load i32* %dest.addr, align 4
  %idx.ext9 = sext i32 %28 to i64
  %add.ptr10 = getelementptr inbounds i8* %27, i64 %idx.ext9
  %29 = bitcast i8* %add.ptr10 to %struct.su3_vector*
  store %struct.su3_vector* %29, %struct.su3_vector** %dpt, align 8
  %30 = load %struct.su3_vector** %spt, align 8
  %31 = load double* %scalar.addr, align 8
  %32 = load %struct.su3_vector** %dpt, align 8
  call void @scalar_mult_su3_vector(%struct.su3_vector* %30, double %31, %struct.su3_vector* %32)
  br label %for.inc11

for.inc11:                                        ; preds = %for.body6
  %33 = load i32* %i, align 4
  %inc12 = add nsw i32 %33, 1
  store i32 %inc12, i32* %i, align 4
  %34 = load %struct.site** %s, align 8
  %incdec.ptr13 = getelementptr inbounds %struct.site* %34, i32 1
  store %struct.site* %incdec.ptr13, %struct.site** %s, align 8
  br label %for.cond4

for.end14:                                        ; preds = %for.cond4
  br label %sw.epilog

sw.bb15:                                          ; preds = %entry
  store i32 0, i32* %i, align 4
  %35 = load %struct.site** @lattice, align 8
  store %struct.site* %35, %struct.site** %s, align 8
  br label %for.cond16

for.cond16:                                       ; preds = %for.inc23, %sw.bb15
  %36 = load i32* %i, align 4
  %37 = load i32* @sites_on_node, align 4
  %cmp17 = icmp slt i32 %36, %37
  br i1 %cmp17, label %for.body18, label %for.end26

for.body18:                                       ; preds = %for.cond16
  %38 = load %struct.site** %s, align 8
  %39 = bitcast %struct.site* %38 to i8*
  %40 = load i32* %src.addr, align 4
  %idx.ext19 = sext i32 %40 to i64
  %add.ptr20 = getelementptr inbounds i8* %39, i64 %idx.ext19
  %41 = bitcast i8* %add.ptr20 to %struct.su3_vector*
  store %struct.su3_vector* %41, %struct.su3_vector** %spt, align 8
  %42 = load %struct.site** %s, align 8
  %43 = bitcast %struct.site* %42 to i8*
  %44 = load i32* %dest.addr, align 4
  %idx.ext21 = sext i32 %44 to i64
  %add.ptr22 = getelementptr inbounds i8* %43, i64 %idx.ext21
  %45 = bitcast i8* %add.ptr22 to %struct.su3_vector*
  store %struct.su3_vector* %45, %struct.su3_vector** %dpt, align 8
  %46 = load %struct.su3_vector** %spt, align 8
  %47 = load double* %scalar.addr, align 8
  %48 = load %struct.su3_vector** %dpt, align 8
  call void @scalar_mult_su3_vector(%struct.su3_vector* %46, double %47, %struct.su3_vector* %48)
  br label %for.inc23

for.inc23:                                        ; preds = %for.body18
  %49 = load i32* %i, align 4
  %inc24 = add nsw i32 %49, 1
  store i32 %inc24, i32* %i, align 4
  %50 = load %struct.site** %s, align 8
  %incdec.ptr25 = getelementptr inbounds %struct.site* %50, i32 1
  store %struct.site* %incdec.ptr25, %struct.site** %s, align 8
  br label %for.cond16

for.end26:                                        ; preds = %for.cond16
  br label %sw.epilog

sw.epilog:                                        ; preds = %for.end26, %for.end14, %for.end, %entry
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @initialize_machine(i32 %argc, i8** %argv) #0 {
entry:
  %argc.addr = alloca i32, align 4
  %argv.addr = alloca i8**, align 8
  store i32 %argc, i32* %argc.addr, align 4
  store i8** %argv, i8*** %argv.addr, align 8
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @make_nn_gathers() #0 {
entry:
  %i = alloca i32, align 4
  %call = call noalias i8* @calloc(i64 8, i64 8) #2
  %0 = bitcast i8* %call to i32**
  store i32** %0, i32*** @neighbor, align 8
  store i32 0, i32* @n_gathers, align 4
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %1 = load i32* %i, align 4
  %cmp = icmp sle i32 %1, 3
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %call1 = call i32 @make_gather(void (i32, i32, i32, i32, i32*, i32, i32*, i32*, i32*, i32*)* @neighbor_coords_special, i32* %i, i32 1, i32 0, i32 1)
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %2 = load i32* %i, align 4
  %inc = add nsw i32 %2, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %3 = load i32*** @neighbor, align 8
  %4 = bitcast i32** %3 to i8**
  call void @sort_eight_special(i8** %4)
  ret void
}

; Function Attrs: nounwind uwtable
define internal i32 @make_gather(void (i32, i32, i32, i32, i32*, i32, i32*, i32*, i32*, i32*)* %func, i32* %args, i32 %inverse, i32 %want_even_odd, i32 %parity_conserve) #0 {
entry:
  %retval = alloca i32, align 4
  %func.addr = alloca void (i32, i32, i32, i32, i32*, i32, i32*, i32*, i32*, i32*)*, align 8
  %args.addr = alloca i32*, align 8
  %inverse.addr = alloca i32, align 4
  %want_even_odd.addr = alloca i32, align 4
  %parity_conserve.addr = alloca i32, align 4
  %i = alloca i32, align 4
  %k = alloca i32, align 4
  %s = alloca %struct.site*, align 8
  %dir = alloca i32, align 4
  %x = alloca i32, align 4
  %y = alloca i32, align 4
  %z = alloca i32, align 4
  %t = alloca i32, align 4
  %x2 = alloca i32, align 4
  %y2 = alloca i32, align 4
  %z2 = alloca i32, align 4
  %t2 = alloca i32, align 4
  store void (i32, i32, i32, i32, i32*, i32, i32*, i32*, i32*, i32*)* %func, void (i32, i32, i32, i32, i32*, i32, i32*, i32*, i32*, i32*)** %func.addr, align 8
  store i32* %args, i32** %args.addr, align 8
  store i32 %inverse, i32* %inverse.addr, align 4
  store i32 %want_even_odd, i32* %want_even_odd.addr, align 4
  store i32 %parity_conserve, i32* %parity_conserve.addr, align 4
  %0 = load i32* %inverse.addr, align 4
  %cmp = icmp eq i32 %0, 1
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  %1 = load i32* @n_gathers, align 4
  %add = add nsw i32 %1, 2
  store i32 %add, i32* @n_gathers, align 4
  br label %if.end

if.else:                                          ; preds = %entry
  %2 = load i32* @n_gathers, align 4
  %add1 = add nsw i32 %2, 1
  store i32 %add1, i32* @n_gathers, align 4
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %3 = load i32* @n_gathers, align 4
  %cmp2 = icmp sgt i32 %3, 32
  br i1 %cmp2, label %if.then3, label %if.end7

if.then3:                                         ; preds = %if.end
  %4 = load i32* @this_node, align 4
  %cmp4 = icmp eq i32 %4, 0
  br i1 %cmp4, label %if.then5, label %if.end6

if.then5:                                         ; preds = %if.then3
  %call = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([38 x i8]* @.str1419, i32 0, i32 0))
  br label %if.end6

if.end6:                                          ; preds = %if.then5, %if.then3
  call void @exit(i32 1) #7
  unreachable

if.end7:                                          ; preds = %if.end
  %5 = load i32*** @neighbor, align 8
  %6 = bitcast i32** %5 to i8*
  %7 = load i32* @n_gathers, align 4
  %conv = sext i32 %7 to i64
  %mul = mul i64 %conv, 8
  %call8 = call i8* @realloc(i8* %6, i64 %mul) #2
  %8 = bitcast i8* %call8 to i32**
  store i32** %8, i32*** @neighbor, align 8
  %9 = load i32* %inverse.addr, align 4
  %cmp9 = icmp eq i32 %9, 1
  br i1 %cmp9, label %if.then11, label %if.else36

if.then11:                                        ; preds = %if.end7
  %10 = load i32* @sites_on_node, align 4
  %conv12 = sext i32 %10 to i64
  %call13 = call noalias i8* @calloc(i64 %conv12, i64 4) #2
  %11 = bitcast i8* %call13 to i32*
  %12 = load i32* @n_gathers, align 4
  %sub = sub nsw i32 %12, 2
  %idxprom = sext i32 %sub to i64
  %13 = load i32*** @neighbor, align 8
  %arrayidx = getelementptr inbounds i32** %13, i64 %idxprom
  store i32* %11, i32** %arrayidx, align 8
  %14 = load i32* @n_gathers, align 4
  %sub14 = sub nsw i32 %14, 2
  %idxprom15 = sext i32 %sub14 to i64
  %15 = load i32*** @neighbor, align 8
  %arrayidx16 = getelementptr inbounds i32** %15, i64 %idxprom15
  %16 = load i32** %arrayidx16, align 8
  %cmp17 = icmp eq i32* %16, null
  br i1 %cmp17, label %if.then19, label %if.end21

if.then19:                                        ; preds = %if.then11
  %17 = load i32* @this_node, align 4
  %call20 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([38 x i8]* @.str2420, i32 0, i32 0), i32 %17)
  call void @terminate(i32 1)
  br label %if.end21

if.end21:                                         ; preds = %if.then19, %if.then11
  %18 = load i32* @sites_on_node, align 4
  %conv22 = sext i32 %18 to i64
  %call23 = call noalias i8* @calloc(i64 %conv22, i64 4) #2
  %19 = bitcast i8* %call23 to i32*
  %20 = load i32* @n_gathers, align 4
  %sub24 = sub nsw i32 %20, 1
  %idxprom25 = sext i32 %sub24 to i64
  %21 = load i32*** @neighbor, align 8
  %arrayidx26 = getelementptr inbounds i32** %21, i64 %idxprom25
  store i32* %19, i32** %arrayidx26, align 8
  %22 = load i32* @n_gathers, align 4
  %sub27 = sub nsw i32 %22, 1
  %idxprom28 = sext i32 %sub27 to i64
  %23 = load i32*** @neighbor, align 8
  %arrayidx29 = getelementptr inbounds i32** %23, i64 %idxprom28
  %24 = load i32** %arrayidx29, align 8
  %cmp30 = icmp eq i32* %24, null
  br i1 %cmp30, label %if.then32, label %if.end34

if.then32:                                        ; preds = %if.end21
  %25 = load i32* @this_node, align 4
  %call33 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([38 x i8]* @.str2420, i32 0, i32 0), i32 %25)
  call void @terminate(i32 1)
  br label %if.end34

if.end34:                                         ; preds = %if.then32, %if.end21
  %26 = load i32* @n_gathers, align 4
  %sub35 = sub nsw i32 %26, 2
  store i32 %sub35, i32* %dir, align 4
  br label %if.end51

if.else36:                                        ; preds = %if.end7
  %27 = load i32* @sites_on_node, align 4
  %conv37 = sext i32 %27 to i64
  %call38 = call noalias i8* @calloc(i64 %conv37, i64 4) #2
  %28 = bitcast i8* %call38 to i32*
  %29 = load i32* @n_gathers, align 4
  %sub39 = sub nsw i32 %29, 1
  %idxprom40 = sext i32 %sub39 to i64
  %30 = load i32*** @neighbor, align 8
  %arrayidx41 = getelementptr inbounds i32** %30, i64 %idxprom40
  store i32* %28, i32** %arrayidx41, align 8
  %31 = load i32* @n_gathers, align 4
  %sub42 = sub nsw i32 %31, 1
  %idxprom43 = sext i32 %sub42 to i64
  %32 = load i32*** @neighbor, align 8
  %arrayidx44 = getelementptr inbounds i32** %32, i64 %idxprom43
  %33 = load i32** %arrayidx44, align 8
  %cmp45 = icmp eq i32* %33, null
  br i1 %cmp45, label %if.then47, label %if.end49

if.then47:                                        ; preds = %if.else36
  %34 = load i32* @this_node, align 4
  %call48 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([38 x i8]* @.str2420, i32 0, i32 0), i32 %34)
  call void @terminate(i32 1)
  br label %if.end49

if.end49:                                         ; preds = %if.then47, %if.else36
  %35 = load i32* @n_gathers, align 4
  %sub50 = sub nsw i32 %35, 1
  store i32 %sub50, i32* %dir, align 4
  br label %if.end51

if.end51:                                         ; preds = %if.end49, %if.end34
  store i32 0, i32* %i, align 4
  %36 = load %struct.site** @lattice, align 8
  store %struct.site* %36, %struct.site** %s, align 8
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.end51
  %37 = load i32* %i, align 4
  %38 = load i32* @sites_on_node, align 4
  %cmp52 = icmp slt i32 %37, %38
  br i1 %cmp52, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %39 = load void (i32, i32, i32, i32, i32*, i32, i32*, i32*, i32*, i32*)** %func.addr, align 8
  %40 = load %struct.site** %s, align 8
  %x54 = getelementptr inbounds %struct.site* %40, i32 0, i32 0
  %41 = load i16* %x54, align 2
  %conv55 = sext i16 %41 to i32
  %42 = load %struct.site** %s, align 8
  %y56 = getelementptr inbounds %struct.site* %42, i32 0, i32 1
  %43 = load i16* %y56, align 2
  %conv57 = sext i16 %43 to i32
  %44 = load %struct.site** %s, align 8
  %z58 = getelementptr inbounds %struct.site* %44, i32 0, i32 2
  %45 = load i16* %z58, align 2
  %conv59 = sext i16 %45 to i32
  %46 = load %struct.site** %s, align 8
  %t60 = getelementptr inbounds %struct.site* %46, i32 0, i32 3
  %47 = load i16* %t60, align 2
  %conv61 = sext i16 %47 to i32
  %48 = load i32** %args.addr, align 8
  call void %39(i32 %conv55, i32 %conv57, i32 %conv59, i32 %conv61, i32* %48, i32 1, i32* %x, i32* %y, i32* %z, i32* %t)
  %49 = load i32* %x, align 4
  %50 = load i32* %y, align 4
  %add62 = add nsw i32 %49, %50
  %51 = load i32* %z, align 4
  %add63 = add nsw i32 %add62, %51
  %52 = load i32* %t, align 4
  %add64 = add nsw i32 %add63, %52
  %rem = srem i32 %add64, 2
  store i32 %rem, i32* %k, align 4
  %53 = load i32* %x, align 4
  %cmp65 = icmp slt i32 %53, 0
  br i1 %cmp65, label %if.then87, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %for.body
  %54 = load i32* %y, align 4
  %cmp67 = icmp slt i32 %54, 0
  br i1 %cmp67, label %if.then87, label %lor.lhs.false69

lor.lhs.false69:                                  ; preds = %lor.lhs.false
  %55 = load i32* %z, align 4
  %cmp70 = icmp slt i32 %55, 0
  br i1 %cmp70, label %if.then87, label %lor.lhs.false72

lor.lhs.false72:                                  ; preds = %lor.lhs.false69
  %56 = load i32* %t, align 4
  %cmp73 = icmp slt i32 %56, 0
  br i1 %cmp73, label %if.then87, label %lor.lhs.false75

lor.lhs.false75:                                  ; preds = %lor.lhs.false72
  %57 = load i32* %x, align 4
  %58 = load i32* @nx, align 4
  %cmp76 = icmp sge i32 %57, %58
  br i1 %cmp76, label %if.then87, label %lor.lhs.false78

lor.lhs.false78:                                  ; preds = %lor.lhs.false75
  %59 = load i32* %y, align 4
  %60 = load i32* @ny, align 4
  %cmp79 = icmp sge i32 %59, %60
  br i1 %cmp79, label %if.then87, label %lor.lhs.false81

lor.lhs.false81:                                  ; preds = %lor.lhs.false78
  %61 = load i32* %z, align 4
  %62 = load i32* @nz, align 4
  %cmp82 = icmp sge i32 %61, %62
  br i1 %cmp82, label %if.then87, label %lor.lhs.false84

lor.lhs.false84:                                  ; preds = %lor.lhs.false81
  %63 = load i32* %t, align 4
  %64 = load i32* @nt, align 4
  %cmp85 = icmp sge i32 %63, %64
  br i1 %cmp85, label %if.then87, label %if.end98

if.then87:                                        ; preds = %lor.lhs.false84, %lor.lhs.false81, %lor.lhs.false78, %lor.lhs.false75, %lor.lhs.false72, %lor.lhs.false69, %lor.lhs.false, %for.body
  %call88 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([53 x i8]* @.str3421, i32 0, i32 0))
  %65 = load %struct.site** %s, align 8
  %x89 = getelementptr inbounds %struct.site* %65, i32 0, i32 0
  %66 = load i16* %x89, align 2
  %conv90 = sext i16 %66 to i32
  %67 = load %struct.site** %s, align 8
  %y91 = getelementptr inbounds %struct.site* %67, i32 0, i32 1
  %68 = load i16* %y91, align 2
  %conv92 = sext i16 %68 to i32
  %69 = load %struct.site** %s, align 8
  %z93 = getelementptr inbounds %struct.site* %69, i32 0, i32 2
  %70 = load i16* %z93, align 2
  %conv94 = sext i16 %70 to i32
  %71 = load %struct.site** %s, align 8
  %t95 = getelementptr inbounds %struct.site* %71, i32 0, i32 3
  %72 = load i16* %t95, align 2
  %conv96 = sext i16 %72 to i32
  %73 = load i32* %x, align 4
  %74 = load i32* %y, align 4
  %75 = load i32* %z, align 4
  %76 = load i32* %t, align 4
  %call97 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([38 x i8]* @.str4422, i32 0, i32 0), i32 %conv90, i32 %conv92, i32 %conv94, i32 %conv96, i32 %73, i32 %74, i32 %75, i32 %76)
  call void @terminate(i32 1)
  br label %if.end98

if.end98:                                         ; preds = %if.then87, %lor.lhs.false84
  %77 = load i32* %parity_conserve.addr, align 4
  %cmp99 = icmp eq i32 %77, 0
  br i1 %cmp99, label %land.lhs.true, label %lor.lhs.false115

land.lhs.true:                                    ; preds = %if.end98
  %78 = load i32* %k, align 4
  %cmp101 = icmp eq i32 %78, 0
  br i1 %cmp101, label %land.lhs.true103, label %lor.lhs.false107

land.lhs.true103:                                 ; preds = %land.lhs.true
  %79 = load %struct.site** %s, align 8
  %parity = getelementptr inbounds %struct.site* %79, i32 0, i32 4
  %80 = load i8* %parity, align 1
  %conv104 = sext i8 %80 to i32
  %cmp105 = icmp eq i32 %conv104, 1
  br i1 %cmp105, label %if.then134, label %lor.lhs.false107

lor.lhs.false107:                                 ; preds = %land.lhs.true103, %land.lhs.true
  %81 = load i32* %k, align 4
  %cmp108 = icmp eq i32 %81, 1
  br i1 %cmp108, label %land.lhs.true110, label %lor.lhs.false115

land.lhs.true110:                                 ; preds = %lor.lhs.false107
  %82 = load %struct.site** %s, align 8
  %parity111 = getelementptr inbounds %struct.site* %82, i32 0, i32 4
  %83 = load i8* %parity111, align 1
  %conv112 = sext i8 %83 to i32
  %cmp113 = icmp eq i32 %conv112, 2
  br i1 %cmp113, label %if.then134, label %lor.lhs.false115

lor.lhs.false115:                                 ; preds = %land.lhs.true110, %lor.lhs.false107, %if.end98
  %84 = load i32* %parity_conserve.addr, align 4
  %cmp116 = icmp eq i32 %84, 1
  br i1 %cmp116, label %land.lhs.true118, label %if.end145

land.lhs.true118:                                 ; preds = %lor.lhs.false115
  %85 = load i32* %k, align 4
  %cmp119 = icmp eq i32 %85, 0
  br i1 %cmp119, label %land.lhs.true121, label %lor.lhs.false126

land.lhs.true121:                                 ; preds = %land.lhs.true118
  %86 = load %struct.site** %s, align 8
  %parity122 = getelementptr inbounds %struct.site* %86, i32 0, i32 4
  %87 = load i8* %parity122, align 1
  %conv123 = sext i8 %87 to i32
  %cmp124 = icmp eq i32 %conv123, 2
  br i1 %cmp124, label %if.then134, label %lor.lhs.false126

lor.lhs.false126:                                 ; preds = %land.lhs.true121, %land.lhs.true118
  %88 = load i32* %k, align 4
  %cmp127 = icmp eq i32 %88, 1
  br i1 %cmp127, label %land.lhs.true129, label %if.end145

land.lhs.true129:                                 ; preds = %lor.lhs.false126
  %89 = load %struct.site** %s, align 8
  %parity130 = getelementptr inbounds %struct.site* %89, i32 0, i32 4
  %90 = load i8* %parity130, align 1
  %conv131 = sext i8 %90 to i32
  %cmp132 = icmp eq i32 %conv131, 1
  br i1 %cmp132, label %if.then134, label %if.end145

if.then134:                                       ; preds = %land.lhs.true129, %land.lhs.true121, %land.lhs.true110, %land.lhs.true103
  %call135 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([57 x i8]* @.str5423, i32 0, i32 0))
  %91 = load %struct.site** %s, align 8
  %x136 = getelementptr inbounds %struct.site* %91, i32 0, i32 0
  %92 = load i16* %x136, align 2
  %conv137 = sext i16 %92 to i32
  %93 = load %struct.site** %s, align 8
  %y138 = getelementptr inbounds %struct.site* %93, i32 0, i32 1
  %94 = load i16* %y138, align 2
  %conv139 = sext i16 %94 to i32
  %95 = load %struct.site** %s, align 8
  %z140 = getelementptr inbounds %struct.site* %95, i32 0, i32 2
  %96 = load i16* %z140, align 2
  %conv141 = sext i16 %96 to i32
  %97 = load %struct.site** %s, align 8
  %t142 = getelementptr inbounds %struct.site* %97, i32 0, i32 3
  %98 = load i16* %t142, align 2
  %conv143 = sext i16 %98 to i32
  %99 = load i32* %x, align 4
  %100 = load i32* %y, align 4
  %101 = load i32* %z, align 4
  %102 = load i32* %t, align 4
  %call144 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([38 x i8]* @.str4422, i32 0, i32 0), i32 %conv137, i32 %conv139, i32 %conv141, i32 %conv143, i32 %99, i32 %100, i32 %101, i32 %102)
  call void @terminate(i32 1)
  br label %if.end145

if.end145:                                        ; preds = %if.then134, %land.lhs.true129, %lor.lhs.false126, %lor.lhs.false115
  %103 = load i32* %inverse.addr, align 4
  %cmp146 = icmp eq i32 %103, 0
  br i1 %cmp146, label %if.then148, label %if.end180

if.then148:                                       ; preds = %if.end145
  %104 = load void (i32, i32, i32, i32, i32*, i32, i32*, i32*, i32*, i32*)** %func.addr, align 8
  %105 = load i32* %x, align 4
  %106 = load i32* %y, align 4
  %107 = load i32* %z, align 4
  %108 = load i32* %t, align 4
  %109 = load i32** %args.addr, align 8
  call void %104(i32 %105, i32 %106, i32 %107, i32 %108, i32* %109, i32 1, i32* %x2, i32* %y2, i32* %z2, i32* %t2)
  %110 = load %struct.site** %s, align 8
  %x149 = getelementptr inbounds %struct.site* %110, i32 0, i32 0
  %111 = load i16* %x149, align 2
  %conv150 = sext i16 %111 to i32
  %112 = load i32* %x2, align 4
  %cmp151 = icmp ne i32 %conv150, %112
  br i1 %cmp151, label %if.then168, label %lor.lhs.false153

lor.lhs.false153:                                 ; preds = %if.then148
  %113 = load %struct.site** %s, align 8
  %y154 = getelementptr inbounds %struct.site* %113, i32 0, i32 1
  %114 = load i16* %y154, align 2
  %conv155 = sext i16 %114 to i32
  %115 = load i32* %y2, align 4
  %cmp156 = icmp ne i32 %conv155, %115
  br i1 %cmp156, label %if.then168, label %lor.lhs.false158

lor.lhs.false158:                                 ; preds = %lor.lhs.false153
  %116 = load %struct.site** %s, align 8
  %z159 = getelementptr inbounds %struct.site* %116, i32 0, i32 2
  %117 = load i16* %z159, align 2
  %conv160 = sext i16 %117 to i32
  %118 = load i32* %z2, align 4
  %cmp161 = icmp ne i32 %conv160, %118
  br i1 %cmp161, label %if.then168, label %lor.lhs.false163

lor.lhs.false163:                                 ; preds = %lor.lhs.false158
  %119 = load %struct.site** %s, align 8
  %t164 = getelementptr inbounds %struct.site* %119, i32 0, i32 3
  %120 = load i16* %t164, align 2
  %conv165 = sext i16 %120 to i32
  %121 = load i32* %t2, align 4
  %cmp166 = icmp ne i32 %conv165, %121
  br i1 %cmp166, label %if.then168, label %if.end179

if.then168:                                       ; preds = %lor.lhs.false163, %lor.lhs.false158, %lor.lhs.false153, %if.then148
  %call169 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([51 x i8]* @.str6424, i32 0, i32 0))
  %122 = load %struct.site** %s, align 8
  %x170 = getelementptr inbounds %struct.site* %122, i32 0, i32 0
  %123 = load i16* %x170, align 2
  %conv171 = sext i16 %123 to i32
  %124 = load %struct.site** %s, align 8
  %y172 = getelementptr inbounds %struct.site* %124, i32 0, i32 1
  %125 = load i16* %y172, align 2
  %conv173 = sext i16 %125 to i32
  %126 = load %struct.site** %s, align 8
  %z174 = getelementptr inbounds %struct.site* %126, i32 0, i32 2
  %127 = load i16* %z174, align 2
  %conv175 = sext i16 %127 to i32
  %128 = load %struct.site** %s, align 8
  %t176 = getelementptr inbounds %struct.site* %128, i32 0, i32 3
  %129 = load i16* %t176, align 2
  %conv177 = sext i16 %129 to i32
  %130 = load i32* %x2, align 4
  %131 = load i32* %y2, align 4
  %132 = load i32* %z2, align 4
  %133 = load i32* %t2, align 4
  %call178 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([47 x i8]* @.str7425, i32 0, i32 0), i32 %conv171, i32 %conv173, i32 %conv175, i32 %conv177, i32 %130, i32 %131, i32 %132, i32 %133)
  call void @terminate(i32 1)
  br label %if.end179

if.end179:                                        ; preds = %if.then168, %lor.lhs.false163
  br label %if.end180

if.end180:                                        ; preds = %if.end179, %if.end145
  br label %for.inc

for.inc:                                          ; preds = %if.end180
  %134 = load i32* %i, align 4
  %inc = add nsw i32 %134, 1
  store i32 %inc, i32* %i, align 4
  %135 = load %struct.site** %s, align 8
  %incdec.ptr = getelementptr inbounds %struct.site* %135, i32 1
  store %struct.site* %incdec.ptr, %struct.site** %s, align 8
  br label %for.cond

for.end:                                          ; preds = %for.cond
  store i32 0, i32* %i, align 4
  %136 = load %struct.site** @lattice, align 8
  store %struct.site* %136, %struct.site** %s, align 8
  br label %for.cond181

for.cond181:                                      ; preds = %for.inc198, %for.end
  %137 = load i32* %i, align 4
  %138 = load i32* @sites_on_node, align 4
  %cmp182 = icmp slt i32 %137, %138
  br i1 %cmp182, label %for.body184, label %for.end201

for.body184:                                      ; preds = %for.cond181
  %139 = load void (i32, i32, i32, i32, i32*, i32, i32*, i32*, i32*, i32*)** %func.addr, align 8
  %140 = load %struct.site** %s, align 8
  %x185 = getelementptr inbounds %struct.site* %140, i32 0, i32 0
  %141 = load i16* %x185, align 2
  %conv186 = sext i16 %141 to i32
  %142 = load %struct.site** %s, align 8
  %y187 = getelementptr inbounds %struct.site* %142, i32 0, i32 1
  %143 = load i16* %y187, align 2
  %conv188 = sext i16 %143 to i32
  %144 = load %struct.site** %s, align 8
  %z189 = getelementptr inbounds %struct.site* %144, i32 0, i32 2
  %145 = load i16* %z189, align 2
  %conv190 = sext i16 %145 to i32
  %146 = load %struct.site** %s, align 8
  %t191 = getelementptr inbounds %struct.site* %146, i32 0, i32 3
  %147 = load i16* %t191, align 2
  %conv192 = sext i16 %147 to i32
  %148 = load i32** %args.addr, align 8
  call void %139(i32 %conv186, i32 %conv188, i32 %conv190, i32 %conv192, i32* %148, i32 1, i32* %x, i32* %y, i32* %z, i32* %t)
  %149 = load i32* %x, align 4
  %150 = load i32* %y, align 4
  %151 = load i32* %z, align 4
  %152 = load i32* %t, align 4
  %call193 = call i32 @node_index(i32 %149, i32 %150, i32 %151, i32 %152)
  %153 = load i32* %i, align 4
  %idxprom194 = sext i32 %153 to i64
  %154 = load i32* %dir, align 4
  %idxprom195 = sext i32 %154 to i64
  %155 = load i32*** @neighbor, align 8
  %arrayidx196 = getelementptr inbounds i32** %155, i64 %idxprom195
  %156 = load i32** %arrayidx196, align 8
  %arrayidx197 = getelementptr inbounds i32* %156, i64 %idxprom194
  store i32 %call193, i32* %arrayidx197, align 4
  br label %for.inc198

for.inc198:                                       ; preds = %for.body184
  %157 = load i32* %i, align 4
  %inc199 = add nsw i32 %157, 1
  store i32 %inc199, i32* %i, align 4
  %158 = load %struct.site** %s, align 8
  %incdec.ptr200 = getelementptr inbounds %struct.site* %158, i32 1
  store %struct.site* %incdec.ptr200, %struct.site** %s, align 8
  br label %for.cond181

for.end201:                                       ; preds = %for.cond181
  %159 = load i32* %inverse.addr, align 4
  %cmp202 = icmp ne i32 %159, 1
  br i1 %cmp202, label %if.then204, label %if.end205

if.then204:                                       ; preds = %for.end201
  %160 = load i32* %dir, align 4
  store i32 %160, i32* %retval
  br label %return

if.end205:                                        ; preds = %for.end201
  %161 = load i32* %dir, align 4
  %inc206 = add nsw i32 %161, 1
  store i32 %inc206, i32* %dir, align 4
  store i32 0, i32* %i, align 4
  %162 = load %struct.site** @lattice, align 8
  store %struct.site* %162, %struct.site** %s, align 8
  br label %for.cond207

for.cond207:                                      ; preds = %for.inc224, %if.end205
  %163 = load i32* %i, align 4
  %164 = load i32* @sites_on_node, align 4
  %cmp208 = icmp slt i32 %163, %164
  br i1 %cmp208, label %for.body210, label %for.end227

for.body210:                                      ; preds = %for.cond207
  %165 = load void (i32, i32, i32, i32, i32*, i32, i32*, i32*, i32*, i32*)** %func.addr, align 8
  %166 = load %struct.site** %s, align 8
  %x211 = getelementptr inbounds %struct.site* %166, i32 0, i32 0
  %167 = load i16* %x211, align 2
  %conv212 = sext i16 %167 to i32
  %168 = load %struct.site** %s, align 8
  %y213 = getelementptr inbounds %struct.site* %168, i32 0, i32 1
  %169 = load i16* %y213, align 2
  %conv214 = sext i16 %169 to i32
  %170 = load %struct.site** %s, align 8
  %z215 = getelementptr inbounds %struct.site* %170, i32 0, i32 2
  %171 = load i16* %z215, align 2
  %conv216 = sext i16 %171 to i32
  %172 = load %struct.site** %s, align 8
  %t217 = getelementptr inbounds %struct.site* %172, i32 0, i32 3
  %173 = load i16* %t217, align 2
  %conv218 = sext i16 %173 to i32
  %174 = load i32** %args.addr, align 8
  call void %165(i32 %conv212, i32 %conv214, i32 %conv216, i32 %conv218, i32* %174, i32 -1, i32* %x, i32* %y, i32* %z, i32* %t)
  %175 = load i32* %x, align 4
  %176 = load i32* %y, align 4
  %177 = load i32* %z, align 4
  %178 = load i32* %t, align 4
  %call219 = call i32 @node_index(i32 %175, i32 %176, i32 %177, i32 %178)
  %179 = load i32* %i, align 4
  %idxprom220 = sext i32 %179 to i64
  %180 = load i32* %dir, align 4
  %idxprom221 = sext i32 %180 to i64
  %181 = load i32*** @neighbor, align 8
  %arrayidx222 = getelementptr inbounds i32** %181, i64 %idxprom221
  %182 = load i32** %arrayidx222, align 8
  %arrayidx223 = getelementptr inbounds i32* %182, i64 %idxprom220
  store i32 %call219, i32* %arrayidx223, align 4
  br label %for.inc224

for.inc224:                                       ; preds = %for.body210
  %183 = load i32* %i, align 4
  %inc225 = add nsw i32 %183, 1
  store i32 %inc225, i32* %i, align 4
  %184 = load %struct.site** %s, align 8
  %incdec.ptr226 = getelementptr inbounds %struct.site* %184, i32 1
  store %struct.site* %incdec.ptr226, %struct.site** %s, align 8
  br label %for.cond207

for.end227:                                       ; preds = %for.cond207
  %185 = load i32* %dir, align 4
  %sub228 = sub nsw i32 %185, 1
  store i32 %sub228, i32* %retval
  br label %return

return:                                           ; preds = %for.end227, %if.then204
  %186 = load i32* %retval
  ret i32 %186
}

; Function Attrs: nounwind uwtable
define internal void @neighbor_coords_special(i32 %x, i32 %y, i32 %z, i32 %t, i32* %dirpt, i32 %fb, i32* %x2p, i32* %y2p, i32* %z2p, i32* %t2p) #0 {
entry:
  %x.addr = alloca i32, align 4
  %y.addr = alloca i32, align 4
  %z.addr = alloca i32, align 4
  %t.addr = alloca i32, align 4
  %dirpt.addr = alloca i32*, align 8
  %fb.addr = alloca i32, align 4
  %x2p.addr = alloca i32*, align 8
  %y2p.addr = alloca i32*, align 8
  %z2p.addr = alloca i32*, align 8
  %t2p.addr = alloca i32*, align 8
  %dir = alloca i32, align 4
  store i32 %x, i32* %x.addr, align 4
  store i32 %y, i32* %y.addr, align 4
  store i32 %z, i32* %z.addr, align 4
  store i32 %t, i32* %t.addr, align 4
  store i32* %dirpt, i32** %dirpt.addr, align 8
  store i32 %fb, i32* %fb.addr, align 4
  store i32* %x2p, i32** %x2p.addr, align 8
  store i32* %y2p, i32** %y2p.addr, align 8
  store i32* %z2p, i32** %z2p.addr, align 8
  store i32* %t2p, i32** %t2p.addr, align 8
  %0 = load i32* %fb.addr, align 4
  %cmp = icmp eq i32 %0, 1
  br i1 %cmp, label %cond.true, label %cond.false

cond.true:                                        ; preds = %entry
  %1 = load i32** %dirpt.addr, align 8
  %2 = load i32* %1, align 4
  br label %cond.end

cond.false:                                       ; preds = %entry
  %3 = load i32** %dirpt.addr, align 8
  %4 = load i32* %3, align 4
  %sub = sub nsw i32 7, %4
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %2, %cond.true ], [ %sub, %cond.false ]
  store i32 %cond, i32* %dir, align 4
  %5 = load i32* %x.addr, align 4
  %6 = load i32** %x2p.addr, align 8
  store i32 %5, i32* %6, align 4
  %7 = load i32* %y.addr, align 4
  %8 = load i32** %y2p.addr, align 8
  store i32 %7, i32* %8, align 4
  %9 = load i32* %z.addr, align 4
  %10 = load i32** %z2p.addr, align 8
  store i32 %9, i32* %10, align 4
  %11 = load i32* %t.addr, align 4
  %12 = load i32** %t2p.addr, align 8
  store i32 %11, i32* %12, align 4
  %13 = load i32* %dir, align 4
  switch i32 %13, label %sw.default [
    i32 0, label %sw.bb
    i32 7, label %sw.bb1
    i32 1, label %sw.bb5
    i32 6, label %sw.bb8
    i32 2, label %sw.bb12
    i32 5, label %sw.bb15
    i32 3, label %sw.bb19
    i32 4, label %sw.bb22
  ]

sw.bb:                                            ; preds = %cond.end
  %14 = load i32* %x.addr, align 4
  %add = add nsw i32 %14, 1
  %15 = load i32* @nx, align 4
  %rem = srem i32 %add, %15
  %16 = load i32** %x2p.addr, align 8
  store i32 %rem, i32* %16, align 4
  br label %sw.epilog

sw.bb1:                                           ; preds = %cond.end
  %17 = load i32* %x.addr, align 4
  %18 = load i32* @nx, align 4
  %add2 = add nsw i32 %17, %18
  %sub3 = sub nsw i32 %add2, 1
  %19 = load i32* @nx, align 4
  %rem4 = srem i32 %sub3, %19
  %20 = load i32** %x2p.addr, align 8
  store i32 %rem4, i32* %20, align 4
  br label %sw.epilog

sw.bb5:                                           ; preds = %cond.end
  %21 = load i32* %y.addr, align 4
  %add6 = add nsw i32 %21, 1
  %22 = load i32* @ny, align 4
  %rem7 = srem i32 %add6, %22
  %23 = load i32** %y2p.addr, align 8
  store i32 %rem7, i32* %23, align 4
  br label %sw.epilog

sw.bb8:                                           ; preds = %cond.end
  %24 = load i32* %y.addr, align 4
  %25 = load i32* @ny, align 4
  %add9 = add nsw i32 %24, %25
  %sub10 = sub nsw i32 %add9, 1
  %26 = load i32* @ny, align 4
  %rem11 = srem i32 %sub10, %26
  %27 = load i32** %y2p.addr, align 8
  store i32 %rem11, i32* %27, align 4
  br label %sw.epilog

sw.bb12:                                          ; preds = %cond.end
  %28 = load i32* %z.addr, align 4
  %add13 = add nsw i32 %28, 1
  %29 = load i32* @nz, align 4
  %rem14 = srem i32 %add13, %29
  %30 = load i32** %z2p.addr, align 8
  store i32 %rem14, i32* %30, align 4
  br label %sw.epilog

sw.bb15:                                          ; preds = %cond.end
  %31 = load i32* %z.addr, align 4
  %32 = load i32* @nz, align 4
  %add16 = add nsw i32 %31, %32
  %sub17 = sub nsw i32 %add16, 1
  %33 = load i32* @nz, align 4
  %rem18 = srem i32 %sub17, %33
  %34 = load i32** %z2p.addr, align 8
  store i32 %rem18, i32* %34, align 4
  br label %sw.epilog

sw.bb19:                                          ; preds = %cond.end
  %35 = load i32* %t.addr, align 4
  %add20 = add nsw i32 %35, 1
  %36 = load i32* @nt, align 4
  %rem21 = srem i32 %add20, %36
  %37 = load i32** %t2p.addr, align 8
  store i32 %rem21, i32* %37, align 4
  br label %sw.epilog

sw.bb22:                                          ; preds = %cond.end
  %38 = load i32* %t.addr, align 4
  %39 = load i32* @nt, align 4
  %add23 = add nsw i32 %38, %39
  %sub24 = sub nsw i32 %add23, 1
  %40 = load i32* @nt, align 4
  %rem25 = srem i32 %sub24, %40
  %41 = load i32** %t2p.addr, align 8
  store i32 %rem25, i32* %41, align 4
  br label %sw.epilog

sw.default:                                       ; preds = %cond.end
  %call = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([22 x i8]* @.str418, i32 0, i32 0))
  call void @exit(i32 1) #7
  unreachable

sw.epilog:                                        ; preds = %sw.bb22, %sw.bb19, %sw.bb15, %sw.bb12, %sw.bb8, %sw.bb5, %sw.bb1, %sw.bb
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @sort_eight_special(i8** %pt) #0 {
entry:
  %pt.addr = alloca i8**, align 8
  %tt = alloca [8 x i8*], align 16
  %i = alloca i32, align 4
  store i8** %pt, i8*** %pt.addr, align 8
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32* %i, align 4
  %cmp = icmp slt i32 %0, 8
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %1 = load i32* %i, align 4
  %idxprom = sext i32 %1 to i64
  %2 = load i8*** %pt.addr, align 8
  %arrayidx = getelementptr inbounds i8** %2, i64 %idxprom
  %3 = load i8** %arrayidx, align 8
  %4 = load i32* %i, align 4
  %idxprom1 = sext i32 %4 to i64
  %arrayidx2 = getelementptr inbounds [8 x i8*]* %tt, i32 0, i64 %idxprom1
  store i8* %3, i8** %arrayidx2, align 8
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %5 = load i32* %i, align 4
  %inc = add nsw i32 %5, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  store i32 0, i32* %i, align 4
  br label %for.cond3

for.cond3:                                        ; preds = %for.inc15, %for.end
  %6 = load i32* %i, align 4
  %cmp4 = icmp sle i32 %6, 3
  br i1 %cmp4, label %for.body5, label %for.end17

for.body5:                                        ; preds = %for.cond3
  %7 = load i32* %i, align 4
  %mul = mul nsw i32 2, %7
  %idxprom6 = sext i32 %mul to i64
  %arrayidx7 = getelementptr inbounds [8 x i8*]* %tt, i32 0, i64 %idxprom6
  %8 = load i8** %arrayidx7, align 8
  %9 = load i32* %i, align 4
  %idxprom8 = sext i32 %9 to i64
  %10 = load i8*** %pt.addr, align 8
  %arrayidx9 = getelementptr inbounds i8** %10, i64 %idxprom8
  store i8* %8, i8** %arrayidx9, align 8
  %11 = load i32* %i, align 4
  %mul10 = mul nsw i32 2, %11
  %add = add nsw i32 %mul10, 1
  %idxprom11 = sext i32 %add to i64
  %arrayidx12 = getelementptr inbounds [8 x i8*]* %tt, i32 0, i64 %idxprom11
  %12 = load i8** %arrayidx12, align 8
  %13 = load i32* %i, align 4
  %sub = sub nsw i32 7, %13
  %idxprom13 = sext i32 %sub to i64
  %14 = load i8*** %pt.addr, align 8
  %arrayidx14 = getelementptr inbounds i8** %14, i64 %idxprom13
  store i8* %12, i8** %arrayidx14, align 8
  br label %for.inc15

for.inc15:                                        ; preds = %for.body5
  %15 = load i32* %i, align 4
  %inc16 = add nsw i32 %15, 1
  store i32 %inc16, i32* %i, align 4
  br label %for.cond3

for.end17:                                        ; preds = %for.cond3
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @sort_eight_neighborlists(i32 %index) #0 {
entry:
  %index.addr = alloca i32, align 4
  store i32 %index, i32* %index.addr, align 4
  %0 = load i32* %index.addr, align 4
  %idxprom = sext i32 %0 to i64
  %1 = load i32*** @neighbor, align 8
  %arrayidx = getelementptr inbounds i32** %1, i64 %idxprom
  %2 = bitcast i32** %arrayidx to i8**
  call void @sort_eight_special(i8** %2)
  ret void
}

; Function Attrs: nounwind
declare i8* @realloc(i8*, i64) #3

; Function Attrs: nounwind uwtable
define internal void @terminate(i32 %status) #0 {
entry:
  %status.addr = alloca i32, align 4
  store i32 %status, i32* %status.addr, align 4
  call void @time_stamp(i8* getelementptr inbounds ([12 x i8]* @.str11429, i32 0, i32 0))
  %0 = load i32* %status.addr, align 4
  %call = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([26 x i8]* @.str12430, i32 0, i32 0), i32 %0)
  %1 = load %struct._IO_FILE** @stdout, align 8
  %call1 = call i32 @fflush(%struct._IO_FILE* %1)
  %2 = load %struct._IO_FILE** @stderr, align 8
  %call2 = call i32 @fflush(%struct._IO_FILE* %2)
  %3 = load i32* %status.addr, align 4
  call void @exit(i32 %3) #7
  unreachable

return:                                           ; No predecessors!
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @neighbor_coords(i32 %x, i32 %y, i32 %z, i32 %t, i32 %dir, i32* %x2p, i32* %y2p, i32* %z2p, i32* %t2p) #0 {
entry:
  %x.addr = alloca i32, align 4
  %y.addr = alloca i32, align 4
  %z.addr = alloca i32, align 4
  %t.addr = alloca i32, align 4
  %dir.addr = alloca i32, align 4
  %x2p.addr = alloca i32*, align 8
  %y2p.addr = alloca i32*, align 8
  %z2p.addr = alloca i32*, align 8
  %t2p.addr = alloca i32*, align 8
  store i32 %x, i32* %x.addr, align 4
  store i32 %y, i32* %y.addr, align 4
  store i32 %z, i32* %z.addr, align 4
  store i32 %t, i32* %t.addr, align 4
  store i32 %dir, i32* %dir.addr, align 4
  store i32* %x2p, i32** %x2p.addr, align 8
  store i32* %y2p, i32** %y2p.addr, align 8
  store i32* %z2p, i32** %z2p.addr, align 8
  store i32* %t2p, i32** %t2p.addr, align 8
  %0 = load i32* %x.addr, align 4
  %1 = load i32** %x2p.addr, align 8
  store i32 %0, i32* %1, align 4
  %2 = load i32* %y.addr, align 4
  %3 = load i32** %y2p.addr, align 8
  store i32 %2, i32* %3, align 4
  %4 = load i32* %z.addr, align 4
  %5 = load i32** %z2p.addr, align 8
  store i32 %4, i32* %5, align 4
  %6 = load i32* %t.addr, align 4
  %7 = load i32** %t2p.addr, align 8
  store i32 %6, i32* %7, align 4
  %8 = load i32* %dir.addr, align 4
  switch i32 %8, label %sw.default [
    i32 0, label %sw.bb
    i32 7, label %sw.bb1
    i32 1, label %sw.bb4
    i32 6, label %sw.bb7
    i32 2, label %sw.bb11
    i32 5, label %sw.bb14
    i32 3, label %sw.bb18
    i32 4, label %sw.bb21
  ]

sw.bb:                                            ; preds = %entry
  %9 = load i32* %x.addr, align 4
  %add = add nsw i32 %9, 1
  %10 = load i32* @nx, align 4
  %rem = srem i32 %add, %10
  %11 = load i32** %x2p.addr, align 8
  store i32 %rem, i32* %11, align 4
  br label %sw.epilog

sw.bb1:                                           ; preds = %entry
  %12 = load i32* %x.addr, align 4
  %13 = load i32* @nx, align 4
  %add2 = add nsw i32 %12, %13
  %sub = sub nsw i32 %add2, 1
  %14 = load i32* @nx, align 4
  %rem3 = srem i32 %sub, %14
  %15 = load i32** %x2p.addr, align 8
  store i32 %rem3, i32* %15, align 4
  br label %sw.epilog

sw.bb4:                                           ; preds = %entry
  %16 = load i32* %y.addr, align 4
  %add5 = add nsw i32 %16, 1
  %17 = load i32* @ny, align 4
  %rem6 = srem i32 %add5, %17
  %18 = load i32** %y2p.addr, align 8
  store i32 %rem6, i32* %18, align 4
  br label %sw.epilog

sw.bb7:                                           ; preds = %entry
  %19 = load i32* %y.addr, align 4
  %20 = load i32* @ny, align 4
  %add8 = add nsw i32 %19, %20
  %sub9 = sub nsw i32 %add8, 1
  %21 = load i32* @ny, align 4
  %rem10 = srem i32 %sub9, %21
  %22 = load i32** %y2p.addr, align 8
  store i32 %rem10, i32* %22, align 4
  br label %sw.epilog

sw.bb11:                                          ; preds = %entry
  %23 = load i32* %z.addr, align 4
  %add12 = add nsw i32 %23, 1
  %24 = load i32* @nz, align 4
  %rem13 = srem i32 %add12, %24
  %25 = load i32** %z2p.addr, align 8
  store i32 %rem13, i32* %25, align 4
  br label %sw.epilog

sw.bb14:                                          ; preds = %entry
  %26 = load i32* %z.addr, align 4
  %27 = load i32* @nz, align 4
  %add15 = add nsw i32 %26, %27
  %sub16 = sub nsw i32 %add15, 1
  %28 = load i32* @nz, align 4
  %rem17 = srem i32 %sub16, %28
  %29 = load i32** %z2p.addr, align 8
  store i32 %rem17, i32* %29, align 4
  br label %sw.epilog

sw.bb18:                                          ; preds = %entry
  %30 = load i32* %t.addr, align 4
  %add19 = add nsw i32 %30, 1
  %31 = load i32* @nt, align 4
  %rem20 = srem i32 %add19, %31
  %32 = load i32** %t2p.addr, align 8
  store i32 %rem20, i32* %32, align 4
  br label %sw.epilog

sw.bb21:                                          ; preds = %entry
  %33 = load i32* %t.addr, align 4
  %34 = load i32* @nt, align 4
  %add22 = add nsw i32 %33, %34
  %sub23 = sub nsw i32 %add22, 1
  %35 = load i32* @nt, align 4
  %rem24 = srem i32 %sub23, %35
  %36 = load i32** %t2p.addr, align 8
  store i32 %rem24, i32* %36, align 4
  br label %sw.epilog

sw.default:                                       ; preds = %entry
  %call = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([22 x i8]* @.str418, i32 0, i32 0))
  call void @exit(i32 1) #7
  unreachable

sw.epilog:                                        ; preds = %sw.bb21, %sw.bb18, %sw.bb14, %sw.bb11, %sw.bb7, %sw.bb4, %sw.bb1, %sw.bb
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @start_handlers() #0 {
entry:
  ret void
}

; Function Attrs: nounwind uwtable
define internal %struct.msg_tag* @start_gather(i32 %field, i32 %size, i32 %index, i32 %parity, i8** %dest) #0 {
entry:
  %field.addr = alloca i32, align 4
  %size.addr = alloca i32, align 4
  %index.addr = alloca i32, align 4
  %parity.addr = alloca i32, align 4
  %dest.addr = alloca i8**, align 8
  %j = alloca i32, align 4
  %s = alloca %struct.site*, align 8
  store i32 %field, i32* %field.addr, align 4
  store i32 %size, i32* %size.addr, align 4
  store i32 %index, i32* %index.addr, align 4
  store i32 %parity, i32* %parity.addr, align 4
  store i8** %dest, i8*** %dest.addr, align 8
  %0 = load i32* %parity.addr, align 4
  switch i32 %0, label %sw.epilog [
    i32 2, label %sw.bb
    i32 1, label %sw.bb7
    i32 3, label %sw.bb27
  ]

sw.bb:                                            ; preds = %entry
  store i32 0, i32* %j, align 4
  %1 = load %struct.site** @lattice, align 8
  store %struct.site* %1, %struct.site** %s, align 8
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %sw.bb
  %2 = load i32* %j, align 4
  %3 = load i32* @even_sites_on_node, align 4
  %cmp = icmp slt i32 %2, %3
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %4 = load %struct.site** @lattice, align 8
  %5 = load i32* %j, align 4
  %idxprom = sext i32 %5 to i64
  %6 = load i32* %index.addr, align 4
  %idxprom1 = sext i32 %6 to i64
  %7 = load i32*** @neighbor, align 8
  %arrayidx = getelementptr inbounds i32** %7, i64 %idxprom1
  %8 = load i32** %arrayidx, align 8
  %arrayidx2 = getelementptr inbounds i32* %8, i64 %idxprom
  %9 = load i32* %arrayidx2, align 4
  %idx.ext = sext i32 %9 to i64
  %add.ptr = getelementptr inbounds %struct.site* %4, i64 %idx.ext
  %10 = bitcast %struct.site* %add.ptr to i8*
  %11 = load i32* %field.addr, align 4
  %idx.ext3 = sext i32 %11 to i64
  %add.ptr4 = getelementptr inbounds i8* %10, i64 %idx.ext3
  %12 = load i32* %j, align 4
  %idxprom5 = sext i32 %12 to i64
  %13 = load i8*** %dest.addr, align 8
  %arrayidx6 = getelementptr inbounds i8** %13, i64 %idxprom5
  store i8* %add.ptr4, i8** %arrayidx6, align 8
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %14 = load i32* %j, align 4
  %inc = add nsw i32 %14, 1
  store i32 %inc, i32* %j, align 4
  %15 = load %struct.site** %s, align 8
  %incdec.ptr = getelementptr inbounds %struct.site* %15, i32 1
  store %struct.site* %incdec.ptr, %struct.site** %s, align 8
  br label %for.cond

for.end:                                          ; preds = %for.cond
  br label %sw.epilog

sw.bb7:                                           ; preds = %entry
  %16 = load i32* @even_sites_on_node, align 4
  store i32 %16, i32* %j, align 4
  %17 = load i32* %j, align 4
  %idxprom8 = sext i32 %17 to i64
  %18 = load %struct.site** @lattice, align 8
  %arrayidx9 = getelementptr inbounds %struct.site* %18, i64 %idxprom8
  store %struct.site* %arrayidx9, %struct.site** %s, align 8
  br label %for.cond10

for.cond10:                                       ; preds = %for.inc23, %sw.bb7
  %19 = load i32* %j, align 4
  %20 = load i32* @sites_on_node, align 4
  %cmp11 = icmp slt i32 %19, %20
  br i1 %cmp11, label %for.body12, label %for.end26

for.body12:                                       ; preds = %for.cond10
  %21 = load %struct.site** @lattice, align 8
  %22 = load i32* %j, align 4
  %idxprom13 = sext i32 %22 to i64
  %23 = load i32* %index.addr, align 4
  %idxprom14 = sext i32 %23 to i64
  %24 = load i32*** @neighbor, align 8
  %arrayidx15 = getelementptr inbounds i32** %24, i64 %idxprom14
  %25 = load i32** %arrayidx15, align 8
  %arrayidx16 = getelementptr inbounds i32* %25, i64 %idxprom13
  %26 = load i32* %arrayidx16, align 4
  %idx.ext17 = sext i32 %26 to i64
  %add.ptr18 = getelementptr inbounds %struct.site* %21, i64 %idx.ext17
  %27 = bitcast %struct.site* %add.ptr18 to i8*
  %28 = load i32* %field.addr, align 4
  %idx.ext19 = sext i32 %28 to i64
  %add.ptr20 = getelementptr inbounds i8* %27, i64 %idx.ext19
  %29 = load i32* %j, align 4
  %idxprom21 = sext i32 %29 to i64
  %30 = load i8*** %dest.addr, align 8
  %arrayidx22 = getelementptr inbounds i8** %30, i64 %idxprom21
  store i8* %add.ptr20, i8** %arrayidx22, align 8
  br label %for.inc23

for.inc23:                                        ; preds = %for.body12
  %31 = load i32* %j, align 4
  %inc24 = add nsw i32 %31, 1
  store i32 %inc24, i32* %j, align 4
  %32 = load %struct.site** %s, align 8
  %incdec.ptr25 = getelementptr inbounds %struct.site* %32, i32 1
  store %struct.site* %incdec.ptr25, %struct.site** %s, align 8
  br label %for.cond10

for.end26:                                        ; preds = %for.cond10
  br label %sw.epilog

sw.bb27:                                          ; preds = %entry
  store i32 0, i32* %j, align 4
  %33 = load %struct.site** @lattice, align 8
  store %struct.site* %33, %struct.site** %s, align 8
  br label %for.cond28

for.cond28:                                       ; preds = %for.inc41, %sw.bb27
  %34 = load i32* %j, align 4
  %35 = load i32* @sites_on_node, align 4
  %cmp29 = icmp slt i32 %34, %35
  br i1 %cmp29, label %for.body30, label %for.end44

for.body30:                                       ; preds = %for.cond28
  %36 = load %struct.site** @lattice, align 8
  %37 = load i32* %j, align 4
  %idxprom31 = sext i32 %37 to i64
  %38 = load i32* %index.addr, align 4
  %idxprom32 = sext i32 %38 to i64
  %39 = load i32*** @neighbor, align 8
  %arrayidx33 = getelementptr inbounds i32** %39, i64 %idxprom32
  %40 = load i32** %arrayidx33, align 8
  %arrayidx34 = getelementptr inbounds i32* %40, i64 %idxprom31
  %41 = load i32* %arrayidx34, align 4
  %idx.ext35 = sext i32 %41 to i64
  %add.ptr36 = getelementptr inbounds %struct.site* %36, i64 %idx.ext35
  %42 = bitcast %struct.site* %add.ptr36 to i8*
  %43 = load i32* %field.addr, align 4
  %idx.ext37 = sext i32 %43 to i64
  %add.ptr38 = getelementptr inbounds i8* %42, i64 %idx.ext37
  %44 = load i32* %j, align 4
  %idxprom39 = sext i32 %44 to i64
  %45 = load i8*** %dest.addr, align 8
  %arrayidx40 = getelementptr inbounds i8** %45, i64 %idxprom39
  store i8* %add.ptr38, i8** %arrayidx40, align 8
  br label %for.inc41

for.inc41:                                        ; preds = %for.body30
  %46 = load i32* %j, align 4
  %inc42 = add nsw i32 %46, 1
  store i32 %inc42, i32* %j, align 4
  %47 = load %struct.site** %s, align 8
  %incdec.ptr43 = getelementptr inbounds %struct.site* %47, i32 1
  store %struct.site* %incdec.ptr43, %struct.site** %s, align 8
  br label %for.cond28

for.end44:                                        ; preds = %for.cond28
  br label %sw.epilog

sw.epilog:                                        ; preds = %for.end44, %for.end26, %for.end, %entry
  ret %struct.msg_tag* null
}

; Function Attrs: nounwind uwtable
define internal void @restart_gather(i32 %field, i32 %size, i32 %index, i32 %parity, i8** %dest, %struct.msg_tag* %mbuf) #0 {
entry:
  %field.addr = alloca i32, align 4
  %size.addr = alloca i32, align 4
  %index.addr = alloca i32, align 4
  %parity.addr = alloca i32, align 4
  %dest.addr = alloca i8**, align 8
  %mbuf.addr = alloca %struct.msg_tag*, align 8
  store i32 %field, i32* %field.addr, align 4
  store i32 %size, i32* %size.addr, align 4
  store i32 %index, i32* %index.addr, align 4
  store i32 %parity, i32* %parity.addr, align 4
  store i8** %dest, i8*** %dest.addr, align 8
  store %struct.msg_tag* %mbuf, %struct.msg_tag** %mbuf.addr, align 8
  ret void
}

; Function Attrs: nounwind uwtable
define internal %struct.msg_tag* @start_gather_from_temp(i8* %field, i32 %size, i32 %index, i32 %parity, i8** %dest) #0 {
entry:
  %field.addr = alloca i8*, align 8
  %size.addr = alloca i32, align 4
  %index.addr = alloca i32, align 4
  %parity.addr = alloca i32, align 4
  %dest.addr = alloca i8**, align 8
  %j = alloca i32, align 4
  %s = alloca %struct.site*, align 8
  store i8* %field, i8** %field.addr, align 8
  store i32 %size, i32* %size.addr, align 4
  store i32 %index, i32* %index.addr, align 4
  store i32 %parity, i32* %parity.addr, align 4
  store i8** %dest, i8*** %dest.addr, align 8
  %0 = load i32* %parity.addr, align 4
  switch i32 %0, label %sw.epilog [
    i32 2, label %sw.bb
    i32 1, label %sw.bb5
    i32 3, label %sw.bb24
  ]

sw.bb:                                            ; preds = %entry
  store i32 0, i32* %j, align 4
  %1 = load %struct.site** @lattice, align 8
  store %struct.site* %1, %struct.site** %s, align 8
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %sw.bb
  %2 = load i32* %j, align 4
  %3 = load i32* @even_sites_on_node, align 4
  %cmp = icmp slt i32 %2, %3
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %4 = load i8** %field.addr, align 8
  %5 = load i32* %j, align 4
  %idxprom = sext i32 %5 to i64
  %6 = load i32* %index.addr, align 4
  %idxprom1 = sext i32 %6 to i64
  %7 = load i32*** @neighbor, align 8
  %arrayidx = getelementptr inbounds i32** %7, i64 %idxprom1
  %8 = load i32** %arrayidx, align 8
  %arrayidx2 = getelementptr inbounds i32* %8, i64 %idxprom
  %9 = load i32* %arrayidx2, align 4
  %10 = load i32* %size.addr, align 4
  %mul = mul nsw i32 %9, %10
  %idx.ext = sext i32 %mul to i64
  %add.ptr = getelementptr inbounds i8* %4, i64 %idx.ext
  %11 = load i32* %j, align 4
  %idxprom3 = sext i32 %11 to i64
  %12 = load i8*** %dest.addr, align 8
  %arrayidx4 = getelementptr inbounds i8** %12, i64 %idxprom3
  store i8* %add.ptr, i8** %arrayidx4, align 8
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %13 = load i32* %j, align 4
  %inc = add nsw i32 %13, 1
  store i32 %inc, i32* %j, align 4
  %14 = load %struct.site** %s, align 8
  %incdec.ptr = getelementptr inbounds %struct.site* %14, i32 1
  store %struct.site* %incdec.ptr, %struct.site** %s, align 8
  br label %for.cond

for.end:                                          ; preds = %for.cond
  br label %sw.epilog

sw.bb5:                                           ; preds = %entry
  %15 = load i32* @even_sites_on_node, align 4
  store i32 %15, i32* %j, align 4
  %16 = load i32* %j, align 4
  %idxprom6 = sext i32 %16 to i64
  %17 = load %struct.site** @lattice, align 8
  %arrayidx7 = getelementptr inbounds %struct.site* %17, i64 %idxprom6
  store %struct.site* %arrayidx7, %struct.site** %s, align 8
  br label %for.cond8

for.cond8:                                        ; preds = %for.inc20, %sw.bb5
  %18 = load i32* %j, align 4
  %19 = load i32* @sites_on_node, align 4
  %cmp9 = icmp slt i32 %18, %19
  br i1 %cmp9, label %for.body10, label %for.end23

for.body10:                                       ; preds = %for.cond8
  %20 = load i8** %field.addr, align 8
  %21 = load i32* %j, align 4
  %idxprom11 = sext i32 %21 to i64
  %22 = load i32* %index.addr, align 4
  %idxprom12 = sext i32 %22 to i64
  %23 = load i32*** @neighbor, align 8
  %arrayidx13 = getelementptr inbounds i32** %23, i64 %idxprom12
  %24 = load i32** %arrayidx13, align 8
  %arrayidx14 = getelementptr inbounds i32* %24, i64 %idxprom11
  %25 = load i32* %arrayidx14, align 4
  %26 = load i32* %size.addr, align 4
  %mul15 = mul nsw i32 %25, %26
  %idx.ext16 = sext i32 %mul15 to i64
  %add.ptr17 = getelementptr inbounds i8* %20, i64 %idx.ext16
  %27 = load i32* %j, align 4
  %idxprom18 = sext i32 %27 to i64
  %28 = load i8*** %dest.addr, align 8
  %arrayidx19 = getelementptr inbounds i8** %28, i64 %idxprom18
  store i8* %add.ptr17, i8** %arrayidx19, align 8
  br label %for.inc20

for.inc20:                                        ; preds = %for.body10
  %29 = load i32* %j, align 4
  %inc21 = add nsw i32 %29, 1
  store i32 %inc21, i32* %j, align 4
  %30 = load %struct.site** %s, align 8
  %incdec.ptr22 = getelementptr inbounds %struct.site* %30, i32 1
  store %struct.site* %incdec.ptr22, %struct.site** %s, align 8
  br label %for.cond8

for.end23:                                        ; preds = %for.cond8
  br label %sw.epilog

sw.bb24:                                          ; preds = %entry
  store i32 0, i32* %j, align 4
  %31 = load %struct.site** @lattice, align 8
  store %struct.site* %31, %struct.site** %s, align 8
  br label %for.cond25

for.cond25:                                       ; preds = %for.inc37, %sw.bb24
  %32 = load i32* %j, align 4
  %33 = load i32* @sites_on_node, align 4
  %cmp26 = icmp slt i32 %32, %33
  br i1 %cmp26, label %for.body27, label %for.end40

for.body27:                                       ; preds = %for.cond25
  %34 = load i8** %field.addr, align 8
  %35 = load i32* %j, align 4
  %idxprom28 = sext i32 %35 to i64
  %36 = load i32* %index.addr, align 4
  %idxprom29 = sext i32 %36 to i64
  %37 = load i32*** @neighbor, align 8
  %arrayidx30 = getelementptr inbounds i32** %37, i64 %idxprom29
  %38 = load i32** %arrayidx30, align 8
  %arrayidx31 = getelementptr inbounds i32* %38, i64 %idxprom28
  %39 = load i32* %arrayidx31, align 4
  %40 = load i32* %size.addr, align 4
  %mul32 = mul nsw i32 %39, %40
  %idx.ext33 = sext i32 %mul32 to i64
  %add.ptr34 = getelementptr inbounds i8* %34, i64 %idx.ext33
  %41 = load i32* %j, align 4
  %idxprom35 = sext i32 %41 to i64
  %42 = load i8*** %dest.addr, align 8
  %arrayidx36 = getelementptr inbounds i8** %42, i64 %idxprom35
  store i8* %add.ptr34, i8** %arrayidx36, align 8
  br label %for.inc37

for.inc37:                                        ; preds = %for.body27
  %43 = load i32* %j, align 4
  %inc38 = add nsw i32 %43, 1
  store i32 %inc38, i32* %j, align 4
  %44 = load %struct.site** %s, align 8
  %incdec.ptr39 = getelementptr inbounds %struct.site* %44, i32 1
  store %struct.site* %incdec.ptr39, %struct.site** %s, align 8
  br label %for.cond25

for.end40:                                        ; preds = %for.cond25
  br label %sw.epilog

sw.epilog:                                        ; preds = %for.end40, %for.end23, %for.end, %entry
  ret %struct.msg_tag* null
}

; Function Attrs: nounwind uwtable
define internal void @restart_gather_from_temp(i8* %field, i32 %size, i32 %index, i32 %parity, i8** %dest, %struct.msg_tag* %mbuf) #0 {
entry:
  %field.addr = alloca i8*, align 8
  %size.addr = alloca i32, align 4
  %index.addr = alloca i32, align 4
  %parity.addr = alloca i32, align 4
  %dest.addr = alloca i8**, align 8
  %mbuf.addr = alloca %struct.msg_tag*, align 8
  store i8* %field, i8** %field.addr, align 8
  store i32 %size, i32* %size.addr, align 4
  store i32 %index, i32* %index.addr, align 4
  store i32 %parity, i32* %parity.addr, align 4
  store i8** %dest, i8*** %dest.addr, align 8
  store %struct.msg_tag* %mbuf, %struct.msg_tag** %mbuf.addr, align 8
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @wait_gather(%struct.msg_tag* %mbuf) #0 {
entry:
  %mbuf.addr = alloca %struct.msg_tag*, align 8
  store %struct.msg_tag* %mbuf, %struct.msg_tag** %mbuf.addr, align 8
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @cleanup_gather(%struct.msg_tag* %mbuf) #0 {
entry:
  %mbuf.addr = alloca %struct.msg_tag*, align 8
  store %struct.msg_tag* %mbuf, %struct.msg_tag** %mbuf.addr, align 8
  ret void
}

; Function Attrs: nounwind uwtable
define internal %struct.msg_tag* @start_general_gather(i32 %field, i32 %size, i32* %displacement, i32 %parity, i8** %dest) #0 {
entry:
  %field.addr = alloca i32, align 4
  %size.addr = alloca i32, align 4
  %displacement.addr = alloca i32*, align 8
  %parity.addr = alloca i32, align 4
  %dest.addr = alloca i8**, align 8
  %i = alloca i32, align 4
  %s = alloca %struct.site*, align 8
  %tx = alloca i32, align 4
  %ty = alloca i32, align 4
  %tz = alloca i32, align 4
  %tt = alloca i32, align 4
  store i32 %field, i32* %field.addr, align 4
  store i32 %size, i32* %size.addr, align 4
  store i32* %displacement, i32** %displacement.addr, align 8
  store i32 %parity, i32* %parity.addr, align 4
  store i8** %dest, i8*** %dest.addr, align 8
  %0 = load i32* @g_gather_flag, align 4
  %cmp = icmp ne i32 %0, 0
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %1 = load %struct._IO_FILE** @stderr, align 8
  %call = call i32 @mynode()
  %call1 = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %1, i8* getelementptr inbounds ([48 x i8]* @.str8426, i32 0, i32 0), i32 %call)
  call void @exit(i32 1) #7
  unreachable

if.end:                                           ; preds = %entry
  %2 = load i32* %parity.addr, align 4
  %cmp2 = icmp eq i32 %2, 1
  br i1 %cmp2, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.end
  %3 = load i32* @even_sites_on_node, align 4
  br label %cond.end

cond.false:                                       ; preds = %if.end
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %3, %cond.true ], [ 0, %cond.false ]
  store i32 %cond, i32* %i, align 4
  %4 = load i32* %i, align 4
  %idxprom = sext i32 %4 to i64
  %5 = load %struct.site** @lattice, align 8
  %arrayidx = getelementptr inbounds %struct.site* %5, i64 %idxprom
  store %struct.site* %arrayidx, %struct.site** %s, align 8
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %cond.end
  %6 = load i32* %i, align 4
  %7 = load i32* %parity.addr, align 4
  %cmp3 = icmp eq i32 %7, 2
  br i1 %cmp3, label %cond.true4, label %cond.false5

cond.true4:                                       ; preds = %for.cond
  %8 = load i32* @even_sites_on_node, align 4
  br label %cond.end6

cond.false5:                                      ; preds = %for.cond
  %9 = load i32* @sites_on_node, align 4
  br label %cond.end6

cond.end6:                                        ; preds = %cond.false5, %cond.true4
  %cond7 = phi i32 [ %8, %cond.true4 ], [ %9, %cond.false5 ]
  %cmp8 = icmp slt i32 %6, %cond7
  br i1 %cmp8, label %for.body, label %for.end

for.body:                                         ; preds = %cond.end6
  %10 = load i32** %displacement.addr, align 8
  %arrayidx9 = getelementptr inbounds i32* %10, i64 0
  %11 = load i32* %arrayidx9, align 4
  %cmp10 = icmp ne i32 %11, 0
  br i1 %cmp10, label %if.then11, label %if.else

if.then11:                                        ; preds = %for.body
  %12 = load %struct.site** %s, align 8
  %x = getelementptr inbounds %struct.site* %12, i32 0, i32 0
  %13 = load i16* %x, align 2
  %conv = sext i16 %13 to i32
  %14 = load i32** %displacement.addr, align 8
  %arrayidx12 = getelementptr inbounds i32* %14, i64 0
  %15 = load i32* %arrayidx12, align 4
  %add = add nsw i32 %conv, %15
  %16 = load i32* @nx, align 4
  %add13 = add nsw i32 %add, %16
  %17 = load i32* @nx, align 4
  %rem = srem i32 %add13, %17
  store i32 %rem, i32* %tx, align 4
  br label %if.end16

if.else:                                          ; preds = %for.body
  %18 = load %struct.site** %s, align 8
  %x14 = getelementptr inbounds %struct.site* %18, i32 0, i32 0
  %19 = load i16* %x14, align 2
  %conv15 = sext i16 %19 to i32
  store i32 %conv15, i32* %tx, align 4
  br label %if.end16

if.end16:                                         ; preds = %if.else, %if.then11
  %20 = load i32** %displacement.addr, align 8
  %arrayidx17 = getelementptr inbounds i32* %20, i64 1
  %21 = load i32* %arrayidx17, align 4
  %cmp18 = icmp ne i32 %21, 0
  br i1 %cmp18, label %if.then20, label %if.else26

if.then20:                                        ; preds = %if.end16
  %22 = load %struct.site** %s, align 8
  %y = getelementptr inbounds %struct.site* %22, i32 0, i32 1
  %23 = load i16* %y, align 2
  %conv21 = sext i16 %23 to i32
  %24 = load i32** %displacement.addr, align 8
  %arrayidx22 = getelementptr inbounds i32* %24, i64 1
  %25 = load i32* %arrayidx22, align 4
  %add23 = add nsw i32 %conv21, %25
  %26 = load i32* @ny, align 4
  %add24 = add nsw i32 %add23, %26
  %27 = load i32* @ny, align 4
  %rem25 = srem i32 %add24, %27
  store i32 %rem25, i32* %ty, align 4
  br label %if.end29

if.else26:                                        ; preds = %if.end16
  %28 = load %struct.site** %s, align 8
  %y27 = getelementptr inbounds %struct.site* %28, i32 0, i32 1
  %29 = load i16* %y27, align 2
  %conv28 = sext i16 %29 to i32
  store i32 %conv28, i32* %ty, align 4
  br label %if.end29

if.end29:                                         ; preds = %if.else26, %if.then20
  %30 = load i32** %displacement.addr, align 8
  %arrayidx30 = getelementptr inbounds i32* %30, i64 2
  %31 = load i32* %arrayidx30, align 4
  %cmp31 = icmp ne i32 %31, 0
  br i1 %cmp31, label %if.then33, label %if.else39

if.then33:                                        ; preds = %if.end29
  %32 = load %struct.site** %s, align 8
  %z = getelementptr inbounds %struct.site* %32, i32 0, i32 2
  %33 = load i16* %z, align 2
  %conv34 = sext i16 %33 to i32
  %34 = load i32** %displacement.addr, align 8
  %arrayidx35 = getelementptr inbounds i32* %34, i64 2
  %35 = load i32* %arrayidx35, align 4
  %add36 = add nsw i32 %conv34, %35
  %36 = load i32* @nz, align 4
  %add37 = add nsw i32 %add36, %36
  %37 = load i32* @nz, align 4
  %rem38 = srem i32 %add37, %37
  store i32 %rem38, i32* %tz, align 4
  br label %if.end42

if.else39:                                        ; preds = %if.end29
  %38 = load %struct.site** %s, align 8
  %z40 = getelementptr inbounds %struct.site* %38, i32 0, i32 2
  %39 = load i16* %z40, align 2
  %conv41 = sext i16 %39 to i32
  store i32 %conv41, i32* %tz, align 4
  br label %if.end42

if.end42:                                         ; preds = %if.else39, %if.then33
  %40 = load i32** %displacement.addr, align 8
  %arrayidx43 = getelementptr inbounds i32* %40, i64 3
  %41 = load i32* %arrayidx43, align 4
  %cmp44 = icmp ne i32 %41, 0
  br i1 %cmp44, label %if.then46, label %if.else52

if.then46:                                        ; preds = %if.end42
  %42 = load %struct.site** %s, align 8
  %t = getelementptr inbounds %struct.site* %42, i32 0, i32 3
  %43 = load i16* %t, align 2
  %conv47 = sext i16 %43 to i32
  %44 = load i32** %displacement.addr, align 8
  %arrayidx48 = getelementptr inbounds i32* %44, i64 3
  %45 = load i32* %arrayidx48, align 4
  %add49 = add nsw i32 %conv47, %45
  %46 = load i32* @nt, align 4
  %add50 = add nsw i32 %add49, %46
  %47 = load i32* @nt, align 4
  %rem51 = srem i32 %add50, %47
  store i32 %rem51, i32* %tt, align 4
  br label %if.end55

if.else52:                                        ; preds = %if.end42
  %48 = load %struct.site** %s, align 8
  %t53 = getelementptr inbounds %struct.site* %48, i32 0, i32 3
  %49 = load i16* %t53, align 2
  %conv54 = sext i16 %49 to i32
  store i32 %conv54, i32* %tt, align 4
  br label %if.end55

if.end55:                                         ; preds = %if.else52, %if.then46
  %50 = load i32* %tx, align 4
  %51 = load i32* %ty, align 4
  %52 = load i32* %tz, align 4
  %53 = load i32* %tt, align 4
  %call56 = call i32 @node_index(i32 %50, i32 %51, i32 %52, i32 %53)
  %idxprom57 = sext i32 %call56 to i64
  %54 = load %struct.site** @lattice, align 8
  %arrayidx58 = getelementptr inbounds %struct.site* %54, i64 %idxprom57
  %55 = bitcast %struct.site* %arrayidx58 to i8*
  %56 = load i32* %field.addr, align 4
  %idx.ext = sext i32 %56 to i64
  %add.ptr = getelementptr inbounds i8* %55, i64 %idx.ext
  %57 = load i32* %i, align 4
  %idxprom59 = sext i32 %57 to i64
  %58 = load i8*** %dest.addr, align 8
  %arrayidx60 = getelementptr inbounds i8** %58, i64 %idxprom59
  store i8* %add.ptr, i8** %arrayidx60, align 8
  br label %for.inc

for.inc:                                          ; preds = %if.end55
  %59 = load i32* %i, align 4
  %inc = add nsw i32 %59, 1
  store i32 %inc, i32* %i, align 4
  %60 = load %struct.site** %s, align 8
  %incdec.ptr = getelementptr inbounds %struct.site* %60, i32 1
  store %struct.site* %incdec.ptr, %struct.site** %s, align 8
  br label %for.cond

for.end:                                          ; preds = %cond.end6
  store i32 1, i32* @g_gather_flag, align 4
  ret %struct.msg_tag* null
}

; Function Attrs: nounwind uwtable
define internal void @wait_general_gather(%struct.msg_tag* %mbuf) #0 {
entry:
  %mbuf.addr = alloca %struct.msg_tag*, align 8
  store %struct.msg_tag* %mbuf, %struct.msg_tag** %mbuf.addr, align 8
  store i32 0, i32* @g_gather_flag, align 4
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @cleanup_general_gather(%struct.msg_tag* %mbuf) #0 {
entry:
  %mbuf.addr = alloca %struct.msg_tag*, align 8
  store %struct.msg_tag* %mbuf, %struct.msg_tag** %mbuf.addr, align 8
  ret void
}

; Function Attrs: nounwind uwtable
define internal i8* @field_pointer_at_coordinates(i32 %field, i32 %size, i32 %x, i32 %y, i32 %z, i32 %t) #0 {
entry:
  %field.addr = alloca i32, align 4
  %size.addr = alloca i32, align 4
  %x.addr = alloca i32, align 4
  %y.addr = alloca i32, align 4
  %z.addr = alloca i32, align 4
  %t.addr = alloca i32, align 4
  %index = alloca i32, align 4
  store i32 %field, i32* %field.addr, align 4
  store i32 %size, i32* %size.addr, align 4
  store i32 %x, i32* %x.addr, align 4
  store i32 %y, i32* %y.addr, align 4
  store i32 %z, i32* %z.addr, align 4
  store i32 %t, i32* %t.addr, align 4
  %0 = load i32* %x.addr, align 4
  %1 = load i32* %y.addr, align 4
  %2 = load i32* %z.addr, align 4
  %3 = load i32* %t.addr, align 4
  %call = call i32 @node_index(i32 %0, i32 %1, i32 %2, i32 %3)
  store i32 %call, i32* %index, align 4
  %4 = load i32* %index, align 4
  %idxprom = sext i32 %4 to i64
  %5 = load %struct.site** @lattice, align 8
  %arrayidx = getelementptr inbounds %struct.site* %5, i64 %idxprom
  %6 = bitcast %struct.site* %arrayidx to i8*
  %7 = load i32* %field.addr, align 4
  %idx.ext = sext i32 %7 to i64
  %add.ptr = getelementptr inbounds i8* %6, i64 %idx.ext
  ret i8* %add.ptr
}

; Function Attrs: nounwind uwtable
define internal i8* @field_pointer_at_direction(i32 %field, i32 %size, %struct.site* %s, i32 %direction) #0 {
entry:
  %field.addr = alloca i32, align 4
  %size.addr = alloca i32, align 4
  %s.addr = alloca %struct.site*, align 8
  %direction.addr = alloca i32, align 4
  store i32 %field, i32* %field.addr, align 4
  store i32 %size, i32* %size.addr, align 4
  store %struct.site* %s, %struct.site** %s.addr, align 8
  store i32 %direction, i32* %direction.addr, align 4
  %0 = load %struct.site** %s.addr, align 8
  %1 = load %struct.site** @lattice, align 8
  %sub.ptr.lhs.cast = ptrtoint %struct.site* %0 to i64
  %sub.ptr.rhs.cast = ptrtoint %struct.site* %1 to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %sub.ptr.div = sdiv exact i64 %sub.ptr.sub, 2048
  %2 = load i32* %direction.addr, align 4
  %idxprom = sext i32 %2 to i64
  %3 = load i32*** @neighbor, align 8
  %arrayidx = getelementptr inbounds i32** %3, i64 %idxprom
  %4 = load i32** %arrayidx, align 8
  %arrayidx1 = getelementptr inbounds i32* %4, i64 %sub.ptr.div
  %5 = load i32* %arrayidx1, align 4
  %conv = sext i32 %5 to i64
  %6 = inttoptr i64 %conv to i8*
  %7 = load i32* %field.addr, align 4
  %idx.ext = sext i32 %7 to i64
  %add.ptr = getelementptr inbounds i8* %6, i64 %idx.ext
  ret i8* %add.ptr
}

; Function Attrs: nounwind uwtable
define internal void @cleanup_field_pointer(i8* %buf) #0 {
entry:
  %buf.addr = alloca i8*, align 8
  store i8* %buf, i8** %buf.addr, align 8
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @send_field(i8* %buf, i32 %size, i32 %tonode) #0 {
entry:
  %buf.addr = alloca i8*, align 8
  %size.addr = alloca i32, align 4
  %tonode.addr = alloca i32, align 4
  store i8* %buf, i8** %buf.addr, align 8
  store i32 %size, i32* %size.addr, align 4
  store i32 %tonode, i32* %tonode.addr, align 4
  %call = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([27 x i8]* @.str9427, i32 0, i32 0))
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @get_field(i8* %buf, i32 %size) #0 {
entry:
  %buf.addr = alloca i8*, align 8
  %size.addr = alloca i32, align 4
  store i8* %buf, i8** %buf.addr, align 8
  store i32 %size, i32* %size.addr, align 4
  %call = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([27 x i8]* @.str9427, i32 0, i32 0))
  ret void
}

; Function Attrs: nounwind uwtable
define internal i8* @machine_type() #0 {
entry:
  ret i8* getelementptr inbounds ([17 x i8]* @name, i32 0, i32 0)
}

; Function Attrs: nounwind uwtable
define internal i32 @mynode() #0 {
entry:
  ret i32 0
}

; Function Attrs: nounwind uwtable
define internal i32 @numnodes() #0 {
entry:
  ret i32 1
}

; Function Attrs: nounwind uwtable
define internal void @g_sync() #0 {
entry:
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @g_floatsum(float* %fpt) #0 {
entry:
  %fpt.addr = alloca float*, align 8
  store float* %fpt, float** %fpt.addr, align 8
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @g_doublesum(double* %dpt) #0 {
entry:
  %dpt.addr = alloca double*, align 8
  store double* %dpt, double** %dpt.addr, align 8
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @g_vecdoublesum(double* %dpt, i32 %ndoubles) #0 {
entry:
  %dpt.addr = alloca double*, align 8
  %ndoubles.addr = alloca i32, align 4
  store double* %dpt, double** %dpt.addr, align 8
  store i32 %ndoubles, i32* %ndoubles.addr, align 4
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @g_complexsum(%struct.complex* %cpt) #0 {
entry:
  %cpt.addr = alloca %struct.complex*, align 8
  store %struct.complex* %cpt, %struct.complex** %cpt.addr, align 8
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @g_dcomplexsum(%struct.double_complex* %cpt) #0 {
entry:
  %cpt.addr = alloca %struct.double_complex*, align 8
  store %struct.double_complex* %cpt, %struct.double_complex** %cpt.addr, align 8
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @g_veccomplexsum(%struct.complex* %cpt, i32 %ncomplex) #0 {
entry:
  %cpt.addr = alloca %struct.complex*, align 8
  %ncomplex.addr = alloca i32, align 4
  store %struct.complex* %cpt, %struct.complex** %cpt.addr, align 8
  store i32 %ncomplex, i32* %ncomplex.addr, align 4
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @g_wvectorsum(%struct.wilson_vector* %wvpt) #0 {
entry:
  %wvpt.addr = alloca %struct.wilson_vector*, align 8
  store %struct.wilson_vector* %wvpt, %struct.wilson_vector** %wvpt.addr, align 8
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @g_xor32(i32* %pt) #0 {
entry:
  %pt.addr = alloca i32*, align 8
  store i32* %pt, i32** %pt.addr, align 8
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @g_floatmax(float* %fpt) #0 {
entry:
  %fpt.addr = alloca float*, align 8
  store float* %fpt, float** %fpt.addr, align 8
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @g_doublemax(double* %dpt) #0 {
entry:
  %dpt.addr = alloca double*, align 8
  store double* %dpt, double** %dpt.addr, align 8
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @broadcast_float(float* %fpt) #0 {
entry:
  %fpt.addr = alloca float*, align 8
  store float* %fpt, float** %fpt.addr, align 8
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @broadcast_double(double* %dpt) #0 {
entry:
  %dpt.addr = alloca double*, align 8
  store double* %dpt, double** %dpt.addr, align 8
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @broadcast_complex(%struct.complex* %cpt) #0 {
entry:
  %cpt.addr = alloca %struct.complex*, align 8
  store %struct.complex* %cpt, %struct.complex** %cpt.addr, align 8
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @broadcast_dcomplex(%struct.double_complex* %cpt) #0 {
entry:
  %cpt.addr = alloca %struct.double_complex*, align 8
  store %struct.double_complex* %cpt, %struct.double_complex** %cpt.addr, align 8
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @broadcast_bytes(i8* %buf, i32 %size) #0 {
entry:
  %buf.addr = alloca i8*, align 8
  %size.addr = alloca i32, align 4
  store i8* %buf, i8** %buf.addr, align 8
  store i32 %size, i32* %size.addr, align 4
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @send_integer(i32 %tonode, i32* %address) #0 {
entry:
  %tonode.addr = alloca i32, align 4
  %address.addr = alloca i32*, align 8
  store i32 %tonode, i32* %tonode.addr, align 4
  store i32* %address, i32** %address.addr, align 8
  %call = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([27 x i8]* @.str9427, i32 0, i32 0))
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @receive_integer(i32* %address) #0 {
entry:
  %address.addr = alloca i32*, align 8
  store i32* %address, i32** %address.addr, align 8
  %call = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([27 x i8]* @.str9427, i32 0, i32 0))
  ret void
}

; Function Attrs: nounwind uwtable
define internal double @dclock() #0 {
entry:
  %fine = alloca i64, align 8
  store i64 0, i64* %fine, align 8
  %0 = load i64* %fine, align 8
  %conv = sitofp i64 %0 to double
  %div = fdiv double %conv, 1.000000e+06
  ret double %div
}

; Function Attrs: nounwind uwtable
define internal void @time_stamp(i8* %msg) #0 {
entry:
  %msg.addr = alloca i8*, align 8
  %time_stamp = alloca i64, align 8
  store i8* %msg, i8** %msg.addr, align 8
  %call = call i32 @mynode()
  %cmp = icmp eq i32 %call, 0
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %call1 = call i64 @time(i64* %time_stamp) #2
  %0 = load i8** %msg.addr, align 8
  %call2 = call i8* @ctime(i64* %time_stamp) #2
  %call3 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([8 x i8]* @.str10428, i32 0, i32 0), i8* %0, i8* %call2)
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @normal_exit(i32 %status) #0 {
entry:
  %status.addr = alloca i32, align 4
  store i32 %status, i32* %status.addr, align 4
  %0 = load i32* %status.addr, align 4
  call void @exit(i32 %0) #7
  unreachable

return:                                           ; No predecessors!
  ret void
}

; Function Attrs: nounwind uwtable
define internal %struct._IO_FILE* @g_open(i8* %filename, i8* %mode) #0 {
entry:
  %retval = alloca %struct._IO_FILE*, align 8
  %filename.addr = alloca i8*, align 8
  %mode.addr = alloca i8*, align 8
  %fd = alloca i32, align 4
  %oflg = alloca i32, align 4
  %fp = alloca i32*, align 8
  store i8* %filename, i8** %filename.addr, align 8
  store i8* %mode, i8** %mode.addr, align 8
  %0 = load i8** %mode.addr, align 8
  %arrayidx = getelementptr inbounds i8* %0, i64 0
  %1 = load i8* %arrayidx, align 1
  %conv = sext i8 %1 to i32
  %cmp = icmp eq i32 %conv, 97
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  %2 = load i32* @this_node, align 4
  %call = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([48 x i8]* @.str491, i32 0, i32 0), i32 %2)
  store %struct._IO_FILE* null, %struct._IO_FILE** %retval
  br label %return

if.else:                                          ; preds = %entry
  %3 = load i8** %mode.addr, align 8
  %arrayidx2 = getelementptr inbounds i8* %3, i64 0
  %4 = load i8* %arrayidx2, align 1
  %conv3 = sext i8 %4 to i32
  %cmp4 = icmp eq i32 %conv3, 119
  br i1 %cmp4, label %if.then6, label %if.else7

if.then6:                                         ; preds = %if.else
  store i32 65, i32* %oflg, align 4
  br label %if.end20

if.else7:                                         ; preds = %if.else
  %5 = load i8** %mode.addr, align 8
  %arrayidx8 = getelementptr inbounds i8* %5, i64 0
  %6 = load i8* %arrayidx8, align 1
  %conv9 = sext i8 %6 to i32
  %cmp10 = icmp eq i32 %conv9, 114
  br i1 %cmp10, label %if.then12, label %if.else17

if.then12:                                        ; preds = %if.else7
  store i32 0, i32* %oflg, align 4
  %7 = load i8** %mode.addr, align 8
  %call13 = call i8* @strchr(i8* %7, i32 43) #9
  %cmp14 = icmp ne i8* %call13, null
  br i1 %cmp14, label %if.then16, label %if.end

if.then16:                                        ; preds = %if.then12
  store i32 2, i32* %oflg, align 4
  br label %if.end

if.end:                                           ; preds = %if.then16, %if.then12
  br label %if.end19

if.else17:                                        ; preds = %if.else7
  %8 = load i32* @this_node, align 4
  %9 = load i8** %mode.addr, align 8
  %call18 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([41 x i8]* @.str1492, i32 0, i32 0), i32 %8, i8* %9)
  store %struct._IO_FILE* null, %struct._IO_FILE** %retval
  br label %return

if.end19:                                         ; preds = %if.end
  br label %if.end20

if.end20:                                         ; preds = %if.end19, %if.then6
  br label %if.end21

if.end21:                                         ; preds = %if.end20
  %10 = load i8** %filename.addr, align 8
  %11 = load i32* %oflg, align 4
  %call22 = call i32 (i8*, i32, ...)* @open(i8* %10, i32 %11, i32 420)
  store i32 %call22, i32* %fd, align 4
  %cmp23 = icmp eq i32 %call22, -1
  br i1 %cmp23, label %if.then25, label %if.end28

if.then25:                                        ; preds = %if.end21
  %12 = load i32* @this_node, align 4
  %call26 = call i32* @__errno_location() #8
  %13 = load i32* %call26, align 4
  %14 = load i8** %filename.addr, align 8
  %call27 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([37 x i8]* @.str2493, i32 0, i32 0), i32 %12, i32 %13, i8* %14)
  store %struct._IO_FILE* null, %struct._IO_FILE** %retval
  br label %return

if.end28:                                         ; preds = %if.end21
  %call29 = call noalias i8* @calloc(i64 1, i64 4) #2
  %15 = bitcast i8* %call29 to i32*
  store i32* %15, i32** %fp, align 8
  %16 = load i32** %fp, align 8
  %cmp30 = icmp eq i32* %16, null
  br i1 %cmp30, label %if.then32, label %if.end35

if.then32:                                        ; preds = %if.end28
  %17 = load i32* @this_node, align 4
  %call33 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([33 x i8]* @.str3494, i32 0, i32 0), i32 %17)
  %18 = load %struct._IO_FILE** @stdout, align 8
  %call34 = call i32 @fflush(%struct._IO_FILE* %18)
  call void @terminate(i32 1)
  br label %if.end35

if.end35:                                         ; preds = %if.then32, %if.end28
  %19 = load i32* %fd, align 4
  %20 = load i32** %fp, align 8
  store i32 %19, i32* %20, align 4
  %21 = load i32** %fp, align 8
  %22 = bitcast i32* %21 to %struct._IO_FILE*
  store %struct._IO_FILE* %22, %struct._IO_FILE** %retval
  br label %return

return:                                           ; preds = %if.end35, %if.then25, %if.else17, %if.then
  %23 = load %struct._IO_FILE** %retval
  ret %struct._IO_FILE* %23
}

declare i32 @open(i8*, i32, ...) #1

; Function Attrs: nounwind uwtable
define internal i32 @g_seek(%struct._IO_FILE* %stream, i64 %offset, i32 %whence) #0 {
entry:
  %stream.addr = alloca %struct._IO_FILE*, align 8
  %offset.addr = alloca i64, align 8
  %whence.addr = alloca i32, align 4
  %fd = alloca i32, align 4
  store %struct._IO_FILE* %stream, %struct._IO_FILE** %stream.addr, align 8
  store i64 %offset, i64* %offset.addr, align 8
  store i32 %whence, i32* %whence.addr, align 4
  %0 = load %struct._IO_FILE** %stream.addr, align 8
  %1 = bitcast %struct._IO_FILE* %0 to i32*
  %2 = load i32* %1, align 4
  store i32 %2, i32* %fd, align 4
  %3 = load i32* %fd, align 4
  %4 = load i64* %offset.addr, align 8
  %5 = load i32* %whence.addr, align 4
  %call = call i64 @lseek(i32 %3, i64 %4, i32 %5) #2
  %conv = trunc i64 %call to i32
  ret i32 %conv
}

; Function Attrs: nounwind
declare i64 @lseek(i32, i64, i32) #3

; Function Attrs: nounwind uwtable
define internal i64 @g_write(i8* %ptr, i64 %size, i64 %nmemb, %struct._IO_FILE* %stream) #0 {
entry:
  %ptr.addr = alloca i8*, align 8
  %size.addr = alloca i64, align 8
  %nmemb.addr = alloca i64, align 8
  %stream.addr = alloca %struct._IO_FILE*, align 8
  %fd = alloca i32, align 4
  store i8* %ptr, i8** %ptr.addr, align 8
  store i64 %size, i64* %size.addr, align 8
  store i64 %nmemb, i64* %nmemb.addr, align 8
  store %struct._IO_FILE* %stream, %struct._IO_FILE** %stream.addr, align 8
  %0 = load %struct._IO_FILE** %stream.addr, align 8
  %1 = bitcast %struct._IO_FILE* %0 to i32*
  %2 = load i32* %1, align 4
  store i32 %2, i32* %fd, align 4
  %3 = load i32* %fd, align 4
  %4 = load i8** %ptr.addr, align 8
  %5 = load i64* %size.addr, align 8
  %6 = load i64* %nmemb.addr, align 8
  %mul = mul i64 %5, %6
  %conv = trunc i64 %mul to i32
  %conv1 = sext i32 %conv to i64
  %call = call i64 @write(i32 %3, i8* %4, i64 %conv1)
  %7 = load i64* %size.addr, align 8
  %div = udiv i64 %call, %7
  ret i64 %div
}

declare i64 @write(i32, i8*, i64) #1

; Function Attrs: nounwind uwtable
define internal i64 @g_read(i8* %ptr, i64 %size, i64 %nmemb, %struct._IO_FILE* %stream) #0 {
entry:
  %ptr.addr = alloca i8*, align 8
  %size.addr = alloca i64, align 8
  %nmemb.addr = alloca i64, align 8
  %stream.addr = alloca %struct._IO_FILE*, align 8
  %fd = alloca i32, align 4
  store i8* %ptr, i8** %ptr.addr, align 8
  store i64 %size, i64* %size.addr, align 8
  store i64 %nmemb, i64* %nmemb.addr, align 8
  store %struct._IO_FILE* %stream, %struct._IO_FILE** %stream.addr, align 8
  %0 = load %struct._IO_FILE** %stream.addr, align 8
  %1 = bitcast %struct._IO_FILE* %0 to i32*
  %2 = load i32* %1, align 4
  store i32 %2, i32* %fd, align 4
  %3 = load i32* %fd, align 4
  %4 = load i8** %ptr.addr, align 8
  %5 = load i64* %size.addr, align 8
  %6 = load i64* %nmemb.addr, align 8
  %mul = mul i64 %5, %6
  %conv = trunc i64 %mul to i32
  %conv1 = sext i32 %conv to i64
  %call = call i64 @read(i32 %3, i8* %4, i64 %conv1)
  %7 = load i64* %size.addr, align 8
  %div = udiv i64 %call, %7
  ret i64 %div
}

declare i64 @read(i32, i8*, i64) #1

; Function Attrs: nounwind uwtable
define internal i32 @g_close(%struct._IO_FILE* %stream) #0 {
entry:
  %stream.addr = alloca %struct._IO_FILE*, align 8
  %fd = alloca i32, align 4
  %status = alloca i32, align 4
  store %struct._IO_FILE* %stream, %struct._IO_FILE** %stream.addr, align 8
  %0 = load %struct._IO_FILE** %stream.addr, align 8
  %1 = bitcast %struct._IO_FILE* %0 to i32*
  %2 = load i32* %1, align 4
  store i32 %2, i32* %fd, align 4
  %3 = load i32* %fd, align 4
  %call = call i32 @close(i32 %3)
  store i32 %call, i32* %status, align 4
  %4 = load %struct._IO_FILE** %stream.addr, align 8
  %5 = bitcast %struct._IO_FILE* %4 to i8*
  call void @free(i8* %5) #2
  %6 = load i32* %status, align 4
  ret i32 %6
}

declare i32 @close(i32) #1

attributes #0 = { nounwind uwtable "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind }
attributes #3 = { nounwind "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { noreturn nounwind "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind readnone "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind readonly "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { noreturn nounwind }
attributes #8 = { nounwind readnone }
attributes #9 = { nounwind readonly }

!llvm.ident = !{!0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0}

!0 = metadata !{metadata !"clang version 3.5.0 (tags/RELEASE_350/final)"}
