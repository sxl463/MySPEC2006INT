; ModuleID = 'sjeng-softbound.bc'
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.ECacheType = type { i32, i32, i32 }
%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, i8*, i8*, i8*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type { %struct._IO_marker*, %struct._IO_FILE*, i32 }
%struct.move_s = type { i32, i32, i32, i32, i32, i32 }
%struct.see_data = type { i32, i32 }
%struct.move_x = type { i32, i32, i32, i32 }
%struct.TType = type { i8, i8, i8, i8, i16, i32, i32, i32 }
%struct.QTType = type { i8, i8, i16, i32, i32, i32 }
%struct.node = type { i8, i8, i8, i8, i32, i32, %struct.node**, %struct.node*, %struct.move_s }

@calc_attackers.rook_o = internal constant [4 x i32] [i32 12, i32 -12, i32 1, i32 -1], align 16
@calc_attackers.bishop_o = internal constant [4 x i32] [i32 11, i32 -11, i32 13, i32 -13], align 16
@calc_attackers.knight_o = internal constant [8 x i32] [i32 10, i32 -10, i32 14, i32 -14, i32 23, i32 -23, i32 25, i32 -25], align 16
@is_attacked.rook_o = internal constant [4 x i32] [i32 12, i32 -12, i32 1, i32 -1], align 16
@is_attacked.bishop_o = internal constant [4 x i32] [i32 11, i32 -11, i32 13, i32 -13], align 16
@is_attacked.knight_o = internal constant [8 x i32] [i32 10, i32 -10, i32 14, i32 -14, i32 23, i32 -23, i32 25, i32 -25], align 16
@nk_attacked.rook_o = internal constant [4 x i32] [i32 12, i32 -12, i32 1, i32 -1], align 16
@nk_attacked.bishop_o = internal constant [4 x i32] [i32 11, i32 -11, i32 13, i32 -13], align 16
@nk_attacked.knight_o = internal constant [8 x i32] [i32 10, i32 -10, i32 14, i32 -14, i32 23, i32 -23, i32 25, i32 -25], align 16
@holding = internal global [2 x [16 x i32]] zeroinitializer, align 16
@hold_hash = internal global i32 0, align 4
@white_hand_eval = internal global i32 0, align 4
@black_hand_eval = internal global i32 0, align 4
@num_holding = internal global [2 x i32] zeroinitializer, align 4
@userealholdings = internal global i32 0, align 4
@realholdings = internal global [255 x i8] zeroinitializer, align 16
@SwitchColor.t = private unnamed_addr constant [13 x i32] [i32 0, i32 2, i32 1, i32 4, i32 3, i32 0, i32 0, i32 8, i32 7, i32 10, i32 9, i32 12, i32 11], align 16
@SwitchPromoted.t = private unnamed_addr constant [13 x i32] [i32 0, i32 2, i32 1, i32 2, i32 1, i32 0, i32 0, i32 2, i32 1, i32 2, i32 1, i32 2, i32 1], align 16
@.str = private unnamed_addr constant [36 x i8] c"WP: %d WR: %d WB: %d WN: %d WQ: %d\0A\00", align 1
@.str1 = private unnamed_addr constant [36 x i8] c"BP: %d BR: %d BB: %d BN: %d BQ: %d\0A\00", align 1
@drop_piece = internal global i32 0, align 4
@ECache = internal global %struct.ECacheType* null, align 8
@ECacheProbes = internal global i32 0, align 4
@ECacheHits = internal global i32 0, align 4
@.str2 = private unnamed_addr constant [34 x i8] c"Out of memory allocating ECache.\0A\00", align 1
@setup_epd_line.rankoffsets = internal global [8 x i32] [i32 110, i32 98, i32 86, i32 74, i32 62, i32 50, i32 38, i32 26], align 16
@.str5 = private unnamed_addr constant [3 x i8] c"bm\00", align 1
@.str16 = private unnamed_addr constant [3 x i8] c"am\00", align 1
@.str27 = private unnamed_addr constant [34 x i8] c"No best-move or avoid-move found!\00", align 1
@.str3 = private unnamed_addr constant [25 x i8] c"\0AName of EPD testsuite: \00", align 1
@stdin = external global %struct._IO_FILE*
@.str4 = private unnamed_addr constant [21 x i8] c"\0ATime per move (s): \00", align 1
@.str58 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@.str6 = private unnamed_addr constant [2 x i8] c"r\00", align 1
@stdout = external global %struct._IO_FILE*
@.str7 = private unnamed_addr constant [29 x i8] c"\0ANodes: %i (%0.2f%% qnodes)\0A\00", align 1
@.str8 = private unnamed_addr constant [54 x i8] c"ECacheProbes : %u   ECacheHits : %u   HitRate : %f%%\0A\00", align 1
@.str9 = private unnamed_addr constant [60 x i8] c"TTStores : %u TTProbes : %u   TTHits : %u   HitRate : %f%%\0A\00", align 1
@.str10 = private unnamed_addr constant [51 x i8] c"NTries : %u  NCuts : %u  CutRate : %f%%  TExt: %u\0A\00", align 1
@.str11 = private unnamed_addr constant [61 x i8] c"Check extensions: %u  Razor drops : %u  Razor Material : %u\0A\00", align 1
@.str12 = private unnamed_addr constant [22 x i8] c"Move ordering : %f%%\0A\00", align 1
@.str13 = private unnamed_addr constant [47 x i8] c"Material score: %d  Eval : %d  MaxPosDiff: %d\0A\00", align 1
@.str14 = private unnamed_addr constant [17 x i8] c"Solution found.\0A\00", align 1
@.str15 = private unnamed_addr constant [21 x i8] c"Solution not found.\0A\00", align 1
@.str169 = private unnamed_addr constant [15 x i8] c"Solved: %d/%d\0A\00", align 1
@.str17 = private unnamed_addr constant [9 x i8] c"EPD: %s\0A\00", align 1
@.str18 = private unnamed_addr constant [21 x i8] c"Searching to %d ply\0A\00", align 1
@std_material = internal global [14 x i32] [i32 0, i32 100, i32 -100, i32 310, i32 -310, i32 4000, i32 -4000, i32 500, i32 -500, i32 900, i32 -900, i32 325, i32 -325, i32 0], align 16
@zh_material = internal global [14 x i32] [i32 0, i32 100, i32 -100, i32 210, i32 -210, i32 4000, i32 -4000, i32 250, i32 -250, i32 450, i32 -450, i32 230, i32 -230, i32 0], align 16
@suicide_material = internal global [14 x i32] [i32 0, i32 15, i32 -15, i32 150, i32 -150, i32 500, i32 -500, i32 150, i32 -150, i32 50, i32 -50, i32 0, i32 0, i32 0], align 16
@losers_material = internal global [14 x i32] [i32 0, i32 80, i32 -80, i32 320, i32 -320, i32 1000, i32 -1000, i32 350, i32 -350, i32 400, i32 -400, i32 270, i32 -270, i32 0], align 16
@material = internal global [14 x i32] zeroinitializer, align 16
@Xfile = internal constant [144 x i32] [i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 0, i32 0, i32 0, i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 0, i32 0, i32 0, i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 0, i32 0, i32 0, i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 0, i32 0, i32 0, i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 0, i32 0, i32 0, i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 0, i32 0, i32 0, i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 0, i32 0, i32 0, i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0], align 16
@Xrank = internal constant [144 x i32] [i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 0, i32 0, i32 0, i32 0, i32 2, i32 2, i32 2, i32 2, i32 2, i32 2, i32 2, i32 2, i32 0, i32 0, i32 0, i32 0, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 3, i32 0, i32 0, i32 0, i32 0, i32 4, i32 4, i32 4, i32 4, i32 4, i32 4, i32 4, i32 4, i32 0, i32 0, i32 0, i32 0, i32 5, i32 5, i32 5, i32 5, i32 5, i32 5, i32 5, i32 5, i32 0, i32 0, i32 0, i32 0, i32 6, i32 6, i32 6, i32 6, i32 6, i32 6, i32 6, i32 6, i32 0, i32 0, i32 0, i32 0, i32 7, i32 7, i32 7, i32 7, i32 7, i32 7, i32 7, i32 7, i32 0, i32 0, i32 0, i32 0, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0], align 16
@Xdiagl = internal constant [144 x i32] [i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 0, i32 0, i32 0, i32 0, i32 9, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 0, i32 0, i32 0, i32 0, i32 10, i32 9, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 0, i32 0, i32 0, i32 0, i32 11, i32 10, i32 9, i32 1, i32 2, i32 3, i32 4, i32 5, i32 0, i32 0, i32 0, i32 0, i32 12, i32 11, i32 10, i32 9, i32 1, i32 2, i32 3, i32 4, i32 0, i32 0, i32 0, i32 0, i32 13, i32 12, i32 11, i32 10, i32 9, i32 1, i32 2, i32 3, i32 0, i32 0, i32 0, i32 0, i32 14, i32 13, i32 12, i32 11, i32 10, i32 9, i32 1, i32 2, i32 0, i32 0, i32 0, i32 0, i32 15, i32 14, i32 13, i32 12, i32 11, i32 10, i32 9, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0], align 16
@Xdiagr = internal constant [144 x i32] [i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 15, i32 14, i32 13, i32 12, i32 11, i32 10, i32 9, i32 1, i32 0, i32 0, i32 0, i32 0, i32 14, i32 13, i32 12, i32 11, i32 10, i32 9, i32 1, i32 2, i32 0, i32 0, i32 0, i32 0, i32 13, i32 12, i32 11, i32 10, i32 9, i32 1, i32 2, i32 3, i32 0, i32 0, i32 0, i32 0, i32 12, i32 11, i32 10, i32 9, i32 1, i32 2, i32 3, i32 4, i32 0, i32 0, i32 0, i32 0, i32 11, i32 10, i32 9, i32 1, i32 2, i32 3, i32 4, i32 5, i32 0, i32 0, i32 0, i32 0, i32 10, i32 9, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 0, i32 0, i32 0, i32 0, i32 9, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 0, i32 0, i32 0, i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0], align 16
@sqcolor = internal constant [144 x i32] [i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0], align 16
@pcsqbishop = internal constant [144 x i32] [i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 -5, i32 -5, i32 -10, i32 -5, i32 -5, i32 -10, i32 -5, i32 -5, i32 0, i32 0, i32 0, i32 0, i32 -5, i32 10, i32 5, i32 10, i32 10, i32 5, i32 10, i32 -5, i32 0, i32 0, i32 0, i32 0, i32 -5, i32 5, i32 6, i32 15, i32 15, i32 6, i32 5, i32 -5, i32 0, i32 0, i32 0, i32 0, i32 -5, i32 3, i32 15, i32 10, i32 10, i32 15, i32 3, i32 -5, i32 0, i32 0, i32 0, i32 0, i32 -5, i32 3, i32 15, i32 10, i32 10, i32 15, i32 3, i32 -5, i32 0, i32 0, i32 0, i32 0, i32 -5, i32 5, i32 6, i32 15, i32 15, i32 6, i32 5, i32 -5, i32 0, i32 0, i32 0, i32 0, i32 -5, i32 10, i32 5, i32 10, i32 10, i32 5, i32 10, i32 -5, i32 0, i32 0, i32 0, i32 0, i32 -5, i32 -5, i32 -10, i32 -5, i32 -5, i32 -10, i32 -5, i32 -5, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0], align 16
@black_knight = internal constant [144 x i32] [i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 -20, i32 -10, i32 -10, i32 -10, i32 -10, i32 -10, i32 -10, i32 -20, i32 0, i32 0, i32 0, i32 0, i32 -10, i32 15, i32 25, i32 25, i32 25, i32 25, i32 15, i32 -10, i32 0, i32 0, i32 0, i32 0, i32 -10, i32 15, i32 25, i32 35, i32 35, i32 35, i32 15, i32 -10, i32 0, i32 0, i32 0, i32 0, i32 -10, i32 10, i32 25, i32 20, i32 25, i32 25, i32 10, i32 -10, i32 0, i32 0, i32 0, i32 0, i32 -10, i32 0, i32 20, i32 20, i32 20, i32 20, i32 0, i32 -10, i32 0, i32 0, i32 0, i32 0, i32 -10, i32 0, i32 15, i32 15, i32 15, i32 15, i32 0, i32 -10, i32 0, i32 0, i32 0, i32 0, i32 -10, i32 0, i32 0, i32 3, i32 3, i32 0, i32 0, i32 -10, i32 0, i32 0, i32 0, i32 0, i32 -20, i32 -35, i32 -10, i32 -10, i32 -10, i32 -10, i32 -35, i32 -20, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0], align 16
@white_knight = internal constant [144 x i32] [i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 -20, i32 -35, i32 -10, i32 -10, i32 -10, i32 -10, i32 -35, i32 -20, i32 0, i32 0, i32 0, i32 0, i32 -10, i32 0, i32 0, i32 3, i32 3, i32 0, i32 0, i32 -10, i32 0, i32 0, i32 0, i32 0, i32 -10, i32 0, i32 15, i32 15, i32 15, i32 15, i32 0, i32 -10, i32 0, i32 0, i32 0, i32 0, i32 -10, i32 0, i32 20, i32 20, i32 20, i32 20, i32 0, i32 -10, i32 0, i32 0, i32 0, i32 0, i32 -10, i32 10, i32 25, i32 20, i32 25, i32 25, i32 10, i32 -10, i32 0, i32 0, i32 0, i32 0, i32 -10, i32 15, i32 25, i32 35, i32 35, i32 35, i32 15, i32 -10, i32 0, i32 0, i32 0, i32 0, i32 -10, i32 15, i32 25, i32 25, i32 25, i32 25, i32 15, i32 -10, i32 0, i32 0, i32 0, i32 0, i32 -20, i32 -10, i32 -10, i32 -10, i32 -10, i32 -10, i32 -10, i32 -20, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0], align 16
@white_pawn = internal constant [144 x i32] [i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 25, i32 25, i32 35, i32 5, i32 5, i32 50, i32 45, i32 30, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 7, i32 7, i32 5, i32 5, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 14, i32 14, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 10, i32 20, i32 20, i32 10, i32 5, i32 5, i32 0, i32 0, i32 0, i32 0, i32 12, i32 18, i32 18, i32 27, i32 27, i32 18, i32 18, i32 18, i32 0, i32 0, i32 0, i32 0, i32 25, i32 30, i32 30, i32 35, i32 35, i32 35, i32 30, i32 25, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0], align 16
@black_pawn = internal constant [144 x i32] [i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 30, i32 30, i32 30, i32 35, i32 35, i32 35, i32 30, i32 25, i32 0, i32 0, i32 0, i32 0, i32 12, i32 18, i32 18, i32 27, i32 27, i32 18, i32 18, i32 18, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 10, i32 20, i32 20, i32 10, i32 5, i32 5, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 14, i32 14, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 7, i32 7, i32 5, i32 5, i32 0, i32 0, i32 0, i32 0, i32 0, i32 25, i32 25, i32 35, i32 5, i32 5, i32 50, i32 45, i32 30, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0], align 16
@white_king = internal constant [144 x i32] [i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 -100, i32 7, i32 4, i32 0, i32 10, i32 4, i32 7, i32 -100, i32 0, i32 0, i32 0, i32 0, i32 -250, i32 -200, i32 -150, i32 -100, i32 -100, i32 -150, i32 -200, i32 -250, i32 0, i32 0, i32 0, i32 0, i32 -350, i32 -300, i32 -300, i32 -250, i32 -250, i32 -300, i32 -300, i32 -350, i32 0, i32 0, i32 0, i32 0, i32 -400, i32 -400, i32 -400, i32 -350, i32 -350, i32 -400, i32 -400, i32 -400, i32 0, i32 0, i32 0, i32 0, i32 -450, i32 -450, i32 -450, i32 -450, i32 -450, i32 -450, i32 -450, i32 -450, i32 0, i32 0, i32 0, i32 0, i32 -500, i32 -500, i32 -500, i32 -500, i32 -500, i32 -500, i32 -500, i32 -500, i32 0, i32 0, i32 0, i32 0, i32 -500, i32 -500, i32 -500, i32 -500, i32 -500, i32 -500, i32 -500, i32 -500, i32 0, i32 0, i32 0, i32 0, i32 -500, i32 -500, i32 -500, i32 -500, i32 -500, i32 -500, i32 -500, i32 -500, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0], align 16
@black_king = internal constant [144 x i32] [i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 -500, i32 -500, i32 -500, i32 -500, i32 -500, i32 -500, i32 -500, i32 -500, i32 0, i32 0, i32 0, i32 0, i32 -500, i32 -500, i32 -500, i32 -500, i32 -500, i32 -500, i32 -500, i32 -500, i32 0, i32 0, i32 0, i32 0, i32 -500, i32 -500, i32 -500, i32 -500, i32 -500, i32 -500, i32 -500, i32 -500, i32 0, i32 0, i32 0, i32 0, i32 -450, i32 -450, i32 -450, i32 -450, i32 -450, i32 -450, i32 -450, i32 -450, i32 0, i32 0, i32 0, i32 0, i32 -400, i32 -400, i32 -400, i32 -350, i32 -350, i32 -400, i32 -400, i32 -400, i32 0, i32 0, i32 0, i32 0, i32 -350, i32 -300, i32 -300, i32 -250, i32 -250, i32 -300, i32 -300, i32 -350, i32 0, i32 0, i32 0, i32 0, i32 -250, i32 -200, i32 -150, i32 -100, i32 -100, i32 -150, i32 -200, i32 -250, i32 0, i32 0, i32 0, i32 0, i32 -100, i32 7, i32 4, i32 0, i32 10, i32 4, i32 7, i32 -100, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0], align 16
@black_queen = internal constant [144 x i32] [i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 5, i32 5, i32 10, i32 10, i32 5, i32 5, i32 5, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, i32 3, i32 3, i32 3, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0, i32 -30, i32 -30, i32 -30, i32 -30, i32 -30, i32 -30, i32 -30, i32 -30, i32 0, i32 0, i32 0, i32 0, i32 -60, i32 -40, i32 -40, i32 -60, i32 -60, i32 -40, i32 -40, i32 -60, i32 0, i32 0, i32 0, i32 0, i32 -40, i32 -40, i32 -40, i32 -40, i32 -40, i32 -40, i32 -40, i32 -40, i32 0, i32 0, i32 0, i32 0, i32 -15, i32 -15, i32 -15, i32 -10, i32 -10, i32 -15, i32 -15, i32 -15, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 7, i32 10, i32 5, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0], align 16
@white_queen = internal constant [144 x i32] [i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 7, i32 10, i32 5, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 -15, i32 -15, i32 -15, i32 -10, i32 -10, i32 -15, i32 -15, i32 -15, i32 0, i32 0, i32 0, i32 0, i32 -40, i32 -40, i32 -40, i32 -40, i32 -40, i32 -40, i32 -40, i32 -40, i32 0, i32 0, i32 0, i32 0, i32 -60, i32 -40, i32 -40, i32 -60, i32 -60, i32 -40, i32 -40, i32 -60, i32 0, i32 0, i32 0, i32 0, i32 -30, i32 -30, i32 -30, i32 -30, i32 -30, i32 -30, i32 -30, i32 -30, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, i32 3, i32 3, i32 3, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 5, i32 5, i32 10, i32 10, i32 5, i32 5, i32 5, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0], align 16
@black_rook = internal constant [144 x i32] [i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 10, i32 15, i32 20, i32 25, i32 25, i32 20, i32 15, i32 10, i32 0, i32 0, i32 0, i32 0, i32 0, i32 10, i32 15, i32 20, i32 20, i32 15, i32 10, i32 0, i32 0, i32 0, i32 0, i32 0, i32 -20, i32 -20, i32 -20, i32 -20, i32 -20, i32 -20, i32 -20, i32 -20, i32 0, i32 0, i32 0, i32 0, i32 -20, i32 -20, i32 -20, i32 -30, i32 -30, i32 -20, i32 -20, i32 -20, i32 0, i32 0, i32 0, i32 0, i32 -20, i32 -20, i32 -20, i32 -20, i32 -20, i32 -20, i32 -20, i32 -20, i32 0, i32 0, i32 0, i32 0, i32 -15, i32 -15, i32 -15, i32 -10, i32 -10, i32 -15, i32 -15, i32 -15, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 7, i32 10, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, i32 2, i32 2, i32 2, i32 2, i32 2, i32 2, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0], align 16
@white_rook = internal constant [144 x i32] [i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, i32 2, i32 2, i32 2, i32 2, i32 2, i32 2, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 7, i32 10, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 -15, i32 -15, i32 -15, i32 -10, i32 -10, i32 -15, i32 -15, i32 -15, i32 0, i32 0, i32 0, i32 0, i32 -20, i32 -20, i32 -20, i32 -20, i32 -20, i32 -20, i32 -20, i32 -20, i32 0, i32 0, i32 0, i32 0, i32 -20, i32 -20, i32 -20, i32 -30, i32 -30, i32 -20, i32 -20, i32 -20, i32 0, i32 0, i32 0, i32 0, i32 -20, i32 -20, i32 -20, i32 -20, i32 -20, i32 -20, i32 -20, i32 -20, i32 0, i32 0, i32 0, i32 0, i32 0, i32 10, i32 15, i32 20, i32 20, i32 15, i32 10, i32 0, i32 0, i32 0, i32 0, i32 0, i32 10, i32 15, i32 20, i32 25, i32 25, i32 20, i32 15, i32 10, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0], align 16
@upscale = internal constant [64 x i32] [i32 26, i32 27, i32 28, i32 29, i32 30, i32 31, i32 32, i32 33, i32 38, i32 39, i32 40, i32 41, i32 42, i32 43, i32 44, i32 45, i32 50, i32 51, i32 52, i32 53, i32 54, i32 55, i32 56, i32 57, i32 62, i32 63, i32 64, i32 65, i32 66, i32 67, i32 68, i32 69, i32 74, i32 75, i32 76, i32 77, i32 78, i32 79, i32 80, i32 81, i32 86, i32 87, i32 88, i32 89, i32 90, i32 91, i32 92, i32 93, i32 98, i32 99, i32 100, i32 101, i32 102, i32 103, i32 104, i32 105, i32 110, i32 111, i32 112, i32 113, i32 114, i32 115, i32 116, i32 117], align 16
@pre_p_tropism = internal global [9 x i32] [i32 9999, i32 40, i32 20, i32 10, i32 3, i32 1, i32 1, i32 0, i32 9999], align 16
@pre_r_tropism = internal global [9 x i32] [i32 9999, i32 50, i32 40, i32 15, i32 5, i32 1, i32 1, i32 0, i32 9999], align 16
@pre_n_tropism = internal global [9 x i32] [i32 9999, i32 50, i32 70, i32 35, i32 10, i32 2, i32 1, i32 0, i32 9999], align 16
@pre_q_tropism = internal global [9 x i32] [i32 9999, i32 100, i32 60, i32 20, i32 5, i32 2, i32 0, i32 0, i32 9999], align 16
@pre_b_tropism = internal global [9 x i32] [i32 9999, i32 50, i32 25, i32 15, i32 5, i32 2, i32 2, i32 2, i32 9999], align 16
@ksafety_scaled = internal global [15 x [9 x i32]] [[9 x i32] [i32 -5, i32 5, i32 10, i32 15, i32 50, i32 80, i32 150, i32 150, i32 150], [9 x i32] [i32 -5, i32 15, i32 20, i32 25, i32 70, i32 150, i32 200, i32 200, i32 200], [9 x i32] [i32 -5, i32 15, i32 30, i32 30, i32 100, i32 200, i32 300, i32 300, i32 300], [9 x i32] [i32 -10, i32 20, i32 40, i32 40, i32 100, i32 200, i32 300, i32 300, i32 400], [9 x i32] [i32 -10, i32 30, i32 50, i32 80, i32 150, i32 300, i32 400, i32 400, i32 500], [9 x i32] [i32 -10, i32 35, i32 60, i32 100, i32 200, i32 250, i32 400, i32 400, i32 500], [9 x i32] [i32 -10, i32 40, i32 70, i32 110, i32 210, i32 300, i32 500, i32 500, i32 600], [9 x i32] [i32 -10, i32 45, i32 75, i32 125, i32 215, i32 300, i32 500, i32 600, i32 700], [9 x i32] [i32 -10, i32 60, i32 90, i32 130, i32 240, i32 350, i32 500, i32 600, i32 700], [9 x i32] [i32 -15, i32 60, i32 95, i32 145, i32 260, i32 350, i32 500, i32 600, i32 700], [9 x i32] [i32 -15, i32 60, i32 100, i32 150, i32 270, i32 350, i32 500, i32 600, i32 700], [9 x i32] [i32 -15, i32 60, i32 110, i32 160, i32 280, i32 400, i32 600, i32 700, i32 800], [9 x i32] [i32 -20, i32 70, i32 115, i32 165, i32 290, i32 400, i32 600, i32 700, i32 800], [9 x i32] [i32 -20, i32 80, i32 120, i32 170, i32 300, i32 450, i32 700, i32 800, i32 900], [9 x i32] [i32 -20, i32 80, i32 125, i32 175, i32 310, i32 450, i32 700, i32 800, i32 900]], align 16
@p_tropism = internal global [144 x [144 x i8]] zeroinitializer, align 16
@b_tropism = internal global [144 x [144 x i8]] zeroinitializer, align 16
@n_tropism = internal global [144 x [144 x i8]] zeroinitializer, align 16
@r_tropism = internal global [144 x [144 x i8]] zeroinitializer, align 16
@q_tropism = internal global [144 x [144 x i8]] zeroinitializer, align 16
@Material = internal global i32 0, align 4
@lcentral = internal global [144 x i32] [i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 -20, i32 -15, i32 -15, i32 -15, i32 -15, i32 -15, i32 -15, i32 -20, i32 0, i32 0, i32 0, i32 0, i32 -15, i32 0, i32 3, i32 5, i32 5, i32 3, i32 0, i32 -15, i32 0, i32 0, i32 0, i32 0, i32 -15, i32 0, i32 15, i32 15, i32 15, i32 15, i32 0, i32 -15, i32 0, i32 0, i32 0, i32 0, i32 -15, i32 0, i32 15, i32 30, i32 30, i32 15, i32 0, i32 -15, i32 0, i32 0, i32 0, i32 0, i32 -15, i32 0, i32 15, i32 30, i32 30, i32 15, i32 0, i32 -15, i32 0, i32 0, i32 0, i32 0, i32 -15, i32 0, i32 15, i32 15, i32 15, i32 15, i32 0, i32 -15, i32 0, i32 0, i32 0, i32 0, i32 -15, i32 0, i32 3, i32 5, i32 5, i32 3, i32 0, i32 -15, i32 0, i32 0, i32 0, i32 0, i32 -20, i32 -15, i32 -15, i32 -15, i32 -15, i32 -15, i32 -15, i32 -20, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0], align 16
@l_king_mobility.king_o = internal constant [8 x i32] [i32 13, i32 12, i32 11, i32 1, i32 -1, i32 -11, i32 -12, i32 -13], align 16
@l_knight_mobility.knight_o = internal constant [8 x i32] [i32 10, i32 -10, i32 14, i32 -14, i32 23, i32 -23, i32 25, i32 -25], align 16
@kingcap = internal global i32 0, align 4
@numb_moves = internal global i32 0, align 4
@genfor = internal global %struct.move_s* null, align 8
@fcaptures = internal global i32 0, align 4
@gfrom = internal global i32 0, align 4
@f_in_check.knight_o = internal constant [8 x i32] [i32 10, i32 -10, i32 14, i32 -14, i32 23, i32 -23, i32 25, i32 -25], align 16
@extended_in_check.knight_o = internal constant [8 x i32] [i32 10, i32 -10, i32 14, i32 -14, i32 23, i32 -23, i32 25, i32 -25], align 16
@total_moves = internal global i32 0, align 4
@total_movegens = internal global i32 0, align 4
@std_p_tropism = internal constant [8 x i32] [i32 9999, i32 15, i32 10, i32 7, i32 2, i32 0, i32 0, i32 0], align 16
@std_own_p_tropism = internal constant [8 x i32] [i32 9999, i32 30, i32 10, i32 2, i32 0, i32 0, i32 0, i32 0], align 16
@std_r_tropism = internal constant [16 x i32] [i32 9999, i32 0, i32 15, i32 5, i32 2, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0], align 16
@std_n_tropism = internal constant [8 x i32] [i32 9999, i32 14, i32 9, i32 6, i32 1, i32 0, i32 0, i32 0], align 16
@std_q_tropism = internal constant [8 x i32] [i32 9999, i32 200, i32 50, i32 15, i32 3, i32 2, i32 1, i32 0], align 16
@std_b_tropism = internal constant [8 x i32] [i32 9999, i32 12, i32 7, i32 5, i32 0, i32 0, i32 0, i32 0], align 16
@king_locs = internal global [2 x i32] zeroinitializer, align 4
@distance = internal global [144 x [144 x i32]] zeroinitializer, align 16
@Rook.square_d1 = internal constant [2 x i32] [i32 29, i32 113], align 4
@rookdistance = internal global [144 x [144 x i32]] zeroinitializer, align 16
@wmat = internal global i32 0, align 4
@bmat = internal global i32 0, align 4
@sbishop = internal global [144 x i32] [i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 -2, i32 -2, i32 -2, i32 -2, i32 -2, i32 -2, i32 -2, i32 -2, i32 0, i32 0, i32 0, i32 0, i32 -2, i32 8, i32 5, i32 5, i32 5, i32 5, i32 8, i32 -2, i32 0, i32 0, i32 0, i32 0, i32 -2, i32 3, i32 3, i32 5, i32 5, i32 3, i32 3, i32 -2, i32 0, i32 0, i32 0, i32 0, i32 -2, i32 2, i32 5, i32 4, i32 4, i32 5, i32 2, i32 -2, i32 0, i32 0, i32 0, i32 0, i32 -2, i32 2, i32 5, i32 4, i32 4, i32 5, i32 2, i32 -2, i32 0, i32 0, i32 0, i32 0, i32 -2, i32 3, i32 3, i32 5, i32 5, i32 3, i32 3, i32 -2, i32 0, i32 0, i32 0, i32 0, i32 -2, i32 8, i32 5, i32 5, i32 5, i32 5, i32 8, i32 -2, i32 0, i32 0, i32 0, i32 0, i32 -2, i32 -2, i32 -2, i32 -2, i32 -2, i32 -2, i32 -2, i32 -2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0], align 16
@sknight = internal global [144 x i32] [i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 -20, i32 -10, i32 -10, i32 -10, i32 -10, i32 -10, i32 -10, i32 -20, i32 0, i32 0, i32 0, i32 0, i32 -10, i32 0, i32 0, i32 3, i32 3, i32 0, i32 0, i32 -10, i32 0, i32 0, i32 0, i32 0, i32 -10, i32 0, i32 5, i32 5, i32 5, i32 5, i32 0, i32 -10, i32 0, i32 0, i32 0, i32 0, i32 -10, i32 0, i32 5, i32 10, i32 10, i32 5, i32 0, i32 -10, i32 0, i32 0, i32 0, i32 0, i32 -10, i32 0, i32 5, i32 10, i32 10, i32 5, i32 0, i32 -10, i32 0, i32 0, i32 0, i32 0, i32 -10, i32 0, i32 5, i32 5, i32 5, i32 5, i32 0, i32 -10, i32 0, i32 0, i32 0, i32 0, i32 -10, i32 0, i32 0, i32 3, i32 3, i32 0, i32 0, i32 -10, i32 0, i32 0, i32 0, i32 0, i32 -20, i32 -10, i32 -10, i32 -10, i32 -10, i32 -10, i32 -10, i32 -20, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0], align 16
@.str22 = private unnamed_addr constant [35 x i8] c"Illegal piece detected sq=%i c=%i\0A\00", align 1
@maxposdiff = internal global i32 0, align 4
@evalRoutines = internal global [7 x i32 (i32, i32)*] [i32 (i32, i32)* @ErrorIt, i32 (i32, i32)* @Pawn, i32 (i32, i32)* @Knight, i32 (i32, i32)* @King, i32 (i32, i32)* @Rook, i32 (i32, i32)* @Queen, i32 (i32, i32)* @Bishop], align 16
@swhite_pawn = internal global [144 x i32] [i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 2, i32 3, i32 10, i32 10, i32 3, i32 2, i32 1, i32 0, i32 0, i32 0, i32 0, i32 2, i32 4, i32 6, i32 12, i32 12, i32 6, i32 4, i32 2, i32 0, i32 0, i32 0, i32 0, i32 3, i32 6, i32 9, i32 14, i32 14, i32 9, i32 6, i32 3, i32 0, i32 0, i32 0, i32 0, i32 10, i32 12, i32 14, i32 16, i32 16, i32 14, i32 12, i32 10, i32 0, i32 0, i32 0, i32 0, i32 20, i32 22, i32 24, i32 26, i32 26, i32 24, i32 22, i32 20, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0], align 16
@sblack_pawn = internal global [144 x i32] [i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 20, i32 22, i32 24, i32 26, i32 26, i32 24, i32 22, i32 20, i32 0, i32 0, i32 0, i32 0, i32 10, i32 12, i32 14, i32 16, i32 16, i32 14, i32 12, i32 10, i32 0, i32 0, i32 0, i32 0, i32 3, i32 6, i32 9, i32 14, i32 14, i32 9, i32 6, i32 3, i32 0, i32 0, i32 0, i32 0, i32 2, i32 4, i32 6, i32 12, i32 12, i32 6, i32 4, i32 2, i32 0, i32 0, i32 0, i32 0, i32 1, i32 2, i32 3, i32 10, i32 10, i32 3, i32 2, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0], align 16
@swhite_king = internal global [144 x i32] [i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, i32 14, i32 0, i32 0, i32 0, i32 9, i32 14, i32 2, i32 0, i32 0, i32 0, i32 0, i32 -3, i32 -5, i32 -6, i32 -6, i32 -6, i32 -6, i32 -5, i32 -3, i32 0, i32 0, i32 0, i32 0, i32 -5, i32 -5, i32 -8, i32 -8, i32 -8, i32 -8, i32 -5, i32 -5, i32 0, i32 0, i32 0, i32 0, i32 -8, i32 -8, i32 -13, i32 -13, i32 -13, i32 -13, i32 -8, i32 -8, i32 0, i32 0, i32 0, i32 0, i32 -13, i32 -13, i32 -21, i32 -21, i32 -21, i32 -21, i32 -13, i32 -13, i32 0, i32 0, i32 0, i32 0, i32 -21, i32 -21, i32 -34, i32 -34, i32 -34, i32 -34, i32 -21, i32 -21, i32 0, i32 0, i32 0, i32 0, i32 -34, i32 -34, i32 -55, i32 -55, i32 -55, i32 -55, i32 -34, i32 -34, i32 0, i32 0, i32 0, i32 0, i32 -55, i32 -55, i32 -89, i32 -89, i32 -89, i32 -89, i32 -55, i32 -55, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0], align 16
@send_king = internal global [144 x i32] [i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 -5, i32 -3, i32 -1, i32 0, i32 0, i32 -1, i32 -3, i32 -5, i32 0, i32 0, i32 0, i32 0, i32 -3, i32 10, i32 10, i32 10, i32 10, i32 10, i32 10, i32 -3, i32 0, i32 0, i32 0, i32 0, i32 -1, i32 10, i32 25, i32 25, i32 25, i32 25, i32 10, i32 -1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 10, i32 25, i32 50, i32 50, i32 25, i32 10, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 10, i32 25, i32 50, i32 50, i32 25, i32 10, i32 0, i32 0, i32 0, i32 0, i32 0, i32 -1, i32 10, i32 25, i32 25, i32 25, i32 25, i32 10, i32 -1, i32 0, i32 0, i32 0, i32 0, i32 -3, i32 10, i32 10, i32 10, i32 10, i32 10, i32 10, i32 -3, i32 0, i32 0, i32 0, i32 0, i32 -5, i32 -3, i32 -1, i32 0, i32 0, i32 -1, i32 -3, i32 -5, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0], align 16
@sblack_king = internal global [144 x i32] [i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 -55, i32 -55, i32 -89, i32 -89, i32 -89, i32 -89, i32 -55, i32 -55, i32 0, i32 0, i32 0, i32 0, i32 -34, i32 -34, i32 -55, i32 -55, i32 -55, i32 -55, i32 -34, i32 -34, i32 0, i32 0, i32 0, i32 0, i32 -21, i32 -21, i32 -34, i32 -34, i32 -34, i32 -34, i32 -21, i32 -21, i32 0, i32 0, i32 0, i32 0, i32 -13, i32 -13, i32 -21, i32 -21, i32 -21, i32 -21, i32 -13, i32 -13, i32 0, i32 0, i32 0, i32 0, i32 -8, i32 -8, i32 -13, i32 -13, i32 -13, i32 -13, i32 -8, i32 -8, i32 0, i32 0, i32 0, i32 0, i32 -5, i32 -5, i32 -8, i32 -8, i32 -8, i32 -8, i32 -5, i32 -5, i32 0, i32 0, i32 0, i32 0, i32 -3, i32 -5, i32 -6, i32 -6, i32 -6, i32 -6, i32 -5, i32 -3, i32 0, i32 0, i32 0, i32 0, i32 2, i32 14, i32 0, i32 0, i32 0, i32 9, i32 14, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0], align 16
@srev_rank = internal constant [9 x i32] [i32 0, i32 8, i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1], align 16
@bishop_mobility.dir = internal constant [4 x i32] [i32 -13, i32 -11, i32 11, i32 13], align 16
@rook_mobility.dir = internal constant [4 x i32] [i32 -1, i32 1, i32 12, i32 -12], align 16
@hand_value = internal global [13 x i32] [i32 0, i32 100, i32 -100, i32 210, i32 -210, i32 0, i32 0, i32 250, i32 -250, i32 450, i32 -450, i32 230, i32 -230], align 16
@std_hand_value = internal global [13 x i32] [i32 0, i32 100, i32 -100, i32 210, i32 -210, i32 0, i32 0, i32 250, i32 -250, i32 450, i32 -450, i32 230, i32 -230], align 16
@.str29 = private unnamed_addr constant [69 x i8] c"tellics ptell Hello! I am Sjeng and hope you enjoy playing with me.\0A\00", align 1
@.str130 = private unnamed_addr constant [76 x i8] c"tellics ptell For help on some commands that I understand, ptell me 'help'\0A\00", align 1
@.str231 = private unnamed_addr constant [3 x i8] c"%s\00", align 1
@.str332 = private unnamed_addr constant [25 x i8] c"tellics set f5 bughouse\0A\00", align 1
@.str433 = private unnamed_addr constant [16 x i8] c"tellics unseek\0A\00", align 1
@.str534 = private unnamed_addr constant [20 x i8] c"tellics set f5 1=1\0A\00", align 1
@HandlePtell.howmuch = private unnamed_addr constant [80 x i8] c"is...uh...what did you say?\0A\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", align 16
@.str635 = private unnamed_addr constant [5 x i8] c"help\00", align 1
@.str736 = private unnamed_addr constant [147 x i8] c"tellics ptell Commands that I understand are : sit, go, fast, slow, abort, flag, +/++/+++/-/--/---{p,n,b,r,q,d,h,trades}, x, dead, formula, help.\0A\00", align 1
@.str837 = private unnamed_addr constant [6 x i8] c"sorry\00", align 1
@.str938 = private unnamed_addr constant [59 x i8] c"tellics ptell Sorry, but I'm not playing a bughouse game.\0A\00", align 1
@.str1039 = private unnamed_addr constant [4 x i8] c"sit\00", align 1
@.str1140 = private unnamed_addr constant [56 x i8] c"tellics ptell Ok, I sit next move. Tell me when to go.\0A\00", align 1
@must_go = internal global i32 0, align 4
@.str1241 = private unnamed_addr constant [3 x i8] c"go\00", align 1
@.str1342 = private unnamed_addr constant [5 x i8] c"move\00", align 1
@.str1443 = private unnamed_addr constant [31 x i8] c"tellics ptell Ok, I'm moving.\0A\00", align 1
@.str1544 = private unnamed_addr constant [5 x i8] c"fast\00", align 1
@.str1645 = private unnamed_addr constant [5 x i8] c"time\00", align 1
@.str1746 = private unnamed_addr constant [35 x i8] c"tellics ptell Ok, I'm going FAST!\0A\00", align 1
@.str1847 = private unnamed_addr constant [5 x i8] c"slow\00", align 1
@.str19 = private unnamed_addr constant [36 x i8] c"tellics ptell Ok, moving normally.\0A\00", align 1
@.str20 = private unnamed_addr constant [6 x i8] c"abort\00", align 1
@.str21 = private unnamed_addr constant [35 x i8] c"tellics ptell Requesting abort...\0A\00", align 1
@.str2248 = private unnamed_addr constant [15 x i8] c"tellics abort\0A\00", align 1
@.str23 = private unnamed_addr constant [5 x i8] c"flag\00", align 1
@.str24 = private unnamed_addr constant [27 x i8] c"tellics ptell Flagging...\0A\00", align 1
@.str25 = private unnamed_addr constant [14 x i8] c"tellics flag\0A\00", align 1
@.str26 = private unnamed_addr constant [2 x i8] c"+\00", align 1
@.str2749 = private unnamed_addr constant [6 x i8] c"trade\00", align 1
@.str28 = private unnamed_addr constant [2 x i8] c"n\00", align 1
@.str2950 = private unnamed_addr constant [2 x i8] c"b\00", align 1
@.str30 = private unnamed_addr constant [2 x i8] c"p\00", align 1
@.str31 = private unnamed_addr constant [2 x i8] c"r\00", align 1
@.str32 = private unnamed_addr constant [2 x i8] c"q\00", align 1
@.str33 = private unnamed_addr constant [2 x i8] c"d\00", align 1
@.str34 = private unnamed_addr constant [2 x i8] c"h\00", align 1
@.str35 = private unnamed_addr constant [35 x i8] c"tellics ptell Ok, trading is GOOD\0A\00", align 1
@.str36 = private unnamed_addr constant [4 x i8] c"+++\00", align 1
@.str37 = private unnamed_addr constant [6 x i8] c"mates\00", align 1
@.str38 = private unnamed_addr constant [3 x i8] c"++\00", align 1
@.str39 = private unnamed_addr constant [49 x i8] c"is VERY good (ptell me 'x' to play normal again)\00", align 1
@.str40 = private unnamed_addr constant [44 x i8] c"is good (ptell me 'x' to play normal again)\00", align 1
@.str41 = private unnamed_addr constant [29 x i8] c"tellics ptell Ok, Knight %s\0A\00", align 1
@.str42 = private unnamed_addr constant [29 x i8] c"tellics ptell Ok, Bishop %s\0A\00", align 1
@.str43 = private unnamed_addr constant [27 x i8] c"tellics ptell Ok, Rook %s\0A\00", align 1
@.str44 = private unnamed_addr constant [28 x i8] c"tellics ptell Ok, Queen %s\0A\00", align 1
@.str45 = private unnamed_addr constant [27 x i8] c"tellics ptell Ok, Pawn %s\0A\00", align 1
@.str46 = private unnamed_addr constant [31 x i8] c"tellics ptell Ok, Diagonal %s\0A\00", align 1
@.str47 = private unnamed_addr constant [28 x i8] c"tellics ptell Ok, Heavy %s\0A\00", align 1
@.str48 = private unnamed_addr constant [2 x i8] c"-\00", align 1
@.str49 = private unnamed_addr constant [34 x i8] c"tellics ptell Ok, trading is BAD\0A\00", align 1
@.str50 = private unnamed_addr constant [4 x i8] c"---\00", align 1
@.str51 = private unnamed_addr constant [53 x i8] c"mates you (ptell me 'x' when it no longer mates you)\00", align 1
@.str52 = private unnamed_addr constant [3 x i8] c"--\00", align 1
@.str53 = private unnamed_addr constant [52 x i8] c"is VERY bad (ptell me 'x' when it is no longer bad)\00", align 1
@.str54 = private unnamed_addr constant [47 x i8] c"is bad (ptell me 'x' when it is no longer bad)\00", align 1
@.str55 = private unnamed_addr constant [2 x i8] c"x\00", align 1
@.str56 = private unnamed_addr constant [16 x i8] c"mate me anymore\00", align 1
@.str57 = private unnamed_addr constant [6 x i8] c"never\00", align 1
@.str5851 = private unnamed_addr constant [5 x i8] c"mind\00", align 1
@.str59 = private unnamed_addr constant [2 x i8] c"=\00", align 1
@.str60 = private unnamed_addr constant [9 x i8] c"ptell me\00", align 1
@.str61 = private unnamed_addr constant [55 x i8] c"tellics ptell Ok, reverting to STANDARD piece values!\0A\00", align 1
@partnerdead = internal global i32 0, align 4
@piecedead = internal global i32 0, align 4
@.str62 = private unnamed_addr constant [26 x i8] c"i'll have to sit...(dead)\00", align 1
@.str63 = private unnamed_addr constant [5 x i8] c"dead\00", align 1
@.str64 = private unnamed_addr constant [27 x i8] c"i'll have to sit...(piece)\00", align 1
@.str65 = private unnamed_addr constant [3 x i8] c"ok\00", align 1
@.str66 = private unnamed_addr constant [3 x i8] c"hi\00", align 1
@.str67 = private unnamed_addr constant [6 x i8] c"hello\00", align 1
@.str68 = private unnamed_addr constant [26 x i8] c"tellics ptell Greetings.\0A\00", align 1
@.str69 = private unnamed_addr constant [8 x i8] c"formula\00", align 1
@.str70 = private unnamed_addr constant [87 x i8] c"tellics ptell Setting formula, if you are still interrupted, complain to my operator.\0A\00", align 1
@.str71 = private unnamed_addr constant [59 x i8] c"tellics ptell Sorry, but I don't understand that command.\0A\00", align 1
@CheckBadFlow.pawnmated = internal global i32 0, align 4
@CheckBadFlow.knightmated = internal global i32 0, align 4
@CheckBadFlow.bishopmated = internal global i32 0, align 4
@CheckBadFlow.rookmated = internal global i32 0, align 4
@CheckBadFlow.queenmated = internal global i32 0, align 4
@.str72 = private unnamed_addr constant [41 x i8] c"tellics ptell p doesn't mate me anymore\0A\00", align 1
@.str73 = private unnamed_addr constant [41 x i8] c"tellics ptell n doesn't mate me anymore\0A\00", align 1
@.str74 = private unnamed_addr constant [41 x i8] c"tellics ptell b doesn't mate me anymore\0A\00", align 1
@.str75 = private unnamed_addr constant [41 x i8] c"tellics ptell r doesn't mate me anymore\0A\00", align 1
@.str76 = private unnamed_addr constant [41 x i8] c"tellics ptell q doesn't mate me anymore\0A\00", align 1
@.str77 = private unnamed_addr constant [20 x i8] c"tellics ptell ---p\0A\00", align 1
@.str78 = private unnamed_addr constant [20 x i8] c"tellics ptell ---n\0A\00", align 1
@.str79 = private unnamed_addr constant [20 x i8] c"tellics ptell ---b\0A\00", align 1
@.str80 = private unnamed_addr constant [20 x i8] c"tellics ptell ---r\0A\00", align 1
@.str81 = private unnamed_addr constant [20 x i8] c"tellics ptell ---q\0A\00", align 1
@.str82 = private unnamed_addr constant [17 x i8] c"tellics ptell x\0A\00", align 1
@.str83 = private unnamed_addr constant [18 x i8] c"tellics ptell go\0A\00", align 1
@bufftop = internal global i32 0, align 4
@membuff = internal global i8* null, align 8
@maxply = internal global i32 0, align 4
@forwards = internal global i32 0, align 4
@nodecount = internal global i32 0, align 4
@frees = internal global i32 0, align 4
@nodecount2 = internal global i32 0, align 4
@pn2 = internal global i32 0, align 4
@alllosers = internal global i32 0, align 4
@rootlosers = internal global [300 x i32] zeroinitializer, align 16
@pn_move = internal global %struct.move_s zeroinitializer, align 4
@iters = internal global i32 0, align 4
@pn_time = internal global i32 0, align 4
@forcedwin = internal global i32 0, align 4
@kibitzed = internal global i32 0, align 4
@.str84 = private unnamed_addr constant [28 x i8] c"tellics kibitz Forced win!\0A\00", align 1
@.str185 = private unnamed_addr constant [34 x i8] c"tellics kibitz Forced win! (alt)\0A\00", align 1
@.str286 = private unnamed_addr constant [94 x i8] c"tellics whisper proof %d, disproof %d, %d losers, highest depth %d, primary %d, secondary %d\0A\00", align 1
@.str387 = private unnamed_addr constant [30 x i8] c"tellics whisper Forced reply\0A\00", align 1
@.str488 = private unnamed_addr constant [60 x i8] c"P: %d D: %d N: %d S: %d Mem: %2.2fM Iters: %d MaxDepth: %d\0A\00", align 1
@.str589 = private unnamed_addr constant [90 x i8] c"tellics whisper proof %d, disproof %d, %d nodes, %d forwards, %d iters, highest depth %d\0A\00", align 1
@.str690 = private unnamed_addr constant [11 x i8] c"Time : %f\0A\00", align 1
@.str791 = private unnamed_addr constant [23 x i8] c"This position is WON.\0A\00", align 1
@.str892 = private unnamed_addr constant [5 x i8] c"PV: \00", align 1
@.str993 = private unnamed_addr constant [4 x i8] c"%s \00", align 1
@.str1094 = private unnamed_addr constant [2 x i8] c" \00", align 1
@.str1195 = private unnamed_addr constant [41 x i8] c"\0Atellics kibitz Forced win in %d moves.\0A\00", align 1
@.str1296 = private unnamed_addr constant [20 x i8] c"\0A1-0 {White mates}\0A\00", align 1
@.str1397 = private unnamed_addr constant [20 x i8] c"\0A0-1 {Black mates}\0A\00", align 1
@.str1498 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@.str1599 = private unnamed_addr constant [24 x i8] c"This position is LOST.\0A\00", align 1
@.str16100 = private unnamed_addr constant [27 x i8] c"This position is UNKNOWN.\0A\00", align 1
@pn_saver = internal global %struct.move_s zeroinitializer, align 4
@.str17101 = private unnamed_addr constant [47 x i8] c"P: %d D: %d N: %d S: %d Mem: %2.2fM Iters: %d\0A\00", align 1
@TTSize = internal global i32 0, align 4
@ECacheSize = internal global i32 0, align 4
@PBSize = internal global i32 0, align 4
@cfg_devscale = internal global i32 0, align 4
@cfg_scalefac = internal global float 0.000000e+00, align 4
@cfg_razordrop = internal global i32 0, align 4
@cfg_cutdrop = internal global i32 0, align 4
@cfg_futprune = internal global i32 0, align 4
@cfg_smarteval = internal global i32 0, align 4
@cfg_attackeval = internal global i32 0, align 4
@cfg_onerep = internal global i32 0, align 4
@cfg_recap = internal global i32 0, align 4
@havercfile = internal global i32 0, align 4
@.str112 = private unnamed_addr constant [3 x i8] c"%u\00", align 1
@rcfile = internal global %struct._IO_FILE* null, align 8
@line = internal global [256 x i8] zeroinitializer, align 16
@cfg_booklearn = internal global i32 0, align 4
@cfg_ksafety = internal global [15 x [9 x i32]] zeroinitializer, align 16
@cfg_tropism = internal global [5 x [7 x i32]] zeroinitializer, align 16
@rootnodecount = internal global [512 x i32] zeroinitializer, align 16
@failed = internal global i32 0, align 4
@extendedtime = internal global i32 0, align 4
@.str113 = private unnamed_addr constant [38 x i8] c"Extended from %d to %d, time left %d\0A\00", align 1
@search.rc_index = internal constant [14 x i32] [i32 0, i32 1, i32 1, i32 2, i32 2, i32 5, i32 5, i32 3, i32 3, i32 4, i32 4, i32 2, i32 2, i32 0], align 16
@checks = internal global [300 x i32] zeroinitializer, align 16
@singular = internal global [300 x i32] zeroinitializer, align 16
@recaps = internal global [300 x i32] zeroinitializer, align 16
@ext_recap = internal global i32 0, align 4
@ext_onerep = internal global i32 0, align 4
@razor_drop = internal global i32 0, align 4
@drop_cuts = internal global i32 0, align 4
@razor_material = internal global i32 0, align 4
@FHF = internal global i32 0, align 4
@FH = internal global i32 0, align 4
@legals = internal global i32 0, align 4
@movetotal = internal global i32 0, align 4
@moveleft = internal global i32 0, align 4
@searching_move = internal global [20 x i8] zeroinitializer, align 16
@bestmovenum = internal global i32 0, align 4
@true_i_depth = internal global i8 0, align 1
@.str1122 = private unnamed_addr constant [16 x i8] c"Opening phase.\0A\00", align 1
@.str2123 = private unnamed_addr constant [19 x i8] c"Middlegame phase.\0A\00", align 1
@.str3124 = private unnamed_addr constant [16 x i8] c"Endgame phase.\0A\00", align 1
@.str4125 = private unnamed_addr constant [20 x i8] c"Time for move : %d\0A\00", align 1
@postpv = internal global [256 x i8] zeroinitializer, align 16
@s_threat = internal global i32 0, align 4
@.str5128 = private unnamed_addr constant [49 x i8] c"tellics whisper %d restart(s), ended up with %s\0A\00", align 1
@.str6129 = private unnamed_addr constant [27 x i8] c"tellics kibitz Mate in %d\0A\00", align 1
@.str7130 = private unnamed_addr constant [52 x i8] c"tellics ptell Mate in %d, give him no more pieces.\0A\00", align 1
@tradefreely = internal global i32 0, align 4
@.str8131 = private unnamed_addr constant [37 x i8] c"tellics ptell You can trade freely.\0A\00", align 1
@.str9132 = private unnamed_addr constant [25 x i8] c"tellics ptell ---trades\0A\00", align 1
@.str10133 = private unnamed_addr constant [49 x i8] c"tellics kibitz Both players dead...resigning...\0A\00", align 1
@.str11134 = private unnamed_addr constant [16 x i8] c"tellics resign\0A\00", align 1
@.str12135 = private unnamed_addr constant [81 x i8] c"tellics ptell I am forcedly mated (dead). Tell me 'go' to start moving into it.\0A\00", align 1
@.str13136 = private unnamed_addr constant [62 x i8] c"tellics ptell I'll have to sit...(lose piece that mates you)\0A\00", align 1
@.str14137 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@ugly_ep_hack = internal global i32 0, align 4
@setup_attackers.rook_o = internal constant [4 x i32] [i32 12, i32 -12, i32 1, i32 -1], align 16
@setup_attackers.bishop_o = internal constant [4 x i32] [i32 11, i32 -11, i32 13, i32 -13], align 16
@setup_attackers.knight_o = internal constant [8 x i32] [i32 10, i32 -10, i32 14, i32 -14, i32 23, i32 -23, i32 25, i32 -25], align 16
@see_num_attackers = internal global [2 x i32] zeroinitializer, align 4
@see_attackers = internal global [2 x [16 x %struct.see_data]] zeroinitializer, align 16
@scentral = internal global [144 x i32] [i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 -20, i32 -10, i32 -10, i32 -10, i32 -10, i32 -10, i32 -10, i32 -20, i32 0, i32 0, i32 0, i32 0, i32 -10, i32 0, i32 3, i32 5, i32 5, i32 3, i32 0, i32 -10, i32 0, i32 0, i32 0, i32 0, i32 -10, i32 2, i32 15, i32 15, i32 15, i32 15, i32 2, i32 -10, i32 0, i32 0, i32 0, i32 0, i32 -10, i32 7, i32 15, i32 25, i32 25, i32 15, i32 7, i32 -10, i32 0, i32 0, i32 0, i32 0, i32 -10, i32 7, i32 15, i32 25, i32 25, i32 15, i32 7, i32 -10, i32 0, i32 0, i32 0, i32 0, i32 -10, i32 2, i32 15, i32 15, i32 15, i32 15, i32 2, i32 -10, i32 0, i32 0, i32 0, i32 0, i32 -10, i32 0, i32 3, i32 5, i32 5, i32 3, i32 0, i32 -10, i32 0, i32 0, i32 0, i32 0, i32 -20, i32 -10, i32 -10, i32 -10, i32 -10, i32 -10, i32 -10, i32 -20, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0], align 16
@king_o = internal constant [8 x i32] [i32 13, i32 12, i32 11, i32 1, i32 -1, i32 -11, i32 -12, i32 -13], align 16
@knight_o = internal constant [8 x i32] [i32 10, i32 -10, i32 14, i32 -14, i32 23, i32 -23, i32 25, i32 -25], align 16
@divider = internal global [50 x i8] c"-------------------------------------------------\00", align 16
@dummy = internal global %struct.move_s zeroinitializer, align 4
@Variant = internal global i32 0, align 4
@bookidx = internal global i32 0, align 4
@ply = internal global i32 0, align 4
@moves_to_tc = internal global i32 0, align 4
@min_per_game = internal global i32 0, align 4
@time_left = internal global i32 0, align 4
@opp_rating = internal global i32 0, align 4
@my_rating = internal global i32 0, align 4
@maxdepth = internal global i32 0, align 4
@xb_mode = internal global i32 0, align 4
@comp_color = internal global i32 0, align 4
@is_pondering = internal global i32 0, align 4
@allow_pondering = internal global i32 0, align 4
@is_analyzing = internal global i32 0, align 4
@have_partner = internal global i32 0, align 4
@must_sit = internal global i32 0, align 4
@go_fast = internal global i32 0, align 4
@fixed_time = internal global i32 0, align 4
@phase = internal global i32 0, align 4
@root_to_move = internal global i32 0, align 4
@move_number = internal global i32 0, align 4
@hash_history = internal global [600 x i32] zeroinitializer, align 16
@.str180 = private unnamed_addr constant [15 x i8] c"SPEC Workload\0A\00", align 1
@white_to_move = internal global i32 0, align 4
@result = internal global i32 0, align 4
@path_x = internal global [300 x %struct.move_x] zeroinitializer, align 16
@fifty = internal global i32 0, align 4
@book_ply = internal global i32 0, align 4
@opening_history = internal global [256 x i8] zeroinitializer, align 16
@.str1191 = private unnamed_addr constant [29 x i8] c"\0ANodes: %i (%0.2f%% qnodes)\0A\00", align 1
@nodes = internal global i32 0, align 4
@qnodes = internal global i32 0, align 4
@.str2196 = private unnamed_addr constant [54 x i8] c"ECacheProbes : %u   ECacheHits : %u   HitRate : %f%%\0A\00", align 1
@.str3197 = private unnamed_addr constant [60 x i8] c"TTStores : %u TTProbes : %u   TTHits : %u   HitRate : %f%%\0A\00", align 1
@.str4198 = private unnamed_addr constant [51 x i8] c"NTries : %u  NCuts : %u  CutRate : %f%%  TExt: %u\0A\00", align 1
@NTries = internal global i32 0, align 4
@NCuts = internal global i32 0, align 4
@TExt = internal global i32 0, align 4
@.str5205 = private unnamed_addr constant [61 x i8] c"Check extensions: %u  Razor drops : %u  Razor Material : %u\0A\00", align 1
@ext_check = internal global i32 0, align 4
@.str6208 = private unnamed_addr constant [22 x i8] c"Move ordering : %f%%\0A\00", align 1
@.str7209 = private unnamed_addr constant [81 x i8] c"Material score: %d   Eval : %d  MaxPosDiff: %d  White hand: %d  Black hand : %d\0A\00", align 1
@.str8210 = private unnamed_addr constant [26 x i8] c"Hash : %X  HoldHash : %X\0A\00", align 1
@.str9211 = private unnamed_addr constant [9 x i8] c"move %s\0A\00", align 1
@.str10212 = private unnamed_addr constant [5 x i8] c"\0A%s\0A\00", align 1
@.str11213 = private unnamed_addr constant [19 x i8] c"0-1 {Black Mates}\0A\00", align 1
@.str12214 = private unnamed_addr constant [19 x i8] c"1-0 {White Mates}\0A\00", align 1
@.str13215 = private unnamed_addr constant [27 x i8] c"1/2-1/2 {Fifty move rule}\0A\00", align 1
@.str14216 = private unnamed_addr constant [29 x i8] c"1/2-1/2 {3 fold repetition}\0A\00", align 1
@.str15217 = private unnamed_addr constant [16 x i8] c"1/2-1/2 {Draw}\0A\00", align 1
@.str16218 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@.str17219 = private unnamed_addr constant [8 x i8] c"Sjeng: \00", align 1
@.str18220 = private unnamed_addr constant [18 x i8] c"Illegal move: %s\0A\00", align 1
@.str19221 = private unnamed_addr constant [9 x i8] c"setboard\00", align 1
@.str20222 = private unnamed_addr constant [5 x i8] c"quit\00", align 1
@.str21223 = private unnamed_addr constant [5 x i8] c"exit\00", align 1
@time_for_move = internal global i32 0, align 4
@.str22226 = private unnamed_addr constant [8 x i8] c"diagram\00", align 1
@.str23227 = private unnamed_addr constant [2 x i8] c"d\00", align 1
@.str24228 = private unnamed_addr constant [6 x i8] c"perft\00", align 1
@.str25229 = private unnamed_addr constant [3 x i8] c"%d\00", align 1
@raw_nodes = internal global i32 0, align 4
@.str26232 = private unnamed_addr constant [28 x i8] c"Raw nodes for depth %d: %i\0A\00", align 1
@.str27233 = private unnamed_addr constant [13 x i8] c"Time : %.2f\0A\00", align 1
@.str28234 = private unnamed_addr constant [4 x i8] c"new\00", align 1
@.str29235 = private unnamed_addr constant [40 x i8] c"tellics set 1 Sjeng SPEC 1.0 (SPEC/%s)\0A\00", align 1
@setcode = internal global [30 x i8] zeroinitializer, align 16
@.str30238 = private unnamed_addr constant [7 x i8] c"xboard\00", align 1
@.str31239 = private unnamed_addr constant [20 x i8] c"tellics set f5 1=1\0A\00", align 1
@.str32240 = private unnamed_addr constant [6 x i8] c"nodes\00", align 1
@.str33241 = private unnamed_addr constant [38 x i8] c"Number of nodes: %i (%0.2f%% qnodes)\0A\00", align 1
@.str34242 = private unnamed_addr constant [5 x i8] c"post\00", align 1
@post = internal global i32 0, align 4
@.str35245 = private unnamed_addr constant [7 x i8] c"nopost\00", align 1
@.str36246 = private unnamed_addr constant [7 x i8] c"random\00", align 1
@.str37247 = private unnamed_addr constant [5 x i8] c"hard\00", align 1
@.str38248 = private unnamed_addr constant [5 x i8] c"easy\00", align 1
@.str39249 = private unnamed_addr constant [2 x i8] c"?\00", align 1
@.str40250 = private unnamed_addr constant [6 x i8] c"white\00", align 1
@.str41251 = private unnamed_addr constant [6 x i8] c"black\00", align 1
@.str42252 = private unnamed_addr constant [6 x i8] c"force\00", align 1
@.str43253 = private unnamed_addr constant [5 x i8] c"eval\00", align 1
@.str44254 = private unnamed_addr constant [10 x i8] c"Eval: %d\0A\00", align 1
@.str45255 = private unnamed_addr constant [3 x i8] c"go\00", align 1
@.str46256 = private unnamed_addr constant [5 x i8] c"time\00", align 1
@.str47257 = private unnamed_addr constant [3 x i8] c"%i\00", align 1
@.str48258 = private unnamed_addr constant [5 x i8] c"otim\00", align 1
@opp_time = internal global i32 0, align 4
@.str49259 = private unnamed_addr constant [6 x i8] c"level\00", align 1
@.str50260 = private unnamed_addr constant [2 x i8] c":\00", align 1
@.str51261 = private unnamed_addr constant [12 x i8] c"%i %i:%i %i\00", align 1
@sec_per_game = internal global i32 0, align 4
@inc = internal global i32 0, align 4
@.str52264 = private unnamed_addr constant [9 x i8] c"%i %i %i\00", align 1
@time_cushion = internal global i32 0, align 4
@.str53267 = private unnamed_addr constant [7 x i8] c"rating\00", align 1
@.str54268 = private unnamed_addr constant [6 x i8] c"%i %i\00", align 1
@.str55269 = private unnamed_addr constant [8 x i8] c"holding\00", align 1
@.str56270 = private unnamed_addr constant [8 x i8] c"variant\00", align 1
@.str57271 = private unnamed_addr constant [7 x i8] c"normal\00", align 1
@.str58272 = private unnamed_addr constant [11 x i8] c"crazyhouse\00", align 1
@.str59273 = private unnamed_addr constant [9 x i8] c"bughouse\00", align 1
@.str60274 = private unnamed_addr constant [8 x i8] c"suicide\00", align 1
@Giveaway = internal global i32 0, align 4
@.str61277 = private unnamed_addr constant [9 x i8] c"giveaway\00", align 1
@.str62278 = private unnamed_addr constant [7 x i8] c"losers\00", align 1
@.str63279 = private unnamed_addr constant [8 x i8] c"analyze\00", align 1
@.str64280 = private unnamed_addr constant [5 x i8] c"undo\00", align 1
@.str65281 = private unnamed_addr constant [18 x i8] c"Move number : %d\0A\00", align 1
@.str66282 = private unnamed_addr constant [7 x i8] c"remove\00", align 1
@.str67283 = private unnamed_addr constant [5 x i8] c"edit\00", align 1
@.str68284 = private unnamed_addr constant [2 x i8] c".\00", align 1
@wking_loc = internal global i32 0, align 4
@white_castled = internal global i32 0, align 4
@bking_loc = internal global i32 0, align 4
@black_castled = internal global i32 0, align 4
@ep_square = internal global i32 0, align 4
@.str69295 = private unnamed_addr constant [2 x i8] c"c\00", align 1
@.str70296 = private unnamed_addr constant [2 x i8] c"#\00", align 1
@.str71297 = private unnamed_addr constant [8 x i8] c"partner\00", align 1
@.str72298 = private unnamed_addr constant [9 x i8] c"$partner\00", align 1
@.str73299 = private unnamed_addr constant [6 x i8] c"ptell\00", align 1
@.str74300 = private unnamed_addr constant [5 x i8] c"test\00", align 1
@.str75301 = private unnamed_addr constant [3 x i8] c"st\00", align 1
@.str76302 = private unnamed_addr constant [7 x i8] c"result\00", align 1
@.str77303 = private unnamed_addr constant [6 x i8] c"prove\00", align 1
@.str78304 = private unnamed_addr constant [26 x i8] c"\0AMax time to search (s): \00", align 1
@start_time = internal global i64 0, align 8
@.str79307 = private unnamed_addr constant [5 x i8] c"ping\00", align 1
@.str80308 = private unnamed_addr constant [9 x i8] c"pong %d\0A\00", align 1
@.str81309 = private unnamed_addr constant [6 x i8] c"fritz\00", align 1
@.str82310 = private unnamed_addr constant [6 x i8] c"reset\00", align 1
@.str83311 = private unnamed_addr constant [3 x i8] c"sd\00", align 1
@.str84312 = private unnamed_addr constant [26 x i8] c"New max depth set to: %d\0A\00", align 1
@.str85 = private unnamed_addr constant [5 x i8] c"auto\00", align 1
@.str86 = private unnamed_addr constant [9 x i8] c"protover\00", align 1
@.str87 = private unnamed_addr constant [63 x i8] c"feature ping=0 setboard=1 playother=0 san=0 usermove=0 time=1\0A\00", align 1
@.str88 = private unnamed_addr constant [53 x i8] c"feature draw=0 sigint=0 sigterm=0 reuse=1 analyze=0\0A\00", align 1
@.str89 = private unnamed_addr constant [33 x i8] c"feature myname=\22Sjeng SPEC 1.0\22\0A\00", align 1
@.str90 = private unnamed_addr constant [71 x i8] c"feature variants=\22normal,bughouse,crazyhouse,suicide,giveaway,losers\22\0A\00", align 1
@.str91 = private unnamed_addr constant [46 x i8] c"feature colors=1 ics=0 name=0 pause=0 done=1\0A\00", align 1
@.str92 = private unnamed_addr constant [9 x i8] c"accepted\00", align 1
@.str93 = private unnamed_addr constant [9 x i8] c"rejected\00", align 1
@.str94 = private unnamed_addr constant [65 x i8] c"Interface does not support a required feature...expect trouble.\0A\00", align 1
@.str95 = private unnamed_addr constant [5 x i8] c"help\00", align 1
@.str96 = private unnamed_addr constant [6 x i8] c"\0A%s\0A\0A\00", align 1
@.str97 = private unnamed_addr constant [41 x i8] c"diagram/d:       toggle diagram display\0A\00", align 1
@.str98 = private unnamed_addr constant [34 x i8] c"exit/quit:       terminate Sjeng\0A\00", align 1
@.str99 = private unnamed_addr constant [51 x i8] c"go:              make Sjeng play the side to move\0A\00", align 1
@.str100 = private unnamed_addr constant [35 x i8] c"new:             start a new game\0A\00", align 1
@.str101 = private unnamed_addr constant [55 x i8] c"level <x>:       the xboard style command to set time\0A\00", align 1
@.str102 = private unnamed_addr constant [49 x i8] c"  <x> should be in the form: <a> <b> <c> where:\0A\00", align 1
@.str103 = private unnamed_addr constant [49 x i8] c"  a -> moves to TC (0 if using an ICS style TC)\0A\00", align 1
@.str104 = private unnamed_addr constant [25 x i8] c"  b -> minutes per game\0A\00", align 1
@.str105 = private unnamed_addr constant [29 x i8] c"  c -> increment in seconds\0A\00", align 1
@.str106 = private unnamed_addr constant [55 x i8] c"nodes:           outputs the number of nodes searched\0A\00", align 1
@.str107 = private unnamed_addr constant [47 x i8] c"perft <x>:       compute raw nodes to depth x\0A\00", align 1
@.str108 = private unnamed_addr constant [42 x i8] c"post:            toggles thinking output\0A\00", align 1
@.str109 = private unnamed_addr constant [45 x i8] c"xboard:          put Sjeng into xboard mode\0A\00", align 1
@.str110 = private unnamed_addr constant [39 x i8] c"test:            run an EPD testsuite\0A\00", align 1
@.str111 = private unnamed_addr constant [52 x i8] c"speed:           test movegen and evaluation speed\0A\00", align 1
@.str112313 = private unnamed_addr constant [59 x i8] c"proof:           try to prove or disprove the current pos\0A\00", align 1
@.str113314 = private unnamed_addr constant [44 x i8] c"sd <x>:          limit thinking to depth x\0A\00", align 1
@.str114 = private unnamed_addr constant [51 x i8] c"st <x>:          limit thinking to x centiseconds\0A\00", align 1
@.str115 = private unnamed_addr constant [54 x i8] c"setboard <FEN>:  set board to a specified FEN string\0A\00", align 1
@.str116 = private unnamed_addr constant [38 x i8] c"undo:            back up a half move\0A\00", align 1
@.str117 = private unnamed_addr constant [38 x i8] c"remove:          back up a full move\0A\00", align 1
@.str118 = private unnamed_addr constant [42 x i8] c"force:           disable computer moving\0A\00", align 1
@.str119 = private unnamed_addr constant [44 x i8] c"auto:            computer plays both sides\0A\00", align 1
@board = internal global [144 x i32] zeroinitializer, align 16
@moved = internal global [144 x i32] zeroinitializer, align 16
@pv_length = internal global [300 x i32] zeroinitializer, align 16
@pieces = internal global [62 x i32] zeroinitializer, align 16
@squares = internal global [144 x i32] zeroinitializer, align 16
@num_pieces = internal global i32 0, align 4
@i_depth = internal global i32 0, align 4
@piece_count = internal global i32 0, align 4
@killer_scores = internal global [300 x i32] zeroinitializer, align 16
@killer_scores2 = internal global [300 x i32] zeroinitializer, align 16
@killer_scores3 = internal global [300 x i32] zeroinitializer, align 16
@cur_score = internal global i32 0, align 4
@history_h = internal global [144 x [144 x i32]] zeroinitializer, align 16
@captures = internal global i32 0, align 4
@searching_pv = internal global i32 0, align 4
@time_exit = internal global i32 0, align 4
@time_failure = internal global i32 0, align 4
@pv = internal global [300 x [300 x %struct.move_s]] zeroinitializer, align 16
@killer1 = internal global [300 x %struct.move_s] zeroinitializer, align 16
@killer2 = internal global [300 x %struct.move_s] zeroinitializer, align 16
@killer3 = internal global [300 x %struct.move_s] zeroinitializer, align 16
@path = internal global [300 x %struct.move_s] zeroinitializer, align 16
@is_promoted = internal global [62 x i32] zeroinitializer, align 16
@PVS = internal global i32 0, align 4
@FULL = internal global i32 0, align 4
@PVSF = internal global i32 0, align 4
@my_partner = internal global [256 x i8] zeroinitializer, align 16
@use_book = internal global i32 0, align 4
@DP_TTable = internal global %struct.TType* null, align 8
@AS_TTable = internal global %struct.TType* null, align 8
@QS_TTable = internal global %struct.QTType* null, align 8
@zobrist = internal global [14 x [144 x i32]] zeroinitializer, align 16
@hash = internal global i32 0, align 4
@TTStores = internal global i32 0, align 4
@TTProbes = internal global i32 0, align 4
@TTHits = internal global i32 0, align 4
@.str377 = private unnamed_addr constant [38 x i8] c"Out of memory allocating hashtables.\0A\00", align 1
@left = internal global i32 -1, align 4
@comp_to_san.type_to_char = internal constant [14 x i32] [i32 70, i32 80, i32 80, i32 78, i32 78, i32 75, i32 75, i32 82, i32 82, i32 81, i32 81, i32 66, i32 66, i32 69], align 16
@.str396 = private unnamed_addr constant [8 x i8] c"%c@%c%d\00", align 1
@.str1398 = private unnamed_addr constant [5 x i8] c"%c%d\00", align 1
@.str2399 = private unnamed_addr constant [8 x i8] c"%c%d=%c\00", align 1
@.str3400 = private unnamed_addr constant [8 x i8] c"%cx%c%d\00", align 1
@.str4401 = private unnamed_addr constant [11 x i8] c"%cx%c%d=%c\00", align 1
@.str5402 = private unnamed_addr constant [4 x i8] c"O-O\00", align 1
@.str6403 = private unnamed_addr constant [6 x i8] c"O-O-O\00", align 1
@.str7404 = private unnamed_addr constant [9 x i8] c"%c%c%c%d\00", align 1
@.str8405 = private unnamed_addr constant [9 x i8] c"%c%d%c%d\00", align 1
@.str9406 = private unnamed_addr constant [10 x i8] c"%c%cx%c%d\00", align 1
@.str10407 = private unnamed_addr constant [10 x i8] c"%c%dx%c%d\00", align 1
@.str11408 = private unnamed_addr constant [7 x i8] c"%c%c%d\00", align 1
@.str12409 = private unnamed_addr constant [5 x i8] c"illg\00", align 1
@.str13410 = private unnamed_addr constant [2 x i8] c"#\00", align 1
@.str14411 = private unnamed_addr constant [2 x i8] c"+\00", align 1
@comp_to_coord.type_to_char = internal constant [14 x i32] [i32 70, i32 80, i32 112, i32 78, i32 110, i32 75, i32 107, i32 82, i32 114, i32 81, i32 113, i32 66, i32 98, i32 69], align 16
@.str15412 = private unnamed_addr constant [10 x i8] c"%c%d%c%dn\00", align 1
@.str16413 = private unnamed_addr constant [10 x i8] c"%c%d%c%dr\00", align 1
@.str17414 = private unnamed_addr constant [10 x i8] c"%c%d%c%db\00", align 1
@.str18415 = private unnamed_addr constant [10 x i8] c"%c%d%c%dk\00", align 1
@.str19416 = private unnamed_addr constant [10 x i8] c"%c%d%c%dq\00", align 1
@.str20417 = private unnamed_addr constant [42 x i8] c"+----+----+----+----+----+----+----+----+\00", align 1
@.str21418 = private unnamed_addr constant [3 x i8] c"!!\00", align 1
@.str22419 = private unnamed_addr constant [3 x i8] c" P\00", align 1
@.str23420 = private unnamed_addr constant [3 x i8] c"*P\00", align 1
@.str24421 = private unnamed_addr constant [3 x i8] c" N\00", align 1
@.str25422 = private unnamed_addr constant [3 x i8] c"*N\00", align 1
@.str26423 = private unnamed_addr constant [3 x i8] c" K\00", align 1
@.str27424 = private unnamed_addr constant [3 x i8] c"*K\00", align 1
@.str28425 = private unnamed_addr constant [3 x i8] c" R\00", align 1
@.str29426 = private unnamed_addr constant [3 x i8] c"*R\00", align 1
@.str30427 = private unnamed_addr constant [3 x i8] c" Q\00", align 1
@.str31428 = private unnamed_addr constant [3 x i8] c"*Q\00", align 1
@.str32429 = private unnamed_addr constant [3 x i8] c" B\00", align 1
@.str33430 = private unnamed_addr constant [3 x i8] c"*B\00", align 1
@.str34431 = private unnamed_addr constant [3 x i8] c"  \00", align 1
@display_board.piece_rep = private unnamed_addr constant [14 x i8*] [i8* getelementptr inbounds ([3 x i8]* @.str21418, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8]* @.str22419, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8]* @.str23420, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8]* @.str24421, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8]* @.str25422, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8]* @.str26423, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8]* @.str27424, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8]* @.str28425, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8]* @.str29426, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8]* @.str30427, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8]* @.str31428, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8]* @.str32429, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8]* @.str33430, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8]* @.str34431, i32 0, i32 0)], align 16
@.str35432 = private unnamed_addr constant [6 x i8] c"  %s\0A\00", align 1
@.str36433 = private unnamed_addr constant [5 x i8] c"%d |\00", align 1
@.str37434 = private unnamed_addr constant [6 x i8] c" %s |\00", align 1
@.str38435 = private unnamed_addr constant [7 x i8] c"\0A  %s\0A\00", align 1
@.str39436 = private unnamed_addr constant [45 x i8] c"\0A     a    b    c    d    e    f    g    h\0A\0A\00", align 1
@.str40437 = private unnamed_addr constant [45 x i8] c"\0A     h    g    f    e    d    c    b    a\0A\0A\00", align 1
@init_game.init_board = private unnamed_addr constant [144 x i32] [i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 7, i32 3, i32 11, i32 9, i32 5, i32 11, i32 3, i32 7, i32 0, i32 0, i32 0, i32 0, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 0, i32 0, i32 0, i32 0, i32 13, i32 13, i32 13, i32 13, i32 13, i32 13, i32 13, i32 13, i32 0, i32 0, i32 0, i32 0, i32 13, i32 13, i32 13, i32 13, i32 13, i32 13, i32 13, i32 13, i32 0, i32 0, i32 0, i32 0, i32 13, i32 13, i32 13, i32 13, i32 13, i32 13, i32 13, i32 13, i32 0, i32 0, i32 0, i32 0, i32 13, i32 13, i32 13, i32 13, i32 13, i32 13, i32 13, i32 13, i32 0, i32 0, i32 0, i32 0, i32 2, i32 2, i32 2, i32 2, i32 2, i32 2, i32 2, i32 2, i32 0, i32 0, i32 0, i32 0, i32 8, i32 4, i32 12, i32 10, i32 6, i32 12, i32 4, i32 8, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0], align 16
@.str41438 = private unnamed_addr constant [47 x i8] c"\0A\0APlease enter the desired depth for perft():\0A\00", align 1
@.str42439 = private unnamed_addr constant [31 x i8] c"\0A\0ARaw nodes for depth %d: %i\0A\0A\00", align 1
@.str43440 = private unnamed_addr constant [31 x i8] c"\0APlease input a move/command:\0A\00", align 1
@.str44441 = private unnamed_addr constant [5 x i8] c"exit\00", align 1
@.str45442 = private unnamed_addr constant [5 x i8] c"quit\00", align 1
@.str46443 = private unnamed_addr constant [58 x i8] c"\0AIllegal move/command!  Please input a new move/command:\0A\00", align 1
@.str47444 = private unnamed_addr constant [2 x i8] c"<\00", align 1
@.str48445 = private unnamed_addr constant [3 x i8] c"> \00", align 1
@.str49446 = private unnamed_addr constant [2 x i8] c" \00", align 1
@.str50447 = private unnamed_addr constant [18 x i8] c"%2i %7i %5i %8i  \00", align 1
@.str51448 = private unnamed_addr constant [20 x i8] c"%2i %c%1i.%02i %9i \00", align 1
@.str52449 = private unnamed_addr constant [4 x i8] c"%s \00", align 1
@.str53450 = private unnamed_addr constant [3 x i8] c"%s\00", align 1
@.str54451 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@.str55452 = private unnamed_addr constant [5 x i8] c"%s !\00", align 1
@.str56453 = private unnamed_addr constant [6 x i8] c"%s !!\00", align 1
@.str57454 = private unnamed_addr constant [6 x i8] c"%s ??\00", align 1
@.str58455 = private unnamed_addr constant [24 x i8] c"stat01: %i %i %i %i %i\0A\00", align 1
@.str59456 = private unnamed_addr constant [27 x i8] c"stat01: %i %i %i %i %i %s\0A\00", align 1
@.str60457 = private unnamed_addr constant [36 x i8] c"Piece->square->piece inconsistency\0A\00", align 1
@.str61458 = private unnamed_addr constant [35 x i8] c"Board/Piece->square inconsistency\0A\00", align 1
@.str62459 = private unnamed_addr constant [29 x i8] c"Zero-ed piece inconsistency\0A\00", align 1
@.str63460 = private unnamed_addr constant [32 x i8] c"Empty square has piece pointer\0A\00", align 1
@.str64461 = private unnamed_addr constant [39 x i8] c"Filled square %d has no piece pointer\0A\00", align 1
@.str65462 = private unnamed_addr constant [37 x i8] c"Square->piece->square inconsistency\0A\00", align 1
@.str66463 = private unnamed_addr constant [71 x i8] c"\0ASjeng version SPEC 1.0, Copyright (C) 2000-2005 Gian-Carlo Pascutto\0A\0A\00", align 1
@.str67464 = private unnamed_addr constant [34 x i8] c"\0APlease enter the desired depth:\0A\00", align 1
@.str68465 = private unnamed_addr constant [37 x i8] c"\0ADo you want tree () output?  (y/n)\0A\00", align 1
@.str69466 = private unnamed_addr constant [56 x i8] c"\0APlease enter the name of the output file for tree ():\0A\00", align 1
@.str70467 = private unnamed_addr constant [2 x i8] c"w\00", align 1
@stderr = external global %struct._IO_FILE*
@.str71468 = private unnamed_addr constant [23 x i8] c"Couldn't open file %s\0A\00", align 1
@.str72469 = private unnamed_addr constant [40 x i8] c"\0ADo you want to output diagrams? (y/n)\0A\00", align 1
@.str73470 = private unnamed_addr constant [37 x i8] c"\0A\0A%s\0ARaw nodes for depth %d: %i\0A%s\0A\0A\00", align 1
@reset_board.init_board = private unnamed_addr constant [144 x i32] [i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 13, i32 13, i32 13, i32 13, i32 13, i32 13, i32 13, i32 13, i32 0, i32 0, i32 0, i32 0, i32 13, i32 13, i32 13, i32 13, i32 13, i32 13, i32 13, i32 13, i32 0, i32 0, i32 0, i32 0, i32 13, i32 13, i32 13, i32 13, i32 13, i32 13, i32 13, i32 13, i32 0, i32 0, i32 0, i32 0, i32 13, i32 13, i32 13, i32 13, i32 13, i32 13, i32 13, i32 13, i32 0, i32 0, i32 0, i32 0, i32 13, i32 13, i32 13, i32 13, i32 13, i32 13, i32 13, i32 13, i32 0, i32 0, i32 0, i32 0, i32 13, i32 13, i32 13, i32 13, i32 13, i32 13, i32 13, i32 13, i32 0, i32 0, i32 0, i32 0, i32 13, i32 13, i32 13, i32 13, i32 13, i32 13, i32 13, i32 13, i32 0, i32 0, i32 0, i32 0, i32 13, i32 13, i32 13, i32 13, i32 13, i32 13, i32 13, i32 13, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0], align 16
@state = internal global [625 x i32] zeroinitializer, align 16
@next = internal global i32* null, align 8

; Function Attrs: nounwind uwtable
define internal i32 @calc_attackers(i32 %square, i32 %color) #0 {
entry:
  %retval = alloca i32, align 4
  %retval205 = bitcast i32* %retval to i32*
  %bitcast = bitcast i32* %retval to i8*
  %mtmp = getelementptr i32* %retval205, i32 1
  %bitcast206 = bitcast i32* %mtmp to i8*
  %square.addr = alloca i32, align 4
  %square.addr207 = bitcast i32* %square.addr to i32*
  %bitcast208 = bitcast i32* %square.addr to i8*
  %mtmp209 = getelementptr i32* %square.addr207, i32 1
  %bitcast210 = bitcast i32* %mtmp209 to i8*
  %color.addr = alloca i32, align 4
  %color.addr211 = bitcast i32* %color.addr to i32*
  %bitcast212 = bitcast i32* %color.addr to i8*
  %mtmp213 = getelementptr i32* %color.addr211, i32 1
  %bitcast214 = bitcast i32* %mtmp213 to i8*
  %a_sq = alloca i32, align 4
  %a_sq215 = bitcast i32* %a_sq to i32*
  %bitcast216 = bitcast i32* %a_sq to i8*
  %mtmp217 = getelementptr i32* %a_sq215, i32 1
  %bitcast218 = bitcast i32* %mtmp217 to i8*
  %i = alloca i32, align 4
  %i219 = bitcast i32* %i to i32*
  %bitcast220 = bitcast i32* %i to i8*
  %mtmp221 = getelementptr i32* %i219, i32 1
  %bitcast222 = bitcast i32* %mtmp221 to i8*
  %attackers = alloca i32, align 4
  %attackers223 = bitcast i32* %attackers to i32*
  %bitcast224 = bitcast i32* %attackers to i8*
  %mtmp225 = getelementptr i32* %attackers223, i32 1
  %bitcast226 = bitcast i32* %mtmp225 to i8*
  store i32 %square, i32* %square.addr, align 4
  store i32 %color, i32* %color.addr, align 4
  store i32 0, i32* %attackers, align 4
  %0 = load i32* %square.addr, align 4
  %idxprom = sext i32 %0 to i64
  %arrayidx = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom
  %1 = load i32* %arrayidx, align 4
  %cmp = icmp eq i32 %1, 0
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval
  br label %return

if.end:                                           ; preds = %entry
  %2 = load i32* %color.addr, align 4
  %rem = srem i32 %2, 2
  %tobool = icmp ne i32 %rem, 0
  br i1 %tobool, label %if.then1, label %if.else97

if.then1:                                         ; preds = %if.end
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.then1
  %3 = load i32* %i, align 4
  %cmp2 = icmp slt i32 %3, 4
  br i1 %cmp2, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %4 = load i32* %square.addr, align 4
  %5 = load i32* %i, align 4
  %idxprom3 = sext i32 %5 to i64
  %bitcast227 = bitcast [4 x i32]* @calc_attackers.rook_o to i8*
  %bitcast228 = bitcast [4 x i32]* getelementptr inbounds ([4 x i32]* @calc_attackers.rook_o, i32 1) to i8*
  %arrayidx4 = getelementptr inbounds [4 x i32]* @calc_attackers.rook_o, i32 0, i64 %idxprom3
  %6 = load i32* %arrayidx4, align 4
  %add = add nsw i32 %4, %6
  store i32 %add, i32* %a_sq, align 4
  %7 = load i32* %a_sq, align 4
  %idxprom5 = sext i32 %7 to i64
  %arrayidx6 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom5
  %8 = load i32* %arrayidx6, align 4
  %cmp7 = icmp eq i32 %8, 5
  br i1 %cmp7, label %if.then8, label %if.else

if.then8:                                         ; preds = %for.body
  %9 = load i32* %attackers, align 4
  %inc = add nsw i32 %9, 1
  store i32 %inc, i32* %attackers, align 4
  br label %for.end

if.else:                                          ; preds = %for.body
  br label %while.cond

while.cond:                                       ; preds = %if.end26, %if.else
  %10 = load i32* %a_sq, align 4
  %idxprom9 = sext i32 %10 to i64
  %arrayidx10 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom9
  %11 = load i32* %arrayidx10, align 4
  %cmp11 = icmp ne i32 %11, 0
  br i1 %cmp11, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  %12 = load i32* %a_sq, align 4
  %idxprom12 = sext i32 %12 to i64
  %arrayidx13 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom12
  %13 = load i32* %arrayidx13, align 4
  %cmp14 = icmp eq i32 %13, 7
  br i1 %cmp14, label %if.then18, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %while.body
  %14 = load i32* %a_sq, align 4
  %idxprom15 = sext i32 %14 to i64
  %arrayidx16 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom15
  %15 = load i32* %arrayidx16, align 4
  %cmp17 = icmp eq i32 %15, 9
  br i1 %cmp17, label %if.then18, label %if.else20

if.then18:                                        ; preds = %lor.lhs.false, %while.body
  %16 = load i32* %attackers, align 4
  %inc19 = add nsw i32 %16, 1
  store i32 %inc19, i32* %attackers, align 4
  br label %while.end

if.else20:                                        ; preds = %lor.lhs.false
  %17 = load i32* %a_sq, align 4
  %idxprom21 = sext i32 %17 to i64
  %arrayidx22 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom21
  %18 = load i32* %arrayidx22, align 4
  %cmp23 = icmp ne i32 %18, 13
  br i1 %cmp23, label %if.then24, label %if.end25

if.then24:                                        ; preds = %if.else20
  br label %while.end

if.end25:                                         ; preds = %if.else20
  br label %if.end26

if.end26:                                         ; preds = %if.end25
  %19 = load i32* %i, align 4
  %idxprom27 = sext i32 %19 to i64
  %bitcast241 = bitcast [4 x i32]* @calc_attackers.rook_o to i8*
  %bitcast242 = bitcast [4 x i32]* getelementptr inbounds ([4 x i32]* @calc_attackers.rook_o, i32 1) to i8*
  %arrayidx28 = getelementptr inbounds [4 x i32]* @calc_attackers.rook_o, i32 0, i64 %idxprom27
  %20 = load i32* %arrayidx28, align 4
  %21 = load i32* %a_sq, align 4
  %add29 = add nsw i32 %21, %20
  store i32 %add29, i32* %a_sq, align 4
  br label %while.cond

while.end:                                        ; preds = %if.then24, %if.then18, %while.cond
  br label %if.end30

if.end30:                                         ; preds = %while.end
  br label %for.inc

for.inc:                                          ; preds = %if.end30
  %22 = load i32* %i, align 4
  %inc31 = add nsw i32 %22, 1
  store i32 %inc31, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %if.then8, %for.cond
  store i32 0, i32* %i, align 4
  br label %for.cond32

for.cond32:                                       ; preds = %for.inc79, %for.end
  %23 = load i32* %i, align 4
  %cmp33 = icmp slt i32 %23, 4
  br i1 %cmp33, label %for.body34, label %for.end81

for.body34:                                       ; preds = %for.cond32
  %24 = load i32* %square.addr, align 4
  %25 = load i32* %i, align 4
  %idxprom35 = sext i32 %25 to i64
  %bitcast231 = bitcast [4 x i32]* @calc_attackers.bishop_o to i8*
  %bitcast232 = bitcast [4 x i32]* getelementptr inbounds ([4 x i32]* @calc_attackers.bishop_o, i32 1) to i8*
  %arrayidx36 = getelementptr inbounds [4 x i32]* @calc_attackers.bishop_o, i32 0, i64 %idxprom35
  %26 = load i32* %arrayidx36, align 4
  %add37 = add nsw i32 %24, %26
  store i32 %add37, i32* %a_sq, align 4
  %27 = load i32* %a_sq, align 4
  %idxprom38 = sext i32 %27 to i64
  %arrayidx39 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom38
  %28 = load i32* %arrayidx39, align 4
  %cmp40 = icmp eq i32 %28, 1
  br i1 %cmp40, label %land.lhs.true, label %if.else45

land.lhs.true:                                    ; preds = %for.body34
  %29 = load i32* %i, align 4
  %rem41 = srem i32 %29, 2
  %tobool42 = icmp ne i32 %rem41, 0
  br i1 %tobool42, label %if.then43, label %if.else45

if.then43:                                        ; preds = %land.lhs.true
  %30 = load i32* %attackers, align 4
  %inc44 = add nsw i32 %30, 1
  store i32 %inc44, i32* %attackers, align 4
  br label %for.end81

if.else45:                                        ; preds = %land.lhs.true, %for.body34
  %31 = load i32* %a_sq, align 4
  %idxprom46 = sext i32 %31 to i64
  %arrayidx47 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom46
  %32 = load i32* %arrayidx47, align 4
  %cmp48 = icmp eq i32 %32, 5
  br i1 %cmp48, label %if.then49, label %if.else51

if.then49:                                        ; preds = %if.else45
  %33 = load i32* %attackers, align 4
  %inc50 = add nsw i32 %33, 1
  store i32 %inc50, i32* %attackers, align 4
  br label %for.end81

if.else51:                                        ; preds = %if.else45
  br label %while.cond52

while.cond52:                                     ; preds = %if.end72, %if.else51
  %34 = load i32* %a_sq, align 4
  %idxprom53 = sext i32 %34 to i64
  %arrayidx54 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom53
  %35 = load i32* %arrayidx54, align 4
  %cmp55 = icmp ne i32 %35, 0
  br i1 %cmp55, label %while.body56, label %while.end76

while.body56:                                     ; preds = %while.cond52
  %36 = load i32* %a_sq, align 4
  %idxprom57 = sext i32 %36 to i64
  %arrayidx58 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom57
  %37 = load i32* %arrayidx58, align 4
  %cmp59 = icmp eq i32 %37, 11
  br i1 %cmp59, label %if.then64, label %lor.lhs.false60

lor.lhs.false60:                                  ; preds = %while.body56
  %38 = load i32* %a_sq, align 4
  %idxprom61 = sext i32 %38 to i64
  %arrayidx62 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom61
  %39 = load i32* %arrayidx62, align 4
  %cmp63 = icmp eq i32 %39, 9
  br i1 %cmp63, label %if.then64, label %if.else66

if.then64:                                        ; preds = %lor.lhs.false60, %while.body56
  %40 = load i32* %attackers, align 4
  %inc65 = add nsw i32 %40, 1
  store i32 %inc65, i32* %attackers, align 4
  br label %while.end76

if.else66:                                        ; preds = %lor.lhs.false60
  %41 = load i32* %a_sq, align 4
  %idxprom67 = sext i32 %41 to i64
  %arrayidx68 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom67
  %42 = load i32* %arrayidx68, align 4
  %cmp69 = icmp ne i32 %42, 13
  br i1 %cmp69, label %if.then70, label %if.end71

if.then70:                                        ; preds = %if.else66
  br label %while.end76

if.end71:                                         ; preds = %if.else66
  br label %if.end72

if.end72:                                         ; preds = %if.end71
  %43 = load i32* %i, align 4
  %idxprom73 = sext i32 %43 to i64
  %bitcast243 = bitcast [4 x i32]* @calc_attackers.bishop_o to i8*
  %bitcast244 = bitcast [4 x i32]* getelementptr inbounds ([4 x i32]* @calc_attackers.bishop_o, i32 1) to i8*
  %arrayidx74 = getelementptr inbounds [4 x i32]* @calc_attackers.bishop_o, i32 0, i64 %idxprom73
  %44 = load i32* %arrayidx74, align 4
  %45 = load i32* %a_sq, align 4
  %add75 = add nsw i32 %45, %44
  store i32 %add75, i32* %a_sq, align 4
  br label %while.cond52

while.end76:                                      ; preds = %if.then70, %if.then64, %while.cond52
  br label %if.end77

if.end77:                                         ; preds = %while.end76
  br label %if.end78

if.end78:                                         ; preds = %if.end77
  br label %for.inc79

for.inc79:                                        ; preds = %if.end78
  %46 = load i32* %i, align 4
  %inc80 = add nsw i32 %46, 1
  store i32 %inc80, i32* %i, align 4
  br label %for.cond32

for.end81:                                        ; preds = %if.then49, %if.then43, %for.cond32
  store i32 0, i32* %i, align 4
  br label %for.cond82

for.cond82:                                       ; preds = %for.inc94, %for.end81
  %47 = load i32* %i, align 4
  %cmp83 = icmp slt i32 %47, 8
  br i1 %cmp83, label %for.body84, label %for.end96

for.body84:                                       ; preds = %for.cond82
  %48 = load i32* %square.addr, align 4
  %49 = load i32* %i, align 4
  %idxprom85 = sext i32 %49 to i64
  %bitcast235 = bitcast [8 x i32]* @calc_attackers.knight_o to i8*
  %bitcast236 = bitcast [8 x i32]* getelementptr inbounds ([8 x i32]* @calc_attackers.knight_o, i32 1) to i8*
  %arrayidx86 = getelementptr inbounds [8 x i32]* @calc_attackers.knight_o, i32 0, i64 %idxprom85
  %50 = load i32* %arrayidx86, align 4
  %add87 = add nsw i32 %48, %50
  store i32 %add87, i32* %a_sq, align 4
  %51 = load i32* %a_sq, align 4
  %idxprom88 = sext i32 %51 to i64
  %arrayidx89 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom88
  %52 = load i32* %arrayidx89, align 4
  %cmp90 = icmp eq i32 %52, 3
  br i1 %cmp90, label %if.then91, label %if.end93

if.then91:                                        ; preds = %for.body84
  %53 = load i32* %attackers, align 4
  %inc92 = add nsw i32 %53, 1
  store i32 %inc92, i32* %attackers, align 4
  br label %if.end93

if.end93:                                         ; preds = %if.then91, %for.body84
  br label %for.inc94

for.inc94:                                        ; preds = %if.end93
  %54 = load i32* %i, align 4
  %inc95 = add nsw i32 %54, 1
  store i32 %inc95, i32* %i, align 4
  br label %for.cond82

for.end96:                                        ; preds = %for.cond82
  br label %if.end204

if.else97:                                        ; preds = %if.end
  store i32 0, i32* %i, align 4
  br label %for.cond98

for.cond98:                                       ; preds = %for.inc135, %if.else97
  %55 = load i32* %i, align 4
  %cmp99 = icmp slt i32 %55, 4
  br i1 %cmp99, label %for.body100, label %for.end137

for.body100:                                      ; preds = %for.cond98
  %56 = load i32* %square.addr, align 4
  %57 = load i32* %i, align 4
  %idxprom101 = sext i32 %57 to i64
  %bitcast229 = bitcast [4 x i32]* @calc_attackers.rook_o to i8*
  %bitcast230 = bitcast [4 x i32]* getelementptr inbounds ([4 x i32]* @calc_attackers.rook_o, i32 1) to i8*
  %arrayidx102 = getelementptr inbounds [4 x i32]* @calc_attackers.rook_o, i32 0, i64 %idxprom101
  %58 = load i32* %arrayidx102, align 4
  %add103 = add nsw i32 %56, %58
  store i32 %add103, i32* %a_sq, align 4
  %59 = load i32* %a_sq, align 4
  %idxprom104 = sext i32 %59 to i64
  %arrayidx105 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom104
  %60 = load i32* %arrayidx105, align 4
  %cmp106 = icmp eq i32 %60, 6
  br i1 %cmp106, label %if.then107, label %if.else109

if.then107:                                       ; preds = %for.body100
  %61 = load i32* %attackers, align 4
  %inc108 = add nsw i32 %61, 1
  store i32 %inc108, i32* %attackers, align 4
  br label %for.end137

if.else109:                                       ; preds = %for.body100
  br label %while.cond110

while.cond110:                                    ; preds = %if.end129, %if.else109
  %62 = load i32* %a_sq, align 4
  %idxprom111 = sext i32 %62 to i64
  %arrayidx112 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom111
  %63 = load i32* %arrayidx112, align 4
  %cmp113 = icmp ne i32 %63, 0
  br i1 %cmp113, label %while.body114, label %while.end133

while.body114:                                    ; preds = %while.cond110
  %64 = load i32* %a_sq, align 4
  %idxprom115 = sext i32 %64 to i64
  %arrayidx116 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom115
  %65 = load i32* %arrayidx116, align 4
  %cmp117 = icmp eq i32 %65, 8
  br i1 %cmp117, label %if.then122, label %lor.lhs.false118

lor.lhs.false118:                                 ; preds = %while.body114
  %66 = load i32* %a_sq, align 4
  %idxprom119 = sext i32 %66 to i64
  %arrayidx120 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom119
  %67 = load i32* %arrayidx120, align 4
  %cmp121 = icmp eq i32 %67, 10
  br i1 %cmp121, label %if.then122, label %if.end124

if.then122:                                       ; preds = %lor.lhs.false118, %while.body114
  %68 = load i32* %attackers, align 4
  %inc123 = add nsw i32 %68, 1
  store i32 %inc123, i32* %attackers, align 4
  br label %while.end133

if.end124:                                        ; preds = %lor.lhs.false118
  %69 = load i32* %a_sq, align 4
  %idxprom125 = sext i32 %69 to i64
  %arrayidx126 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom125
  %70 = load i32* %arrayidx126, align 4
  %cmp127 = icmp ne i32 %70, 13
  br i1 %cmp127, label %if.then128, label %if.end129

if.then128:                                       ; preds = %if.end124
  br label %while.end133

if.end129:                                        ; preds = %if.end124
  %71 = load i32* %i, align 4
  %idxprom130 = sext i32 %71 to i64
  %bitcast239 = bitcast [4 x i32]* @calc_attackers.rook_o to i8*
  %bitcast240 = bitcast [4 x i32]* getelementptr inbounds ([4 x i32]* @calc_attackers.rook_o, i32 1) to i8*
  %arrayidx131 = getelementptr inbounds [4 x i32]* @calc_attackers.rook_o, i32 0, i64 %idxprom130
  %72 = load i32* %arrayidx131, align 4
  %73 = load i32* %a_sq, align 4
  %add132 = add nsw i32 %73, %72
  store i32 %add132, i32* %a_sq, align 4
  br label %while.cond110

while.end133:                                     ; preds = %if.then128, %if.then122, %while.cond110
  br label %if.end134

if.end134:                                        ; preds = %while.end133
  br label %for.inc135

for.inc135:                                       ; preds = %if.end134
  %74 = load i32* %i, align 4
  %inc136 = add nsw i32 %74, 1
  store i32 %inc136, i32* %i, align 4
  br label %for.cond98

for.end137:                                       ; preds = %if.then107, %for.cond98
  store i32 0, i32* %i, align 4
  br label %for.cond138

for.cond138:                                      ; preds = %for.inc186, %for.end137
  %75 = load i32* %i, align 4
  %cmp139 = icmp slt i32 %75, 4
  br i1 %cmp139, label %for.body140, label %for.end188

for.body140:                                      ; preds = %for.cond138
  %76 = load i32* %square.addr, align 4
  %77 = load i32* %i, align 4
  %idxprom141 = sext i32 %77 to i64
  %bitcast233 = bitcast [4 x i32]* @calc_attackers.bishop_o to i8*
  %bitcast234 = bitcast [4 x i32]* getelementptr inbounds ([4 x i32]* @calc_attackers.bishop_o, i32 1) to i8*
  %arrayidx142 = getelementptr inbounds [4 x i32]* @calc_attackers.bishop_o, i32 0, i64 %idxprom141
  %78 = load i32* %arrayidx142, align 4
  %add143 = add nsw i32 %76, %78
  store i32 %add143, i32* %a_sq, align 4
  %79 = load i32* %a_sq, align 4
  %idxprom144 = sext i32 %79 to i64
  %arrayidx145 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom144
  %80 = load i32* %arrayidx145, align 4
  %cmp146 = icmp eq i32 %80, 2
  br i1 %cmp146, label %land.lhs.true147, label %if.else152

land.lhs.true147:                                 ; preds = %for.body140
  %81 = load i32* %i, align 4
  %rem148 = srem i32 %81, 2
  %tobool149 = icmp ne i32 %rem148, 0
  br i1 %tobool149, label %if.else152, label %if.then150

if.then150:                                       ; preds = %land.lhs.true147
  %82 = load i32* %attackers, align 4
  %inc151 = add nsw i32 %82, 1
  store i32 %inc151, i32* %attackers, align 4
  br label %for.end188

if.else152:                                       ; preds = %land.lhs.true147, %for.body140
  %83 = load i32* %a_sq, align 4
  %idxprom153 = sext i32 %83 to i64
  %arrayidx154 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom153
  %84 = load i32* %arrayidx154, align 4
  %cmp155 = icmp eq i32 %84, 6
  br i1 %cmp155, label %if.then156, label %if.else158

if.then156:                                       ; preds = %if.else152
  %85 = load i32* %attackers, align 4
  %inc157 = add nsw i32 %85, 1
  store i32 %inc157, i32* %attackers, align 4
  br label %for.end188

if.else158:                                       ; preds = %if.else152
  br label %while.cond159

while.cond159:                                    ; preds = %if.end179, %if.else158
  %86 = load i32* %a_sq, align 4
  %idxprom160 = sext i32 %86 to i64
  %arrayidx161 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom160
  %87 = load i32* %arrayidx161, align 4
  %cmp162 = icmp ne i32 %87, 0
  br i1 %cmp162, label %while.body163, label %while.end183

while.body163:                                    ; preds = %while.cond159
  %88 = load i32* %a_sq, align 4
  %idxprom164 = sext i32 %88 to i64
  %arrayidx165 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom164
  %89 = load i32* %arrayidx165, align 4
  %cmp166 = icmp eq i32 %89, 12
  br i1 %cmp166, label %if.then171, label %lor.lhs.false167

lor.lhs.false167:                                 ; preds = %while.body163
  %90 = load i32* %a_sq, align 4
  %idxprom168 = sext i32 %90 to i64
  %arrayidx169 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom168
  %91 = load i32* %arrayidx169, align 4
  %cmp170 = icmp eq i32 %91, 10
  br i1 %cmp170, label %if.then171, label %if.else173

if.then171:                                       ; preds = %lor.lhs.false167, %while.body163
  %92 = load i32* %attackers, align 4
  %inc172 = add nsw i32 %92, 1
  store i32 %inc172, i32* %attackers, align 4
  br label %while.end183

if.else173:                                       ; preds = %lor.lhs.false167
  %93 = load i32* %a_sq, align 4
  %idxprom174 = sext i32 %93 to i64
  %arrayidx175 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom174
  %94 = load i32* %arrayidx175, align 4
  %cmp176 = icmp ne i32 %94, 13
  br i1 %cmp176, label %if.then177, label %if.end178

if.then177:                                       ; preds = %if.else173
  br label %while.end183

if.end178:                                        ; preds = %if.else173
  br label %if.end179

if.end179:                                        ; preds = %if.end178
  %95 = load i32* %i, align 4
  %idxprom180 = sext i32 %95 to i64
  %bitcast245 = bitcast [4 x i32]* @calc_attackers.bishop_o to i8*
  %bitcast246 = bitcast [4 x i32]* getelementptr inbounds ([4 x i32]* @calc_attackers.bishop_o, i32 1) to i8*
  %arrayidx181 = getelementptr inbounds [4 x i32]* @calc_attackers.bishop_o, i32 0, i64 %idxprom180
  %96 = load i32* %arrayidx181, align 4
  %97 = load i32* %a_sq, align 4
  %add182 = add nsw i32 %97, %96
  store i32 %add182, i32* %a_sq, align 4
  br label %while.cond159

while.end183:                                     ; preds = %if.then177, %if.then171, %while.cond159
  br label %if.end184

if.end184:                                        ; preds = %while.end183
  br label %if.end185

if.end185:                                        ; preds = %if.end184
  br label %for.inc186

for.inc186:                                       ; preds = %if.end185
  %98 = load i32* %i, align 4
  %inc187 = add nsw i32 %98, 1
  store i32 %inc187, i32* %i, align 4
  br label %for.cond138

for.end188:                                       ; preds = %if.then156, %if.then150, %for.cond138
  store i32 0, i32* %i, align 4
  br label %for.cond189

for.cond189:                                      ; preds = %for.inc201, %for.end188
  %99 = load i32* %i, align 4
  %cmp190 = icmp slt i32 %99, 8
  br i1 %cmp190, label %for.body191, label %for.end203

for.body191:                                      ; preds = %for.cond189
  %100 = load i32* %square.addr, align 4
  %101 = load i32* %i, align 4
  %idxprom192 = sext i32 %101 to i64
  %bitcast237 = bitcast [8 x i32]* @calc_attackers.knight_o to i8*
  %bitcast238 = bitcast [8 x i32]* getelementptr inbounds ([8 x i32]* @calc_attackers.knight_o, i32 1) to i8*
  %arrayidx193 = getelementptr inbounds [8 x i32]* @calc_attackers.knight_o, i32 0, i64 %idxprom192
  %102 = load i32* %arrayidx193, align 4
  %add194 = add nsw i32 %100, %102
  store i32 %add194, i32* %a_sq, align 4
  %103 = load i32* %a_sq, align 4
  %idxprom195 = sext i32 %103 to i64
  %arrayidx196 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom195
  %104 = load i32* %arrayidx196, align 4
  %cmp197 = icmp eq i32 %104, 4
  br i1 %cmp197, label %if.then198, label %if.end200

if.then198:                                       ; preds = %for.body191
  %105 = load i32* %attackers, align 4
  %inc199 = add nsw i32 %105, 1
  store i32 %inc199, i32* %attackers, align 4
  br label %if.end200

if.end200:                                        ; preds = %if.then198, %for.body191
  br label %for.inc201

for.inc201:                                       ; preds = %if.end200
  %106 = load i32* %i, align 4
  %inc202 = add nsw i32 %106, 1
  store i32 %inc202, i32* %i, align 4
  br label %for.cond189

for.end203:                                       ; preds = %for.cond189
  br label %if.end204

if.end204:                                        ; preds = %for.end203, %for.end96
  %107 = load i32* %attackers, align 4
  store i32 %107, i32* %retval
  br label %return

return:                                           ; preds = %if.end204, %if.then
  %108 = load i32* %retval
  ret i32 %108
}

; Function Attrs: nounwind uwtable
define internal i32 @is_attacked(i32 %square, i32 %color) #0 {
entry:
  %retval = alloca i32, align 4
  %retval144 = bitcast i32* %retval to i32*
  %bitcast = bitcast i32* %retval to i8*
  %mtmp = getelementptr i32* %retval144, i32 1
  %bitcast145 = bitcast i32* %mtmp to i8*
  %square.addr = alloca i32, align 4
  %square.addr146 = bitcast i32* %square.addr to i32*
  %bitcast147 = bitcast i32* %square.addr to i8*
  %mtmp148 = getelementptr i32* %square.addr146, i32 1
  %bitcast149 = bitcast i32* %mtmp148 to i8*
  %color.addr = alloca i32, align 4
  %color.addr150 = bitcast i32* %color.addr to i32*
  %bitcast151 = bitcast i32* %color.addr to i8*
  %mtmp152 = getelementptr i32* %color.addr150, i32 1
  %bitcast153 = bitcast i32* %mtmp152 to i8*
  %ndir = alloca i32, align 4
  %ndir154 = bitcast i32* %ndir to i32*
  %bitcast155 = bitcast i32* %ndir to i8*
  %mtmp156 = getelementptr i32* %ndir154, i32 1
  %bitcast157 = bitcast i32* %mtmp156 to i8*
  %a_sq = alloca i32, align 4
  %a_sq158 = bitcast i32* %a_sq to i32*
  %bitcast159 = bitcast i32* %a_sq to i8*
  %mtmp160 = getelementptr i32* %a_sq158, i32 1
  %bitcast161 = bitcast i32* %mtmp160 to i8*
  %basq = alloca i32, align 4
  %basq162 = bitcast i32* %basq to i32*
  %bitcast163 = bitcast i32* %basq to i8*
  %mtmp164 = getelementptr i32* %basq162, i32 1
  %bitcast165 = bitcast i32* %mtmp164 to i8*
  %i = alloca i32, align 4
  %i166 = bitcast i32* %i to i32*
  %bitcast167 = bitcast i32* %i to i8*
  %mtmp168 = getelementptr i32* %i166, i32 1
  %bitcast169 = bitcast i32* %mtmp168 to i8*
  store i32 %square, i32* %square.addr, align 4
  store i32 %color, i32* %color.addr, align 4
  %0 = load i32* %color.addr, align 4
  %and = and i32 %0, 1
  %tobool = icmp ne i32 %and, 0
  br i1 %tobool, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.then
  %1 = load i32* %i, align 4
  %cmp = icmp slt i32 %1, 4
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %2 = load i32* %i, align 4
  %idxprom = sext i32 %2 to i64
  %bitcast170 = bitcast [4 x i32]* @is_attacked.bishop_o to i8*
  %bitcast171 = bitcast [4 x i32]* getelementptr inbounds ([4 x i32]* @is_attacked.bishop_o, i32 1) to i8*
  %arrayidx = getelementptr inbounds [4 x i32]* @is_attacked.bishop_o, i32 0, i64 %idxprom
  %3 = load i32* %arrayidx, align 4
  store i32 %3, i32* %ndir, align 4
  %4 = load i32* %square.addr, align 4
  %5 = load i32* %ndir, align 4
  %add = add nsw i32 %4, %5
  store i32 %add, i32* %a_sq, align 4
  %6 = load i32* %a_sq, align 4
  %idxprom1 = sext i32 %6 to i64
  %arrayidx2 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom1
  %7 = load i32* %arrayidx2, align 4
  store i32 %7, i32* %basq, align 4
  %8 = load i32* %basq, align 4
  %cmp3 = icmp eq i32 %8, 1
  br i1 %cmp3, label %land.lhs.true, label %if.end

land.lhs.true:                                    ; preds = %for.body
  %9 = load i32* %i, align 4
  %and4 = and i32 %9, 1
  %tobool5 = icmp ne i32 %and4, 0
  br i1 %tobool5, label %if.then6, label %if.end

if.then6:                                         ; preds = %land.lhs.true
  store i32 1, i32* %retval
  br label %return

if.end:                                           ; preds = %land.lhs.true, %for.body
  %10 = load i32* %basq, align 4
  %cmp7 = icmp eq i32 %10, 5
  br i1 %cmp7, label %if.then8, label %if.end9

if.then8:                                         ; preds = %if.end
  store i32 1, i32* %retval
  br label %return

if.end9:                                          ; preds = %if.end
  br label %while.cond

while.cond:                                       ; preds = %if.end17, %if.end9
  %11 = load i32* %basq, align 4
  %cmp10 = icmp ne i32 %11, 0
  br i1 %cmp10, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  %12 = load i32* %basq, align 4
  %cmp11 = icmp eq i32 %12, 11
  br i1 %cmp11, label %if.then13, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %while.body
  %13 = load i32* %basq, align 4
  %cmp12 = icmp eq i32 %13, 9
  br i1 %cmp12, label %if.then13, label %if.end14

if.then13:                                        ; preds = %lor.lhs.false, %while.body
  store i32 1, i32* %retval
  br label %return

if.end14:                                         ; preds = %lor.lhs.false
  %14 = load i32* %basq, align 4
  %cmp15 = icmp ne i32 %14, 13
  br i1 %cmp15, label %if.then16, label %if.end17

if.then16:                                        ; preds = %if.end14
  br label %while.end

if.end17:                                         ; preds = %if.end14
  %15 = load i32* %ndir, align 4
  %16 = load i32* %a_sq, align 4
  %add18 = add nsw i32 %16, %15
  store i32 %add18, i32* %a_sq, align 4
  %17 = load i32* %a_sq, align 4
  %idxprom19 = sext i32 %17 to i64
  %arrayidx20 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom19
  %18 = load i32* %arrayidx20, align 4
  store i32 %18, i32* %basq, align 4
  br label %while.cond

while.end:                                        ; preds = %if.then16, %while.cond
  br label %for.inc

for.inc:                                          ; preds = %while.end
  %19 = load i32* %i, align 4
  %inc = add nsw i32 %19, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  store i32 0, i32* %i, align 4
  br label %for.cond21

for.cond21:                                       ; preds = %for.inc32, %for.end
  %20 = load i32* %i, align 4
  %cmp22 = icmp slt i32 %20, 8
  br i1 %cmp22, label %for.body23, label %for.end34

for.body23:                                       ; preds = %for.cond21
  %21 = load i32* %square.addr, align 4
  %22 = load i32* %i, align 4
  %idxprom24 = sext i32 %22 to i64
  %bitcast174 = bitcast [8 x i32]* @is_attacked.knight_o to i8*
  %bitcast175 = bitcast [8 x i32]* getelementptr inbounds ([8 x i32]* @is_attacked.knight_o, i32 1) to i8*
  %arrayidx25 = getelementptr inbounds [8 x i32]* @is_attacked.knight_o, i32 0, i64 %idxprom24
  %23 = load i32* %arrayidx25, align 4
  %add26 = add nsw i32 %21, %23
  %idxprom27 = sext i32 %add26 to i64
  %arrayidx28 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom27
  %24 = load i32* %arrayidx28, align 4
  %cmp29 = icmp eq i32 %24, 3
  br i1 %cmp29, label %if.then30, label %if.end31

if.then30:                                        ; preds = %for.body23
  store i32 1, i32* %retval
  br label %return

if.end31:                                         ; preds = %for.body23
  br label %for.inc32

for.inc32:                                        ; preds = %if.end31
  %25 = load i32* %i, align 4
  %inc33 = add nsw i32 %25, 1
  store i32 %inc33, i32* %i, align 4
  br label %for.cond21

for.end34:                                        ; preds = %for.cond21
  store i32 0, i32* %i, align 4
  br label %for.cond35

for.cond35:                                       ; preds = %for.inc61, %for.end34
  %26 = load i32* %i, align 4
  %cmp36 = icmp slt i32 %26, 4
  br i1 %cmp36, label %for.body37, label %for.end63

for.body37:                                       ; preds = %for.cond35
  %27 = load i32* %i, align 4
  %idxprom38 = sext i32 %27 to i64
  %bitcast178 = bitcast [4 x i32]* @is_attacked.rook_o to i8*
  %bitcast179 = bitcast [4 x i32]* getelementptr inbounds ([4 x i32]* @is_attacked.rook_o, i32 1) to i8*
  %arrayidx39 = getelementptr inbounds [4 x i32]* @is_attacked.rook_o, i32 0, i64 %idxprom38
  %28 = load i32* %arrayidx39, align 4
  store i32 %28, i32* %ndir, align 4
  %29 = load i32* %square.addr, align 4
  %30 = load i32* %ndir, align 4
  %add40 = add nsw i32 %29, %30
  store i32 %add40, i32* %a_sq, align 4
  %31 = load i32* %a_sq, align 4
  %idxprom41 = sext i32 %31 to i64
  %arrayidx42 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom41
  %32 = load i32* %arrayidx42, align 4
  store i32 %32, i32* %basq, align 4
  %33 = load i32* %basq, align 4
  %cmp43 = icmp eq i32 %33, 5
  br i1 %cmp43, label %if.then44, label %if.end45

if.then44:                                        ; preds = %for.body37
  store i32 1, i32* %retval
  br label %return

if.end45:                                         ; preds = %for.body37
  br label %while.cond46

while.cond46:                                     ; preds = %if.end56, %if.end45
  %34 = load i32* %basq, align 4
  %cmp47 = icmp ne i32 %34, 0
  br i1 %cmp47, label %while.body48, label %while.end60

while.body48:                                     ; preds = %while.cond46
  %35 = load i32* %basq, align 4
  %cmp49 = icmp eq i32 %35, 7
  br i1 %cmp49, label %if.then52, label %lor.lhs.false50

lor.lhs.false50:                                  ; preds = %while.body48
  %36 = load i32* %basq, align 4
  %cmp51 = icmp eq i32 %36, 9
  br i1 %cmp51, label %if.then52, label %if.end53

if.then52:                                        ; preds = %lor.lhs.false50, %while.body48
  store i32 1, i32* %retval
  br label %return

if.end53:                                         ; preds = %lor.lhs.false50
  %37 = load i32* %basq, align 4
  %cmp54 = icmp ne i32 %37, 13
  br i1 %cmp54, label %if.then55, label %if.end56

if.then55:                                        ; preds = %if.end53
  br label %while.end60

if.end56:                                         ; preds = %if.end53
  %38 = load i32* %ndir, align 4
  %39 = load i32* %a_sq, align 4
  %add57 = add nsw i32 %39, %38
  store i32 %add57, i32* %a_sq, align 4
  %40 = load i32* %a_sq, align 4
  %idxprom58 = sext i32 %40 to i64
  %arrayidx59 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom58
  %41 = load i32* %arrayidx59, align 4
  store i32 %41, i32* %basq, align 4
  br label %while.cond46

while.end60:                                      ; preds = %if.then55, %while.cond46
  br label %for.inc61

for.inc61:                                        ; preds = %while.end60
  %42 = load i32* %i, align 4
  %inc62 = add nsw i32 %42, 1
  store i32 %inc62, i32* %i, align 4
  br label %for.cond35

for.end63:                                        ; preds = %for.cond35
  store i32 0, i32* %retval
  br label %return

if.else:                                          ; preds = %entry
  store i32 0, i32* %i, align 4
  br label %for.cond64

for.cond64:                                       ; preds = %for.inc96, %if.else
  %43 = load i32* %i, align 4
  %cmp65 = icmp slt i32 %43, 4
  br i1 %cmp65, label %for.body66, label %for.end98

for.body66:                                       ; preds = %for.cond64
  %44 = load i32* %i, align 4
  %idxprom67 = sext i32 %44 to i64
  %bitcast172 = bitcast [4 x i32]* @is_attacked.bishop_o to i8*
  %bitcast173 = bitcast [4 x i32]* getelementptr inbounds ([4 x i32]* @is_attacked.bishop_o, i32 1) to i8*
  %arrayidx68 = getelementptr inbounds [4 x i32]* @is_attacked.bishop_o, i32 0, i64 %idxprom67
  %45 = load i32* %arrayidx68, align 4
  store i32 %45, i32* %ndir, align 4
  %46 = load i32* %square.addr, align 4
  %47 = load i32* %ndir, align 4
  %add69 = add nsw i32 %46, %47
  store i32 %add69, i32* %a_sq, align 4
  %48 = load i32* %a_sq, align 4
  %idxprom70 = sext i32 %48 to i64
  %arrayidx71 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom70
  %49 = load i32* %arrayidx71, align 4
  store i32 %49, i32* %basq, align 4
  %50 = load i32* %basq, align 4
  %cmp72 = icmp eq i32 %50, 2
  br i1 %cmp72, label %land.lhs.true73, label %if.end77

land.lhs.true73:                                  ; preds = %for.body66
  %51 = load i32* %i, align 4
  %and74 = and i32 %51, 1
  %tobool75 = icmp ne i32 %and74, 0
  br i1 %tobool75, label %if.end77, label %if.then76

if.then76:                                        ; preds = %land.lhs.true73
  store i32 1, i32* %retval
  br label %return

if.end77:                                         ; preds = %land.lhs.true73, %for.body66
  %52 = load i32* %basq, align 4
  %cmp78 = icmp eq i32 %52, 6
  br i1 %cmp78, label %if.then79, label %if.end80

if.then79:                                        ; preds = %if.end77
  store i32 1, i32* %retval
  br label %return

if.end80:                                         ; preds = %if.end77
  br label %while.cond81

while.cond81:                                     ; preds = %if.end91, %if.end80
  %53 = load i32* %basq, align 4
  %cmp82 = icmp ne i32 %53, 0
  br i1 %cmp82, label %while.body83, label %while.end95

while.body83:                                     ; preds = %while.cond81
  %54 = load i32* %basq, align 4
  %cmp84 = icmp eq i32 %54, 12
  br i1 %cmp84, label %if.then87, label %lor.lhs.false85

lor.lhs.false85:                                  ; preds = %while.body83
  %55 = load i32* %basq, align 4
  %cmp86 = icmp eq i32 %55, 10
  br i1 %cmp86, label %if.then87, label %if.end88

if.then87:                                        ; preds = %lor.lhs.false85, %while.body83
  store i32 1, i32* %retval
  br label %return

if.end88:                                         ; preds = %lor.lhs.false85
  %56 = load i32* %basq, align 4
  %cmp89 = icmp ne i32 %56, 13
  br i1 %cmp89, label %if.then90, label %if.end91

if.then90:                                        ; preds = %if.end88
  br label %while.end95

if.end91:                                         ; preds = %if.end88
  %57 = load i32* %ndir, align 4
  %58 = load i32* %a_sq, align 4
  %add92 = add nsw i32 %58, %57
  store i32 %add92, i32* %a_sq, align 4
  %59 = load i32* %a_sq, align 4
  %idxprom93 = sext i32 %59 to i64
  %arrayidx94 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom93
  %60 = load i32* %arrayidx94, align 4
  store i32 %60, i32* %basq, align 4
  br label %while.cond81

while.end95:                                      ; preds = %if.then90, %while.cond81
  br label %for.inc96

for.inc96:                                        ; preds = %while.end95
  %61 = load i32* %i, align 4
  %inc97 = add nsw i32 %61, 1
  store i32 %inc97, i32* %i, align 4
  br label %for.cond64

for.end98:                                        ; preds = %for.cond64
  store i32 0, i32* %i, align 4
  br label %for.cond99

for.cond99:                                       ; preds = %for.inc110, %for.end98
  %62 = load i32* %i, align 4
  %cmp100 = icmp slt i32 %62, 8
  br i1 %cmp100, label %for.body101, label %for.end112

for.body101:                                      ; preds = %for.cond99
  %63 = load i32* %square.addr, align 4
  %64 = load i32* %i, align 4
  %idxprom102 = sext i32 %64 to i64
  %bitcast176 = bitcast [8 x i32]* @is_attacked.knight_o to i8*
  %bitcast177 = bitcast [8 x i32]* getelementptr inbounds ([8 x i32]* @is_attacked.knight_o, i32 1) to i8*
  %arrayidx103 = getelementptr inbounds [8 x i32]* @is_attacked.knight_o, i32 0, i64 %idxprom102
  %65 = load i32* %arrayidx103, align 4
  %add104 = add nsw i32 %63, %65
  %idxprom105 = sext i32 %add104 to i64
  %arrayidx106 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom105
  %66 = load i32* %arrayidx106, align 4
  %cmp107 = icmp eq i32 %66, 4
  br i1 %cmp107, label %if.then108, label %if.end109

if.then108:                                       ; preds = %for.body101
  store i32 1, i32* %retval
  br label %return

if.end109:                                        ; preds = %for.body101
  br label %for.inc110

for.inc110:                                       ; preds = %if.end109
  %67 = load i32* %i, align 4
  %inc111 = add nsw i32 %67, 1
  store i32 %inc111, i32* %i, align 4
  br label %for.cond99

for.end112:                                       ; preds = %for.cond99
  store i32 0, i32* %i, align 4
  br label %for.cond113

for.cond113:                                      ; preds = %for.inc141, %for.end112
  %68 = load i32* %i, align 4
  %cmp114 = icmp slt i32 %68, 4
  br i1 %cmp114, label %for.body115, label %for.end143

for.body115:                                      ; preds = %for.cond113
  %69 = load i32* %i, align 4
  %idxprom116 = sext i32 %69 to i64
  %bitcast180 = bitcast [4 x i32]* @is_attacked.rook_o to i8*
  %bitcast181 = bitcast [4 x i32]* getelementptr inbounds ([4 x i32]* @is_attacked.rook_o, i32 1) to i8*
  %arrayidx117 = getelementptr inbounds [4 x i32]* @is_attacked.rook_o, i32 0, i64 %idxprom116
  %70 = load i32* %arrayidx117, align 4
  store i32 %70, i32* %ndir, align 4
  %71 = load i32* %square.addr, align 4
  %72 = load i32* %i, align 4
  %idxprom118 = sext i32 %72 to i64
  %bitcast182 = bitcast [4 x i32]* @is_attacked.rook_o to i8*
  %bitcast183 = bitcast [4 x i32]* getelementptr inbounds ([4 x i32]* @is_attacked.rook_o, i32 1) to i8*
  %arrayidx119 = getelementptr inbounds [4 x i32]* @is_attacked.rook_o, i32 0, i64 %idxprom118
  %73 = load i32* %arrayidx119, align 4
  %add120 = add nsw i32 %71, %73
  store i32 %add120, i32* %a_sq, align 4
  %74 = load i32* %a_sq, align 4
  %idxprom121 = sext i32 %74 to i64
  %arrayidx122 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom121
  %75 = load i32* %arrayidx122, align 4
  store i32 %75, i32* %basq, align 4
  %76 = load i32* %basq, align 4
  %cmp123 = icmp eq i32 %76, 6
  br i1 %cmp123, label %if.then124, label %if.end125

if.then124:                                       ; preds = %for.body115
  store i32 1, i32* %retval
  br label %return

if.end125:                                        ; preds = %for.body115
  br label %while.cond126

while.cond126:                                    ; preds = %if.end136, %if.end125
  %77 = load i32* %basq, align 4
  %cmp127 = icmp ne i32 %77, 0
  br i1 %cmp127, label %while.body128, label %while.end140

while.body128:                                    ; preds = %while.cond126
  %78 = load i32* %basq, align 4
  %cmp129 = icmp eq i32 %78, 8
  br i1 %cmp129, label %if.then132, label %lor.lhs.false130

lor.lhs.false130:                                 ; preds = %while.body128
  %79 = load i32* %basq, align 4
  %cmp131 = icmp eq i32 %79, 10
  br i1 %cmp131, label %if.then132, label %if.end133

if.then132:                                       ; preds = %lor.lhs.false130, %while.body128
  store i32 1, i32* %retval
  br label %return

if.end133:                                        ; preds = %lor.lhs.false130
  %80 = load i32* %basq, align 4
  %cmp134 = icmp ne i32 %80, 13
  br i1 %cmp134, label %if.then135, label %if.end136

if.then135:                                       ; preds = %if.end133
  br label %while.end140

if.end136:                                        ; preds = %if.end133
  %81 = load i32* %ndir, align 4
  %82 = load i32* %a_sq, align 4
  %add137 = add nsw i32 %82, %81
  store i32 %add137, i32* %a_sq, align 4
  %83 = load i32* %a_sq, align 4
  %idxprom138 = sext i32 %83 to i64
  %arrayidx139 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom138
  %84 = load i32* %arrayidx139, align 4
  store i32 %84, i32* %basq, align 4
  br label %while.cond126

while.end140:                                     ; preds = %if.then135, %while.cond126
  br label %for.inc141

for.inc141:                                       ; preds = %while.end140
  %85 = load i32* %i, align 4
  %inc142 = add nsw i32 %85, 1
  store i32 %inc142, i32* %i, align 4
  br label %for.cond113

for.end143:                                       ; preds = %for.cond113
  store i32 0, i32* %retval
  br label %return

return:                                           ; preds = %for.end143, %if.then132, %if.then124, %if.then108, %if.then87, %if.then79, %if.then76, %for.end63, %if.then52, %if.then44, %if.then30, %if.then13, %if.then8, %if.then6
  %86 = load i32* %retval
  ret i32 %86
}

; Function Attrs: nounwind uwtable
define internal i32 @nk_attacked(i32 %square, i32 %color) #0 {
entry:
  %retval = alloca i32, align 4
  %retval132 = bitcast i32* %retval to i32*
  %bitcast = bitcast i32* %retval to i8*
  %mtmp = getelementptr i32* %retval132, i32 1
  %bitcast133 = bitcast i32* %mtmp to i8*
  %square.addr = alloca i32, align 4
  %square.addr134 = bitcast i32* %square.addr to i32*
  %bitcast135 = bitcast i32* %square.addr to i8*
  %mtmp136 = getelementptr i32* %square.addr134, i32 1
  %bitcast137 = bitcast i32* %mtmp136 to i8*
  %color.addr = alloca i32, align 4
  %color.addr138 = bitcast i32* %color.addr to i32*
  %bitcast139 = bitcast i32* %color.addr to i8*
  %mtmp140 = getelementptr i32* %color.addr138, i32 1
  %bitcast141 = bitcast i32* %mtmp140 to i8*
  %ndir = alloca i32, align 4
  %ndir142 = bitcast i32* %ndir to i32*
  %bitcast143 = bitcast i32* %ndir to i8*
  %mtmp144 = getelementptr i32* %ndir142, i32 1
  %bitcast145 = bitcast i32* %mtmp144 to i8*
  %a_sq = alloca i32, align 4
  %a_sq146 = bitcast i32* %a_sq to i32*
  %bitcast147 = bitcast i32* %a_sq to i8*
  %mtmp148 = getelementptr i32* %a_sq146, i32 1
  %bitcast149 = bitcast i32* %mtmp148 to i8*
  %basq = alloca i32, align 4
  %basq150 = bitcast i32* %basq to i32*
  %bitcast151 = bitcast i32* %basq to i8*
  %mtmp152 = getelementptr i32* %basq150, i32 1
  %bitcast153 = bitcast i32* %mtmp152 to i8*
  %i = alloca i32, align 4
  %i154 = bitcast i32* %i to i32*
  %bitcast155 = bitcast i32* %i to i8*
  %mtmp156 = getelementptr i32* %i154, i32 1
  %bitcast157 = bitcast i32* %mtmp156 to i8*
  store i32 %square, i32* %square.addr, align 4
  store i32 %color, i32* %color.addr, align 4
  %0 = load i32* %color.addr, align 4
  %and = and i32 %0, 1
  %tobool = icmp ne i32 %and, 0
  br i1 %tobool, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.then
  %1 = load i32* %i, align 4
  %cmp = icmp slt i32 %1, 4
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %2 = load i32* %i, align 4
  %idxprom = sext i32 %2 to i64
  %bitcast158 = bitcast [4 x i32]* @nk_attacked.bishop_o to i8*
  %bitcast159 = bitcast [4 x i32]* getelementptr inbounds ([4 x i32]* @nk_attacked.bishop_o, i32 1) to i8*
  %arrayidx = getelementptr inbounds [4 x i32]* @nk_attacked.bishop_o, i32 0, i64 %idxprom
  %3 = load i32* %arrayidx, align 4
  store i32 %3, i32* %ndir, align 4
  %4 = load i32* %square.addr, align 4
  %5 = load i32* %ndir, align 4
  %add = add nsw i32 %4, %5
  store i32 %add, i32* %a_sq, align 4
  %6 = load i32* %a_sq, align 4
  %idxprom1 = sext i32 %6 to i64
  %arrayidx2 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom1
  %7 = load i32* %arrayidx2, align 4
  store i32 %7, i32* %basq, align 4
  %8 = load i32* %basq, align 4
  %cmp3 = icmp eq i32 %8, 1
  br i1 %cmp3, label %land.lhs.true, label %if.end

land.lhs.true:                                    ; preds = %for.body
  %9 = load i32* %i, align 4
  %and4 = and i32 %9, 1
  %tobool5 = icmp ne i32 %and4, 0
  br i1 %tobool5, label %if.then6, label %if.end

if.then6:                                         ; preds = %land.lhs.true
  store i32 1, i32* %retval
  br label %return

if.end:                                           ; preds = %land.lhs.true, %for.body
  br label %while.cond

while.cond:                                       ; preds = %if.end14, %if.end
  %10 = load i32* %basq, align 4
  %cmp7 = icmp ne i32 %10, 0
  br i1 %cmp7, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  %11 = load i32* %basq, align 4
  %cmp8 = icmp eq i32 %11, 11
  br i1 %cmp8, label %if.then10, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %while.body
  %12 = load i32* %basq, align 4
  %cmp9 = icmp eq i32 %12, 9
  br i1 %cmp9, label %if.then10, label %if.end11

if.then10:                                        ; preds = %lor.lhs.false, %while.body
  store i32 1, i32* %retval
  br label %return

if.end11:                                         ; preds = %lor.lhs.false
  %13 = load i32* %basq, align 4
  %cmp12 = icmp ne i32 %13, 13
  br i1 %cmp12, label %if.then13, label %if.end14

if.then13:                                        ; preds = %if.end11
  br label %while.end

if.end14:                                         ; preds = %if.end11
  %14 = load i32* %ndir, align 4
  %15 = load i32* %a_sq, align 4
  %add15 = add nsw i32 %15, %14
  store i32 %add15, i32* %a_sq, align 4
  %16 = load i32* %a_sq, align 4
  %idxprom16 = sext i32 %16 to i64
  %arrayidx17 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom16
  %17 = load i32* %arrayidx17, align 4
  store i32 %17, i32* %basq, align 4
  br label %while.cond

while.end:                                        ; preds = %if.then13, %while.cond
  br label %for.inc

for.inc:                                          ; preds = %while.end
  %18 = load i32* %i, align 4
  %inc = add nsw i32 %18, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  store i32 0, i32* %i, align 4
  br label %for.cond18

for.cond18:                                       ; preds = %for.inc29, %for.end
  %19 = load i32* %i, align 4
  %cmp19 = icmp slt i32 %19, 8
  br i1 %cmp19, label %for.body20, label %for.end31

for.body20:                                       ; preds = %for.cond18
  %20 = load i32* %square.addr, align 4
  %21 = load i32* %i, align 4
  %idxprom21 = sext i32 %21 to i64
  %bitcast162 = bitcast [8 x i32]* @nk_attacked.knight_o to i8*
  %bitcast163 = bitcast [8 x i32]* getelementptr inbounds ([8 x i32]* @nk_attacked.knight_o, i32 1) to i8*
  %arrayidx22 = getelementptr inbounds [8 x i32]* @nk_attacked.knight_o, i32 0, i64 %idxprom21
  %22 = load i32* %arrayidx22, align 4
  %add23 = add nsw i32 %20, %22
  %idxprom24 = sext i32 %add23 to i64
  %arrayidx25 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom24
  %23 = load i32* %arrayidx25, align 4
  %cmp26 = icmp eq i32 %23, 3
  br i1 %cmp26, label %if.then27, label %if.end28

if.then27:                                        ; preds = %for.body20
  store i32 1, i32* %retval
  br label %return

if.end28:                                         ; preds = %for.body20
  br label %for.inc29

for.inc29:                                        ; preds = %if.end28
  %24 = load i32* %i, align 4
  %inc30 = add nsw i32 %24, 1
  store i32 %inc30, i32* %i, align 4
  br label %for.cond18

for.end31:                                        ; preds = %for.cond18
  store i32 0, i32* %i, align 4
  br label %for.cond32

for.cond32:                                       ; preds = %for.inc55, %for.end31
  %25 = load i32* %i, align 4
  %cmp33 = icmp slt i32 %25, 4
  br i1 %cmp33, label %for.body34, label %for.end57

for.body34:                                       ; preds = %for.cond32
  %26 = load i32* %i, align 4
  %idxprom35 = sext i32 %26 to i64
  %bitcast166 = bitcast [4 x i32]* @nk_attacked.rook_o to i8*
  %bitcast167 = bitcast [4 x i32]* getelementptr inbounds ([4 x i32]* @nk_attacked.rook_o, i32 1) to i8*
  %arrayidx36 = getelementptr inbounds [4 x i32]* @nk_attacked.rook_o, i32 0, i64 %idxprom35
  %27 = load i32* %arrayidx36, align 4
  store i32 %27, i32* %ndir, align 4
  %28 = load i32* %square.addr, align 4
  %29 = load i32* %ndir, align 4
  %add37 = add nsw i32 %28, %29
  store i32 %add37, i32* %a_sq, align 4
  %30 = load i32* %a_sq, align 4
  %idxprom38 = sext i32 %30 to i64
  %arrayidx39 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom38
  %31 = load i32* %arrayidx39, align 4
  store i32 %31, i32* %basq, align 4
  br label %while.cond40

while.cond40:                                     ; preds = %if.end50, %for.body34
  %32 = load i32* %basq, align 4
  %cmp41 = icmp ne i32 %32, 0
  br i1 %cmp41, label %while.body42, label %while.end54

while.body42:                                     ; preds = %while.cond40
  %33 = load i32* %basq, align 4
  %cmp43 = icmp eq i32 %33, 7
  br i1 %cmp43, label %if.then46, label %lor.lhs.false44

lor.lhs.false44:                                  ; preds = %while.body42
  %34 = load i32* %basq, align 4
  %cmp45 = icmp eq i32 %34, 9
  br i1 %cmp45, label %if.then46, label %if.end47

if.then46:                                        ; preds = %lor.lhs.false44, %while.body42
  store i32 1, i32* %retval
  br label %return

if.end47:                                         ; preds = %lor.lhs.false44
  %35 = load i32* %basq, align 4
  %cmp48 = icmp ne i32 %35, 13
  br i1 %cmp48, label %if.then49, label %if.end50

if.then49:                                        ; preds = %if.end47
  br label %while.end54

if.end50:                                         ; preds = %if.end47
  %36 = load i32* %ndir, align 4
  %37 = load i32* %a_sq, align 4
  %add51 = add nsw i32 %37, %36
  store i32 %add51, i32* %a_sq, align 4
  %38 = load i32* %a_sq, align 4
  %idxprom52 = sext i32 %38 to i64
  %arrayidx53 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom52
  %39 = load i32* %arrayidx53, align 4
  store i32 %39, i32* %basq, align 4
  br label %while.cond40

while.end54:                                      ; preds = %if.then49, %while.cond40
  br label %for.inc55

for.inc55:                                        ; preds = %while.end54
  %40 = load i32* %i, align 4
  %inc56 = add nsw i32 %40, 1
  store i32 %inc56, i32* %i, align 4
  br label %for.cond32

for.end57:                                        ; preds = %for.cond32
  store i32 0, i32* %retval
  br label %return

if.else:                                          ; preds = %entry
  store i32 0, i32* %i, align 4
  br label %for.cond58

for.cond58:                                       ; preds = %for.inc87, %if.else
  %41 = load i32* %i, align 4
  %cmp59 = icmp slt i32 %41, 4
  br i1 %cmp59, label %for.body60, label %for.end89

for.body60:                                       ; preds = %for.cond58
  %42 = load i32* %i, align 4
  %idxprom61 = sext i32 %42 to i64
  %bitcast160 = bitcast [4 x i32]* @nk_attacked.bishop_o to i8*
  %bitcast161 = bitcast [4 x i32]* getelementptr inbounds ([4 x i32]* @nk_attacked.bishop_o, i32 1) to i8*
  %arrayidx62 = getelementptr inbounds [4 x i32]* @nk_attacked.bishop_o, i32 0, i64 %idxprom61
  %43 = load i32* %arrayidx62, align 4
  store i32 %43, i32* %ndir, align 4
  %44 = load i32* %square.addr, align 4
  %45 = load i32* %ndir, align 4
  %add63 = add nsw i32 %44, %45
  store i32 %add63, i32* %a_sq, align 4
  %46 = load i32* %a_sq, align 4
  %idxprom64 = sext i32 %46 to i64
  %arrayidx65 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom64
  %47 = load i32* %arrayidx65, align 4
  store i32 %47, i32* %basq, align 4
  %48 = load i32* %basq, align 4
  %cmp66 = icmp eq i32 %48, 2
  br i1 %cmp66, label %land.lhs.true67, label %if.end71

land.lhs.true67:                                  ; preds = %for.body60
  %49 = load i32* %i, align 4
  %and68 = and i32 %49, 1
  %tobool69 = icmp ne i32 %and68, 0
  br i1 %tobool69, label %if.end71, label %if.then70

if.then70:                                        ; preds = %land.lhs.true67
  store i32 1, i32* %retval
  br label %return

if.end71:                                         ; preds = %land.lhs.true67, %for.body60
  br label %while.cond72

while.cond72:                                     ; preds = %if.end82, %if.end71
  %50 = load i32* %basq, align 4
  %cmp73 = icmp ne i32 %50, 0
  br i1 %cmp73, label %while.body74, label %while.end86

while.body74:                                     ; preds = %while.cond72
  %51 = load i32* %basq, align 4
  %cmp75 = icmp eq i32 %51, 12
  br i1 %cmp75, label %if.then78, label %lor.lhs.false76

lor.lhs.false76:                                  ; preds = %while.body74
  %52 = load i32* %basq, align 4
  %cmp77 = icmp eq i32 %52, 10
  br i1 %cmp77, label %if.then78, label %if.end79

if.then78:                                        ; preds = %lor.lhs.false76, %while.body74
  store i32 1, i32* %retval
  br label %return

if.end79:                                         ; preds = %lor.lhs.false76
  %53 = load i32* %basq, align 4
  %cmp80 = icmp ne i32 %53, 13
  br i1 %cmp80, label %if.then81, label %if.end82

if.then81:                                        ; preds = %if.end79
  br label %while.end86

if.end82:                                         ; preds = %if.end79
  %54 = load i32* %ndir, align 4
  %55 = load i32* %a_sq, align 4
  %add83 = add nsw i32 %55, %54
  store i32 %add83, i32* %a_sq, align 4
  %56 = load i32* %a_sq, align 4
  %idxprom84 = sext i32 %56 to i64
  %arrayidx85 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom84
  %57 = load i32* %arrayidx85, align 4
  store i32 %57, i32* %basq, align 4
  br label %while.cond72

while.end86:                                      ; preds = %if.then81, %while.cond72
  br label %for.inc87

for.inc87:                                        ; preds = %while.end86
  %58 = load i32* %i, align 4
  %inc88 = add nsw i32 %58, 1
  store i32 %inc88, i32* %i, align 4
  br label %for.cond58

for.end89:                                        ; preds = %for.cond58
  store i32 0, i32* %i, align 4
  br label %for.cond90

for.cond90:                                       ; preds = %for.inc101, %for.end89
  %59 = load i32* %i, align 4
  %cmp91 = icmp slt i32 %59, 8
  br i1 %cmp91, label %for.body92, label %for.end103

for.body92:                                       ; preds = %for.cond90
  %60 = load i32* %square.addr, align 4
  %61 = load i32* %i, align 4
  %idxprom93 = sext i32 %61 to i64
  %bitcast164 = bitcast [8 x i32]* @nk_attacked.knight_o to i8*
  %bitcast165 = bitcast [8 x i32]* getelementptr inbounds ([8 x i32]* @nk_attacked.knight_o, i32 1) to i8*
  %arrayidx94 = getelementptr inbounds [8 x i32]* @nk_attacked.knight_o, i32 0, i64 %idxprom93
  %62 = load i32* %arrayidx94, align 4
  %add95 = add nsw i32 %60, %62
  %idxprom96 = sext i32 %add95 to i64
  %arrayidx97 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom96
  %63 = load i32* %arrayidx97, align 4
  %cmp98 = icmp eq i32 %63, 4
  br i1 %cmp98, label %if.then99, label %if.end100

if.then99:                                        ; preds = %for.body92
  store i32 1, i32* %retval
  br label %return

if.end100:                                        ; preds = %for.body92
  br label %for.inc101

for.inc101:                                       ; preds = %if.end100
  %64 = load i32* %i, align 4
  %inc102 = add nsw i32 %64, 1
  store i32 %inc102, i32* %i, align 4
  br label %for.cond90

for.end103:                                       ; preds = %for.cond90
  store i32 0, i32* %i, align 4
  br label %for.cond104

for.cond104:                                      ; preds = %for.inc129, %for.end103
  %65 = load i32* %i, align 4
  %cmp105 = icmp slt i32 %65, 4
  br i1 %cmp105, label %for.body106, label %for.end131

for.body106:                                      ; preds = %for.cond104
  %66 = load i32* %i, align 4
  %idxprom107 = sext i32 %66 to i64
  %bitcast168 = bitcast [4 x i32]* @nk_attacked.rook_o to i8*
  %bitcast169 = bitcast [4 x i32]* getelementptr inbounds ([4 x i32]* @nk_attacked.rook_o, i32 1) to i8*
  %arrayidx108 = getelementptr inbounds [4 x i32]* @nk_attacked.rook_o, i32 0, i64 %idxprom107
  %67 = load i32* %arrayidx108, align 4
  store i32 %67, i32* %ndir, align 4
  %68 = load i32* %square.addr, align 4
  %69 = load i32* %i, align 4
  %idxprom109 = sext i32 %69 to i64
  %bitcast170 = bitcast [4 x i32]* @nk_attacked.rook_o to i8*
  %bitcast171 = bitcast [4 x i32]* getelementptr inbounds ([4 x i32]* @nk_attacked.rook_o, i32 1) to i8*
  %arrayidx110 = getelementptr inbounds [4 x i32]* @nk_attacked.rook_o, i32 0, i64 %idxprom109
  %70 = load i32* %arrayidx110, align 4
  %add111 = add nsw i32 %68, %70
  store i32 %add111, i32* %a_sq, align 4
  %71 = load i32* %a_sq, align 4
  %idxprom112 = sext i32 %71 to i64
  %arrayidx113 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom112
  %72 = load i32* %arrayidx113, align 4
  store i32 %72, i32* %basq, align 4
  br label %while.cond114

while.cond114:                                    ; preds = %if.end124, %for.body106
  %73 = load i32* %basq, align 4
  %cmp115 = icmp ne i32 %73, 0
  br i1 %cmp115, label %while.body116, label %while.end128

while.body116:                                    ; preds = %while.cond114
  %74 = load i32* %basq, align 4
  %cmp117 = icmp eq i32 %74, 8
  br i1 %cmp117, label %if.then120, label %lor.lhs.false118

lor.lhs.false118:                                 ; preds = %while.body116
  %75 = load i32* %basq, align 4
  %cmp119 = icmp eq i32 %75, 10
  br i1 %cmp119, label %if.then120, label %if.end121

if.then120:                                       ; preds = %lor.lhs.false118, %while.body116
  store i32 1, i32* %retval
  br label %return

if.end121:                                        ; preds = %lor.lhs.false118
  %76 = load i32* %basq, align 4
  %cmp122 = icmp ne i32 %76, 13
  br i1 %cmp122, label %if.then123, label %if.end124

if.then123:                                       ; preds = %if.end121
  br label %while.end128

if.end124:                                        ; preds = %if.end121
  %77 = load i32* %ndir, align 4
  %78 = load i32* %a_sq, align 4
  %add125 = add nsw i32 %78, %77
  store i32 %add125, i32* %a_sq, align 4
  %79 = load i32* %a_sq, align 4
  %idxprom126 = sext i32 %79 to i64
  %arrayidx127 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom126
  %80 = load i32* %arrayidx127, align 4
  store i32 %80, i32* %basq, align 4
  br label %while.cond114

while.end128:                                     ; preds = %if.then123, %while.cond114
  br label %for.inc129

for.inc129:                                       ; preds = %while.end128
  %81 = load i32* %i, align 4
  %inc130 = add nsw i32 %81, 1
  store i32 %inc130, i32* %i, align 4
  br label %for.cond104

for.end131:                                       ; preds = %for.cond104
  store i32 0, i32* %retval
  br label %return

return:                                           ; preds = %for.end131, %if.then120, %if.then99, %if.then78, %if.then70, %for.end57, %if.then46, %if.then27, %if.then10, %if.then6
  %82 = load i32* %retval
  ret i32 %82
}

declare void @__softboundcets_spatial_load_dereference_check(i8*, i8*, i8*, i64)

declare void @__softboundcets_spatial_store_dereference_check(i8*, i8*, i8*, i64)

declare void @__softboundcets_init(i32)

declare void @__softboundcets_allocate_shadow_stack_space(i32)

declare void @__softboundcets_deallocate_shadow_stack_space()

declare i8* @__softboundcets_load_base_shadow_stack(i32)

declare i8* @__softboundcets_load_bound_shadow_stack(i32)

declare void @__softboundcets_store_base_shadow_stack(i8*, i32)

declare void @__softboundcets_store_bound_shadow_stack(i8*, i32)

declare void @__softboundcets_introspect_metadata(i8*, i8*, i32)

declare void @__softboundcets_copy_metadata(i8*, i8*, i64)

declare void @__softboundcets_metadata_load(i8*, i8**, i8**)

declare void @__softboundcets_metadata_store(i8*, i8*, i8*)

declare void @__softboundcets_memcopy_check(i8*, i8*, i64, i8*, i8*, i8*, i8*)

declare void @__softboundcets_memset_check(i8*, i64, i8*, i8*)

declare void @__softboundcets_metadata_load_vector(i8*, i8**, i8**, i32)

declare void @__softboundcets_metadata_store_vector(i8*, i8*, i8*, i32)

declare i8* @__softboundcets_get_global_lock()

declare void @__softboundcets_stack_memory_allocation(i8**, i64*)

declare void @__softboundcets_stack_memory_deallocation(i64)

declare void @__softboundcets_spatial_call_dereference_check(i8*, i8*, i8*)

declare void @__softboundcets_print_metadata(i8*, i8*, i8*, i64, i64*)

declare void @__softboundcets_dummy()

declare void @__softboundcets_intermediate(i1, i1, i1, i64)

; Function Attrs: nounwind uwtable
define internal i32 @init_book() #0 {
entry:
  ret i32 1
}

; Function Attrs: nounwind uwtable
define internal void @choose_book_move(%struct.move_s* noalias sret %agg.result) #0 {
entry:
  %0 = call i8* @__softboundcets_load_base_shadow_stack(i32 1)
  %1 = call i8* @__softboundcets_load_bound_shadow_stack(i32 1)
  %2 = bitcast %struct.move_s* %agg.result to i8*
  call void @__softboundcets_memcopy_check(i8* %2, i8* bitcast (%struct.move_s* @dummy to i8*), i64 24, i8* %0, i8* %1, i8* null, i8* inttoptr (i64 281474976710656 to i8*))
  call void @__softboundcets_copy_metadata(i8* %2, i8* bitcast (%struct.move_s* @dummy to i8*), i64 24)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %2, i8* bitcast (%struct.move_s* @dummy to i8*), i64 24, i32 4, i1 false)
  ret void
}

; Function Attrs: nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i32, i1) #1

; Function Attrs: nounwind uwtable
define internal void @ProcessHoldings(i8* %str) #0 {
entry:
  %base.alloca278 = alloca i8*
  %bound.alloca279 = alloca i8*
  %base.alloca273 = alloca i8*
  %bound.alloca274 = alloca i8*
  %base.alloca268 = alloca i8*
  %bound.alloca269 = alloca i8*
  %base.alloca263 = alloca i8*
  %bound.alloca264 = alloca i8*
  %base.alloca = alloca i8*
  %bound.alloca = alloca i8*
  %0 = call i8* @__softboundcets_load_base_shadow_stack(i32 1)
  %1 = call i8* @__softboundcets_load_bound_shadow_stack(i32 1)
  %str.addr = alloca i8*, align 8
  %str.addr251 = bitcast i8** %str.addr to i8**
  %bitcast = bitcast i8** %str.addr to i8*
  %mtmp = getelementptr i8** %str.addr251, i32 1
  %bitcast252 = bitcast i8** %mtmp to i8*
  %c = alloca i32, align 4
  %c253 = bitcast i32* %c to i32*
  %bitcast254 = bitcast i32* %c to i8*
  %mtmp255 = getelementptr i32* %c253, i32 1
  %bitcast256 = bitcast i32* %mtmp255 to i8*
  %i = alloca i32, align 4
  %i257 = bitcast i32* %i to i32*
  %bitcast258 = bitcast i32* %i to i8*
  %mtmp259 = getelementptr i32* %i257, i32 1
  %bitcast260 = bitcast i32* %mtmp259 to i8*
  store i8* %str, i8** %str.addr, align 8
  %bitcast312 = bitcast i8** %str.addr to i8*
  call void @__softboundcets_metadata_store(i8* %bitcast312, i8* %0, i8* %1)
  store i32 0, i32* %i, align 4
  call void @__softboundcets_memset_check(i8* bitcast ([2 x [16 x i32]]* @holding to i8*), i64 128, i8* bitcast ([2 x [16 x i32]]* @holding to i8*), i8* bitcast ([2 x [16 x i32]]* getelementptr inbounds ([2 x [16 x i32]]* @holding, i32 1) to i8*))
  call void @llvm.memset.p0i8.i64(i8* bitcast ([2 x [16 x i32]]* @holding to i8*), i8 0, i64 128, i32 16, i1 false)
  store i32 -1056969216, i32* @hold_hash, align 4
  store i32 0, i32* @white_hand_eval, align 4
  store i32 0, i32* @black_hand_eval, align 4
  call void @reset_ecache()
  store i32 0, i32* getelementptr inbounds ([2 x i32]* @num_holding, i32 0, i64 0), align 4
  store i32 0, i32* getelementptr inbounds ([2 x i32]* @num_holding, i32 0, i64 1), align 4
  store i32 0, i32* %c, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %2 = load i32* %c, align 4
  %cmp = icmp sle i32 %2, 1
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  br label %while.cond

while.cond:                                       ; preds = %if.end, %for.body
  %3 = load i32* %i, align 4
  %inc = add nsw i32 %3, 1
  store i32 %inc, i32* %i, align 4
  %idxprom = sext i32 %3 to i64
  %4 = load i8** %str.addr, align 8
  %bitcast261 = bitcast i8** %str.addr to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast261, i8** %base.alloca, i8** %bound.alloca)
  %base.load = load i8** %base.alloca
  %bound.load = load i8** %bound.alloca
  %arrayidx = getelementptr inbounds i8* %4, i64 %idxprom
  %5 = load i8* %arrayidx, align 1
  %conv = sext i8 %5 to i32
  %cmp1 = icmp ne i32 %conv, 91
  br i1 %cmp1, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  %6 = load i32* %i, align 4
  %idxprom3 = sext i32 %6 to i64
  %7 = load i8** %str.addr, align 8
  %bitcast262 = bitcast i8** %str.addr to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast262, i8** %base.alloca263, i8** %bound.alloca264)
  %base.load265 = load i8** %base.alloca263
  %bound.load266 = load i8** %bound.alloca264
  %arrayidx4 = getelementptr inbounds i8* %7, i64 %idxprom3
  %8 = load i8* %arrayidx4, align 1
  %conv5 = sext i8 %8 to i32
  %cmp6 = icmp eq i32 %conv5, 0
  br i1 %cmp6, label %if.then, label %if.end

if.then:                                          ; preds = %while.body
  br label %if.end250

if.end:                                           ; preds = %while.body
  br label %while.cond

while.end:                                        ; preds = %while.cond
  br label %while.cond8

while.cond8:                                      ; preds = %sw.epilog, %while.end
  %9 = load i32* %i, align 4
  %idxprom9 = sext i32 %9 to i64
  %10 = load i8** %str.addr, align 8
  %bitcast272 = bitcast i8** %str.addr to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast272, i8** %base.alloca273, i8** %bound.alloca274)
  %base.load275 = load i8** %base.alloca273
  %bound.load276 = load i8** %bound.alloca274
  %arrayidx10 = getelementptr inbounds i8* %10, i64 %idxprom9
  %11 = load i8* %arrayidx10, align 1
  %conv11 = sext i8 %11 to i32
  %cmp12 = icmp ne i32 %conv11, 93
  br i1 %cmp12, label %while.body14, label %while.end151

while.body14:                                     ; preds = %while.cond8
  %12 = load i32* %i, align 4
  %inc15 = add nsw i32 %12, 1
  store i32 %inc15, i32* %i, align 4
  %idxprom16 = sext i32 %12 to i64
  %13 = load i8** %str.addr, align 8
  %bitcast277 = bitcast i8** %str.addr to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast277, i8** %base.alloca278, i8** %bound.alloca279)
  %base.load280 = load i8** %base.alloca278
  %bound.load281 = load i8** %bound.alloca279
  %arrayidx17 = getelementptr inbounds i8* %13, i64 %idxprom16
  %14 = load i8* %arrayidx17, align 1
  %conv18 = sext i8 %14 to i32
  switch i32 %conv18, label %sw.default [
    i32 112, label %sw.bb
    i32 80, label %sw.bb
    i32 113, label %sw.bb43
    i32 81, label %sw.bb43
    i32 114, label %sw.bb70
    i32 82, label %sw.bb70
    i32 98, label %sw.bb97
    i32 66, label %sw.bb97
    i32 110, label %sw.bb124
    i32 78, label %sw.bb124
  ]

sw.bb:                                            ; preds = %while.body14, %while.body14
  %15 = load i32* %c, align 4
  %cmp19 = icmp eq i32 %15, 0
  %cond = select i1 %cmp19, i32 1, i32 2
  %idxprom21 = sext i32 %cond to i64
  %16 = load i32* %c, align 4
  %idxprom22 = sext i32 %16 to i64
  %bitcast282 = bitcast [2 x [16 x i32]]* @holding to i8*
  %bitcast283 = bitcast [2 x [16 x i32]]* getelementptr inbounds ([2 x [16 x i32]]* @holding, i32 1) to i8*
  %arrayidx23 = getelementptr inbounds [2 x [16 x i32]]* @holding, i32 0, i64 %idxprom22
  %arrayidx24 = getelementptr inbounds [16 x i32]* %arrayidx23, i32 0, i64 %idxprom21
  %17 = load i32* %arrayidx24, align 4
  %inc25 = add nsw i32 %17, 1
  store i32 %inc25, i32* %arrayidx24, align 4
  %18 = load i32* %c, align 4
  %idxprom26 = sext i32 %18 to i64
  %bitcast284 = bitcast [2 x i32]* @num_holding to i8*
  %bitcast285 = bitcast [2 x i32]* getelementptr inbounds ([2 x i32]* @num_holding, i32 1) to i8*
  %arrayidx27 = getelementptr inbounds [2 x i32]* @num_holding, i32 0, i64 %idxprom26
  %19 = load i32* %arrayidx27, align 4
  %inc28 = add nsw i32 %19, 1
  store i32 %inc28, i32* %arrayidx27, align 4
  %20 = load i32* %c, align 4
  %cmp29 = icmp eq i32 %20, 0
  %cond31 = select i1 %cmp29, i32 1, i32 2
  %idxprom32 = sext i32 %cond31 to i64
  %21 = load i32* %c, align 4
  %idxprom33 = sext i32 %21 to i64
  %bitcast286 = bitcast [2 x [16 x i32]]* @holding to i8*
  %bitcast287 = bitcast [2 x [16 x i32]]* getelementptr inbounds ([2 x [16 x i32]]* @holding, i32 1) to i8*
  %arrayidx34 = getelementptr inbounds [2 x [16 x i32]]* @holding, i32 0, i64 %idxprom33
  %arrayidx35 = getelementptr inbounds [16 x i32]* %arrayidx34, i32 0, i64 %idxprom32
  %22 = load i32* %arrayidx35, align 4
  %idxprom36 = sext i32 %22 to i64
  %23 = load i32* %c, align 4
  %cmp37 = icmp eq i32 %23, 0
  %cond39 = select i1 %cmp37, i32 1, i32 2
  %idxprom40 = sext i32 %cond39 to i64
  %arrayidx41 = getelementptr inbounds [14 x [144 x i32]]* @zobrist, i32 0, i64 %idxprom40
  %arrayidx42 = getelementptr inbounds [144 x i32]* %arrayidx41, i32 0, i64 %idxprom36
  %24 = load i32* %arrayidx42, align 4
  %25 = load i32* @hold_hash, align 4
  %xor = xor i32 %25, %24
  store i32 %xor, i32* @hold_hash, align 4
  br label %sw.epilog

sw.bb43:                                          ; preds = %while.body14, %while.body14
  %26 = load i32* %c, align 4
  %cmp44 = icmp eq i32 %26, 0
  %cond46 = select i1 %cmp44, i32 9, i32 10
  %idxprom47 = sext i32 %cond46 to i64
  %27 = load i32* %c, align 4
  %idxprom48 = sext i32 %27 to i64
  %bitcast288 = bitcast [2 x [16 x i32]]* @holding to i8*
  %bitcast289 = bitcast [2 x [16 x i32]]* getelementptr inbounds ([2 x [16 x i32]]* @holding, i32 1) to i8*
  %arrayidx49 = getelementptr inbounds [2 x [16 x i32]]* @holding, i32 0, i64 %idxprom48
  %arrayidx50 = getelementptr inbounds [16 x i32]* %arrayidx49, i32 0, i64 %idxprom47
  %28 = load i32* %arrayidx50, align 4
  %inc51 = add nsw i32 %28, 1
  store i32 %inc51, i32* %arrayidx50, align 4
  %29 = load i32* %c, align 4
  %idxprom52 = sext i32 %29 to i64
  %bitcast290 = bitcast [2 x i32]* @num_holding to i8*
  %bitcast291 = bitcast [2 x i32]* getelementptr inbounds ([2 x i32]* @num_holding, i32 1) to i8*
  %arrayidx53 = getelementptr inbounds [2 x i32]* @num_holding, i32 0, i64 %idxprom52
  %30 = load i32* %arrayidx53, align 4
  %inc54 = add nsw i32 %30, 1
  store i32 %inc54, i32* %arrayidx53, align 4
  %31 = load i32* %c, align 4
  %cmp55 = icmp eq i32 %31, 0
  %cond57 = select i1 %cmp55, i32 9, i32 10
  %idxprom58 = sext i32 %cond57 to i64
  %32 = load i32* %c, align 4
  %idxprom59 = sext i32 %32 to i64
  %bitcast292 = bitcast [2 x [16 x i32]]* @holding to i8*
  %bitcast293 = bitcast [2 x [16 x i32]]* getelementptr inbounds ([2 x [16 x i32]]* @holding, i32 1) to i8*
  %arrayidx60 = getelementptr inbounds [2 x [16 x i32]]* @holding, i32 0, i64 %idxprom59
  %arrayidx61 = getelementptr inbounds [16 x i32]* %arrayidx60, i32 0, i64 %idxprom58
  %33 = load i32* %arrayidx61, align 4
  %idxprom62 = sext i32 %33 to i64
  %34 = load i32* %c, align 4
  %cmp63 = icmp eq i32 %34, 0
  %cond65 = select i1 %cmp63, i32 9, i32 10
  %idxprom66 = sext i32 %cond65 to i64
  %arrayidx67 = getelementptr inbounds [14 x [144 x i32]]* @zobrist, i32 0, i64 %idxprom66
  %arrayidx68 = getelementptr inbounds [144 x i32]* %arrayidx67, i32 0, i64 %idxprom62
  %35 = load i32* %arrayidx68, align 4
  %36 = load i32* @hold_hash, align 4
  %xor69 = xor i32 %36, %35
  store i32 %xor69, i32* @hold_hash, align 4
  br label %sw.epilog

sw.bb70:                                          ; preds = %while.body14, %while.body14
  %37 = load i32* %c, align 4
  %cmp71 = icmp eq i32 %37, 0
  %cond73 = select i1 %cmp71, i32 7, i32 8
  %idxprom74 = sext i32 %cond73 to i64
  %38 = load i32* %c, align 4
  %idxprom75 = sext i32 %38 to i64
  %bitcast294 = bitcast [2 x [16 x i32]]* @holding to i8*
  %bitcast295 = bitcast [2 x [16 x i32]]* getelementptr inbounds ([2 x [16 x i32]]* @holding, i32 1) to i8*
  %arrayidx76 = getelementptr inbounds [2 x [16 x i32]]* @holding, i32 0, i64 %idxprom75
  %arrayidx77 = getelementptr inbounds [16 x i32]* %arrayidx76, i32 0, i64 %idxprom74
  %39 = load i32* %arrayidx77, align 4
  %inc78 = add nsw i32 %39, 1
  store i32 %inc78, i32* %arrayidx77, align 4
  %40 = load i32* %c, align 4
  %idxprom79 = sext i32 %40 to i64
  %bitcast296 = bitcast [2 x i32]* @num_holding to i8*
  %bitcast297 = bitcast [2 x i32]* getelementptr inbounds ([2 x i32]* @num_holding, i32 1) to i8*
  %arrayidx80 = getelementptr inbounds [2 x i32]* @num_holding, i32 0, i64 %idxprom79
  %41 = load i32* %arrayidx80, align 4
  %inc81 = add nsw i32 %41, 1
  store i32 %inc81, i32* %arrayidx80, align 4
  %42 = load i32* %c, align 4
  %cmp82 = icmp eq i32 %42, 0
  %cond84 = select i1 %cmp82, i32 7, i32 8
  %idxprom85 = sext i32 %cond84 to i64
  %43 = load i32* %c, align 4
  %idxprom86 = sext i32 %43 to i64
  %bitcast298 = bitcast [2 x [16 x i32]]* @holding to i8*
  %bitcast299 = bitcast [2 x [16 x i32]]* getelementptr inbounds ([2 x [16 x i32]]* @holding, i32 1) to i8*
  %arrayidx87 = getelementptr inbounds [2 x [16 x i32]]* @holding, i32 0, i64 %idxprom86
  %arrayidx88 = getelementptr inbounds [16 x i32]* %arrayidx87, i32 0, i64 %idxprom85
  %44 = load i32* %arrayidx88, align 4
  %idxprom89 = sext i32 %44 to i64
  %45 = load i32* %c, align 4
  %cmp90 = icmp eq i32 %45, 0
  %cond92 = select i1 %cmp90, i32 7, i32 8
  %idxprom93 = sext i32 %cond92 to i64
  %arrayidx94 = getelementptr inbounds [14 x [144 x i32]]* @zobrist, i32 0, i64 %idxprom93
  %arrayidx95 = getelementptr inbounds [144 x i32]* %arrayidx94, i32 0, i64 %idxprom89
  %46 = load i32* %arrayidx95, align 4
  %47 = load i32* @hold_hash, align 4
  %xor96 = xor i32 %47, %46
  store i32 %xor96, i32* @hold_hash, align 4
  br label %sw.epilog

sw.bb97:                                          ; preds = %while.body14, %while.body14
  %48 = load i32* %c, align 4
  %cmp98 = icmp eq i32 %48, 0
  %cond100 = select i1 %cmp98, i32 11, i32 12
  %idxprom101 = sext i32 %cond100 to i64
  %49 = load i32* %c, align 4
  %idxprom102 = sext i32 %49 to i64
  %bitcast300 = bitcast [2 x [16 x i32]]* @holding to i8*
  %bitcast301 = bitcast [2 x [16 x i32]]* getelementptr inbounds ([2 x [16 x i32]]* @holding, i32 1) to i8*
  %arrayidx103 = getelementptr inbounds [2 x [16 x i32]]* @holding, i32 0, i64 %idxprom102
  %arrayidx104 = getelementptr inbounds [16 x i32]* %arrayidx103, i32 0, i64 %idxprom101
  %50 = load i32* %arrayidx104, align 4
  %inc105 = add nsw i32 %50, 1
  store i32 %inc105, i32* %arrayidx104, align 4
  %51 = load i32* %c, align 4
  %idxprom106 = sext i32 %51 to i64
  %bitcast302 = bitcast [2 x i32]* @num_holding to i8*
  %bitcast303 = bitcast [2 x i32]* getelementptr inbounds ([2 x i32]* @num_holding, i32 1) to i8*
  %arrayidx107 = getelementptr inbounds [2 x i32]* @num_holding, i32 0, i64 %idxprom106
  %52 = load i32* %arrayidx107, align 4
  %inc108 = add nsw i32 %52, 1
  store i32 %inc108, i32* %arrayidx107, align 4
  %53 = load i32* %c, align 4
  %cmp109 = icmp eq i32 %53, 0
  %cond111 = select i1 %cmp109, i32 11, i32 12
  %idxprom112 = sext i32 %cond111 to i64
  %54 = load i32* %c, align 4
  %idxprom113 = sext i32 %54 to i64
  %bitcast304 = bitcast [2 x [16 x i32]]* @holding to i8*
  %bitcast305 = bitcast [2 x [16 x i32]]* getelementptr inbounds ([2 x [16 x i32]]* @holding, i32 1) to i8*
  %arrayidx114 = getelementptr inbounds [2 x [16 x i32]]* @holding, i32 0, i64 %idxprom113
  %arrayidx115 = getelementptr inbounds [16 x i32]* %arrayidx114, i32 0, i64 %idxprom112
  %55 = load i32* %arrayidx115, align 4
  %idxprom116 = sext i32 %55 to i64
  %56 = load i32* %c, align 4
  %cmp117 = icmp eq i32 %56, 0
  %cond119 = select i1 %cmp117, i32 11, i32 12
  %idxprom120 = sext i32 %cond119 to i64
  %arrayidx121 = getelementptr inbounds [14 x [144 x i32]]* @zobrist, i32 0, i64 %idxprom120
  %arrayidx122 = getelementptr inbounds [144 x i32]* %arrayidx121, i32 0, i64 %idxprom116
  %57 = load i32* %arrayidx122, align 4
  %58 = load i32* @hold_hash, align 4
  %xor123 = xor i32 %58, %57
  store i32 %xor123, i32* @hold_hash, align 4
  br label %sw.epilog

sw.bb124:                                         ; preds = %while.body14, %while.body14
  %59 = load i32* %c, align 4
  %cmp125 = icmp eq i32 %59, 0
  %cond127 = select i1 %cmp125, i32 3, i32 4
  %idxprom128 = sext i32 %cond127 to i64
  %60 = load i32* %c, align 4
  %idxprom129 = sext i32 %60 to i64
  %bitcast306 = bitcast [2 x [16 x i32]]* @holding to i8*
  %bitcast307 = bitcast [2 x [16 x i32]]* getelementptr inbounds ([2 x [16 x i32]]* @holding, i32 1) to i8*
  %arrayidx130 = getelementptr inbounds [2 x [16 x i32]]* @holding, i32 0, i64 %idxprom129
  %arrayidx131 = getelementptr inbounds [16 x i32]* %arrayidx130, i32 0, i64 %idxprom128
  %61 = load i32* %arrayidx131, align 4
  %inc132 = add nsw i32 %61, 1
  store i32 %inc132, i32* %arrayidx131, align 4
  %62 = load i32* %c, align 4
  %idxprom133 = sext i32 %62 to i64
  %bitcast308 = bitcast [2 x i32]* @num_holding to i8*
  %bitcast309 = bitcast [2 x i32]* getelementptr inbounds ([2 x i32]* @num_holding, i32 1) to i8*
  %arrayidx134 = getelementptr inbounds [2 x i32]* @num_holding, i32 0, i64 %idxprom133
  %63 = load i32* %arrayidx134, align 4
  %inc135 = add nsw i32 %63, 1
  store i32 %inc135, i32* %arrayidx134, align 4
  %64 = load i32* %c, align 4
  %cmp136 = icmp eq i32 %64, 0
  %cond138 = select i1 %cmp136, i32 3, i32 4
  %idxprom139 = sext i32 %cond138 to i64
  %65 = load i32* %c, align 4
  %idxprom140 = sext i32 %65 to i64
  %bitcast310 = bitcast [2 x [16 x i32]]* @holding to i8*
  %bitcast311 = bitcast [2 x [16 x i32]]* getelementptr inbounds ([2 x [16 x i32]]* @holding, i32 1) to i8*
  %arrayidx141 = getelementptr inbounds [2 x [16 x i32]]* @holding, i32 0, i64 %idxprom140
  %arrayidx142 = getelementptr inbounds [16 x i32]* %arrayidx141, i32 0, i64 %idxprom139
  %66 = load i32* %arrayidx142, align 4
  %idxprom143 = sext i32 %66 to i64
  %67 = load i32* %c, align 4
  %cmp144 = icmp eq i32 %67, 0
  %cond146 = select i1 %cmp144, i32 3, i32 4
  %idxprom147 = sext i32 %cond146 to i64
  %arrayidx148 = getelementptr inbounds [14 x [144 x i32]]* @zobrist, i32 0, i64 %idxprom147
  %arrayidx149 = getelementptr inbounds [144 x i32]* %arrayidx148, i32 0, i64 %idxprom143
  %68 = load i32* %arrayidx149, align 4
  %69 = load i32* @hold_hash, align 4
  %xor150 = xor i32 %69, %68
  store i32 %xor150, i32* @hold_hash, align 4
  br label %sw.epilog

sw.default:                                       ; preds = %while.body14
  br label %if.end250

sw.epilog:                                        ; preds = %sw.bb124, %sw.bb97, %sw.bb70, %sw.bb43, %sw.bb
  br label %while.cond8

while.end151:                                     ; preds = %while.cond8
  br label %for.inc

for.inc:                                          ; preds = %while.end151
  %70 = load i32* %c, align 4
  %inc152 = add nsw i32 %70, 1
  store i32 %inc152, i32* %c, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %71 = load i32* @Variant, align 4
  %cmp153 = icmp eq i32 %71, 1
  br i1 %cmp153, label %land.lhs.true, label %if.end250

land.lhs.true:                                    ; preds = %for.end
  %72 = load i32* @userealholdings, align 4
  %tobool = icmp ne i32 %72, 0
  br i1 %tobool, label %if.end250, label %if.then155

if.then155:                                       ; preds = %land.lhs.true
  %73 = load i8** %str.addr, align 8
  %bitcast267 = bitcast i8** %str.addr to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast267, i8** %base.alloca268, i8** %bound.alloca269)
  %base.load270 = load i8** %base.alloca268
  %bound.load271 = load i8** %bound.alloca269
  call void @__softboundcets_allocate_shadow_stack_space(i32 3)
  call void @__softboundcets_store_base_shadow_stack(i8* getelementptr inbounds ([255 x i8]* @realholdings, i32 0, i32 0), i32 1)
  call void @__softboundcets_store_bound_shadow_stack(i8* getelementptr inbounds ([255 x i8]* @realholdings, i32 1, i32 0), i32 1)
  call void @__softboundcets_store_base_shadow_stack(i8* %base.load270, i32 2)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bound.load271, i32 2)
  %call = call i8* @softboundcets_strncpy(i8* getelementptr inbounds ([255 x i8]* @realholdings, i32 0, i32 0), i8* %73, i64 200) #1
  %74 = call i8* @__softboundcets_load_base_shadow_stack(i32 0)
  %75 = call i8* @__softboundcets_load_bound_shadow_stack(i32 0)
  call void @__softboundcets_deallocate_shadow_stack_space()
  %76 = load i32* @comp_color, align 4
  %cmp156 = icmp eq i32 %76, 1
  br i1 %cmp156, label %if.then158, label %if.else

if.then158:                                       ; preds = %if.then155
  %77 = load i32* getelementptr inbounds ([2 x [16 x i32]]* @holding, i32 0, i64 1, i64 2), align 4
  %cmp159 = icmp eq i32 %77, 0
  br i1 %cmp159, label %if.then161, label %if.end167

if.then161:                                       ; preds = %if.then158
  %78 = load i32* getelementptr inbounds ([2 x [16 x i32]]* @holding, i32 0, i64 1, i64 2), align 4
  %inc162 = add nsw i32 %78, 1
  store i32 %inc162, i32* getelementptr inbounds ([2 x [16 x i32]]* @holding, i32 0, i64 1, i64 2), align 4
  %79 = load i32* getelementptr inbounds ([2 x i32]* @num_holding, i32 0, i64 1), align 4
  %inc163 = add nsw i32 %79, 1
  store i32 %inc163, i32* getelementptr inbounds ([2 x i32]* @num_holding, i32 0, i64 1), align 4
  %80 = load i32* getelementptr inbounds ([2 x [16 x i32]]* @holding, i32 0, i64 1, i64 2), align 4
  %idxprom164 = sext i32 %80 to i64
  %arrayidx165 = getelementptr inbounds [144 x i32]* getelementptr inbounds ([14 x [144 x i32]]* @zobrist, i32 0, i64 2), i32 0, i64 %idxprom164
  %81 = load i32* %arrayidx165, align 4
  %82 = load i32* @hold_hash, align 4
  %xor166 = xor i32 %82, %81
  store i32 %xor166, i32* @hold_hash, align 4
  br label %if.end167

if.end167:                                        ; preds = %if.then161, %if.then158
  %83 = load i32* getelementptr inbounds ([2 x [16 x i32]]* @holding, i32 0, i64 1, i64 12), align 4
  %cmp168 = icmp eq i32 %83, 0
  br i1 %cmp168, label %if.then170, label %if.end176

if.then170:                                       ; preds = %if.end167
  %84 = load i32* getelementptr inbounds ([2 x [16 x i32]]* @holding, i32 0, i64 1, i64 12), align 4
  %inc171 = add nsw i32 %84, 1
  store i32 %inc171, i32* getelementptr inbounds ([2 x [16 x i32]]* @holding, i32 0, i64 1, i64 12), align 4
  %85 = load i32* getelementptr inbounds ([2 x i32]* @num_holding, i32 0, i64 1), align 4
  %inc172 = add nsw i32 %85, 1
  store i32 %inc172, i32* getelementptr inbounds ([2 x i32]* @num_holding, i32 0, i64 1), align 4
  %86 = load i32* getelementptr inbounds ([2 x [16 x i32]]* @holding, i32 0, i64 1, i64 12), align 4
  %idxprom173 = sext i32 %86 to i64
  %arrayidx174 = getelementptr inbounds [144 x i32]* getelementptr inbounds ([14 x [144 x i32]]* @zobrist, i32 0, i64 2), i32 0, i64 %idxprom173
  %87 = load i32* %arrayidx174, align 4
  %88 = load i32* @hold_hash, align 4
  %xor175 = xor i32 %88, %87
  store i32 %xor175, i32* @hold_hash, align 4
  br label %if.end176

if.end176:                                        ; preds = %if.then170, %if.end167
  %89 = load i32* getelementptr inbounds ([2 x [16 x i32]]* @holding, i32 0, i64 1, i64 4), align 4
  %cmp177 = icmp eq i32 %89, 0
  br i1 %cmp177, label %if.then179, label %if.end185

if.then179:                                       ; preds = %if.end176
  %90 = load i32* getelementptr inbounds ([2 x [16 x i32]]* @holding, i32 0, i64 1, i64 4), align 4
  %inc180 = add nsw i32 %90, 1
  store i32 %inc180, i32* getelementptr inbounds ([2 x [16 x i32]]* @holding, i32 0, i64 1, i64 4), align 4
  %91 = load i32* getelementptr inbounds ([2 x i32]* @num_holding, i32 0, i64 1), align 4
  %inc181 = add nsw i32 %91, 1
  store i32 %inc181, i32* getelementptr inbounds ([2 x i32]* @num_holding, i32 0, i64 1), align 4
  %92 = load i32* getelementptr inbounds ([2 x [16 x i32]]* @holding, i32 0, i64 1, i64 4), align 4
  %idxprom182 = sext i32 %92 to i64
  %arrayidx183 = getelementptr inbounds [144 x i32]* getelementptr inbounds ([14 x [144 x i32]]* @zobrist, i32 0, i64 4), i32 0, i64 %idxprom182
  %93 = load i32* %arrayidx183, align 4
  %94 = load i32* @hold_hash, align 4
  %xor184 = xor i32 %94, %93
  store i32 %xor184, i32* @hold_hash, align 4
  br label %if.end185

if.end185:                                        ; preds = %if.then179, %if.end176
  %95 = load i32* getelementptr inbounds ([2 x [16 x i32]]* @holding, i32 0, i64 1, i64 8), align 4
  %cmp186 = icmp eq i32 %95, 0
  br i1 %cmp186, label %if.then188, label %if.end194

if.then188:                                       ; preds = %if.end185
  %96 = load i32* getelementptr inbounds ([2 x [16 x i32]]* @holding, i32 0, i64 1, i64 8), align 4
  %inc189 = add nsw i32 %96, 1
  store i32 %inc189, i32* getelementptr inbounds ([2 x [16 x i32]]* @holding, i32 0, i64 1, i64 8), align 4
  %97 = load i32* getelementptr inbounds ([2 x i32]* @num_holding, i32 0, i64 1), align 4
  %inc190 = add nsw i32 %97, 1
  store i32 %inc190, i32* getelementptr inbounds ([2 x i32]* @num_holding, i32 0, i64 1), align 4
  %98 = load i32* getelementptr inbounds ([2 x [16 x i32]]* @holding, i32 0, i64 1, i64 8), align 4
  %idxprom191 = sext i32 %98 to i64
  %arrayidx192 = getelementptr inbounds [144 x i32]* getelementptr inbounds ([14 x [144 x i32]]* @zobrist, i32 0, i64 4), i32 0, i64 %idxprom191
  %99 = load i32* %arrayidx192, align 4
  %100 = load i32* @hold_hash, align 4
  %xor193 = xor i32 %100, %99
  store i32 %xor193, i32* @hold_hash, align 4
  br label %if.end194

if.end194:                                        ; preds = %if.then188, %if.end185
  %101 = load i32* getelementptr inbounds ([2 x [16 x i32]]* @holding, i32 0, i64 1, i64 10), align 4
  %cmp195 = icmp eq i32 %101, 0
  br i1 %cmp195, label %if.then197, label %if.end203

if.then197:                                       ; preds = %if.end194
  %102 = load i32* getelementptr inbounds ([2 x [16 x i32]]* @holding, i32 0, i64 1, i64 10), align 4
  %inc198 = add nsw i32 %102, 1
  store i32 %inc198, i32* getelementptr inbounds ([2 x [16 x i32]]* @holding, i32 0, i64 1, i64 10), align 4
  %103 = load i32* getelementptr inbounds ([2 x i32]* @num_holding, i32 0, i64 1), align 4
  %inc199 = add nsw i32 %103, 1
  store i32 %inc199, i32* getelementptr inbounds ([2 x i32]* @num_holding, i32 0, i64 1), align 4
  %104 = load i32* getelementptr inbounds ([2 x [16 x i32]]* @holding, i32 0, i64 1, i64 10), align 4
  %idxprom200 = sext i32 %104 to i64
  %arrayidx201 = getelementptr inbounds [144 x i32]* getelementptr inbounds ([14 x [144 x i32]]* @zobrist, i32 0, i64 4), i32 0, i64 %idxprom200
  %105 = load i32* %arrayidx201, align 4
  %106 = load i32* @hold_hash, align 4
  %xor202 = xor i32 %106, %105
  store i32 %xor202, i32* @hold_hash, align 4
  br label %if.end203

if.end203:                                        ; preds = %if.then197, %if.end194
  br label %if.end249

if.else:                                          ; preds = %if.then155
  %107 = load i32* getelementptr inbounds ([2 x [16 x i32]]* @holding, i32 0, i64 0, i64 9), align 4
  %cmp204 = icmp eq i32 %107, 0
  br i1 %cmp204, label %if.then206, label %if.end212

if.then206:                                       ; preds = %if.else
  %108 = load i32* getelementptr inbounds ([2 x [16 x i32]]* @holding, i32 0, i64 0, i64 9), align 4
  %inc207 = add nsw i32 %108, 1
  store i32 %inc207, i32* getelementptr inbounds ([2 x [16 x i32]]* @holding, i32 0, i64 0, i64 9), align 4
  %109 = load i32* getelementptr inbounds ([2 x i32]* @num_holding, i32 0, i64 0), align 4
  %inc208 = add nsw i32 %109, 1
  store i32 %inc208, i32* getelementptr inbounds ([2 x i32]* @num_holding, i32 0, i64 0), align 4
  %110 = load i32* getelementptr inbounds ([2 x [16 x i32]]* @holding, i32 0, i64 0, i64 9), align 4
  %idxprom209 = sext i32 %110 to i64
  %arrayidx210 = getelementptr inbounds [144 x i32]* getelementptr inbounds ([14 x [144 x i32]]* @zobrist, i32 0, i64 9), i32 0, i64 %idxprom209
  %111 = load i32* %arrayidx210, align 4
  %112 = load i32* @hold_hash, align 4
  %xor211 = xor i32 %112, %111
  store i32 %xor211, i32* @hold_hash, align 4
  br label %if.end212

if.end212:                                        ; preds = %if.then206, %if.else
  %113 = load i32* getelementptr inbounds ([2 x [16 x i32]]* @holding, i32 0, i64 0, i64 7), align 4
  %cmp213 = icmp eq i32 %113, 0
  br i1 %cmp213, label %if.then215, label %if.end221

if.then215:                                       ; preds = %if.end212
  %114 = load i32* getelementptr inbounds ([2 x [16 x i32]]* @holding, i32 0, i64 0, i64 7), align 4
  %inc216 = add nsw i32 %114, 1
  store i32 %inc216, i32* getelementptr inbounds ([2 x [16 x i32]]* @holding, i32 0, i64 0, i64 7), align 4
  %115 = load i32* getelementptr inbounds ([2 x i32]* @num_holding, i32 0, i64 0), align 4
  %inc217 = add nsw i32 %115, 1
  store i32 %inc217, i32* getelementptr inbounds ([2 x i32]* @num_holding, i32 0, i64 0), align 4
  %116 = load i32* getelementptr inbounds ([2 x [16 x i32]]* @holding, i32 0, i64 0, i64 7), align 4
  %idxprom218 = sext i32 %116 to i64
  %arrayidx219 = getelementptr inbounds [144 x i32]* getelementptr inbounds ([14 x [144 x i32]]* @zobrist, i32 0, i64 9), i32 0, i64 %idxprom218
  %117 = load i32* %arrayidx219, align 4
  %118 = load i32* @hold_hash, align 4
  %xor220 = xor i32 %118, %117
  store i32 %xor220, i32* @hold_hash, align 4
  br label %if.end221

if.end221:                                        ; preds = %if.then215, %if.end212
  %119 = load i32* getelementptr inbounds ([2 x [16 x i32]]* @holding, i32 0, i64 0, i64 11), align 4
  %cmp222 = icmp eq i32 %119, 0
  br i1 %cmp222, label %if.then224, label %if.end230

if.then224:                                       ; preds = %if.end221
  %120 = load i32* getelementptr inbounds ([2 x [16 x i32]]* @holding, i32 0, i64 0, i64 11), align 4
  %inc225 = add nsw i32 %120, 1
  store i32 %inc225, i32* getelementptr inbounds ([2 x [16 x i32]]* @holding, i32 0, i64 0, i64 11), align 4
  %121 = load i32* getelementptr inbounds ([2 x i32]* @num_holding, i32 0, i64 0), align 4
  %inc226 = add nsw i32 %121, 1
  store i32 %inc226, i32* getelementptr inbounds ([2 x i32]* @num_holding, i32 0, i64 0), align 4
  %122 = load i32* getelementptr inbounds ([2 x [16 x i32]]* @holding, i32 0, i64 0, i64 11), align 4
  %idxprom227 = sext i32 %122 to i64
  %arrayidx228 = getelementptr inbounds [144 x i32]* getelementptr inbounds ([14 x [144 x i32]]* @zobrist, i32 0, i64 9), i32 0, i64 %idxprom227
  %123 = load i32* %arrayidx228, align 4
  %124 = load i32* @hold_hash, align 4
  %xor229 = xor i32 %124, %123
  store i32 %xor229, i32* @hold_hash, align 4
  br label %if.end230

if.end230:                                        ; preds = %if.then224, %if.end221
  %125 = load i32* getelementptr inbounds ([2 x [16 x i32]]* @holding, i32 0, i64 0, i64 3), align 4
  %cmp231 = icmp eq i32 %125, 0
  br i1 %cmp231, label %if.then233, label %if.end239

if.then233:                                       ; preds = %if.end230
  %126 = load i32* getelementptr inbounds ([2 x [16 x i32]]* @holding, i32 0, i64 0, i64 3), align 4
  %inc234 = add nsw i32 %126, 1
  store i32 %inc234, i32* getelementptr inbounds ([2 x [16 x i32]]* @holding, i32 0, i64 0, i64 3), align 4
  %127 = load i32* getelementptr inbounds ([2 x i32]* @num_holding, i32 0, i64 0), align 4
  %inc235 = add nsw i32 %127, 1
  store i32 %inc235, i32* getelementptr inbounds ([2 x i32]* @num_holding, i32 0, i64 0), align 4
  %128 = load i32* getelementptr inbounds ([2 x [16 x i32]]* @holding, i32 0, i64 0, i64 3), align 4
  %idxprom236 = sext i32 %128 to i64
  %arrayidx237 = getelementptr inbounds [144 x i32]* getelementptr inbounds ([14 x [144 x i32]]* @zobrist, i32 0, i64 9), i32 0, i64 %idxprom236
  %129 = load i32* %arrayidx237, align 4
  %130 = load i32* @hold_hash, align 4
  %xor238 = xor i32 %130, %129
  store i32 %xor238, i32* @hold_hash, align 4
  br label %if.end239

if.end239:                                        ; preds = %if.then233, %if.end230
  %131 = load i32* getelementptr inbounds ([2 x [16 x i32]]* @holding, i32 0, i64 0, i64 1), align 4
  %cmp240 = icmp eq i32 %131, 0
  br i1 %cmp240, label %if.then242, label %if.end248

if.then242:                                       ; preds = %if.end239
  %132 = load i32* getelementptr inbounds ([2 x [16 x i32]]* @holding, i32 0, i64 0, i64 1), align 4
  %inc243 = add nsw i32 %132, 1
  store i32 %inc243, i32* getelementptr inbounds ([2 x [16 x i32]]* @holding, i32 0, i64 0, i64 1), align 4
  %133 = load i32* getelementptr inbounds ([2 x i32]* @num_holding, i32 0, i64 0), align 4
  %inc244 = add nsw i32 %133, 1
  store i32 %inc244, i32* getelementptr inbounds ([2 x i32]* @num_holding, i32 0, i64 0), align 4
  %134 = load i32* getelementptr inbounds ([2 x [16 x i32]]* @holding, i32 0, i64 0, i64 1), align 4
  %idxprom245 = sext i32 %134 to i64
  %arrayidx246 = getelementptr inbounds [144 x i32]* getelementptr inbounds ([14 x [144 x i32]]* @zobrist, i32 0, i64 9), i32 0, i64 %idxprom245
  %135 = load i32* %arrayidx246, align 4
  %136 = load i32* @hold_hash, align 4
  %xor247 = xor i32 %136, %135
  store i32 %xor247, i32* @hold_hash, align 4
  br label %if.end248

if.end248:                                        ; preds = %if.then242, %if.end239
  br label %if.end249

if.end249:                                        ; preds = %if.end248, %if.end203
  br label %if.end250

if.end250:                                        ; preds = %if.end249, %land.lhs.true, %for.end, %sw.default, %if.then
  ret void
}

; Function Attrs: nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture, i8, i64, i32, i1) #1

declare i8* @softboundcets_strncpy(i8*, i8*, i64)

; Function Attrs: nounwind uwtable
define internal i32 @text_to_piece(i8 signext %txt, i32 %who) #0 {
entry:
  %retval = alloca i32, align 4
  %retval18 = bitcast i32* %retval to i32*
  %bitcast = bitcast i32* %retval to i8*
  %mtmp = getelementptr i32* %retval18, i32 1
  %bitcast19 = bitcast i32* %mtmp to i8*
  %txt.addr = alloca i8, align 1
  %txt.addr20 = bitcast i8* %txt.addr to i8*
  %mtmp21 = getelementptr i8* %txt.addr20, i32 1
  %who.addr = alloca i32, align 4
  %who.addr22 = bitcast i32* %who.addr to i32*
  %bitcast23 = bitcast i32* %who.addr to i8*
  %mtmp24 = getelementptr i32* %who.addr22, i32 1
  %bitcast25 = bitcast i32* %mtmp24 to i8*
  store i8 %txt, i8* %txt.addr, align 1
  store i32 %who, i32* %who.addr, align 4
  %0 = load i8* %txt.addr, align 1
  %conv = sext i8 %0 to i32
  switch i32 %conv, label %sw.epilog [
    i32 112, label %sw.bb
    i32 80, label %sw.bb
    i32 98, label %sw.bb2
    i32 66, label %sw.bb2
    i32 110, label %sw.bb6
    i32 78, label %sw.bb6
    i32 114, label %sw.bb10
    i32 82, label %sw.bb10
    i32 113, label %sw.bb14
    i32 81, label %sw.bb14
  ]

sw.bb:                                            ; preds = %entry, %entry
  %1 = load i32* %who.addr, align 4
  %cmp = icmp eq i32 %1, 0
  %cond = select i1 %cmp, i32 1, i32 2
  store i32 %cond, i32* %retval
  br label %return

sw.bb2:                                           ; preds = %entry, %entry
  %2 = load i32* %who.addr, align 4
  %cmp3 = icmp eq i32 %2, 0
  %cond5 = select i1 %cmp3, i32 11, i32 12
  store i32 %cond5, i32* %retval
  br label %return

sw.bb6:                                           ; preds = %entry, %entry
  %3 = load i32* %who.addr, align 4
  %cmp7 = icmp eq i32 %3, 0
  %cond9 = select i1 %cmp7, i32 3, i32 4
  store i32 %cond9, i32* %retval
  br label %return

sw.bb10:                                          ; preds = %entry, %entry
  %4 = load i32* %who.addr, align 4
  %cmp11 = icmp eq i32 %4, 0
  %cond13 = select i1 %cmp11, i32 7, i32 8
  store i32 %cond13, i32* %retval
  br label %return

sw.bb14:                                          ; preds = %entry, %entry
  %5 = load i32* %who.addr, align 4
  %cmp15 = icmp eq i32 %5, 0
  %cond17 = select i1 %cmp15, i32 9, i32 10
  store i32 %cond17, i32* %retval
  br label %return

sw.epilog:                                        ; preds = %entry
  store i32 13, i32* %retval
  br label %return

return:                                           ; preds = %sw.epilog, %sw.bb14, %sw.bb10, %sw.bb6, %sw.bb2, %sw.bb
  %6 = load i32* %retval
  ret i32 %6
}

; Function Attrs: nounwind uwtable
define internal i32 @SwitchColor(i32 %piece) #0 {
entry:
  %piece.addr = alloca i32, align 4
  %piece.addr1 = bitcast i32* %piece.addr to i32*
  %bitcast = bitcast i32* %piece.addr to i8*
  %mtmp = getelementptr i32* %piece.addr1, i32 1
  %bitcast2 = bitcast i32* %mtmp to i8*
  %t = alloca [13 x i32], align 16
  %t3 = bitcast [13 x i32]* %t to [13 x i32]*
  %bitcast4 = bitcast [13 x i32]* %t to i8*
  %mtmp5 = getelementptr [13 x i32]* %t3, i32 1
  %bitcast6 = bitcast [13 x i32]* %mtmp5 to i8*
  store i32 %piece, i32* %piece.addr, align 4
  %0 = bitcast [13 x i32]* %t to i8*
  call void @__softboundcets_memcopy_check(i8* %0, i8* bitcast ([13 x i32]* @SwitchColor.t to i8*), i64 52, i8* %bitcast4, i8* %bitcast6, i8* bitcast ([13 x i32]* @SwitchColor.t to i8*), i8* bitcast ([13 x i32]* getelementptr inbounds ([13 x i32]* @SwitchColor.t, i32 1) to i8*))
  call void @__softboundcets_copy_metadata(i8* %0, i8* bitcast ([13 x i32]* @SwitchColor.t to i8*), i64 52)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %0, i8* bitcast ([13 x i32]* @SwitchColor.t to i8*), i64 52, i32 16, i1 false)
  %1 = load i32* %piece.addr, align 4
  %idxprom = sext i32 %1 to i64
  %arrayidx = getelementptr inbounds [13 x i32]* %t, i32 0, i64 %idxprom
  %2 = load i32* %arrayidx, align 4
  ret i32 %2
}

; Function Attrs: nounwind uwtable
define internal i32 @SwitchPromoted(i32 %piece) #0 {
entry:
  %piece.addr = alloca i32, align 4
  %piece.addr1 = bitcast i32* %piece.addr to i32*
  %bitcast = bitcast i32* %piece.addr to i8*
  %mtmp = getelementptr i32* %piece.addr1, i32 1
  %bitcast2 = bitcast i32* %mtmp to i8*
  %t = alloca [13 x i32], align 16
  %t3 = bitcast [13 x i32]* %t to [13 x i32]*
  %bitcast4 = bitcast [13 x i32]* %t to i8*
  %mtmp5 = getelementptr [13 x i32]* %t3, i32 1
  %bitcast6 = bitcast [13 x i32]* %mtmp5 to i8*
  store i32 %piece, i32* %piece.addr, align 4
  %0 = bitcast [13 x i32]* %t to i8*
  call void @__softboundcets_memcopy_check(i8* %0, i8* bitcast ([13 x i32]* @SwitchPromoted.t to i8*), i64 52, i8* %bitcast4, i8* %bitcast6, i8* bitcast ([13 x i32]* @SwitchPromoted.t to i8*), i8* bitcast ([13 x i32]* getelementptr inbounds ([13 x i32]* @SwitchPromoted.t, i32 1) to i8*))
  call void @__softboundcets_copy_metadata(i8* %0, i8* bitcast ([13 x i32]* @SwitchPromoted.t to i8*), i64 52)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %0, i8* bitcast ([13 x i32]* @SwitchPromoted.t to i8*), i64 52, i32 16, i1 false)
  %1 = load i32* %piece.addr, align 4
  %idxprom = sext i32 %1 to i64
  %arrayidx = getelementptr inbounds [13 x i32]* %t, i32 0, i64 %idxprom
  %2 = load i32* %arrayidx, align 4
  ret i32 %2
}

; Function Attrs: nounwind uwtable
define internal void @addHolding(i32 %what, i32 %who) #0 {
entry:
  %what.addr = alloca i32, align 4
  %what.addr25 = bitcast i32* %what.addr to i32*
  %bitcast = bitcast i32* %what.addr to i8*
  %mtmp = getelementptr i32* %what.addr25, i32 1
  %bitcast26 = bitcast i32* %mtmp to i8*
  %who.addr = alloca i32, align 4
  %who.addr27 = bitcast i32* %who.addr to i32*
  %bitcast28 = bitcast i32* %who.addr to i8*
  %mtmp29 = getelementptr i32* %who.addr27, i32 1
  %bitcast30 = bitcast i32* %mtmp29 to i8*
  store i32 %what, i32* %what.addr, align 4
  store i32 %who, i32* %who.addr, align 4
  %0 = load i32* @Variant, align 4
  %cmp = icmp eq i32 %0, 0
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %1 = load i32* %what.addr, align 4
  %idxprom = sext i32 %1 to i64
  %2 = load i32* %who.addr, align 4
  %idxprom1 = sext i32 %2 to i64
  %bitcast31 = bitcast [2 x [16 x i32]]* @holding to i8*
  %bitcast32 = bitcast [2 x [16 x i32]]* getelementptr inbounds ([2 x [16 x i32]]* @holding, i32 1) to i8*
  %arrayidx = getelementptr inbounds [2 x [16 x i32]]* @holding, i32 0, i64 %idxprom1
  %arrayidx2 = getelementptr inbounds [16 x i32]* %arrayidx, i32 0, i64 %idxprom
  %3 = load i32* %arrayidx2, align 4
  %inc = add nsw i32 %3, 1
  store i32 %inc, i32* %arrayidx2, align 4
  %4 = load i32* %who.addr, align 4
  %idxprom3 = sext i32 %4 to i64
  %bitcast33 = bitcast [2 x i32]* @num_holding to i8*
  %bitcast34 = bitcast [2 x i32]* getelementptr inbounds ([2 x i32]* @num_holding, i32 1) to i8*
  %arrayidx4 = getelementptr inbounds [2 x i32]* @num_holding, i32 0, i64 %idxprom3
  %5 = load i32* %arrayidx4, align 4
  %inc5 = add nsw i32 %5, 1
  store i32 %inc5, i32* %arrayidx4, align 4
  %6 = load i32* %what.addr, align 4
  %idxprom6 = sext i32 %6 to i64
  %7 = load i32* %who.addr, align 4
  %idxprom7 = sext i32 %7 to i64
  %bitcast35 = bitcast [2 x [16 x i32]]* @holding to i8*
  %bitcast36 = bitcast [2 x [16 x i32]]* getelementptr inbounds ([2 x [16 x i32]]* @holding, i32 1) to i8*
  %arrayidx8 = getelementptr inbounds [2 x [16 x i32]]* @holding, i32 0, i64 %idxprom7
  %arrayidx9 = getelementptr inbounds [16 x i32]* %arrayidx8, i32 0, i64 %idxprom6
  %8 = load i32* %arrayidx9, align 4
  %idxprom10 = sext i32 %8 to i64
  %9 = load i32* %what.addr, align 4
  %idxprom11 = sext i32 %9 to i64
  %arrayidx12 = getelementptr inbounds [14 x [144 x i32]]* @zobrist, i32 0, i64 %idxprom11
  %arrayidx13 = getelementptr inbounds [144 x i32]* %arrayidx12, i32 0, i64 %idxprom10
  %10 = load i32* %arrayidx13, align 4
  %11 = load i32* @hold_hash, align 4
  %xor = xor i32 %11, %10
  store i32 %xor, i32* @hold_hash, align 4
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %12 = load i32* %who.addr, align 4
  %cmp14 = icmp eq i32 %12, 0
  br i1 %cmp14, label %if.then15, label %if.else

if.then15:                                        ; preds = %if.end
  %13 = load i32* %what.addr, align 4
  %idxprom16 = sext i32 %13 to i64
  %arrayidx17 = getelementptr inbounds [0 x i32]* bitcast ([13 x i32]* @hand_value to [0 x i32]*), i32 0, i64 %idxprom16
  %14 = load i32* %arrayidx17, align 4
  %15 = load i32* @white_hand_eval, align 4
  %add = add nsw i32 %15, %14
  store i32 %add, i32* @white_hand_eval, align 4
  br label %if.end21

if.else:                                          ; preds = %if.end
  %16 = load i32* %what.addr, align 4
  %idxprom18 = sext i32 %16 to i64
  %arrayidx19 = getelementptr inbounds [0 x i32]* bitcast ([13 x i32]* @hand_value to [0 x i32]*), i32 0, i64 %idxprom18
  %17 = load i32* %arrayidx19, align 4
  %18 = load i32* @black_hand_eval, align 4
  %add20 = add nsw i32 %18, %17
  store i32 %add20, i32* @black_hand_eval, align 4
  br label %if.end21

if.end21:                                         ; preds = %if.else, %if.then15
  %19 = load i32* %what.addr, align 4
  %idxprom22 = sext i32 %19 to i64
  %arrayidx23 = getelementptr inbounds [14 x i32]* @material, i32 0, i64 %idxprom22
  %20 = load i32* %arrayidx23, align 4
  %21 = load i32* @Material, align 4
  %add24 = add nsw i32 %21, %20
  store i32 %add24, i32* @Material, align 4
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @removeHolding(i32 %what, i32 %who) #0 {
entry:
  %what.addr = alloca i32, align 4
  %what.addr25 = bitcast i32* %what.addr to i32*
  %bitcast = bitcast i32* %what.addr to i8*
  %mtmp = getelementptr i32* %what.addr25, i32 1
  %bitcast26 = bitcast i32* %mtmp to i8*
  %who.addr = alloca i32, align 4
  %who.addr27 = bitcast i32* %who.addr to i32*
  %bitcast28 = bitcast i32* %who.addr to i8*
  %mtmp29 = getelementptr i32* %who.addr27, i32 1
  %bitcast30 = bitcast i32* %mtmp29 to i8*
  store i32 %what, i32* %what.addr, align 4
  store i32 %who, i32* %who.addr, align 4
  %0 = load i32* @Variant, align 4
  %cmp = icmp eq i32 %0, 0
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %1 = load i32* %what.addr, align 4
  %idxprom = sext i32 %1 to i64
  %2 = load i32* %who.addr, align 4
  %idxprom1 = sext i32 %2 to i64
  %bitcast31 = bitcast [2 x [16 x i32]]* @holding to i8*
  %bitcast32 = bitcast [2 x [16 x i32]]* getelementptr inbounds ([2 x [16 x i32]]* @holding, i32 1) to i8*
  %arrayidx = getelementptr inbounds [2 x [16 x i32]]* @holding, i32 0, i64 %idxprom1
  %arrayidx2 = getelementptr inbounds [16 x i32]* %arrayidx, i32 0, i64 %idxprom
  %3 = load i32* %arrayidx2, align 4
  %idxprom3 = sext i32 %3 to i64
  %4 = load i32* %what.addr, align 4
  %idxprom4 = sext i32 %4 to i64
  %arrayidx5 = getelementptr inbounds [14 x [144 x i32]]* @zobrist, i32 0, i64 %idxprom4
  %arrayidx6 = getelementptr inbounds [144 x i32]* %arrayidx5, i32 0, i64 %idxprom3
  %5 = load i32* %arrayidx6, align 4
  %6 = load i32* @hold_hash, align 4
  %xor = xor i32 %6, %5
  store i32 %xor, i32* @hold_hash, align 4
  %7 = load i32* %what.addr, align 4
  %idxprom7 = sext i32 %7 to i64
  %8 = load i32* %who.addr, align 4
  %idxprom8 = sext i32 %8 to i64
  %bitcast33 = bitcast [2 x [16 x i32]]* @holding to i8*
  %bitcast34 = bitcast [2 x [16 x i32]]* getelementptr inbounds ([2 x [16 x i32]]* @holding, i32 1) to i8*
  %arrayidx9 = getelementptr inbounds [2 x [16 x i32]]* @holding, i32 0, i64 %idxprom8
  %arrayidx10 = getelementptr inbounds [16 x i32]* %arrayidx9, i32 0, i64 %idxprom7
  %9 = load i32* %arrayidx10, align 4
  %dec = add nsw i32 %9, -1
  store i32 %dec, i32* %arrayidx10, align 4
  %10 = load i32* %who.addr, align 4
  %idxprom11 = sext i32 %10 to i64
  %bitcast35 = bitcast [2 x i32]* @num_holding to i8*
  %bitcast36 = bitcast [2 x i32]* getelementptr inbounds ([2 x i32]* @num_holding, i32 1) to i8*
  %arrayidx12 = getelementptr inbounds [2 x i32]* @num_holding, i32 0, i64 %idxprom11
  %11 = load i32* %arrayidx12, align 4
  %dec13 = add nsw i32 %11, -1
  store i32 %dec13, i32* %arrayidx12, align 4
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %12 = load i32* %who.addr, align 4
  %cmp14 = icmp eq i32 %12, 0
  br i1 %cmp14, label %if.then15, label %if.else

if.then15:                                        ; preds = %if.end
  %13 = load i32* %what.addr, align 4
  %idxprom16 = sext i32 %13 to i64
  %arrayidx17 = getelementptr inbounds [0 x i32]* bitcast ([13 x i32]* @hand_value to [0 x i32]*), i32 0, i64 %idxprom16
  %14 = load i32* %arrayidx17, align 4
  %15 = load i32* @white_hand_eval, align 4
  %sub = sub nsw i32 %15, %14
  store i32 %sub, i32* @white_hand_eval, align 4
  br label %if.end21

if.else:                                          ; preds = %if.end
  %16 = load i32* %what.addr, align 4
  %idxprom18 = sext i32 %16 to i64
  %arrayidx19 = getelementptr inbounds [0 x i32]* bitcast ([13 x i32]* @hand_value to [0 x i32]*), i32 0, i64 %idxprom18
  %17 = load i32* %arrayidx19, align 4
  %18 = load i32* @black_hand_eval, align 4
  %sub20 = sub nsw i32 %18, %17
  store i32 %sub20, i32* @black_hand_eval, align 4
  br label %if.end21

if.end21:                                         ; preds = %if.else, %if.then15
  %19 = load i32* %what.addr, align 4
  %idxprom22 = sext i32 %19 to i64
  %arrayidx23 = getelementptr inbounds [14 x i32]* @material, i32 0, i64 %idxprom22
  %20 = load i32* %arrayidx23, align 4
  %21 = load i32* @Material, align 4
  %sub24 = sub nsw i32 %21, %20
  store i32 %sub24, i32* @Material, align 4
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @DropaddHolding(i32 %what, i32 %who) #0 {
entry:
  %what.addr = alloca i32, align 4
  %what.addr22 = bitcast i32* %what.addr to i32*
  %bitcast = bitcast i32* %what.addr to i8*
  %mtmp = getelementptr i32* %what.addr22, i32 1
  %bitcast23 = bitcast i32* %mtmp to i8*
  %who.addr = alloca i32, align 4
  %who.addr24 = bitcast i32* %who.addr to i32*
  %bitcast25 = bitcast i32* %who.addr to i8*
  %mtmp26 = getelementptr i32* %who.addr24, i32 1
  %bitcast27 = bitcast i32* %mtmp26 to i8*
  store i32 %what, i32* %what.addr, align 4
  store i32 %who, i32* %who.addr, align 4
  %0 = load i32* %what.addr, align 4
  %idxprom = sext i32 %0 to i64
  %1 = load i32* %who.addr, align 4
  %idxprom1 = sext i32 %1 to i64
  %bitcast28 = bitcast [2 x [16 x i32]]* @holding to i8*
  %bitcast29 = bitcast [2 x [16 x i32]]* getelementptr inbounds ([2 x [16 x i32]]* @holding, i32 1) to i8*
  %arrayidx = getelementptr inbounds [2 x [16 x i32]]* @holding, i32 0, i64 %idxprom1
  %arrayidx2 = getelementptr inbounds [16 x i32]* %arrayidx, i32 0, i64 %idxprom
  %2 = load i32* %arrayidx2, align 4
  %inc = add nsw i32 %2, 1
  store i32 %inc, i32* %arrayidx2, align 4
  %3 = load i32* %who.addr, align 4
  %idxprom3 = sext i32 %3 to i64
  %bitcast30 = bitcast [2 x i32]* @num_holding to i8*
  %bitcast31 = bitcast [2 x i32]* getelementptr inbounds ([2 x i32]* @num_holding, i32 1) to i8*
  %arrayidx4 = getelementptr inbounds [2 x i32]* @num_holding, i32 0, i64 %idxprom3
  %4 = load i32* %arrayidx4, align 4
  %inc5 = add nsw i32 %4, 1
  store i32 %inc5, i32* %arrayidx4, align 4
  %5 = load i32* %what.addr, align 4
  %idxprom6 = sext i32 %5 to i64
  %6 = load i32* %who.addr, align 4
  %idxprom7 = sext i32 %6 to i64
  %bitcast32 = bitcast [2 x [16 x i32]]* @holding to i8*
  %bitcast33 = bitcast [2 x [16 x i32]]* getelementptr inbounds ([2 x [16 x i32]]* @holding, i32 1) to i8*
  %arrayidx8 = getelementptr inbounds [2 x [16 x i32]]* @holding, i32 0, i64 %idxprom7
  %arrayidx9 = getelementptr inbounds [16 x i32]* %arrayidx8, i32 0, i64 %idxprom6
  %7 = load i32* %arrayidx9, align 4
  %idxprom10 = sext i32 %7 to i64
  %8 = load i32* %what.addr, align 4
  %idxprom11 = sext i32 %8 to i64
  %arrayidx12 = getelementptr inbounds [14 x [144 x i32]]* @zobrist, i32 0, i64 %idxprom11
  %arrayidx13 = getelementptr inbounds [144 x i32]* %arrayidx12, i32 0, i64 %idxprom10
  %9 = load i32* %arrayidx13, align 4
  %10 = load i32* @hold_hash, align 4
  %xor = xor i32 %10, %9
  store i32 %xor, i32* @hold_hash, align 4
  %11 = load i32* %who.addr, align 4
  %cmp = icmp eq i32 %11, 0
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  %12 = load i32* %what.addr, align 4
  %idxprom14 = sext i32 %12 to i64
  %arrayidx15 = getelementptr inbounds [0 x i32]* bitcast ([13 x i32]* @hand_value to [0 x i32]*), i32 0, i64 %idxprom14
  %13 = load i32* %arrayidx15, align 4
  %14 = load i32* @white_hand_eval, align 4
  %add = add nsw i32 %14, %13
  store i32 %add, i32* @white_hand_eval, align 4
  br label %if.end

if.else:                                          ; preds = %entry
  %15 = load i32* %what.addr, align 4
  %idxprom16 = sext i32 %15 to i64
  %arrayidx17 = getelementptr inbounds [0 x i32]* bitcast ([13 x i32]* @hand_value to [0 x i32]*), i32 0, i64 %idxprom16
  %16 = load i32* %arrayidx17, align 4
  %17 = load i32* @black_hand_eval, align 4
  %add18 = add nsw i32 %17, %16
  store i32 %add18, i32* @black_hand_eval, align 4
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %18 = load i32* %what.addr, align 4
  %idxprom19 = sext i32 %18 to i64
  %arrayidx20 = getelementptr inbounds [14 x i32]* @material, i32 0, i64 %idxprom19
  %19 = load i32* %arrayidx20, align 4
  %20 = load i32* @Material, align 4
  %add21 = add nsw i32 %20, %19
  store i32 %add21, i32* @Material, align 4
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @DropremoveHolding(i32 %what, i32 %who) #0 {
entry:
  %what.addr = alloca i32, align 4
  %what.addr22 = bitcast i32* %what.addr to i32*
  %bitcast = bitcast i32* %what.addr to i8*
  %mtmp = getelementptr i32* %what.addr22, i32 1
  %bitcast23 = bitcast i32* %mtmp to i8*
  %who.addr = alloca i32, align 4
  %who.addr24 = bitcast i32* %who.addr to i32*
  %bitcast25 = bitcast i32* %who.addr to i8*
  %mtmp26 = getelementptr i32* %who.addr24, i32 1
  %bitcast27 = bitcast i32* %mtmp26 to i8*
  store i32 %what, i32* %what.addr, align 4
  store i32 %who, i32* %who.addr, align 4
  %0 = load i32* %what.addr, align 4
  %idxprom = sext i32 %0 to i64
  %1 = load i32* %who.addr, align 4
  %idxprom1 = sext i32 %1 to i64
  %bitcast28 = bitcast [2 x [16 x i32]]* @holding to i8*
  %bitcast29 = bitcast [2 x [16 x i32]]* getelementptr inbounds ([2 x [16 x i32]]* @holding, i32 1) to i8*
  %arrayidx = getelementptr inbounds [2 x [16 x i32]]* @holding, i32 0, i64 %idxprom1
  %arrayidx2 = getelementptr inbounds [16 x i32]* %arrayidx, i32 0, i64 %idxprom
  %2 = load i32* %arrayidx2, align 4
  %idxprom3 = sext i32 %2 to i64
  %3 = load i32* %what.addr, align 4
  %idxprom4 = sext i32 %3 to i64
  %arrayidx5 = getelementptr inbounds [14 x [144 x i32]]* @zobrist, i32 0, i64 %idxprom4
  %arrayidx6 = getelementptr inbounds [144 x i32]* %arrayidx5, i32 0, i64 %idxprom3
  %4 = load i32* %arrayidx6, align 4
  %5 = load i32* @hold_hash, align 4
  %xor = xor i32 %5, %4
  store i32 %xor, i32* @hold_hash, align 4
  %6 = load i32* %what.addr, align 4
  %idxprom7 = sext i32 %6 to i64
  %7 = load i32* %who.addr, align 4
  %idxprom8 = sext i32 %7 to i64
  %bitcast30 = bitcast [2 x [16 x i32]]* @holding to i8*
  %bitcast31 = bitcast [2 x [16 x i32]]* getelementptr inbounds ([2 x [16 x i32]]* @holding, i32 1) to i8*
  %arrayidx9 = getelementptr inbounds [2 x [16 x i32]]* @holding, i32 0, i64 %idxprom8
  %arrayidx10 = getelementptr inbounds [16 x i32]* %arrayidx9, i32 0, i64 %idxprom7
  %8 = load i32* %arrayidx10, align 4
  %dec = add nsw i32 %8, -1
  store i32 %dec, i32* %arrayidx10, align 4
  %9 = load i32* %who.addr, align 4
  %idxprom11 = sext i32 %9 to i64
  %bitcast32 = bitcast [2 x i32]* @num_holding to i8*
  %bitcast33 = bitcast [2 x i32]* getelementptr inbounds ([2 x i32]* @num_holding, i32 1) to i8*
  %arrayidx12 = getelementptr inbounds [2 x i32]* @num_holding, i32 0, i64 %idxprom11
  %10 = load i32* %arrayidx12, align 4
  %dec13 = add nsw i32 %10, -1
  store i32 %dec13, i32* %arrayidx12, align 4
  %11 = load i32* %who.addr, align 4
  %cmp = icmp eq i32 %11, 0
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  %12 = load i32* %what.addr, align 4
  %idxprom14 = sext i32 %12 to i64
  %arrayidx15 = getelementptr inbounds [0 x i32]* bitcast ([13 x i32]* @hand_value to [0 x i32]*), i32 0, i64 %idxprom14
  %13 = load i32* %arrayidx15, align 4
  %14 = load i32* @white_hand_eval, align 4
  %sub = sub nsw i32 %14, %13
  store i32 %sub, i32* @white_hand_eval, align 4
  br label %if.end

if.else:                                          ; preds = %entry
  %15 = load i32* %what.addr, align 4
  %idxprom16 = sext i32 %15 to i64
  %arrayidx17 = getelementptr inbounds [0 x i32]* bitcast ([13 x i32]* @hand_value to [0 x i32]*), i32 0, i64 %idxprom16
  %16 = load i32* %arrayidx17, align 4
  %17 = load i32* @black_hand_eval, align 4
  %sub18 = sub nsw i32 %17, %16
  store i32 %sub18, i32* @black_hand_eval, align 4
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %18 = load i32* %what.addr, align 4
  %idxprom19 = sext i32 %18 to i64
  %arrayidx20 = getelementptr inbounds [14 x i32]* @material, i32 0, i64 %idxprom19
  %19 = load i32* %arrayidx20, align 4
  %20 = load i32* @Material, align 4
  %sub21 = sub nsw i32 %20, %19
  store i32 %sub21, i32* @Material, align 4
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @printHolding() #0 {
entry:
  %0 = load i32* getelementptr inbounds ([2 x [16 x i32]]* @holding, i32 0, i64 0, i64 1), align 4
  %1 = load i32* getelementptr inbounds ([2 x [16 x i32]]* @holding, i32 0, i64 0, i64 7), align 4
  %2 = load i32* getelementptr inbounds ([2 x [16 x i32]]* @holding, i32 0, i64 0, i64 11), align 4
  %3 = load i32* getelementptr inbounds ([2 x [16 x i32]]* @holding, i32 0, i64 0, i64 3), align 4
  %4 = load i32* getelementptr inbounds ([2 x [16 x i32]]* @holding, i32 0, i64 0, i64 9), align 4
  %call = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([36 x i8]* @.str, i32 0, i32 0), i32 %0, i32 %1, i32 %2, i32 %3, i32 %4)
  %5 = load i32* getelementptr inbounds ([2 x [16 x i32]]* @holding, i32 0, i64 1, i64 2), align 4
  %6 = load i32* getelementptr inbounds ([2 x [16 x i32]]* @holding, i32 0, i64 1, i64 8), align 4
  %7 = load i32* getelementptr inbounds ([2 x [16 x i32]]* @holding, i32 0, i64 1, i64 12), align 4
  %8 = load i32* getelementptr inbounds ([2 x [16 x i32]]* @holding, i32 0, i64 1, i64 4), align 4
  %9 = load i32* getelementptr inbounds ([2 x [16 x i32]]* @holding, i32 0, i64 1, i64 10), align 4
  %call1 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([36 x i8]* @.str1, i32 0, i32 0), i32 %5, i32 %6, i32 %7, i32 %8, i32 %9)
  ret void
}

declare i32 @printf(i8*, ...) #2

; Function Attrs: nounwind uwtable
define internal i32 @is_draw() #0 {
entry:
  %retval = alloca i32, align 4
  %retval41 = bitcast i32* %retval to i32*
  %bitcast = bitcast i32* %retval to i8*
  %mtmp = getelementptr i32* %retval41, i32 1
  %bitcast42 = bitcast i32* %mtmp to i8*
  %i = alloca i32, align 4
  %i43 = bitcast i32* %i to i32*
  %bitcast44 = bitcast i32* %i to i8*
  %mtmp45 = getelementptr i32* %i43, i32 1
  %bitcast46 = bitcast i32* %mtmp45 to i8*
  %repeats = alloca i32, align 4
  %repeats47 = bitcast i32* %repeats to i32*
  %bitcast48 = bitcast i32* %repeats to i8*
  %mtmp49 = getelementptr i32* %repeats47, i32 1
  %bitcast50 = bitcast i32* %mtmp49 to i8*
  %end = alloca i32, align 4
  %end51 = bitcast i32* %end to i32*
  %bitcast52 = bitcast i32* %end to i8*
  %mtmp53 = getelementptr i32* %end51, i32 1
  %bitcast54 = bitcast i32* %mtmp53 to i8*
  %start = alloca i32, align 4
  %start55 = bitcast i32* %start to i32*
  %bitcast56 = bitcast i32* %start to i8*
  %mtmp57 = getelementptr i32* %start55, i32 1
  %bitcast58 = bitcast i32* %mtmp57 to i8*
  store i32 0, i32* %repeats, align 4
  %0 = load i32* @fifty, align 4
  %cmp = icmp sge i32 %0, 4
  br i1 %cmp, label %if.then, label %if.end15

if.then:                                          ; preds = %entry
  %1 = load i32* @move_number, align 4
  %2 = load i32* @move_number, align 4
  %3 = load i32* @ply, align 4
  %add = add nsw i32 %2, %3
  %sub = sub nsw i32 %add, 1
  %4 = load i32* @fifty, align 4
  %sub1 = sub nsw i32 %sub, %4
  %cmp2 = icmp slt i32 %1, %sub1
  br i1 %cmp2, label %if.then3, label %if.else

if.then3:                                         ; preds = %if.then
  %5 = load i32* @move_number, align 4
  %6 = load i32* @ply, align 4
  %add4 = add nsw i32 %5, %6
  %sub5 = sub nsw i32 %add4, 1
  %7 = load i32* @fifty, align 4
  %sub6 = sub nsw i32 %sub5, %7
  store i32 %sub6, i32* %end, align 4
  br label %if.end

if.else:                                          ; preds = %if.then
  %8 = load i32* @move_number, align 4
  store i32 %8, i32* %end, align 4
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then3
  %9 = load i32* @move_number, align 4
  %10 = load i32* @ply, align 4
  %add7 = add nsw i32 %9, %10
  %sub8 = sub nsw i32 %add7, 3
  store i32 %sub8, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.end
  %11 = load i32* %i, align 4
  %cmp9 = icmp sge i32 %11, 0
  br i1 %cmp9, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %for.cond
  %12 = load i32* %i, align 4
  %13 = load i32* %end, align 4
  %cmp10 = icmp sge i32 %12, %13
  br label %land.end

land.end:                                         ; preds = %land.rhs, %for.cond
  %14 = phi i1 [ false, %for.cond ], [ %cmp10, %land.rhs ]
  br i1 %14, label %for.body, label %for.end

for.body:                                         ; preds = %land.end
  %15 = load i32* @hash, align 4
  %16 = load i32* %i, align 4
  %idxprom = sext i32 %16 to i64
  %arrayidx = getelementptr inbounds [600 x i32]* @hash_history, i32 0, i64 %idxprom
  %17 = load i32* %arrayidx, align 4
  %cmp11 = icmp eq i32 %15, %17
  br i1 %cmp11, label %if.then12, label %if.end13

if.then12:                                        ; preds = %for.body
  store i32 1, i32* %retval
  br label %return

if.end13:                                         ; preds = %for.body
  br label %for.inc

for.inc:                                          ; preds = %if.end13
  %18 = load i32* %i, align 4
  %sub14 = sub nsw i32 %18, 2
  store i32 %sub14, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %land.end
  br label %if.end15

if.end15:                                         ; preds = %for.end, %entry
  %19 = load i32* @fifty, align 4
  %cmp16 = icmp sge i32 %19, 6
  br i1 %cmp16, label %if.then17, label %if.end40

if.then17:                                        ; preds = %if.end15
  %20 = load i32* @move_number, align 4
  %sub18 = sub nsw i32 %20, 1
  %21 = load i32* @ply, align 4
  %rem = srem i32 %21, 2
  %sub19 = sub nsw i32 %sub18, %rem
  store i32 %sub19, i32* %start, align 4
  %22 = load i32* @move_number, align 4
  %23 = load i32* @ply, align 4
  %add20 = add nsw i32 %22, %23
  %sub21 = sub nsw i32 %add20, 1
  %24 = load i32* @fifty, align 4
  %sub22 = sub nsw i32 %sub21, %24
  store i32 %sub22, i32* %end, align 4
  %25 = load i32* %start, align 4
  store i32 %25, i32* %i, align 4
  br label %for.cond23

for.cond23:                                       ; preds = %for.inc37, %if.then17
  %26 = load i32* %i, align 4
  %cmp24 = icmp sge i32 %26, 0
  br i1 %cmp24, label %land.rhs25, label %land.end27

land.rhs25:                                       ; preds = %for.cond23
  %27 = load i32* %i, align 4
  %28 = load i32* %end, align 4
  %cmp26 = icmp sge i32 %27, %28
  br label %land.end27

land.end27:                                       ; preds = %land.rhs25, %for.cond23
  %29 = phi i1 [ false, %for.cond23 ], [ %cmp26, %land.rhs25 ]
  br i1 %29, label %for.body28, label %for.end39

for.body28:                                       ; preds = %land.end27
  %30 = load i32* @hash, align 4
  %31 = load i32* %i, align 4
  %idxprom29 = sext i32 %31 to i64
  %arrayidx30 = getelementptr inbounds [600 x i32]* @hash_history, i32 0, i64 %idxprom29
  %32 = load i32* %arrayidx30, align 4
  %cmp31 = icmp eq i32 %30, %32
  br i1 %cmp31, label %if.then32, label %if.end33

if.then32:                                        ; preds = %for.body28
  %33 = load i32* %repeats, align 4
  %inc = add nsw i32 %33, 1
  store i32 %inc, i32* %repeats, align 4
  br label %if.end33

if.end33:                                         ; preds = %if.then32, %for.body28
  %34 = load i32* %repeats, align 4
  %cmp34 = icmp sge i32 %34, 2
  br i1 %cmp34, label %if.then35, label %if.end36

if.then35:                                        ; preds = %if.end33
  store i32 1, i32* %retval
  br label %return

if.end36:                                         ; preds = %if.end33
  br label %for.inc37

for.inc37:                                        ; preds = %if.end36
  %35 = load i32* %i, align 4
  %sub38 = sub nsw i32 %35, 2
  store i32 %sub38, i32* %i, align 4
  br label %for.cond23

for.end39:                                        ; preds = %land.end27
  br label %if.end40

if.end40:                                         ; preds = %for.end39, %if.end15
  store i32 0, i32* %retval
  br label %return

return:                                           ; preds = %if.end40, %if.then35, %if.then12
  %36 = load i32* %retval
  ret i32 %36
}

; Function Attrs: nounwind uwtable
define internal void @storeECache(i32 %score) #0 {
entry:
  %base.alloca19 = alloca i8*
  %bound.alloca20 = alloca i8*
  %base.alloca14 = alloca i8*
  %bound.alloca15 = alloca i8*
  %base.alloca = alloca i8*
  %bound.alloca = alloca i8*
  %score.addr = alloca i32, align 4
  %score.addr6 = bitcast i32* %score.addr to i32*
  %bitcast = bitcast i32* %score.addr to i8*
  %mtmp = getelementptr i32* %score.addr6, i32 1
  %bitcast7 = bitcast i32* %mtmp to i8*
  %ecindex = alloca i32, align 4
  %ecindex8 = bitcast i32* %ecindex to i32*
  %bitcast9 = bitcast i32* %ecindex to i8*
  %mtmp10 = getelementptr i32* %ecindex8, i32 1
  %bitcast11 = bitcast i32* %mtmp10 to i8*
  store i32 %score, i32* %score.addr, align 4
  %0 = load i32* @hash, align 4
  %1 = load i32* @ECacheSize, align 4
  %rem = urem i32 %0, %1
  store i32 %rem, i32* %ecindex, align 4
  %2 = load i32* @hash, align 4
  %3 = load i32* %ecindex, align 4
  %idxprom = sext i32 %3 to i64
  %4 = load %struct.ECacheType** @ECache, align 8
  %bitcast12 = bitcast %struct.ECacheType** @ECache to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast12, i8** %base.alloca, i8** %bound.alloca)
  %base.load = load i8** %base.alloca
  %bound.load = load i8** %bound.alloca
  %arrayidx = getelementptr inbounds %struct.ECacheType* %4, i64 %idxprom
  %stored_hash = getelementptr inbounds %struct.ECacheType* %arrayidx, i32 0, i32 0
  store i32 %2, i32* %stored_hash, align 4
  %5 = load i32* @hold_hash, align 4
  %6 = load i32* %ecindex, align 4
  %idxprom1 = sext i32 %6 to i64
  %7 = load %struct.ECacheType** @ECache, align 8
  %bitcast13 = bitcast %struct.ECacheType** @ECache to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast13, i8** %base.alloca14, i8** %bound.alloca15)
  %base.load16 = load i8** %base.alloca14
  %bound.load17 = load i8** %bound.alloca15
  %arrayidx2 = getelementptr inbounds %struct.ECacheType* %7, i64 %idxprom1
  %hold_hash = getelementptr inbounds %struct.ECacheType* %arrayidx2, i32 0, i32 1
  store i32 %5, i32* %hold_hash, align 4
  %8 = load i32* %score.addr, align 4
  %9 = load i32* %ecindex, align 4
  %idxprom3 = sext i32 %9 to i64
  %10 = load %struct.ECacheType** @ECache, align 8
  %bitcast18 = bitcast %struct.ECacheType** @ECache to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast18, i8** %base.alloca19, i8** %bound.alloca20)
  %base.load21 = load i8** %base.alloca19
  %bound.load22 = load i8** %bound.alloca20
  %arrayidx4 = getelementptr inbounds %struct.ECacheType* %10, i64 %idxprom3
  %score5 = getelementptr inbounds %struct.ECacheType* %arrayidx4, i32 0, i32 2
  store i32 %8, i32* %score5, align 4
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @checkECache(i32* %score, i32* %in_cache) #0 {
entry:
  %base.alloca35 = alloca i8*
  %bound.alloca36 = alloca i8*
  %base.alloca30 = alloca i8*
  %bound.alloca31 = alloca i8*
  %base.alloca25 = alloca i8*
  %bound.alloca26 = alloca i8*
  %base.alloca20 = alloca i8*
  %bound.alloca21 = alloca i8*
  %base.alloca = alloca i8*
  %bound.alloca = alloca i8*
  %0 = call i8* @__softboundcets_load_base_shadow_stack(i32 2)
  %1 = call i8* @__softboundcets_load_bound_shadow_stack(i32 2)
  %2 = call i8* @__softboundcets_load_base_shadow_stack(i32 1)
  %3 = call i8* @__softboundcets_load_bound_shadow_stack(i32 1)
  %score.addr = alloca i32*, align 8
  %score.addr8 = bitcast i32** %score.addr to i32**
  %bitcast = bitcast i32** %score.addr to i8*
  %mtmp = getelementptr i32** %score.addr8, i32 1
  %bitcast9 = bitcast i32** %mtmp to i8*
  %in_cache.addr = alloca i32*, align 8
  %in_cache.addr10 = bitcast i32** %in_cache.addr to i32**
  %bitcast11 = bitcast i32** %in_cache.addr to i8*
  %mtmp12 = getelementptr i32** %in_cache.addr10, i32 1
  %bitcast13 = bitcast i32** %mtmp12 to i8*
  %ecindex = alloca i32, align 4
  %ecindex14 = bitcast i32* %ecindex to i32*
  %bitcast15 = bitcast i32* %ecindex to i8*
  %mtmp16 = getelementptr i32* %ecindex14, i32 1
  %bitcast17 = bitcast i32* %mtmp16 to i8*
  store i32* %score, i32** %score.addr, align 8
  %bitcast39 = bitcast i32** %score.addr to i8*
  call void @__softboundcets_metadata_store(i8* %bitcast39, i8* %2, i8* %3)
  store i32* %in_cache, i32** %in_cache.addr, align 8
  %bitcast40 = bitcast i32** %in_cache.addr to i8*
  call void @__softboundcets_metadata_store(i8* %bitcast40, i8* %0, i8* %1)
  %4 = load i32* @ECacheProbes, align 4
  %inc = add i32 %4, 1
  store i32 %inc, i32* @ECacheProbes, align 4
  %5 = load i32* @hash, align 4
  %6 = load i32* @ECacheSize, align 4
  %rem = urem i32 %5, %6
  store i32 %rem, i32* %ecindex, align 4
  %7 = load i32* %ecindex, align 4
  %idxprom = sext i32 %7 to i64
  %8 = load %struct.ECacheType** @ECache, align 8
  %bitcast18 = bitcast %struct.ECacheType** @ECache to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast18, i8** %base.alloca, i8** %bound.alloca)
  %base.load = load i8** %base.alloca
  %bound.load = load i8** %bound.alloca
  %arrayidx = getelementptr inbounds %struct.ECacheType* %8, i64 %idxprom
  %stored_hash = getelementptr inbounds %struct.ECacheType* %arrayidx, i32 0, i32 0
  %9 = load i32* %stored_hash, align 4
  %10 = load i32* @hash, align 4
  %cmp = icmp eq i32 %9, %10
  br i1 %cmp, label %land.lhs.true, label %if.end

land.lhs.true:                                    ; preds = %entry
  %11 = load i32* %ecindex, align 4
  %idxprom1 = sext i32 %11 to i64
  %12 = load %struct.ECacheType** @ECache, align 8
  %bitcast19 = bitcast %struct.ECacheType** @ECache to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast19, i8** %base.alloca20, i8** %bound.alloca21)
  %base.load22 = load i8** %base.alloca20
  %bound.load23 = load i8** %bound.alloca21
  %arrayidx2 = getelementptr inbounds %struct.ECacheType* %12, i64 %idxprom1
  %hold_hash = getelementptr inbounds %struct.ECacheType* %arrayidx2, i32 0, i32 1
  %13 = load i32* %hold_hash, align 4
  %14 = load i32* @hold_hash, align 4
  %cmp3 = icmp eq i32 %13, %14
  br i1 %cmp3, label %if.then, label %if.end

if.then:                                          ; preds = %land.lhs.true
  %15 = load i32* @ECacheHits, align 4
  %inc4 = add i32 %15, 1
  store i32 %inc4, i32* @ECacheHits, align 4
  %16 = load i32** %in_cache.addr, align 8
  %bitcast24 = bitcast i32** %in_cache.addr to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast24, i8** %base.alloca25, i8** %bound.alloca26)
  %base.load27 = load i8** %base.alloca25
  %bound.load28 = load i8** %bound.alloca26
  store i32 1, i32* %16, align 4
  %17 = load i32* %ecindex, align 4
  %idxprom5 = sext i32 %17 to i64
  %18 = load %struct.ECacheType** @ECache, align 8
  %bitcast29 = bitcast %struct.ECacheType** @ECache to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast29, i8** %base.alloca30, i8** %bound.alloca31)
  %base.load32 = load i8** %base.alloca30
  %bound.load33 = load i8** %bound.alloca31
  %arrayidx6 = getelementptr inbounds %struct.ECacheType* %18, i64 %idxprom5
  %score7 = getelementptr inbounds %struct.ECacheType* %arrayidx6, i32 0, i32 2
  %19 = load i32* %score7, align 4
  %20 = load i32** %score.addr, align 8
  %bitcast34 = bitcast i32** %score.addr to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast34, i8** %base.alloca35, i8** %bound.alloca36)
  %base.load37 = load i8** %base.alloca35
  %bound.load38 = load i8** %bound.alloca36
  store i32 %19, i32* %20, align 4
  br label %if.end

if.end:                                           ; preds = %if.then, %land.lhs.true, %entry
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @reset_ecache() #0 {
entry:
  %base.alloca = alloca i8*
  %bound.alloca = alloca i8*
  %0 = load %struct.ECacheType** @ECache, align 8
  %bitcast = bitcast %struct.ECacheType** @ECache to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast, i8** %base.alloca, i8** %bound.alloca)
  %base.load = load i8** %base.alloca
  %bound.load = load i8** %bound.alloca
  %1 = bitcast %struct.ECacheType* %0 to i8*
  %2 = load i32* @ECacheSize, align 4
  %conv = sext i32 %2 to i64
  %mul = mul i64 12, %conv
  call void @__softboundcets_memset_check(i8* %1, i64 %mul, i8* %base.load, i8* %bound.load)
  call void @llvm.memset.p0i8.i64(i8* %1, i8 0, i64 %mul, i32 4, i1 false)
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @alloc_ecache() #0 {
entry:
  %base.alloca = alloca i8*
  %bound.alloca = alloca i8*
  %0 = load i32* @ECacheSize, align 4
  %conv = sext i32 %0 to i64
  %mul = mul i64 12, %conv
  call void @__softboundcets_allocate_shadow_stack_space(i32 1)
  %call = call noalias i8* @softboundcets_malloc(i64 %mul) #1
  %1 = call i8* @__softboundcets_load_base_shadow_stack(i32 0)
  %2 = call i8* @__softboundcets_load_bound_shadow_stack(i32 0)
  call void @__softboundcets_deallocate_shadow_stack_space()
  %3 = bitcast i8* %call to %struct.ECacheType*
  store %struct.ECacheType* %3, %struct.ECacheType** @ECache, align 8
  %bitcast3 = bitcast %struct.ECacheType** @ECache to i8*
  call void @__softboundcets_metadata_store(i8* %bitcast3, i8* %1, i8* %2)
  %4 = load %struct.ECacheType** @ECache, align 8
  %bitcast = bitcast %struct.ECacheType** @ECache to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast, i8** %base.alloca, i8** %bound.alloca)
  %base.load = load i8** %base.alloca
  %bound.load = load i8** %bound.alloca
  %cmp = icmp eq %struct.ECacheType* %4, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %call2 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([34 x i8]* @.str2, i32 0, i32 0))
  call void @softboundcets_exit(i32 1) #4
  unreachable

if.end:                                           ; preds = %entry
  ret void
}

declare i8* @softboundcets_malloc(i64)

declare void @softboundcets_exit(i32)

; Function Attrs: nounwind uwtable
define internal void @free_ecache() #0 {
entry:
  %base.alloca = alloca i8*
  %bound.alloca = alloca i8*
  %0 = load %struct.ECacheType** @ECache, align 8
  %bitcast = bitcast %struct.ECacheType** @ECache to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast, i8** %base.alloca, i8** %bound.alloca)
  %base.load = load i8** %base.alloca
  %bound.load = load i8** %bound.alloca
  %1 = bitcast %struct.ECacheType* %0 to i8*
  call void @__softboundcets_allocate_shadow_stack_space(i32 2)
  call void @__softboundcets_store_base_shadow_stack(i8* %base.load, i32 1)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bound.load, i32 1)
  call void @softboundcets_free(i8* %1) #1
  call void @__softboundcets_deallocate_shadow_stack_space()
  ret void
}

declare void @softboundcets_free(i8*)

; Function Attrs: nounwind uwtable
define internal void @setup_epd_line(i8* %inbuff) #0 {
entry:
  %base.alloca375 = alloca i8*
  %bound.alloca376 = alloca i8*
  %base.alloca370 = alloca i8*
  %bound.alloca371 = alloca i8*
  %base.alloca365 = alloca i8*
  %bound.alloca366 = alloca i8*
  %base.alloca360 = alloca i8*
  %bound.alloca361 = alloca i8*
  %base.alloca355 = alloca i8*
  %bound.alloca356 = alloca i8*
  %base.alloca350 = alloca i8*
  %bound.alloca351 = alloca i8*
  %base.alloca345 = alloca i8*
  %bound.alloca346 = alloca i8*
  %base.alloca340 = alloca i8*
  %bound.alloca341 = alloca i8*
  %base.alloca335 = alloca i8*
  %bound.alloca336 = alloca i8*
  %base.alloca330 = alloca i8*
  %bound.alloca331 = alloca i8*
  %base.alloca325 = alloca i8*
  %bound.alloca326 = alloca i8*
  %base.alloca320 = alloca i8*
  %bound.alloca321 = alloca i8*
  %base.alloca315 = alloca i8*
  %bound.alloca316 = alloca i8*
  %base.alloca310 = alloca i8*
  %bound.alloca311 = alloca i8*
  %base.alloca303 = alloca i8*
  %bound.alloca304 = alloca i8*
  %base.alloca298 = alloca i8*
  %bound.alloca299 = alloca i8*
  %base.alloca293 = alloca i8*
  %bound.alloca294 = alloca i8*
  %base.alloca288 = alloca i8*
  %bound.alloca289 = alloca i8*
  %base.alloca283 = alloca i8*
  %bound.alloca284 = alloca i8*
  %base.alloca278 = alloca i8*
  %bound.alloca279 = alloca i8*
  %base.alloca = alloca i8*
  %bound.alloca = alloca i8*
  %0 = call i8* @__softboundcets_load_base_shadow_stack(i32 1)
  %1 = call i8* @__softboundcets_load_bound_shadow_stack(i32 1)
  %inbuff.addr = alloca i8*, align 8
  %inbuff.addr226 = bitcast i8** %inbuff.addr to i8**
  %bitcast = bitcast i8** %inbuff.addr to i8*
  %mtmp = getelementptr i8** %inbuff.addr226, i32 1
  %bitcast227 = bitcast i8** %mtmp to i8*
  %i = alloca i32, align 4
  %i228 = bitcast i32* %i to i32*
  %bitcast229 = bitcast i32* %i to i8*
  %mtmp230 = getelementptr i32* %i228, i32 1
  %bitcast231 = bitcast i32* %mtmp230 to i8*
  %rankp = alloca i32, align 4
  %rankp232 = bitcast i32* %rankp to i32*
  %bitcast233 = bitcast i32* %rankp to i8*
  %mtmp234 = getelementptr i32* %rankp232, i32 1
  %bitcast235 = bitcast i32* %mtmp234 to i8*
  %rankoffset = alloca i32, align 4
  %rankoffset236 = bitcast i32* %rankoffset to i32*
  %bitcast237 = bitcast i32* %rankoffset to i8*
  %mtmp238 = getelementptr i32* %rankoffset236, i32 1
  %bitcast239 = bitcast i32* %mtmp238 to i8*
  %fileoffset = alloca i32, align 4
  %fileoffset240 = bitcast i32* %fileoffset to i32*
  %bitcast241 = bitcast i32* %fileoffset to i8*
  %mtmp242 = getelementptr i32* %fileoffset240, i32 1
  %bitcast243 = bitcast i32* %mtmp242 to i8*
  %j = alloca i32, align 4
  %j244 = bitcast i32* %j to i32*
  %bitcast245 = bitcast i32* %j to i8*
  %mtmp246 = getelementptr i32* %j244, i32 1
  %bitcast247 = bitcast i32* %mtmp246 to i8*
  %stage = alloca i32, align 4
  %stage248 = bitcast i32* %stage to i32*
  %bitcast249 = bitcast i32* %stage to i8*
  %mtmp250 = getelementptr i32* %stage248, i32 1
  %bitcast251 = bitcast i32* %mtmp250 to i8*
  %converterf = alloca i32, align 4
  %converterf252 = bitcast i32* %converterf to i32*
  %bitcast253 = bitcast i32* %converterf to i8*
  %mtmp254 = getelementptr i32* %converterf252, i32 1
  %bitcast255 = bitcast i32* %mtmp254 to i8*
  %converterr = alloca i32, align 4
  %converterr256 = bitcast i32* %converterr to i32*
  %bitcast257 = bitcast i32* %converterr to i8*
  %mtmp258 = getelementptr i32* %converterr256, i32 1
  %bitcast259 = bitcast i32* %mtmp258 to i8*
  %ep_file = alloca i32, align 4
  %ep_file260 = bitcast i32* %ep_file to i32*
  %bitcast261 = bitcast i32* %ep_file to i8*
  %mtmp262 = getelementptr i32* %ep_file260, i32 1
  %bitcast263 = bitcast i32* %mtmp262 to i8*
  %ep_rank = alloca i32, align 4
  %ep_rank264 = bitcast i32* %ep_rank to i32*
  %bitcast265 = bitcast i32* %ep_rank to i8*
  %mtmp266 = getelementptr i32* %ep_rank264, i32 1
  %bitcast267 = bitcast i32* %mtmp266 to i8*
  %norm_file = alloca i32, align 4
  %norm_file268 = bitcast i32* %norm_file to i32*
  %bitcast269 = bitcast i32* %norm_file to i8*
  %mtmp270 = getelementptr i32* %norm_file268, i32 1
  %bitcast271 = bitcast i32* %mtmp270 to i8*
  %norm_rank = alloca i32, align 4
  %norm_rank272 = bitcast i32* %norm_rank to i32*
  %bitcast273 = bitcast i32* %norm_rank to i8*
  %mtmp274 = getelementptr i32* %norm_rank272, i32 1
  %bitcast275 = bitcast i32* %mtmp274 to i8*
  store i8* %inbuff, i8** %inbuff.addr, align 8
  %bitcast379 = bitcast i8** %inbuff.addr to i8*
  call void @__softboundcets_metadata_store(i8* %bitcast379, i8* %0, i8* %1)
  store i32 0, i32* %i, align 4
  store i32 0, i32* %rankp, align 4
  store i32 0, i32* %rankoffset, align 4
  store i32 0, i32* %fileoffset, align 4
  store i32 0, i32* %stage, align 4
  store i32 97, i32* %converterf, align 4
  store i32 49, i32* %converterr, align 4
  call void @__softboundcets_memset_check(i8* bitcast ([144 x i32]* @board to i8*), i64 576, i8* null, i8* inttoptr (i64 281474976710656 to i8*))
  call void @llvm.memset.p0i8.i64(i8* bitcast ([144 x i32]* @board to i8*), i8 0, i64 576, i32 16, i1 false)
  store i32 0, i32* @white_castled, align 4
  store i32 0, i32* @black_castled, align 4
  store i32 50, i32* @book_ply, align 4
  %2 = load i32* getelementptr inbounds ([8 x i32]* @setup_epd_line.rankoffsets, i32 0, i64 0), align 4
  store i32 %2, i32* %rankoffset, align 4
  br label %while.cond

while.cond:                                       ; preds = %while.body, %entry
  %3 = load i32* %i, align 4
  %idxprom = sext i32 %3 to i64
  %4 = load i8** %inbuff.addr, align 8
  %bitcast276 = bitcast i8** %inbuff.addr to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast276, i8** %base.alloca, i8** %bound.alloca)
  %base.load = load i8** %base.alloca
  %bound.load = load i8** %bound.alloca
  %arrayidx = getelementptr inbounds i8* %4, i64 %idxprom
  %5 = load i8* %arrayidx, align 1
  %conv = sext i8 %5 to i32
  %cmp = icmp eq i32 %conv, 32
  br i1 %cmp, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  %6 = load i32* %i, align 4
  %inc = add nsw i32 %6, 1
  store i32 %inc, i32* %i, align 4
  br label %while.cond

while.end:                                        ; preds = %while.cond
  br label %while.cond2

while.cond2:                                      ; preds = %if.end223, %while.end
  %7 = load i32* %i, align 4
  %idxprom3 = sext i32 %7 to i64
  %8 = load i8** %inbuff.addr, align 8
  %bitcast277 = bitcast i8** %inbuff.addr to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast277, i8** %base.alloca278, i8** %bound.alloca279)
  %base.load280 = load i8** %base.alloca278
  %bound.load281 = load i8** %bound.alloca279
  %arrayidx4 = getelementptr inbounds i8* %8, i64 %idxprom3
  %9 = load i8* %arrayidx4, align 1
  %conv5 = sext i8 %9 to i32
  %cmp6 = icmp ne i32 %conv5, 10
  br i1 %cmp6, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %while.cond2
  %10 = load i32* %i, align 4
  %idxprom8 = sext i32 %10 to i64
  %11 = load i8** %inbuff.addr, align 8
  %bitcast282 = bitcast i8** %inbuff.addr to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast282, i8** %base.alloca283, i8** %bound.alloca284)
  %base.load285 = load i8** %base.alloca283
  %bound.load286 = load i8** %bound.alloca284
  %arrayidx9 = getelementptr inbounds i8* %11, i64 %idxprom8
  %12 = load i8* %arrayidx9, align 1
  %conv10 = sext i8 %12 to i32
  %cmp11 = icmp ne i32 %conv10, 0
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond2
  %13 = phi i1 [ false, %while.cond2 ], [ %cmp11, %land.rhs ]
  br i1 %13, label %while.body13, label %while.end225

while.body13:                                     ; preds = %land.end
  %14 = load i32* %stage, align 4
  %cmp14 = icmp eq i32 %14, 0
  br i1 %cmp14, label %land.lhs.true, label %if.else

land.lhs.true:                                    ; preds = %while.body13
  %15 = load i32* %i, align 4
  %idxprom16 = sext i32 %15 to i64
  %16 = load i8** %inbuff.addr, align 8
  %bitcast287 = bitcast i8** %inbuff.addr to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast287, i8** %base.alloca288, i8** %bound.alloca289)
  %base.load290 = load i8** %base.alloca288
  %bound.load291 = load i8** %bound.alloca289
  %arrayidx17 = getelementptr inbounds i8* %16, i64 %idxprom16
  %17 = load i8* %arrayidx17, align 1
  %conv18 = sext i8 %17 to i32
  %idxprom19 = sext i32 %conv18 to i64
  call void @__softboundcets_allocate_shadow_stack_space(i32 1)
  %call = call i16** @softboundcets___ctype_b_loc() #5
  %18 = call i8* @__softboundcets_load_base_shadow_stack(i32 0)
  %19 = call i8* @__softboundcets_load_bound_shadow_stack(i32 0)
  call void @__softboundcets_deallocate_shadow_stack_space()
  %20 = load i16** %call, align 8
  %bitcast292 = bitcast i16** %call to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast292, i8** %base.alloca293, i8** %bound.alloca294)
  %base.load295 = load i8** %base.alloca293
  %bound.load296 = load i8** %bound.alloca294
  %arrayidx20 = getelementptr inbounds i16* %20, i64 %idxprom19
  %21 = load i16* %arrayidx20, align 2
  %conv21 = zext i16 %21 to i32
  %and = and i32 %conv21, 2048
  %tobool = icmp ne i32 %and, 0
  br i1 %tobool, label %if.then, label %if.else

if.then:                                          ; preds = %land.lhs.true
  store i32 0, i32* %j, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.then
  %22 = load i32* %j, align 4
  %23 = load i32* %i, align 4
  %idxprom22 = sext i32 %23 to i64
  %24 = load i8** %inbuff.addr, align 8
  %bitcast302 = bitcast i8** %inbuff.addr to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast302, i8** %base.alloca303, i8** %bound.alloca304)
  %base.load305 = load i8** %base.alloca303
  %bound.load306 = load i8** %bound.alloca304
  %arrayidx23 = getelementptr inbounds i8* %24, i64 %idxprom22
  call void @__softboundcets_allocate_shadow_stack_space(i32 2)
  call void @__softboundcets_store_base_shadow_stack(i8* %base.load305, i32 1)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bound.load306, i32 1)
  %call24 = call i32 @softboundcets_atoi(i8* %arrayidx23) #6
  call void @__softboundcets_deallocate_shadow_stack_space()
  %cmp25 = icmp slt i32 %22, %call24
  br i1 %cmp25, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %25 = load i32* %rankoffset, align 4
  %26 = load i32* %j, align 4
  %add = add nsw i32 %25, %26
  %27 = load i32* %fileoffset, align 4
  %add27 = add nsw i32 %add, %27
  %idxprom28 = sext i32 %add27 to i64
  %arrayidx29 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom28
  store i32 13, i32* %arrayidx29, align 4
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %28 = load i32* %j, align 4
  %inc30 = add nsw i32 %28, 1
  store i32 %inc30, i32* %j, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %29 = load i32* %i, align 4
  %idxprom31 = sext i32 %29 to i64
  %30 = load i8** %inbuff.addr, align 8
  %bitcast324 = bitcast i8** %inbuff.addr to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast324, i8** %base.alloca325, i8** %bound.alloca326)
  %base.load327 = load i8** %base.alloca325
  %bound.load328 = load i8** %bound.alloca326
  %arrayidx32 = getelementptr inbounds i8* %30, i64 %idxprom31
  call void @__softboundcets_allocate_shadow_stack_space(i32 2)
  call void @__softboundcets_store_base_shadow_stack(i8* %base.load327, i32 1)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bound.load328, i32 1)
  %call33 = call i32 @softboundcets_atoi(i8* %arrayidx32) #6
  call void @__softboundcets_deallocate_shadow_stack_space()
  %31 = load i32* %fileoffset, align 4
  %add34 = add nsw i32 %31, %call33
  store i32 %add34, i32* %fileoffset, align 4
  br label %if.end223

if.else:                                          ; preds = %land.lhs.true, %while.body13
  %32 = load i32* %stage, align 4
  %cmp35 = icmp eq i32 %32, 0
  br i1 %cmp35, label %land.lhs.true37, label %if.else47

land.lhs.true37:                                  ; preds = %if.else
  %33 = load i32* %i, align 4
  %idxprom38 = sext i32 %33 to i64
  %34 = load i8** %inbuff.addr, align 8
  %bitcast297 = bitcast i8** %inbuff.addr to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast297, i8** %base.alloca298, i8** %bound.alloca299)
  %base.load300 = load i8** %base.alloca298
  %bound.load301 = load i8** %bound.alloca299
  %arrayidx39 = getelementptr inbounds i8* %34, i64 %idxprom38
  %35 = load i8* %arrayidx39, align 1
  %conv40 = sext i8 %35 to i32
  %cmp41 = icmp eq i32 %conv40, 47
  br i1 %cmp41, label %if.then43, label %if.else47

if.then43:                                        ; preds = %land.lhs.true37
  %36 = load i32* %rankp, align 4
  %inc44 = add nsw i32 %36, 1
  store i32 %inc44, i32* %rankp, align 4
  %37 = load i32* %rankp, align 4
  %idxprom45 = sext i32 %37 to i64
  %bitcast307 = bitcast [8 x i32]* @setup_epd_line.rankoffsets to i8*
  %bitcast308 = bitcast [8 x i32]* getelementptr inbounds ([8 x i32]* @setup_epd_line.rankoffsets, i32 1) to i8*
  %arrayidx46 = getelementptr inbounds [8 x i32]* @setup_epd_line.rankoffsets, i32 0, i64 %idxprom45
  %38 = load i32* %arrayidx46, align 4
  store i32 %38, i32* %rankoffset, align 4
  store i32 0, i32* %fileoffset, align 4
  br label %if.end222

if.else47:                                        ; preds = %land.lhs.true37, %if.else
  %39 = load i32* %stage, align 4
  %cmp48 = icmp eq i32 %39, 0
  br i1 %cmp48, label %land.lhs.true50, label %if.else112

land.lhs.true50:                                  ; preds = %if.else47
  %40 = load i32* %i, align 4
  %idxprom51 = sext i32 %40 to i64
  %41 = load i8** %inbuff.addr, align 8
  %bitcast309 = bitcast i8** %inbuff.addr to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast309, i8** %base.alloca310, i8** %bound.alloca311)
  %base.load312 = load i8** %base.alloca310
  %bound.load313 = load i8** %bound.alloca311
  %arrayidx52 = getelementptr inbounds i8* %41, i64 %idxprom51
  %42 = load i8* %arrayidx52, align 1
  %conv53 = sext i8 %42 to i32
  %idxprom54 = sext i32 %conv53 to i64
  call void @__softboundcets_allocate_shadow_stack_space(i32 1)
  %call55 = call i16** @softboundcets___ctype_b_loc() #5
  %43 = call i8* @__softboundcets_load_base_shadow_stack(i32 0)
  %44 = call i8* @__softboundcets_load_bound_shadow_stack(i32 0)
  call void @__softboundcets_deallocate_shadow_stack_space()
  %45 = load i16** %call55, align 8
  %bitcast314 = bitcast i16** %call55 to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast314, i8** %base.alloca315, i8** %bound.alloca316)
  %base.load317 = load i8** %base.alloca315
  %bound.load318 = load i8** %bound.alloca316
  %arrayidx56 = getelementptr inbounds i16* %45, i64 %idxprom54
  %46 = load i16* %arrayidx56, align 2
  %conv57 = zext i16 %46 to i32
  %and58 = and i32 %conv57, 1024
  %tobool59 = icmp ne i32 %and58, 0
  br i1 %tobool59, label %if.then60, label %if.else112

if.then60:                                        ; preds = %land.lhs.true50
  %47 = load i32* %i, align 4
  %idxprom61 = sext i32 %47 to i64
  %48 = load i8** %inbuff.addr, align 8
  %bitcast329 = bitcast i8** %inbuff.addr to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast329, i8** %base.alloca330, i8** %bound.alloca331)
  %base.load332 = load i8** %base.alloca330
  %bound.load333 = load i8** %bound.alloca331
  %arrayidx62 = getelementptr inbounds i8* %48, i64 %idxprom61
  %49 = load i8* %arrayidx62, align 1
  %conv63 = sext i8 %49 to i32
  switch i32 %conv63, label %sw.epilog [
    i32 112, label %sw.bb
    i32 80, label %sw.bb67
    i32 110, label %sw.bb71
    i32 78, label %sw.bb75
    i32 98, label %sw.bb79
    i32 66, label %sw.bb83
    i32 114, label %sw.bb87
    i32 82, label %sw.bb91
    i32 113, label %sw.bb95
    i32 81, label %sw.bb99
    i32 107, label %sw.bb103
    i32 75, label %sw.bb107
  ]

sw.bb:                                            ; preds = %if.then60
  %50 = load i32* %rankoffset, align 4
  %51 = load i32* %fileoffset, align 4
  %add64 = add nsw i32 %50, %51
  %idxprom65 = sext i32 %add64 to i64
  %arrayidx66 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom65
  store i32 2, i32* %arrayidx66, align 4
  br label %sw.epilog

sw.bb67:                                          ; preds = %if.then60
  %52 = load i32* %rankoffset, align 4
  %53 = load i32* %fileoffset, align 4
  %add68 = add nsw i32 %52, %53
  %idxprom69 = sext i32 %add68 to i64
  %arrayidx70 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom69
  store i32 1, i32* %arrayidx70, align 4
  br label %sw.epilog

sw.bb71:                                          ; preds = %if.then60
  %54 = load i32* %rankoffset, align 4
  %55 = load i32* %fileoffset, align 4
  %add72 = add nsw i32 %54, %55
  %idxprom73 = sext i32 %add72 to i64
  %arrayidx74 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom73
  store i32 4, i32* %arrayidx74, align 4
  br label %sw.epilog

sw.bb75:                                          ; preds = %if.then60
  %56 = load i32* %rankoffset, align 4
  %57 = load i32* %fileoffset, align 4
  %add76 = add nsw i32 %56, %57
  %idxprom77 = sext i32 %add76 to i64
  %arrayidx78 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom77
  store i32 3, i32* %arrayidx78, align 4
  br label %sw.epilog

sw.bb79:                                          ; preds = %if.then60
  %58 = load i32* %rankoffset, align 4
  %59 = load i32* %fileoffset, align 4
  %add80 = add nsw i32 %58, %59
  %idxprom81 = sext i32 %add80 to i64
  %arrayidx82 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom81
  store i32 12, i32* %arrayidx82, align 4
  br label %sw.epilog

sw.bb83:                                          ; preds = %if.then60
  %60 = load i32* %rankoffset, align 4
  %61 = load i32* %fileoffset, align 4
  %add84 = add nsw i32 %60, %61
  %idxprom85 = sext i32 %add84 to i64
  %arrayidx86 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom85
  store i32 11, i32* %arrayidx86, align 4
  br label %sw.epilog

sw.bb87:                                          ; preds = %if.then60
  %62 = load i32* %rankoffset, align 4
  %63 = load i32* %fileoffset, align 4
  %add88 = add nsw i32 %62, %63
  %idxprom89 = sext i32 %add88 to i64
  %arrayidx90 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom89
  store i32 8, i32* %arrayidx90, align 4
  br label %sw.epilog

sw.bb91:                                          ; preds = %if.then60
  %64 = load i32* %rankoffset, align 4
  %65 = load i32* %fileoffset, align 4
  %add92 = add nsw i32 %64, %65
  %idxprom93 = sext i32 %add92 to i64
  %arrayidx94 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom93
  store i32 7, i32* %arrayidx94, align 4
  br label %sw.epilog

sw.bb95:                                          ; preds = %if.then60
  %66 = load i32* %rankoffset, align 4
  %67 = load i32* %fileoffset, align 4
  %add96 = add nsw i32 %66, %67
  %idxprom97 = sext i32 %add96 to i64
  %arrayidx98 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom97
  store i32 10, i32* %arrayidx98, align 4
  br label %sw.epilog

sw.bb99:                                          ; preds = %if.then60
  %68 = load i32* %rankoffset, align 4
  %69 = load i32* %fileoffset, align 4
  %add100 = add nsw i32 %68, %69
  %idxprom101 = sext i32 %add100 to i64
  %arrayidx102 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom101
  store i32 9, i32* %arrayidx102, align 4
  br label %sw.epilog

sw.bb103:                                         ; preds = %if.then60
  %70 = load i32* %rankoffset, align 4
  %71 = load i32* %fileoffset, align 4
  %add104 = add nsw i32 %70, %71
  store i32 %add104, i32* @bking_loc, align 4
  %72 = load i32* @bking_loc, align 4
  %idxprom105 = sext i32 %72 to i64
  %arrayidx106 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom105
  store i32 6, i32* %arrayidx106, align 4
  br label %sw.epilog

sw.bb107:                                         ; preds = %if.then60
  %73 = load i32* %rankoffset, align 4
  %74 = load i32* %fileoffset, align 4
  %add108 = add nsw i32 %73, %74
  store i32 %add108, i32* @wking_loc, align 4
  %75 = load i32* @wking_loc, align 4
  %idxprom109 = sext i32 %75 to i64
  %arrayidx110 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom109
  store i32 5, i32* %arrayidx110, align 4
  br label %sw.epilog

sw.epilog:                                        ; preds = %sw.bb107, %sw.bb103, %sw.bb99, %sw.bb95, %sw.bb91, %sw.bb87, %sw.bb83, %sw.bb79, %sw.bb75, %sw.bb71, %sw.bb67, %sw.bb, %if.then60
  %76 = load i32* %fileoffset, align 4
  %inc111 = add nsw i32 %76, 1
  store i32 %inc111, i32* %fileoffset, align 4
  br label %if.end221

if.else112:                                       ; preds = %land.lhs.true50, %if.else47
  %77 = load i32* %i, align 4
  %idxprom113 = sext i32 %77 to i64
  %78 = load i8** %inbuff.addr, align 8
  %bitcast319 = bitcast i8** %inbuff.addr to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast319, i8** %base.alloca320, i8** %bound.alloca321)
  %base.load322 = load i8** %base.alloca320
  %bound.load323 = load i8** %bound.alloca321
  %arrayidx114 = getelementptr inbounds i8* %78, i64 %idxprom113
  %79 = load i8* %arrayidx114, align 1
  %conv115 = sext i8 %79 to i32
  %cmp116 = icmp eq i32 %conv115, 32
  br i1 %cmp116, label %if.then118, label %if.end220

if.then118:                                       ; preds = %if.else112
  %80 = load i32* %stage, align 4
  %inc119 = add nsw i32 %80, 1
  store i32 %inc119, i32* %stage, align 4
  %81 = load i32* %stage, align 4
  %cmp120 = icmp eq i32 %81, 1
  br i1 %cmp120, label %if.then122, label %if.else139

if.then122:                                       ; preds = %if.then118
  br label %while.cond123

while.cond123:                                    ; preds = %while.body129, %if.then122
  %82 = load i32* %i, align 4
  %idxprom124 = sext i32 %82 to i64
  %83 = load i8** %inbuff.addr, align 8
  %bitcast334 = bitcast i8** %inbuff.addr to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast334, i8** %base.alloca335, i8** %bound.alloca336)
  %base.load337 = load i8** %base.alloca335
  %bound.load338 = load i8** %bound.alloca336
  %arrayidx125 = getelementptr inbounds i8* %83, i64 %idxprom124
  %84 = load i8* %arrayidx125, align 1
  %conv126 = sext i8 %84 to i32
  %cmp127 = icmp eq i32 %conv126, 32
  br i1 %cmp127, label %while.body129, label %while.end131

while.body129:                                    ; preds = %while.cond123
  %85 = load i32* %i, align 4
  %inc130 = add nsw i32 %85, 1
  store i32 %inc130, i32* %i, align 4
  br label %while.cond123

while.end131:                                     ; preds = %while.cond123
  %86 = load i32* %i, align 4
  %idxprom132 = sext i32 %86 to i64
  %87 = load i8** %inbuff.addr, align 8
  %bitcast339 = bitcast i8** %inbuff.addr to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast339, i8** %base.alloca340, i8** %bound.alloca341)
  %base.load342 = load i8** %base.alloca340
  %bound.load343 = load i8** %bound.alloca341
  %arrayidx133 = getelementptr inbounds i8* %87, i64 %idxprom132
  %88 = load i8* %arrayidx133, align 1
  %conv134 = sext i8 %88 to i32
  %cmp135 = icmp eq i32 %conv134, 119
  br i1 %cmp135, label %if.then137, label %if.else138

if.then137:                                       ; preds = %while.end131
  store i32 1, i32* @white_to_move, align 4
  br label %if.end

if.else138:                                       ; preds = %while.end131
  store i32 0, i32* @white_to_move, align 4
  br label %if.end

if.end:                                           ; preds = %if.else138, %if.then137
  br label %if.end219

if.else139:                                       ; preds = %if.then118
  %89 = load i32* %stage, align 4
  %cmp140 = icmp eq i32 %89, 2
  br i1 %cmp140, label %if.then142, label %if.else170

if.then142:                                       ; preds = %if.else139
  store i32 1, i32* getelementptr inbounds ([144 x i32]* @moved, i32 0, i64 30), align 4
  store i32 1, i32* getelementptr inbounds ([144 x i32]* @moved, i32 0, i64 33), align 4
  store i32 1, i32* getelementptr inbounds ([144 x i32]* @moved, i32 0, i64 26), align 4
  store i32 1, i32* getelementptr inbounds ([144 x i32]* @moved, i32 0, i64 117), align 4
  store i32 1, i32* getelementptr inbounds ([144 x i32]* @moved, i32 0, i64 114), align 4
  store i32 1, i32* getelementptr inbounds ([144 x i32]* @moved, i32 0, i64 110), align 4
  br label %while.cond143

while.cond143:                                    ; preds = %while.body149, %if.then142
  %90 = load i32* %i, align 4
  %idxprom144 = sext i32 %90 to i64
  %91 = load i8** %inbuff.addr, align 8
  %bitcast344 = bitcast i8** %inbuff.addr to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast344, i8** %base.alloca345, i8** %bound.alloca346)
  %base.load347 = load i8** %base.alloca345
  %bound.load348 = load i8** %bound.alloca346
  %arrayidx145 = getelementptr inbounds i8* %91, i64 %idxprom144
  %92 = load i8* %arrayidx145, align 1
  %conv146 = sext i8 %92 to i32
  %cmp147 = icmp eq i32 %conv146, 32
  br i1 %cmp147, label %while.body149, label %while.end151

while.body149:                                    ; preds = %while.cond143
  %93 = load i32* %i, align 4
  %inc150 = add nsw i32 %93, 1
  store i32 %inc150, i32* %i, align 4
  br label %while.cond143

while.end151:                                     ; preds = %while.cond143
  br label %while.cond152

while.cond152:                                    ; preds = %sw.epilog167, %while.end151
  %94 = load i32* %i, align 4
  %idxprom153 = sext i32 %94 to i64
  %95 = load i8** %inbuff.addr, align 8
  %bitcast354 = bitcast i8** %inbuff.addr to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast354, i8** %base.alloca355, i8** %bound.alloca356)
  %base.load357 = load i8** %base.alloca355
  %bound.load358 = load i8** %bound.alloca356
  %arrayidx154 = getelementptr inbounds i8* %95, i64 %idxprom153
  %96 = load i8* %arrayidx154, align 1
  %conv155 = sext i8 %96 to i32
  %cmp156 = icmp ne i32 %conv155, 32
  br i1 %cmp156, label %while.body158, label %while.end169

while.body158:                                    ; preds = %while.cond152
  %97 = load i32* %i, align 4
  %idxprom159 = sext i32 %97 to i64
  %98 = load i8** %inbuff.addr, align 8
  %bitcast364 = bitcast i8** %inbuff.addr to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast364, i8** %base.alloca365, i8** %bound.alloca366)
  %base.load367 = load i8** %base.alloca365
  %bound.load368 = load i8** %bound.alloca366
  %arrayidx160 = getelementptr inbounds i8* %98, i64 %idxprom159
  %99 = load i8* %arrayidx160, align 1
  %conv161 = sext i8 %99 to i32
  switch i32 %conv161, label %sw.epilog167 [
    i32 45, label %sw.bb162
    i32 75, label %sw.bb163
    i32 81, label %sw.bb164
    i32 107, label %sw.bb165
    i32 113, label %sw.bb166
  ]

sw.bb162:                                         ; preds = %while.body158
  br label %sw.epilog167

sw.bb163:                                         ; preds = %while.body158
  store i32 0, i32* getelementptr inbounds ([144 x i32]* @moved, i32 0, i64 33), align 4
  store i32 0, i32* getelementptr inbounds ([144 x i32]* @moved, i32 0, i64 30), align 4
  br label %sw.epilog167

sw.bb164:                                         ; preds = %while.body158
  store i32 0, i32* getelementptr inbounds ([144 x i32]* @moved, i32 0, i64 26), align 4
  store i32 0, i32* getelementptr inbounds ([144 x i32]* @moved, i32 0, i64 30), align 4
  br label %sw.epilog167

sw.bb165:                                         ; preds = %while.body158
  store i32 0, i32* getelementptr inbounds ([144 x i32]* @moved, i32 0, i64 117), align 4
  store i32 0, i32* getelementptr inbounds ([144 x i32]* @moved, i32 0, i64 114), align 4
  br label %sw.epilog167

sw.bb166:                                         ; preds = %while.body158
  store i32 0, i32* getelementptr inbounds ([144 x i32]* @moved, i32 0, i64 110), align 4
  store i32 0, i32* getelementptr inbounds ([144 x i32]* @moved, i32 0, i64 114), align 4
  br label %sw.epilog167

sw.epilog167:                                     ; preds = %sw.bb166, %sw.bb165, %sw.bb164, %sw.bb163, %sw.bb162, %while.body158
  %100 = load i32* %i, align 4
  %inc168 = add nsw i32 %100, 1
  store i32 %inc168, i32* %i, align 4
  br label %while.cond152

while.end169:                                     ; preds = %while.cond152
  %101 = load i32* %i, align 4
  %dec = add nsw i32 %101, -1
  store i32 %dec, i32* %i, align 4
  br label %if.end218

if.else170:                                       ; preds = %if.else139
  %102 = load i32* %stage, align 4
  %cmp171 = icmp eq i32 %102, 3
  br i1 %cmp171, label %if.then173, label %if.else202

if.then173:                                       ; preds = %if.else170
  br label %while.cond174

while.cond174:                                    ; preds = %while.body180, %if.then173
  %103 = load i32* %i, align 4
  %idxprom175 = sext i32 %103 to i64
  %104 = load i8** %inbuff.addr, align 8
  %bitcast349 = bitcast i8** %inbuff.addr to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast349, i8** %base.alloca350, i8** %bound.alloca351)
  %base.load352 = load i8** %base.alloca350
  %bound.load353 = load i8** %bound.alloca351
  %arrayidx176 = getelementptr inbounds i8* %104, i64 %idxprom175
  %105 = load i8* %arrayidx176, align 1
  %conv177 = sext i8 %105 to i32
  %cmp178 = icmp eq i32 %conv177, 32
  br i1 %cmp178, label %while.body180, label %while.end182

while.body180:                                    ; preds = %while.cond174
  %106 = load i32* %i, align 4
  %inc181 = add nsw i32 %106, 1
  store i32 %inc181, i32* %i, align 4
  br label %while.cond174

while.end182:                                     ; preds = %while.cond174
  %107 = load i32* %i, align 4
  %idxprom183 = sext i32 %107 to i64
  %108 = load i8** %inbuff.addr, align 8
  %bitcast359 = bitcast i8** %inbuff.addr to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast359, i8** %base.alloca360, i8** %bound.alloca361)
  %base.load362 = load i8** %base.alloca360
  %bound.load363 = load i8** %bound.alloca361
  %arrayidx184 = getelementptr inbounds i8* %108, i64 %idxprom183
  %109 = load i8* %arrayidx184, align 1
  %conv185 = sext i8 %109 to i32
  %cmp186 = icmp eq i32 %conv185, 45
  br i1 %cmp186, label %if.then188, label %if.else189

if.then188:                                       ; preds = %while.end182
  store i32 0, i32* @ep_square, align 4
  br label %if.end201

if.else189:                                       ; preds = %while.end182
  %110 = load i32* %i, align 4
  %inc190 = add nsw i32 %110, 1
  store i32 %inc190, i32* %i, align 4
  %idxprom191 = sext i32 %110 to i64
  %111 = load i8** %inbuff.addr, align 8
  %bitcast369 = bitcast i8** %inbuff.addr to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast369, i8** %base.alloca370, i8** %bound.alloca371)
  %base.load372 = load i8** %base.alloca370
  %bound.load373 = load i8** %bound.alloca371
  %arrayidx192 = getelementptr inbounds i8* %111, i64 %idxprom191
  %112 = load i8* %arrayidx192, align 1
  %conv193 = sext i8 %112 to i32
  store i32 %conv193, i32* %ep_file, align 4
  %113 = load i32* %i, align 4
  %inc194 = add nsw i32 %113, 1
  store i32 %inc194, i32* %i, align 4
  %idxprom195 = sext i32 %113 to i64
  %114 = load i8** %inbuff.addr, align 8
  %bitcast374 = bitcast i8** %inbuff.addr to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast374, i8** %base.alloca375, i8** %bound.alloca376)
  %base.load377 = load i8** %base.alloca375
  %bound.load378 = load i8** %bound.alloca376
  %arrayidx196 = getelementptr inbounds i8* %114, i64 %idxprom195
  %115 = load i8* %arrayidx196, align 1
  %conv197 = sext i8 %115 to i32
  store i32 %conv197, i32* %ep_rank, align 4
  %116 = load i32* %ep_file, align 4
  %117 = load i32* %converterf, align 4
  %sub = sub nsw i32 %116, %117
  store i32 %sub, i32* %norm_file, align 4
  %118 = load i32* %ep_rank, align 4
  %119 = load i32* %converterr, align 4
  %sub198 = sub nsw i32 %118, %119
  store i32 %sub198, i32* %norm_rank, align 4
  %120 = load i32* %norm_rank, align 4
  %mul = mul nsw i32 %120, 12
  %add199 = add nsw i32 %mul, 26
  %121 = load i32* %norm_file, align 4
  %add200 = add nsw i32 %add199, %121
  store i32 %add200, i32* @ep_square, align 4
  br label %if.end201

if.end201:                                        ; preds = %if.else189, %if.then188
  br label %if.end217

if.else202:                                       ; preds = %if.else170
  %122 = load i32* %stage, align 4
  %cmp203 = icmp eq i32 %122, 4
  br i1 %cmp203, label %if.then205, label %if.else206

if.then205:                                       ; preds = %if.else202
  br label %if.end216

if.else206:                                       ; preds = %if.else202
  %123 = load i32* %stage, align 4
  %cmp207 = icmp eq i32 %123, 5
  br i1 %cmp207, label %if.then209, label %if.else210

if.then209:                                       ; preds = %if.else206
  br label %if.end215

if.else210:                                       ; preds = %if.else206
  %124 = load i32* %stage, align 4
  %cmp211 = icmp eq i32 %124, 6
  br i1 %cmp211, label %if.then213, label %if.end214

if.then213:                                       ; preds = %if.else210
  br label %if.end214

if.end214:                                        ; preds = %if.then213, %if.else210
  br label %if.end215

if.end215:                                        ; preds = %if.end214, %if.then209
  br label %if.end216

if.end216:                                        ; preds = %if.end215, %if.then205
  br label %if.end217

if.end217:                                        ; preds = %if.end216, %if.end201
  br label %if.end218

if.end218:                                        ; preds = %if.end217, %while.end169
  br label %if.end219

if.end219:                                        ; preds = %if.end218, %if.end
  br label %if.end220

if.end220:                                        ; preds = %if.end219, %if.else112
  br label %if.end221

if.end221:                                        ; preds = %if.end220, %sw.epilog
  br label %if.end222

if.end222:                                        ; preds = %if.end221, %if.then43
  br label %if.end223

if.end223:                                        ; preds = %if.end222, %for.end
  %125 = load i32* %i, align 4
  %inc224 = add nsw i32 %125, 1
  store i32 %inc224, i32* %i, align 4
  br label %while.cond2

while.end225:                                     ; preds = %land.end
  call void @reset_piece_square()
  call void @initialize_hash()
  ret void
}

declare i16** @softboundcets___ctype_b_loc()

declare i32 @softboundcets_atoi(i8*)

; Function Attrs: nounwind uwtable
define internal i32 @check_solution(i8* %inbuff, %struct.move_s* byval align 8 %cmove) #0 {
entry:
  %base.alloca39 = alloca i8*
  %bound.alloca40 = alloca i8*
  %base.alloca34 = alloca i8*
  %bound.alloca35 = alloca i8*
  %base.alloca29 = alloca i8*
  %bound.alloca30 = alloca i8*
  %base.alloca = alloca i8*
  %bound.alloca = alloca i8*
  %0 = call i8* @__softboundcets_load_base_shadow_stack(i32 1)
  %1 = call i8* @__softboundcets_load_bound_shadow_stack(i32 1)
  %retval = alloca i32, align 4
  %retval17 = bitcast i32* %retval to i32*
  %bitcast = bitcast i32* %retval to i8*
  %mtmp = getelementptr i32* %retval17, i32 1
  %bitcast18 = bitcast i32* %mtmp to i8*
  %inbuff.addr = alloca i8*, align 8
  %inbuff.addr19 = bitcast i8** %inbuff.addr to i8**
  %bitcast20 = bitcast i8** %inbuff.addr to i8*
  %mtmp21 = getelementptr i8** %inbuff.addr19, i32 1
  %bitcast22 = bitcast i8** %mtmp21 to i8*
  %san = alloca [256 x i8], align 16
  %san23 = bitcast [256 x i8]* %san to [256 x i8]*
  %bitcast24 = bitcast [256 x i8]* %san to i8*
  %mtmp25 = getelementptr [256 x i8]* %san23, i32 1
  %bitcast26 = bitcast [256 x i8]* %mtmp25 to i8*
  store i8* %inbuff, i8** %inbuff.addr, align 8
  %bitcast43 = bitcast i8** %inbuff.addr to i8*
  call void @__softboundcets_metadata_store(i8* %bitcast43, i8* %0, i8* %1)
  %arraydecay = getelementptr inbounds [256 x i8]* %san, i32 0, i32 0
  call void @__softboundcets_allocate_shadow_stack_space(i32 3)
  call void @__softboundcets_store_base_shadow_stack(i8* null, i32 1)
  call void @__softboundcets_store_bound_shadow_stack(i8* inttoptr (i64 281474976710656 to i8*), i32 1)
  call void @__softboundcets_store_base_shadow_stack(i8* %bitcast24, i32 2)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bitcast26, i32 2)
  call void @comp_to_san(%struct.move_s* byval align 8 %cmove, i8* %arraydecay)
  call void @__softboundcets_deallocate_shadow_stack_space()
  %2 = load i8** %inbuff.addr, align 8
  %bitcast27 = bitcast i8** %inbuff.addr to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast27, i8** %base.alloca, i8** %bound.alloca)
  %base.load = load i8** %base.alloca
  %bound.load = load i8** %bound.alloca
  call void @__softboundcets_allocate_shadow_stack_space(i32 3)
  call void @__softboundcets_store_base_shadow_stack(i8* %base.load, i32 1)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bound.load, i32 1)
  call void @__softboundcets_store_base_shadow_stack(i8* getelementptr inbounds ([3 x i8]* @.str5, i32 0, i32 0), i32 2)
  call void @__softboundcets_store_bound_shadow_stack(i8* getelementptr inbounds ([3 x i8]* @.str5, i32 1, i32 0), i32 2)
  %call = call i8* @softboundcets_strstr(i8* %2, i8* getelementptr inbounds ([3 x i8]* @.str5, i32 0, i32 0)) #6
  %3 = call i8* @__softboundcets_load_base_shadow_stack(i32 0)
  %4 = call i8* @__softboundcets_load_bound_shadow_stack(i32 0)
  call void @__softboundcets_deallocate_shadow_stack_space()
  %cmp = icmp ne i8* %call, null
  br i1 %cmp, label %if.then, label %if.else5

if.then:                                          ; preds = %entry
  %5 = load i8** %inbuff.addr, align 8
  %bitcast28 = bitcast i8** %inbuff.addr to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast28, i8** %base.alloca29, i8** %bound.alloca30)
  %base.load31 = load i8** %base.alloca29
  %bound.load32 = load i8** %bound.alloca30
  %arraydecay1 = getelementptr inbounds [256 x i8]* %san, i32 0, i32 0
  call void @__softboundcets_allocate_shadow_stack_space(i32 3)
  call void @__softboundcets_store_base_shadow_stack(i8* %base.load31, i32 1)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bound.load32, i32 1)
  call void @__softboundcets_store_base_shadow_stack(i8* %bitcast24, i32 2)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bitcast26, i32 2)
  %call2 = call i8* @softboundcets_strstr(i8* %5, i8* %arraydecay1) #6
  %6 = call i8* @__softboundcets_load_base_shadow_stack(i32 0)
  %7 = call i8* @__softboundcets_load_bound_shadow_stack(i32 0)
  call void @__softboundcets_deallocate_shadow_stack_space()
  %cmp3 = icmp ne i8* %call2, null
  br i1 %cmp3, label %if.then4, label %if.else

if.then4:                                         ; preds = %if.then
  store i32 1, i32* %retval
  br label %return

if.else:                                          ; preds = %if.then
  store i32 0, i32* %retval
  br label %return

if.else5:                                         ; preds = %entry
  %8 = load i8** %inbuff.addr, align 8
  %bitcast33 = bitcast i8** %inbuff.addr to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast33, i8** %base.alloca34, i8** %bound.alloca35)
  %base.load36 = load i8** %base.alloca34
  %bound.load37 = load i8** %bound.alloca35
  call void @__softboundcets_allocate_shadow_stack_space(i32 3)
  call void @__softboundcets_store_base_shadow_stack(i8* %base.load36, i32 1)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bound.load37, i32 1)
  call void @__softboundcets_store_base_shadow_stack(i8* getelementptr inbounds ([3 x i8]* @.str16, i32 0, i32 0), i32 2)
  call void @__softboundcets_store_bound_shadow_stack(i8* getelementptr inbounds ([3 x i8]* @.str16, i32 1, i32 0), i32 2)
  %call6 = call i8* @softboundcets_strstr(i8* %8, i8* getelementptr inbounds ([3 x i8]* @.str16, i32 0, i32 0)) #6
  %9 = call i8* @__softboundcets_load_base_shadow_stack(i32 0)
  %10 = call i8* @__softboundcets_load_bound_shadow_stack(i32 0)
  call void @__softboundcets_deallocate_shadow_stack_space()
  %cmp7 = icmp ne i8* %call6, null
  br i1 %cmp7, label %if.then8, label %if.else14

if.then8:                                         ; preds = %if.else5
  %11 = load i8** %inbuff.addr, align 8
  %bitcast38 = bitcast i8** %inbuff.addr to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast38, i8** %base.alloca39, i8** %bound.alloca40)
  %base.load41 = load i8** %base.alloca39
  %bound.load42 = load i8** %bound.alloca40
  %arraydecay9 = getelementptr inbounds [256 x i8]* %san, i32 0, i32 0
  call void @__softboundcets_allocate_shadow_stack_space(i32 3)
  call void @__softboundcets_store_base_shadow_stack(i8* %base.load41, i32 1)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bound.load42, i32 1)
  call void @__softboundcets_store_base_shadow_stack(i8* %bitcast24, i32 2)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bitcast26, i32 2)
  %call10 = call i8* @softboundcets_strstr(i8* %11, i8* %arraydecay9) #6
  %12 = call i8* @__softboundcets_load_base_shadow_stack(i32 0)
  %13 = call i8* @__softboundcets_load_bound_shadow_stack(i32 0)
  call void @__softboundcets_deallocate_shadow_stack_space()
  %cmp11 = icmp ne i8* %call10, null
  br i1 %cmp11, label %if.then12, label %if.else13

if.then12:                                        ; preds = %if.then8
  store i32 0, i32* %retval
  br label %return

if.else13:                                        ; preds = %if.then8
  store i32 1, i32* %retval
  br label %return

if.else14:                                        ; preds = %if.else5
  %call15 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([34 x i8]* @.str27, i32 0, i32 0))
  br label %if.end

if.end:                                           ; preds = %if.else14
  br label %if.end16

if.end16:                                         ; preds = %if.end
  store i32 0, i32* %retval
  br label %return

return:                                           ; preds = %if.end16, %if.else13, %if.then12, %if.else, %if.then4
  %14 = load i32* %retval
  ret i32 %14
}

declare i8* @softboundcets_strstr(i8*, i8*)

; Function Attrs: nounwind uwtable
define internal void @run_epd_testsuite() #0 {
entry:
  %base.alloca123 = alloca i8*
  %bound.alloca124 = alloca i8*
  %base.alloca118 = alloca i8*
  %bound.alloca119 = alloca i8*
  %base.alloca113 = alloca i8*
  %bound.alloca114 = alloca i8*
  %base.alloca108 = alloca i8*
  %bound.alloca109 = alloca i8*
  %base.alloca = alloca i8*
  %bound.alloca = alloca i8*
  %testsuite = alloca %struct._IO_FILE*, align 8
  %testsuite68 = bitcast %struct._IO_FILE** %testsuite to %struct._IO_FILE**
  %bitcast = bitcast %struct._IO_FILE** %testsuite to i8*
  %mtmp = getelementptr %struct._IO_FILE** %testsuite68, i32 1
  %bitcast69 = bitcast %struct._IO_FILE** %mtmp to i8*
  %readbuff = alloca [2000 x i8], align 16
  %readbuff70 = bitcast [2000 x i8]* %readbuff to [2000 x i8]*
  %bitcast71 = bitcast [2000 x i8]* %readbuff to i8*
  %mtmp72 = getelementptr [2000 x i8]* %readbuff70, i32 1
  %bitcast73 = bitcast [2000 x i8]* %mtmp72 to i8*
  %testname = alloca [4096 x i8], align 16
  %testname74 = bitcast [4096 x i8]* %testname to [4096 x i8]*
  %bitcast75 = bitcast [4096 x i8]* %testname to i8*
  %mtmp76 = getelementptr [4096 x i8]* %testname74, i32 1
  %bitcast77 = bitcast [4096 x i8]* %mtmp76 to i8*
  %tempbuff = alloca [2000 x i8], align 16
  %tempbuff78 = bitcast [2000 x i8]* %tempbuff to [2000 x i8]*
  %bitcast79 = bitcast [2000 x i8]* %tempbuff to i8*
  %mtmp80 = getelementptr [2000 x i8]* %tempbuff78, i32 1
  %bitcast81 = bitcast [2000 x i8]* %mtmp80 to i8*
  %nps = alloca i32, align 4
  %nps82 = bitcast i32* %nps to i32*
  %bitcast83 = bitcast i32* %nps to i8*
  %mtmp84 = getelementptr i32* %nps82, i32 1
  %bitcast85 = bitcast i32* %mtmp84 to i8*
  %thinktime = alloca i32, align 4
  %thinktime86 = bitcast i32* %thinktime to i32*
  %bitcast87 = bitcast i32* %thinktime to i8*
  %mtmp88 = getelementptr i32* %thinktime86, i32 1
  %bitcast89 = bitcast i32* %mtmp88 to i8*
  %comp_move = alloca %struct.move_s, align 8
  %comp_move90 = bitcast %struct.move_s* %comp_move to %struct.move_s*
  %bitcast91 = bitcast %struct.move_s* %comp_move to i8*
  %mtmp92 = getelementptr %struct.move_s* %comp_move90, i32 1
  %bitcast93 = bitcast %struct.move_s* %mtmp92 to i8*
  %tested = alloca i32, align 4
  %tested94 = bitcast i32* %tested to i32*
  %bitcast95 = bitcast i32* %tested to i8*
  %mtmp96 = getelementptr i32* %tested94, i32 1
  %bitcast97 = bitcast i32* %mtmp96 to i8*
  %found = alloca i32, align 4
  %found98 = bitcast i32* %found to i32*
  %bitcast99 = bitcast i32* %found to i8*
  %mtmp100 = getelementptr i32* %found98, i32 1
  %bitcast101 = bitcast i32* %mtmp100 to i8*
  %tmp = alloca %struct.move_s, align 4
  %tmp102 = bitcast %struct.move_s* %tmp to %struct.move_s*
  %bitcast103 = bitcast %struct.move_s* %tmp to i8*
  %mtmp104 = getelementptr %struct.move_s* %tmp102, i32 1
  %bitcast105 = bitcast %struct.move_s* %mtmp104 to i8*
  store i32 0, i32* %tested, align 4
  store i32 0, i32* %found, align 4
  %call = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([25 x i8]* @.str3, i32 0, i32 0))
  %arraydecay = getelementptr inbounds [4096 x i8]* %testname, i32 0, i32 0
  %0 = load %struct._IO_FILE** @stdin, align 8
  %bitcast106 = bitcast %struct._IO_FILE** @stdin to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast106, i8** %base.alloca, i8** %bound.alloca)
  %base.load = load i8** %base.alloca
  %bound.load = load i8** %bound.alloca
  call void @__softboundcets_allocate_shadow_stack_space(i32 3)
  call void @__softboundcets_store_base_shadow_stack(i8* %bitcast75, i32 1)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bitcast77, i32 1)
  call void @__softboundcets_store_base_shadow_stack(i8* %base.load, i32 2)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bound.load, i32 2)
  call void @rinput(i8* %arraydecay, i32 256, %struct._IO_FILE* %0)
  call void @__softboundcets_deallocate_shadow_stack_space()
  %call1 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([21 x i8]* @.str4, i32 0, i32 0))
  %arraydecay2 = getelementptr inbounds [2000 x i8]* %readbuff, i32 0, i32 0
  %1 = load %struct._IO_FILE** @stdin, align 8
  %bitcast107 = bitcast %struct._IO_FILE** @stdin to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast107, i8** %base.alloca108, i8** %bound.alloca109)
  %base.load110 = load i8** %base.alloca108
  %bound.load111 = load i8** %bound.alloca109
  call void @__softboundcets_allocate_shadow_stack_space(i32 3)
  call void @__softboundcets_store_base_shadow_stack(i8* %bitcast71, i32 1)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bitcast73, i32 1)
  call void @__softboundcets_store_base_shadow_stack(i8* %base.load110, i32 2)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bound.load111, i32 2)
  call void @rinput(i8* %arraydecay2, i32 256, %struct._IO_FILE* %1)
  call void @__softboundcets_deallocate_shadow_stack_space()
  %arraydecay3 = getelementptr inbounds [2000 x i8]* %readbuff, i32 0, i32 0
  call void @__softboundcets_allocate_shadow_stack_space(i32 2)
  call void @__softboundcets_store_base_shadow_stack(i8* %bitcast71, i32 1)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bitcast73, i32 1)
  %call4 = call i64 @softboundcets_atol(i8* %arraydecay3) #6
  call void @__softboundcets_deallocate_shadow_stack_space()
  %conv = trunc i64 %call4 to i32
  store i32 %conv, i32* %thinktime, align 4
  %call5 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([2 x i8]* @.str58, i32 0, i32 0))
  %2 = load i32* %thinktime, align 4
  %mul = mul nsw i32 %2, 100
  store i32 %mul, i32* %thinktime, align 4
  %arraydecay6 = getelementptr inbounds [4096 x i8]* %testname, i32 0, i32 0
  call void @__softboundcets_allocate_shadow_stack_space(i32 3)
  call void @__softboundcets_store_base_shadow_stack(i8* %bitcast75, i32 1)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bitcast77, i32 1)
  call void @__softboundcets_store_base_shadow_stack(i8* getelementptr inbounds ([2 x i8]* @.str6, i32 0, i32 0), i32 2)
  call void @__softboundcets_store_bound_shadow_stack(i8* getelementptr inbounds ([2 x i8]* @.str6, i32 1, i32 0), i32 2)
  %call7 = call %struct._IO_FILE* @softboundcets_fopen(i8* %arraydecay6, i8* getelementptr inbounds ([2 x i8]* @.str6, i32 0, i32 0))
  %3 = call i8* @__softboundcets_load_base_shadow_stack(i32 0)
  %4 = call i8* @__softboundcets_load_bound_shadow_stack(i32 0)
  call void @__softboundcets_deallocate_shadow_stack_space()
  store %struct._IO_FILE* %call7, %struct._IO_FILE** %testsuite, align 8
  %bitcast127 = bitcast %struct._IO_FILE** %testsuite to i8*
  call void @__softboundcets_metadata_store(i8* %bitcast127, i8* %3, i8* %4)
  br label %while.cond

while.cond:                                       ; preds = %if.end65, %entry
  %arraydecay8 = getelementptr inbounds [2000 x i8]* %readbuff, i32 0, i32 0
  %5 = load %struct._IO_FILE** %testsuite, align 8
  %bitcast112 = bitcast %struct._IO_FILE** %testsuite to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast112, i8** %base.alloca113, i8** %bound.alloca114)
  %base.load115 = load i8** %base.alloca113
  %bound.load116 = load i8** %bound.alloca114
  call void @__softboundcets_allocate_shadow_stack_space(i32 3)
  call void @__softboundcets_store_base_shadow_stack(i8* %bitcast71, i32 1)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bitcast73, i32 1)
  call void @__softboundcets_store_base_shadow_stack(i8* %base.load115, i32 2)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bound.load116, i32 2)
  %call9 = call i8* @softboundcets_fgets(i8* %arraydecay8, i32 2000, %struct._IO_FILE* %5)
  %6 = call i8* @__softboundcets_load_base_shadow_stack(i32 0)
  %7 = call i8* @__softboundcets_load_bound_shadow_stack(i32 0)
  call void @__softboundcets_deallocate_shadow_stack_space()
  %cmp = icmp ne i8* %call9, null
  br i1 %cmp, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  %8 = load i32* %tested, align 4
  %inc = add nsw i32 %8, 1
  store i32 %inc, i32* %tested, align 4
  %arraydecay11 = getelementptr inbounds [2000 x i8]* %readbuff, i32 0, i32 0
  call void @__softboundcets_allocate_shadow_stack_space(i32 2)
  call void @__softboundcets_store_base_shadow_stack(i8* %bitcast71, i32 1)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bitcast73, i32 1)
  call void @setup_epd_line(i8* %arraydecay11)
  call void @__softboundcets_deallocate_shadow_stack_space()
  %9 = load i32* @white_to_move, align 4
  %tobool = icmp ne i32 %9, 0
  %cond = select i1 %tobool, i32 0, i32 1
  store i32 %cond, i32* @root_to_move, align 4
  call void @clear_tt()
  call void @initialize_hash()
  %10 = load %struct._IO_FILE** @stdout, align 8
  %bitcast117 = bitcast %struct._IO_FILE** @stdout to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast117, i8** %base.alloca118, i8** %bound.alloca119)
  %base.load120 = load i8** %base.alloca118
  %bound.load121 = load i8** %bound.alloca119
  call void @__softboundcets_allocate_shadow_stack_space(i32 2)
  call void @__softboundcets_store_base_shadow_stack(i8* %base.load120, i32 1)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bound.load121, i32 1)
  call void @display_board(%struct._IO_FILE* %10, i32 1)
  call void @__softboundcets_deallocate_shadow_stack_space()
  store i32 0, i32* @forcedwin, align 4
  %call12 = call i32 @interrupt()
  %tobool13 = icmp ne i32 %call12, 0
  br i1 %tobool13, label %if.then, label %if.end

if.then:                                          ; preds = %while.body
  %arraydecay14 = getelementptr inbounds [2000 x i8]* %tempbuff, i32 0, i32 0
  %11 = load %struct._IO_FILE** @stdin, align 8
  %bitcast122 = bitcast %struct._IO_FILE** @stdin to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast122, i8** %base.alloca123, i8** %bound.alloca124)
  %base.load125 = load i8** %base.alloca123
  %bound.load126 = load i8** %bound.alloca124
  call void @__softboundcets_allocate_shadow_stack_space(i32 3)
  call void @__softboundcets_store_base_shadow_stack(i8* %bitcast79, i32 1)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bitcast81, i32 1)
  call void @__softboundcets_store_base_shadow_stack(i8* %base.load125, i32 2)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bound.load126, i32 2)
  call void @rinput(i8* %arraydecay14, i32 256, %struct._IO_FILE* %11)
  call void @__softboundcets_deallocate_shadow_stack_space()
  br label %if.end

if.end:                                           ; preds = %if.then, %while.body
  %12 = load i32* %thinktime, align 4
  store i32 %12, i32* @fixed_time, align 4
  call void @__softboundcets_allocate_shadow_stack_space(i32 2)
  call void @__softboundcets_store_base_shadow_stack(i8* %bitcast103, i32 1)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bitcast105, i32 1)
  call void @think(%struct.move_s* sret %tmp)
  call void @__softboundcets_deallocate_shadow_stack_space()
  %13 = bitcast %struct.move_s* %comp_move to i8*
  %14 = bitcast %struct.move_s* %tmp to i8*
  call void @__softboundcets_memcopy_check(i8* %13, i8* %14, i64 24, i8* %bitcast91, i8* %bitcast93, i8* %bitcast103, i8* %bitcast105)
  call void @__softboundcets_copy_metadata(i8* %13, i8* %14, i64 24)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %13, i8* %14, i64 24, i32 4, i1 false)
  %15 = load i32* @nodes, align 4
  %16 = load i32* @qnodes, align 4
  %conv15 = sitofp i32 %16 to float
  %17 = load i32* @nodes, align 4
  %conv16 = sitofp i32 %17 to float
  %div = fdiv float %conv15, %conv16
  %conv17 = fpext float %div to double
  %mul18 = fmul double %conv17, 1.000000e+02
  %conv19 = fptrunc double %mul18 to float
  %conv20 = fpext float %conv19 to double
  %call21 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([29 x i8]* @.str7, i32 0, i32 0), i32 %15, double %conv20)
  %18 = load i32* @ECacheProbes, align 4
  %19 = load i32* @ECacheHits, align 4
  %20 = load i32* @ECacheHits, align 4
  %conv22 = uitofp i32 %20 to float
  %21 = load i32* @ECacheProbes, align 4
  %conv23 = uitofp i32 %21 to float
  %add = fadd float %conv23, 1.000000e+00
  %div24 = fdiv float %conv22, %add
  %mul25 = fmul float %div24, 1.000000e+02
  %conv26 = fpext float %mul25 to double
  %call27 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([54 x i8]* @.str8, i32 0, i32 0), i32 %18, i32 %19, double %conv26)
  %22 = load i32* @TTStores, align 4
  %23 = load i32* @TTProbes, align 4
  %24 = load i32* @TTHits, align 4
  %25 = load i32* @TTHits, align 4
  %conv28 = uitofp i32 %25 to float
  %26 = load i32* @TTProbes, align 4
  %conv29 = uitofp i32 %26 to float
  %add30 = fadd float %conv29, 1.000000e+00
  %div31 = fdiv float %conv28, %add30
  %mul32 = fmul float %div31, 1.000000e+02
  %conv33 = fpext float %mul32 to double
  %call34 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([60 x i8]* @.str9, i32 0, i32 0), i32 %22, i32 %23, i32 %24, double %conv33)
  %27 = load i32* @NTries, align 4
  %28 = load i32* @NCuts, align 4
  %29 = load i32* @NCuts, align 4
  %conv35 = uitofp i32 %29 to float
  %mul36 = fmul float %conv35, 1.000000e+02
  %30 = load i32* @NTries, align 4
  %conv37 = uitofp i32 %30 to float
  %add38 = fadd float %conv37, 1.000000e+00
  %div39 = fdiv float %mul36, %add38
  %conv40 = fpext float %div39 to double
  %31 = load i32* @TExt, align 4
  %call41 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([51 x i8]* @.str10, i32 0, i32 0), i32 %27, i32 %28, double %conv40, i32 %31)
  %32 = load i32* @ext_check, align 4
  %33 = load i32* @razor_drop, align 4
  %34 = load i32* @razor_material, align 4
  %call42 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([61 x i8]* @.str11, i32 0, i32 0), i32 %32, i32 %33, i32 %34)
  %35 = load i32* @FHF, align 4
  %conv43 = uitofp i32 %35 to float
  %mul44 = fmul float %conv43, 1.000000e+02
  %36 = load i32* @FH, align 4
  %conv45 = uitofp i32 %36 to float
  %div46 = fdiv float %mul44, %conv45
  %add47 = fadd float %div46, 1.000000e+00
  %conv48 = fpext float %add47 to double
  %call49 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([22 x i8]* @.str12, i32 0, i32 0), double %conv48)
  %37 = load i32* @Material, align 4
  %call50 = call i32 @eval(i32 -1000000, i32 1000000)
  %38 = load i32* @maxposdiff, align 4
  %call51 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([47 x i8]* @.str13, i32 0, i32 0), i32 %37, i32 %call50, i32 %38)
  %call52 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([2 x i8]* @.str58, i32 0, i32 0))
  %39 = load i32* @forcedwin, align 4
  %tobool53 = icmp ne i32 %39, 0
  br i1 %tobool53, label %if.else63, label %if.then54

if.then54:                                        ; preds = %if.end
  %arraydecay55 = getelementptr inbounds [2000 x i8]* %readbuff, i32 0, i32 0
  call void @__softboundcets_allocate_shadow_stack_space(i32 3)
  call void @__softboundcets_store_base_shadow_stack(i8* %bitcast71, i32 1)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bitcast73, i32 1)
  call void @__softboundcets_store_base_shadow_stack(i8* %bitcast91, i32 2)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bitcast93, i32 2)
  %call56 = call i32 @check_solution(i8* %arraydecay55, %struct.move_s* byval align 8 %comp_move)
  call void @__softboundcets_deallocate_shadow_stack_space()
  %tobool57 = icmp ne i32 %call56, 0
  br i1 %tobool57, label %if.then58, label %if.else

if.then58:                                        ; preds = %if.then54
  %40 = load i32* %found, align 4
  %inc59 = add nsw i32 %40, 1
  store i32 %inc59, i32* %found, align 4
  %call60 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([17 x i8]* @.str14, i32 0, i32 0))
  br label %if.end62

if.else:                                          ; preds = %if.then54
  %call61 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([21 x i8]* @.str15, i32 0, i32 0))
  br label %if.end62

if.end62:                                         ; preds = %if.else, %if.then58
  br label %if.end65

if.else63:                                        ; preds = %if.end
  %41 = load i32* %found, align 4
  %inc64 = add nsw i32 %41, 1
  store i32 %inc64, i32* %found, align 4
  br label %if.end65

if.end65:                                         ; preds = %if.else63, %if.end62
  %42 = load i32* %found, align 4
  %43 = load i32* %tested, align 4
  %call66 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([15 x i8]* @.str169, i32 0, i32 0), i32 %42, i32 %43)
  br label %while.cond

while.end:                                        ; preds = %while.cond
  %call67 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([2 x i8]* @.str58, i32 0, i32 0))
  ret void
}

declare i64 @softboundcets_atol(i8*)

declare %struct._IO_FILE* @softboundcets_fopen(i8*, i8*)

declare i8* @softboundcets_fgets(i8*, i32, %struct._IO_FILE*)

; Function Attrs: nounwind uwtable
define internal void @run_autotest(i8* %testset) #0 {
entry:
  %base.alloca70 = alloca i8*
  %bound.alloca71 = alloca i8*
  %base.alloca65 = alloca i8*
  %bound.alloca66 = alloca i8*
  %base.alloca60 = alloca i8*
  %bound.alloca61 = alloca i8*
  %base.alloca55 = alloca i8*
  %bound.alloca56 = alloca i8*
  %base.alloca50 = alloca i8*
  %bound.alloca51 = alloca i8*
  %base.alloca = alloca i8*
  %bound.alloca = alloca i8*
  %0 = call i8* @__softboundcets_load_base_shadow_stack(i32 1)
  %1 = call i8* @__softboundcets_load_bound_shadow_stack(i32 1)
  %testset.addr = alloca i8*, align 8
  %testset.addr18 = bitcast i8** %testset.addr to i8**
  %bitcast = bitcast i8** %testset.addr to i8*
  %mtmp = getelementptr i8** %testset.addr18, i32 1
  %bitcast19 = bitcast i8** %mtmp to i8*
  %testsuite = alloca %struct._IO_FILE*, align 8
  %testsuite20 = bitcast %struct._IO_FILE** %testsuite to %struct._IO_FILE**
  %bitcast21 = bitcast %struct._IO_FILE** %testsuite to i8*
  %mtmp22 = getelementptr %struct._IO_FILE** %testsuite20, i32 1
  %bitcast23 = bitcast %struct._IO_FILE** %mtmp22 to i8*
  %readbuff = alloca [256 x i8], align 16
  %readbuff24 = bitcast [256 x i8]* %readbuff to [256 x i8]*
  %bitcast25 = bitcast [256 x i8]* %readbuff to i8*
  %mtmp26 = getelementptr [256 x i8]* %readbuff24, i32 1
  %bitcast27 = bitcast [256 x i8]* %mtmp26 to i8*
  %searchdepth = alloca i32, align 4
  %searchdepth28 = bitcast i32* %searchdepth to i32*
  %bitcast29 = bitcast i32* %searchdepth to i8*
  %mtmp30 = getelementptr i32* %searchdepth28, i32 1
  %bitcast31 = bitcast i32* %mtmp30 to i8*
  %start = alloca i64, align 8
  %start32 = bitcast i64* %start to i64*
  %bitcast33 = bitcast i64* %start to i8*
  %mtmp34 = getelementptr i64* %start32, i32 1
  %bitcast35 = bitcast i64* %mtmp34 to i8*
  %end = alloca i64, align 8
  %end36 = bitcast i64* %end to i64*
  %bitcast37 = bitcast i64* %end to i8*
  %mtmp38 = getelementptr i64* %end36, i32 1
  %bitcast39 = bitcast i64* %mtmp38 to i8*
  %comp_move = alloca %struct.move_s, align 4
  %comp_move40 = bitcast %struct.move_s* %comp_move to %struct.move_s*
  %bitcast41 = bitcast %struct.move_s* %comp_move to i8*
  %mtmp42 = getelementptr %struct.move_s* %comp_move40, i32 1
  %bitcast43 = bitcast %struct.move_s* %mtmp42 to i8*
  %tmp = alloca %struct.move_s, align 4
  %tmp44 = bitcast %struct.move_s* %tmp to %struct.move_s*
  %bitcast45 = bitcast %struct.move_s* %tmp to i8*
  %mtmp46 = getelementptr %struct.move_s* %tmp44, i32 1
  %bitcast47 = bitcast %struct.move_s* %mtmp46 to i8*
  store i8* %testset, i8** %testset.addr, align 8
  %bitcast74 = bitcast i8** %testset.addr to i8*
  call void @__softboundcets_metadata_store(i8* %bitcast74, i8* %0, i8* %1)
  %2 = load i8** %testset.addr, align 8
  %bitcast48 = bitcast i8** %testset.addr to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast48, i8** %base.alloca, i8** %bound.alloca)
  %base.load = load i8** %base.alloca
  %bound.load = load i8** %bound.alloca
  call void @__softboundcets_allocate_shadow_stack_space(i32 3)
  call void @__softboundcets_store_base_shadow_stack(i8* %base.load, i32 1)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bound.load, i32 1)
  call void @__softboundcets_store_base_shadow_stack(i8* getelementptr inbounds ([2 x i8]* @.str6, i32 0, i32 0), i32 2)
  call void @__softboundcets_store_bound_shadow_stack(i8* getelementptr inbounds ([2 x i8]* @.str6, i32 1, i32 0), i32 2)
  %call = call %struct._IO_FILE* @softboundcets_fopen(i8* %2, i8* getelementptr inbounds ([2 x i8]* @.str6, i32 0, i32 0))
  %3 = call i8* @__softboundcets_load_base_shadow_stack(i32 0)
  %4 = call i8* @__softboundcets_load_bound_shadow_stack(i32 0)
  call void @__softboundcets_deallocate_shadow_stack_space()
  store %struct._IO_FILE* %call, %struct._IO_FILE** %testsuite, align 8
  %bitcast75 = bitcast %struct._IO_FILE** %testsuite to i8*
  call void @__softboundcets_metadata_store(i8* %bitcast75, i8* %3, i8* %4)
  %5 = load %struct._IO_FILE** %testsuite, align 8
  %bitcast49 = bitcast %struct._IO_FILE** %testsuite to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast49, i8** %base.alloca50, i8** %bound.alloca51)
  %base.load52 = load i8** %base.alloca50
  %bound.load53 = load i8** %bound.alloca51
  %cmp = icmp eq %struct._IO_FILE* %5, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  call void @softboundcets_exit(i32 1) #4
  unreachable

if.end:                                           ; preds = %entry
  %call1 = call i64 @rtime()
  store i64 %call1, i64* %start, align 8
  br label %while.cond

while.cond:                                       ; preds = %if.end12, %if.end
  %arraydecay = getelementptr inbounds [256 x i8]* %readbuff, i32 0, i32 0
  %6 = load %struct._IO_FILE** %testsuite, align 8
  %bitcast54 = bitcast %struct._IO_FILE** %testsuite to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast54, i8** %base.alloca55, i8** %bound.alloca56)
  %base.load57 = load i8** %base.alloca55
  %bound.load58 = load i8** %bound.alloca56
  call void @__softboundcets_allocate_shadow_stack_space(i32 3)
  call void @__softboundcets_store_base_shadow_stack(i8* %bitcast25, i32 1)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bitcast27, i32 1)
  call void @__softboundcets_store_base_shadow_stack(i8* %base.load57, i32 2)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bound.load58, i32 2)
  %call2 = call i8* @softboundcets_fgets(i8* %arraydecay, i32 256, %struct._IO_FILE* %6)
  %7 = call i8* @__softboundcets_load_base_shadow_stack(i32 0)
  %8 = call i8* @__softboundcets_load_bound_shadow_stack(i32 0)
  call void @__softboundcets_deallocate_shadow_stack_space()
  %cmp3 = icmp ne i8* %call2, null
  br i1 %cmp3, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  %arraydecay4 = getelementptr inbounds [256 x i8]* %readbuff, i32 0, i32 0
  call void @__softboundcets_allocate_shadow_stack_space(i32 2)
  call void @__softboundcets_store_base_shadow_stack(i8* %bitcast25, i32 1)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bitcast27, i32 1)
  call void @setup_epd_line(i8* %arraydecay4)
  call void @__softboundcets_deallocate_shadow_stack_space()
  %9 = load i32* @white_to_move, align 4
  %tobool = icmp ne i32 %9, 0
  %cond = select i1 %tobool, i32 0, i32 1
  store i32 %cond, i32* @root_to_move, align 4
  call void @clear_tt()
  call void @initialize_hash()
  %call5 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([2 x i8]* @.str58, i32 0, i32 0))
  %10 = load %struct._IO_FILE** @stdout, align 8
  %bitcast59 = bitcast %struct._IO_FILE** @stdout to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast59, i8** %base.alloca60, i8** %bound.alloca61)
  %base.load62 = load i8** %base.alloca60
  %bound.load63 = load i8** %bound.alloca61
  call void @__softboundcets_allocate_shadow_stack_space(i32 2)
  call void @__softboundcets_store_base_shadow_stack(i8* %base.load62, i32 1)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bound.load63, i32 1)
  call void @display_board(%struct._IO_FILE* %10, i32 1)
  call void @__softboundcets_deallocate_shadow_stack_space()
  %arraydecay6 = getelementptr inbounds [256 x i8]* %readbuff, i32 0, i32 0
  %call7 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([9 x i8]* @.str17, i32 0, i32 0), i8* %arraydecay6)
  %arraydecay8 = getelementptr inbounds [256 x i8]* %readbuff, i32 0, i32 0
  %11 = load %struct._IO_FILE** %testsuite, align 8
  %bitcast64 = bitcast %struct._IO_FILE** %testsuite to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast64, i8** %base.alloca65, i8** %bound.alloca66)
  %base.load67 = load i8** %base.alloca65
  %bound.load68 = load i8** %bound.alloca66
  call void @__softboundcets_allocate_shadow_stack_space(i32 3)
  call void @__softboundcets_store_base_shadow_stack(i8* %bitcast25, i32 1)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bitcast27, i32 1)
  call void @__softboundcets_store_base_shadow_stack(i8* %base.load67, i32 2)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bound.load68, i32 2)
  %call9 = call i8* @softboundcets_fgets(i8* %arraydecay8, i32 256, %struct._IO_FILE* %11)
  %12 = call i8* @__softboundcets_load_base_shadow_stack(i32 0)
  %13 = call i8* @__softboundcets_load_bound_shadow_stack(i32 0)
  call void @__softboundcets_deallocate_shadow_stack_space()
  %cmp10 = icmp eq i8* %call9, null
  br i1 %cmp10, label %if.then11, label %if.end12

if.then11:                                        ; preds = %while.body
  call void @softboundcets_exit(i32 1) #4
  unreachable

if.end12:                                         ; preds = %while.body
  %arraydecay13 = getelementptr inbounds [256 x i8]* %readbuff, i32 0, i32 0
  call void @__softboundcets_allocate_shadow_stack_space(i32 2)
  call void @__softboundcets_store_base_shadow_stack(i8* %bitcast25, i32 1)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bitcast27, i32 1)
  %call14 = call i32 @softboundcets_atoi(i8* %arraydecay13) #6
  call void @__softboundcets_deallocate_shadow_stack_space()
  store i32 %call14, i32* %searchdepth, align 4
  %14 = load i32* %searchdepth, align 4
  %call15 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([21 x i8]* @.str18, i32 0, i32 0), i32 %14)
  %15 = load i32* %searchdepth, align 4
  store i32 %15, i32* @maxdepth, align 4
  store i32 1000000, i32* @fixed_time, align 4
  call void @__softboundcets_allocate_shadow_stack_space(i32 2)
  call void @__softboundcets_store_base_shadow_stack(i8* %bitcast45, i32 1)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bitcast47, i32 1)
  call void @think(%struct.move_s* sret %tmp)
  call void @__softboundcets_deallocate_shadow_stack_space()
  %16 = bitcast %struct.move_s* %comp_move to i8*
  %17 = bitcast %struct.move_s* %tmp to i8*
  call void @__softboundcets_memcopy_check(i8* %16, i8* %17, i64 24, i8* %bitcast41, i8* %bitcast43, i8* %bitcast45, i8* %bitcast47)
  call void @__softboundcets_copy_metadata(i8* %16, i8* %17, i64 24)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %16, i8* %17, i64 24, i32 4, i1 false)
  br label %while.cond

while.end:                                        ; preds = %while.cond
  %call16 = call i64 @rtime()
  store i64 %call16, i64* %end, align 8
  %18 = load %struct._IO_FILE** %testsuite, align 8
  %bitcast69 = bitcast %struct._IO_FILE** %testsuite to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast69, i8** %base.alloca70, i8** %bound.alloca71)
  %base.load72 = load i8** %base.alloca70
  %bound.load73 = load i8** %bound.alloca71
  call void @__softboundcets_allocate_shadow_stack_space(i32 2)
  call void @__softboundcets_store_base_shadow_stack(i8* %base.load72, i32 1)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bound.load73, i32 1)
  %call17 = call i32 @softboundcets_fclose(%struct._IO_FILE* %18)
  call void @__softboundcets_deallocate_shadow_stack_space()
  call void @softboundcets_exit(i32 0) #4
  unreachable

return:                                           ; No predecessors!
  ret void
}

declare i32 @softboundcets_fclose(%struct._IO_FILE*)

; Function Attrs: nounwind uwtable
define internal void @initialize_eval() #0 {
entry:
  %i = alloca i32, align 4
  %i221 = bitcast i32* %i to i32*
  %bitcast = bitcast i32* %i to i8*
  %mtmp = getelementptr i32* %i221, i32 1
  %bitcast222 = bitcast i32* %mtmp to i8*
  %j = alloca i32, align 4
  %j223 = bitcast i32* %j to i32*
  %bitcast224 = bitcast i32* %j to i8*
  %mtmp225 = getelementptr i32* %j223, i32 1
  %bitcast226 = bitcast i32* %mtmp225 to i8*
  %sd = alloca i32, align 4
  %sd227 = bitcast i32* %sd to i32*
  %bitcast228 = bitcast i32* %sd to i8*
  %mtmp229 = getelementptr i32* %sd227, i32 1
  %bitcast230 = bitcast i32* %mtmp229 to i8*
  %sdi = alloca i32, align 4
  %sdi231 = bitcast i32* %sdi to i32*
  %bitcast232 = bitcast i32* %sdi to i8*
  %mtmp233 = getelementptr i32* %sdi231, i32 1
  %bitcast234 = bitcast i32* %mtmp233 to i8*
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc23, %entry
  %0 = load i32* %i, align 4
  %cmp = icmp slt i32 %0, 64
  br i1 %cmp, label %for.body, label %for.end25

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %j, align 4
  br label %for.cond1

for.cond1:                                        ; preds = %for.inc, %for.body
  %1 = load i32* %j, align 4
  %cmp2 = icmp slt i32 %1, 64
  br i1 %cmp2, label %for.body3, label %for.end

for.body3:                                        ; preds = %for.cond1
  %2 = load i32* %i, align 4
  %and = and i32 %2, 7
  %3 = load i32* %j, align 4
  %and4 = and i32 %3, 7
  %sub = sub nsw i32 %and, %and4
  %call = call i32 @softboundcets_abs(i32 %sub) #5
  store i32 %call, i32* %sd, align 4
  %4 = load i32* %i, align 4
  %shr = ashr i32 %4, 3
  %5 = load i32* %j, align 4
  %shr5 = ashr i32 %5, 3
  %sub6 = sub nsw i32 %shr, %shr5
  %call7 = call i32 @softboundcets_abs(i32 %sub6) #5
  store i32 %call7, i32* %sdi, align 4
  %6 = load i32* %sd, align 4
  %7 = load i32* %sdi, align 4
  %add = add nsw i32 %6, %7
  %8 = load i32* %j, align 4
  %idxprom = sext i32 %8 to i64
  %bitcast235 = bitcast [64 x i32]* @upscale to i8*
  %bitcast236 = bitcast [64 x i32]* getelementptr inbounds ([64 x i32]* @upscale, i32 1) to i8*
  %arrayidx = getelementptr inbounds [64 x i32]* @upscale, i32 0, i64 %idxprom
  %9 = load i32* %arrayidx, align 4
  %idxprom8 = sext i32 %9 to i64
  %10 = load i32* %i, align 4
  %idxprom9 = sext i32 %10 to i64
  %bitcast237 = bitcast [64 x i32]* @upscale to i8*
  %bitcast238 = bitcast [64 x i32]* getelementptr inbounds ([64 x i32]* @upscale, i32 1) to i8*
  %arrayidx10 = getelementptr inbounds [64 x i32]* @upscale, i32 0, i64 %idxprom9
  %11 = load i32* %arrayidx10, align 4
  %idxprom11 = sext i32 %11 to i64
  %arrayidx12 = getelementptr inbounds [144 x [144 x i32]]* @rookdistance, i32 0, i64 %idxprom11
  %arrayidx13 = getelementptr inbounds [144 x i32]* %arrayidx12, i32 0, i64 %idxprom8
  store i32 %add, i32* %arrayidx13, align 4
  %12 = load i32* %sd, align 4
  %13 = load i32* %sdi, align 4
  %cmp14 = icmp sgt i32 %12, %13
  br i1 %cmp14, label %cond.true, label %cond.false

cond.true:                                        ; preds = %for.body3
  %14 = load i32* %sd, align 4
  br label %cond.end

cond.false:                                       ; preds = %for.body3
  %15 = load i32* %sdi, align 4
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %14, %cond.true ], [ %15, %cond.false ]
  %16 = load i32* %j, align 4
  %idxprom15 = sext i32 %16 to i64
  %bitcast239 = bitcast [64 x i32]* @upscale to i8*
  %bitcast240 = bitcast [64 x i32]* getelementptr inbounds ([64 x i32]* @upscale, i32 1) to i8*
  %arrayidx16 = getelementptr inbounds [64 x i32]* @upscale, i32 0, i64 %idxprom15
  %17 = load i32* %arrayidx16, align 4
  %idxprom17 = sext i32 %17 to i64
  %18 = load i32* %i, align 4
  %idxprom18 = sext i32 %18 to i64
  %bitcast241 = bitcast [64 x i32]* @upscale to i8*
  %bitcast242 = bitcast [64 x i32]* getelementptr inbounds ([64 x i32]* @upscale, i32 1) to i8*
  %arrayidx19 = getelementptr inbounds [64 x i32]* @upscale, i32 0, i64 %idxprom18
  %19 = load i32* %arrayidx19, align 4
  %idxprom20 = sext i32 %19 to i64
  %arrayidx21 = getelementptr inbounds [144 x [144 x i32]]* @distance, i32 0, i64 %idxprom20
  %arrayidx22 = getelementptr inbounds [144 x i32]* %arrayidx21, i32 0, i64 %idxprom17
  store i32 %cond, i32* %arrayidx22, align 4
  br label %for.inc

for.inc:                                          ; preds = %cond.end
  %20 = load i32* %j, align 4
  %inc = add nsw i32 %20, 1
  store i32 %inc, i32* %j, align 4
  br label %for.cond1

for.end:                                          ; preds = %for.cond1
  br label %for.inc23

for.inc23:                                        ; preds = %for.end
  %21 = load i32* %i, align 4
  %inc24 = add nsw i32 %21, 1
  store i32 %inc24, i32* %i, align 4
  br label %for.cond

for.end25:                                        ; preds = %for.cond
  store i32 0, i32* %i, align 4
  br label %for.cond26

for.cond26:                                       ; preds = %for.inc218, %for.end25
  %22 = load i32* %i, align 4
  %cmp27 = icmp slt i32 %22, 144
  br i1 %cmp27, label %for.body28, label %for.end220

for.body28:                                       ; preds = %for.cond26
  store i32 0, i32* %j, align 4
  br label %for.cond29

for.cond29:                                       ; preds = %for.inc215, %for.body28
  %23 = load i32* %j, align 4
  %cmp30 = icmp slt i32 %23, 144
  br i1 %cmp30, label %for.body31, label %for.end217

for.body31:                                       ; preds = %for.cond29
  %24 = load i32* %i, align 4
  %idxprom32 = sext i32 %24 to i64
  %bitcast243 = bitcast [144 x i32]* @Xrank to i8*
  %bitcast244 = bitcast [144 x i32]* getelementptr inbounds ([144 x i32]* @Xrank, i32 1) to i8*
  %arrayidx33 = getelementptr inbounds [144 x i32]* @Xrank, i32 0, i64 %idxprom32
  %25 = load i32* %arrayidx33, align 4
  %26 = load i32* %j, align 4
  %idxprom34 = sext i32 %26 to i64
  %bitcast245 = bitcast [144 x i32]* @Xrank to i8*
  %bitcast246 = bitcast [144 x i32]* getelementptr inbounds ([144 x i32]* @Xrank, i32 1) to i8*
  %arrayidx35 = getelementptr inbounds [144 x i32]* @Xrank, i32 0, i64 %idxprom34
  %27 = load i32* %arrayidx35, align 4
  %sub36 = sub nsw i32 %25, %27
  %call37 = call i32 @softboundcets_abs(i32 %sub36) #5
  %28 = load i32* %i, align 4
  %idxprom38 = sext i32 %28 to i64
  %bitcast247 = bitcast [144 x i32]* @Xfile to i8*
  %bitcast248 = bitcast [144 x i32]* getelementptr inbounds ([144 x i32]* @Xfile, i32 1) to i8*
  %arrayidx39 = getelementptr inbounds [144 x i32]* @Xfile, i32 0, i64 %idxprom38
  %29 = load i32* %arrayidx39, align 4
  %30 = load i32* %j, align 4
  %idxprom40 = sext i32 %30 to i64
  %bitcast249 = bitcast [144 x i32]* @Xfile to i8*
  %bitcast250 = bitcast [144 x i32]* getelementptr inbounds ([144 x i32]* @Xfile, i32 1) to i8*
  %arrayidx41 = getelementptr inbounds [144 x i32]* @Xfile, i32 0, i64 %idxprom40
  %31 = load i32* %arrayidx41, align 4
  %sub42 = sub nsw i32 %29, %31
  %call43 = call i32 @softboundcets_abs(i32 %sub42) #5
  %cmp44 = icmp sgt i32 %call37, %call43
  br i1 %cmp44, label %cond.true45, label %cond.false52

cond.true45:                                      ; preds = %for.body31
  %32 = load i32* %i, align 4
  %idxprom46 = sext i32 %32 to i64
  %bitcast251 = bitcast [144 x i32]* @Xrank to i8*
  %bitcast252 = bitcast [144 x i32]* getelementptr inbounds ([144 x i32]* @Xrank, i32 1) to i8*
  %arrayidx47 = getelementptr inbounds [144 x i32]* @Xrank, i32 0, i64 %idxprom46
  %33 = load i32* %arrayidx47, align 4
  %34 = load i32* %j, align 4
  %idxprom48 = sext i32 %34 to i64
  %bitcast253 = bitcast [144 x i32]* @Xrank to i8*
  %bitcast254 = bitcast [144 x i32]* getelementptr inbounds ([144 x i32]* @Xrank, i32 1) to i8*
  %arrayidx49 = getelementptr inbounds [144 x i32]* @Xrank, i32 0, i64 %idxprom48
  %35 = load i32* %arrayidx49, align 4
  %sub50 = sub nsw i32 %33, %35
  %call51 = call i32 @softboundcets_abs(i32 %sub50) #5
  br label %cond.end59

cond.false52:                                     ; preds = %for.body31
  %36 = load i32* %i, align 4
  %idxprom53 = sext i32 %36 to i64
  %bitcast255 = bitcast [144 x i32]* @Xfile to i8*
  %bitcast256 = bitcast [144 x i32]* getelementptr inbounds ([144 x i32]* @Xfile, i32 1) to i8*
  %arrayidx54 = getelementptr inbounds [144 x i32]* @Xfile, i32 0, i64 %idxprom53
  %37 = load i32* %arrayidx54, align 4
  %38 = load i32* %j, align 4
  %idxprom55 = sext i32 %38 to i64
  %bitcast257 = bitcast [144 x i32]* @Xfile to i8*
  %bitcast258 = bitcast [144 x i32]* getelementptr inbounds ([144 x i32]* @Xfile, i32 1) to i8*
  %arrayidx56 = getelementptr inbounds [144 x i32]* @Xfile, i32 0, i64 %idxprom55
  %39 = load i32* %arrayidx56, align 4
  %sub57 = sub nsw i32 %37, %39
  %call58 = call i32 @softboundcets_abs(i32 %sub57) #5
  br label %cond.end59

cond.end59:                                       ; preds = %cond.false52, %cond.true45
  %cond60 = phi i32 [ %call51, %cond.true45 ], [ %call58, %cond.false52 ]
  %idxprom61 = sext i32 %cond60 to i64
  %bitcast259 = bitcast [9 x i32]* @pre_p_tropism to i8*
  %bitcast260 = bitcast [9 x i32]* getelementptr inbounds ([9 x i32]* @pre_p_tropism, i32 1) to i8*
  %arrayidx62 = getelementptr inbounds [9 x i32]* @pre_p_tropism, i32 0, i64 %idxprom61
  %40 = load i32* %arrayidx62, align 4
  %conv = trunc i32 %40 to i8
  %41 = load i32* %j, align 4
  %idxprom63 = sext i32 %41 to i64
  %42 = load i32* %i, align 4
  %idxprom64 = sext i32 %42 to i64
  %bitcast261 = bitcast [144 x [144 x i8]]* @p_tropism to i8*
  %bitcast262 = bitcast [144 x [144 x i8]]* getelementptr inbounds ([144 x [144 x i8]]* @p_tropism, i32 1) to i8*
  %arrayidx65 = getelementptr inbounds [144 x [144 x i8]]* @p_tropism, i32 0, i64 %idxprom64
  %arrayidx66 = getelementptr inbounds [144 x i8]* %arrayidx65, i32 0, i64 %idxprom63
  store i8 %conv, i8* %arrayidx66, align 1
  %43 = load i32* %i, align 4
  %idxprom67 = sext i32 %43 to i64
  %bitcast263 = bitcast [144 x i32]* @Xrank to i8*
  %bitcast264 = bitcast [144 x i32]* getelementptr inbounds ([144 x i32]* @Xrank, i32 1) to i8*
  %arrayidx68 = getelementptr inbounds [144 x i32]* @Xrank, i32 0, i64 %idxprom67
  %44 = load i32* %arrayidx68, align 4
  %45 = load i32* %j, align 4
  %idxprom69 = sext i32 %45 to i64
  %bitcast265 = bitcast [144 x i32]* @Xrank to i8*
  %bitcast266 = bitcast [144 x i32]* getelementptr inbounds ([144 x i32]* @Xrank, i32 1) to i8*
  %arrayidx70 = getelementptr inbounds [144 x i32]* @Xrank, i32 0, i64 %idxprom69
  %46 = load i32* %arrayidx70, align 4
  %sub71 = sub nsw i32 %44, %46
  %call72 = call i32 @softboundcets_abs(i32 %sub71) #5
  %47 = load i32* %i, align 4
  %idxprom73 = sext i32 %47 to i64
  %bitcast267 = bitcast [144 x i32]* @Xfile to i8*
  %bitcast268 = bitcast [144 x i32]* getelementptr inbounds ([144 x i32]* @Xfile, i32 1) to i8*
  %arrayidx74 = getelementptr inbounds [144 x i32]* @Xfile, i32 0, i64 %idxprom73
  %48 = load i32* %arrayidx74, align 4
  %49 = load i32* %j, align 4
  %idxprom75 = sext i32 %49 to i64
  %bitcast269 = bitcast [144 x i32]* @Xfile to i8*
  %bitcast270 = bitcast [144 x i32]* getelementptr inbounds ([144 x i32]* @Xfile, i32 1) to i8*
  %arrayidx76 = getelementptr inbounds [144 x i32]* @Xfile, i32 0, i64 %idxprom75
  %50 = load i32* %arrayidx76, align 4
  %sub77 = sub nsw i32 %48, %50
  %call78 = call i32 @softboundcets_abs(i32 %sub77) #5
  %cmp79 = icmp sgt i32 %call72, %call78
  br i1 %cmp79, label %cond.true81, label %cond.false88

cond.true81:                                      ; preds = %cond.end59
  %51 = load i32* %i, align 4
  %idxprom82 = sext i32 %51 to i64
  %bitcast271 = bitcast [144 x i32]* @Xrank to i8*
  %bitcast272 = bitcast [144 x i32]* getelementptr inbounds ([144 x i32]* @Xrank, i32 1) to i8*
  %arrayidx83 = getelementptr inbounds [144 x i32]* @Xrank, i32 0, i64 %idxprom82
  %52 = load i32* %arrayidx83, align 4
  %53 = load i32* %j, align 4
  %idxprom84 = sext i32 %53 to i64
  %bitcast273 = bitcast [144 x i32]* @Xrank to i8*
  %bitcast274 = bitcast [144 x i32]* getelementptr inbounds ([144 x i32]* @Xrank, i32 1) to i8*
  %arrayidx85 = getelementptr inbounds [144 x i32]* @Xrank, i32 0, i64 %idxprom84
  %54 = load i32* %arrayidx85, align 4
  %sub86 = sub nsw i32 %52, %54
  %call87 = call i32 @softboundcets_abs(i32 %sub86) #5
  br label %cond.end95

cond.false88:                                     ; preds = %cond.end59
  %55 = load i32* %i, align 4
  %idxprom89 = sext i32 %55 to i64
  %bitcast275 = bitcast [144 x i32]* @Xfile to i8*
  %bitcast276 = bitcast [144 x i32]* getelementptr inbounds ([144 x i32]* @Xfile, i32 1) to i8*
  %arrayidx90 = getelementptr inbounds [144 x i32]* @Xfile, i32 0, i64 %idxprom89
  %56 = load i32* %arrayidx90, align 4
  %57 = load i32* %j, align 4
  %idxprom91 = sext i32 %57 to i64
  %bitcast277 = bitcast [144 x i32]* @Xfile to i8*
  %bitcast278 = bitcast [144 x i32]* getelementptr inbounds ([144 x i32]* @Xfile, i32 1) to i8*
  %arrayidx92 = getelementptr inbounds [144 x i32]* @Xfile, i32 0, i64 %idxprom91
  %58 = load i32* %arrayidx92, align 4
  %sub93 = sub nsw i32 %56, %58
  %call94 = call i32 @softboundcets_abs(i32 %sub93) #5
  br label %cond.end95

cond.end95:                                       ; preds = %cond.false88, %cond.true81
  %cond96 = phi i32 [ %call87, %cond.true81 ], [ %call94, %cond.false88 ]
  %idxprom97 = sext i32 %cond96 to i64
  %bitcast279 = bitcast [9 x i32]* @pre_b_tropism to i8*
  %bitcast280 = bitcast [9 x i32]* getelementptr inbounds ([9 x i32]* @pre_b_tropism, i32 1) to i8*
  %arrayidx98 = getelementptr inbounds [9 x i32]* @pre_b_tropism, i32 0, i64 %idxprom97
  %59 = load i32* %arrayidx98, align 4
  %conv99 = trunc i32 %59 to i8
  %60 = load i32* %j, align 4
  %idxprom100 = sext i32 %60 to i64
  %61 = load i32* %i, align 4
  %idxprom101 = sext i32 %61 to i64
  %bitcast281 = bitcast [144 x [144 x i8]]* @b_tropism to i8*
  %bitcast282 = bitcast [144 x [144 x i8]]* getelementptr inbounds ([144 x [144 x i8]]* @b_tropism, i32 1) to i8*
  %arrayidx102 = getelementptr inbounds [144 x [144 x i8]]* @b_tropism, i32 0, i64 %idxprom101
  %arrayidx103 = getelementptr inbounds [144 x i8]* %arrayidx102, i32 0, i64 %idxprom100
  store i8 %conv99, i8* %arrayidx103, align 1
  %62 = load i32* %i, align 4
  %idxprom104 = sext i32 %62 to i64
  %bitcast283 = bitcast [144 x i32]* @Xrank to i8*
  %bitcast284 = bitcast [144 x i32]* getelementptr inbounds ([144 x i32]* @Xrank, i32 1) to i8*
  %arrayidx105 = getelementptr inbounds [144 x i32]* @Xrank, i32 0, i64 %idxprom104
  %63 = load i32* %arrayidx105, align 4
  %64 = load i32* %j, align 4
  %idxprom106 = sext i32 %64 to i64
  %bitcast285 = bitcast [144 x i32]* @Xrank to i8*
  %bitcast286 = bitcast [144 x i32]* getelementptr inbounds ([144 x i32]* @Xrank, i32 1) to i8*
  %arrayidx107 = getelementptr inbounds [144 x i32]* @Xrank, i32 0, i64 %idxprom106
  %65 = load i32* %arrayidx107, align 4
  %sub108 = sub nsw i32 %63, %65
  %call109 = call i32 @softboundcets_abs(i32 %sub108) #5
  %66 = load i32* %i, align 4
  %idxprom110 = sext i32 %66 to i64
  %bitcast287 = bitcast [144 x i32]* @Xfile to i8*
  %bitcast288 = bitcast [144 x i32]* getelementptr inbounds ([144 x i32]* @Xfile, i32 1) to i8*
  %arrayidx111 = getelementptr inbounds [144 x i32]* @Xfile, i32 0, i64 %idxprom110
  %67 = load i32* %arrayidx111, align 4
  %68 = load i32* %j, align 4
  %idxprom112 = sext i32 %68 to i64
  %bitcast289 = bitcast [144 x i32]* @Xfile to i8*
  %bitcast290 = bitcast [144 x i32]* getelementptr inbounds ([144 x i32]* @Xfile, i32 1) to i8*
  %arrayidx113 = getelementptr inbounds [144 x i32]* @Xfile, i32 0, i64 %idxprom112
  %69 = load i32* %arrayidx113, align 4
  %sub114 = sub nsw i32 %67, %69
  %call115 = call i32 @softboundcets_abs(i32 %sub114) #5
  %cmp116 = icmp sgt i32 %call109, %call115
  br i1 %cmp116, label %cond.true118, label %cond.false125

cond.true118:                                     ; preds = %cond.end95
  %70 = load i32* %i, align 4
  %idxprom119 = sext i32 %70 to i64
  %bitcast291 = bitcast [144 x i32]* @Xrank to i8*
  %bitcast292 = bitcast [144 x i32]* getelementptr inbounds ([144 x i32]* @Xrank, i32 1) to i8*
  %arrayidx120 = getelementptr inbounds [144 x i32]* @Xrank, i32 0, i64 %idxprom119
  %71 = load i32* %arrayidx120, align 4
  %72 = load i32* %j, align 4
  %idxprom121 = sext i32 %72 to i64
  %bitcast293 = bitcast [144 x i32]* @Xrank to i8*
  %bitcast294 = bitcast [144 x i32]* getelementptr inbounds ([144 x i32]* @Xrank, i32 1) to i8*
  %arrayidx122 = getelementptr inbounds [144 x i32]* @Xrank, i32 0, i64 %idxprom121
  %73 = load i32* %arrayidx122, align 4
  %sub123 = sub nsw i32 %71, %73
  %call124 = call i32 @softboundcets_abs(i32 %sub123) #5
  br label %cond.end132

cond.false125:                                    ; preds = %cond.end95
  %74 = load i32* %i, align 4
  %idxprom126 = sext i32 %74 to i64
  %bitcast295 = bitcast [144 x i32]* @Xfile to i8*
  %bitcast296 = bitcast [144 x i32]* getelementptr inbounds ([144 x i32]* @Xfile, i32 1) to i8*
  %arrayidx127 = getelementptr inbounds [144 x i32]* @Xfile, i32 0, i64 %idxprom126
  %75 = load i32* %arrayidx127, align 4
  %76 = load i32* %j, align 4
  %idxprom128 = sext i32 %76 to i64
  %bitcast297 = bitcast [144 x i32]* @Xfile to i8*
  %bitcast298 = bitcast [144 x i32]* getelementptr inbounds ([144 x i32]* @Xfile, i32 1) to i8*
  %arrayidx129 = getelementptr inbounds [144 x i32]* @Xfile, i32 0, i64 %idxprom128
  %77 = load i32* %arrayidx129, align 4
  %sub130 = sub nsw i32 %75, %77
  %call131 = call i32 @softboundcets_abs(i32 %sub130) #5
  br label %cond.end132

cond.end132:                                      ; preds = %cond.false125, %cond.true118
  %cond133 = phi i32 [ %call124, %cond.true118 ], [ %call131, %cond.false125 ]
  %idxprom134 = sext i32 %cond133 to i64
  %bitcast299 = bitcast [9 x i32]* @pre_n_tropism to i8*
  %bitcast300 = bitcast [9 x i32]* getelementptr inbounds ([9 x i32]* @pre_n_tropism, i32 1) to i8*
  %arrayidx135 = getelementptr inbounds [9 x i32]* @pre_n_tropism, i32 0, i64 %idxprom134
  %78 = load i32* %arrayidx135, align 4
  %conv136 = trunc i32 %78 to i8
  %79 = load i32* %j, align 4
  %idxprom137 = sext i32 %79 to i64
  %80 = load i32* %i, align 4
  %idxprom138 = sext i32 %80 to i64
  %bitcast301 = bitcast [144 x [144 x i8]]* @n_tropism to i8*
  %bitcast302 = bitcast [144 x [144 x i8]]* getelementptr inbounds ([144 x [144 x i8]]* @n_tropism, i32 1) to i8*
  %arrayidx139 = getelementptr inbounds [144 x [144 x i8]]* @n_tropism, i32 0, i64 %idxprom138
  %arrayidx140 = getelementptr inbounds [144 x i8]* %arrayidx139, i32 0, i64 %idxprom137
  store i8 %conv136, i8* %arrayidx140, align 1
  %81 = load i32* %i, align 4
  %idxprom141 = sext i32 %81 to i64
  %bitcast303 = bitcast [144 x i32]* @Xrank to i8*
  %bitcast304 = bitcast [144 x i32]* getelementptr inbounds ([144 x i32]* @Xrank, i32 1) to i8*
  %arrayidx142 = getelementptr inbounds [144 x i32]* @Xrank, i32 0, i64 %idxprom141
  %82 = load i32* %arrayidx142, align 4
  %83 = load i32* %j, align 4
  %idxprom143 = sext i32 %83 to i64
  %bitcast305 = bitcast [144 x i32]* @Xrank to i8*
  %bitcast306 = bitcast [144 x i32]* getelementptr inbounds ([144 x i32]* @Xrank, i32 1) to i8*
  %arrayidx144 = getelementptr inbounds [144 x i32]* @Xrank, i32 0, i64 %idxprom143
  %84 = load i32* %arrayidx144, align 4
  %sub145 = sub nsw i32 %82, %84
  %call146 = call i32 @softboundcets_abs(i32 %sub145) #5
  %85 = load i32* %i, align 4
  %idxprom147 = sext i32 %85 to i64
  %bitcast307 = bitcast [144 x i32]* @Xfile to i8*
  %bitcast308 = bitcast [144 x i32]* getelementptr inbounds ([144 x i32]* @Xfile, i32 1) to i8*
  %arrayidx148 = getelementptr inbounds [144 x i32]* @Xfile, i32 0, i64 %idxprom147
  %86 = load i32* %arrayidx148, align 4
  %87 = load i32* %j, align 4
  %idxprom149 = sext i32 %87 to i64
  %bitcast309 = bitcast [144 x i32]* @Xfile to i8*
  %bitcast310 = bitcast [144 x i32]* getelementptr inbounds ([144 x i32]* @Xfile, i32 1) to i8*
  %arrayidx150 = getelementptr inbounds [144 x i32]* @Xfile, i32 0, i64 %idxprom149
  %88 = load i32* %arrayidx150, align 4
  %sub151 = sub nsw i32 %86, %88
  %call152 = call i32 @softboundcets_abs(i32 %sub151) #5
  %cmp153 = icmp sgt i32 %call146, %call152
  br i1 %cmp153, label %cond.true155, label %cond.false162

cond.true155:                                     ; preds = %cond.end132
  %89 = load i32* %i, align 4
  %idxprom156 = sext i32 %89 to i64
  %bitcast311 = bitcast [144 x i32]* @Xrank to i8*
  %bitcast312 = bitcast [144 x i32]* getelementptr inbounds ([144 x i32]* @Xrank, i32 1) to i8*
  %arrayidx157 = getelementptr inbounds [144 x i32]* @Xrank, i32 0, i64 %idxprom156
  %90 = load i32* %arrayidx157, align 4
  %91 = load i32* %j, align 4
  %idxprom158 = sext i32 %91 to i64
  %bitcast313 = bitcast [144 x i32]* @Xrank to i8*
  %bitcast314 = bitcast [144 x i32]* getelementptr inbounds ([144 x i32]* @Xrank, i32 1) to i8*
  %arrayidx159 = getelementptr inbounds [144 x i32]* @Xrank, i32 0, i64 %idxprom158
  %92 = load i32* %arrayidx159, align 4
  %sub160 = sub nsw i32 %90, %92
  %call161 = call i32 @softboundcets_abs(i32 %sub160) #5
  br label %cond.end169

cond.false162:                                    ; preds = %cond.end132
  %93 = load i32* %i, align 4
  %idxprom163 = sext i32 %93 to i64
  %bitcast315 = bitcast [144 x i32]* @Xfile to i8*
  %bitcast316 = bitcast [144 x i32]* getelementptr inbounds ([144 x i32]* @Xfile, i32 1) to i8*
  %arrayidx164 = getelementptr inbounds [144 x i32]* @Xfile, i32 0, i64 %idxprom163
  %94 = load i32* %arrayidx164, align 4
  %95 = load i32* %j, align 4
  %idxprom165 = sext i32 %95 to i64
  %bitcast317 = bitcast [144 x i32]* @Xfile to i8*
  %bitcast318 = bitcast [144 x i32]* getelementptr inbounds ([144 x i32]* @Xfile, i32 1) to i8*
  %arrayidx166 = getelementptr inbounds [144 x i32]* @Xfile, i32 0, i64 %idxprom165
  %96 = load i32* %arrayidx166, align 4
  %sub167 = sub nsw i32 %94, %96
  %call168 = call i32 @softboundcets_abs(i32 %sub167) #5
  br label %cond.end169

cond.end169:                                      ; preds = %cond.false162, %cond.true155
  %cond170 = phi i32 [ %call161, %cond.true155 ], [ %call168, %cond.false162 ]
  %idxprom171 = sext i32 %cond170 to i64
  %bitcast319 = bitcast [9 x i32]* @pre_r_tropism to i8*
  %bitcast320 = bitcast [9 x i32]* getelementptr inbounds ([9 x i32]* @pre_r_tropism, i32 1) to i8*
  %arrayidx172 = getelementptr inbounds [9 x i32]* @pre_r_tropism, i32 0, i64 %idxprom171
  %97 = load i32* %arrayidx172, align 4
  %conv173 = trunc i32 %97 to i8
  %98 = load i32* %j, align 4
  %idxprom174 = sext i32 %98 to i64
  %99 = load i32* %i, align 4
  %idxprom175 = sext i32 %99 to i64
  %bitcast321 = bitcast [144 x [144 x i8]]* @r_tropism to i8*
  %bitcast322 = bitcast [144 x [144 x i8]]* getelementptr inbounds ([144 x [144 x i8]]* @r_tropism, i32 1) to i8*
  %arrayidx176 = getelementptr inbounds [144 x [144 x i8]]* @r_tropism, i32 0, i64 %idxprom175
  %arrayidx177 = getelementptr inbounds [144 x i8]* %arrayidx176, i32 0, i64 %idxprom174
  store i8 %conv173, i8* %arrayidx177, align 1
  %100 = load i32* %i, align 4
  %idxprom178 = sext i32 %100 to i64
  %bitcast323 = bitcast [144 x i32]* @Xrank to i8*
  %bitcast324 = bitcast [144 x i32]* getelementptr inbounds ([144 x i32]* @Xrank, i32 1) to i8*
  %arrayidx179 = getelementptr inbounds [144 x i32]* @Xrank, i32 0, i64 %idxprom178
  %101 = load i32* %arrayidx179, align 4
  %102 = load i32* %j, align 4
  %idxprom180 = sext i32 %102 to i64
  %bitcast325 = bitcast [144 x i32]* @Xrank to i8*
  %bitcast326 = bitcast [144 x i32]* getelementptr inbounds ([144 x i32]* @Xrank, i32 1) to i8*
  %arrayidx181 = getelementptr inbounds [144 x i32]* @Xrank, i32 0, i64 %idxprom180
  %103 = load i32* %arrayidx181, align 4
  %sub182 = sub nsw i32 %101, %103
  %call183 = call i32 @softboundcets_abs(i32 %sub182) #5
  %104 = load i32* %i, align 4
  %idxprom184 = sext i32 %104 to i64
  %bitcast327 = bitcast [144 x i32]* @Xfile to i8*
  %bitcast328 = bitcast [144 x i32]* getelementptr inbounds ([144 x i32]* @Xfile, i32 1) to i8*
  %arrayidx185 = getelementptr inbounds [144 x i32]* @Xfile, i32 0, i64 %idxprom184
  %105 = load i32* %arrayidx185, align 4
  %106 = load i32* %j, align 4
  %idxprom186 = sext i32 %106 to i64
  %bitcast329 = bitcast [144 x i32]* @Xfile to i8*
  %bitcast330 = bitcast [144 x i32]* getelementptr inbounds ([144 x i32]* @Xfile, i32 1) to i8*
  %arrayidx187 = getelementptr inbounds [144 x i32]* @Xfile, i32 0, i64 %idxprom186
  %107 = load i32* %arrayidx187, align 4
  %sub188 = sub nsw i32 %105, %107
  %call189 = call i32 @softboundcets_abs(i32 %sub188) #5
  %cmp190 = icmp sgt i32 %call183, %call189
  br i1 %cmp190, label %cond.true192, label %cond.false199

cond.true192:                                     ; preds = %cond.end169
  %108 = load i32* %i, align 4
  %idxprom193 = sext i32 %108 to i64
  %bitcast331 = bitcast [144 x i32]* @Xrank to i8*
  %bitcast332 = bitcast [144 x i32]* getelementptr inbounds ([144 x i32]* @Xrank, i32 1) to i8*
  %arrayidx194 = getelementptr inbounds [144 x i32]* @Xrank, i32 0, i64 %idxprom193
  %109 = load i32* %arrayidx194, align 4
  %110 = load i32* %j, align 4
  %idxprom195 = sext i32 %110 to i64
  %bitcast333 = bitcast [144 x i32]* @Xrank to i8*
  %bitcast334 = bitcast [144 x i32]* getelementptr inbounds ([144 x i32]* @Xrank, i32 1) to i8*
  %arrayidx196 = getelementptr inbounds [144 x i32]* @Xrank, i32 0, i64 %idxprom195
  %111 = load i32* %arrayidx196, align 4
  %sub197 = sub nsw i32 %109, %111
  %call198 = call i32 @softboundcets_abs(i32 %sub197) #5
  br label %cond.end206

cond.false199:                                    ; preds = %cond.end169
  %112 = load i32* %i, align 4
  %idxprom200 = sext i32 %112 to i64
  %bitcast335 = bitcast [144 x i32]* @Xfile to i8*
  %bitcast336 = bitcast [144 x i32]* getelementptr inbounds ([144 x i32]* @Xfile, i32 1) to i8*
  %arrayidx201 = getelementptr inbounds [144 x i32]* @Xfile, i32 0, i64 %idxprom200
  %113 = load i32* %arrayidx201, align 4
  %114 = load i32* %j, align 4
  %idxprom202 = sext i32 %114 to i64
  %bitcast337 = bitcast [144 x i32]* @Xfile to i8*
  %bitcast338 = bitcast [144 x i32]* getelementptr inbounds ([144 x i32]* @Xfile, i32 1) to i8*
  %arrayidx203 = getelementptr inbounds [144 x i32]* @Xfile, i32 0, i64 %idxprom202
  %115 = load i32* %arrayidx203, align 4
  %sub204 = sub nsw i32 %113, %115
  %call205 = call i32 @softboundcets_abs(i32 %sub204) #5
  br label %cond.end206

cond.end206:                                      ; preds = %cond.false199, %cond.true192
  %cond207 = phi i32 [ %call198, %cond.true192 ], [ %call205, %cond.false199 ]
  %idxprom208 = sext i32 %cond207 to i64
  %bitcast339 = bitcast [9 x i32]* @pre_q_tropism to i8*
  %bitcast340 = bitcast [9 x i32]* getelementptr inbounds ([9 x i32]* @pre_q_tropism, i32 1) to i8*
  %arrayidx209 = getelementptr inbounds [9 x i32]* @pre_q_tropism, i32 0, i64 %idxprom208
  %116 = load i32* %arrayidx209, align 4
  %conv210 = trunc i32 %116 to i8
  %117 = load i32* %j, align 4
  %idxprom211 = sext i32 %117 to i64
  %118 = load i32* %i, align 4
  %idxprom212 = sext i32 %118 to i64
  %bitcast341 = bitcast [144 x [144 x i8]]* @q_tropism to i8*
  %bitcast342 = bitcast [144 x [144 x i8]]* getelementptr inbounds ([144 x [144 x i8]]* @q_tropism, i32 1) to i8*
  %arrayidx213 = getelementptr inbounds [144 x [144 x i8]]* @q_tropism, i32 0, i64 %idxprom212
  %arrayidx214 = getelementptr inbounds [144 x i8]* %arrayidx213, i32 0, i64 %idxprom211
  store i8 %conv210, i8* %arrayidx214, align 1
  br label %for.inc215

for.inc215:                                       ; preds = %cond.end206
  %119 = load i32* %j, align 4
  %inc216 = add nsw i32 %119, 1
  store i32 %inc216, i32* %j, align 4
  br label %for.cond29

for.end217:                                       ; preds = %for.cond29
  br label %for.inc218

for.inc218:                                       ; preds = %for.end217
  %120 = load i32* %i, align 4
  %inc219 = add nsw i32 %120, 1
  store i32 %inc219, i32* %i, align 4
  br label %for.cond26

for.end220:                                       ; preds = %for.cond26
  ret void
}

declare i32 @softboundcets_abs(i32)

; Function Attrs: nounwind uwtable
define internal i32 @eval(i32 %alpha, i32 %beta) #0 {
entry:
  %retval = alloca i32, align 4
  %retval872 = bitcast i32* %retval to i32*
  %bitcast = bitcast i32* %retval to i8*
  %mtmp = getelementptr i32* %retval872, i32 1
  %bitcast873 = bitcast i32* %mtmp to i8*
  %alpha.addr = alloca i32, align 4
  %alpha.addr874 = bitcast i32* %alpha.addr to i32*
  %bitcast875 = bitcast i32* %alpha.addr to i8*
  %mtmp876 = getelementptr i32* %alpha.addr874, i32 1
  %bitcast877 = bitcast i32* %mtmp876 to i8*
  %beta.addr = alloca i32, align 4
  %beta.addr878 = bitcast i32* %beta.addr to i32*
  %bitcast879 = bitcast i32* %beta.addr to i8*
  %mtmp880 = getelementptr i32* %beta.addr878, i32 1
  %bitcast881 = bitcast i32* %mtmp880 to i8*
  %i = alloca i32, align 4
  %i882 = bitcast i32* %i to i32*
  %bitcast883 = bitcast i32* %i to i8*
  %mtmp884 = getelementptr i32* %i882, i32 1
  %bitcast885 = bitcast i32* %mtmp884 to i8*
  %a = alloca i32, align 4
  %a886 = bitcast i32* %a to i32*
  %bitcast887 = bitcast i32* %a to i8*
  %mtmp888 = getelementptr i32* %a886, i32 1
  %bitcast889 = bitcast i32* %mtmp888 to i8*
  %j = alloca i32, align 4
  %j890 = bitcast i32* %j to i32*
  %bitcast891 = bitcast i32* %j to i8*
  %mtmp892 = getelementptr i32* %j890, i32 1
  %bitcast893 = bitcast i32* %mtmp892 to i8*
  %score = alloca i32, align 4
  %score894 = bitcast i32* %score to i32*
  %bitcast895 = bitcast i32* %score to i8*
  %mtmp896 = getelementptr i32* %score894, i32 1
  %bitcast897 = bitcast i32* %mtmp896 to i8*
  %in_cache = alloca i32, align 4
  %in_cache898 = bitcast i32* %in_cache to i32*
  %bitcast899 = bitcast i32* %in_cache to i8*
  %mtmp900 = getelementptr i32* %in_cache898, i32 1
  %bitcast901 = bitcast i32* %mtmp900 to i8*
  %safety = alloca i32, align 4
  %safety902 = bitcast i32* %safety to i32*
  %bitcast903 = bitcast i32* %safety to i8*
  %mtmp904 = getelementptr i32* %safety902, i32 1
  %bitcast905 = bitcast i32* %mtmp904 to i8*
  %badsquares = alloca i32, align 4
  %badsquares906 = bitcast i32* %badsquares to i32*
  %bitcast907 = bitcast i32* %badsquares to i8*
  %mtmp908 = getelementptr i32* %badsquares906, i32 1
  %bitcast909 = bitcast i32* %mtmp908 to i8*
  %norm_white_hand_eval = alloca i32, align 4
  %norm_white_hand_eval910 = bitcast i32* %norm_white_hand_eval to i32*
  %bitcast911 = bitcast i32* %norm_white_hand_eval to i8*
  %mtmp912 = getelementptr i32* %norm_white_hand_eval910, i32 1
  %bitcast913 = bitcast i32* %mtmp912 to i8*
  %norm_black_hand_eval = alloca i32, align 4
  %norm_black_hand_eval914 = bitcast i32* %norm_black_hand_eval to i32*
  %bitcast915 = bitcast i32* %norm_black_hand_eval to i8*
  %mtmp916 = getelementptr i32* %norm_black_hand_eval914, i32 1
  %bitcast917 = bitcast i32* %mtmp916 to i8*
  %wdev_dscale = alloca i32, align 4
  %wdev_dscale918 = bitcast i32* %wdev_dscale to i32*
  %bitcast919 = bitcast i32* %wdev_dscale to i8*
  %mtmp920 = getelementptr i32* %wdev_dscale918, i32 1
  %bitcast921 = bitcast i32* %mtmp920 to i8*
  %bdev_dscale = alloca i32, align 4
  %bdev_dscale922 = bitcast i32* %bdev_dscale to i32*
  %bitcast923 = bitcast i32* %bdev_dscale to i8*
  %mtmp924 = getelementptr i32* %bdev_dscale922, i32 1
  %bitcast925 = bitcast i32* %mtmp924 to i8*
  store i32 %alpha, i32* %alpha.addr, align 4
  store i32 %beta, i32* %beta.addr, align 4
  store i32 0, i32* %score, align 4
  %0 = load i32* @Variant, align 4
  %cmp = icmp eq i32 %0, 2
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  %1 = load i32* %alpha.addr, align 4
  %2 = load i32* %beta.addr, align 4
  %call = call i32 @std_eval(i32 %1, i32 %2)
  store i32 %call, i32* %retval
  br label %return

if.else:                                          ; preds = %entry
  %3 = load i32* @Variant, align 4
  %cmp1 = icmp eq i32 %3, 3
  br i1 %cmp1, label %if.then2, label %if.else4

if.then2:                                         ; preds = %if.else
  %call3 = call i32 @suicide_eval()
  store i32 %call3, i32* %retval
  br label %return

if.else4:                                         ; preds = %if.else
  %4 = load i32* @Variant, align 4
  %cmp5 = icmp eq i32 %4, 4
  br i1 %cmp5, label %if.then6, label %if.end

if.then6:                                         ; preds = %if.else4
  %call7 = call i32 @losers_eval()
  store i32 %call7, i32* %retval
  br label %return

if.end:                                           ; preds = %if.else4
  br label %if.end8

if.end8:                                          ; preds = %if.end
  br label %if.end9

if.end9:                                          ; preds = %if.end8
  store i32 0, i32* %in_cache, align 4
  call void @__softboundcets_allocate_shadow_stack_space(i32 3)
  call void @__softboundcets_store_base_shadow_stack(i8* %bitcast895, i32 1)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bitcast897, i32 1)
  call void @__softboundcets_store_base_shadow_stack(i8* %bitcast899, i32 2)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bitcast901, i32 2)
  call void @checkECache(i32* %score, i32* %in_cache)
  call void @__softboundcets_deallocate_shadow_stack_space()
  %5 = load i32* %in_cache, align 4
  %tobool = icmp ne i32 %5, 0
  br i1 %tobool, label %if.then10, label %if.end14

if.then10:                                        ; preds = %if.end9
  %6 = load i32* @white_to_move, align 4
  %cmp11 = icmp eq i32 %6, 1
  br i1 %cmp11, label %if.then12, label %if.end13

if.then12:                                        ; preds = %if.then10
  %7 = load i32* %score, align 4
  store i32 %7, i32* %retval
  br label %return

if.end13:                                         ; preds = %if.then10
  %8 = load i32* %score, align 4
  %sub = sub nsw i32 0, %8
  store i32 %sub, i32* %retval
  br label %return

if.end14:                                         ; preds = %if.end9
  %9 = load i32* @cfg_devscale, align 4
  %tobool15 = icmp ne i32 %9, 0
  br i1 %tobool15, label %if.then16, label %if.else46

if.then16:                                        ; preds = %if.end14
  %10 = load i32* @white_to_move, align 4
  %11 = load i32* @comp_color, align 4
  %cmp17 = icmp ne i32 %10, %11
  br i1 %cmp17, label %if.then18, label %if.else28

if.then18:                                        ; preds = %if.then16
  %12 = load i32* @white_hand_eval, align 4
  %cmp19 = icmp sle i32 %12, 200
  br i1 %cmp19, label %land.lhs.true, label %if.else22

land.lhs.true:                                    ; preds = %if.then18
  %13 = load i32* @Variant, align 4
  %cmp20 = icmp ne i32 %13, 1
  br i1 %cmp20, label %if.then21, label %if.else22

if.then21:                                        ; preds = %land.lhs.true
  store i32 2, i32* %wdev_dscale, align 4
  br label %if.end27

if.else22:                                        ; preds = %land.lhs.true, %if.then18
  %14 = load i32* @white_hand_eval, align 4
  %cmp23 = icmp sge i32 %14, 700
  br i1 %cmp23, label %if.then24, label %if.else25

if.then24:                                        ; preds = %if.else22
  store i32 0, i32* %wdev_dscale, align 4
  br label %if.end26

if.else25:                                        ; preds = %if.else22
  store i32 1, i32* %wdev_dscale, align 4
  br label %if.end26

if.end26:                                         ; preds = %if.else25, %if.then24
  br label %if.end27

if.end27:                                         ; preds = %if.end26, %if.then21
  br label %if.end29

if.else28:                                        ; preds = %if.then16
  store i32 0, i32* %wdev_dscale, align 4
  br label %if.end29

if.end29:                                         ; preds = %if.else28, %if.end27
  %15 = load i32* @white_to_move, align 4
  %16 = load i32* @comp_color, align 4
  %cmp30 = icmp eq i32 %15, %16
  br i1 %cmp30, label %if.then31, label %if.else44

if.then31:                                        ; preds = %if.end29
  %17 = load i32* @black_hand_eval, align 4
  %sub32 = sub nsw i32 0, %17
  %cmp33 = icmp sle i32 %sub32, 200
  br i1 %cmp33, label %land.lhs.true34, label %if.else37

land.lhs.true34:                                  ; preds = %if.then31
  %18 = load i32* @Variant, align 4
  %cmp35 = icmp ne i32 %18, 1
  br i1 %cmp35, label %if.then36, label %if.else37

if.then36:                                        ; preds = %land.lhs.true34
  store i32 2, i32* %bdev_dscale, align 4
  br label %if.end43

if.else37:                                        ; preds = %land.lhs.true34, %if.then31
  %19 = load i32* @black_hand_eval, align 4
  %sub38 = sub nsw i32 0, %19
  %cmp39 = icmp sge i32 %sub38, 700
  br i1 %cmp39, label %if.then40, label %if.else41

if.then40:                                        ; preds = %if.else37
  store i32 0, i32* %bdev_dscale, align 4
  br label %if.end42

if.else41:                                        ; preds = %if.else37
  store i32 1, i32* %bdev_dscale, align 4
  br label %if.end42

if.end42:                                         ; preds = %if.else41, %if.then40
  br label %if.end43

if.end43:                                         ; preds = %if.end42, %if.then36
  br label %if.end45

if.else44:                                        ; preds = %if.end29
  store i32 0, i32* %bdev_dscale, align 4
  br label %if.end45

if.end45:                                         ; preds = %if.else44, %if.end43
  br label %if.end47

if.else46:                                        ; preds = %if.end14
  store i32 0, i32* %bdev_dscale, align 4
  store i32 0, i32* %wdev_dscale, align 4
  br label %if.end47

if.end47:                                         ; preds = %if.else46, %if.end45
  store i32 1, i32* %a, align 4
  store i32 1, i32* %j, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.end47
  %20 = load i32* %a, align 4
  %21 = load i32* @piece_count, align 4
  %cmp48 = icmp sle i32 %20, %21
  br i1 %cmp48, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %22 = load i32* %j, align 4
  %idxprom = sext i32 %22 to i64
  %arrayidx = getelementptr inbounds [62 x i32]* @pieces, i32 0, i64 %idxprom
  %23 = load i32* %arrayidx, align 4
  store i32 %23, i32* %i, align 4
  %24 = load i32* %i, align 4
  %tobool49 = icmp ne i32 %24, 0
  br i1 %tobool49, label %if.else51, label %if.then50

if.then50:                                        ; preds = %for.body
  br label %for.inc

if.else51:                                        ; preds = %for.body
  %25 = load i32* %a, align 4
  %inc = add nsw i32 %25, 1
  store i32 %inc, i32* %a, align 4
  br label %if.end52

if.end52:                                         ; preds = %if.else51
  %26 = load i32* %i, align 4
  %idxprom53 = sext i32 %26 to i64
  %arrayidx54 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom53
  %27 = load i32* %arrayidx54, align 4
  switch i32 %27, label %sw.epilog [
    i32 1, label %sw.bb
    i32 2, label %sw.bb63
    i32 7, label %sw.bb75
    i32 8, label %sw.bb87
    i32 11, label %sw.bb99
    i32 12, label %sw.bb111
    i32 3, label %sw.bb123
    i32 4, label %sw.bb135
    i32 9, label %sw.bb147
    i32 10, label %sw.bb159
  ]

sw.bb:                                            ; preds = %if.end52
  %28 = load i32* %score, align 4
  %add = add nsw i32 %28, 100
  store i32 %add, i32* %score, align 4
  %29 = load i32* %i, align 4
  %idxprom55 = sext i32 %29 to i64
  %bitcast930 = bitcast [144 x i32]* @white_pawn to i8*
  %bitcast931 = bitcast [144 x i32]* getelementptr inbounds ([144 x i32]* @white_pawn, i32 1) to i8*
  %arrayidx56 = getelementptr inbounds [144 x i32]* @white_pawn, i32 0, i64 %idxprom55
  %30 = load i32* %arrayidx56, align 4
  %31 = load i32* %wdev_dscale, align 4
  %shr = ashr i32 %30, %31
  %32 = load i32* %score, align 4
  %add57 = add nsw i32 %32, %shr
  store i32 %add57, i32* %score, align 4
  %33 = load i32* @bking_loc, align 4
  %idxprom58 = sext i32 %33 to i64
  %34 = load i32* %i, align 4
  %idxprom59 = sext i32 %34 to i64
  %bitcast932 = bitcast [144 x [144 x i8]]* @p_tropism to i8*
  %bitcast933 = bitcast [144 x [144 x i8]]* getelementptr inbounds ([144 x [144 x i8]]* @p_tropism, i32 1) to i8*
  %arrayidx60 = getelementptr inbounds [144 x [144 x i8]]* @p_tropism, i32 0, i64 %idxprom59
  %arrayidx61 = getelementptr inbounds [144 x i8]* %arrayidx60, i32 0, i64 %idxprom58
  %35 = load i8* %arrayidx61, align 1
  %conv = zext i8 %35 to i32
  %36 = load i32* %score, align 4
  %add62 = add nsw i32 %36, %conv
  store i32 %add62, i32* %score, align 4
  br label %sw.epilog

sw.bb63:                                          ; preds = %if.end52
  %37 = load i32* %score, align 4
  %sub64 = sub nsw i32 %37, 100
  store i32 %sub64, i32* %score, align 4
  %38 = load i32* %i, align 4
  %idxprom65 = sext i32 %38 to i64
  %bitcast934 = bitcast [144 x i32]* @black_pawn to i8*
  %bitcast935 = bitcast [144 x i32]* getelementptr inbounds ([144 x i32]* @black_pawn, i32 1) to i8*
  %arrayidx66 = getelementptr inbounds [144 x i32]* @black_pawn, i32 0, i64 %idxprom65
  %39 = load i32* %arrayidx66, align 4
  %40 = load i32* %bdev_dscale, align 4
  %shr67 = ashr i32 %39, %40
  %41 = load i32* %score, align 4
  %sub68 = sub nsw i32 %41, %shr67
  store i32 %sub68, i32* %score, align 4
  %42 = load i32* @wking_loc, align 4
  %idxprom69 = sext i32 %42 to i64
  %43 = load i32* %i, align 4
  %idxprom70 = sext i32 %43 to i64
  %bitcast936 = bitcast [144 x [144 x i8]]* @p_tropism to i8*
  %bitcast937 = bitcast [144 x [144 x i8]]* getelementptr inbounds ([144 x [144 x i8]]* @p_tropism, i32 1) to i8*
  %arrayidx71 = getelementptr inbounds [144 x [144 x i8]]* @p_tropism, i32 0, i64 %idxprom70
  %arrayidx72 = getelementptr inbounds [144 x i8]* %arrayidx71, i32 0, i64 %idxprom69
  %44 = load i8* %arrayidx72, align 1
  %conv73 = zext i8 %44 to i32
  %45 = load i32* %score, align 4
  %sub74 = sub nsw i32 %45, %conv73
  store i32 %sub74, i32* %score, align 4
  br label %sw.epilog

sw.bb75:                                          ; preds = %if.end52
  %46 = load i32* %score, align 4
  %add76 = add nsw i32 %46, 250
  store i32 %add76, i32* %score, align 4
  %47 = load i32* %i, align 4
  %idxprom77 = sext i32 %47 to i64
  %bitcast938 = bitcast [144 x i32]* @white_rook to i8*
  %bitcast939 = bitcast [144 x i32]* getelementptr inbounds ([144 x i32]* @white_rook, i32 1) to i8*
  %arrayidx78 = getelementptr inbounds [144 x i32]* @white_rook, i32 0, i64 %idxprom77
  %48 = load i32* %arrayidx78, align 4
  %49 = load i32* %wdev_dscale, align 4
  %shr79 = ashr i32 %48, %49
  %50 = load i32* %score, align 4
  %add80 = add nsw i32 %50, %shr79
  store i32 %add80, i32* %score, align 4
  %51 = load i32* @bking_loc, align 4
  %idxprom81 = sext i32 %51 to i64
  %52 = load i32* %i, align 4
  %idxprom82 = sext i32 %52 to i64
  %bitcast940 = bitcast [144 x [144 x i8]]* @r_tropism to i8*
  %bitcast941 = bitcast [144 x [144 x i8]]* getelementptr inbounds ([144 x [144 x i8]]* @r_tropism, i32 1) to i8*
  %arrayidx83 = getelementptr inbounds [144 x [144 x i8]]* @r_tropism, i32 0, i64 %idxprom82
  %arrayidx84 = getelementptr inbounds [144 x i8]* %arrayidx83, i32 0, i64 %idxprom81
  %53 = load i8* %arrayidx84, align 1
  %conv85 = zext i8 %53 to i32
  %54 = load i32* %score, align 4
  %add86 = add nsw i32 %54, %conv85
  store i32 %add86, i32* %score, align 4
  br label %sw.epilog

sw.bb87:                                          ; preds = %if.end52
  %55 = load i32* %score, align 4
  %sub88 = sub nsw i32 %55, 250
  store i32 %sub88, i32* %score, align 4
  %56 = load i32* %i, align 4
  %idxprom89 = sext i32 %56 to i64
  %bitcast942 = bitcast [144 x i32]* @black_rook to i8*
  %bitcast943 = bitcast [144 x i32]* getelementptr inbounds ([144 x i32]* @black_rook, i32 1) to i8*
  %arrayidx90 = getelementptr inbounds [144 x i32]* @black_rook, i32 0, i64 %idxprom89
  %57 = load i32* %arrayidx90, align 4
  %58 = load i32* %bdev_dscale, align 4
  %shr91 = ashr i32 %57, %58
  %59 = load i32* %score, align 4
  %sub92 = sub nsw i32 %59, %shr91
  store i32 %sub92, i32* %score, align 4
  %60 = load i32* @wking_loc, align 4
  %idxprom93 = sext i32 %60 to i64
  %61 = load i32* %i, align 4
  %idxprom94 = sext i32 %61 to i64
  %bitcast944 = bitcast [144 x [144 x i8]]* @r_tropism to i8*
  %bitcast945 = bitcast [144 x [144 x i8]]* getelementptr inbounds ([144 x [144 x i8]]* @r_tropism, i32 1) to i8*
  %arrayidx95 = getelementptr inbounds [144 x [144 x i8]]* @r_tropism, i32 0, i64 %idxprom94
  %arrayidx96 = getelementptr inbounds [144 x i8]* %arrayidx95, i32 0, i64 %idxprom93
  %62 = load i8* %arrayidx96, align 1
  %conv97 = zext i8 %62 to i32
  %63 = load i32* %score, align 4
  %sub98 = sub nsw i32 %63, %conv97
  store i32 %sub98, i32* %score, align 4
  br label %sw.epilog

sw.bb99:                                          ; preds = %if.end52
  %64 = load i32* %score, align 4
  %add100 = add nsw i32 %64, 230
  store i32 %add100, i32* %score, align 4
  %65 = load i32* %i, align 4
  %idxprom101 = sext i32 %65 to i64
  %bitcast946 = bitcast [144 x i32]* @pcsqbishop to i8*
  %bitcast947 = bitcast [144 x i32]* getelementptr inbounds ([144 x i32]* @pcsqbishop, i32 1) to i8*
  %arrayidx102 = getelementptr inbounds [144 x i32]* @pcsqbishop, i32 0, i64 %idxprom101
  %66 = load i32* %arrayidx102, align 4
  %67 = load i32* %wdev_dscale, align 4
  %shr103 = ashr i32 %66, %67
  %68 = load i32* %score, align 4
  %add104 = add nsw i32 %68, %shr103
  store i32 %add104, i32* %score, align 4
  %69 = load i32* @bking_loc, align 4
  %idxprom105 = sext i32 %69 to i64
  %70 = load i32* %i, align 4
  %idxprom106 = sext i32 %70 to i64
  %bitcast948 = bitcast [144 x [144 x i8]]* @b_tropism to i8*
  %bitcast949 = bitcast [144 x [144 x i8]]* getelementptr inbounds ([144 x [144 x i8]]* @b_tropism, i32 1) to i8*
  %arrayidx107 = getelementptr inbounds [144 x [144 x i8]]* @b_tropism, i32 0, i64 %idxprom106
  %arrayidx108 = getelementptr inbounds [144 x i8]* %arrayidx107, i32 0, i64 %idxprom105
  %71 = load i8* %arrayidx108, align 1
  %conv109 = zext i8 %71 to i32
  %72 = load i32* %score, align 4
  %add110 = add nsw i32 %72, %conv109
  store i32 %add110, i32* %score, align 4
  br label %sw.epilog

sw.bb111:                                         ; preds = %if.end52
  %73 = load i32* %score, align 4
  %sub112 = sub nsw i32 %73, 230
  store i32 %sub112, i32* %score, align 4
  %74 = load i32* %i, align 4
  %idxprom113 = sext i32 %74 to i64
  %bitcast950 = bitcast [144 x i32]* @pcsqbishop to i8*
  %bitcast951 = bitcast [144 x i32]* getelementptr inbounds ([144 x i32]* @pcsqbishop, i32 1) to i8*
  %arrayidx114 = getelementptr inbounds [144 x i32]* @pcsqbishop, i32 0, i64 %idxprom113
  %75 = load i32* %arrayidx114, align 4
  %76 = load i32* %bdev_dscale, align 4
  %shr115 = ashr i32 %75, %76
  %77 = load i32* %score, align 4
  %sub116 = sub nsw i32 %77, %shr115
  store i32 %sub116, i32* %score, align 4
  %78 = load i32* @wking_loc, align 4
  %idxprom117 = sext i32 %78 to i64
  %79 = load i32* %i, align 4
  %idxprom118 = sext i32 %79 to i64
  %bitcast952 = bitcast [144 x [144 x i8]]* @b_tropism to i8*
  %bitcast953 = bitcast [144 x [144 x i8]]* getelementptr inbounds ([144 x [144 x i8]]* @b_tropism, i32 1) to i8*
  %arrayidx119 = getelementptr inbounds [144 x [144 x i8]]* @b_tropism, i32 0, i64 %idxprom118
  %arrayidx120 = getelementptr inbounds [144 x i8]* %arrayidx119, i32 0, i64 %idxprom117
  %80 = load i8* %arrayidx120, align 1
  %conv121 = zext i8 %80 to i32
  %81 = load i32* %score, align 4
  %sub122 = sub nsw i32 %81, %conv121
  store i32 %sub122, i32* %score, align 4
  br label %sw.epilog

sw.bb123:                                         ; preds = %if.end52
  %82 = load i32* %score, align 4
  %add124 = add nsw i32 %82, 210
  store i32 %add124, i32* %score, align 4
  %83 = load i32* %i, align 4
  %idxprom125 = sext i32 %83 to i64
  %bitcast954 = bitcast [144 x i32]* @white_knight to i8*
  %bitcast955 = bitcast [144 x i32]* getelementptr inbounds ([144 x i32]* @white_knight, i32 1) to i8*
  %arrayidx126 = getelementptr inbounds [144 x i32]* @white_knight, i32 0, i64 %idxprom125
  %84 = load i32* %arrayidx126, align 4
  %85 = load i32* %wdev_dscale, align 4
  %shr127 = ashr i32 %84, %85
  %86 = load i32* %score, align 4
  %add128 = add nsw i32 %86, %shr127
  store i32 %add128, i32* %score, align 4
  %87 = load i32* @bking_loc, align 4
  %idxprom129 = sext i32 %87 to i64
  %88 = load i32* %i, align 4
  %idxprom130 = sext i32 %88 to i64
  %bitcast956 = bitcast [144 x [144 x i8]]* @n_tropism to i8*
  %bitcast957 = bitcast [144 x [144 x i8]]* getelementptr inbounds ([144 x [144 x i8]]* @n_tropism, i32 1) to i8*
  %arrayidx131 = getelementptr inbounds [144 x [144 x i8]]* @n_tropism, i32 0, i64 %idxprom130
  %arrayidx132 = getelementptr inbounds [144 x i8]* %arrayidx131, i32 0, i64 %idxprom129
  %89 = load i8* %arrayidx132, align 1
  %conv133 = zext i8 %89 to i32
  %90 = load i32* %score, align 4
  %add134 = add nsw i32 %90, %conv133
  store i32 %add134, i32* %score, align 4
  br label %sw.epilog

sw.bb135:                                         ; preds = %if.end52
  %91 = load i32* %score, align 4
  %sub136 = sub nsw i32 %91, 210
  store i32 %sub136, i32* %score, align 4
  %92 = load i32* %i, align 4
  %idxprom137 = sext i32 %92 to i64
  %bitcast958 = bitcast [144 x i32]* @black_knight to i8*
  %bitcast959 = bitcast [144 x i32]* getelementptr inbounds ([144 x i32]* @black_knight, i32 1) to i8*
  %arrayidx138 = getelementptr inbounds [144 x i32]* @black_knight, i32 0, i64 %idxprom137
  %93 = load i32* %arrayidx138, align 4
  %94 = load i32* %bdev_dscale, align 4
  %shr139 = ashr i32 %93, %94
  %95 = load i32* %score, align 4
  %sub140 = sub nsw i32 %95, %shr139
  store i32 %sub140, i32* %score, align 4
  %96 = load i32* @wking_loc, align 4
  %idxprom141 = sext i32 %96 to i64
  %97 = load i32* %i, align 4
  %idxprom142 = sext i32 %97 to i64
  %bitcast960 = bitcast [144 x [144 x i8]]* @n_tropism to i8*
  %bitcast961 = bitcast [144 x [144 x i8]]* getelementptr inbounds ([144 x [144 x i8]]* @n_tropism, i32 1) to i8*
  %arrayidx143 = getelementptr inbounds [144 x [144 x i8]]* @n_tropism, i32 0, i64 %idxprom142
  %arrayidx144 = getelementptr inbounds [144 x i8]* %arrayidx143, i32 0, i64 %idxprom141
  %98 = load i8* %arrayidx144, align 1
  %conv145 = zext i8 %98 to i32
  %99 = load i32* %score, align 4
  %sub146 = sub nsw i32 %99, %conv145
  store i32 %sub146, i32* %score, align 4
  br label %sw.epilog

sw.bb147:                                         ; preds = %if.end52
  %100 = load i32* %score, align 4
  %add148 = add nsw i32 %100, 450
  store i32 %add148, i32* %score, align 4
  %101 = load i32* %i, align 4
  %idxprom149 = sext i32 %101 to i64
  %bitcast962 = bitcast [144 x i32]* @white_queen to i8*
  %bitcast963 = bitcast [144 x i32]* getelementptr inbounds ([144 x i32]* @white_queen, i32 1) to i8*
  %arrayidx150 = getelementptr inbounds [144 x i32]* @white_queen, i32 0, i64 %idxprom149
  %102 = load i32* %arrayidx150, align 4
  %103 = load i32* %wdev_dscale, align 4
  %shr151 = ashr i32 %102, %103
  %104 = load i32* %score, align 4
  %add152 = add nsw i32 %104, %shr151
  store i32 %add152, i32* %score, align 4
  %105 = load i32* @bking_loc, align 4
  %idxprom153 = sext i32 %105 to i64
  %106 = load i32* %i, align 4
  %idxprom154 = sext i32 %106 to i64
  %bitcast964 = bitcast [144 x [144 x i8]]* @q_tropism to i8*
  %bitcast965 = bitcast [144 x [144 x i8]]* getelementptr inbounds ([144 x [144 x i8]]* @q_tropism, i32 1) to i8*
  %arrayidx155 = getelementptr inbounds [144 x [144 x i8]]* @q_tropism, i32 0, i64 %idxprom154
  %arrayidx156 = getelementptr inbounds [144 x i8]* %arrayidx155, i32 0, i64 %idxprom153
  %107 = load i8* %arrayidx156, align 1
  %conv157 = zext i8 %107 to i32
  %108 = load i32* %score, align 4
  %add158 = add nsw i32 %108, %conv157
  store i32 %add158, i32* %score, align 4
  br label %sw.epilog

sw.bb159:                                         ; preds = %if.end52
  %109 = load i32* %score, align 4
  %sub160 = sub nsw i32 %109, 450
  store i32 %sub160, i32* %score, align 4
  %110 = load i32* %i, align 4
  %idxprom161 = sext i32 %110 to i64
  %bitcast966 = bitcast [144 x i32]* @black_queen to i8*
  %bitcast967 = bitcast [144 x i32]* getelementptr inbounds ([144 x i32]* @black_queen, i32 1) to i8*
  %arrayidx162 = getelementptr inbounds [144 x i32]* @black_queen, i32 0, i64 %idxprom161
  %111 = load i32* %arrayidx162, align 4
  %112 = load i32* %bdev_dscale, align 4
  %shr163 = ashr i32 %111, %112
  %113 = load i32* %score, align 4
  %sub164 = sub nsw i32 %113, %shr163
  store i32 %sub164, i32* %score, align 4
  %114 = load i32* @wking_loc, align 4
  %idxprom165 = sext i32 %114 to i64
  %115 = load i32* %i, align 4
  %idxprom166 = sext i32 %115 to i64
  %bitcast968 = bitcast [144 x [144 x i8]]* @q_tropism to i8*
  %bitcast969 = bitcast [144 x [144 x i8]]* getelementptr inbounds ([144 x [144 x i8]]* @q_tropism, i32 1) to i8*
  %arrayidx167 = getelementptr inbounds [144 x [144 x i8]]* @q_tropism, i32 0, i64 %idxprom166
  %arrayidx168 = getelementptr inbounds [144 x i8]* %arrayidx167, i32 0, i64 %idxprom165
  %116 = load i8* %arrayidx168, align 1
  %conv169 = zext i8 %116 to i32
  %117 = load i32* %score, align 4
  %sub170 = sub nsw i32 %117, %conv169
  store i32 %sub170, i32* %score, align 4
  br label %sw.epilog

sw.epilog:                                        ; preds = %sw.bb159, %sw.bb147, %sw.bb135, %sw.bb123, %sw.bb111, %sw.bb99, %sw.bb87, %sw.bb75, %sw.bb63, %sw.bb, %if.end52
  br label %for.inc

for.inc:                                          ; preds = %sw.epilog, %if.then50
  %118 = load i32* %j, align 4
  %inc171 = add nsw i32 %118, 1
  store i32 %inc171, i32* %j, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %119 = load i32* @wking_loc, align 4
  %idxprom172 = sext i32 %119 to i64
  %bitcast926 = bitcast [144 x i32]* @white_king to i8*
  %bitcast927 = bitcast [144 x i32]* getelementptr inbounds ([144 x i32]* @white_king, i32 1) to i8*
  %arrayidx173 = getelementptr inbounds [144 x i32]* @white_king, i32 0, i64 %idxprom172
  %120 = load i32* %arrayidx173, align 4
  %121 = load i32* %bdev_dscale, align 4
  %shr174 = ashr i32 %120, %121
  %122 = load i32* %score, align 4
  %add175 = add nsw i32 %122, %shr174
  store i32 %add175, i32* %score, align 4
  %123 = load i32* @bking_loc, align 4
  %idxprom176 = sext i32 %123 to i64
  %bitcast928 = bitcast [144 x i32]* @black_king to i8*
  %bitcast929 = bitcast [144 x i32]* getelementptr inbounds ([144 x i32]* @black_king, i32 1) to i8*
  %arrayidx177 = getelementptr inbounds [144 x i32]* @black_king, i32 0, i64 %idxprom176
  %124 = load i32* %arrayidx177, align 4
  %125 = load i32* %wdev_dscale, align 4
  %shr178 = ashr i32 %124, %125
  %126 = load i32* %score, align 4
  %sub179 = sub nsw i32 %126, %shr178
  store i32 %sub179, i32* %score, align 4
  %127 = load i32* @white_castled, align 4
  %tobool180 = icmp ne i32 %127, 0
  br i1 %tobool180, label %if.end185, label %land.lhs.true181

land.lhs.true181:                                 ; preds = %for.end
  %128 = load i32* getelementptr inbounds ([144 x i32]* @moved, i32 0, i64 30), align 4
  %tobool182 = icmp ne i32 %128, 0
  br i1 %tobool182, label %if.then183, label %if.end185

if.then183:                                       ; preds = %land.lhs.true181
  %129 = load i32* %score, align 4
  %sub184 = sub nsw i32 %129, 30
  store i32 %sub184, i32* %score, align 4
  br label %if.end185

if.end185:                                        ; preds = %if.then183, %land.lhs.true181, %for.end
  %130 = load i32* @black_castled, align 4
  %tobool186 = icmp ne i32 %130, 0
  br i1 %tobool186, label %if.end191, label %land.lhs.true187

land.lhs.true187:                                 ; preds = %if.end185
  %131 = load i32* getelementptr inbounds ([144 x i32]* @moved, i32 0, i64 114), align 4
  %tobool188 = icmp ne i32 %131, 0
  br i1 %tobool188, label %if.then189, label %if.end191

if.then189:                                       ; preds = %land.lhs.true187
  %132 = load i32* %score, align 4
  %add190 = add nsw i32 %132, 30
  store i32 %add190, i32* %score, align 4
  br label %if.end191

if.end191:                                        ; preds = %if.then189, %land.lhs.true187, %if.end185
  %133 = load i32* getelementptr inbounds ([144 x i32]* @moved, i32 0, i64 41), align 4
  %tobool192 = icmp ne i32 %133, 0
  br i1 %tobool192, label %if.end198, label %land.lhs.true193

land.lhs.true193:                                 ; preds = %if.end191
  %134 = load i32* getelementptr inbounds ([144 x i32]* @board, i32 0, i64 53), align 4
  %cmp194 = icmp ne i32 %134, 13
  br i1 %cmp194, label %if.then196, label %if.end198

if.then196:                                       ; preds = %land.lhs.true193
  %135 = load i32* %score, align 4
  %sub197 = sub nsw i32 %135, 15
  store i32 %sub197, i32* %score, align 4
  br label %if.end198

if.end198:                                        ; preds = %if.then196, %land.lhs.true193, %if.end191
  %136 = load i32* getelementptr inbounds ([144 x i32]* @moved, i32 0, i64 42), align 4
  %tobool199 = icmp ne i32 %136, 0
  br i1 %tobool199, label %if.end205, label %land.lhs.true200

land.lhs.true200:                                 ; preds = %if.end198
  %137 = load i32* getelementptr inbounds ([144 x i32]* @board, i32 0, i64 54), align 4
  %cmp201 = icmp ne i32 %137, 13
  br i1 %cmp201, label %if.then203, label %if.end205

if.then203:                                       ; preds = %land.lhs.true200
  %138 = load i32* %score, align 4
  %sub204 = sub nsw i32 %138, 15
  store i32 %sub204, i32* %score, align 4
  br label %if.end205

if.end205:                                        ; preds = %if.then203, %land.lhs.true200, %if.end198
  %139 = load i32* getelementptr inbounds ([144 x i32]* @moved, i32 0, i64 101), align 4
  %tobool206 = icmp ne i32 %139, 0
  br i1 %tobool206, label %if.end212, label %land.lhs.true207

land.lhs.true207:                                 ; preds = %if.end205
  %140 = load i32* getelementptr inbounds ([144 x i32]* @board, i32 0, i64 89), align 4
  %cmp208 = icmp ne i32 %140, 13
  br i1 %cmp208, label %if.then210, label %if.end212

if.then210:                                       ; preds = %land.lhs.true207
  %141 = load i32* %score, align 4
  %add211 = add nsw i32 %141, 15
  store i32 %add211, i32* %score, align 4
  br label %if.end212

if.end212:                                        ; preds = %if.then210, %land.lhs.true207, %if.end205
  %142 = load i32* getelementptr inbounds ([144 x i32]* @moved, i32 0, i64 102), align 4
  %tobool213 = icmp ne i32 %142, 0
  br i1 %tobool213, label %if.end219, label %land.lhs.true214

land.lhs.true214:                                 ; preds = %if.end212
  %143 = load i32* getelementptr inbounds ([144 x i32]* @board, i32 0, i64 90), align 4
  %cmp215 = icmp ne i32 %143, 13
  br i1 %cmp215, label %if.then217, label %if.end219

if.then217:                                       ; preds = %land.lhs.true214
  %144 = load i32* %score, align 4
  %add218 = add nsw i32 %144, 15
  store i32 %add218, i32* %score, align 4
  br label %if.end219

if.end219:                                        ; preds = %if.then217, %land.lhs.true214, %if.end212
  %145 = load i32* @cfg_smarteval, align 4
  %tobool220 = icmp ne i32 %145, 0
  br i1 %tobool220, label %if.then221, label %if.end640

if.then221:                                       ; preds = %if.end219
  %146 = load i32* @wking_loc, align 4
  %cmp222 = icmp ne i32 %146, 30
  br i1 %cmp222, label %land.lhs.true224, label %if.end279

land.lhs.true224:                                 ; preds = %if.then221
  %147 = load i32* @wking_loc, align 4
  %cmp225 = icmp ne i32 %147, 29
  br i1 %cmp225, label %if.then227, label %if.end279

if.then227:                                       ; preds = %land.lhs.true224
  %148 = load i32* @wking_loc, align 4
  %add228 = add nsw i32 %148, 11
  %idxprom229 = sext i32 %add228 to i64
  %arrayidx230 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom229
  %149 = load i32* %arrayidx230, align 4
  %cmp231 = icmp ne i32 %149, 1
  br i1 %cmp231, label %if.then233, label %if.end235

if.then233:                                       ; preds = %if.then227
  %150 = load i32* %score, align 4
  %sub234 = sub nsw i32 %150, 24
  store i32 %sub234, i32* %score, align 4
  br label %if.end235

if.end235:                                        ; preds = %if.then233, %if.then227
  %151 = load i32* @wking_loc, align 4
  %add236 = add nsw i32 %151, 12
  %idxprom237 = sext i32 %add236 to i64
  %arrayidx238 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom237
  %152 = load i32* %arrayidx238, align 4
  %cmp239 = icmp ne i32 %152, 1
  br i1 %cmp239, label %if.then241, label %if.end243

if.then241:                                       ; preds = %if.end235
  %153 = load i32* %score, align 4
  %sub242 = sub nsw i32 %153, 35
  store i32 %sub242, i32* %score, align 4
  br label %if.end243

if.end243:                                        ; preds = %if.then241, %if.end235
  %154 = load i32* @wking_loc, align 4
  %add244 = add nsw i32 %154, 13
  %idxprom245 = sext i32 %add244 to i64
  %arrayidx246 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom245
  %155 = load i32* %arrayidx246, align 4
  %cmp247 = icmp ne i32 %155, 1
  br i1 %cmp247, label %if.then249, label %if.end251

if.then249:                                       ; preds = %if.end243
  %156 = load i32* %score, align 4
  %sub250 = sub nsw i32 %156, 24
  store i32 %sub250, i32* %score, align 4
  br label %if.end251

if.end251:                                        ; preds = %if.then249, %if.end243
  %157 = load i32* @white_castled, align 4
  %tobool252 = icmp ne i32 %157, 0
  br i1 %tobool252, label %if.then253, label %if.end278

if.then253:                                       ; preds = %if.end251
  %158 = load i32* @bking_loc, align 4
  %sub254 = sub nsw i32 %158, 25
  %idxprom255 = sext i32 %sub254 to i64
  %arrayidx256 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom255
  %159 = load i32* %arrayidx256, align 4
  %cmp257 = icmp eq i32 %159, 2
  br i1 %cmp257, label %if.then259, label %if.end261

if.then259:                                       ; preds = %if.then253
  %160 = load i32* %score, align 4
  %add260 = add nsw i32 %160, 11
  store i32 %add260, i32* %score, align 4
  br label %if.end261

if.end261:                                        ; preds = %if.then259, %if.then253
  %161 = load i32* @bking_loc, align 4
  %sub262 = sub nsw i32 %161, 24
  %idxprom263 = sext i32 %sub262 to i64
  %arrayidx264 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom263
  %162 = load i32* %arrayidx264, align 4
  %cmp265 = icmp eq i32 %162, 2
  br i1 %cmp265, label %if.then267, label %if.end269

if.then267:                                       ; preds = %if.end261
  %163 = load i32* %score, align 4
  %add268 = add nsw i32 %163, 15
  store i32 %add268, i32* %score, align 4
  br label %if.end269

if.end269:                                        ; preds = %if.then267, %if.end261
  %164 = load i32* @bking_loc, align 4
  %sub270 = sub nsw i32 %164, 23
  %idxprom271 = sext i32 %sub270 to i64
  %arrayidx272 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom271
  %165 = load i32* %arrayidx272, align 4
  %cmp273 = icmp eq i32 %165, 2
  br i1 %cmp273, label %if.then275, label %if.end277

if.then275:                                       ; preds = %if.end269
  %166 = load i32* %score, align 4
  %add276 = add nsw i32 %166, 11
  store i32 %add276, i32* %score, align 4
  br label %if.end277

if.end277:                                        ; preds = %if.then275, %if.end269
  br label %if.end278

if.end278:                                        ; preds = %if.end277, %if.end251
  br label %if.end279

if.end279:                                        ; preds = %if.end278, %land.lhs.true224, %if.then221
  %167 = load i32* @bking_loc, align 4
  %cmp280 = icmp ne i32 %167, 114
  br i1 %cmp280, label %land.lhs.true282, label %if.end337

land.lhs.true282:                                 ; preds = %if.end279
  %168 = load i32* @bking_loc, align 4
  %cmp283 = icmp ne i32 %168, 113
  br i1 %cmp283, label %if.then285, label %if.end337

if.then285:                                       ; preds = %land.lhs.true282
  %169 = load i32* @bking_loc, align 4
  %sub286 = sub nsw i32 %169, 13
  %idxprom287 = sext i32 %sub286 to i64
  %arrayidx288 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom287
  %170 = load i32* %arrayidx288, align 4
  %cmp289 = icmp ne i32 %170, 2
  br i1 %cmp289, label %if.then291, label %if.end293

if.then291:                                       ; preds = %if.then285
  %171 = load i32* %score, align 4
  %add292 = add nsw i32 %171, 24
  store i32 %add292, i32* %score, align 4
  br label %if.end293

if.end293:                                        ; preds = %if.then291, %if.then285
  %172 = load i32* @bking_loc, align 4
  %sub294 = sub nsw i32 %172, 12
  %idxprom295 = sext i32 %sub294 to i64
  %arrayidx296 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom295
  %173 = load i32* %arrayidx296, align 4
  %cmp297 = icmp ne i32 %173, 2
  br i1 %cmp297, label %if.then299, label %if.end301

if.then299:                                       ; preds = %if.end293
  %174 = load i32* %score, align 4
  %add300 = add nsw i32 %174, 35
  store i32 %add300, i32* %score, align 4
  br label %if.end301

if.end301:                                        ; preds = %if.then299, %if.end293
  %175 = load i32* @bking_loc, align 4
  %sub302 = sub nsw i32 %175, 11
  %idxprom303 = sext i32 %sub302 to i64
  %arrayidx304 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom303
  %176 = load i32* %arrayidx304, align 4
  %cmp305 = icmp ne i32 %176, 2
  br i1 %cmp305, label %if.then307, label %if.end309

if.then307:                                       ; preds = %if.end301
  %177 = load i32* %score, align 4
  %add308 = add nsw i32 %177, 24
  store i32 %add308, i32* %score, align 4
  br label %if.end309

if.end309:                                        ; preds = %if.then307, %if.end301
  %178 = load i32* @black_castled, align 4
  %tobool310 = icmp ne i32 %178, 0
  br i1 %tobool310, label %if.then311, label %if.end336

if.then311:                                       ; preds = %if.end309
  %179 = load i32* @bking_loc, align 4
  %sub312 = sub nsw i32 %179, 25
  %idxprom313 = sext i32 %sub312 to i64
  %arrayidx314 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom313
  %180 = load i32* %arrayidx314, align 4
  %cmp315 = icmp eq i32 %180, 2
  br i1 %cmp315, label %if.then317, label %if.end319

if.then317:                                       ; preds = %if.then311
  %181 = load i32* %score, align 4
  %sub318 = sub nsw i32 %181, 11
  store i32 %sub318, i32* %score, align 4
  br label %if.end319

if.end319:                                        ; preds = %if.then317, %if.then311
  %182 = load i32* @bking_loc, align 4
  %sub320 = sub nsw i32 %182, 24
  %idxprom321 = sext i32 %sub320 to i64
  %arrayidx322 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom321
  %183 = load i32* %arrayidx322, align 4
  %cmp323 = icmp eq i32 %183, 2
  br i1 %cmp323, label %if.then325, label %if.end327

if.then325:                                       ; preds = %if.end319
  %184 = load i32* %score, align 4
  %sub326 = sub nsw i32 %184, 15
  store i32 %sub326, i32* %score, align 4
  br label %if.end327

if.end327:                                        ; preds = %if.then325, %if.end319
  %185 = load i32* @bking_loc, align 4
  %sub328 = sub nsw i32 %185, 23
  %idxprom329 = sext i32 %sub328 to i64
  %arrayidx330 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom329
  %186 = load i32* %arrayidx330, align 4
  %cmp331 = icmp eq i32 %186, 2
  br i1 %cmp331, label %if.then333, label %if.end335

if.then333:                                       ; preds = %if.end327
  %187 = load i32* %score, align 4
  %sub334 = sub nsw i32 %187, 11
  store i32 %sub334, i32* %score, align 4
  br label %if.end335

if.end335:                                        ; preds = %if.then333, %if.end327
  br label %if.end336

if.end336:                                        ; preds = %if.end335, %if.end309
  br label %if.end337

if.end337:                                        ; preds = %if.end336, %land.lhs.true282, %if.end279
  %188 = load i32* getelementptr inbounds ([144 x i32]* @moved, i32 0, i64 42), align 4
  %tobool338 = icmp ne i32 %188, 0
  br i1 %tobool338, label %if.then339, label %if.end357

if.then339:                                       ; preds = %if.end337
  %189 = load i32* %score, align 4
  %add340 = add nsw i32 %189, 30
  store i32 %add340, i32* %score, align 4
  %190 = load i32* getelementptr inbounds ([144 x i32]* @moved, i32 0, i64 41), align 4
  %tobool341 = icmp ne i32 %190, 0
  br i1 %tobool341, label %if.then342, label %if.end344

if.then342:                                       ; preds = %if.then339
  %191 = load i32* %score, align 4
  %add343 = add nsw i32 %191, 25
  store i32 %add343, i32* %score, align 4
  br label %if.end344

if.end344:                                        ; preds = %if.then342, %if.then339
  %192 = load i32* getelementptr inbounds ([144 x i32]* @moved, i32 0, i64 32), align 4
  %tobool345 = icmp ne i32 %192, 0
  br i1 %tobool345, label %if.then346, label %if.end348

if.then346:                                       ; preds = %if.end344
  %193 = load i32* %score, align 4
  %add347 = add nsw i32 %193, 20
  store i32 %add347, i32* %score, align 4
  br label %if.end348

if.end348:                                        ; preds = %if.then346, %if.end344
  %194 = load i32* getelementptr inbounds ([144 x i32]* @moved, i32 0, i64 27), align 4
  %tobool349 = icmp ne i32 %194, 0
  br i1 %tobool349, label %if.then350, label %if.end352

if.then350:                                       ; preds = %if.end348
  %195 = load i32* %score, align 4
  %add351 = add nsw i32 %195, 15
  store i32 %add351, i32* %score, align 4
  br label %if.end352

if.end352:                                        ; preds = %if.then350, %if.end348
  %196 = load i32* getelementptr inbounds ([144 x i32]* @moved, i32 0, i64 28), align 4
  %tobool353 = icmp ne i32 %196, 0
  br i1 %tobool353, label %if.then354, label %if.end356

if.then354:                                       ; preds = %if.end352
  %197 = load i32* %score, align 4
  %add355 = add nsw i32 %197, 10
  store i32 %add355, i32* %score, align 4
  br label %if.end356

if.end356:                                        ; preds = %if.then354, %if.end352
  br label %if.end357

if.end357:                                        ; preds = %if.end356, %if.end337
  %198 = load i32* getelementptr inbounds ([144 x i32]* @moved, i32 0, i64 102), align 4
  %tobool358 = icmp ne i32 %198, 0
  br i1 %tobool358, label %if.then359, label %if.end377

if.then359:                                       ; preds = %if.end357
  %199 = load i32* %score, align 4
  %sub360 = sub nsw i32 %199, 30
  store i32 %sub360, i32* %score, align 4
  %200 = load i32* getelementptr inbounds ([144 x i32]* @moved, i32 0, i64 101), align 4
  %tobool361 = icmp ne i32 %200, 0
  br i1 %tobool361, label %if.then362, label %if.end364

if.then362:                                       ; preds = %if.then359
  %201 = load i32* %score, align 4
  %sub363 = sub nsw i32 %201, 25
  store i32 %sub363, i32* %score, align 4
  br label %if.end364

if.end364:                                        ; preds = %if.then362, %if.then359
  %202 = load i32* getelementptr inbounds ([144 x i32]* @moved, i32 0, i64 116), align 4
  %tobool365 = icmp ne i32 %202, 0
  br i1 %tobool365, label %if.then366, label %if.end368

if.then366:                                       ; preds = %if.end364
  %203 = load i32* %score, align 4
  %sub367 = sub nsw i32 %203, 20
  store i32 %sub367, i32* %score, align 4
  br label %if.end368

if.end368:                                        ; preds = %if.then366, %if.end364
  %204 = load i32* getelementptr inbounds ([144 x i32]* @moved, i32 0, i64 111), align 4
  %tobool369 = icmp ne i32 %204, 0
  br i1 %tobool369, label %if.then370, label %if.end372

if.then370:                                       ; preds = %if.end368
  %205 = load i32* %score, align 4
  %sub371 = sub nsw i32 %205, 15
  store i32 %sub371, i32* %score, align 4
  br label %if.end372

if.end372:                                        ; preds = %if.then370, %if.end368
  %206 = load i32* getelementptr inbounds ([144 x i32]* @moved, i32 0, i64 112), align 4
  %tobool373 = icmp ne i32 %206, 0
  br i1 %tobool373, label %if.then374, label %if.end376

if.then374:                                       ; preds = %if.end372
  %207 = load i32* %score, align 4
  %sub375 = sub nsw i32 %207, 10
  store i32 %sub375, i32* %score, align 4
  br label %if.end376

if.end376:                                        ; preds = %if.then374, %if.end372
  br label %if.end377

if.end377:                                        ; preds = %if.end376, %if.end357
  %208 = load i32* getelementptr inbounds ([144 x i32]* @board, i32 0, i64 44), align 4
  %cmp378 = icmp ne i32 %208, 1
  br i1 %cmp378, label %land.lhs.true380, label %if.end387

land.lhs.true380:                                 ; preds = %if.end377
  %209 = load i32* getelementptr inbounds ([144 x i32]* @board, i32 0, i64 55), align 4
  %cmp381 = icmp eq i32 %209, 2
  br i1 %cmp381, label %if.then385, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %land.lhs.true380
  %210 = load i32* getelementptr inbounds ([144 x i32]* @board, i32 0, i64 66), align 4
  %cmp383 = icmp eq i32 %210, 2
  br i1 %cmp383, label %if.then385, label %if.end387

if.then385:                                       ; preds = %lor.lhs.false, %land.lhs.true380
  %211 = load i32* %score, align 4
  %sub386 = sub nsw i32 %211, 30
  store i32 %sub386, i32* %score, align 4
  br label %if.end387

if.end387:                                        ; preds = %if.then385, %lor.lhs.false, %if.end377
  %212 = load i32* getelementptr inbounds ([144 x i32]* @board, i32 0, i64 104), align 4
  %cmp388 = icmp ne i32 %212, 2
  br i1 %cmp388, label %land.lhs.true390, label %if.end398

land.lhs.true390:                                 ; preds = %if.end387
  %213 = load i32* getelementptr inbounds ([144 x i32]* @board, i32 0, i64 91), align 4
  %cmp391 = icmp eq i32 %213, 1
  br i1 %cmp391, label %if.then396, label %lor.lhs.false393

lor.lhs.false393:                                 ; preds = %land.lhs.true390
  %214 = load i32* getelementptr inbounds ([144 x i32]* @board, i32 0, i64 78), align 4
  %cmp394 = icmp eq i32 %214, 1
  br i1 %cmp394, label %if.then396, label %if.end398

if.then396:                                       ; preds = %lor.lhs.false393, %land.lhs.true390
  %215 = load i32* %score, align 4
  %add397 = add nsw i32 %215, 30
  store i32 %add397, i32* %score, align 4
  br label %if.end398

if.end398:                                        ; preds = %if.then396, %lor.lhs.false393, %if.end387
  %216 = load i32* @wking_loc, align 4
  %add399 = add nsw i32 %216, 12
  %idxprom400 = sext i32 %add399 to i64
  %arrayidx401 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom400
  %217 = load i32* %arrayidx401, align 4
  %cmp402 = icmp eq i32 %217, 2
  br i1 %cmp402, label %if.then410, label %lor.lhs.false404

lor.lhs.false404:                                 ; preds = %if.end398
  %218 = load i32* @wking_loc, align 4
  %add405 = add nsw i32 %218, 12
  %idxprom406 = sext i32 %add405 to i64
  %arrayidx407 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom406
  %219 = load i32* %arrayidx407, align 4
  %cmp408 = icmp eq i32 %219, 12
  br i1 %cmp408, label %if.then410, label %if.end424

if.then410:                                       ; preds = %lor.lhs.false404, %if.end398
  %220 = load i32* %score, align 4
  %sub411 = sub nsw i32 %220, 35
  store i32 %sub411, i32* %score, align 4
  %221 = load i32* @wking_loc, align 4
  %add412 = add nsw i32 %221, 12
  %idxprom413 = sext i32 %add412 to i64
  %arrayidx414 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom413
  %222 = load i32* %arrayidx414, align 4
  %cmp415 = icmp eq i32 %222, 0
  br i1 %cmp415, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.then410
  br i1 false, label %if.then420, label %if.end423

cond.false:                                       ; preds = %if.then410
  %223 = load i32* @wking_loc, align 4
  %add417 = add nsw i32 %223, 12
  %call418 = call i32 @is_attacked(i32 %add417, i32 0)
  %tobool419 = icmp ne i32 %call418, 0
  br i1 %tobool419, label %if.then420, label %if.end423

if.then420:                                       ; preds = %cond.false, %cond.true
  %224 = load i32* %bdev_dscale, align 4
  %shr421 = ashr i32 150, %224
  %225 = load i32* %score, align 4
  %sub422 = sub nsw i32 %225, %shr421
  store i32 %sub422, i32* %score, align 4
  br label %if.end423

if.end423:                                        ; preds = %if.then420, %cond.false, %cond.true
  br label %if.end424

if.end424:                                        ; preds = %if.end423, %lor.lhs.false404
  %226 = load i32* @bking_loc, align 4
  %sub425 = sub nsw i32 %226, 12
  %idxprom426 = sext i32 %sub425 to i64
  %arrayidx427 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom426
  %227 = load i32* %arrayidx427, align 4
  %cmp428 = icmp eq i32 %227, 1
  br i1 %cmp428, label %if.then436, label %lor.lhs.false430

lor.lhs.false430:                                 ; preds = %if.end424
  %228 = load i32* @bking_loc, align 4
  %sub431 = sub nsw i32 %228, 12
  %idxprom432 = sext i32 %sub431 to i64
  %arrayidx433 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom432
  %229 = load i32* %arrayidx433, align 4
  %cmp434 = icmp eq i32 %229, 11
  br i1 %cmp434, label %if.then436, label %if.end452

if.then436:                                       ; preds = %lor.lhs.false430, %if.end424
  %230 = load i32* %score, align 4
  %add437 = add nsw i32 %230, 35
  store i32 %add437, i32* %score, align 4
  %231 = load i32* @bking_loc, align 4
  %sub438 = sub nsw i32 %231, 12
  %idxprom439 = sext i32 %sub438 to i64
  %arrayidx440 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom439
  %232 = load i32* %arrayidx440, align 4
  %cmp441 = icmp eq i32 %232, 0
  br i1 %cmp441, label %cond.true443, label %cond.false444

cond.true443:                                     ; preds = %if.then436
  br i1 false, label %if.then448, label %if.end451

cond.false444:                                    ; preds = %if.then436
  %233 = load i32* @bking_loc, align 4
  %sub445 = sub nsw i32 %233, 12
  %call446 = call i32 @is_attacked(i32 %sub445, i32 1)
  %tobool447 = icmp ne i32 %call446, 0
  br i1 %tobool447, label %if.then448, label %if.end451

if.then448:                                       ; preds = %cond.false444, %cond.true443
  %234 = load i32* %wdev_dscale, align 4
  %shr449 = ashr i32 150, %234
  %235 = load i32* %score, align 4
  %add450 = add nsw i32 %235, %shr449
  store i32 %add450, i32* %score, align 4
  br label %if.end451

if.end451:                                        ; preds = %if.then448, %cond.false444, %cond.true443
  br label %if.end452

if.end452:                                        ; preds = %if.end451, %lor.lhs.false430
  %236 = load i32* getelementptr inbounds ([144 x i32]* @board, i32 0, i64 43), align 4
  %cmp453 = icmp eq i32 %236, 1
  br i1 %cmp453, label %land.lhs.true461, label %lor.lhs.false455

lor.lhs.false455:                                 ; preds = %if.end452
  %237 = load i32* getelementptr inbounds ([144 x i32]* @board, i32 0, i64 54), align 4
  %cmp456 = icmp eq i32 %237, 1
  br i1 %cmp456, label %land.lhs.true461, label %lor.lhs.false458

lor.lhs.false458:                                 ; preds = %lor.lhs.false455
  %238 = load i32* getelementptr inbounds ([144 x i32]* @board, i32 0, i64 54), align 4
  %cmp459 = icmp eq i32 %238, 2
  br i1 %cmp459, label %land.lhs.true461, label %if.end485

land.lhs.true461:                                 ; preds = %lor.lhs.false458, %lor.lhs.false455, %if.end452
  %239 = load i32* getelementptr inbounds ([144 x i32]* @board, i32 0, i64 54), align 4
  %cmp462 = icmp eq i32 %239, 0
  br i1 %cmp462, label %cond.true464, label %cond.false465

cond.true464:                                     ; preds = %land.lhs.true461
  br i1 false, label %if.then468, label %if.end485

cond.false465:                                    ; preds = %land.lhs.true461
  %call466 = call i32 @is_attacked(i32 54, i32 0)
  %tobool467 = icmp ne i32 %call466, 0
  br i1 %tobool467, label %if.then468, label %if.end485

if.then468:                                       ; preds = %cond.false465, %cond.true464
  %240 = load i32* getelementptr inbounds ([144 x i32]* @board, i32 0, i64 43), align 4
  %cmp469 = icmp eq i32 %240, 1
  br i1 %cmp469, label %if.then471, label %if.end473

if.then471:                                       ; preds = %if.then468
  %241 = load i32* %score, align 4
  %add472 = add nsw i32 %241, 10
  store i32 %add472, i32* %score, align 4
  br label %if.end473

if.end473:                                        ; preds = %if.then471, %if.then468
  %242 = load i32* getelementptr inbounds ([144 x i32]* @board, i32 0, i64 54), align 4
  %cmp474 = icmp eq i32 %242, 1
  br i1 %cmp474, label %if.then476, label %if.else478

if.then476:                                       ; preds = %if.end473
  %243 = load i32* %score, align 4
  %add477 = add nsw i32 %243, 20
  store i32 %add477, i32* %score, align 4
  br label %if.end484

if.else478:                                       ; preds = %if.end473
  %244 = load i32* getelementptr inbounds ([144 x i32]* @board, i32 0, i64 54), align 4
  %cmp479 = icmp eq i32 %244, 2
  br i1 %cmp479, label %if.then481, label %if.end483

if.then481:                                       ; preds = %if.else478
  %245 = load i32* %score, align 4
  %sub482 = sub nsw i32 %245, 15
  store i32 %sub482, i32* %score, align 4
  br label %if.end483

if.end483:                                        ; preds = %if.then481, %if.else478
  br label %if.end484

if.end484:                                        ; preds = %if.end483, %if.then476
  br label %if.end485

if.end485:                                        ; preds = %if.end484, %cond.false465, %cond.true464, %lor.lhs.false458
  %246 = load i32* getelementptr inbounds ([144 x i32]* @board, i32 0, i64 103), align 4
  %cmp486 = icmp eq i32 %246, 2
  br i1 %cmp486, label %land.lhs.true494, label %lor.lhs.false488

lor.lhs.false488:                                 ; preds = %if.end485
  %247 = load i32* getelementptr inbounds ([144 x i32]* @board, i32 0, i64 90), align 4
  %cmp489 = icmp eq i32 %247, 2
  br i1 %cmp489, label %land.lhs.true494, label %lor.lhs.false491

lor.lhs.false491:                                 ; preds = %lor.lhs.false488
  %248 = load i32* getelementptr inbounds ([144 x i32]* @board, i32 0, i64 90), align 4
  %cmp492 = icmp eq i32 %248, 1
  br i1 %cmp492, label %land.lhs.true494, label %if.end518

land.lhs.true494:                                 ; preds = %lor.lhs.false491, %lor.lhs.false488, %if.end485
  %249 = load i32* getelementptr inbounds ([144 x i32]* @board, i32 0, i64 90), align 4
  %cmp495 = icmp eq i32 %249, 0
  br i1 %cmp495, label %cond.true497, label %cond.false498

cond.true497:                                     ; preds = %land.lhs.true494
  br i1 false, label %if.then501, label %if.end518

cond.false498:                                    ; preds = %land.lhs.true494
  %call499 = call i32 @is_attacked(i32 90, i32 1)
  %tobool500 = icmp ne i32 %call499, 0
  br i1 %tobool500, label %if.then501, label %if.end518

if.then501:                                       ; preds = %cond.false498, %cond.true497
  %250 = load i32* getelementptr inbounds ([144 x i32]* @board, i32 0, i64 103), align 4
  %cmp502 = icmp eq i32 %250, 2
  br i1 %cmp502, label %if.then504, label %if.end506

if.then504:                                       ; preds = %if.then501
  %251 = load i32* %score, align 4
  %sub505 = sub nsw i32 %251, 10
  store i32 %sub505, i32* %score, align 4
  br label %if.end506

if.end506:                                        ; preds = %if.then504, %if.then501
  %252 = load i32* getelementptr inbounds ([144 x i32]* @board, i32 0, i64 90), align 4
  %cmp507 = icmp eq i32 %252, 2
  br i1 %cmp507, label %if.then509, label %if.else511

if.then509:                                       ; preds = %if.end506
  %253 = load i32* %score, align 4
  %sub510 = sub nsw i32 %253, 20
  store i32 %sub510, i32* %score, align 4
  br label %if.end517

if.else511:                                       ; preds = %if.end506
  %254 = load i32* getelementptr inbounds ([144 x i32]* @board, i32 0, i64 90), align 4
  %cmp512 = icmp eq i32 %254, 1
  br i1 %cmp512, label %if.then514, label %if.end516

if.then514:                                       ; preds = %if.else511
  %255 = load i32* %score, align 4
  %add515 = add nsw i32 %255, 15
  store i32 %add515, i32* %score, align 4
  br label %if.end516

if.end516:                                        ; preds = %if.then514, %if.else511
  br label %if.end517

if.end517:                                        ; preds = %if.end516, %if.then509
  br label %if.end518

if.end518:                                        ; preds = %if.end517, %cond.false498, %cond.true497, %lor.lhs.false491
  %256 = load i32* @bking_loc, align 4
  %idxprom519 = sext i32 %256 to i64
  %arrayidx520 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom519
  %257 = load i32* %arrayidx520, align 4
  %cmp521 = icmp eq i32 %257, 0
  br i1 %cmp521, label %cond.true523, label %cond.false524

cond.true523:                                     ; preds = %if.end518
  br i1 false, label %if.then527, label %if.else530

cond.false524:                                    ; preds = %if.end518
  %258 = load i32* @bking_loc, align 4
  %call525 = call i32 @is_attacked(i32 %258, i32 1)
  %tobool526 = icmp ne i32 %call525, 0
  br i1 %tobool526, label %if.then527, label %if.else530

if.then527:                                       ; preds = %cond.false524, %cond.true523
  %259 = load i32* %wdev_dscale, align 4
  %shr528 = ashr i32 50, %259
  %260 = load i32* %score, align 4
  %add529 = add nsw i32 %260, %shr528
  store i32 %add529, i32* %score, align 4
  br label %if.end543

if.else530:                                       ; preds = %cond.false524, %cond.true523
  %261 = load i32* @wking_loc, align 4
  %idxprom531 = sext i32 %261 to i64
  %arrayidx532 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom531
  %262 = load i32* %arrayidx532, align 4
  %cmp533 = icmp eq i32 %262, 0
  br i1 %cmp533, label %cond.true535, label %cond.false536

cond.true535:                                     ; preds = %if.else530
  br i1 false, label %if.then539, label %if.end542

cond.false536:                                    ; preds = %if.else530
  %263 = load i32* @wking_loc, align 4
  %call537 = call i32 @is_attacked(i32 %263, i32 0)
  %tobool538 = icmp ne i32 %call537, 0
  br i1 %tobool538, label %if.then539, label %if.end542

if.then539:                                       ; preds = %cond.false536, %cond.true535
  %264 = load i32* %bdev_dscale, align 4
  %shr540 = ashr i32 50, %264
  %265 = load i32* %score, align 4
  %sub541 = sub nsw i32 %265, %shr540
  store i32 %sub541, i32* %score, align 4
  br label %if.end542

if.end542:                                        ; preds = %if.then539, %cond.false536, %cond.true535
  br label %if.end543

if.end543:                                        ; preds = %if.end542, %if.then527
  %266 = load i32* getelementptr inbounds ([144 x i32]* @board, i32 0, i64 44), align 4
  %cmp544 = icmp eq i32 %266, 4
  br i1 %cmp544, label %if.then546, label %if.end567

if.then546:                                       ; preds = %if.end543
  %267 = load i32* %score, align 4
  %sub547 = sub nsw i32 %267, 20
  store i32 %sub547, i32* %score, align 4
  %268 = load i32* getelementptr inbounds ([144 x i32]* @board, i32 0, i64 44), align 4
  %cmp548 = icmp eq i32 %268, 0
  br i1 %cmp548, label %cond.true550, label %cond.false551

cond.true550:                                     ; preds = %if.then546
  br i1 false, label %if.then554, label %if.end556

cond.false551:                                    ; preds = %if.then546
  %call552 = call i32 @is_attacked(i32 44, i32 0)
  %tobool553 = icmp ne i32 %call552, 0
  br i1 %tobool553, label %if.then554, label %if.end556

if.then554:                                       ; preds = %cond.false551, %cond.true550
  %269 = load i32* %score, align 4
  %sub555 = sub nsw i32 %269, 40
  store i32 %sub555, i32* %score, align 4
  br label %if.end556

if.end556:                                        ; preds = %if.then554, %cond.false551, %cond.true550
  %270 = load i32* getelementptr inbounds ([144 x i32]* @board, i32 0, i64 32), align 4
  %cmp557 = icmp eq i32 %270, 7
  br i1 %cmp557, label %if.then559, label %if.end561

if.then559:                                       ; preds = %if.end556
  %271 = load i32* %score, align 4
  %add560 = add nsw i32 %271, 10
  store i32 %add560, i32* %score, align 4
  br label %if.end561

if.end561:                                        ; preds = %if.then559, %if.end556
  %272 = load i32* getelementptr inbounds ([144 x i32]* @board, i32 0, i64 31), align 4
  %cmp562 = icmp eq i32 %272, 11
  br i1 %cmp562, label %if.then564, label %if.end566

if.then564:                                       ; preds = %if.end561
  %273 = load i32* %score, align 4
  %add565 = add nsw i32 %273, 10
  store i32 %add565, i32* %score, align 4
  br label %if.end566

if.end566:                                        ; preds = %if.then564, %if.end561
  br label %if.end567

if.end567:                                        ; preds = %if.end566, %if.end543
  %274 = load i32* getelementptr inbounds ([144 x i32]* @board, i32 0, i64 104), align 4
  %cmp568 = icmp eq i32 %274, 3
  br i1 %cmp568, label %if.then570, label %if.end591

if.then570:                                       ; preds = %if.end567
  %275 = load i32* %score, align 4
  %add571 = add nsw i32 %275, 20
  store i32 %add571, i32* %score, align 4
  %276 = load i32* getelementptr inbounds ([144 x i32]* @board, i32 0, i64 104), align 4
  %cmp572 = icmp eq i32 %276, 0
  br i1 %cmp572, label %cond.true574, label %cond.false575

cond.true574:                                     ; preds = %if.then570
  br i1 false, label %if.then578, label %if.end580

cond.false575:                                    ; preds = %if.then570
  %call576 = call i32 @is_attacked(i32 104, i32 1)
  %tobool577 = icmp ne i32 %call576, 0
  br i1 %tobool577, label %if.then578, label %if.end580

if.then578:                                       ; preds = %cond.false575, %cond.true574
  %277 = load i32* %score, align 4
  %add579 = add nsw i32 %277, 40
  store i32 %add579, i32* %score, align 4
  br label %if.end580

if.end580:                                        ; preds = %if.then578, %cond.false575, %cond.true574
  %278 = load i32* getelementptr inbounds ([144 x i32]* @board, i32 0, i64 116), align 4
  %cmp581 = icmp eq i32 %278, 8
  br i1 %cmp581, label %if.then583, label %if.end585

if.then583:                                       ; preds = %if.end580
  %279 = load i32* %score, align 4
  %sub584 = sub nsw i32 %279, 10
  store i32 %sub584, i32* %score, align 4
  br label %if.end585

if.end585:                                        ; preds = %if.then583, %if.end580
  %280 = load i32* getelementptr inbounds ([144 x i32]* @board, i32 0, i64 115), align 4
  %cmp586 = icmp eq i32 %280, 12
  br i1 %cmp586, label %if.then588, label %if.end590

if.then588:                                       ; preds = %if.end585
  %281 = load i32* %score, align 4
  %sub589 = sub nsw i32 %281, 10
  store i32 %sub589, i32* %score, align 4
  br label %if.end590

if.end590:                                        ; preds = %if.then588, %if.end585
  br label %if.end591

if.end591:                                        ; preds = %if.end590, %if.end567
  %282 = load i32* getelementptr inbounds ([144 x i32]* @board, i32 0, i64 57), align 4
  %cmp592 = icmp eq i32 %282, 12
  br i1 %cmp592, label %land.lhs.true594, label %if.end615

land.lhs.true594:                                 ; preds = %if.end591
  %283 = load i32* getelementptr inbounds ([144 x i32]* @board, i32 0, i64 44), align 4
  %cmp595 = icmp ne i32 %283, 1
  br i1 %cmp595, label %if.then597, label %if.end615

if.then597:                                       ; preds = %land.lhs.true594
  %284 = load i32* %score, align 4
  %sub598 = sub nsw i32 %284, 20
  store i32 %sub598, i32* %score, align 4
  %285 = load i32* getelementptr inbounds ([144 x i32]* @board, i32 0, i64 44), align 4
  %cmp599 = icmp eq i32 %285, 4
  br i1 %cmp599, label %if.then601, label %if.end614

if.then601:                                       ; preds = %if.then597
  %286 = load i32* %score, align 4
  %sub602 = sub nsw i32 %286, 40
  store i32 %sub602, i32* %score, align 4
  %287 = load i32* getelementptr inbounds ([144 x i32]* @board, i32 0, i64 31), align 4
  %cmp603 = icmp eq i32 %287, 5
  br i1 %cmp603, label %if.then611, label %lor.lhs.false605

lor.lhs.false605:                                 ; preds = %if.then601
  %288 = load i32* getelementptr inbounds ([144 x i32]* @board, i32 0, i64 32), align 4
  %cmp606 = icmp eq i32 %288, 5
  br i1 %cmp606, label %if.then611, label %lor.lhs.false608

lor.lhs.false608:                                 ; preds = %lor.lhs.false605
  %289 = load i32* getelementptr inbounds ([144 x i32]* @board, i32 0, i64 33), align 4
  %cmp609 = icmp eq i32 %289, 5
  br i1 %cmp609, label %if.then611, label %if.end613

if.then611:                                       ; preds = %lor.lhs.false608, %lor.lhs.false605, %if.then601
  %290 = load i32* %score, align 4
  %sub612 = sub nsw i32 %290, 80
  store i32 %sub612, i32* %score, align 4
  br label %if.end613

if.end613:                                        ; preds = %if.then611, %lor.lhs.false608
  br label %if.end614

if.end614:                                        ; preds = %if.end613, %if.then597
  br label %if.end615

if.end615:                                        ; preds = %if.end614, %land.lhs.true594, %if.end591
  %291 = load i32* getelementptr inbounds ([144 x i32]* @board, i32 0, i64 93), align 4
  %cmp616 = icmp eq i32 %291, 11
  br i1 %cmp616, label %land.lhs.true618, label %if.end639

land.lhs.true618:                                 ; preds = %if.end615
  %292 = load i32* getelementptr inbounds ([144 x i32]* @board, i32 0, i64 104), align 4
  %cmp619 = icmp ne i32 %292, 2
  br i1 %cmp619, label %if.then621, label %if.end639

if.then621:                                       ; preds = %land.lhs.true618
  %293 = load i32* %score, align 4
  %add622 = add nsw i32 %293, 20
  store i32 %add622, i32* %score, align 4
  %294 = load i32* getelementptr inbounds ([144 x i32]* @board, i32 0, i64 104), align 4
  %cmp623 = icmp eq i32 %294, 3
  br i1 %cmp623, label %if.then625, label %if.end638

if.then625:                                       ; preds = %if.then621
  %295 = load i32* %score, align 4
  %add626 = add nsw i32 %295, 40
  store i32 %add626, i32* %score, align 4
  %296 = load i32* getelementptr inbounds ([144 x i32]* @board, i32 0, i64 115), align 4
  %cmp627 = icmp eq i32 %296, 6
  br i1 %cmp627, label %if.then635, label %lor.lhs.false629

lor.lhs.false629:                                 ; preds = %if.then625
  %297 = load i32* getelementptr inbounds ([144 x i32]* @board, i32 0, i64 116), align 4
  %cmp630 = icmp eq i32 %297, 6
  br i1 %cmp630, label %if.then635, label %lor.lhs.false632

lor.lhs.false632:                                 ; preds = %lor.lhs.false629
  %298 = load i32* getelementptr inbounds ([144 x i32]* @board, i32 0, i64 117), align 4
  %cmp633 = icmp eq i32 %298, 6
  br i1 %cmp633, label %if.then635, label %if.end637

if.then635:                                       ; preds = %lor.lhs.false632, %lor.lhs.false629, %if.then625
  %299 = load i32* %score, align 4
  %add636 = add nsw i32 %299, 80
  store i32 %add636, i32* %score, align 4
  br label %if.end637

if.end637:                                        ; preds = %if.then635, %lor.lhs.false632
  br label %if.end638

if.end638:                                        ; preds = %if.end637, %if.then621
  br label %if.end639

if.end639:                                        ; preds = %if.end638, %land.lhs.true618, %if.end615
  br label %if.end640

if.end640:                                        ; preds = %if.end639, %if.end219
  %300 = load i32* @cfg_attackeval, align 4
  %tobool641 = icmp ne i32 %300, 0
  br i1 %tobool641, label %if.then642, label %if.end864

if.then642:                                       ; preds = %if.end640
  store i32 0, i32* %badsquares, align 4
  store i32 0, i32* %safety, align 4
  %301 = load i32* @wking_loc, align 4
  %sub643 = sub nsw i32 %301, 13
  %idxprom644 = sext i32 %sub643 to i64
  %arrayidx645 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom644
  %302 = load i32* %arrayidx645, align 4
  %cmp646 = icmp eq i32 %302, 0
  br i1 %cmp646, label %cond.true648, label %cond.false649

cond.true648:                                     ; preds = %if.then642
  br label %cond.end

cond.false649:                                    ; preds = %if.then642
  %303 = load i32* @wking_loc, align 4
  %sub650 = sub nsw i32 %303, 13
  %call651 = call i32 @nk_attacked(i32 %sub650, i32 0)
  br label %cond.end

cond.end:                                         ; preds = %cond.false649, %cond.true648
  %cond = phi i32 [ 0, %cond.true648 ], [ %call651, %cond.false649 ]
  %304 = load i32* %badsquares, align 4
  %add652 = add i32 %304, %cond
  store i32 %add652, i32* %badsquares, align 4
  %305 = load i32* @wking_loc, align 4
  %sub653 = sub nsw i32 %305, 12
  %idxprom654 = sext i32 %sub653 to i64
  %arrayidx655 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom654
  %306 = load i32* %arrayidx655, align 4
  %cmp656 = icmp eq i32 %306, 0
  br i1 %cmp656, label %cond.true658, label %cond.false659

cond.true658:                                     ; preds = %cond.end
  br label %cond.end662

cond.false659:                                    ; preds = %cond.end
  %307 = load i32* @wking_loc, align 4
  %sub660 = sub nsw i32 %307, 12
  %call661 = call i32 @nk_attacked(i32 %sub660, i32 0)
  br label %cond.end662

cond.end662:                                      ; preds = %cond.false659, %cond.true658
  %cond663 = phi i32 [ 0, %cond.true658 ], [ %call661, %cond.false659 ]
  %308 = load i32* %badsquares, align 4
  %add664 = add i32 %308, %cond663
  store i32 %add664, i32* %badsquares, align 4
  %309 = load i32* @wking_loc, align 4
  %sub665 = sub nsw i32 %309, 11
  %idxprom666 = sext i32 %sub665 to i64
  %arrayidx667 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom666
  %310 = load i32* %arrayidx667, align 4
  %cmp668 = icmp eq i32 %310, 0
  br i1 %cmp668, label %cond.true670, label %cond.false671

cond.true670:                                     ; preds = %cond.end662
  br label %cond.end674

cond.false671:                                    ; preds = %cond.end662
  %311 = load i32* @wking_loc, align 4
  %sub672 = sub nsw i32 %311, 11
  %call673 = call i32 @nk_attacked(i32 %sub672, i32 0)
  br label %cond.end674

cond.end674:                                      ; preds = %cond.false671, %cond.true670
  %cond675 = phi i32 [ 0, %cond.true670 ], [ %call673, %cond.false671 ]
  %312 = load i32* %badsquares, align 4
  %add676 = add i32 %312, %cond675
  store i32 %add676, i32* %badsquares, align 4
  %313 = load i32* @wking_loc, align 4
  %sub677 = sub nsw i32 %313, 1
  %idxprom678 = sext i32 %sub677 to i64
  %arrayidx679 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom678
  %314 = load i32* %arrayidx679, align 4
  %cmp680 = icmp eq i32 %314, 0
  br i1 %cmp680, label %cond.true682, label %cond.false683

cond.true682:                                     ; preds = %cond.end674
  br label %cond.end686

cond.false683:                                    ; preds = %cond.end674
  %315 = load i32* @wking_loc, align 4
  %sub684 = sub nsw i32 %315, 1
  %call685 = call i32 @nk_attacked(i32 %sub684, i32 0)
  br label %cond.end686

cond.end686:                                      ; preds = %cond.false683, %cond.true682
  %cond687 = phi i32 [ 0, %cond.true682 ], [ %call685, %cond.false683 ]
  %316 = load i32* %badsquares, align 4
  %add688 = add i32 %316, %cond687
  store i32 %add688, i32* %badsquares, align 4
  %317 = load i32* @wking_loc, align 4
  %add689 = add nsw i32 %317, 1
  %idxprom690 = sext i32 %add689 to i64
  %arrayidx691 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom690
  %318 = load i32* %arrayidx691, align 4
  %cmp692 = icmp eq i32 %318, 0
  br i1 %cmp692, label %cond.true694, label %cond.false695

cond.true694:                                     ; preds = %cond.end686
  br label %cond.end698

cond.false695:                                    ; preds = %cond.end686
  %319 = load i32* @wking_loc, align 4
  %add696 = add nsw i32 %319, 1
  %call697 = call i32 @nk_attacked(i32 %add696, i32 0)
  br label %cond.end698

cond.end698:                                      ; preds = %cond.false695, %cond.true694
  %cond699 = phi i32 [ 0, %cond.true694 ], [ %call697, %cond.false695 ]
  %320 = load i32* %badsquares, align 4
  %add700 = add i32 %320, %cond699
  store i32 %add700, i32* %badsquares, align 4
  %321 = load i32* @wking_loc, align 4
  %add701 = add nsw i32 %321, 11
  %idxprom702 = sext i32 %add701 to i64
  %arrayidx703 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom702
  %322 = load i32* %arrayidx703, align 4
  %cmp704 = icmp eq i32 %322, 0
  br i1 %cmp704, label %cond.true706, label %cond.false707

cond.true706:                                     ; preds = %cond.end698
  br label %cond.end710

cond.false707:                                    ; preds = %cond.end698
  %323 = load i32* @wking_loc, align 4
  %add708 = add nsw i32 %323, 11
  %call709 = call i32 @nk_attacked(i32 %add708, i32 0)
  br label %cond.end710

cond.end710:                                      ; preds = %cond.false707, %cond.true706
  %cond711 = phi i32 [ 0, %cond.true706 ], [ %call709, %cond.false707 ]
  %324 = load i32* %badsquares, align 4
  %add712 = add i32 %324, %cond711
  store i32 %add712, i32* %badsquares, align 4
  %325 = load i32* @wking_loc, align 4
  %add713 = add nsw i32 %325, 12
  %idxprom714 = sext i32 %add713 to i64
  %arrayidx715 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom714
  %326 = load i32* %arrayidx715, align 4
  %cmp716 = icmp eq i32 %326, 0
  br i1 %cmp716, label %cond.true718, label %cond.false719

cond.true718:                                     ; preds = %cond.end710
  br label %cond.end722

cond.false719:                                    ; preds = %cond.end710
  %327 = load i32* @wking_loc, align 4
  %add720 = add nsw i32 %327, 12
  %call721 = call i32 @nk_attacked(i32 %add720, i32 0)
  br label %cond.end722

cond.end722:                                      ; preds = %cond.false719, %cond.true718
  %cond723 = phi i32 [ 0, %cond.true718 ], [ %call721, %cond.false719 ]
  %328 = load i32* %badsquares, align 4
  %add724 = add i32 %328, %cond723
  store i32 %add724, i32* %badsquares, align 4
  %329 = load i32* @wking_loc, align 4
  %add725 = add nsw i32 %329, 13
  %idxprom726 = sext i32 %add725 to i64
  %arrayidx727 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom726
  %330 = load i32* %arrayidx727, align 4
  %cmp728 = icmp eq i32 %330, 0
  br i1 %cmp728, label %cond.true730, label %cond.false731

cond.true730:                                     ; preds = %cond.end722
  br label %cond.end734

cond.false731:                                    ; preds = %cond.end722
  %331 = load i32* @wking_loc, align 4
  %add732 = add nsw i32 %331, 13
  %call733 = call i32 @nk_attacked(i32 %add732, i32 0)
  br label %cond.end734

cond.end734:                                      ; preds = %cond.false731, %cond.true730
  %cond735 = phi i32 [ 0, %cond.true730 ], [ %call733, %cond.false731 ]
  %332 = load i32* %badsquares, align 4
  %add736 = add i32 %332, %cond735
  store i32 %add736, i32* %badsquares, align 4
  %333 = load i32* @black_hand_eval, align 4
  %sub737 = sub nsw i32 0, %333
  %div = sdiv i32 %sub737, 100
  store i32 %div, i32* %norm_black_hand_eval, align 4
  %334 = load i32* %norm_black_hand_eval, align 4
  %cmp738 = icmp sgt i32 %334, 14
  br i1 %cmp738, label %if.then740, label %if.else741

if.then740:                                       ; preds = %cond.end734
  store i32 14, i32* %norm_black_hand_eval, align 4
  br label %if.end746

if.else741:                                       ; preds = %cond.end734
  %335 = load i32* %norm_black_hand_eval, align 4
  %cmp742 = icmp slt i32 %335, 0
  br i1 %cmp742, label %if.then744, label %if.end745

if.then744:                                       ; preds = %if.else741
  store i32 0, i32* %norm_black_hand_eval, align 4
  br label %if.end745

if.end745:                                        ; preds = %if.then744, %if.else741
  br label %if.end746

if.end746:                                        ; preds = %if.end745, %if.then740
  %336 = load i32* %badsquares, align 4
  %idxprom747 = sext i32 %336 to i64
  %337 = load i32* %norm_black_hand_eval, align 4
  %idxprom748 = sext i32 %337 to i64
  %bitcast970 = bitcast [15 x [9 x i32]]* @ksafety_scaled to i8*
  %bitcast971 = bitcast [15 x [9 x i32]]* getelementptr inbounds ([15 x [9 x i32]]* @ksafety_scaled, i32 1) to i8*
  %arrayidx749 = getelementptr inbounds [15 x [9 x i32]]* @ksafety_scaled, i32 0, i64 %idxprom748
  %arrayidx750 = getelementptr inbounds [9 x i32]* %arrayidx749, i32 0, i64 %idxprom747
  %338 = load i32* %arrayidx750, align 4
  %339 = load i32* %safety, align 4
  %sub751 = sub nsw i32 %339, %338
  store i32 %sub751, i32* %safety, align 4
  store i32 0, i32* %badsquares, align 4
  %340 = load i32* @bking_loc, align 4
  %sub752 = sub nsw i32 %340, 13
  %idxprom753 = sext i32 %sub752 to i64
  %arrayidx754 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom753
  %341 = load i32* %arrayidx754, align 4
  %cmp755 = icmp eq i32 %341, 0
  br i1 %cmp755, label %cond.true757, label %cond.false758

cond.true757:                                     ; preds = %if.end746
  br label %cond.end761

cond.false758:                                    ; preds = %if.end746
  %342 = load i32* @bking_loc, align 4
  %sub759 = sub nsw i32 %342, 13
  %call760 = call i32 @nk_attacked(i32 %sub759, i32 1)
  br label %cond.end761

cond.end761:                                      ; preds = %cond.false758, %cond.true757
  %cond762 = phi i32 [ 0, %cond.true757 ], [ %call760, %cond.false758 ]
  %343 = load i32* %badsquares, align 4
  %add763 = add i32 %343, %cond762
  store i32 %add763, i32* %badsquares, align 4
  %344 = load i32* @bking_loc, align 4
  %sub764 = sub nsw i32 %344, 12
  %idxprom765 = sext i32 %sub764 to i64
  %arrayidx766 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom765
  %345 = load i32* %arrayidx766, align 4
  %cmp767 = icmp eq i32 %345, 0
  br i1 %cmp767, label %cond.true769, label %cond.false770

cond.true769:                                     ; preds = %cond.end761
  br label %cond.end773

cond.false770:                                    ; preds = %cond.end761
  %346 = load i32* @bking_loc, align 4
  %sub771 = sub nsw i32 %346, 12
  %call772 = call i32 @nk_attacked(i32 %sub771, i32 1)
  br label %cond.end773

cond.end773:                                      ; preds = %cond.false770, %cond.true769
  %cond774 = phi i32 [ 0, %cond.true769 ], [ %call772, %cond.false770 ]
  %347 = load i32* %badsquares, align 4
  %add775 = add i32 %347, %cond774
  store i32 %add775, i32* %badsquares, align 4
  %348 = load i32* @bking_loc, align 4
  %sub776 = sub nsw i32 %348, 11
  %idxprom777 = sext i32 %sub776 to i64
  %arrayidx778 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom777
  %349 = load i32* %arrayidx778, align 4
  %cmp779 = icmp eq i32 %349, 0
  br i1 %cmp779, label %cond.true781, label %cond.false782

cond.true781:                                     ; preds = %cond.end773
  br label %cond.end785

cond.false782:                                    ; preds = %cond.end773
  %350 = load i32* @bking_loc, align 4
  %sub783 = sub nsw i32 %350, 11
  %call784 = call i32 @nk_attacked(i32 %sub783, i32 1)
  br label %cond.end785

cond.end785:                                      ; preds = %cond.false782, %cond.true781
  %cond786 = phi i32 [ 0, %cond.true781 ], [ %call784, %cond.false782 ]
  %351 = load i32* %badsquares, align 4
  %add787 = add i32 %351, %cond786
  store i32 %add787, i32* %badsquares, align 4
  %352 = load i32* @bking_loc, align 4
  %sub788 = sub nsw i32 %352, 1
  %idxprom789 = sext i32 %sub788 to i64
  %arrayidx790 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom789
  %353 = load i32* %arrayidx790, align 4
  %cmp791 = icmp eq i32 %353, 0
  br i1 %cmp791, label %cond.true793, label %cond.false794

cond.true793:                                     ; preds = %cond.end785
  br label %cond.end797

cond.false794:                                    ; preds = %cond.end785
  %354 = load i32* @bking_loc, align 4
  %sub795 = sub nsw i32 %354, 1
  %call796 = call i32 @nk_attacked(i32 %sub795, i32 1)
  br label %cond.end797

cond.end797:                                      ; preds = %cond.false794, %cond.true793
  %cond798 = phi i32 [ 0, %cond.true793 ], [ %call796, %cond.false794 ]
  %355 = load i32* %badsquares, align 4
  %add799 = add i32 %355, %cond798
  store i32 %add799, i32* %badsquares, align 4
  %356 = load i32* @bking_loc, align 4
  %add800 = add nsw i32 %356, 1
  %idxprom801 = sext i32 %add800 to i64
  %arrayidx802 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom801
  %357 = load i32* %arrayidx802, align 4
  %cmp803 = icmp eq i32 %357, 0
  br i1 %cmp803, label %cond.true805, label %cond.false806

cond.true805:                                     ; preds = %cond.end797
  br label %cond.end809

cond.false806:                                    ; preds = %cond.end797
  %358 = load i32* @bking_loc, align 4
  %add807 = add nsw i32 %358, 1
  %call808 = call i32 @nk_attacked(i32 %add807, i32 1)
  br label %cond.end809

cond.end809:                                      ; preds = %cond.false806, %cond.true805
  %cond810 = phi i32 [ 0, %cond.true805 ], [ %call808, %cond.false806 ]
  %359 = load i32* %badsquares, align 4
  %add811 = add i32 %359, %cond810
  store i32 %add811, i32* %badsquares, align 4
  %360 = load i32* @bking_loc, align 4
  %add812 = add nsw i32 %360, 11
  %idxprom813 = sext i32 %add812 to i64
  %arrayidx814 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom813
  %361 = load i32* %arrayidx814, align 4
  %cmp815 = icmp eq i32 %361, 0
  br i1 %cmp815, label %cond.true817, label %cond.false818

cond.true817:                                     ; preds = %cond.end809
  br label %cond.end821

cond.false818:                                    ; preds = %cond.end809
  %362 = load i32* @bking_loc, align 4
  %add819 = add nsw i32 %362, 11
  %call820 = call i32 @nk_attacked(i32 %add819, i32 1)
  br label %cond.end821

cond.end821:                                      ; preds = %cond.false818, %cond.true817
  %cond822 = phi i32 [ 0, %cond.true817 ], [ %call820, %cond.false818 ]
  %363 = load i32* %badsquares, align 4
  %add823 = add i32 %363, %cond822
  store i32 %add823, i32* %badsquares, align 4
  %364 = load i32* @bking_loc, align 4
  %add824 = add nsw i32 %364, 12
  %idxprom825 = sext i32 %add824 to i64
  %arrayidx826 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom825
  %365 = load i32* %arrayidx826, align 4
  %cmp827 = icmp eq i32 %365, 0
  br i1 %cmp827, label %cond.true829, label %cond.false830

cond.true829:                                     ; preds = %cond.end821
  br label %cond.end833

cond.false830:                                    ; preds = %cond.end821
  %366 = load i32* @bking_loc, align 4
  %add831 = add nsw i32 %366, 12
  %call832 = call i32 @nk_attacked(i32 %add831, i32 1)
  br label %cond.end833

cond.end833:                                      ; preds = %cond.false830, %cond.true829
  %cond834 = phi i32 [ 0, %cond.true829 ], [ %call832, %cond.false830 ]
  %367 = load i32* %badsquares, align 4
  %add835 = add i32 %367, %cond834
  store i32 %add835, i32* %badsquares, align 4
  %368 = load i32* @bking_loc, align 4
  %add836 = add nsw i32 %368, 13
  %idxprom837 = sext i32 %add836 to i64
  %arrayidx838 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom837
  %369 = load i32* %arrayidx838, align 4
  %cmp839 = icmp eq i32 %369, 0
  br i1 %cmp839, label %cond.true841, label %cond.false842

cond.true841:                                     ; preds = %cond.end833
  br label %cond.end845

cond.false842:                                    ; preds = %cond.end833
  %370 = load i32* @bking_loc, align 4
  %add843 = add nsw i32 %370, 13
  %call844 = call i32 @nk_attacked(i32 %add843, i32 1)
  br label %cond.end845

cond.end845:                                      ; preds = %cond.false842, %cond.true841
  %cond846 = phi i32 [ 0, %cond.true841 ], [ %call844, %cond.false842 ]
  %371 = load i32* %badsquares, align 4
  %add847 = add i32 %371, %cond846
  store i32 %add847, i32* %badsquares, align 4
  %372 = load i32* @white_hand_eval, align 4
  %div848 = sdiv i32 %372, 100
  store i32 %div848, i32* %norm_white_hand_eval, align 4
  %373 = load i32* %norm_white_hand_eval, align 4
  %cmp849 = icmp sgt i32 %373, 14
  br i1 %cmp849, label %if.then851, label %if.else852

if.then851:                                       ; preds = %cond.end845
  store i32 14, i32* %norm_white_hand_eval, align 4
  br label %if.end857

if.else852:                                       ; preds = %cond.end845
  %374 = load i32* %norm_white_hand_eval, align 4
  %cmp853 = icmp slt i32 %374, 0
  br i1 %cmp853, label %if.then855, label %if.end856

if.then855:                                       ; preds = %if.else852
  store i32 0, i32* %norm_white_hand_eval, align 4
  br label %if.end856

if.end856:                                        ; preds = %if.then855, %if.else852
  br label %if.end857

if.end857:                                        ; preds = %if.end856, %if.then851
  %375 = load i32* %badsquares, align 4
  %idxprom858 = sext i32 %375 to i64
  %376 = load i32* %norm_white_hand_eval, align 4
  %idxprom859 = sext i32 %376 to i64
  %bitcast972 = bitcast [15 x [9 x i32]]* @ksafety_scaled to i8*
  %bitcast973 = bitcast [15 x [9 x i32]]* getelementptr inbounds ([15 x [9 x i32]]* @ksafety_scaled, i32 1) to i8*
  %arrayidx860 = getelementptr inbounds [15 x [9 x i32]]* @ksafety_scaled, i32 0, i64 %idxprom859
  %arrayidx861 = getelementptr inbounds [9 x i32]* %arrayidx860, i32 0, i64 %idxprom858
  %377 = load i32* %arrayidx861, align 4
  %378 = load i32* %safety, align 4
  %add862 = add nsw i32 %378, %377
  store i32 %add862, i32* %safety, align 4
  %379 = load i32* %safety, align 4
  %380 = load i32* %score, align 4
  %add863 = add nsw i32 %380, %379
  store i32 %add863, i32* %score, align 4
  br label %if.end864

if.end864:                                        ; preds = %if.end857, %if.end640
  %381 = load i32* @white_hand_eval, align 4
  %382 = load i32* @black_hand_eval, align 4
  %add865 = add nsw i32 %381, %382
  %383 = load i32* %score, align 4
  %add866 = add nsw i32 %383, %add865
  store i32 %add866, i32* %score, align 4
  %384 = load i32* %score, align 4
  call void @storeECache(i32 %384)
  %385 = load i32* @white_to_move, align 4
  %cmp867 = icmp eq i32 %385, 1
  br i1 %cmp867, label %if.then869, label %if.else870

if.then869:                                       ; preds = %if.end864
  %386 = load i32* %score, align 4
  store i32 %386, i32* %retval
  br label %return

if.else870:                                       ; preds = %if.end864
  %387 = load i32* %score, align 4
  %sub871 = sub nsw i32 0, %387
  store i32 %sub871, i32* %retval
  br label %return

return:                                           ; preds = %if.else870, %if.then869, %if.end13, %if.then12, %if.then6, %if.then2, %if.then
  %388 = load i32* %retval
  ret i32 %388
}

; Function Attrs: nounwind uwtable
define internal i32 @losers_eval() #0 {
entry:
  %retval = alloca i32, align 4
  %retval446 = bitcast i32* %retval to i32*
  %bitcast = bitcast i32* %retval to i8*
  %mtmp = getelementptr i32* %retval446, i32 1
  %bitcast447 = bitcast i32* %mtmp to i8*
  %srank = alloca i32, align 4
  %srank448 = bitcast i32* %srank to i32*
  %bitcast449 = bitcast i32* %srank to i8*
  %mtmp450 = getelementptr i32* %srank448, i32 1
  %bitcast451 = bitcast i32* %mtmp450 to i8*
  %pawn_file = alloca i32, align 4
  %pawn_file452 = bitcast i32* %pawn_file to i32*
  %bitcast453 = bitcast i32* %pawn_file to i8*
  %mtmp454 = getelementptr i32* %pawn_file452, i32 1
  %bitcast455 = bitcast i32* %mtmp454 to i8*
  %pawns = alloca [2 x [11 x i32]], align 16
  %pawns456 = bitcast [2 x [11 x i32]]* %pawns to [2 x [11 x i32]]*
  %bitcast457 = bitcast [2 x [11 x i32]]* %pawns to i8*
  %mtmp458 = getelementptr [2 x [11 x i32]]* %pawns456, i32 1
  %bitcast459 = bitcast [2 x [11 x i32]]* %mtmp458 to i8*
  %white_back_pawn = alloca [11 x i32], align 16
  %white_back_pawn460 = bitcast [11 x i32]* %white_back_pawn to [11 x i32]*
  %bitcast461 = bitcast [11 x i32]* %white_back_pawn to i8*
  %mtmp462 = getelementptr [11 x i32]* %white_back_pawn460, i32 1
  %bitcast463 = bitcast [11 x i32]* %mtmp462 to i8*
  %black_back_pawn = alloca [11 x i32], align 16
  %black_back_pawn464 = bitcast [11 x i32]* %black_back_pawn to [11 x i32]*
  %bitcast465 = bitcast [11 x i32]* %black_back_pawn to i8*
  %mtmp466 = getelementptr [11 x i32]* %black_back_pawn464, i32 1
  %bitcast467 = bitcast [11 x i32]* %mtmp466 to i8*
  %isolated = alloca i32, align 4
  %isolated468 = bitcast i32* %isolated to i32*
  %bitcast469 = bitcast i32* %isolated to i8*
  %mtmp470 = getelementptr i32* %isolated468, i32 1
  %bitcast471 = bitcast i32* %mtmp470 to i8*
  %backwards = alloca i32, align 4
  %backwards472 = bitcast i32* %backwards to i32*
  %bitcast473 = bitcast i32* %backwards to i8*
  %mtmp474 = getelementptr i32* %backwards472, i32 1
  %bitcast475 = bitcast i32* %mtmp474 to i8*
  %i = alloca i32, align 4
  %i476 = bitcast i32* %i to i32*
  %bitcast477 = bitcast i32* %i to i8*
  %mtmp478 = getelementptr i32* %i476, i32 1
  %bitcast479 = bitcast i32* %mtmp478 to i8*
  %a = alloca i32, align 4
  %a480 = bitcast i32* %a to i32*
  %bitcast481 = bitcast i32* %a to i8*
  %mtmp482 = getelementptr i32* %a480, i32 1
  %bitcast483 = bitcast i32* %mtmp482 to i8*
  %j = alloca i32, align 4
  %j484 = bitcast i32* %j to i32*
  %bitcast485 = bitcast i32* %j to i8*
  %mtmp486 = getelementptr i32* %j484, i32 1
  %bitcast487 = bitcast i32* %mtmp486 to i8*
  %score = alloca i32, align 4
  %score488 = bitcast i32* %score to i32*
  %bitcast489 = bitcast i32* %score to i8*
  %mtmp490 = getelementptr i32* %score488, i32 1
  %bitcast491 = bitcast i32* %mtmp490 to i8*
  %in_cache = alloca i32, align 4
  %in_cache492 = bitcast i32* %in_cache to i32*
  %bitcast493 = bitcast i32* %in_cache to i8*
  %mtmp494 = getelementptr i32* %in_cache492, i32 1
  %bitcast495 = bitcast i32* %mtmp494 to i8*
  %wp = alloca i32, align 4
  %wp496 = bitcast i32* %wp to i32*
  %bitcast497 = bitcast i32* %wp to i8*
  %mtmp498 = getelementptr i32* %wp496, i32 1
  %bitcast499 = bitcast i32* %mtmp498 to i8*
  %bp = alloca i32, align 4
  %bp500 = bitcast i32* %bp to i32*
  %bitcast501 = bitcast i32* %bp to i8*
  %mtmp502 = getelementptr i32* %bp500, i32 1
  %bitcast503 = bitcast i32* %mtmp502 to i8*
  %wks = alloca i32, align 4
  %wks504 = bitcast i32* %wks to i32*
  %bitcast505 = bitcast i32* %wks to i8*
  %mtmp506 = getelementptr i32* %wks504, i32 1
  %bitcast507 = bitcast i32* %mtmp506 to i8*
  %bks = alloca i32, align 4
  %bks508 = bitcast i32* %bks to i32*
  %bitcast509 = bitcast i32* %bks to i8*
  %mtmp510 = getelementptr i32* %bks508, i32 1
  %bitcast511 = bitcast i32* %mtmp510 to i8*
  %wpassp = alloca i32, align 4
  %wpassp512 = bitcast i32* %wpassp to i32*
  %bitcast513 = bitcast i32* %wpassp to i8*
  %mtmp514 = getelementptr i32* %wpassp512, i32 1
  %bitcast515 = bitcast i32* %mtmp514 to i8*
  %bpassp = alloca i32, align 4
  %bpassp516 = bitcast i32* %bpassp to i32*
  %bitcast517 = bitcast i32* %bpassp to i8*
  %mtmp518 = getelementptr i32* %bpassp516, i32 1
  %bitcast519 = bitcast i32* %mtmp518 to i8*
  %wpawns = alloca i32, align 4
  %wpawns520 = bitcast i32* %wpawns to i32*
  %bitcast521 = bitcast i32* %wpawns to i8*
  %mtmp522 = getelementptr i32* %wpawns520, i32 1
  %bitcast523 = bitcast i32* %mtmp522 to i8*
  %bpawns = alloca i32, align 4
  %bpawns524 = bitcast i32* %bpawns to i32*
  %bitcast525 = bitcast i32* %bpawns to i8*
  %mtmp526 = getelementptr i32* %bpawns524, i32 1
  %bitcast527 = bitcast i32* %mtmp526 to i8*
  store i32 0, i32* %srank, align 4
  store i32 0, i32* %pawn_file, align 4
  store i32 0, i32* %score, align 4
  store i32 0, i32* %wp, align 4
  store i32 0, i32* %bp, align 4
  store i32 0, i32* %wks, align 4
  store i32 0, i32* %bks, align 4
  store i32 0, i32* %wpassp, align 4
  store i32 0, i32* %bpassp, align 4
  store i32 0, i32* %wpawns, align 4
  store i32 0, i32* %bpawns, align 4
  store i32 0, i32* %in_cache, align 4
  call void @__softboundcets_allocate_shadow_stack_space(i32 3)
  call void @__softboundcets_store_base_shadow_stack(i8* %bitcast489, i32 1)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bitcast491, i32 1)
  call void @__softboundcets_store_base_shadow_stack(i8* %bitcast493, i32 2)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bitcast495, i32 2)
  call void @checkECache(i32* %score, i32* %in_cache)
  call void @__softboundcets_deallocate_shadow_stack_space()
  %0 = load i32* %in_cache, align 4
  %tobool = icmp ne i32 %0, 0
  br i1 %tobool, label %if.then, label %if.end2

if.then:                                          ; preds = %entry
  %1 = load i32* @white_to_move, align 4
  %cmp = icmp eq i32 %1, 1
  br i1 %cmp, label %if.then1, label %if.end

if.then1:                                         ; preds = %if.then
  %2 = load i32* %score, align 4
  store i32 %2, i32* %retval
  br label %return

if.end:                                           ; preds = %if.then
  %3 = load i32* %score, align 4
  %sub = sub nsw i32 0, %3
  store i32 %sub, i32* %retval
  br label %return

if.end2:                                          ; preds = %entry
  %4 = bitcast [2 x [11 x i32]]* %pawns to i8*
  call void @__softboundcets_memset_check(i8* %4, i64 88, i8* %bitcast457, i8* %bitcast459)
  call void @llvm.memset.p0i8.i64(i8* %4, i8 0, i64 88, i32 16, i1 false)
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.end2
  %5 = load i32* %i, align 4
  %cmp3 = icmp slt i32 %5, 11
  br i1 %cmp3, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %6 = load i32* %i, align 4
  %idxprom = sext i32 %6 to i64
  %arrayidx = getelementptr inbounds [11 x i32]* %white_back_pawn, i32 0, i64 %idxprom
  store i32 7, i32* %arrayidx, align 4
  %7 = load i32* %i, align 4
  %idxprom4 = sext i32 %7 to i64
  %arrayidx5 = getelementptr inbounds [11 x i32]* %black_back_pawn, i32 0, i64 %idxprom4
  store i32 2, i32* %arrayidx5, align 4
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %8 = load i32* %i, align 4
  %inc = add nsw i32 %8, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  store i32 1, i32* %j, align 4
  store i32 1, i32* %a, align 4
  br label %for.cond6

for.cond6:                                        ; preds = %for.inc52, %for.end
  %9 = load i32* %a, align 4
  %10 = load i32* @piece_count, align 4
  %cmp7 = icmp sle i32 %9, %10
  br i1 %cmp7, label %for.body8, label %for.end54

for.body8:                                        ; preds = %for.cond6
  %11 = load i32* %j, align 4
  %idxprom9 = sext i32 %11 to i64
  %arrayidx10 = getelementptr inbounds [62 x i32]* @pieces, i32 0, i64 %idxprom9
  %12 = load i32* %arrayidx10, align 4
  store i32 %12, i32* %i, align 4
  %13 = load i32* %i, align 4
  %tobool11 = icmp ne i32 %13, 0
  br i1 %tobool11, label %if.else, label %if.then12

if.then12:                                        ; preds = %for.body8
  br label %for.inc52

if.else:                                          ; preds = %for.body8
  %14 = load i32* %a, align 4
  %inc13 = add nsw i32 %14, 1
  store i32 %inc13, i32* %a, align 4
  br label %if.end14

if.end14:                                         ; preds = %if.else
  %15 = load i32* %i, align 4
  %idxprom15 = sext i32 %15 to i64
  %arrayidx16 = getelementptr inbounds [144 x i32]* @Xfile, i32 0, i64 %idxprom15
  %16 = load i32* %arrayidx16, align 4
  %add = add nsw i32 %16, 1
  store i32 %add, i32* %pawn_file, align 4
  %17 = load i32* %i, align 4
  %idxprom17 = sext i32 %17 to i64
  %arrayidx18 = getelementptr inbounds [144 x i32]* @Xrank, i32 0, i64 %idxprom17
  %18 = load i32* %arrayidx18, align 4
  store i32 %18, i32* %srank, align 4
  %19 = load i32* %i, align 4
  %idxprom19 = sext i32 %19 to i64
  %arrayidx20 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom19
  %20 = load i32* %arrayidx20, align 4
  %cmp21 = icmp eq i32 %20, 1
  br i1 %cmp21, label %if.then22, label %if.else34

if.then22:                                        ; preds = %if.end14
  %21 = load i32* %pawn_file, align 4
  %idxprom23 = sext i32 %21 to i64
  %arrayidx24 = getelementptr inbounds [2 x [11 x i32]]* %pawns, i32 0, i64 1
  %arrayidx25 = getelementptr inbounds [11 x i32]* %arrayidx24, i32 0, i64 %idxprom23
  %22 = load i32* %arrayidx25, align 4
  %inc26 = add nsw i32 %22, 1
  store i32 %inc26, i32* %arrayidx25, align 4
  %23 = load i32* %srank, align 4
  %24 = load i32* %pawn_file, align 4
  %idxprom27 = sext i32 %24 to i64
  %arrayidx28 = getelementptr inbounds [11 x i32]* %white_back_pawn, i32 0, i64 %idxprom27
  %25 = load i32* %arrayidx28, align 4
  %cmp29 = icmp slt i32 %23, %25
  br i1 %cmp29, label %if.then30, label %if.end33

if.then30:                                        ; preds = %if.then22
  %26 = load i32* %srank, align 4
  %27 = load i32* %pawn_file, align 4
  %idxprom31 = sext i32 %27 to i64
  %arrayidx32 = getelementptr inbounds [11 x i32]* %white_back_pawn, i32 0, i64 %idxprom31
  store i32 %26, i32* %arrayidx32, align 4
  br label %if.end33

if.end33:                                         ; preds = %if.then30, %if.then22
  br label %if.end51

if.else34:                                        ; preds = %if.end14
  %28 = load i32* %i, align 4
  %idxprom35 = sext i32 %28 to i64
  %arrayidx36 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom35
  %29 = load i32* %arrayidx36, align 4
  %cmp37 = icmp eq i32 %29, 2
  br i1 %cmp37, label %if.then38, label %if.end50

if.then38:                                        ; preds = %if.else34
  %30 = load i32* %pawn_file, align 4
  %idxprom39 = sext i32 %30 to i64
  %arrayidx40 = getelementptr inbounds [2 x [11 x i32]]* %pawns, i32 0, i64 0
  %arrayidx41 = getelementptr inbounds [11 x i32]* %arrayidx40, i32 0, i64 %idxprom39
  %31 = load i32* %arrayidx41, align 4
  %inc42 = add nsw i32 %31, 1
  store i32 %inc42, i32* %arrayidx41, align 4
  %32 = load i32* %srank, align 4
  %33 = load i32* %pawn_file, align 4
  %idxprom43 = sext i32 %33 to i64
  %arrayidx44 = getelementptr inbounds [11 x i32]* %black_back_pawn, i32 0, i64 %idxprom43
  %34 = load i32* %arrayidx44, align 4
  %cmp45 = icmp sgt i32 %32, %34
  br i1 %cmp45, label %if.then46, label %if.end49

if.then46:                                        ; preds = %if.then38
  %35 = load i32* %srank, align 4
  %36 = load i32* %pawn_file, align 4
  %idxprom47 = sext i32 %36 to i64
  %arrayidx48 = getelementptr inbounds [11 x i32]* %black_back_pawn, i32 0, i64 %idxprom47
  store i32 %35, i32* %arrayidx48, align 4
  br label %if.end49

if.end49:                                         ; preds = %if.then46, %if.then38
  br label %if.end50

if.end50:                                         ; preds = %if.end49, %if.else34
  br label %if.end51

if.end51:                                         ; preds = %if.end50, %if.end33
  br label %for.inc52

for.inc52:                                        ; preds = %if.end51, %if.then12
  %37 = load i32* %j, align 4
  %inc53 = add nsw i32 %37, 1
  store i32 %inc53, i32* %j, align 4
  br label %for.cond6

for.end54:                                        ; preds = %for.cond6
  store i32 1, i32* %j, align 4
  store i32 1, i32* %a, align 4
  br label %for.cond55

for.cond55:                                       ; preds = %for.inc389, %for.end54
  %38 = load i32* %a, align 4
  %39 = load i32* @piece_count, align 4
  %cmp56 = icmp sle i32 %38, %39
  br i1 %cmp56, label %for.body57, label %for.end391

for.body57:                                       ; preds = %for.cond55
  %40 = load i32* %j, align 4
  %idxprom58 = sext i32 %40 to i64
  %arrayidx59 = getelementptr inbounds [62 x i32]* @pieces, i32 0, i64 %idxprom58
  %41 = load i32* %arrayidx59, align 4
  store i32 %41, i32* %i, align 4
  %42 = load i32* %i, align 4
  %tobool60 = icmp ne i32 %42, 0
  br i1 %tobool60, label %if.else62, label %if.then61

if.then61:                                        ; preds = %for.body57
  br label %for.inc389

if.else62:                                        ; preds = %for.body57
  %43 = load i32* %a, align 4
  %inc63 = add nsw i32 %43, 1
  store i32 %inc63, i32* %a, align 4
  br label %if.end64

if.end64:                                         ; preds = %if.else62
  %44 = load i32* %i, align 4
  %idxprom65 = sext i32 %44 to i64
  %arrayidx66 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom65
  %45 = load i32* %arrayidx66, align 4
  switch i32 %45, label %sw.epilog [
    i32 1, label %sw.bb
    i32 2, label %sw.bb183
    i32 7, label %sw.bb305
    i32 8, label %sw.bb313
    i32 11, label %sw.bb321
    i32 12, label %sw.bb329
    i32 3, label %sw.bb337
    i32 4, label %sw.bb346
    i32 9, label %sw.bb355
    i32 10, label %sw.bb366
    i32 5, label %sw.bb377
    i32 6, label %sw.bb383
  ]

sw.bb:                                            ; preds = %if.end64
  %46 = load i32* %wp, align 4
  %inc67 = add nsw i32 %46, 1
  store i32 %inc67, i32* %wp, align 4
  %47 = load i32* %wpawns, align 4
  %inc68 = add nsw i32 %47, 1
  store i32 %inc68, i32* %wpawns, align 4
  %48 = load i32* %i, align 4
  %idxprom69 = sext i32 %48 to i64
  %bitcast528 = bitcast [144 x i32]* @lcentral to i8*
  %bitcast529 = bitcast [144 x i32]* getelementptr inbounds ([144 x i32]* @lcentral, i32 1) to i8*
  %arrayidx70 = getelementptr inbounds [144 x i32]* @lcentral, i32 0, i64 %idxprom69
  %49 = load i32* %arrayidx70, align 4
  %50 = load i32* %score, align 4
  %add71 = add nsw i32 %50, %49
  store i32 %add71, i32* %score, align 4
  %51 = load i32* %i, align 4
  %call = call i32 @l_pawn_mobility(i32 %51)
  %shl = shl i32 %call, 2
  %52 = load i32* %score, align 4
  %add72 = add nsw i32 %52, %shl
  store i32 %add72, i32* %score, align 4
  %53 = load i32* %i, align 4
  %idxprom73 = sext i32 %53 to i64
  %arrayidx74 = getelementptr inbounds [144 x i32]* @Xrank, i32 0, i64 %idxprom73
  %54 = load i32* %arrayidx74, align 4
  %sub75 = sub nsw i32 %54, 2
  %mul = mul nsw i32 %sub75, 8
  %55 = load i32* %score, align 4
  %add76 = add nsw i32 %55, %mul
  store i32 %add76, i32* %score, align 4
  store i32 0, i32* %isolated, align 4
  store i32 0, i32* %backwards, align 4
  %56 = load i32* %pawn_file, align 4
  %add77 = add nsw i32 %56, 1
  %idxprom78 = sext i32 %add77 to i64
  %arrayidx79 = getelementptr inbounds [11 x i32]* %white_back_pawn, i32 0, i64 %idxprom78
  %57 = load i32* %arrayidx79, align 4
  %58 = load i32* %srank, align 4
  %cmp80 = icmp sgt i32 %57, %58
  br i1 %cmp80, label %land.lhs.true, label %if.end101

land.lhs.true:                                    ; preds = %sw.bb
  %59 = load i32* %pawn_file, align 4
  %sub81 = sub nsw i32 %59, 1
  %idxprom82 = sext i32 %sub81 to i64
  %arrayidx83 = getelementptr inbounds [11 x i32]* %white_back_pawn, i32 0, i64 %idxprom82
  %60 = load i32* %arrayidx83, align 4
  %61 = load i32* %srank, align 4
  %cmp84 = icmp sgt i32 %60, %61
  br i1 %cmp84, label %if.then85, label %if.end101

if.then85:                                        ; preds = %land.lhs.true
  %62 = load i32* %score, align 4
  %sub86 = sub nsw i32 %62, 8
  store i32 %sub86, i32* %score, align 4
  store i32 1, i32* %backwards, align 4
  %63 = load i32* %pawn_file, align 4
  %add87 = add nsw i32 %63, 1
  %idxprom88 = sext i32 %add87 to i64
  %arrayidx89 = getelementptr inbounds [2 x [11 x i32]]* %pawns, i32 0, i64 1
  %arrayidx90 = getelementptr inbounds [11 x i32]* %arrayidx89, i32 0, i64 %idxprom88
  %64 = load i32* %arrayidx90, align 4
  %tobool91 = icmp ne i32 %64, 0
  br i1 %tobool91, label %if.end100, label %land.lhs.true92

land.lhs.true92:                                  ; preds = %if.then85
  %65 = load i32* %pawn_file, align 4
  %sub93 = sub nsw i32 %65, 1
  %idxprom94 = sext i32 %sub93 to i64
  %arrayidx95 = getelementptr inbounds [2 x [11 x i32]]* %pawns, i32 0, i64 1
  %arrayidx96 = getelementptr inbounds [11 x i32]* %arrayidx95, i32 0, i64 %idxprom94
  %66 = load i32* %arrayidx96, align 4
  %tobool97 = icmp ne i32 %66, 0
  br i1 %tobool97, label %if.end100, label %if.then98

if.then98:                                        ; preds = %land.lhs.true92
  %67 = load i32* %score, align 4
  %sub99 = sub nsw i32 %67, 12
  store i32 %sub99, i32* %score, align 4
  store i32 1, i32* %isolated, align 4
  br label %if.end100

if.end100:                                        ; preds = %if.then98, %land.lhs.true92, %if.then85
  br label %if.end101

if.end101:                                        ; preds = %if.end100, %land.lhs.true, %sw.bb
  %68 = load i32* %pawn_file, align 4
  %idxprom102 = sext i32 %68 to i64
  %arrayidx103 = getelementptr inbounds [2 x [11 x i32]]* %pawns, i32 0, i64 0
  %arrayidx104 = getelementptr inbounds [11 x i32]* %arrayidx103, i32 0, i64 %idxprom102
  %69 = load i32* %arrayidx104, align 4
  %tobool105 = icmp ne i32 %69, 0
  br i1 %tobool105, label %if.end115, label %if.then106

if.then106:                                       ; preds = %if.end101
  %70 = load i32* %backwards, align 4
  %tobool107 = icmp ne i32 %70, 0
  br i1 %tobool107, label %if.then108, label %if.end110

if.then108:                                       ; preds = %if.then106
  %71 = load i32* %score, align 4
  %sub109 = sub nsw i32 %71, 5
  store i32 %sub109, i32* %score, align 4
  br label %if.end110

if.end110:                                        ; preds = %if.then108, %if.then106
  %72 = load i32* %isolated, align 4
  %tobool111 = icmp ne i32 %72, 0
  br i1 %tobool111, label %if.then112, label %if.end114

if.then112:                                       ; preds = %if.end110
  %73 = load i32* %score, align 4
  %sub113 = sub nsw i32 %73, 8
  store i32 %sub113, i32* %score, align 4
  br label %if.end114

if.end114:                                        ; preds = %if.then112, %if.end110
  br label %if.end115

if.end115:                                        ; preds = %if.end114, %if.end101
  %74 = load i32* %pawn_file, align 4
  %idxprom116 = sext i32 %74 to i64
  %arrayidx117 = getelementptr inbounds [2 x [11 x i32]]* %pawns, i32 0, i64 1
  %arrayidx118 = getelementptr inbounds [11 x i32]* %arrayidx117, i32 0, i64 %idxprom116
  %75 = load i32* %arrayidx118, align 4
  %cmp119 = icmp sgt i32 %75, 1
  br i1 %cmp119, label %if.then120, label %if.end127

if.then120:                                       ; preds = %if.end115
  %76 = load i32* %pawn_file, align 4
  %idxprom121 = sext i32 %76 to i64
  %arrayidx122 = getelementptr inbounds [2 x [11 x i32]]* %pawns, i32 0, i64 1
  %arrayidx123 = getelementptr inbounds [11 x i32]* %arrayidx122, i32 0, i64 %idxprom121
  %77 = load i32* %arrayidx123, align 4
  %sub124 = sub nsw i32 %77, 1
  %mul125 = mul nsw i32 8, %sub124
  %78 = load i32* %score, align 4
  %sub126 = sub nsw i32 %78, %mul125
  store i32 %sub126, i32* %score, align 4
  br label %if.end127

if.end127:                                        ; preds = %if.then120, %if.end115
  %79 = load i32* %pawn_file, align 4
  %idxprom128 = sext i32 %79 to i64
  %arrayidx129 = getelementptr inbounds [2 x [11 x i32]]* %pawns, i32 0, i64 0
  %arrayidx130 = getelementptr inbounds [11 x i32]* %arrayidx129, i32 0, i64 %idxprom128
  %80 = load i32* %arrayidx130, align 4
  %tobool131 = icmp ne i32 %80, 0
  br i1 %tobool131, label %if.end174, label %land.lhs.true132

land.lhs.true132:                                 ; preds = %if.end127
  %81 = load i32* %srank, align 4
  %82 = load i32* %pawn_file, align 4
  %sub133 = sub nsw i32 %82, 1
  %idxprom134 = sext i32 %sub133 to i64
  %arrayidx135 = getelementptr inbounds [11 x i32]* %black_back_pawn, i32 0, i64 %idxprom134
  %83 = load i32* %arrayidx135, align 4
  %cmp136 = icmp sge i32 %81, %83
  br i1 %cmp136, label %land.lhs.true137, label %if.end174

land.lhs.true137:                                 ; preds = %land.lhs.true132
  %84 = load i32* %srank, align 4
  %85 = load i32* %pawn_file, align 4
  %add138 = add nsw i32 %85, 1
  %idxprom139 = sext i32 %add138 to i64
  %arrayidx140 = getelementptr inbounds [11 x i32]* %black_back_pawn, i32 0, i64 %idxprom139
  %86 = load i32* %arrayidx140, align 4
  %cmp141 = icmp sge i32 %84, %86
  br i1 %cmp141, label %if.then142, label %if.end174

if.then142:                                       ; preds = %land.lhs.true137
  %87 = load i32* %i, align 4
  %idxprom143 = sext i32 %87 to i64
  %arrayidx144 = getelementptr inbounds [144 x i32]* @Xrank, i32 0, i64 %idxprom143
  %88 = load i32* %arrayidx144, align 4
  %sub145 = sub nsw i32 %88, 2
  %mul146 = mul nsw i32 10, %sub145
  %add147 = add nsw i32 25, %mul146
  %89 = load i32* %score, align 4
  %add148 = add nsw i32 %89, %add147
  store i32 %add148, i32* %score, align 4
  %90 = load i32* %i, align 4
  %idxprom149 = sext i32 %90 to i64
  %arrayidx150 = getelementptr inbounds [144 x i32]* @Xrank, i32 0, i64 %idxprom149
  %91 = load i32* %arrayidx150, align 4
  %cmp151 = icmp eq i32 %91, 7
  br i1 %cmp151, label %if.then152, label %if.end154

if.then152:                                       ; preds = %if.then142
  %92 = load i32* %score, align 4
  %add153 = add nsw i32 %92, 50
  store i32 %add153, i32* %score, align 4
  br label %if.end154

if.end154:                                        ; preds = %if.then152, %if.then142
  %93 = load i32* %wpassp, align 4
  %inc155 = add nsw i32 %93, 1
  store i32 %inc155, i32* %wpassp, align 4
  %94 = load i32* %i, align 4
  %idxprom156 = sext i32 %94 to i64
  %arrayidx157 = getelementptr inbounds [144 x i32]* @Xfile, i32 0, i64 %idxprom156
  %95 = load i32* %arrayidx157, align 4
  %cmp158 = icmp eq i32 %95, 1
  br i1 %cmp158, label %if.then162, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.end154
  %96 = load i32* %i, align 4
  %idxprom159 = sext i32 %96 to i64
  %arrayidx160 = getelementptr inbounds [144 x i32]* @Xfile, i32 0, i64 %idxprom159
  %97 = load i32* %arrayidx160, align 4
  %cmp161 = icmp eq i32 %97, 8
  br i1 %cmp161, label %if.then162, label %if.end169

if.then162:                                       ; preds = %lor.lhs.false, %if.end154
  %98 = load i32* %i, align 4
  %idxprom163 = sext i32 %98 to i64
  %arrayidx164 = getelementptr inbounds [144 x i32]* @Xrank, i32 0, i64 %idxprom163
  %99 = load i32* %arrayidx164, align 4
  %sub165 = sub nsw i32 %99, 2
  %mul166 = mul nsw i32 2, %sub165
  %add167 = add nsw i32 4, %mul166
  %100 = load i32* %score, align 4
  %add168 = add nsw i32 %100, %add167
  store i32 %add168, i32* %score, align 4
  br label %if.end169

if.end169:                                        ; preds = %if.then162, %lor.lhs.false
  %101 = load i32* %isolated, align 4
  %tobool170 = icmp ne i32 %101, 0
  br i1 %tobool170, label %if.end173, label %if.then171

if.then171:                                       ; preds = %if.end169
  %102 = load i32* %score, align 4
  %add172 = add nsw i32 %102, 24
  store i32 %add172, i32* %score, align 4
  br label %if.end173

if.end173:                                        ; preds = %if.then171, %if.end169
  br label %if.end174

if.end174:                                        ; preds = %if.end173, %land.lhs.true137, %land.lhs.true132, %if.end127
  %103 = load i32* %pawn_file, align 4
  %sub175 = sub nsw i32 %103, 1
  %idxprom176 = sext i32 %sub175 to i64
  %arrayidx177 = getelementptr inbounds [2 x [11 x i32]]* %pawns, i32 0, i64 1
  %arrayidx178 = getelementptr inbounds [11 x i32]* %arrayidx177, i32 0, i64 %idxprom176
  %104 = load i32* %arrayidx178, align 4
  %tobool179 = icmp ne i32 %104, 0
  br i1 %tobool179, label %if.end182, label %if.then180

if.then180:                                       ; preds = %if.end174
  %105 = load i32* %score, align 4
  %sub181 = sub nsw i32 %105, 5
  store i32 %sub181, i32* %score, align 4
  br label %if.end182

if.end182:                                        ; preds = %if.then180, %if.end174
  br label %sw.epilog

sw.bb183:                                         ; preds = %if.end64
  %106 = load i32* %bp, align 4
  %inc184 = add nsw i32 %106, 1
  store i32 %inc184, i32* %bp, align 4
  %107 = load i32* %bpawns, align 4
  %inc185 = add nsw i32 %107, 1
  store i32 %inc185, i32* %bpawns, align 4
  %108 = load i32* %i, align 4
  %idxprom186 = sext i32 %108 to i64
  %bitcast530 = bitcast [144 x i32]* @lcentral to i8*
  %bitcast531 = bitcast [144 x i32]* getelementptr inbounds ([144 x i32]* @lcentral, i32 1) to i8*
  %arrayidx187 = getelementptr inbounds [144 x i32]* @lcentral, i32 0, i64 %idxprom186
  %109 = load i32* %arrayidx187, align 4
  %110 = load i32* %score, align 4
  %sub188 = sub nsw i32 %110, %109
  store i32 %sub188, i32* %score, align 4
  %111 = load i32* %i, align 4
  %call189 = call i32 @l_pawn_mobility(i32 %111)
  %shl190 = shl i32 %call189, 2
  %112 = load i32* %score, align 4
  %sub191 = sub nsw i32 %112, %shl190
  store i32 %sub191, i32* %score, align 4
  %113 = load i32* %i, align 4
  %idxprom192 = sext i32 %113 to i64
  %arrayidx193 = getelementptr inbounds [144 x i32]* @Xrank, i32 0, i64 %idxprom192
  %114 = load i32* %arrayidx193, align 4
  %sub194 = sub nsw i32 7, %114
  %mul195 = mul nsw i32 %sub194, 8
  %115 = load i32* %score, align 4
  %sub196 = sub nsw i32 %115, %mul195
  store i32 %sub196, i32* %score, align 4
  store i32 0, i32* %isolated, align 4
  store i32 0, i32* %backwards, align 4
  %116 = load i32* %pawn_file, align 4
  %add197 = add nsw i32 %116, 1
  %idxprom198 = sext i32 %add197 to i64
  %arrayidx199 = getelementptr inbounds [11 x i32]* %black_back_pawn, i32 0, i64 %idxprom198
  %117 = load i32* %arrayidx199, align 4
  %118 = load i32* %srank, align 4
  %cmp200 = icmp slt i32 %117, %118
  br i1 %cmp200, label %land.lhs.true201, label %if.end222

land.lhs.true201:                                 ; preds = %sw.bb183
  %119 = load i32* %pawn_file, align 4
  %sub202 = sub nsw i32 %119, 1
  %idxprom203 = sext i32 %sub202 to i64
  %arrayidx204 = getelementptr inbounds [11 x i32]* %black_back_pawn, i32 0, i64 %idxprom203
  %120 = load i32* %arrayidx204, align 4
  %121 = load i32* %srank, align 4
  %cmp205 = icmp slt i32 %120, %121
  br i1 %cmp205, label %if.then206, label %if.end222

if.then206:                                       ; preds = %land.lhs.true201
  %122 = load i32* %score, align 4
  %add207 = add nsw i32 %122, 8
  store i32 %add207, i32* %score, align 4
  store i32 1, i32* %backwards, align 4
  %123 = load i32* %pawn_file, align 4
  %add208 = add nsw i32 %123, 1
  %idxprom209 = sext i32 %add208 to i64
  %arrayidx210 = getelementptr inbounds [2 x [11 x i32]]* %pawns, i32 0, i64 0
  %arrayidx211 = getelementptr inbounds [11 x i32]* %arrayidx210, i32 0, i64 %idxprom209
  %124 = load i32* %arrayidx211, align 4
  %tobool212 = icmp ne i32 %124, 0
  br i1 %tobool212, label %if.end221, label %land.lhs.true213

land.lhs.true213:                                 ; preds = %if.then206
  %125 = load i32* %pawn_file, align 4
  %sub214 = sub nsw i32 %125, 1
  %idxprom215 = sext i32 %sub214 to i64
  %arrayidx216 = getelementptr inbounds [2 x [11 x i32]]* %pawns, i32 0, i64 0
  %arrayidx217 = getelementptr inbounds [11 x i32]* %arrayidx216, i32 0, i64 %idxprom215
  %126 = load i32* %arrayidx217, align 4
  %tobool218 = icmp ne i32 %126, 0
  br i1 %tobool218, label %if.end221, label %if.then219

if.then219:                                       ; preds = %land.lhs.true213
  %127 = load i32* %score, align 4
  %add220 = add nsw i32 %127, 12
  store i32 %add220, i32* %score, align 4
  store i32 1, i32* %isolated, align 4
  br label %if.end221

if.end221:                                        ; preds = %if.then219, %land.lhs.true213, %if.then206
  br label %if.end222

if.end222:                                        ; preds = %if.end221, %land.lhs.true201, %sw.bb183
  %128 = load i32* %pawn_file, align 4
  %idxprom223 = sext i32 %128 to i64
  %arrayidx224 = getelementptr inbounds [2 x [11 x i32]]* %pawns, i32 0, i64 1
  %arrayidx225 = getelementptr inbounds [11 x i32]* %arrayidx224, i32 0, i64 %idxprom223
  %129 = load i32* %arrayidx225, align 4
  %tobool226 = icmp ne i32 %129, 0
  br i1 %tobool226, label %if.end236, label %if.then227

if.then227:                                       ; preds = %if.end222
  %130 = load i32* %backwards, align 4
  %tobool228 = icmp ne i32 %130, 0
  br i1 %tobool228, label %if.then229, label %if.end231

if.then229:                                       ; preds = %if.then227
  %131 = load i32* %score, align 4
  %add230 = add nsw i32 %131, 5
  store i32 %add230, i32* %score, align 4
  br label %if.end231

if.end231:                                        ; preds = %if.then229, %if.then227
  %132 = load i32* %isolated, align 4
  %tobool232 = icmp ne i32 %132, 0
  br i1 %tobool232, label %if.then233, label %if.end235

if.then233:                                       ; preds = %if.end231
  %133 = load i32* %score, align 4
  %add234 = add nsw i32 %133, 8
  store i32 %add234, i32* %score, align 4
  br label %if.end235

if.end235:                                        ; preds = %if.then233, %if.end231
  br label %if.end236

if.end236:                                        ; preds = %if.end235, %if.end222
  %134 = load i32* %pawn_file, align 4
  %idxprom237 = sext i32 %134 to i64
  %arrayidx238 = getelementptr inbounds [2 x [11 x i32]]* %pawns, i32 0, i64 0
  %arrayidx239 = getelementptr inbounds [11 x i32]* %arrayidx238, i32 0, i64 %idxprom237
  %135 = load i32* %arrayidx239, align 4
  %cmp240 = icmp sgt i32 %135, 1
  br i1 %cmp240, label %if.then241, label %if.end248

if.then241:                                       ; preds = %if.end236
  %136 = load i32* %pawn_file, align 4
  %idxprom242 = sext i32 %136 to i64
  %arrayidx243 = getelementptr inbounds [2 x [11 x i32]]* %pawns, i32 0, i64 0
  %arrayidx244 = getelementptr inbounds [11 x i32]* %arrayidx243, i32 0, i64 %idxprom242
  %137 = load i32* %arrayidx244, align 4
  %sub245 = sub nsw i32 %137, 1
  %mul246 = mul nsw i32 8, %sub245
  %138 = load i32* %score, align 4
  %add247 = add nsw i32 %138, %mul246
  store i32 %add247, i32* %score, align 4
  br label %if.end248

if.end248:                                        ; preds = %if.then241, %if.end236
  %139 = load i32* %pawn_file, align 4
  %idxprom249 = sext i32 %139 to i64
  %arrayidx250 = getelementptr inbounds [2 x [11 x i32]]* %pawns, i32 0, i64 1
  %arrayidx251 = getelementptr inbounds [11 x i32]* %arrayidx250, i32 0, i64 %idxprom249
  %140 = load i32* %arrayidx251, align 4
  %tobool252 = icmp ne i32 %140, 0
  br i1 %tobool252, label %if.end296, label %land.lhs.true253

land.lhs.true253:                                 ; preds = %if.end248
  %141 = load i32* %srank, align 4
  %142 = load i32* %pawn_file, align 4
  %sub254 = sub nsw i32 %142, 1
  %idxprom255 = sext i32 %sub254 to i64
  %arrayidx256 = getelementptr inbounds [11 x i32]* %white_back_pawn, i32 0, i64 %idxprom255
  %143 = load i32* %arrayidx256, align 4
  %cmp257 = icmp sle i32 %141, %143
  br i1 %cmp257, label %land.lhs.true258, label %if.end296

land.lhs.true258:                                 ; preds = %land.lhs.true253
  %144 = load i32* %srank, align 4
  %145 = load i32* %pawn_file, align 4
  %add259 = add nsw i32 %145, 1
  %idxprom260 = sext i32 %add259 to i64
  %arrayidx261 = getelementptr inbounds [11 x i32]* %white_back_pawn, i32 0, i64 %idxprom260
  %146 = load i32* %arrayidx261, align 4
  %cmp262 = icmp sle i32 %144, %146
  br i1 %cmp262, label %if.then263, label %if.end296

if.then263:                                       ; preds = %land.lhs.true258
  %147 = load i32* %i, align 4
  %idxprom264 = sext i32 %147 to i64
  %arrayidx265 = getelementptr inbounds [144 x i32]* @Xrank, i32 0, i64 %idxprom264
  %148 = load i32* %arrayidx265, align 4
  %sub266 = sub nsw i32 7, %148
  %mul267 = mul nsw i32 10, %sub266
  %add268 = add nsw i32 25, %mul267
  %149 = load i32* %score, align 4
  %sub269 = sub nsw i32 %149, %add268
  store i32 %sub269, i32* %score, align 4
  %150 = load i32* %i, align 4
  %idxprom270 = sext i32 %150 to i64
  %arrayidx271 = getelementptr inbounds [144 x i32]* @Xrank, i32 0, i64 %idxprom270
  %151 = load i32* %arrayidx271, align 4
  %cmp272 = icmp eq i32 %151, 2
  br i1 %cmp272, label %if.then273, label %if.end275

if.then273:                                       ; preds = %if.then263
  %152 = load i32* %score, align 4
  %sub274 = sub nsw i32 %152, 50
  store i32 %sub274, i32* %score, align 4
  br label %if.end275

if.end275:                                        ; preds = %if.then273, %if.then263
  %153 = load i32* %bpassp, align 4
  %inc276 = add nsw i32 %153, 1
  store i32 %inc276, i32* %bpassp, align 4
  %154 = load i32* %i, align 4
  %idxprom277 = sext i32 %154 to i64
  %arrayidx278 = getelementptr inbounds [144 x i32]* @Xfile, i32 0, i64 %idxprom277
  %155 = load i32* %arrayidx278, align 4
  %cmp279 = icmp eq i32 %155, 1
  br i1 %cmp279, label %if.then284, label %lor.lhs.false280

lor.lhs.false280:                                 ; preds = %if.end275
  %156 = load i32* %i, align 4
  %idxprom281 = sext i32 %156 to i64
  %arrayidx282 = getelementptr inbounds [144 x i32]* @Xfile, i32 0, i64 %idxprom281
  %157 = load i32* %arrayidx282, align 4
  %cmp283 = icmp eq i32 %157, 8
  br i1 %cmp283, label %if.then284, label %if.end291

if.then284:                                       ; preds = %lor.lhs.false280, %if.end275
  %158 = load i32* %i, align 4
  %idxprom285 = sext i32 %158 to i64
  %arrayidx286 = getelementptr inbounds [144 x i32]* @Xrank, i32 0, i64 %idxprom285
  %159 = load i32* %arrayidx286, align 4
  %sub287 = sub nsw i32 7, %159
  %mul288 = mul nsw i32 2, %sub287
  %add289 = add nsw i32 4, %mul288
  %160 = load i32* %score, align 4
  %sub290 = sub nsw i32 %160, %add289
  store i32 %sub290, i32* %score, align 4
  br label %if.end291

if.end291:                                        ; preds = %if.then284, %lor.lhs.false280
  %161 = load i32* %isolated, align 4
  %tobool292 = icmp ne i32 %161, 0
  br i1 %tobool292, label %if.end295, label %if.then293

if.then293:                                       ; preds = %if.end291
  %162 = load i32* %score, align 4
  %sub294 = sub nsw i32 %162, 24
  store i32 %sub294, i32* %score, align 4
  br label %if.end295

if.end295:                                        ; preds = %if.then293, %if.end291
  br label %if.end296

if.end296:                                        ; preds = %if.end295, %land.lhs.true258, %land.lhs.true253, %if.end248
  %163 = load i32* %pawn_file, align 4
  %sub297 = sub nsw i32 %163, 1
  %idxprom298 = sext i32 %sub297 to i64
  %arrayidx299 = getelementptr inbounds [2 x [11 x i32]]* %pawns, i32 0, i64 0
  %arrayidx300 = getelementptr inbounds [11 x i32]* %arrayidx299, i32 0, i64 %idxprom298
  %164 = load i32* %arrayidx300, align 4
  %tobool301 = icmp ne i32 %164, 0
  br i1 %tobool301, label %if.end304, label %if.then302

if.then302:                                       ; preds = %if.end296
  %165 = load i32* %score, align 4
  %add303 = add nsw i32 %165, 5
  store i32 %add303, i32* %score, align 4
  br label %if.end304

if.end304:                                        ; preds = %if.then302, %if.end296
  br label %sw.epilog

sw.bb305:                                         ; preds = %if.end64
  %166 = load i32* %wp, align 4
  %inc306 = add nsw i32 %166, 1
  store i32 %inc306, i32* %wp, align 4
  %167 = load i32* %i, align 4
  %call307 = call i32 @l_rook_mobility(i32 %167)
  %shl308 = shl i32 %call307, 2
  %168 = load i32* %score, align 4
  %add309 = add nsw i32 %168, %shl308
  store i32 %add309, i32* %score, align 4
  %169 = load i32* %i, align 4
  %idxprom310 = sext i32 %169 to i64
  %bitcast532 = bitcast [144 x i32]* @lcentral to i8*
  %bitcast533 = bitcast [144 x i32]* getelementptr inbounds ([144 x i32]* @lcentral, i32 1) to i8*
  %arrayidx311 = getelementptr inbounds [144 x i32]* @lcentral, i32 0, i64 %idxprom310
  %170 = load i32* %arrayidx311, align 4
  %171 = load i32* %score, align 4
  %add312 = add nsw i32 %171, %170
  store i32 %add312, i32* %score, align 4
  br label %sw.epilog

sw.bb313:                                         ; preds = %if.end64
  %172 = load i32* %bp, align 4
  %inc314 = add nsw i32 %172, 1
  store i32 %inc314, i32* %bp, align 4
  %173 = load i32* %i, align 4
  %call315 = call i32 @l_rook_mobility(i32 %173)
  %shl316 = shl i32 %call315, 2
  %174 = load i32* %score, align 4
  %sub317 = sub nsw i32 %174, %shl316
  store i32 %sub317, i32* %score, align 4
  %175 = load i32* %i, align 4
  %idxprom318 = sext i32 %175 to i64
  %bitcast534 = bitcast [144 x i32]* @lcentral to i8*
  %bitcast535 = bitcast [144 x i32]* getelementptr inbounds ([144 x i32]* @lcentral, i32 1) to i8*
  %arrayidx319 = getelementptr inbounds [144 x i32]* @lcentral, i32 0, i64 %idxprom318
  %176 = load i32* %arrayidx319, align 4
  %177 = load i32* %score, align 4
  %sub320 = sub nsw i32 %177, %176
  store i32 %sub320, i32* %score, align 4
  br label %sw.epilog

sw.bb321:                                         ; preds = %if.end64
  %178 = load i32* %wp, align 4
  %inc322 = add nsw i32 %178, 1
  store i32 %inc322, i32* %wp, align 4
  %179 = load i32* %i, align 4
  %call323 = call i32 @l_bishop_mobility(i32 %179)
  %shl324 = shl i32 %call323, 2
  %180 = load i32* %score, align 4
  %add325 = add nsw i32 %180, %shl324
  store i32 %add325, i32* %score, align 4
  %181 = load i32* %i, align 4
  %idxprom326 = sext i32 %181 to i64
  %bitcast536 = bitcast [144 x i32]* @lcentral to i8*
  %bitcast537 = bitcast [144 x i32]* getelementptr inbounds ([144 x i32]* @lcentral, i32 1) to i8*
  %arrayidx327 = getelementptr inbounds [144 x i32]* @lcentral, i32 0, i64 %idxprom326
  %182 = load i32* %arrayidx327, align 4
  %183 = load i32* %score, align 4
  %add328 = add nsw i32 %183, %182
  store i32 %add328, i32* %score, align 4
  br label %sw.epilog

sw.bb329:                                         ; preds = %if.end64
  %184 = load i32* %bp, align 4
  %inc330 = add nsw i32 %184, 1
  store i32 %inc330, i32* %bp, align 4
  %185 = load i32* %i, align 4
  %call331 = call i32 @l_bishop_mobility(i32 %185)
  %shl332 = shl i32 %call331, 2
  %186 = load i32* %score, align 4
  %sub333 = sub nsw i32 %186, %shl332
  store i32 %sub333, i32* %score, align 4
  %187 = load i32* %i, align 4
  %idxprom334 = sext i32 %187 to i64
  %bitcast538 = bitcast [144 x i32]* @lcentral to i8*
  %bitcast539 = bitcast [144 x i32]* getelementptr inbounds ([144 x i32]* @lcentral, i32 1) to i8*
  %arrayidx335 = getelementptr inbounds [144 x i32]* @lcentral, i32 0, i64 %idxprom334
  %188 = load i32* %arrayidx335, align 4
  %189 = load i32* %score, align 4
  %sub336 = sub nsw i32 %189, %188
  store i32 %sub336, i32* %score, align 4
  br label %sw.epilog

sw.bb337:                                         ; preds = %if.end64
  %190 = load i32* %wp, align 4
  %inc338 = add nsw i32 %190, 1
  store i32 %inc338, i32* %wp, align 4
  %191 = load i32* %i, align 4
  %idxprom339 = sext i32 %191 to i64
  %bitcast540 = bitcast [144 x i32]* @lcentral to i8*
  %bitcast541 = bitcast [144 x i32]* getelementptr inbounds ([144 x i32]* @lcentral, i32 1) to i8*
  %arrayidx340 = getelementptr inbounds [144 x i32]* @lcentral, i32 0, i64 %idxprom339
  %192 = load i32* %arrayidx340, align 4
  %shl341 = shl i32 %192, 1
  %193 = load i32* %score, align 4
  %add342 = add nsw i32 %193, %shl341
  store i32 %add342, i32* %score, align 4
  %194 = load i32* %i, align 4
  %call343 = call i32 @l_knight_mobility(i32 %194)
  %shl344 = shl i32 %call343, 2
  %195 = load i32* %score, align 4
  %add345 = add nsw i32 %195, %shl344
  store i32 %add345, i32* %score, align 4
  br label %sw.epilog

sw.bb346:                                         ; preds = %if.end64
  %196 = load i32* %bp, align 4
  %inc347 = add nsw i32 %196, 1
  store i32 %inc347, i32* %bp, align 4
  %197 = load i32* %i, align 4
  %idxprom348 = sext i32 %197 to i64
  %bitcast542 = bitcast [144 x i32]* @lcentral to i8*
  %bitcast543 = bitcast [144 x i32]* getelementptr inbounds ([144 x i32]* @lcentral, i32 1) to i8*
  %arrayidx349 = getelementptr inbounds [144 x i32]* @lcentral, i32 0, i64 %idxprom348
  %198 = load i32* %arrayidx349, align 4
  %shl350 = shl i32 %198, 1
  %199 = load i32* %score, align 4
  %sub351 = sub nsw i32 %199, %shl350
  store i32 %sub351, i32* %score, align 4
  %200 = load i32* %i, align 4
  %call352 = call i32 @l_knight_mobility(i32 %200)
  %shl353 = shl i32 %call352, 2
  %201 = load i32* %score, align 4
  %sub354 = sub nsw i32 %201, %shl353
  store i32 %sub354, i32* %score, align 4
  br label %sw.epilog

sw.bb355:                                         ; preds = %if.end64
  %202 = load i32* %wp, align 4
  %inc356 = add nsw i32 %202, 1
  store i32 %inc356, i32* %wp, align 4
  %203 = load i32* %i, align 4
  %call357 = call i32 @l_bishop_mobility(i32 %203)
  %shl358 = shl i32 %call357, 1
  %204 = load i32* %score, align 4
  %add359 = add nsw i32 %204, %shl358
  store i32 %add359, i32* %score, align 4
  %205 = load i32* %i, align 4
  %call360 = call i32 @l_rook_mobility(i32 %205)
  %shl361 = shl i32 %call360, 1
  %206 = load i32* %score, align 4
  %add362 = add nsw i32 %206, %shl361
  store i32 %add362, i32* %score, align 4
  %207 = load i32* %i, align 4
  %idxprom363 = sext i32 %207 to i64
  %bitcast544 = bitcast [144 x i32]* @lcentral to i8*
  %bitcast545 = bitcast [144 x i32]* getelementptr inbounds ([144 x i32]* @lcentral, i32 1) to i8*
  %arrayidx364 = getelementptr inbounds [144 x i32]* @lcentral, i32 0, i64 %idxprom363
  %208 = load i32* %arrayidx364, align 4
  %209 = load i32* %score, align 4
  %add365 = add nsw i32 %209, %208
  store i32 %add365, i32* %score, align 4
  br label %sw.epilog

sw.bb366:                                         ; preds = %if.end64
  %210 = load i32* %bp, align 4
  %inc367 = add nsw i32 %210, 1
  store i32 %inc367, i32* %bp, align 4
  %211 = load i32* %i, align 4
  %call368 = call i32 @l_bishop_mobility(i32 %211)
  %shl369 = shl i32 %call368, 1
  %212 = load i32* %score, align 4
  %sub370 = sub nsw i32 %212, %shl369
  store i32 %sub370, i32* %score, align 4
  %213 = load i32* %i, align 4
  %call371 = call i32 @l_rook_mobility(i32 %213)
  %shl372 = shl i32 %call371, 1
  %214 = load i32* %score, align 4
  %sub373 = sub nsw i32 %214, %shl372
  store i32 %sub373, i32* %score, align 4
  %215 = load i32* %i, align 4
  %idxprom374 = sext i32 %215 to i64
  %bitcast546 = bitcast [144 x i32]* @lcentral to i8*
  %bitcast547 = bitcast [144 x i32]* getelementptr inbounds ([144 x i32]* @lcentral, i32 1) to i8*
  %arrayidx375 = getelementptr inbounds [144 x i32]* @lcentral, i32 0, i64 %idxprom374
  %216 = load i32* %arrayidx375, align 4
  %217 = load i32* %score, align 4
  %sub376 = sub nsw i32 %217, %216
  store i32 %sub376, i32* %score, align 4
  br label %sw.epilog

sw.bb377:                                         ; preds = %if.end64
  %218 = load i32* %i, align 4
  %idxprom378 = sext i32 %218 to i64
  %bitcast548 = bitcast [144 x i32]* @lcentral to i8*
  %bitcast549 = bitcast [144 x i32]* getelementptr inbounds ([144 x i32]* @lcentral, i32 1) to i8*
  %arrayidx379 = getelementptr inbounds [144 x i32]* @lcentral, i32 0, i64 %idxprom378
  %219 = load i32* %arrayidx379, align 4
  %shl380 = shl i32 %219, 1
  store i32 %shl380, i32* %wks, align 4
  %220 = load i32* %i, align 4
  %call381 = call i32 @l_king_mobility(i32 %220)
  %221 = load i32* %score, align 4
  %add382 = add nsw i32 %221, %call381
  store i32 %add382, i32* %score, align 4
  br label %sw.epilog

sw.bb383:                                         ; preds = %if.end64
  %222 = load i32* %i, align 4
  %idxprom384 = sext i32 %222 to i64
  %bitcast550 = bitcast [144 x i32]* @lcentral to i8*
  %bitcast551 = bitcast [144 x i32]* getelementptr inbounds ([144 x i32]* @lcentral, i32 1) to i8*
  %arrayidx385 = getelementptr inbounds [144 x i32]* @lcentral, i32 0, i64 %idxprom384
  %223 = load i32* %arrayidx385, align 4
  %shl386 = shl i32 %223, 1
  store i32 %shl386, i32* %bks, align 4
  %224 = load i32* %i, align 4
  %call387 = call i32 @l_king_mobility(i32 %224)
  %225 = load i32* %score, align 4
  %sub388 = sub nsw i32 %225, %call387
  store i32 %sub388, i32* %score, align 4
  br label %sw.epilog

sw.epilog:                                        ; preds = %sw.bb383, %sw.bb377, %sw.bb366, %sw.bb355, %sw.bb346, %sw.bb337, %sw.bb329, %sw.bb321, %sw.bb313, %sw.bb305, %if.end304, %if.end182, %if.end64
  br label %for.inc389

for.inc389:                                       ; preds = %sw.epilog, %if.then61
  %226 = load i32* %j, align 4
  %inc390 = add nsw i32 %226, 1
  store i32 %inc390, i32* %j, align 4
  br label %for.cond55

for.end391:                                       ; preds = %for.cond55
  %227 = load i32* %wp, align 4
  %228 = load i32* %bp, align 4
  %add392 = add nsw i32 %227, %228
  %cmp393 = icmp sgt i32 %add392, 10
  br i1 %cmp393, label %if.then394, label %if.end397

if.then394:                                       ; preds = %for.end391
  %229 = load i32* %wks, align 4
  %230 = load i32* %bks, align 4
  %sub395 = sub nsw i32 %229, %230
  %231 = load i32* %score, align 4
  %sub396 = sub nsw i32 %231, %sub395
  store i32 %sub396, i32* %score, align 4
  br label %if.end397

if.end397:                                        ; preds = %if.then394, %for.end391
  %232 = load i32* @Material, align 4
  %call398 = call i32 @softboundcets_abs(i32 %232) #5
  %cmp399 = icmp sle i32 %call398, 900
  br i1 %cmp399, label %if.then400, label %if.else402

if.then400:                                       ; preds = %if.end397
  %233 = load i32* @Material, align 4
  %234 = load i32* %score, align 4
  %add401 = add nsw i32 %234, %233
  store i32 %add401, i32* %score, align 4
  br label %if.end425

if.else402:                                       ; preds = %if.end397
  %235 = load i32* @Material, align 4
  %cmp403 = icmp sgt i32 %235, 0
  br i1 %cmp403, label %land.lhs.true404, label %if.else411

land.lhs.true404:                                 ; preds = %if.else402
  %236 = load i32* @comp_color, align 4
  %cmp405 = icmp eq i32 %236, 1
  br i1 %cmp405, label %land.lhs.true406, label %if.else411

land.lhs.true406:                                 ; preds = %land.lhs.true404
  %237 = load i32* %wpassp, align 4
  %tobool407 = icmp ne i32 %237, 0
  br i1 %tobool407, label %if.else411, label %if.then408

if.then408:                                       ; preds = %land.lhs.true406
  %238 = load i32* @Material, align 4
  %sub409 = sub nsw i32 1800, %238
  %239 = load i32* %score, align 4
  %add410 = add nsw i32 %239, %sub409
  store i32 %add410, i32* %score, align 4
  br label %if.end424

if.else411:                                       ; preds = %land.lhs.true406, %land.lhs.true404, %if.else402
  %240 = load i32* @Material, align 4
  %cmp412 = icmp slt i32 %240, 0
  br i1 %cmp412, label %land.lhs.true413, label %if.else421

land.lhs.true413:                                 ; preds = %if.else411
  %241 = load i32* @comp_color, align 4
  %cmp414 = icmp eq i32 %241, 0
  br i1 %cmp414, label %land.lhs.true415, label %if.else421

land.lhs.true415:                                 ; preds = %land.lhs.true413
  %242 = load i32* %bpassp, align 4
  %tobool416 = icmp ne i32 %242, 0
  br i1 %tobool416, label %if.else421, label %if.then417

if.then417:                                       ; preds = %land.lhs.true415
  %243 = load i32* @Material, align 4
  %add418 = add nsw i32 1800, %243
  %sub419 = sub nsw i32 0, %add418
  %244 = load i32* %score, align 4
  %add420 = add nsw i32 %244, %sub419
  store i32 %add420, i32* %score, align 4
  br label %if.end423

if.else421:                                       ; preds = %land.lhs.true415, %land.lhs.true413, %if.else411
  %245 = load i32* @Material, align 4
  %246 = load i32* %score, align 4
  %add422 = add nsw i32 %246, %245
  store i32 %add422, i32* %score, align 4
  br label %if.end423

if.end423:                                        ; preds = %if.else421, %if.then417
  br label %if.end424

if.end424:                                        ; preds = %if.end423, %if.then408
  br label %if.end425

if.end425:                                        ; preds = %if.end424, %if.then400
  %247 = load i32* %wpawns, align 4
  %tobool426 = icmp ne i32 %247, 0
  br i1 %tobool426, label %if.else429, label %if.then427

if.then427:                                       ; preds = %if.end425
  %248 = load i32* %score, align 4
  %add428 = add nsw i32 %248, 200
  store i32 %add428, i32* %score, align 4
  br label %if.end434

if.else429:                                       ; preds = %if.end425
  %249 = load i32* %bpawns, align 4
  %tobool430 = icmp ne i32 %249, 0
  br i1 %tobool430, label %if.end433, label %if.then431

if.then431:                                       ; preds = %if.else429
  %250 = load i32* %score, align 4
  %sub432 = sub nsw i32 %250, 200
  store i32 %sub432, i32* %score, align 4
  br label %if.end433

if.end433:                                        ; preds = %if.then431, %if.else429
  br label %if.end434

if.end434:                                        ; preds = %if.end433, %if.then427
  %251 = load i32* %wp, align 4
  %tobool435 = icmp ne i32 %251, 0
  br i1 %tobool435, label %if.else437, label %if.then436

if.then436:                                       ; preds = %if.end434
  store i32 1000000, i32* %score, align 4
  br label %if.end441

if.else437:                                       ; preds = %if.end434
  %252 = load i32* %bp, align 4
  %tobool438 = icmp ne i32 %252, 0
  br i1 %tobool438, label %if.end440, label %if.then439

if.then439:                                       ; preds = %if.else437
  store i32 -1000000, i32* %score, align 4
  br label %if.end440

if.end440:                                        ; preds = %if.then439, %if.else437
  br label %if.end441

if.end441:                                        ; preds = %if.end440, %if.then436
  %253 = load i32* %score, align 4
  call void @storeECache(i32 %253)
  %254 = load i32* @white_to_move, align 4
  %cmp442 = icmp eq i32 %254, 1
  br i1 %cmp442, label %if.then443, label %if.else444

if.then443:                                       ; preds = %if.end441
  %255 = load i32* %score, align 4
  store i32 %255, i32* %retval
  br label %return

if.else444:                                       ; preds = %if.end441
  %256 = load i32* %score, align 4
  %sub445 = sub nsw i32 0, %256
  store i32 %sub445, i32* %retval
  br label %return

return:                                           ; preds = %if.else444, %if.then443, %if.end, %if.then1
  %257 = load i32* %retval
  ret i32 %257
}

; Function Attrs: nounwind uwtable
define internal i32 @l_pawn_mobility(i32 %square) #0 {
entry:
  %square.addr = alloca i32, align 4
  %square.addr12 = bitcast i32* %square.addr to i32*
  %bitcast = bitcast i32* %square.addr to i8*
  %mtmp = getelementptr i32* %square.addr12, i32 1
  %bitcast13 = bitcast i32* %mtmp to i8*
  %m = alloca i32, align 4
  %m14 = bitcast i32* %m to i32*
  %bitcast15 = bitcast i32* %m to i8*
  %mtmp16 = getelementptr i32* %m14, i32 1
  %bitcast17 = bitcast i32* %mtmp16 to i8*
  store i32 %square, i32* %square.addr, align 4
  store i32 0, i32* %m, align 4
  %0 = load i32* %square.addr, align 4
  %idxprom = sext i32 %0 to i64
  %arrayidx = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom
  %1 = load i32* %arrayidx, align 4
  %cmp = icmp eq i32 %1, 1
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  %2 = load i32* %square.addr, align 4
  %add = add nsw i32 %2, 12
  %idxprom1 = sext i32 %add to i64
  %arrayidx2 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom1
  %3 = load i32* %arrayidx2, align 4
  %cmp3 = icmp eq i32 %3, 13
  br i1 %cmp3, label %if.then4, label %if.end

if.then4:                                         ; preds = %if.then
  %4 = load i32* %m, align 4
  %inc = add nsw i32 %4, 1
  store i32 %inc, i32* %m, align 4
  br label %if.end

if.end:                                           ; preds = %if.then4, %if.then
  br label %if.end11

if.else:                                          ; preds = %entry
  %5 = load i32* %square.addr, align 4
  %sub = sub nsw i32 %5, 12
  %idxprom5 = sext i32 %sub to i64
  %arrayidx6 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom5
  %6 = load i32* %arrayidx6, align 4
  %cmp7 = icmp eq i32 %6, 13
  br i1 %cmp7, label %if.then8, label %if.end10

if.then8:                                         ; preds = %if.else
  %7 = load i32* %m, align 4
  %inc9 = add nsw i32 %7, 1
  store i32 %inc9, i32* %m, align 4
  br label %if.end10

if.end10:                                         ; preds = %if.then8, %if.else
  br label %if.end11

if.end11:                                         ; preds = %if.end10, %if.end
  %8 = load i32* %m, align 4
  ret i32 %8
}

; Function Attrs: nounwind uwtable
define internal i32 @l_rook_mobility(i32 %square) #0 {
entry:
  %square.addr = alloca i32, align 4
  %square.addr31 = bitcast i32* %square.addr to i32*
  %bitcast = bitcast i32* %square.addr to i8*
  %mtmp = getelementptr i32* %square.addr31, i32 1
  %bitcast32 = bitcast i32* %mtmp to i8*
  %l = alloca i32, align 4
  %l33 = bitcast i32* %l to i32*
  %bitcast34 = bitcast i32* %l to i8*
  %mtmp35 = getelementptr i32* %l33, i32 1
  %bitcast36 = bitcast i32* %mtmp35 to i8*
  %m = alloca i32, align 4
  %m37 = bitcast i32* %m to i32*
  %bitcast38 = bitcast i32* %m to i8*
  %mtmp39 = getelementptr i32* %m37, i32 1
  %bitcast40 = bitcast i32* %mtmp39 to i8*
  store i32 %square, i32* %square.addr, align 4
  store i32 0, i32* %m, align 4
  %0 = load i32* %square.addr, align 4
  %sub = sub nsw i32 %0, 12
  store i32 %sub, i32* %l, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %1 = load i32* %l, align 4
  %idxprom = sext i32 %1 to i64
  %arrayidx = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom
  %2 = load i32* %arrayidx, align 4
  %cmp = icmp eq i32 %2, 13
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %3 = load i32* %m, align 4
  %inc = add nsw i32 %3, 1
  store i32 %inc, i32* %m, align 4
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %4 = load i32* %l, align 4
  %sub1 = sub nsw i32 %4, 12
  store i32 %sub1, i32* %l, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %5 = load i32* %square.addr, align 4
  %sub2 = sub nsw i32 %5, 1
  store i32 %sub2, i32* %l, align 4
  br label %for.cond3

for.cond3:                                        ; preds = %for.inc9, %for.end
  %6 = load i32* %l, align 4
  %idxprom4 = sext i32 %6 to i64
  %arrayidx5 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom4
  %7 = load i32* %arrayidx5, align 4
  %cmp6 = icmp eq i32 %7, 13
  br i1 %cmp6, label %for.body7, label %for.end11

for.body7:                                        ; preds = %for.cond3
  %8 = load i32* %m, align 4
  %inc8 = add nsw i32 %8, 1
  store i32 %inc8, i32* %m, align 4
  br label %for.inc9

for.inc9:                                         ; preds = %for.body7
  %9 = load i32* %l, align 4
  %sub10 = sub nsw i32 %9, 1
  store i32 %sub10, i32* %l, align 4
  br label %for.cond3

for.end11:                                        ; preds = %for.cond3
  %10 = load i32* %square.addr, align 4
  %add = add nsw i32 %10, 1
  store i32 %add, i32* %l, align 4
  br label %for.cond12

for.cond12:                                       ; preds = %for.inc18, %for.end11
  %11 = load i32* %l, align 4
  %idxprom13 = sext i32 %11 to i64
  %arrayidx14 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom13
  %12 = load i32* %arrayidx14, align 4
  %cmp15 = icmp eq i32 %12, 13
  br i1 %cmp15, label %for.body16, label %for.end20

for.body16:                                       ; preds = %for.cond12
  %13 = load i32* %m, align 4
  %inc17 = add nsw i32 %13, 1
  store i32 %inc17, i32* %m, align 4
  br label %for.inc18

for.inc18:                                        ; preds = %for.body16
  %14 = load i32* %l, align 4
  %add19 = add nsw i32 %14, 1
  store i32 %add19, i32* %l, align 4
  br label %for.cond12

for.end20:                                        ; preds = %for.cond12
  %15 = load i32* %square.addr, align 4
  %add21 = add nsw i32 %15, 12
  store i32 %add21, i32* %l, align 4
  br label %for.cond22

for.cond22:                                       ; preds = %for.inc28, %for.end20
  %16 = load i32* %l, align 4
  %idxprom23 = sext i32 %16 to i64
  %arrayidx24 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom23
  %17 = load i32* %arrayidx24, align 4
  %cmp25 = icmp eq i32 %17, 13
  br i1 %cmp25, label %for.body26, label %for.end30

for.body26:                                       ; preds = %for.cond22
  %18 = load i32* %m, align 4
  %inc27 = add nsw i32 %18, 1
  store i32 %inc27, i32* %m, align 4
  br label %for.inc28

for.inc28:                                        ; preds = %for.body26
  %19 = load i32* %l, align 4
  %add29 = add nsw i32 %19, 12
  store i32 %add29, i32* %l, align 4
  br label %for.cond22

for.end30:                                        ; preds = %for.cond22
  %20 = load i32* %m, align 4
  ret i32 %20
}

; Function Attrs: nounwind uwtable
define internal i32 @l_bishop_mobility(i32 %square) #0 {
entry:
  %square.addr = alloca i32, align 4
  %square.addr31 = bitcast i32* %square.addr to i32*
  %bitcast = bitcast i32* %square.addr to i8*
  %mtmp = getelementptr i32* %square.addr31, i32 1
  %bitcast32 = bitcast i32* %mtmp to i8*
  %l = alloca i32, align 4
  %l33 = bitcast i32* %l to i32*
  %bitcast34 = bitcast i32* %l to i8*
  %mtmp35 = getelementptr i32* %l33, i32 1
  %bitcast36 = bitcast i32* %mtmp35 to i8*
  %m = alloca i32, align 4
  %m37 = bitcast i32* %m to i32*
  %bitcast38 = bitcast i32* %m to i8*
  %mtmp39 = getelementptr i32* %m37, i32 1
  %bitcast40 = bitcast i32* %mtmp39 to i8*
  store i32 %square, i32* %square.addr, align 4
  store i32 0, i32* %m, align 4
  %0 = load i32* %square.addr, align 4
  %sub = sub nsw i32 %0, 13
  store i32 %sub, i32* %l, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %1 = load i32* %l, align 4
  %idxprom = sext i32 %1 to i64
  %arrayidx = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom
  %2 = load i32* %arrayidx, align 4
  %cmp = icmp eq i32 %2, 13
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %3 = load i32* %m, align 4
  %inc = add nsw i32 %3, 1
  store i32 %inc, i32* %m, align 4
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %4 = load i32* %l, align 4
  %sub1 = sub nsw i32 %4, 13
  store i32 %sub1, i32* %l, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %5 = load i32* %square.addr, align 4
  %sub2 = sub nsw i32 %5, 11
  store i32 %sub2, i32* %l, align 4
  br label %for.cond3

for.cond3:                                        ; preds = %for.inc9, %for.end
  %6 = load i32* %l, align 4
  %idxprom4 = sext i32 %6 to i64
  %arrayidx5 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom4
  %7 = load i32* %arrayidx5, align 4
  %cmp6 = icmp eq i32 %7, 13
  br i1 %cmp6, label %for.body7, label %for.end11

for.body7:                                        ; preds = %for.cond3
  %8 = load i32* %m, align 4
  %inc8 = add nsw i32 %8, 1
  store i32 %inc8, i32* %m, align 4
  br label %for.inc9

for.inc9:                                         ; preds = %for.body7
  %9 = load i32* %l, align 4
  %sub10 = sub nsw i32 %9, 11
  store i32 %sub10, i32* %l, align 4
  br label %for.cond3

for.end11:                                        ; preds = %for.cond3
  %10 = load i32* %square.addr, align 4
  %add = add nsw i32 %10, 11
  store i32 %add, i32* %l, align 4
  br label %for.cond12

for.cond12:                                       ; preds = %for.inc18, %for.end11
  %11 = load i32* %l, align 4
  %idxprom13 = sext i32 %11 to i64
  %arrayidx14 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom13
  %12 = load i32* %arrayidx14, align 4
  %cmp15 = icmp eq i32 %12, 13
  br i1 %cmp15, label %for.body16, label %for.end20

for.body16:                                       ; preds = %for.cond12
  %13 = load i32* %m, align 4
  %inc17 = add nsw i32 %13, 1
  store i32 %inc17, i32* %m, align 4
  br label %for.inc18

for.inc18:                                        ; preds = %for.body16
  %14 = load i32* %l, align 4
  %add19 = add nsw i32 %14, 11
  store i32 %add19, i32* %l, align 4
  br label %for.cond12

for.end20:                                        ; preds = %for.cond12
  %15 = load i32* %square.addr, align 4
  %add21 = add nsw i32 %15, 13
  store i32 %add21, i32* %l, align 4
  br label %for.cond22

for.cond22:                                       ; preds = %for.inc28, %for.end20
  %16 = load i32* %l, align 4
  %idxprom23 = sext i32 %16 to i64
  %arrayidx24 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom23
  %17 = load i32* %arrayidx24, align 4
  %cmp25 = icmp eq i32 %17, 13
  br i1 %cmp25, label %for.body26, label %for.end30

for.body26:                                       ; preds = %for.cond22
  %18 = load i32* %m, align 4
  %inc27 = add nsw i32 %18, 1
  store i32 %inc27, i32* %m, align 4
  br label %for.inc28

for.inc28:                                        ; preds = %for.body26
  %19 = load i32* %l, align 4
  %add29 = add nsw i32 %19, 13
  store i32 %add29, i32* %l, align 4
  br label %for.cond22

for.end30:                                        ; preds = %for.cond22
  %20 = load i32* %m, align 4
  ret i32 %20
}

; Function Attrs: nounwind uwtable
define internal i32 @l_knight_mobility(i32 %square) #0 {
entry:
  %square.addr = alloca i32, align 4
  %square.addr5 = bitcast i32* %square.addr to i32*
  %bitcast = bitcast i32* %square.addr to i8*
  %mtmp = getelementptr i32* %square.addr5, i32 1
  %bitcast6 = bitcast i32* %mtmp to i8*
  %d = alloca i32, align 4
  %d7 = bitcast i32* %d to i32*
  %bitcast8 = bitcast i32* %d to i8*
  %mtmp9 = getelementptr i32* %d7, i32 1
  %bitcast10 = bitcast i32* %mtmp9 to i8*
  %m = alloca i32, align 4
  %m11 = bitcast i32* %m to i32*
  %bitcast12 = bitcast i32* %m to i8*
  %mtmp13 = getelementptr i32* %m11, i32 1
  %bitcast14 = bitcast i32* %mtmp13 to i8*
  store i32 %square, i32* %square.addr, align 4
  store i32 0, i32* %m, align 4
  store i32 0, i32* %d, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32* %d, align 4
  %cmp = icmp slt i32 %0, 8
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %1 = load i32* %square.addr, align 4
  %2 = load i32* %d, align 4
  %idxprom = sext i32 %2 to i64
  %bitcast15 = bitcast [8 x i32]* @l_knight_mobility.knight_o to i8*
  %bitcast16 = bitcast [8 x i32]* getelementptr inbounds ([8 x i32]* @l_knight_mobility.knight_o, i32 1) to i8*
  %arrayidx = getelementptr inbounds [8 x i32]* @l_knight_mobility.knight_o, i32 0, i64 %idxprom
  %3 = load i32* %arrayidx, align 4
  %add = add nsw i32 %1, %3
  %idxprom1 = sext i32 %add to i64
  %arrayidx2 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom1
  %4 = load i32* %arrayidx2, align 4
  %cmp3 = icmp eq i32 %4, 13
  br i1 %cmp3, label %if.then, label %if.end

if.then:                                          ; preds = %for.body
  %5 = load i32* %m, align 4
  %inc = add nsw i32 %5, 1
  store i32 %inc, i32* %m, align 4
  br label %if.end

if.end:                                           ; preds = %if.then, %for.body
  br label %for.inc

for.inc:                                          ; preds = %if.end
  %6 = load i32* %d, align 4
  %inc4 = add nsw i32 %6, 1
  store i32 %inc4, i32* %d, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %7 = load i32* %m, align 4
  ret i32 %7
}

; Function Attrs: nounwind uwtable
define internal i32 @l_king_mobility(i32 %square) #0 {
entry:
  %square.addr = alloca i32, align 4
  %square.addr5 = bitcast i32* %square.addr to i32*
  %bitcast = bitcast i32* %square.addr to i8*
  %mtmp = getelementptr i32* %square.addr5, i32 1
  %bitcast6 = bitcast i32* %mtmp to i8*
  %d = alloca i32, align 4
  %d7 = bitcast i32* %d to i32*
  %bitcast8 = bitcast i32* %d to i8*
  %mtmp9 = getelementptr i32* %d7, i32 1
  %bitcast10 = bitcast i32* %mtmp9 to i8*
  %m = alloca i32, align 4
  %m11 = bitcast i32* %m to i32*
  %bitcast12 = bitcast i32* %m to i8*
  %mtmp13 = getelementptr i32* %m11, i32 1
  %bitcast14 = bitcast i32* %mtmp13 to i8*
  store i32 %square, i32* %square.addr, align 4
  store i32 0, i32* %m, align 4
  store i32 0, i32* %d, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32* %d, align 4
  %cmp = icmp slt i32 %0, 8
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %1 = load i32* %square.addr, align 4
  %2 = load i32* %d, align 4
  %idxprom = sext i32 %2 to i64
  %bitcast15 = bitcast [8 x i32]* @l_king_mobility.king_o to i8*
  %bitcast16 = bitcast [8 x i32]* getelementptr inbounds ([8 x i32]* @l_king_mobility.king_o, i32 1) to i8*
  %arrayidx = getelementptr inbounds [8 x i32]* @l_king_mobility.king_o, i32 0, i64 %idxprom
  %3 = load i32* %arrayidx, align 4
  %add = add nsw i32 %1, %3
  %idxprom1 = sext i32 %add to i64
  %arrayidx2 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom1
  %4 = load i32* %arrayidx2, align 4
  %cmp3 = icmp eq i32 %4, 13
  br i1 %cmp3, label %if.then, label %if.end

if.then:                                          ; preds = %for.body
  %5 = load i32* %m, align 4
  %inc = add nsw i32 %5, 1
  store i32 %inc, i32* %m, align 4
  br label %if.end

if.end:                                           ; preds = %if.then, %for.body
  br label %for.inc

for.inc:                                          ; preds = %if.end
  %6 = load i32* %d, align 4
  %inc4 = add nsw i32 %6, 1
  store i32 %inc4, i32* %d, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %7 = load i32* %m, align 4
  ret i32 %7
}

; Function Attrs: nounwind uwtable
define internal i32 @check_legal(%struct.move_s* %moves, i32 %m, i32 %incheck) #0 {
entry:
  %base.alloca1088 = alloca i8*
  %bound.alloca1089 = alloca i8*
  %base.alloca1083 = alloca i8*
  %bound.alloca1084 = alloca i8*
  %base.alloca1078 = alloca i8*
  %bound.alloca1079 = alloca i8*
  %base.alloca1073 = alloca i8*
  %bound.alloca1074 = alloca i8*
  %base.alloca1068 = alloca i8*
  %bound.alloca1069 = alloca i8*
  %base.alloca1063 = alloca i8*
  %bound.alloca1064 = alloca i8*
  %base.alloca1058 = alloca i8*
  %bound.alloca1059 = alloca i8*
  %base.alloca1053 = alloca i8*
  %bound.alloca1054 = alloca i8*
  %base.alloca1048 = alloca i8*
  %bound.alloca1049 = alloca i8*
  %base.alloca = alloca i8*
  %bound.alloca = alloca i8*
  %0 = call i8* @__softboundcets_load_base_shadow_stack(i32 1)
  %1 = call i8* @__softboundcets_load_bound_shadow_stack(i32 1)
  %retval = alloca i32, align 4
  %retval1016 = bitcast i32* %retval to i32*
  %bitcast = bitcast i32* %retval to i8*
  %mtmp = getelementptr i32* %retval1016, i32 1
  %bitcast1017 = bitcast i32* %mtmp to i8*
  %moves.addr = alloca %struct.move_s*, align 8
  %moves.addr1018 = bitcast %struct.move_s** %moves.addr to %struct.move_s**
  %bitcast1019 = bitcast %struct.move_s** %moves.addr to i8*
  %mtmp1020 = getelementptr %struct.move_s** %moves.addr1018, i32 1
  %bitcast1021 = bitcast %struct.move_s** %mtmp1020 to i8*
  %m.addr = alloca i32, align 4
  %m.addr1022 = bitcast i32* %m.addr to i32*
  %bitcast1023 = bitcast i32* %m.addr to i8*
  %mtmp1024 = getelementptr i32* %m.addr1022, i32 1
  %bitcast1025 = bitcast i32* %mtmp1024 to i8*
  %incheck.addr = alloca i32, align 4
  %incheck.addr1026 = bitcast i32* %incheck.addr to i32*
  %bitcast1027 = bitcast i32* %incheck.addr to i8*
  %mtmp1028 = getelementptr i32* %incheck.addr1026, i32 1
  %bitcast1029 = bitcast i32* %mtmp1028 to i8*
  %castled = alloca i32, align 4
  %castled1030 = bitcast i32* %castled to i32*
  %bitcast1031 = bitcast i32* %castled to i8*
  %mtmp1032 = getelementptr i32* %castled1030, i32 1
  %bitcast1033 = bitcast i32* %mtmp1032 to i8*
  %from = alloca i32, align 4
  %from1034 = bitcast i32* %from to i32*
  %bitcast1035 = bitcast i32* %from to i8*
  %mtmp1036 = getelementptr i32* %from1034, i32 1
  %bitcast1037 = bitcast i32* %mtmp1036 to i8*
  %target = alloca i32, align 4
  %target1038 = bitcast i32* %target to i32*
  %bitcast1039 = bitcast i32* %target to i8*
  %mtmp1040 = getelementptr i32* %target1038, i32 1
  %bitcast1041 = bitcast i32* %mtmp1040 to i8*
  %l = alloca i32, align 4
  %l1042 = bitcast i32* %l to i32*
  %bitcast1043 = bitcast i32* %l to i8*
  %mtmp1044 = getelementptr i32* %l1042, i32 1
  %bitcast1045 = bitcast i32* %mtmp1044 to i8*
  store %struct.move_s* %moves, %struct.move_s** %moves.addr, align 8
  %bitcast1092 = bitcast %struct.move_s** %moves.addr to i8*
  call void @__softboundcets_metadata_store(i8* %bitcast1092, i8* %0, i8* %1)
  store i32 %m, i32* %m.addr, align 4
  store i32 %incheck, i32* %incheck.addr, align 4
  %2 = load i32* %m.addr, align 4
  %idxprom = sext i32 %2 to i64
  %3 = load %struct.move_s** %moves.addr, align 8
  %bitcast1046 = bitcast %struct.move_s** %moves.addr to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast1046, i8** %base.alloca, i8** %bound.alloca)
  %base.load = load i8** %base.alloca
  %bound.load = load i8** %bound.alloca
  %arrayidx = getelementptr inbounds %struct.move_s* %3, i64 %idxprom
  %castled1 = getelementptr inbounds %struct.move_s* %arrayidx, i32 0, i32 4
  %4 = load i32* %castled1, align 4
  store i32 %4, i32* %castled, align 4
  %5 = load i32* %m.addr, align 4
  %idxprom2 = sext i32 %5 to i64
  %6 = load %struct.move_s** %moves.addr, align 8
  %bitcast1047 = bitcast %struct.move_s** %moves.addr to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast1047, i8** %base.alloca1048, i8** %bound.alloca1049)
  %base.load1050 = load i8** %base.alloca1048
  %bound.load1051 = load i8** %bound.alloca1049
  %arrayidx3 = getelementptr inbounds %struct.move_s* %6, i64 %idxprom2
  %from4 = getelementptr inbounds %struct.move_s* %arrayidx3, i32 0, i32 0
  %7 = load i32* %from4, align 4
  store i32 %7, i32* %from, align 4
  %8 = load i32* %m.addr, align 4
  %idxprom5 = sext i32 %8 to i64
  %9 = load %struct.move_s** %moves.addr, align 8
  %bitcast1052 = bitcast %struct.move_s** %moves.addr to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast1052, i8** %base.alloca1053, i8** %bound.alloca1054)
  %base.load1055 = load i8** %base.alloca1053
  %bound.load1056 = load i8** %bound.alloca1054
  %arrayidx6 = getelementptr inbounds %struct.move_s* %9, i64 %idxprom5
  %target7 = getelementptr inbounds %struct.move_s* %arrayidx6, i32 0, i32 1
  %10 = load i32* %target7, align 4
  store i32 %10, i32* %target, align 4
  %11 = load i32* @Variant, align 4
  %cmp = icmp eq i32 %11, 3
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  store i32 1, i32* %retval
  br label %return

if.end:                                           ; preds = %entry
  %12 = load i32* %castled, align 4
  %tobool = icmp ne i32 %12, 0
  br i1 %tobool, label %if.then8, label %if.else

if.then8:                                         ; preds = %if.end
  %13 = load i32* %castled, align 4
  %cmp9 = icmp eq i32 %13, 1
  br i1 %cmp9, label %if.then10, label %if.end22

if.then10:                                        ; preds = %if.then8
  %call = call i32 @is_attacked(i32 30, i32 0)
  %tobool11 = icmp ne i32 %call, 0
  br i1 %tobool11, label %if.then12, label %if.end13

if.then12:                                        ; preds = %if.then10
  store i32 0, i32* %retval
  br label %return

if.end13:                                         ; preds = %if.then10
  %call14 = call i32 @is_attacked(i32 31, i32 0)
  %tobool15 = icmp ne i32 %call14, 0
  br i1 %tobool15, label %if.then16, label %if.end17

if.then16:                                        ; preds = %if.end13
  store i32 0, i32* %retval
  br label %return

if.end17:                                         ; preds = %if.end13
  %call18 = call i32 @is_attacked(i32 32, i32 0)
  %tobool19 = icmp ne i32 %call18, 0
  br i1 %tobool19, label %if.then20, label %if.end21

if.then20:                                        ; preds = %if.end17
  store i32 0, i32* %retval
  br label %return

if.end21:                                         ; preds = %if.end17
  store i32 1, i32* %retval
  br label %return

if.end22:                                         ; preds = %if.then8
  %14 = load i32* %castled, align 4
  %cmp23 = icmp eq i32 %14, 2
  br i1 %cmp23, label %if.then24, label %if.end37

if.then24:                                        ; preds = %if.end22
  %call25 = call i32 @is_attacked(i32 30, i32 0)
  %tobool26 = icmp ne i32 %call25, 0
  br i1 %tobool26, label %if.then27, label %if.end28

if.then27:                                        ; preds = %if.then24
  store i32 0, i32* %retval
  br label %return

if.end28:                                         ; preds = %if.then24
  %call29 = call i32 @is_attacked(i32 29, i32 0)
  %tobool30 = icmp ne i32 %call29, 0
  br i1 %tobool30, label %if.then31, label %if.end32

if.then31:                                        ; preds = %if.end28
  store i32 0, i32* %retval
  br label %return

if.end32:                                         ; preds = %if.end28
  %call33 = call i32 @is_attacked(i32 28, i32 0)
  %tobool34 = icmp ne i32 %call33, 0
  br i1 %tobool34, label %if.then35, label %if.end36

if.then35:                                        ; preds = %if.end32
  store i32 0, i32* %retval
  br label %return

if.end36:                                         ; preds = %if.end32
  store i32 1, i32* %retval
  br label %return

if.end37:                                         ; preds = %if.end22
  %15 = load i32* %castled, align 4
  %cmp38 = icmp eq i32 %15, 3
  br i1 %cmp38, label %if.then39, label %if.end52

if.then39:                                        ; preds = %if.end37
  %call40 = call i32 @is_attacked(i32 114, i32 1)
  %tobool41 = icmp ne i32 %call40, 0
  br i1 %tobool41, label %if.then42, label %if.end43

if.then42:                                        ; preds = %if.then39
  store i32 0, i32* %retval
  br label %return

if.end43:                                         ; preds = %if.then39
  %call44 = call i32 @is_attacked(i32 115, i32 1)
  %tobool45 = icmp ne i32 %call44, 0
  br i1 %tobool45, label %if.then46, label %if.end47

if.then46:                                        ; preds = %if.end43
  store i32 0, i32* %retval
  br label %return

if.end47:                                         ; preds = %if.end43
  %call48 = call i32 @is_attacked(i32 116, i32 1)
  %tobool49 = icmp ne i32 %call48, 0
  br i1 %tobool49, label %if.then50, label %if.end51

if.then50:                                        ; preds = %if.end47
  store i32 0, i32* %retval
  br label %return

if.end51:                                         ; preds = %if.end47
  store i32 1, i32* %retval
  br label %return

if.end52:                                         ; preds = %if.end37
  %16 = load i32* %castled, align 4
  %cmp53 = icmp eq i32 %16, 4
  br i1 %cmp53, label %if.then54, label %if.end67

if.then54:                                        ; preds = %if.end52
  %call55 = call i32 @is_attacked(i32 114, i32 1)
  %tobool56 = icmp ne i32 %call55, 0
  br i1 %tobool56, label %if.then57, label %if.end58

if.then57:                                        ; preds = %if.then54
  store i32 0, i32* %retval
  br label %return

if.end58:                                         ; preds = %if.then54
  %call59 = call i32 @is_attacked(i32 113, i32 1)
  %tobool60 = icmp ne i32 %call59, 0
  br i1 %tobool60, label %if.then61, label %if.end62

if.then61:                                        ; preds = %if.end58
  store i32 0, i32* %retval
  br label %return

if.end62:                                         ; preds = %if.end58
  %call63 = call i32 @is_attacked(i32 112, i32 1)
  %tobool64 = icmp ne i32 %call63, 0
  br i1 %tobool64, label %if.then65, label %if.end66

if.then65:                                        ; preds = %if.end62
  store i32 0, i32* %retval
  br label %return

if.end66:                                         ; preds = %if.end62
  store i32 1, i32* %retval
  br label %return

if.end67:                                         ; preds = %if.end52
  br label %if.end1015

if.else:                                          ; preds = %if.end
  %17 = load i32* @white_to_move, align 4
  %and = and i32 %17, 1
  %tobool68 = icmp ne i32 %and, 0
  br i1 %tobool68, label %if.then69, label %if.else532

if.then69:                                        ; preds = %if.else
  %18 = load i32* %incheck.addr, align 4
  %tobool70 = icmp ne i32 %18, 0
  br i1 %tobool70, label %if.end527, label %if.then71

if.then71:                                        ; preds = %if.then69
  %19 = load i32* %m.addr, align 4
  %idxprom72 = sext i32 %19 to i64
  %20 = load %struct.move_s** %moves.addr, align 8
  %bitcast1057 = bitcast %struct.move_s** %moves.addr to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast1057, i8** %base.alloca1058, i8** %bound.alloca1059)
  %base.load1060 = load i8** %base.alloca1058
  %bound.load1061 = load i8** %bound.alloca1059
  %arrayidx73 = getelementptr inbounds %struct.move_s* %20, i64 %idxprom72
  %from74 = getelementptr inbounds %struct.move_s* %arrayidx73, i32 0, i32 0
  %21 = load i32* %from74, align 4
  %cmp75 = icmp eq i32 %21, 0
  br i1 %cmp75, label %if.then76, label %if.end77

if.then76:                                        ; preds = %if.then71
  store i32 1, i32* %retval
  br label %return

if.end77:                                         ; preds = %if.then71
  %22 = load i32* %m.addr, align 4
  %idxprom78 = sext i32 %22 to i64
  %23 = load %struct.move_s** %moves.addr, align 8
  %bitcast1067 = bitcast %struct.move_s** %moves.addr to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast1067, i8** %base.alloca1068, i8** %bound.alloca1069)
  %base.load1070 = load i8** %base.alloca1068
  %bound.load1071 = load i8** %bound.alloca1069
  %arrayidx79 = getelementptr inbounds %struct.move_s* %23, i64 %idxprom78
  %promoted = getelementptr inbounds %struct.move_s* %arrayidx79, i32 0, i32 3
  %24 = load i32* %promoted, align 4
  %tobool80 = icmp ne i32 %24, 0
  br i1 %tobool80, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.end77
  br label %cond.end

cond.false:                                       ; preds = %if.end77
  %25 = load i32* %target, align 4
  %idxprom81 = sext i32 %25 to i64
  %arrayidx82 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom81
  %26 = load i32* %arrayidx82, align 4
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 2, %cond.true ], [ %26, %cond.false ]
  switch i32 %cond, label %sw.default [
    i32 2, label %sw.bb
    i32 4, label %sw.bb132
    i32 12, label %sw.bb158
    i32 8, label %sw.bb194
    i32 10, label %sw.bb230
  ]

sw.bb:                                            ; preds = %cond.end
  %27 = load i32* %m.addr, align 4
  %idxprom83 = sext i32 %27 to i64
  %28 = load %struct.move_s** %moves.addr, align 8
  %bitcast1077 = bitcast %struct.move_s** %moves.addr to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast1077, i8** %base.alloca1078, i8** %bound.alloca1079)
  %base.load1080 = load i8** %base.alloca1078
  %bound.load1081 = load i8** %bound.alloca1079
  %arrayidx84 = getelementptr inbounds %struct.move_s* %28, i64 %idxprom83
  %captured = getelementptr inbounds %struct.move_s* %arrayidx84, i32 0, i32 2
  %29 = load i32* %captured, align 4
  %cmp85 = icmp ne i32 %29, 13
  br i1 %cmp85, label %if.then86, label %if.else111

if.then86:                                        ; preds = %sw.bb
  %30 = load i32* %from, align 4
  %idxprom87 = sext i32 %30 to i64
  %arrayidx88 = getelementptr inbounds [144 x i32]* @Xfile, i32 0, i64 %idxprom87
  %31 = load i32* %arrayidx88, align 4
  %32 = load i32* @bking_loc, align 4
  %idxprom89 = sext i32 %32 to i64
  %arrayidx90 = getelementptr inbounds [144 x i32]* @Xfile, i32 0, i64 %idxprom89
  %33 = load i32* %arrayidx90, align 4
  %cmp91 = icmp ne i32 %31, %33
  br i1 %cmp91, label %land.lhs.true, label %if.end110

land.lhs.true:                                    ; preds = %if.then86
  %34 = load i32* %from, align 4
  %idxprom92 = sext i32 %34 to i64
  %arrayidx93 = getelementptr inbounds [144 x i32]* @Xrank, i32 0, i64 %idxprom92
  %35 = load i32* %arrayidx93, align 4
  %36 = load i32* @bking_loc, align 4
  %idxprom94 = sext i32 %36 to i64
  %arrayidx95 = getelementptr inbounds [144 x i32]* @Xrank, i32 0, i64 %idxprom94
  %37 = load i32* %arrayidx95, align 4
  %cmp96 = icmp ne i32 %35, %37
  br i1 %cmp96, label %land.lhs.true97, label %if.end110

land.lhs.true97:                                  ; preds = %land.lhs.true
  %38 = load i32* %from, align 4
  %idxprom98 = sext i32 %38 to i64
  %arrayidx99 = getelementptr inbounds [144 x i32]* @Xdiagl, i32 0, i64 %idxprom98
  %39 = load i32* %arrayidx99, align 4
  %40 = load i32* @bking_loc, align 4
  %idxprom100 = sext i32 %40 to i64
  %arrayidx101 = getelementptr inbounds [144 x i32]* @Xdiagl, i32 0, i64 %idxprom100
  %41 = load i32* %arrayidx101, align 4
  %cmp102 = icmp ne i32 %39, %41
  br i1 %cmp102, label %land.lhs.true103, label %if.end110

land.lhs.true103:                                 ; preds = %land.lhs.true97
  %42 = load i32* %from, align 4
  %idxprom104 = sext i32 %42 to i64
  %arrayidx105 = getelementptr inbounds [144 x i32]* @Xdiagr, i32 0, i64 %idxprom104
  %43 = load i32* %arrayidx105, align 4
  %44 = load i32* @bking_loc, align 4
  %idxprom106 = sext i32 %44 to i64
  %arrayidx107 = getelementptr inbounds [144 x i32]* @Xdiagr, i32 0, i64 %idxprom106
  %45 = load i32* %arrayidx107, align 4
  %cmp108 = icmp ne i32 %43, %45
  br i1 %cmp108, label %if.then109, label %if.end110

if.then109:                                       ; preds = %land.lhs.true103
  store i32 1, i32* %retval
  br label %return

if.end110:                                        ; preds = %land.lhs.true103, %land.lhs.true97, %land.lhs.true, %if.then86
  br label %if.end131

if.else111:                                       ; preds = %sw.bb
  %46 = load i32* %from, align 4
  %idxprom112 = sext i32 %46 to i64
  %arrayidx113 = getelementptr inbounds [144 x i32]* @Xrank, i32 0, i64 %idxprom112
  %47 = load i32* %arrayidx113, align 4
  %48 = load i32* @bking_loc, align 4
  %idxprom114 = sext i32 %48 to i64
  %arrayidx115 = getelementptr inbounds [144 x i32]* @Xrank, i32 0, i64 %idxprom114
  %49 = load i32* %arrayidx115, align 4
  %cmp116 = icmp ne i32 %47, %49
  br i1 %cmp116, label %land.lhs.true117, label %if.end130

land.lhs.true117:                                 ; preds = %if.else111
  %50 = load i32* %from, align 4
  %idxprom118 = sext i32 %50 to i64
  %arrayidx119 = getelementptr inbounds [144 x i32]* @Xdiagl, i32 0, i64 %idxprom118
  %51 = load i32* %arrayidx119, align 4
  %52 = load i32* @bking_loc, align 4
  %idxprom120 = sext i32 %52 to i64
  %arrayidx121 = getelementptr inbounds [144 x i32]* @Xdiagl, i32 0, i64 %idxprom120
  %53 = load i32* %arrayidx121, align 4
  %cmp122 = icmp ne i32 %51, %53
  br i1 %cmp122, label %land.lhs.true123, label %if.end130

land.lhs.true123:                                 ; preds = %land.lhs.true117
  %54 = load i32* %from, align 4
  %idxprom124 = sext i32 %54 to i64
  %arrayidx125 = getelementptr inbounds [144 x i32]* @Xdiagr, i32 0, i64 %idxprom124
  %55 = load i32* %arrayidx125, align 4
  %56 = load i32* @bking_loc, align 4
  %idxprom126 = sext i32 %56 to i64
  %arrayidx127 = getelementptr inbounds [144 x i32]* @Xdiagr, i32 0, i64 %idxprom126
  %57 = load i32* %arrayidx127, align 4
  %cmp128 = icmp ne i32 %55, %57
  br i1 %cmp128, label %if.then129, label %if.end130

if.then129:                                       ; preds = %land.lhs.true123
  store i32 1, i32* %retval
  br label %return

if.end130:                                        ; preds = %land.lhs.true123, %land.lhs.true117, %if.else111
  br label %if.end131

if.end131:                                        ; preds = %if.end130, %if.end110
  br label %sw.epilog

sw.bb132:                                         ; preds = %cond.end
  %58 = load i32* %from, align 4
  %idxprom133 = sext i32 %58 to i64
  %arrayidx134 = getelementptr inbounds [144 x i32]* @Xfile, i32 0, i64 %idxprom133
  %59 = load i32* %arrayidx134, align 4
  %60 = load i32* @bking_loc, align 4
  %idxprom135 = sext i32 %60 to i64
  %arrayidx136 = getelementptr inbounds [144 x i32]* @Xfile, i32 0, i64 %idxprom135
  %61 = load i32* %arrayidx136, align 4
  %cmp137 = icmp ne i32 %59, %61
  br i1 %cmp137, label %land.lhs.true138, label %if.end157

land.lhs.true138:                                 ; preds = %sw.bb132
  %62 = load i32* %from, align 4
  %idxprom139 = sext i32 %62 to i64
  %arrayidx140 = getelementptr inbounds [144 x i32]* @Xrank, i32 0, i64 %idxprom139
  %63 = load i32* %arrayidx140, align 4
  %64 = load i32* @bking_loc, align 4
  %idxprom141 = sext i32 %64 to i64
  %arrayidx142 = getelementptr inbounds [144 x i32]* @Xrank, i32 0, i64 %idxprom141
  %65 = load i32* %arrayidx142, align 4
  %cmp143 = icmp ne i32 %63, %65
  br i1 %cmp143, label %land.lhs.true144, label %if.end157

land.lhs.true144:                                 ; preds = %land.lhs.true138
  %66 = load i32* %from, align 4
  %idxprom145 = sext i32 %66 to i64
  %arrayidx146 = getelementptr inbounds [144 x i32]* @Xdiagl, i32 0, i64 %idxprom145
  %67 = load i32* %arrayidx146, align 4
  %68 = load i32* @bking_loc, align 4
  %idxprom147 = sext i32 %68 to i64
  %arrayidx148 = getelementptr inbounds [144 x i32]* @Xdiagl, i32 0, i64 %idxprom147
  %69 = load i32* %arrayidx148, align 4
  %cmp149 = icmp ne i32 %67, %69
  br i1 %cmp149, label %land.lhs.true150, label %if.end157

land.lhs.true150:                                 ; preds = %land.lhs.true144
  %70 = load i32* %from, align 4
  %idxprom151 = sext i32 %70 to i64
  %arrayidx152 = getelementptr inbounds [144 x i32]* @Xdiagr, i32 0, i64 %idxprom151
  %71 = load i32* %arrayidx152, align 4
  %72 = load i32* @bking_loc, align 4
  %idxprom153 = sext i32 %72 to i64
  %arrayidx154 = getelementptr inbounds [144 x i32]* @Xdiagr, i32 0, i64 %idxprom153
  %73 = load i32* %arrayidx154, align 4
  %cmp155 = icmp ne i32 %71, %73
  br i1 %cmp155, label %if.then156, label %if.end157

if.then156:                                       ; preds = %land.lhs.true150
  store i32 1, i32* %retval
  br label %return

if.end157:                                        ; preds = %land.lhs.true150, %land.lhs.true144, %land.lhs.true138, %sw.bb132
  br label %sw.epilog

sw.bb158:                                         ; preds = %cond.end
  %74 = load i32* %from, align 4
  %idxprom159 = sext i32 %74 to i64
  %arrayidx160 = getelementptr inbounds [144 x i32]* @Xfile, i32 0, i64 %idxprom159
  %75 = load i32* %arrayidx160, align 4
  %76 = load i32* @bking_loc, align 4
  %idxprom161 = sext i32 %76 to i64
  %arrayidx162 = getelementptr inbounds [144 x i32]* @Xfile, i32 0, i64 %idxprom161
  %77 = load i32* %arrayidx162, align 4
  %cmp163 = icmp ne i32 %75, %77
  br i1 %cmp163, label %land.lhs.true164, label %if.end193

land.lhs.true164:                                 ; preds = %sw.bb158
  %78 = load i32* %from, align 4
  %idxprom165 = sext i32 %78 to i64
  %arrayidx166 = getelementptr inbounds [144 x i32]* @Xrank, i32 0, i64 %idxprom165
  %79 = load i32* %arrayidx166, align 4
  %80 = load i32* @bking_loc, align 4
  %idxprom167 = sext i32 %80 to i64
  %arrayidx168 = getelementptr inbounds [144 x i32]* @Xrank, i32 0, i64 %idxprom167
  %81 = load i32* %arrayidx168, align 4
  %cmp169 = icmp ne i32 %79, %81
  br i1 %cmp169, label %if.then170, label %if.end193

if.then170:                                       ; preds = %land.lhs.true164
  %82 = load i32* %from, align 4
  %idxprom171 = sext i32 %82 to i64
  %arrayidx172 = getelementptr inbounds [144 x i32]* @Xdiagl, i32 0, i64 %idxprom171
  %83 = load i32* %arrayidx172, align 4
  %84 = load i32* %target, align 4
  %idxprom173 = sext i32 %84 to i64
  %arrayidx174 = getelementptr inbounds [144 x i32]* @Xdiagl, i32 0, i64 %idxprom173
  %85 = load i32* %arrayidx174, align 4
  %cmp175 = icmp eq i32 %83, %85
  br i1 %cmp175, label %if.then176, label %if.else184

if.then176:                                       ; preds = %if.then170
  %86 = load i32* %from, align 4
  %idxprom177 = sext i32 %86 to i64
  %arrayidx178 = getelementptr inbounds [144 x i32]* @Xdiagr, i32 0, i64 %idxprom177
  %87 = load i32* %arrayidx178, align 4
  %88 = load i32* @bking_loc, align 4
  %idxprom179 = sext i32 %88 to i64
  %arrayidx180 = getelementptr inbounds [144 x i32]* @Xdiagr, i32 0, i64 %idxprom179
  %89 = load i32* %arrayidx180, align 4
  %cmp181 = icmp ne i32 %87, %89
  br i1 %cmp181, label %if.then182, label %if.end183

if.then182:                                       ; preds = %if.then176
  store i32 1, i32* %retval
  br label %return

if.end183:                                        ; preds = %if.then176
  br label %if.end192

if.else184:                                       ; preds = %if.then170
  %90 = load i32* %from, align 4
  %idxprom185 = sext i32 %90 to i64
  %arrayidx186 = getelementptr inbounds [144 x i32]* @Xdiagl, i32 0, i64 %idxprom185
  %91 = load i32* %arrayidx186, align 4
  %92 = load i32* @bking_loc, align 4
  %idxprom187 = sext i32 %92 to i64
  %arrayidx188 = getelementptr inbounds [144 x i32]* @Xdiagl, i32 0, i64 %idxprom187
  %93 = load i32* %arrayidx188, align 4
  %cmp189 = icmp ne i32 %91, %93
  br i1 %cmp189, label %if.then190, label %if.end191

if.then190:                                       ; preds = %if.else184
  store i32 1, i32* %retval
  br label %return

if.end191:                                        ; preds = %if.else184
  br label %if.end192

if.end192:                                        ; preds = %if.end191, %if.end183
  br label %if.end193

if.end193:                                        ; preds = %if.end192, %land.lhs.true164, %sw.bb158
  br label %sw.epilog

sw.bb194:                                         ; preds = %cond.end
  %94 = load i32* %from, align 4
  %idxprom195 = sext i32 %94 to i64
  %arrayidx196 = getelementptr inbounds [144 x i32]* @Xdiagr, i32 0, i64 %idxprom195
  %95 = load i32* %arrayidx196, align 4
  %96 = load i32* @bking_loc, align 4
  %idxprom197 = sext i32 %96 to i64
  %arrayidx198 = getelementptr inbounds [144 x i32]* @Xdiagr, i32 0, i64 %idxprom197
  %97 = load i32* %arrayidx198, align 4
  %cmp199 = icmp ne i32 %95, %97
  br i1 %cmp199, label %land.lhs.true200, label %if.end229

land.lhs.true200:                                 ; preds = %sw.bb194
  %98 = load i32* %from, align 4
  %idxprom201 = sext i32 %98 to i64
  %arrayidx202 = getelementptr inbounds [144 x i32]* @Xdiagl, i32 0, i64 %idxprom201
  %99 = load i32* %arrayidx202, align 4
  %100 = load i32* @bking_loc, align 4
  %idxprom203 = sext i32 %100 to i64
  %arrayidx204 = getelementptr inbounds [144 x i32]* @Xdiagl, i32 0, i64 %idxprom203
  %101 = load i32* %arrayidx204, align 4
  %cmp205 = icmp ne i32 %99, %101
  br i1 %cmp205, label %if.then206, label %if.end229

if.then206:                                       ; preds = %land.lhs.true200
  %102 = load i32* %from, align 4
  %idxprom207 = sext i32 %102 to i64
  %arrayidx208 = getelementptr inbounds [144 x i32]* @Xrank, i32 0, i64 %idxprom207
  %103 = load i32* %arrayidx208, align 4
  %104 = load i32* %target, align 4
  %idxprom209 = sext i32 %104 to i64
  %arrayidx210 = getelementptr inbounds [144 x i32]* @Xrank, i32 0, i64 %idxprom209
  %105 = load i32* %arrayidx210, align 4
  %cmp211 = icmp eq i32 %103, %105
  br i1 %cmp211, label %if.then212, label %if.else220

if.then212:                                       ; preds = %if.then206
  %106 = load i32* %from, align 4
  %idxprom213 = sext i32 %106 to i64
  %arrayidx214 = getelementptr inbounds [144 x i32]* @Xfile, i32 0, i64 %idxprom213
  %107 = load i32* %arrayidx214, align 4
  %108 = load i32* @bking_loc, align 4
  %idxprom215 = sext i32 %108 to i64
  %arrayidx216 = getelementptr inbounds [144 x i32]* @Xfile, i32 0, i64 %idxprom215
  %109 = load i32* %arrayidx216, align 4
  %cmp217 = icmp ne i32 %107, %109
  br i1 %cmp217, label %if.then218, label %if.end219

if.then218:                                       ; preds = %if.then212
  store i32 1, i32* %retval
  br label %return

if.end219:                                        ; preds = %if.then212
  br label %if.end228

if.else220:                                       ; preds = %if.then206
  %110 = load i32* %from, align 4
  %idxprom221 = sext i32 %110 to i64
  %arrayidx222 = getelementptr inbounds [144 x i32]* @Xrank, i32 0, i64 %idxprom221
  %111 = load i32* %arrayidx222, align 4
  %112 = load i32* @bking_loc, align 4
  %idxprom223 = sext i32 %112 to i64
  %arrayidx224 = getelementptr inbounds [144 x i32]* @Xrank, i32 0, i64 %idxprom223
  %113 = load i32* %arrayidx224, align 4
  %cmp225 = icmp ne i32 %111, %113
  br i1 %cmp225, label %if.then226, label %if.end227

if.then226:                                       ; preds = %if.else220
  store i32 1, i32* %retval
  br label %return

if.end227:                                        ; preds = %if.else220
  br label %if.end228

if.end228:                                        ; preds = %if.end227, %if.end219
  br label %if.end229

if.end229:                                        ; preds = %if.end228, %land.lhs.true200, %sw.bb194
  br label %sw.epilog

sw.bb230:                                         ; preds = %cond.end
  %114 = load i32* %from, align 4
  %idxprom231 = sext i32 %114 to i64
  %arrayidx232 = getelementptr inbounds [144 x i32]* @Xfile, i32 0, i64 %idxprom231
  %115 = load i32* %arrayidx232, align 4
  %116 = load i32* %target, align 4
  %idxprom233 = sext i32 %116 to i64
  %arrayidx234 = getelementptr inbounds [144 x i32]* @Xfile, i32 0, i64 %idxprom233
  %117 = load i32* %arrayidx234, align 4
  %cmp235 = icmp eq i32 %115, %117
  br i1 %cmp235, label %if.then236, label %if.else256

if.then236:                                       ; preds = %sw.bb230
  %118 = load i32* %from, align 4
  %idxprom237 = sext i32 %118 to i64
  %arrayidx238 = getelementptr inbounds [144 x i32]* @Xdiagr, i32 0, i64 %idxprom237
  %119 = load i32* %arrayidx238, align 4
  %120 = load i32* @bking_loc, align 4
  %idxprom239 = sext i32 %120 to i64
  %arrayidx240 = getelementptr inbounds [144 x i32]* @Xdiagr, i32 0, i64 %idxprom239
  %121 = load i32* %arrayidx240, align 4
  %cmp241 = icmp ne i32 %119, %121
  br i1 %cmp241, label %land.lhs.true242, label %if.end255

land.lhs.true242:                                 ; preds = %if.then236
  %122 = load i32* %from, align 4
  %idxprom243 = sext i32 %122 to i64
  %arrayidx244 = getelementptr inbounds [144 x i32]* @Xdiagl, i32 0, i64 %idxprom243
  %123 = load i32* %arrayidx244, align 4
  %124 = load i32* @bking_loc, align 4
  %idxprom245 = sext i32 %124 to i64
  %arrayidx246 = getelementptr inbounds [144 x i32]* @Xdiagl, i32 0, i64 %idxprom245
  %125 = load i32* %arrayidx246, align 4
  %cmp247 = icmp ne i32 %123, %125
  br i1 %cmp247, label %land.lhs.true248, label %if.end255

land.lhs.true248:                                 ; preds = %land.lhs.true242
  %126 = load i32* %from, align 4
  %idxprom249 = sext i32 %126 to i64
  %arrayidx250 = getelementptr inbounds [144 x i32]* @Xrank, i32 0, i64 %idxprom249
  %127 = load i32* %arrayidx250, align 4
  %128 = load i32* @bking_loc, align 4
  %idxprom251 = sext i32 %128 to i64
  %arrayidx252 = getelementptr inbounds [144 x i32]* @Xrank, i32 0, i64 %idxprom251
  %129 = load i32* %arrayidx252, align 4
  %cmp253 = icmp ne i32 %127, %129
  br i1 %cmp253, label %if.then254, label %if.end255

if.then254:                                       ; preds = %land.lhs.true248
  store i32 1, i32* %retval
  br label %return

if.end255:                                        ; preds = %land.lhs.true248, %land.lhs.true242, %if.then236
  br label %if.end337

if.else256:                                       ; preds = %sw.bb230
  %130 = load i32* %from, align 4
  %idxprom257 = sext i32 %130 to i64
  %arrayidx258 = getelementptr inbounds [144 x i32]* @Xrank, i32 0, i64 %idxprom257
  %131 = load i32* %arrayidx258, align 4
  %132 = load i32* %target, align 4
  %idxprom259 = sext i32 %132 to i64
  %arrayidx260 = getelementptr inbounds [144 x i32]* @Xrank, i32 0, i64 %idxprom259
  %133 = load i32* %arrayidx260, align 4
  %cmp261 = icmp eq i32 %131, %133
  br i1 %cmp261, label %if.then262, label %if.else282

if.then262:                                       ; preds = %if.else256
  %134 = load i32* %from, align 4
  %idxprom263 = sext i32 %134 to i64
  %arrayidx264 = getelementptr inbounds [144 x i32]* @Xdiagr, i32 0, i64 %idxprom263
  %135 = load i32* %arrayidx264, align 4
  %136 = load i32* @bking_loc, align 4
  %idxprom265 = sext i32 %136 to i64
  %arrayidx266 = getelementptr inbounds [144 x i32]* @Xdiagr, i32 0, i64 %idxprom265
  %137 = load i32* %arrayidx266, align 4
  %cmp267 = icmp ne i32 %135, %137
  br i1 %cmp267, label %land.lhs.true268, label %if.end281

land.lhs.true268:                                 ; preds = %if.then262
  %138 = load i32* %from, align 4
  %idxprom269 = sext i32 %138 to i64
  %arrayidx270 = getelementptr inbounds [144 x i32]* @Xfile, i32 0, i64 %idxprom269
  %139 = load i32* %arrayidx270, align 4
  %140 = load i32* @bking_loc, align 4
  %idxprom271 = sext i32 %140 to i64
  %arrayidx272 = getelementptr inbounds [144 x i32]* @Xfile, i32 0, i64 %idxprom271
  %141 = load i32* %arrayidx272, align 4
  %cmp273 = icmp ne i32 %139, %141
  br i1 %cmp273, label %land.lhs.true274, label %if.end281

land.lhs.true274:                                 ; preds = %land.lhs.true268
  %142 = load i32* %from, align 4
  %idxprom275 = sext i32 %142 to i64
  %arrayidx276 = getelementptr inbounds [144 x i32]* @Xdiagl, i32 0, i64 %idxprom275
  %143 = load i32* %arrayidx276, align 4
  %144 = load i32* @bking_loc, align 4
  %idxprom277 = sext i32 %144 to i64
  %arrayidx278 = getelementptr inbounds [144 x i32]* @Xdiagl, i32 0, i64 %idxprom277
  %145 = load i32* %arrayidx278, align 4
  %cmp279 = icmp ne i32 %143, %145
  br i1 %cmp279, label %if.then280, label %if.end281

if.then280:                                       ; preds = %land.lhs.true274
  store i32 1, i32* %retval
  br label %return

if.end281:                                        ; preds = %land.lhs.true274, %land.lhs.true268, %if.then262
  br label %if.end336

if.else282:                                       ; preds = %if.else256
  %146 = load i32* %from, align 4
  %idxprom283 = sext i32 %146 to i64
  %arrayidx284 = getelementptr inbounds [144 x i32]* @Xdiagl, i32 0, i64 %idxprom283
  %147 = load i32* %arrayidx284, align 4
  %148 = load i32* %target, align 4
  %idxprom285 = sext i32 %148 to i64
  %arrayidx286 = getelementptr inbounds [144 x i32]* @Xdiagl, i32 0, i64 %idxprom285
  %149 = load i32* %arrayidx286, align 4
  %cmp287 = icmp eq i32 %147, %149
  br i1 %cmp287, label %if.then288, label %if.else308

if.then288:                                       ; preds = %if.else282
  %150 = load i32* %from, align 4
  %idxprom289 = sext i32 %150 to i64
  %arrayidx290 = getelementptr inbounds [144 x i32]* @Xdiagr, i32 0, i64 %idxprom289
  %151 = load i32* %arrayidx290, align 4
  %152 = load i32* @bking_loc, align 4
  %idxprom291 = sext i32 %152 to i64
  %arrayidx292 = getelementptr inbounds [144 x i32]* @Xdiagr, i32 0, i64 %idxprom291
  %153 = load i32* %arrayidx292, align 4
  %cmp293 = icmp ne i32 %151, %153
  br i1 %cmp293, label %land.lhs.true294, label %if.end307

land.lhs.true294:                                 ; preds = %if.then288
  %154 = load i32* %from, align 4
  %idxprom295 = sext i32 %154 to i64
  %arrayidx296 = getelementptr inbounds [144 x i32]* @Xfile, i32 0, i64 %idxprom295
  %155 = load i32* %arrayidx296, align 4
  %156 = load i32* @bking_loc, align 4
  %idxprom297 = sext i32 %156 to i64
  %arrayidx298 = getelementptr inbounds [144 x i32]* @Xfile, i32 0, i64 %idxprom297
  %157 = load i32* %arrayidx298, align 4
  %cmp299 = icmp ne i32 %155, %157
  br i1 %cmp299, label %land.lhs.true300, label %if.end307

land.lhs.true300:                                 ; preds = %land.lhs.true294
  %158 = load i32* %from, align 4
  %idxprom301 = sext i32 %158 to i64
  %arrayidx302 = getelementptr inbounds [144 x i32]* @Xrank, i32 0, i64 %idxprom301
  %159 = load i32* %arrayidx302, align 4
  %160 = load i32* @bking_loc, align 4
  %idxprom303 = sext i32 %160 to i64
  %arrayidx304 = getelementptr inbounds [144 x i32]* @Xrank, i32 0, i64 %idxprom303
  %161 = load i32* %arrayidx304, align 4
  %cmp305 = icmp ne i32 %159, %161
  br i1 %cmp305, label %if.then306, label %if.end307

if.then306:                                       ; preds = %land.lhs.true300
  store i32 1, i32* %retval
  br label %return

if.end307:                                        ; preds = %land.lhs.true300, %land.lhs.true294, %if.then288
  br label %if.end335

if.else308:                                       ; preds = %if.else282
  %162 = load i32* %from, align 4
  %idxprom309 = sext i32 %162 to i64
  %arrayidx310 = getelementptr inbounds [144 x i32]* @Xdiagr, i32 0, i64 %idxprom309
  %163 = load i32* %arrayidx310, align 4
  %164 = load i32* %target, align 4
  %idxprom311 = sext i32 %164 to i64
  %arrayidx312 = getelementptr inbounds [144 x i32]* @Xdiagr, i32 0, i64 %idxprom311
  %165 = load i32* %arrayidx312, align 4
  %cmp313 = icmp eq i32 %163, %165
  br i1 %cmp313, label %if.then314, label %if.end334

if.then314:                                       ; preds = %if.else308
  %166 = load i32* %from, align 4
  %idxprom315 = sext i32 %166 to i64
  %arrayidx316 = getelementptr inbounds [144 x i32]* @Xdiagl, i32 0, i64 %idxprom315
  %167 = load i32* %arrayidx316, align 4
  %168 = load i32* @bking_loc, align 4
  %idxprom317 = sext i32 %168 to i64
  %arrayidx318 = getelementptr inbounds [144 x i32]* @Xdiagl, i32 0, i64 %idxprom317
  %169 = load i32* %arrayidx318, align 4
  %cmp319 = icmp ne i32 %167, %169
  br i1 %cmp319, label %land.lhs.true320, label %if.end333

land.lhs.true320:                                 ; preds = %if.then314
  %170 = load i32* %from, align 4
  %idxprom321 = sext i32 %170 to i64
  %arrayidx322 = getelementptr inbounds [144 x i32]* @Xfile, i32 0, i64 %idxprom321
  %171 = load i32* %arrayidx322, align 4
  %172 = load i32* @bking_loc, align 4
  %idxprom323 = sext i32 %172 to i64
  %arrayidx324 = getelementptr inbounds [144 x i32]* @Xfile, i32 0, i64 %idxprom323
  %173 = load i32* %arrayidx324, align 4
  %cmp325 = icmp ne i32 %171, %173
  br i1 %cmp325, label %land.lhs.true326, label %if.end333

land.lhs.true326:                                 ; preds = %land.lhs.true320
  %174 = load i32* %from, align 4
  %idxprom327 = sext i32 %174 to i64
  %arrayidx328 = getelementptr inbounds [144 x i32]* @Xrank, i32 0, i64 %idxprom327
  %175 = load i32* %arrayidx328, align 4
  %176 = load i32* @bking_loc, align 4
  %idxprom329 = sext i32 %176 to i64
  %arrayidx330 = getelementptr inbounds [144 x i32]* @Xrank, i32 0, i64 %idxprom329
  %177 = load i32* %arrayidx330, align 4
  %cmp331 = icmp ne i32 %175, %177
  br i1 %cmp331, label %if.then332, label %if.end333

if.then332:                                       ; preds = %land.lhs.true326
  store i32 1, i32* %retval
  br label %return

if.end333:                                        ; preds = %land.lhs.true326, %land.lhs.true320, %if.then314
  br label %if.end334

if.end334:                                        ; preds = %if.end333, %if.else308
  br label %if.end335

if.end335:                                        ; preds = %if.end334, %if.end307
  br label %if.end336

if.end336:                                        ; preds = %if.end335, %if.end281
  br label %if.end337

if.end337:                                        ; preds = %if.end336, %if.end255
  br label %sw.epilog

sw.default:                                       ; preds = %cond.end
  br label %sw.epilog

sw.epilog:                                        ; preds = %sw.default, %if.end337, %if.end229, %if.end193, %if.end157, %if.end131
  %178 = load i32* %target, align 4
  %idxprom338 = sext i32 %178 to i64
  %arrayidx339 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom338
  %179 = load i32* %arrayidx339, align 4
  %cmp340 = icmp ne i32 %179, 6
  br i1 %cmp340, label %if.then341, label %if.end526

if.then341:                                       ; preds = %sw.epilog
  %180 = load i32* %from, align 4
  %idxprom342 = sext i32 %180 to i64
  %arrayidx343 = getelementptr inbounds [144 x i32]* @Xfile, i32 0, i64 %idxprom342
  %181 = load i32* %arrayidx343, align 4
  %182 = load i32* @bking_loc, align 4
  %idxprom344 = sext i32 %182 to i64
  %arrayidx345 = getelementptr inbounds [144 x i32]* @Xfile, i32 0, i64 %idxprom344
  %183 = load i32* %arrayidx345, align 4
  %cmp346 = icmp eq i32 %181, %183
  br i1 %cmp346, label %if.then347, label %if.else381

if.then347:                                       ; preds = %if.then341
  %184 = load i32* @bking_loc, align 4
  %185 = load i32* %from, align 4
  %cmp348 = icmp sgt i32 %184, %185
  br i1 %cmp348, label %if.then349, label %if.else362

if.then349:                                       ; preds = %if.then347
  %186 = load i32* @bking_loc, align 4
  %sub = sub nsw i32 %186, 12
  store i32 %sub, i32* %l, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.then349
  %187 = load i32* %l, align 4
  %idxprom350 = sext i32 %187 to i64
  %arrayidx351 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom350
  %188 = load i32* %arrayidx351, align 4
  %cmp352 = icmp eq i32 %188, 13
  br i1 %cmp352, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %189 = load i32* %l, align 4
  %sub353 = sub nsw i32 %189, 12
  store i32 %sub353, i32* %l, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %190 = load i32* %l, align 4
  %idxprom354 = sext i32 %190 to i64
  %arrayidx355 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom354
  %191 = load i32* %arrayidx355, align 4
  %cmp356 = icmp eq i32 %191, 7
  br i1 %cmp356, label %if.then360, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %for.end
  %192 = load i32* %l, align 4
  %idxprom357 = sext i32 %192 to i64
  %arrayidx358 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom357
  %193 = load i32* %arrayidx358, align 4
  %cmp359 = icmp eq i32 %193, 9
  br i1 %cmp359, label %if.then360, label %if.end361

if.then360:                                       ; preds = %lor.lhs.false, %for.end
  store i32 0, i32* %retval
  br label %return

if.end361:                                        ; preds = %lor.lhs.false
  br label %if.end380

if.else362:                                       ; preds = %if.then347
  %194 = load i32* @bking_loc, align 4
  %add = add nsw i32 %194, 12
  store i32 %add, i32* %l, align 4
  br label %for.cond363

for.cond363:                                      ; preds = %for.inc368, %if.else362
  %195 = load i32* %l, align 4
  %idxprom364 = sext i32 %195 to i64
  %arrayidx365 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom364
  %196 = load i32* %arrayidx365, align 4
  %cmp366 = icmp eq i32 %196, 13
  br i1 %cmp366, label %for.body367, label %for.end370

for.body367:                                      ; preds = %for.cond363
  br label %for.inc368

for.inc368:                                       ; preds = %for.body367
  %197 = load i32* %l, align 4
  %add369 = add nsw i32 %197, 12
  store i32 %add369, i32* %l, align 4
  br label %for.cond363

for.end370:                                       ; preds = %for.cond363
  %198 = load i32* %l, align 4
  %idxprom371 = sext i32 %198 to i64
  %arrayidx372 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom371
  %199 = load i32* %arrayidx372, align 4
  %cmp373 = icmp eq i32 %199, 7
  br i1 %cmp373, label %if.then378, label %lor.lhs.false374

lor.lhs.false374:                                 ; preds = %for.end370
  %200 = load i32* %l, align 4
  %idxprom375 = sext i32 %200 to i64
  %arrayidx376 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom375
  %201 = load i32* %arrayidx376, align 4
  %cmp377 = icmp eq i32 %201, 9
  br i1 %cmp377, label %if.then378, label %if.end379

if.then378:                                       ; preds = %lor.lhs.false374, %for.end370
  store i32 0, i32* %retval
  br label %return

if.end379:                                        ; preds = %lor.lhs.false374
  br label %if.end380

if.end380:                                        ; preds = %if.end379, %if.end361
  br label %if.end525

if.else381:                                       ; preds = %if.then341
  %202 = load i32* %from, align 4
  %idxprom382 = sext i32 %202 to i64
  %arrayidx383 = getelementptr inbounds [144 x i32]* @Xrank, i32 0, i64 %idxprom382
  %203 = load i32* %arrayidx383, align 4
  %204 = load i32* @bking_loc, align 4
  %idxprom384 = sext i32 %204 to i64
  %arrayidx385 = getelementptr inbounds [144 x i32]* @Xrank, i32 0, i64 %idxprom384
  %205 = load i32* %arrayidx385, align 4
  %cmp386 = icmp eq i32 %203, %205
  br i1 %cmp386, label %if.then387, label %if.else428

if.then387:                                       ; preds = %if.else381
  %206 = load i32* @bking_loc, align 4
  %207 = load i32* %from, align 4
  %cmp388 = icmp sgt i32 %206, %207
  br i1 %cmp388, label %if.then389, label %if.else408

if.then389:                                       ; preds = %if.then387
  %208 = load i32* @bking_loc, align 4
  %sub390 = sub nsw i32 %208, 1
  store i32 %sub390, i32* %l, align 4
  br label %for.cond391

for.cond391:                                      ; preds = %for.inc396, %if.then389
  %209 = load i32* %l, align 4
  %idxprom392 = sext i32 %209 to i64
  %arrayidx393 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom392
  %210 = load i32* %arrayidx393, align 4
  %cmp394 = icmp eq i32 %210, 13
  br i1 %cmp394, label %for.body395, label %for.end398

for.body395:                                      ; preds = %for.cond391
  br label %for.inc396

for.inc396:                                       ; preds = %for.body395
  %211 = load i32* %l, align 4
  %sub397 = sub nsw i32 %211, 1
  store i32 %sub397, i32* %l, align 4
  br label %for.cond391

for.end398:                                       ; preds = %for.cond391
  %212 = load i32* %l, align 4
  %idxprom399 = sext i32 %212 to i64
  %arrayidx400 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom399
  %213 = load i32* %arrayidx400, align 4
  %cmp401 = icmp eq i32 %213, 7
  br i1 %cmp401, label %if.then406, label %lor.lhs.false402

lor.lhs.false402:                                 ; preds = %for.end398
  %214 = load i32* %l, align 4
  %idxprom403 = sext i32 %214 to i64
  %arrayidx404 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom403
  %215 = load i32* %arrayidx404, align 4
  %cmp405 = icmp eq i32 %215, 9
  br i1 %cmp405, label %if.then406, label %if.end407

if.then406:                                       ; preds = %lor.lhs.false402, %for.end398
  store i32 0, i32* %retval
  br label %return

if.end407:                                        ; preds = %lor.lhs.false402
  br label %if.end427

if.else408:                                       ; preds = %if.then387
  %216 = load i32* @bking_loc, align 4
  %add409 = add nsw i32 %216, 1
  store i32 %add409, i32* %l, align 4
  br label %for.cond410

for.cond410:                                      ; preds = %for.inc415, %if.else408
  %217 = load i32* %l, align 4
  %idxprom411 = sext i32 %217 to i64
  %arrayidx412 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom411
  %218 = load i32* %arrayidx412, align 4
  %cmp413 = icmp eq i32 %218, 13
  br i1 %cmp413, label %for.body414, label %for.end417

for.body414:                                      ; preds = %for.cond410
  br label %for.inc415

for.inc415:                                       ; preds = %for.body414
  %219 = load i32* %l, align 4
  %add416 = add nsw i32 %219, 1
  store i32 %add416, i32* %l, align 4
  br label %for.cond410

for.end417:                                       ; preds = %for.cond410
  %220 = load i32* %l, align 4
  %idxprom418 = sext i32 %220 to i64
  %arrayidx419 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom418
  %221 = load i32* %arrayidx419, align 4
  %cmp420 = icmp eq i32 %221, 7
  br i1 %cmp420, label %if.then425, label %lor.lhs.false421

lor.lhs.false421:                                 ; preds = %for.end417
  %222 = load i32* %l, align 4
  %idxprom422 = sext i32 %222 to i64
  %arrayidx423 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom422
  %223 = load i32* %arrayidx423, align 4
  %cmp424 = icmp eq i32 %223, 9
  br i1 %cmp424, label %if.then425, label %if.end426

if.then425:                                       ; preds = %lor.lhs.false421, %for.end417
  store i32 0, i32* %retval
  br label %return

if.end426:                                        ; preds = %lor.lhs.false421
  br label %if.end427

if.end427:                                        ; preds = %if.end426, %if.end407
  br label %if.end524

if.else428:                                       ; preds = %if.else381
  %224 = load i32* %from, align 4
  %idxprom429 = sext i32 %224 to i64
  %arrayidx430 = getelementptr inbounds [144 x i32]* @Xdiagl, i32 0, i64 %idxprom429
  %225 = load i32* %arrayidx430, align 4
  %226 = load i32* @bking_loc, align 4
  %idxprom431 = sext i32 %226 to i64
  %arrayidx432 = getelementptr inbounds [144 x i32]* @Xdiagl, i32 0, i64 %idxprom431
  %227 = load i32* %arrayidx432, align 4
  %cmp433 = icmp eq i32 %225, %227
  br i1 %cmp433, label %if.then434, label %if.else475

if.then434:                                       ; preds = %if.else428
  %228 = load i32* @bking_loc, align 4
  %229 = load i32* %from, align 4
  %cmp435 = icmp sgt i32 %228, %229
  br i1 %cmp435, label %if.then436, label %if.else455

if.then436:                                       ; preds = %if.then434
  %230 = load i32* @bking_loc, align 4
  %sub437 = sub nsw i32 %230, 13
  store i32 %sub437, i32* %l, align 4
  br label %for.cond438

for.cond438:                                      ; preds = %for.inc443, %if.then436
  %231 = load i32* %l, align 4
  %idxprom439 = sext i32 %231 to i64
  %arrayidx440 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom439
  %232 = load i32* %arrayidx440, align 4
  %cmp441 = icmp eq i32 %232, 13
  br i1 %cmp441, label %for.body442, label %for.end445

for.body442:                                      ; preds = %for.cond438
  br label %for.inc443

for.inc443:                                       ; preds = %for.body442
  %233 = load i32* %l, align 4
  %sub444 = sub nsw i32 %233, 13
  store i32 %sub444, i32* %l, align 4
  br label %for.cond438

for.end445:                                       ; preds = %for.cond438
  %234 = load i32* %l, align 4
  %idxprom446 = sext i32 %234 to i64
  %arrayidx447 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom446
  %235 = load i32* %arrayidx447, align 4
  %cmp448 = icmp eq i32 %235, 11
  br i1 %cmp448, label %if.then453, label %lor.lhs.false449

lor.lhs.false449:                                 ; preds = %for.end445
  %236 = load i32* %l, align 4
  %idxprom450 = sext i32 %236 to i64
  %arrayidx451 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom450
  %237 = load i32* %arrayidx451, align 4
  %cmp452 = icmp eq i32 %237, 9
  br i1 %cmp452, label %if.then453, label %if.end454

if.then453:                                       ; preds = %lor.lhs.false449, %for.end445
  store i32 0, i32* %retval
  br label %return

if.end454:                                        ; preds = %lor.lhs.false449
  br label %if.end474

if.else455:                                       ; preds = %if.then434
  %238 = load i32* @bking_loc, align 4
  %add456 = add nsw i32 %238, 13
  store i32 %add456, i32* %l, align 4
  br label %for.cond457

for.cond457:                                      ; preds = %for.inc462, %if.else455
  %239 = load i32* %l, align 4
  %idxprom458 = sext i32 %239 to i64
  %arrayidx459 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom458
  %240 = load i32* %arrayidx459, align 4
  %cmp460 = icmp eq i32 %240, 13
  br i1 %cmp460, label %for.body461, label %for.end464

for.body461:                                      ; preds = %for.cond457
  br label %for.inc462

for.inc462:                                       ; preds = %for.body461
  %241 = load i32* %l, align 4
  %add463 = add nsw i32 %241, 13
  store i32 %add463, i32* %l, align 4
  br label %for.cond457

for.end464:                                       ; preds = %for.cond457
  %242 = load i32* %l, align 4
  %idxprom465 = sext i32 %242 to i64
  %arrayidx466 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom465
  %243 = load i32* %arrayidx466, align 4
  %cmp467 = icmp eq i32 %243, 11
  br i1 %cmp467, label %if.then472, label %lor.lhs.false468

lor.lhs.false468:                                 ; preds = %for.end464
  %244 = load i32* %l, align 4
  %idxprom469 = sext i32 %244 to i64
  %arrayidx470 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom469
  %245 = load i32* %arrayidx470, align 4
  %cmp471 = icmp eq i32 %245, 9
  br i1 %cmp471, label %if.then472, label %if.end473

if.then472:                                       ; preds = %lor.lhs.false468, %for.end464
  store i32 0, i32* %retval
  br label %return

if.end473:                                        ; preds = %lor.lhs.false468
  br label %if.end474

if.end474:                                        ; preds = %if.end473, %if.end454
  br label %if.end523

if.else475:                                       ; preds = %if.else428
  %246 = load i32* %from, align 4
  %idxprom476 = sext i32 %246 to i64
  %arrayidx477 = getelementptr inbounds [144 x i32]* @Xdiagr, i32 0, i64 %idxprom476
  %247 = load i32* %arrayidx477, align 4
  %248 = load i32* @bking_loc, align 4
  %idxprom478 = sext i32 %248 to i64
  %arrayidx479 = getelementptr inbounds [144 x i32]* @Xdiagr, i32 0, i64 %idxprom478
  %249 = load i32* %arrayidx479, align 4
  %cmp480 = icmp eq i32 %247, %249
  br i1 %cmp480, label %if.then481, label %if.end522

if.then481:                                       ; preds = %if.else475
  %250 = load i32* @bking_loc, align 4
  %251 = load i32* %from, align 4
  %cmp482 = icmp sgt i32 %250, %251
  br i1 %cmp482, label %if.then483, label %if.else502

if.then483:                                       ; preds = %if.then481
  %252 = load i32* @bking_loc, align 4
  %sub484 = sub nsw i32 %252, 11
  store i32 %sub484, i32* %l, align 4
  br label %for.cond485

for.cond485:                                      ; preds = %for.inc490, %if.then483
  %253 = load i32* %l, align 4
  %idxprom486 = sext i32 %253 to i64
  %arrayidx487 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom486
  %254 = load i32* %arrayidx487, align 4
  %cmp488 = icmp eq i32 %254, 13
  br i1 %cmp488, label %for.body489, label %for.end492

for.body489:                                      ; preds = %for.cond485
  br label %for.inc490

for.inc490:                                       ; preds = %for.body489
  %255 = load i32* %l, align 4
  %sub491 = sub nsw i32 %255, 11
  store i32 %sub491, i32* %l, align 4
  br label %for.cond485

for.end492:                                       ; preds = %for.cond485
  %256 = load i32* %l, align 4
  %idxprom493 = sext i32 %256 to i64
  %arrayidx494 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom493
  %257 = load i32* %arrayidx494, align 4
  %cmp495 = icmp eq i32 %257, 11
  br i1 %cmp495, label %if.then500, label %lor.lhs.false496

lor.lhs.false496:                                 ; preds = %for.end492
  %258 = load i32* %l, align 4
  %idxprom497 = sext i32 %258 to i64
  %arrayidx498 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom497
  %259 = load i32* %arrayidx498, align 4
  %cmp499 = icmp eq i32 %259, 9
  br i1 %cmp499, label %if.then500, label %if.end501

if.then500:                                       ; preds = %lor.lhs.false496, %for.end492
  store i32 0, i32* %retval
  br label %return

if.end501:                                        ; preds = %lor.lhs.false496
  br label %if.end521

if.else502:                                       ; preds = %if.then481
  %260 = load i32* @bking_loc, align 4
  %add503 = add nsw i32 %260, 11
  store i32 %add503, i32* %l, align 4
  br label %for.cond504

for.cond504:                                      ; preds = %for.inc509, %if.else502
  %261 = load i32* %l, align 4
  %idxprom505 = sext i32 %261 to i64
  %arrayidx506 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom505
  %262 = load i32* %arrayidx506, align 4
  %cmp507 = icmp eq i32 %262, 13
  br i1 %cmp507, label %for.body508, label %for.end511

for.body508:                                      ; preds = %for.cond504
  br label %for.inc509

for.inc509:                                       ; preds = %for.body508
  %263 = load i32* %l, align 4
  %add510 = add nsw i32 %263, 11
  store i32 %add510, i32* %l, align 4
  br label %for.cond504

for.end511:                                       ; preds = %for.cond504
  %264 = load i32* %l, align 4
  %idxprom512 = sext i32 %264 to i64
  %arrayidx513 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom512
  %265 = load i32* %arrayidx513, align 4
  %cmp514 = icmp eq i32 %265, 11
  br i1 %cmp514, label %if.then519, label %lor.lhs.false515

lor.lhs.false515:                                 ; preds = %for.end511
  %266 = load i32* %l, align 4
  %idxprom516 = sext i32 %266 to i64
  %arrayidx517 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom516
  %267 = load i32* %arrayidx517, align 4
  %cmp518 = icmp eq i32 %267, 9
  br i1 %cmp518, label %if.then519, label %if.end520

if.then519:                                       ; preds = %lor.lhs.false515, %for.end511
  store i32 0, i32* %retval
  br label %return

if.end520:                                        ; preds = %lor.lhs.false515
  br label %if.end521

if.end521:                                        ; preds = %if.end520, %if.end501
  br label %if.end522

if.end522:                                        ; preds = %if.end521, %if.else475
  br label %if.end523

if.end523:                                        ; preds = %if.end522, %if.end474
  br label %if.end524

if.end524:                                        ; preds = %if.end523, %if.end427
  br label %if.end525

if.end525:                                        ; preds = %if.end524, %if.end380
  store i32 1, i32* %retval
  br label %return

if.end526:                                        ; preds = %sw.epilog
  br label %if.end527

if.end527:                                        ; preds = %if.end526, %if.then69
  %268 = load i32* @bking_loc, align 4
  %call528 = call i32 @is_attacked(i32 %268, i32 1)
  %tobool529 = icmp ne i32 %call528, 0
  br i1 %tobool529, label %if.then530, label %if.else531

if.then530:                                       ; preds = %if.end527
  store i32 0, i32* %retval
  br label %return

if.else531:                                       ; preds = %if.end527
  store i32 1, i32* %retval
  br label %return

if.else532:                                       ; preds = %if.else
  %269 = load i32* %incheck.addr, align 4
  %tobool533 = icmp ne i32 %269, 0
  br i1 %tobool533, label %if.end1010, label %if.then534

if.then534:                                       ; preds = %if.else532
  %270 = load i32* %m.addr, align 4
  %idxprom535 = sext i32 %270 to i64
  %271 = load %struct.move_s** %moves.addr, align 8
  %bitcast1062 = bitcast %struct.move_s** %moves.addr to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast1062, i8** %base.alloca1063, i8** %bound.alloca1064)
  %base.load1065 = load i8** %base.alloca1063
  %bound.load1066 = load i8** %bound.alloca1064
  %arrayidx536 = getelementptr inbounds %struct.move_s* %271, i64 %idxprom535
  %from537 = getelementptr inbounds %struct.move_s* %arrayidx536, i32 0, i32 0
  %272 = load i32* %from537, align 4
  %cmp538 = icmp eq i32 %272, 0
  br i1 %cmp538, label %if.then539, label %if.end540

if.then539:                                       ; preds = %if.then534
  store i32 1, i32* %retval
  br label %return

if.end540:                                        ; preds = %if.then534
  %273 = load i32* %m.addr, align 4
  %idxprom541 = sext i32 %273 to i64
  %274 = load %struct.move_s** %moves.addr, align 8
  %bitcast1072 = bitcast %struct.move_s** %moves.addr to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast1072, i8** %base.alloca1073, i8** %bound.alloca1074)
  %base.load1075 = load i8** %base.alloca1073
  %bound.load1076 = load i8** %bound.alloca1074
  %arrayidx542 = getelementptr inbounds %struct.move_s* %274, i64 %idxprom541
  %promoted543 = getelementptr inbounds %struct.move_s* %arrayidx542, i32 0, i32 3
  %275 = load i32* %promoted543, align 4
  %tobool544 = icmp ne i32 %275, 0
  br i1 %tobool544, label %cond.true545, label %cond.false546

cond.true545:                                     ; preds = %if.end540
  br label %cond.end549

cond.false546:                                    ; preds = %if.end540
  %276 = load i32* %target, align 4
  %idxprom547 = sext i32 %276 to i64
  %arrayidx548 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom547
  %277 = load i32* %arrayidx548, align 4
  br label %cond.end549

cond.end549:                                      ; preds = %cond.false546, %cond.true545
  %cond550 = phi i32 [ 1, %cond.true545 ], [ %277, %cond.false546 ]
  switch i32 %cond550, label %sw.default812 [
    i32 1, label %sw.bb551
    i32 3, label %sw.bb603
    i32 11, label %sw.bb629
    i32 7, label %sw.bb665
    i32 9, label %sw.bb701
  ]

sw.bb551:                                         ; preds = %cond.end549
  %278 = load i32* %m.addr, align 4
  %idxprom552 = sext i32 %278 to i64
  %279 = load %struct.move_s** %moves.addr, align 8
  %bitcast1082 = bitcast %struct.move_s** %moves.addr to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast1082, i8** %base.alloca1083, i8** %bound.alloca1084)
  %base.load1085 = load i8** %base.alloca1083
  %bound.load1086 = load i8** %bound.alloca1084
  %arrayidx553 = getelementptr inbounds %struct.move_s* %279, i64 %idxprom552
  %captured554 = getelementptr inbounds %struct.move_s* %arrayidx553, i32 0, i32 2
  %280 = load i32* %captured554, align 4
  %cmp555 = icmp ne i32 %280, 13
  br i1 %cmp555, label %if.then556, label %if.else582

if.then556:                                       ; preds = %sw.bb551
  %281 = load i32* %from, align 4
  %idxprom557 = sext i32 %281 to i64
  %arrayidx558 = getelementptr inbounds [144 x i32]* @Xfile, i32 0, i64 %idxprom557
  %282 = load i32* %arrayidx558, align 4
  %283 = load i32* @wking_loc, align 4
  %idxprom559 = sext i32 %283 to i64
  %arrayidx560 = getelementptr inbounds [144 x i32]* @Xfile, i32 0, i64 %idxprom559
  %284 = load i32* %arrayidx560, align 4
  %cmp561 = icmp ne i32 %282, %284
  br i1 %cmp561, label %land.lhs.true562, label %if.end581

land.lhs.true562:                                 ; preds = %if.then556
  %285 = load i32* %from, align 4
  %idxprom563 = sext i32 %285 to i64
  %arrayidx564 = getelementptr inbounds [144 x i32]* @Xrank, i32 0, i64 %idxprom563
  %286 = load i32* %arrayidx564, align 4
  %287 = load i32* @wking_loc, align 4
  %idxprom565 = sext i32 %287 to i64
  %arrayidx566 = getelementptr inbounds [144 x i32]* @Xrank, i32 0, i64 %idxprom565
  %288 = load i32* %arrayidx566, align 4
  %cmp567 = icmp ne i32 %286, %288
  br i1 %cmp567, label %land.lhs.true568, label %if.end581

land.lhs.true568:                                 ; preds = %land.lhs.true562
  %289 = load i32* %from, align 4
  %idxprom569 = sext i32 %289 to i64
  %arrayidx570 = getelementptr inbounds [144 x i32]* @Xdiagl, i32 0, i64 %idxprom569
  %290 = load i32* %arrayidx570, align 4
  %291 = load i32* @wking_loc, align 4
  %idxprom571 = sext i32 %291 to i64
  %arrayidx572 = getelementptr inbounds [144 x i32]* @Xdiagl, i32 0, i64 %idxprom571
  %292 = load i32* %arrayidx572, align 4
  %cmp573 = icmp ne i32 %290, %292
  br i1 %cmp573, label %land.lhs.true574, label %if.end581

land.lhs.true574:                                 ; preds = %land.lhs.true568
  %293 = load i32* %from, align 4
  %idxprom575 = sext i32 %293 to i64
  %arrayidx576 = getelementptr inbounds [144 x i32]* @Xdiagr, i32 0, i64 %idxprom575
  %294 = load i32* %arrayidx576, align 4
  %295 = load i32* @wking_loc, align 4
  %idxprom577 = sext i32 %295 to i64
  %arrayidx578 = getelementptr inbounds [144 x i32]* @Xdiagr, i32 0, i64 %idxprom577
  %296 = load i32* %arrayidx578, align 4
  %cmp579 = icmp ne i32 %294, %296
  br i1 %cmp579, label %if.then580, label %if.end581

if.then580:                                       ; preds = %land.lhs.true574
  store i32 1, i32* %retval
  br label %return

if.end581:                                        ; preds = %land.lhs.true574, %land.lhs.true568, %land.lhs.true562, %if.then556
  br label %if.end602

if.else582:                                       ; preds = %sw.bb551
  %297 = load i32* %from, align 4
  %idxprom583 = sext i32 %297 to i64
  %arrayidx584 = getelementptr inbounds [144 x i32]* @Xrank, i32 0, i64 %idxprom583
  %298 = load i32* %arrayidx584, align 4
  %299 = load i32* @wking_loc, align 4
  %idxprom585 = sext i32 %299 to i64
  %arrayidx586 = getelementptr inbounds [144 x i32]* @Xrank, i32 0, i64 %idxprom585
  %300 = load i32* %arrayidx586, align 4
  %cmp587 = icmp ne i32 %298, %300
  br i1 %cmp587, label %land.lhs.true588, label %if.end601

land.lhs.true588:                                 ; preds = %if.else582
  %301 = load i32* %from, align 4
  %idxprom589 = sext i32 %301 to i64
  %arrayidx590 = getelementptr inbounds [144 x i32]* @Xdiagl, i32 0, i64 %idxprom589
  %302 = load i32* %arrayidx590, align 4
  %303 = load i32* @wking_loc, align 4
  %idxprom591 = sext i32 %303 to i64
  %arrayidx592 = getelementptr inbounds [144 x i32]* @Xdiagl, i32 0, i64 %idxprom591
  %304 = load i32* %arrayidx592, align 4
  %cmp593 = icmp ne i32 %302, %304
  br i1 %cmp593, label %land.lhs.true594, label %if.end601

land.lhs.true594:                                 ; preds = %land.lhs.true588
  %305 = load i32* %from, align 4
  %idxprom595 = sext i32 %305 to i64
  %arrayidx596 = getelementptr inbounds [144 x i32]* @Xdiagr, i32 0, i64 %idxprom595
  %306 = load i32* %arrayidx596, align 4
  %307 = load i32* @wking_loc, align 4
  %idxprom597 = sext i32 %307 to i64
  %arrayidx598 = getelementptr inbounds [144 x i32]* @Xdiagr, i32 0, i64 %idxprom597
  %308 = load i32* %arrayidx598, align 4
  %cmp599 = icmp ne i32 %306, %308
  br i1 %cmp599, label %if.then600, label %if.end601

if.then600:                                       ; preds = %land.lhs.true594
  store i32 1, i32* %retval
  br label %return

if.end601:                                        ; preds = %land.lhs.true594, %land.lhs.true588, %if.else582
  br label %if.end602

if.end602:                                        ; preds = %if.end601, %if.end581
  br label %sw.epilog813

sw.bb603:                                         ; preds = %cond.end549
  %309 = load i32* %from, align 4
  %idxprom604 = sext i32 %309 to i64
  %arrayidx605 = getelementptr inbounds [144 x i32]* @Xfile, i32 0, i64 %idxprom604
  %310 = load i32* %arrayidx605, align 4
  %311 = load i32* @wking_loc, align 4
  %idxprom606 = sext i32 %311 to i64
  %arrayidx607 = getelementptr inbounds [144 x i32]* @Xfile, i32 0, i64 %idxprom606
  %312 = load i32* %arrayidx607, align 4
  %cmp608 = icmp ne i32 %310, %312
  br i1 %cmp608, label %land.lhs.true609, label %if.end628

land.lhs.true609:                                 ; preds = %sw.bb603
  %313 = load i32* %from, align 4
  %idxprom610 = sext i32 %313 to i64
  %arrayidx611 = getelementptr inbounds [144 x i32]* @Xrank, i32 0, i64 %idxprom610
  %314 = load i32* %arrayidx611, align 4
  %315 = load i32* @wking_loc, align 4
  %idxprom612 = sext i32 %315 to i64
  %arrayidx613 = getelementptr inbounds [144 x i32]* @Xrank, i32 0, i64 %idxprom612
  %316 = load i32* %arrayidx613, align 4
  %cmp614 = icmp ne i32 %314, %316
  br i1 %cmp614, label %land.lhs.true615, label %if.end628

land.lhs.true615:                                 ; preds = %land.lhs.true609
  %317 = load i32* %from, align 4
  %idxprom616 = sext i32 %317 to i64
  %arrayidx617 = getelementptr inbounds [144 x i32]* @Xdiagl, i32 0, i64 %idxprom616
  %318 = load i32* %arrayidx617, align 4
  %319 = load i32* @wking_loc, align 4
  %idxprom618 = sext i32 %319 to i64
  %arrayidx619 = getelementptr inbounds [144 x i32]* @Xdiagl, i32 0, i64 %idxprom618
  %320 = load i32* %arrayidx619, align 4
  %cmp620 = icmp ne i32 %318, %320
  br i1 %cmp620, label %land.lhs.true621, label %if.end628

land.lhs.true621:                                 ; preds = %land.lhs.true615
  %321 = load i32* %from, align 4
  %idxprom622 = sext i32 %321 to i64
  %arrayidx623 = getelementptr inbounds [144 x i32]* @Xdiagr, i32 0, i64 %idxprom622
  %322 = load i32* %arrayidx623, align 4
  %323 = load i32* @wking_loc, align 4
  %idxprom624 = sext i32 %323 to i64
  %arrayidx625 = getelementptr inbounds [144 x i32]* @Xdiagr, i32 0, i64 %idxprom624
  %324 = load i32* %arrayidx625, align 4
  %cmp626 = icmp ne i32 %322, %324
  br i1 %cmp626, label %if.then627, label %if.end628

if.then627:                                       ; preds = %land.lhs.true621
  store i32 1, i32* %retval
  br label %return

if.end628:                                        ; preds = %land.lhs.true621, %land.lhs.true615, %land.lhs.true609, %sw.bb603
  br label %sw.epilog813

sw.bb629:                                         ; preds = %cond.end549
  %325 = load i32* %from, align 4
  %idxprom630 = sext i32 %325 to i64
  %arrayidx631 = getelementptr inbounds [144 x i32]* @Xfile, i32 0, i64 %idxprom630
  %326 = load i32* %arrayidx631, align 4
  %327 = load i32* @wking_loc, align 4
  %idxprom632 = sext i32 %327 to i64
  %arrayidx633 = getelementptr inbounds [144 x i32]* @Xfile, i32 0, i64 %idxprom632
  %328 = load i32* %arrayidx633, align 4
  %cmp634 = icmp ne i32 %326, %328
  br i1 %cmp634, label %land.lhs.true635, label %if.end664

land.lhs.true635:                                 ; preds = %sw.bb629
  %329 = load i32* %from, align 4
  %idxprom636 = sext i32 %329 to i64
  %arrayidx637 = getelementptr inbounds [144 x i32]* @Xrank, i32 0, i64 %idxprom636
  %330 = load i32* %arrayidx637, align 4
  %331 = load i32* @wking_loc, align 4
  %idxprom638 = sext i32 %331 to i64
  %arrayidx639 = getelementptr inbounds [144 x i32]* @Xrank, i32 0, i64 %idxprom638
  %332 = load i32* %arrayidx639, align 4
  %cmp640 = icmp ne i32 %330, %332
  br i1 %cmp640, label %if.then641, label %if.end664

if.then641:                                       ; preds = %land.lhs.true635
  %333 = load i32* %from, align 4
  %idxprom642 = sext i32 %333 to i64
  %arrayidx643 = getelementptr inbounds [144 x i32]* @Xdiagl, i32 0, i64 %idxprom642
  %334 = load i32* %arrayidx643, align 4
  %335 = load i32* %target, align 4
  %idxprom644 = sext i32 %335 to i64
  %arrayidx645 = getelementptr inbounds [144 x i32]* @Xdiagl, i32 0, i64 %idxprom644
  %336 = load i32* %arrayidx645, align 4
  %cmp646 = icmp eq i32 %334, %336
  br i1 %cmp646, label %if.then647, label %if.else655

if.then647:                                       ; preds = %if.then641
  %337 = load i32* %from, align 4
  %idxprom648 = sext i32 %337 to i64
  %arrayidx649 = getelementptr inbounds [144 x i32]* @Xdiagr, i32 0, i64 %idxprom648
  %338 = load i32* %arrayidx649, align 4
  %339 = load i32* @wking_loc, align 4
  %idxprom650 = sext i32 %339 to i64
  %arrayidx651 = getelementptr inbounds [144 x i32]* @Xdiagr, i32 0, i64 %idxprom650
  %340 = load i32* %arrayidx651, align 4
  %cmp652 = icmp ne i32 %338, %340
  br i1 %cmp652, label %if.then653, label %if.end654

if.then653:                                       ; preds = %if.then647
  store i32 1, i32* %retval
  br label %return

if.end654:                                        ; preds = %if.then647
  br label %if.end663

if.else655:                                       ; preds = %if.then641
  %341 = load i32* %from, align 4
  %idxprom656 = sext i32 %341 to i64
  %arrayidx657 = getelementptr inbounds [144 x i32]* @Xdiagl, i32 0, i64 %idxprom656
  %342 = load i32* %arrayidx657, align 4
  %343 = load i32* @wking_loc, align 4
  %idxprom658 = sext i32 %343 to i64
  %arrayidx659 = getelementptr inbounds [144 x i32]* @Xdiagl, i32 0, i64 %idxprom658
  %344 = load i32* %arrayidx659, align 4
  %cmp660 = icmp ne i32 %342, %344
  br i1 %cmp660, label %if.then661, label %if.end662

if.then661:                                       ; preds = %if.else655
  store i32 1, i32* %retval
  br label %return

if.end662:                                        ; preds = %if.else655
  br label %if.end663

if.end663:                                        ; preds = %if.end662, %if.end654
  br label %if.end664

if.end664:                                        ; preds = %if.end663, %land.lhs.true635, %sw.bb629
  br label %sw.epilog813

sw.bb665:                                         ; preds = %cond.end549
  %345 = load i32* %from, align 4
  %idxprom666 = sext i32 %345 to i64
  %arrayidx667 = getelementptr inbounds [144 x i32]* @Xdiagr, i32 0, i64 %idxprom666
  %346 = load i32* %arrayidx667, align 4
  %347 = load i32* @wking_loc, align 4
  %idxprom668 = sext i32 %347 to i64
  %arrayidx669 = getelementptr inbounds [144 x i32]* @Xdiagr, i32 0, i64 %idxprom668
  %348 = load i32* %arrayidx669, align 4
  %cmp670 = icmp ne i32 %346, %348
  br i1 %cmp670, label %land.lhs.true671, label %if.end700

land.lhs.true671:                                 ; preds = %sw.bb665
  %349 = load i32* %from, align 4
  %idxprom672 = sext i32 %349 to i64
  %arrayidx673 = getelementptr inbounds [144 x i32]* @Xdiagl, i32 0, i64 %idxprom672
  %350 = load i32* %arrayidx673, align 4
  %351 = load i32* @wking_loc, align 4
  %idxprom674 = sext i32 %351 to i64
  %arrayidx675 = getelementptr inbounds [144 x i32]* @Xdiagl, i32 0, i64 %idxprom674
  %352 = load i32* %arrayidx675, align 4
  %cmp676 = icmp ne i32 %350, %352
  br i1 %cmp676, label %if.then677, label %if.end700

if.then677:                                       ; preds = %land.lhs.true671
  %353 = load i32* %from, align 4
  %idxprom678 = sext i32 %353 to i64
  %arrayidx679 = getelementptr inbounds [144 x i32]* @Xrank, i32 0, i64 %idxprom678
  %354 = load i32* %arrayidx679, align 4
  %355 = load i32* %target, align 4
  %idxprom680 = sext i32 %355 to i64
  %arrayidx681 = getelementptr inbounds [144 x i32]* @Xrank, i32 0, i64 %idxprom680
  %356 = load i32* %arrayidx681, align 4
  %cmp682 = icmp eq i32 %354, %356
  br i1 %cmp682, label %if.then683, label %if.else691

if.then683:                                       ; preds = %if.then677
  %357 = load i32* %from, align 4
  %idxprom684 = sext i32 %357 to i64
  %arrayidx685 = getelementptr inbounds [144 x i32]* @Xfile, i32 0, i64 %idxprom684
  %358 = load i32* %arrayidx685, align 4
  %359 = load i32* @wking_loc, align 4
  %idxprom686 = sext i32 %359 to i64
  %arrayidx687 = getelementptr inbounds [144 x i32]* @Xfile, i32 0, i64 %idxprom686
  %360 = load i32* %arrayidx687, align 4
  %cmp688 = icmp ne i32 %358, %360
  br i1 %cmp688, label %if.then689, label %if.end690

if.then689:                                       ; preds = %if.then683
  store i32 1, i32* %retval
  br label %return

if.end690:                                        ; preds = %if.then683
  br label %if.end699

if.else691:                                       ; preds = %if.then677
  %361 = load i32* %from, align 4
  %idxprom692 = sext i32 %361 to i64
  %arrayidx693 = getelementptr inbounds [144 x i32]* @Xrank, i32 0, i64 %idxprom692
  %362 = load i32* %arrayidx693, align 4
  %363 = load i32* @wking_loc, align 4
  %idxprom694 = sext i32 %363 to i64
  %arrayidx695 = getelementptr inbounds [144 x i32]* @Xrank, i32 0, i64 %idxprom694
  %364 = load i32* %arrayidx695, align 4
  %cmp696 = icmp ne i32 %362, %364
  br i1 %cmp696, label %if.then697, label %if.end698

if.then697:                                       ; preds = %if.else691
  store i32 1, i32* %retval
  br label %return

if.end698:                                        ; preds = %if.else691
  br label %if.end699

if.end699:                                        ; preds = %if.end698, %if.end690
  br label %if.end700

if.end700:                                        ; preds = %if.end699, %land.lhs.true671, %sw.bb665
  br label %sw.epilog813

sw.bb701:                                         ; preds = %cond.end549
  %365 = load i32* %from, align 4
  %idxprom702 = sext i32 %365 to i64
  %arrayidx703 = getelementptr inbounds [144 x i32]* @Xfile, i32 0, i64 %idxprom702
  %366 = load i32* %arrayidx703, align 4
  %367 = load i32* %m.addr, align 4
  %idxprom704 = sext i32 %367 to i64
  %368 = load %struct.move_s** %moves.addr, align 8
  %bitcast1087 = bitcast %struct.move_s** %moves.addr to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast1087, i8** %base.alloca1088, i8** %bound.alloca1089)
  %base.load1090 = load i8** %base.alloca1088
  %bound.load1091 = load i8** %bound.alloca1089
  %arrayidx705 = getelementptr inbounds %struct.move_s* %368, i64 %idxprom704
  %target706 = getelementptr inbounds %struct.move_s* %arrayidx705, i32 0, i32 1
  %369 = load i32* %target706, align 4
  %idxprom707 = sext i32 %369 to i64
  %arrayidx708 = getelementptr inbounds [144 x i32]* @Xfile, i32 0, i64 %idxprom707
  %370 = load i32* %arrayidx708, align 4
  %cmp709 = icmp eq i32 %366, %370
  br i1 %cmp709, label %if.then710, label %if.else730

if.then710:                                       ; preds = %sw.bb701
  %371 = load i32* %from, align 4
  %idxprom711 = sext i32 %371 to i64
  %arrayidx712 = getelementptr inbounds [144 x i32]* @Xdiagr, i32 0, i64 %idxprom711
  %372 = load i32* %arrayidx712, align 4
  %373 = load i32* @wking_loc, align 4
  %idxprom713 = sext i32 %373 to i64
  %arrayidx714 = getelementptr inbounds [144 x i32]* @Xdiagr, i32 0, i64 %idxprom713
  %374 = load i32* %arrayidx714, align 4
  %cmp715 = icmp ne i32 %372, %374
  br i1 %cmp715, label %land.lhs.true716, label %if.end729

land.lhs.true716:                                 ; preds = %if.then710
  %375 = load i32* %from, align 4
  %idxprom717 = sext i32 %375 to i64
  %arrayidx718 = getelementptr inbounds [144 x i32]* @Xdiagl, i32 0, i64 %idxprom717
  %376 = load i32* %arrayidx718, align 4
  %377 = load i32* @wking_loc, align 4
  %idxprom719 = sext i32 %377 to i64
  %arrayidx720 = getelementptr inbounds [144 x i32]* @Xdiagl, i32 0, i64 %idxprom719
  %378 = load i32* %arrayidx720, align 4
  %cmp721 = icmp ne i32 %376, %378
  br i1 %cmp721, label %land.lhs.true722, label %if.end729

land.lhs.true722:                                 ; preds = %land.lhs.true716
  %379 = load i32* %from, align 4
  %idxprom723 = sext i32 %379 to i64
  %arrayidx724 = getelementptr inbounds [144 x i32]* @Xrank, i32 0, i64 %idxprom723
  %380 = load i32* %arrayidx724, align 4
  %381 = load i32* @wking_loc, align 4
  %idxprom725 = sext i32 %381 to i64
  %arrayidx726 = getelementptr inbounds [144 x i32]* @Xrank, i32 0, i64 %idxprom725
  %382 = load i32* %arrayidx726, align 4
  %cmp727 = icmp ne i32 %380, %382
  br i1 %cmp727, label %if.then728, label %if.end729

if.then728:                                       ; preds = %land.lhs.true722
  store i32 1, i32* %retval
  br label %return

if.end729:                                        ; preds = %land.lhs.true722, %land.lhs.true716, %if.then710
  br label %if.end811

if.else730:                                       ; preds = %sw.bb701
  %383 = load i32* %from, align 4
  %idxprom731 = sext i32 %383 to i64
  %arrayidx732 = getelementptr inbounds [144 x i32]* @Xrank, i32 0, i64 %idxprom731
  %384 = load i32* %arrayidx732, align 4
  %385 = load i32* %target, align 4
  %idxprom733 = sext i32 %385 to i64
  %arrayidx734 = getelementptr inbounds [144 x i32]* @Xrank, i32 0, i64 %idxprom733
  %386 = load i32* %arrayidx734, align 4
  %cmp735 = icmp eq i32 %384, %386
  br i1 %cmp735, label %if.then736, label %if.else756

if.then736:                                       ; preds = %if.else730
  %387 = load i32* %from, align 4
  %idxprom737 = sext i32 %387 to i64
  %arrayidx738 = getelementptr inbounds [144 x i32]* @Xdiagr, i32 0, i64 %idxprom737
  %388 = load i32* %arrayidx738, align 4
  %389 = load i32* @wking_loc, align 4
  %idxprom739 = sext i32 %389 to i64
  %arrayidx740 = getelementptr inbounds [144 x i32]* @Xdiagr, i32 0, i64 %idxprom739
  %390 = load i32* %arrayidx740, align 4
  %cmp741 = icmp ne i32 %388, %390
  br i1 %cmp741, label %land.lhs.true742, label %if.end755

land.lhs.true742:                                 ; preds = %if.then736
  %391 = load i32* %from, align 4
  %idxprom743 = sext i32 %391 to i64
  %arrayidx744 = getelementptr inbounds [144 x i32]* @Xfile, i32 0, i64 %idxprom743
  %392 = load i32* %arrayidx744, align 4
  %393 = load i32* @wking_loc, align 4
  %idxprom745 = sext i32 %393 to i64
  %arrayidx746 = getelementptr inbounds [144 x i32]* @Xfile, i32 0, i64 %idxprom745
  %394 = load i32* %arrayidx746, align 4
  %cmp747 = icmp ne i32 %392, %394
  br i1 %cmp747, label %land.lhs.true748, label %if.end755

land.lhs.true748:                                 ; preds = %land.lhs.true742
  %395 = load i32* %from, align 4
  %idxprom749 = sext i32 %395 to i64
  %arrayidx750 = getelementptr inbounds [144 x i32]* @Xdiagl, i32 0, i64 %idxprom749
  %396 = load i32* %arrayidx750, align 4
  %397 = load i32* @wking_loc, align 4
  %idxprom751 = sext i32 %397 to i64
  %arrayidx752 = getelementptr inbounds [144 x i32]* @Xdiagl, i32 0, i64 %idxprom751
  %398 = load i32* %arrayidx752, align 4
  %cmp753 = icmp ne i32 %396, %398
  br i1 %cmp753, label %if.then754, label %if.end755

if.then754:                                       ; preds = %land.lhs.true748
  store i32 1, i32* %retval
  br label %return

if.end755:                                        ; preds = %land.lhs.true748, %land.lhs.true742, %if.then736
  br label %if.end810

if.else756:                                       ; preds = %if.else730
  %399 = load i32* %from, align 4
  %idxprom757 = sext i32 %399 to i64
  %arrayidx758 = getelementptr inbounds [144 x i32]* @Xdiagl, i32 0, i64 %idxprom757
  %400 = load i32* %arrayidx758, align 4
  %401 = load i32* %target, align 4
  %idxprom759 = sext i32 %401 to i64
  %arrayidx760 = getelementptr inbounds [144 x i32]* @Xdiagl, i32 0, i64 %idxprom759
  %402 = load i32* %arrayidx760, align 4
  %cmp761 = icmp eq i32 %400, %402
  br i1 %cmp761, label %if.then762, label %if.else782

if.then762:                                       ; preds = %if.else756
  %403 = load i32* %from, align 4
  %idxprom763 = sext i32 %403 to i64
  %arrayidx764 = getelementptr inbounds [144 x i32]* @Xdiagr, i32 0, i64 %idxprom763
  %404 = load i32* %arrayidx764, align 4
  %405 = load i32* @wking_loc, align 4
  %idxprom765 = sext i32 %405 to i64
  %arrayidx766 = getelementptr inbounds [144 x i32]* @Xdiagr, i32 0, i64 %idxprom765
  %406 = load i32* %arrayidx766, align 4
  %cmp767 = icmp ne i32 %404, %406
  br i1 %cmp767, label %land.lhs.true768, label %if.end781

land.lhs.true768:                                 ; preds = %if.then762
  %407 = load i32* %from, align 4
  %idxprom769 = sext i32 %407 to i64
  %arrayidx770 = getelementptr inbounds [144 x i32]* @Xfile, i32 0, i64 %idxprom769
  %408 = load i32* %arrayidx770, align 4
  %409 = load i32* @wking_loc, align 4
  %idxprom771 = sext i32 %409 to i64
  %arrayidx772 = getelementptr inbounds [144 x i32]* @Xfile, i32 0, i64 %idxprom771
  %410 = load i32* %arrayidx772, align 4
  %cmp773 = icmp ne i32 %408, %410
  br i1 %cmp773, label %land.lhs.true774, label %if.end781

land.lhs.true774:                                 ; preds = %land.lhs.true768
  %411 = load i32* %from, align 4
  %idxprom775 = sext i32 %411 to i64
  %arrayidx776 = getelementptr inbounds [144 x i32]* @Xrank, i32 0, i64 %idxprom775
  %412 = load i32* %arrayidx776, align 4
  %413 = load i32* @wking_loc, align 4
  %idxprom777 = sext i32 %413 to i64
  %arrayidx778 = getelementptr inbounds [144 x i32]* @Xrank, i32 0, i64 %idxprom777
  %414 = load i32* %arrayidx778, align 4
  %cmp779 = icmp ne i32 %412, %414
  br i1 %cmp779, label %if.then780, label %if.end781

if.then780:                                       ; preds = %land.lhs.true774
  store i32 1, i32* %retval
  br label %return

if.end781:                                        ; preds = %land.lhs.true774, %land.lhs.true768, %if.then762
  br label %if.end809

if.else782:                                       ; preds = %if.else756
  %415 = load i32* %from, align 4
  %idxprom783 = sext i32 %415 to i64
  %arrayidx784 = getelementptr inbounds [144 x i32]* @Xdiagr, i32 0, i64 %idxprom783
  %416 = load i32* %arrayidx784, align 4
  %417 = load i32* %target, align 4
  %idxprom785 = sext i32 %417 to i64
  %arrayidx786 = getelementptr inbounds [144 x i32]* @Xdiagr, i32 0, i64 %idxprom785
  %418 = load i32* %arrayidx786, align 4
  %cmp787 = icmp eq i32 %416, %418
  br i1 %cmp787, label %if.then788, label %if.end808

if.then788:                                       ; preds = %if.else782
  %419 = load i32* %from, align 4
  %idxprom789 = sext i32 %419 to i64
  %arrayidx790 = getelementptr inbounds [144 x i32]* @Xdiagl, i32 0, i64 %idxprom789
  %420 = load i32* %arrayidx790, align 4
  %421 = load i32* @wking_loc, align 4
  %idxprom791 = sext i32 %421 to i64
  %arrayidx792 = getelementptr inbounds [144 x i32]* @Xdiagl, i32 0, i64 %idxprom791
  %422 = load i32* %arrayidx792, align 4
  %cmp793 = icmp ne i32 %420, %422
  br i1 %cmp793, label %land.lhs.true794, label %if.end807

land.lhs.true794:                                 ; preds = %if.then788
  %423 = load i32* %from, align 4
  %idxprom795 = sext i32 %423 to i64
  %arrayidx796 = getelementptr inbounds [144 x i32]* @Xfile, i32 0, i64 %idxprom795
  %424 = load i32* %arrayidx796, align 4
  %425 = load i32* @wking_loc, align 4
  %idxprom797 = sext i32 %425 to i64
  %arrayidx798 = getelementptr inbounds [144 x i32]* @Xfile, i32 0, i64 %idxprom797
  %426 = load i32* %arrayidx798, align 4
  %cmp799 = icmp ne i32 %424, %426
  br i1 %cmp799, label %land.lhs.true800, label %if.end807

land.lhs.true800:                                 ; preds = %land.lhs.true794
  %427 = load i32* %from, align 4
  %idxprom801 = sext i32 %427 to i64
  %arrayidx802 = getelementptr inbounds [144 x i32]* @Xrank, i32 0, i64 %idxprom801
  %428 = load i32* %arrayidx802, align 4
  %429 = load i32* @wking_loc, align 4
  %idxprom803 = sext i32 %429 to i64
  %arrayidx804 = getelementptr inbounds [144 x i32]* @Xrank, i32 0, i64 %idxprom803
  %430 = load i32* %arrayidx804, align 4
  %cmp805 = icmp ne i32 %428, %430
  br i1 %cmp805, label %if.then806, label %if.end807

if.then806:                                       ; preds = %land.lhs.true800
  store i32 1, i32* %retval
  br label %return

if.end807:                                        ; preds = %land.lhs.true800, %land.lhs.true794, %if.then788
  br label %if.end808

if.end808:                                        ; preds = %if.end807, %if.else782
  br label %if.end809

if.end809:                                        ; preds = %if.end808, %if.end781
  br label %if.end810

if.end810:                                        ; preds = %if.end809, %if.end755
  br label %if.end811

if.end811:                                        ; preds = %if.end810, %if.end729
  br label %sw.epilog813

sw.default812:                                    ; preds = %cond.end549
  br label %sw.epilog813

sw.epilog813:                                     ; preds = %sw.default812, %if.end811, %if.end700, %if.end664, %if.end628, %if.end602
  %431 = load i32* %target, align 4
  %idxprom814 = sext i32 %431 to i64
  %arrayidx815 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom814
  %432 = load i32* %arrayidx815, align 4
  %cmp816 = icmp ne i32 %432, 5
  br i1 %cmp816, label %if.then817, label %if.end1009

if.then817:                                       ; preds = %sw.epilog813
  %433 = load i32* %from, align 4
  %idxprom818 = sext i32 %433 to i64
  %arrayidx819 = getelementptr inbounds [144 x i32]* @Xfile, i32 0, i64 %idxprom818
  %434 = load i32* %arrayidx819, align 4
  %435 = load i32* @wking_loc, align 4
  %idxprom820 = sext i32 %435 to i64
  %arrayidx821 = getelementptr inbounds [144 x i32]* @Xfile, i32 0, i64 %idxprom820
  %436 = load i32* %arrayidx821, align 4
  %cmp822 = icmp eq i32 %434, %436
  br i1 %cmp822, label %if.then823, label %if.else864

if.then823:                                       ; preds = %if.then817
  %437 = load i32* @wking_loc, align 4
  %438 = load i32* %from, align 4
  %cmp824 = icmp sgt i32 %437, %438
  br i1 %cmp824, label %if.then825, label %if.else844

if.then825:                                       ; preds = %if.then823
  %439 = load i32* @wking_loc, align 4
  %sub826 = sub nsw i32 %439, 12
  store i32 %sub826, i32* %l, align 4
  br label %for.cond827

for.cond827:                                      ; preds = %for.inc832, %if.then825
  %440 = load i32* %l, align 4
  %idxprom828 = sext i32 %440 to i64
  %arrayidx829 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom828
  %441 = load i32* %arrayidx829, align 4
  %cmp830 = icmp eq i32 %441, 13
  br i1 %cmp830, label %for.body831, label %for.end834

for.body831:                                      ; preds = %for.cond827
  br label %for.inc832

for.inc832:                                       ; preds = %for.body831
  %442 = load i32* %l, align 4
  %sub833 = sub nsw i32 %442, 12
  store i32 %sub833, i32* %l, align 4
  br label %for.cond827

for.end834:                                       ; preds = %for.cond827
  %443 = load i32* %l, align 4
  %idxprom835 = sext i32 %443 to i64
  %arrayidx836 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom835
  %444 = load i32* %arrayidx836, align 4
  %cmp837 = icmp eq i32 %444, 8
  br i1 %cmp837, label %if.then842, label %lor.lhs.false838

lor.lhs.false838:                                 ; preds = %for.end834
  %445 = load i32* %l, align 4
  %idxprom839 = sext i32 %445 to i64
  %arrayidx840 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom839
  %446 = load i32* %arrayidx840, align 4
  %cmp841 = icmp eq i32 %446, 10
  br i1 %cmp841, label %if.then842, label %if.end843

if.then842:                                       ; preds = %lor.lhs.false838, %for.end834
  store i32 0, i32* %retval
  br label %return

if.end843:                                        ; preds = %lor.lhs.false838
  br label %if.end863

if.else844:                                       ; preds = %if.then823
  %447 = load i32* @wking_loc, align 4
  %add845 = add nsw i32 %447, 12
  store i32 %add845, i32* %l, align 4
  br label %for.cond846

for.cond846:                                      ; preds = %for.inc851, %if.else844
  %448 = load i32* %l, align 4
  %idxprom847 = sext i32 %448 to i64
  %arrayidx848 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom847
  %449 = load i32* %arrayidx848, align 4
  %cmp849 = icmp eq i32 %449, 13
  br i1 %cmp849, label %for.body850, label %for.end853

for.body850:                                      ; preds = %for.cond846
  br label %for.inc851

for.inc851:                                       ; preds = %for.body850
  %450 = load i32* %l, align 4
  %add852 = add nsw i32 %450, 12
  store i32 %add852, i32* %l, align 4
  br label %for.cond846

for.end853:                                       ; preds = %for.cond846
  %451 = load i32* %l, align 4
  %idxprom854 = sext i32 %451 to i64
  %arrayidx855 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom854
  %452 = load i32* %arrayidx855, align 4
  %cmp856 = icmp eq i32 %452, 8
  br i1 %cmp856, label %if.then861, label %lor.lhs.false857

lor.lhs.false857:                                 ; preds = %for.end853
  %453 = load i32* %l, align 4
  %idxprom858 = sext i32 %453 to i64
  %arrayidx859 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom858
  %454 = load i32* %arrayidx859, align 4
  %cmp860 = icmp eq i32 %454, 10
  br i1 %cmp860, label %if.then861, label %if.end862

if.then861:                                       ; preds = %lor.lhs.false857, %for.end853
  store i32 0, i32* %retval
  br label %return

if.end862:                                        ; preds = %lor.lhs.false857
  br label %if.end863

if.end863:                                        ; preds = %if.end862, %if.end843
  br label %if.end1008

if.else864:                                       ; preds = %if.then817
  %455 = load i32* %from, align 4
  %idxprom865 = sext i32 %455 to i64
  %arrayidx866 = getelementptr inbounds [144 x i32]* @Xrank, i32 0, i64 %idxprom865
  %456 = load i32* %arrayidx866, align 4
  %457 = load i32* @wking_loc, align 4
  %idxprom867 = sext i32 %457 to i64
  %arrayidx868 = getelementptr inbounds [144 x i32]* @Xrank, i32 0, i64 %idxprom867
  %458 = load i32* %arrayidx868, align 4
  %cmp869 = icmp eq i32 %456, %458
  br i1 %cmp869, label %if.then870, label %if.else911

if.then870:                                       ; preds = %if.else864
  %459 = load i32* @wking_loc, align 4
  %460 = load i32* %from, align 4
  %cmp871 = icmp sgt i32 %459, %460
  br i1 %cmp871, label %if.then872, label %if.else891

if.then872:                                       ; preds = %if.then870
  %461 = load i32* @wking_loc, align 4
  %sub873 = sub nsw i32 %461, 1
  store i32 %sub873, i32* %l, align 4
  br label %for.cond874

for.cond874:                                      ; preds = %for.inc879, %if.then872
  %462 = load i32* %l, align 4
  %idxprom875 = sext i32 %462 to i64
  %arrayidx876 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom875
  %463 = load i32* %arrayidx876, align 4
  %cmp877 = icmp eq i32 %463, 13
  br i1 %cmp877, label %for.body878, label %for.end881

for.body878:                                      ; preds = %for.cond874
  br label %for.inc879

for.inc879:                                       ; preds = %for.body878
  %464 = load i32* %l, align 4
  %sub880 = sub nsw i32 %464, 1
  store i32 %sub880, i32* %l, align 4
  br label %for.cond874

for.end881:                                       ; preds = %for.cond874
  %465 = load i32* %l, align 4
  %idxprom882 = sext i32 %465 to i64
  %arrayidx883 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom882
  %466 = load i32* %arrayidx883, align 4
  %cmp884 = icmp eq i32 %466, 8
  br i1 %cmp884, label %if.then889, label %lor.lhs.false885

lor.lhs.false885:                                 ; preds = %for.end881
  %467 = load i32* %l, align 4
  %idxprom886 = sext i32 %467 to i64
  %arrayidx887 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom886
  %468 = load i32* %arrayidx887, align 4
  %cmp888 = icmp eq i32 %468, 10
  br i1 %cmp888, label %if.then889, label %if.end890

if.then889:                                       ; preds = %lor.lhs.false885, %for.end881
  store i32 0, i32* %retval
  br label %return

if.end890:                                        ; preds = %lor.lhs.false885
  br label %if.end910

if.else891:                                       ; preds = %if.then870
  %469 = load i32* @wking_loc, align 4
  %add892 = add nsw i32 %469, 1
  store i32 %add892, i32* %l, align 4
  br label %for.cond893

for.cond893:                                      ; preds = %for.inc898, %if.else891
  %470 = load i32* %l, align 4
  %idxprom894 = sext i32 %470 to i64
  %arrayidx895 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom894
  %471 = load i32* %arrayidx895, align 4
  %cmp896 = icmp eq i32 %471, 13
  br i1 %cmp896, label %for.body897, label %for.end900

for.body897:                                      ; preds = %for.cond893
  br label %for.inc898

for.inc898:                                       ; preds = %for.body897
  %472 = load i32* %l, align 4
  %add899 = add nsw i32 %472, 1
  store i32 %add899, i32* %l, align 4
  br label %for.cond893

for.end900:                                       ; preds = %for.cond893
  %473 = load i32* %l, align 4
  %idxprom901 = sext i32 %473 to i64
  %arrayidx902 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom901
  %474 = load i32* %arrayidx902, align 4
  %cmp903 = icmp eq i32 %474, 8
  br i1 %cmp903, label %if.then908, label %lor.lhs.false904

lor.lhs.false904:                                 ; preds = %for.end900
  %475 = load i32* %l, align 4
  %idxprom905 = sext i32 %475 to i64
  %arrayidx906 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom905
  %476 = load i32* %arrayidx906, align 4
  %cmp907 = icmp eq i32 %476, 10
  br i1 %cmp907, label %if.then908, label %if.end909

if.then908:                                       ; preds = %lor.lhs.false904, %for.end900
  store i32 0, i32* %retval
  br label %return

if.end909:                                        ; preds = %lor.lhs.false904
  br label %if.end910

if.end910:                                        ; preds = %if.end909, %if.end890
  br label %if.end1007

if.else911:                                       ; preds = %if.else864
  %477 = load i32* %from, align 4
  %idxprom912 = sext i32 %477 to i64
  %arrayidx913 = getelementptr inbounds [144 x i32]* @Xdiagl, i32 0, i64 %idxprom912
  %478 = load i32* %arrayidx913, align 4
  %479 = load i32* @wking_loc, align 4
  %idxprom914 = sext i32 %479 to i64
  %arrayidx915 = getelementptr inbounds [144 x i32]* @Xdiagl, i32 0, i64 %idxprom914
  %480 = load i32* %arrayidx915, align 4
  %cmp916 = icmp eq i32 %478, %480
  br i1 %cmp916, label %if.then917, label %if.else958

if.then917:                                       ; preds = %if.else911
  %481 = load i32* @wking_loc, align 4
  %482 = load i32* %from, align 4
  %cmp918 = icmp sgt i32 %481, %482
  br i1 %cmp918, label %if.then919, label %if.else938

if.then919:                                       ; preds = %if.then917
  %483 = load i32* @wking_loc, align 4
  %sub920 = sub nsw i32 %483, 13
  store i32 %sub920, i32* %l, align 4
  br label %for.cond921

for.cond921:                                      ; preds = %for.inc926, %if.then919
  %484 = load i32* %l, align 4
  %idxprom922 = sext i32 %484 to i64
  %arrayidx923 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom922
  %485 = load i32* %arrayidx923, align 4
  %cmp924 = icmp eq i32 %485, 13
  br i1 %cmp924, label %for.body925, label %for.end928

for.body925:                                      ; preds = %for.cond921
  br label %for.inc926

for.inc926:                                       ; preds = %for.body925
  %486 = load i32* %l, align 4
  %sub927 = sub nsw i32 %486, 13
  store i32 %sub927, i32* %l, align 4
  br label %for.cond921

for.end928:                                       ; preds = %for.cond921
  %487 = load i32* %l, align 4
  %idxprom929 = sext i32 %487 to i64
  %arrayidx930 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom929
  %488 = load i32* %arrayidx930, align 4
  %cmp931 = icmp eq i32 %488, 12
  br i1 %cmp931, label %if.then936, label %lor.lhs.false932

lor.lhs.false932:                                 ; preds = %for.end928
  %489 = load i32* %l, align 4
  %idxprom933 = sext i32 %489 to i64
  %arrayidx934 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom933
  %490 = load i32* %arrayidx934, align 4
  %cmp935 = icmp eq i32 %490, 10
  br i1 %cmp935, label %if.then936, label %if.end937

if.then936:                                       ; preds = %lor.lhs.false932, %for.end928
  store i32 0, i32* %retval
  br label %return

if.end937:                                        ; preds = %lor.lhs.false932
  br label %if.end957

if.else938:                                       ; preds = %if.then917
  %491 = load i32* @wking_loc, align 4
  %add939 = add nsw i32 %491, 13
  store i32 %add939, i32* %l, align 4
  br label %for.cond940

for.cond940:                                      ; preds = %for.inc945, %if.else938
  %492 = load i32* %l, align 4
  %idxprom941 = sext i32 %492 to i64
  %arrayidx942 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom941
  %493 = load i32* %arrayidx942, align 4
  %cmp943 = icmp eq i32 %493, 13
  br i1 %cmp943, label %for.body944, label %for.end947

for.body944:                                      ; preds = %for.cond940
  br label %for.inc945

for.inc945:                                       ; preds = %for.body944
  %494 = load i32* %l, align 4
  %add946 = add nsw i32 %494, 13
  store i32 %add946, i32* %l, align 4
  br label %for.cond940

for.end947:                                       ; preds = %for.cond940
  %495 = load i32* %l, align 4
  %idxprom948 = sext i32 %495 to i64
  %arrayidx949 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom948
  %496 = load i32* %arrayidx949, align 4
  %cmp950 = icmp eq i32 %496, 12
  br i1 %cmp950, label %if.then955, label %lor.lhs.false951

lor.lhs.false951:                                 ; preds = %for.end947
  %497 = load i32* %l, align 4
  %idxprom952 = sext i32 %497 to i64
  %arrayidx953 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom952
  %498 = load i32* %arrayidx953, align 4
  %cmp954 = icmp eq i32 %498, 10
  br i1 %cmp954, label %if.then955, label %if.end956

if.then955:                                       ; preds = %lor.lhs.false951, %for.end947
  store i32 0, i32* %retval
  br label %return

if.end956:                                        ; preds = %lor.lhs.false951
  br label %if.end957

if.end957:                                        ; preds = %if.end956, %if.end937
  br label %if.end1006

if.else958:                                       ; preds = %if.else911
  %499 = load i32* %from, align 4
  %idxprom959 = sext i32 %499 to i64
  %arrayidx960 = getelementptr inbounds [144 x i32]* @Xdiagr, i32 0, i64 %idxprom959
  %500 = load i32* %arrayidx960, align 4
  %501 = load i32* @wking_loc, align 4
  %idxprom961 = sext i32 %501 to i64
  %arrayidx962 = getelementptr inbounds [144 x i32]* @Xdiagr, i32 0, i64 %idxprom961
  %502 = load i32* %arrayidx962, align 4
  %cmp963 = icmp eq i32 %500, %502
  br i1 %cmp963, label %if.then964, label %if.end1005

if.then964:                                       ; preds = %if.else958
  %503 = load i32* @wking_loc, align 4
  %504 = load i32* %from, align 4
  %cmp965 = icmp sgt i32 %503, %504
  br i1 %cmp965, label %if.then966, label %if.else985

if.then966:                                       ; preds = %if.then964
  %505 = load i32* @wking_loc, align 4
  %sub967 = sub nsw i32 %505, 11
  store i32 %sub967, i32* %l, align 4
  br label %for.cond968

for.cond968:                                      ; preds = %for.inc973, %if.then966
  %506 = load i32* %l, align 4
  %idxprom969 = sext i32 %506 to i64
  %arrayidx970 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom969
  %507 = load i32* %arrayidx970, align 4
  %cmp971 = icmp eq i32 %507, 13
  br i1 %cmp971, label %for.body972, label %for.end975

for.body972:                                      ; preds = %for.cond968
  br label %for.inc973

for.inc973:                                       ; preds = %for.body972
  %508 = load i32* %l, align 4
  %sub974 = sub nsw i32 %508, 11
  store i32 %sub974, i32* %l, align 4
  br label %for.cond968

for.end975:                                       ; preds = %for.cond968
  %509 = load i32* %l, align 4
  %idxprom976 = sext i32 %509 to i64
  %arrayidx977 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom976
  %510 = load i32* %arrayidx977, align 4
  %cmp978 = icmp eq i32 %510, 12
  br i1 %cmp978, label %if.then983, label %lor.lhs.false979

lor.lhs.false979:                                 ; preds = %for.end975
  %511 = load i32* %l, align 4
  %idxprom980 = sext i32 %511 to i64
  %arrayidx981 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom980
  %512 = load i32* %arrayidx981, align 4
  %cmp982 = icmp eq i32 %512, 10
  br i1 %cmp982, label %if.then983, label %if.end984

if.then983:                                       ; preds = %lor.lhs.false979, %for.end975
  store i32 0, i32* %retval
  br label %return

if.end984:                                        ; preds = %lor.lhs.false979
  br label %if.end1004

if.else985:                                       ; preds = %if.then964
  %513 = load i32* @wking_loc, align 4
  %add986 = add nsw i32 %513, 11
  store i32 %add986, i32* %l, align 4
  br label %for.cond987

for.cond987:                                      ; preds = %for.inc992, %if.else985
  %514 = load i32* %l, align 4
  %idxprom988 = sext i32 %514 to i64
  %arrayidx989 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom988
  %515 = load i32* %arrayidx989, align 4
  %cmp990 = icmp eq i32 %515, 13
  br i1 %cmp990, label %for.body991, label %for.end994

for.body991:                                      ; preds = %for.cond987
  br label %for.inc992

for.inc992:                                       ; preds = %for.body991
  %516 = load i32* %l, align 4
  %add993 = add nsw i32 %516, 11
  store i32 %add993, i32* %l, align 4
  br label %for.cond987

for.end994:                                       ; preds = %for.cond987
  %517 = load i32* %l, align 4
  %idxprom995 = sext i32 %517 to i64
  %arrayidx996 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom995
  %518 = load i32* %arrayidx996, align 4
  %cmp997 = icmp eq i32 %518, 12
  br i1 %cmp997, label %if.then1002, label %lor.lhs.false998

lor.lhs.false998:                                 ; preds = %for.end994
  %519 = load i32* %l, align 4
  %idxprom999 = sext i32 %519 to i64
  %arrayidx1000 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom999
  %520 = load i32* %arrayidx1000, align 4
  %cmp1001 = icmp eq i32 %520, 10
  br i1 %cmp1001, label %if.then1002, label %if.end1003

if.then1002:                                      ; preds = %lor.lhs.false998, %for.end994
  store i32 0, i32* %retval
  br label %return

if.end1003:                                       ; preds = %lor.lhs.false998
  br label %if.end1004

if.end1004:                                       ; preds = %if.end1003, %if.end984
  br label %if.end1005

if.end1005:                                       ; preds = %if.end1004, %if.else958
  br label %if.end1006

if.end1006:                                       ; preds = %if.end1005, %if.end957
  br label %if.end1007

if.end1007:                                       ; preds = %if.end1006, %if.end910
  br label %if.end1008

if.end1008:                                       ; preds = %if.end1007, %if.end863
  store i32 1, i32* %retval
  br label %return

if.end1009:                                       ; preds = %sw.epilog813
  br label %if.end1010

if.end1010:                                       ; preds = %if.end1009, %if.else532
  %521 = load i32* @wking_loc, align 4
  %call1011 = call i32 @is_attacked(i32 %521, i32 0)
  %tobool1012 = icmp ne i32 %call1011, 0
  br i1 %tobool1012, label %if.then1013, label %if.else1014

if.then1013:                                      ; preds = %if.end1010
  store i32 0, i32* %retval
  br label %return

if.else1014:                                      ; preds = %if.end1010
  store i32 1, i32* %retval
  br label %return

if.end1015:                                       ; preds = %if.end67
  store i32 0, i32* %retval
  br label %return

return:                                           ; preds = %if.end1015, %if.else1014, %if.then1013, %if.end1008, %if.then1002, %if.then983, %if.then955, %if.then936, %if.then908, %if.then889, %if.then861, %if.then842, %if.then806, %if.then780, %if.then754, %if.then728, %if.then697, %if.then689, %if.then661, %if.then653, %if.then627, %if.then600, %if.then580, %if.then539, %if.else531, %if.then530, %if.end525, %if.then519, %if.then500, %if.then472, %if.then453, %if.then425, %if.then406, %if.then378, %if.then360, %if.then332, %if.then306, %if.then280, %if.then254, %if.then226, %if.then218, %if.then190, %if.then182, %if.then156, %if.then129, %if.then109, %if.then76, %if.end66, %if.then65, %if.then61, %if.then57, %if.end51, %if.then50, %if.then46, %if.then42, %if.end36, %if.then35, %if.then31, %if.then27, %if.end21, %if.then20, %if.then16, %if.then12, %if.then
  %522 = load i32* %retval
  ret i32 %522
}

; Function Attrs: nounwind uwtable
define internal void @gen(%struct.move_s* %moves) #0 {
entry:
  %base.alloca = alloca i8*
  %bound.alloca = alloca i8*
  %0 = call i8* @__softboundcets_load_base_shadow_stack(i32 1)
  %1 = call i8* @__softboundcets_load_bound_shadow_stack(i32 1)
  %moves.addr = alloca %struct.move_s*, align 8
  %moves.addr731 = bitcast %struct.move_s** %moves.addr to %struct.move_s**
  %bitcast = bitcast %struct.move_s** %moves.addr to i8*
  %mtmp = getelementptr %struct.move_s** %moves.addr731, i32 1
  %bitcast732 = bitcast %struct.move_s** %mtmp to i8*
  %from = alloca i32, align 4
  %from733 = bitcast i32* %from to i32*
  %bitcast734 = bitcast i32* %from to i8*
  %mtmp735 = getelementptr i32* %from733, i32 1
  %bitcast736 = bitcast i32* %mtmp735 to i8*
  %a = alloca i32, align 4
  %a737 = bitcast i32* %a to i32*
  %bitcast738 = bitcast i32* %a to i8*
  %mtmp739 = getelementptr i32* %a737, i32 1
  %bitcast740 = bitcast i32* %mtmp739 to i8*
  %j = alloca i32, align 4
  %j741 = bitcast i32* %j to i32*
  %bitcast742 = bitcast i32* %j to i8*
  %mtmp743 = getelementptr i32* %j741, i32 1
  %bitcast744 = bitcast i32* %mtmp743 to i8*
  %i = alloca i32, align 4
  %i745 = bitcast i32* %i to i32*
  %bitcast746 = bitcast i32* %i to i8*
  %mtmp747 = getelementptr i32* %i745, i32 1
  %bitcast748 = bitcast i32* %mtmp747 to i8*
  store %struct.move_s* %moves, %struct.move_s** %moves.addr, align 8
  %bitcast750 = bitcast %struct.move_s** %moves.addr to i8*
  call void @__softboundcets_metadata_store(i8* %bitcast750, i8* %0, i8* %1)
  store i32 0, i32* @kingcap, align 4
  store i32 0, i32* @numb_moves, align 4
  %2 = load %struct.move_s** %moves.addr, align 8
  %bitcast749 = bitcast %struct.move_s** %moves.addr to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast749, i8** %base.alloca, i8** %bound.alloca)
  %base.load = load i8** %base.alloca
  %bound.load = load i8** %bound.alloca
  %arrayidx = getelementptr inbounds %struct.move_s* %2, i64 0
  store %struct.move_s* %arrayidx, %struct.move_s** @genfor, align 8
  %bitcast751 = bitcast %struct.move_s** @genfor to i8*
  call void @__softboundcets_metadata_store(i8* %bitcast751, i8* %base.load, i8* %bound.load)
  %3 = load i32* @Variant, align 4
  %cmp = icmp eq i32 %3, 3
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  store i32 0, i32* @captures, align 4
  store i32 0, i32* @fcaptures, align 4
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  br label %restart

restart:                                          ; preds = %if.then726, %if.end
  %4 = load i32* @white_to_move, align 4
  %tobool = icmp ne i32 %4, 0
  br i1 %tobool, label %if.then1, label %if.else297

if.then1:                                         ; preds = %restart
  store i32 1, i32* %a, align 4
  store i32 1, i32* %j, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.then1
  %5 = load i32* %a, align 4
  %6 = load i32* @piece_count, align 4
  %cmp2 = icmp sle i32 %5, %6
  br i1 %cmp2, label %land.rhs, label %land.end8

land.rhs:                                         ; preds = %for.cond
  %7 = load i32* @Variant, align 4
  %cmp3 = icmp ne i32 %7, 3
  br i1 %cmp3, label %land.lhs.true, label %lor.rhs

land.lhs.true:                                    ; preds = %land.rhs
  %8 = load i32* @kingcap, align 4
  %tobool4 = icmp ne i32 %8, 0
  br i1 %tobool4, label %lor.rhs, label %lor.end

lor.rhs:                                          ; preds = %land.lhs.true, %land.rhs
  %9 = load i32* @Variant, align 4
  %cmp5 = icmp eq i32 %9, 3
  br i1 %cmp5, label %land.rhs6, label %land.end

land.rhs6:                                        ; preds = %lor.rhs
  %10 = load i32* @fcaptures, align 4
  %11 = load i32* @captures, align 4
  %cmp7 = icmp eq i32 %10, %11
  br label %land.end

land.end:                                         ; preds = %land.rhs6, %lor.rhs
  %12 = phi i1 [ false, %lor.rhs ], [ %cmp7, %land.rhs6 ]
  br label %lor.end

lor.end:                                          ; preds = %land.end, %land.lhs.true
  %13 = phi i1 [ true, %land.lhs.true ], [ %12, %land.end ]
  br label %land.end8

land.end8:                                        ; preds = %lor.end, %for.cond
  %14 = phi i1 [ false, %for.cond ], [ %13, %lor.end ]
  br i1 %14, label %for.body, label %for.end

for.body:                                         ; preds = %land.end8
  %15 = load i32* %j, align 4
  %idxprom = sext i32 %15 to i64
  %arrayidx9 = getelementptr inbounds [62 x i32]* @pieces, i32 0, i64 %idxprom
  %16 = load i32* %arrayidx9, align 4
  store i32 %16, i32* %i, align 4
  %17 = load i32* %i, align 4
  %tobool10 = icmp ne i32 %17, 0
  br i1 %tobool10, label %if.else, label %if.then11

if.then11:                                        ; preds = %for.body
  br label %for.inc

if.else:                                          ; preds = %for.body
  %18 = load i32* %a, align 4
  %inc = add nsw i32 %18, 1
  store i32 %inc, i32* %a, align 4
  br label %if.end12

if.end12:                                         ; preds = %if.else
  %19 = load i32* %i, align 4
  store i32 %19, i32* %from, align 4
  %20 = load i32* %i, align 4
  store i32 %20, i32* @gfrom, align 4
  %21 = load i32* %from, align 4
  %idxprom13 = sext i32 %21 to i64
  %arrayidx14 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom13
  %22 = load i32* %arrayidx14, align 4
  switch i32 %22, label %sw.default [
    i32 1, label %sw.bb
    i32 3, label %sw.bb82
    i32 11, label %sw.bb138
    i32 7, label %sw.bb167
    i32 9, label %sw.bb196
    i32 5, label %sw.bb253
  ]

sw.bb:                                            ; preds = %if.end12
  %23 = load i32* %from, align 4
  %add = add nsw i32 %23, 12
  %idxprom15 = sext i32 %add to i64
  %arrayidx16 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom15
  %24 = load i32* %arrayidx16, align 4
  %cmp17 = icmp eq i32 %24, 13
  br i1 %cmp17, label %if.then18, label %if.end45

if.then18:                                        ; preds = %sw.bb
  %25 = load i32* %from, align 4
  %idxprom19 = sext i32 %25 to i64
  %arrayidx20 = getelementptr inbounds [144 x i32]* @Xrank, i32 0, i64 %idxprom19
  %26 = load i32* %arrayidx20, align 4
  %cmp21 = icmp eq i32 %26, 7
  br i1 %cmp21, label %land.lhs.true22, label %if.else28

land.lhs.true22:                                  ; preds = %if.then18
  %27 = load i32* @Variant, align 4
  %cmp23 = icmp ne i32 %27, 3
  br i1 %cmp23, label %land.lhs.true24, label %if.else28

land.lhs.true24:                                  ; preds = %land.lhs.true22
  %28 = load i32* @Variant, align 4
  %cmp25 = icmp ne i32 %28, 4
  br i1 %cmp25, label %if.then26, label %if.else28

if.then26:                                        ; preds = %land.lhs.true24
  %29 = load i32* %from, align 4
  %add27 = add nsw i32 %29, 12
  call void @push_pawn(i32 %add27, i32 0)
  br label %if.end44

if.else28:                                        ; preds = %land.lhs.true24, %land.lhs.true22, %if.then18
  %30 = load i32* @captures, align 4
  %tobool29 = icmp ne i32 %30, 0
  br i1 %tobool29, label %if.end43, label %if.then30

if.then30:                                        ; preds = %if.else28
  %31 = load i32* %from, align 4
  %add31 = add nsw i32 %31, 12
  call void @push_pawn(i32 %add31, i32 0)
  %32 = load i32* %from, align 4
  %idxprom32 = sext i32 %32 to i64
  %arrayidx33 = getelementptr inbounds [144 x i32]* @Xrank, i32 0, i64 %idxprom32
  %33 = load i32* %arrayidx33, align 4
  %cmp34 = icmp eq i32 %33, 2
  br i1 %cmp34, label %land.lhs.true35, label %if.end42

land.lhs.true35:                                  ; preds = %if.then30
  %34 = load i32* %from, align 4
  %add36 = add nsw i32 %34, 24
  %idxprom37 = sext i32 %add36 to i64
  %arrayidx38 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom37
  %35 = load i32* %arrayidx38, align 4
  %cmp39 = icmp eq i32 %35, 13
  br i1 %cmp39, label %if.then40, label %if.end42

if.then40:                                        ; preds = %land.lhs.true35
  %36 = load i32* %from, align 4
  %add41 = add nsw i32 %36, 24
  call void @push_pawn_simple(i32 %add41)
  br label %if.end42

if.end42:                                         ; preds = %if.then40, %land.lhs.true35, %if.then30
  br label %if.end43

if.end43:                                         ; preds = %if.end42, %if.else28
  br label %if.end44

if.end44:                                         ; preds = %if.end43, %if.then26
  br label %if.end45

if.end45:                                         ; preds = %if.end44, %sw.bb
  %37 = load i32* %from, align 4
  %add46 = add nsw i32 %37, 13
  %idxprom47 = sext i32 %add46 to i64
  %arrayidx48 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom47
  %38 = load i32* %arrayidx48, align 4
  %and = and i32 %38, 1
  %cmp49 = icmp eq i32 %and, 0
  br i1 %cmp49, label %land.lhs.true50, label %if.end57

land.lhs.true50:                                  ; preds = %if.end45
  %39 = load i32* %from, align 4
  %add51 = add nsw i32 %39, 13
  %idxprom52 = sext i32 %add51 to i64
  %arrayidx53 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom52
  %40 = load i32* %arrayidx53, align 4
  %cmp54 = icmp ne i32 %40, 0
  br i1 %cmp54, label %if.then55, label %if.end57

if.then55:                                        ; preds = %land.lhs.true50
  %41 = load i32* %from, align 4
  %add56 = add nsw i32 %41, 13
  call void @push_pawn(i32 %add56, i32 0)
  br label %if.end57

if.end57:                                         ; preds = %if.then55, %land.lhs.true50, %if.end45
  %42 = load i32* %from, align 4
  %add58 = add nsw i32 %42, 11
  %idxprom59 = sext i32 %add58 to i64
  %arrayidx60 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom59
  %43 = load i32* %arrayidx60, align 4
  %and61 = and i32 %43, 1
  %cmp62 = icmp eq i32 %and61, 0
  br i1 %cmp62, label %land.lhs.true63, label %if.end70

land.lhs.true63:                                  ; preds = %if.end57
  %44 = load i32* %from, align 4
  %add64 = add nsw i32 %44, 11
  %idxprom65 = sext i32 %add64 to i64
  %arrayidx66 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom65
  %45 = load i32* %arrayidx66, align 4
  %cmp67 = icmp ne i32 %45, 0
  br i1 %cmp67, label %if.then68, label %if.end70

if.then68:                                        ; preds = %land.lhs.true63
  %46 = load i32* %from, align 4
  %add69 = add nsw i32 %46, 11
  call void @push_pawn(i32 %add69, i32 0)
  br label %if.end70

if.end70:                                         ; preds = %if.then68, %land.lhs.true63, %if.end57
  %47 = load i32* @ep_square, align 4
  %48 = load i32* %from, align 4
  %add71 = add nsw i32 %48, 13
  %cmp72 = icmp eq i32 %47, %add71
  br i1 %cmp72, label %if.then73, label %if.else75

if.then73:                                        ; preds = %if.end70
  %49 = load i32* %from, align 4
  %add74 = add nsw i32 %49, 13
  call void @push_pawn(i32 %add74, i32 1)
  br label %if.end81

if.else75:                                        ; preds = %if.end70
  %50 = load i32* @ep_square, align 4
  %51 = load i32* %from, align 4
  %add76 = add nsw i32 %51, 11
  %cmp77 = icmp eq i32 %50, %add76
  br i1 %cmp77, label %if.then78, label %if.end80

if.then78:                                        ; preds = %if.else75
  %52 = load i32* %from, align 4
  %add79 = add nsw i32 %52, 11
  call void @push_pawn(i32 %add79, i32 1)
  br label %if.end80

if.end80:                                         ; preds = %if.then78, %if.else75
  br label %if.end81

if.end81:                                         ; preds = %if.end80, %if.then73
  br label %sw.epilog

sw.bb82:                                          ; preds = %if.end12
  %53 = load i32* %from, align 4
  %sub = sub nsw i32 %53, 25
  %idxprom83 = sext i32 %sub to i64
  %arrayidx84 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom83
  %54 = load i32* %arrayidx84, align 4
  %cmp85 = icmp ne i32 %54, 0
  br i1 %cmp85, label %if.then86, label %if.end88

if.then86:                                        ; preds = %sw.bb82
  %55 = load i32* %from, align 4
  %sub87 = sub nsw i32 %55, 25
  call void @push_knighT(i32 %sub87)
  br label %if.end88

if.end88:                                         ; preds = %if.then86, %sw.bb82
  %56 = load i32* %from, align 4
  %sub89 = sub nsw i32 %56, 23
  %idxprom90 = sext i32 %sub89 to i64
  %arrayidx91 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom90
  %57 = load i32* %arrayidx91, align 4
  %cmp92 = icmp ne i32 %57, 0
  br i1 %cmp92, label %if.then93, label %if.end95

if.then93:                                        ; preds = %if.end88
  %58 = load i32* %from, align 4
  %sub94 = sub nsw i32 %58, 23
  call void @push_knighT(i32 %sub94)
  br label %if.end95

if.end95:                                         ; preds = %if.then93, %if.end88
  %59 = load i32* %from, align 4
  %sub96 = sub nsw i32 %59, 14
  %idxprom97 = sext i32 %sub96 to i64
  %arrayidx98 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom97
  %60 = load i32* %arrayidx98, align 4
  %cmp99 = icmp ne i32 %60, 0
  br i1 %cmp99, label %if.then100, label %if.end102

if.then100:                                       ; preds = %if.end95
  %61 = load i32* %from, align 4
  %sub101 = sub nsw i32 %61, 14
  call void @push_knighT(i32 %sub101)
  br label %if.end102

if.end102:                                        ; preds = %if.then100, %if.end95
  %62 = load i32* %from, align 4
  %sub103 = sub nsw i32 %62, 10
  %idxprom104 = sext i32 %sub103 to i64
  %arrayidx105 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom104
  %63 = load i32* %arrayidx105, align 4
  %cmp106 = icmp ne i32 %63, 0
  br i1 %cmp106, label %if.then107, label %if.end109

if.then107:                                       ; preds = %if.end102
  %64 = load i32* %from, align 4
  %sub108 = sub nsw i32 %64, 10
  call void @push_knighT(i32 %sub108)
  br label %if.end109

if.end109:                                        ; preds = %if.then107, %if.end102
  %65 = load i32* %from, align 4
  %add110 = add nsw i32 %65, 10
  %idxprom111 = sext i32 %add110 to i64
  %arrayidx112 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom111
  %66 = load i32* %arrayidx112, align 4
  %cmp113 = icmp ne i32 %66, 0
  br i1 %cmp113, label %if.then114, label %if.end116

if.then114:                                       ; preds = %if.end109
  %67 = load i32* %from, align 4
  %add115 = add nsw i32 %67, 10
  call void @push_knighT(i32 %add115)
  br label %if.end116

if.end116:                                        ; preds = %if.then114, %if.end109
  %68 = load i32* %from, align 4
  %add117 = add nsw i32 %68, 14
  %idxprom118 = sext i32 %add117 to i64
  %arrayidx119 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom118
  %69 = load i32* %arrayidx119, align 4
  %cmp120 = icmp ne i32 %69, 0
  br i1 %cmp120, label %if.then121, label %if.end123

if.then121:                                       ; preds = %if.end116
  %70 = load i32* %from, align 4
  %add122 = add nsw i32 %70, 14
  call void @push_knighT(i32 %add122)
  br label %if.end123

if.end123:                                        ; preds = %if.then121, %if.end116
  %71 = load i32* %from, align 4
  %add124 = add nsw i32 %71, 23
  %idxprom125 = sext i32 %add124 to i64
  %arrayidx126 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom125
  %72 = load i32* %arrayidx126, align 4
  %cmp127 = icmp ne i32 %72, 0
  br i1 %cmp127, label %if.then128, label %if.end130

if.then128:                                       ; preds = %if.end123
  %73 = load i32* %from, align 4
  %add129 = add nsw i32 %73, 23
  call void @push_knighT(i32 %add129)
  br label %if.end130

if.end130:                                        ; preds = %if.then128, %if.end123
  %74 = load i32* %from, align 4
  %add131 = add nsw i32 %74, 25
  %idxprom132 = sext i32 %add131 to i64
  %arrayidx133 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom132
  %75 = load i32* %arrayidx133, align 4
  %cmp134 = icmp ne i32 %75, 0
  br i1 %cmp134, label %if.then135, label %if.end137

if.then135:                                       ; preds = %if.end130
  %76 = load i32* %from, align 4
  %add136 = add nsw i32 %76, 25
  call void @push_knighT(i32 %add136)
  br label %if.end137

if.end137:                                        ; preds = %if.then135, %if.end130
  br label %sw.epilog

sw.bb138:                                         ; preds = %if.end12
  %77 = load i32* %from, align 4
  %sub139 = sub nsw i32 %77, 13
  %idxprom140 = sext i32 %sub139 to i64
  %arrayidx141 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom140
  %78 = load i32* %arrayidx141, align 4
  %cmp142 = icmp ne i32 %78, 0
  br i1 %cmp142, label %if.then143, label %if.end145

if.then143:                                       ; preds = %sw.bb138
  %79 = load i32* %from, align 4
  %sub144 = sub nsw i32 %79, 13
  call void @push_slidE(i32 %sub144)
  br label %if.end145

if.end145:                                        ; preds = %if.then143, %sw.bb138
  %80 = load i32* %from, align 4
  %sub146 = sub nsw i32 %80, 11
  %idxprom147 = sext i32 %sub146 to i64
  %arrayidx148 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom147
  %81 = load i32* %arrayidx148, align 4
  %cmp149 = icmp ne i32 %81, 0
  br i1 %cmp149, label %if.then150, label %if.end152

if.then150:                                       ; preds = %if.end145
  %82 = load i32* %from, align 4
  %sub151 = sub nsw i32 %82, 11
  call void @push_slidE(i32 %sub151)
  br label %if.end152

if.end152:                                        ; preds = %if.then150, %if.end145
  %83 = load i32* %from, align 4
  %add153 = add nsw i32 %83, 11
  %idxprom154 = sext i32 %add153 to i64
  %arrayidx155 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom154
  %84 = load i32* %arrayidx155, align 4
  %cmp156 = icmp ne i32 %84, 0
  br i1 %cmp156, label %if.then157, label %if.end159

if.then157:                                       ; preds = %if.end152
  %85 = load i32* %from, align 4
  %add158 = add nsw i32 %85, 11
  call void @push_slidE(i32 %add158)
  br label %if.end159

if.end159:                                        ; preds = %if.then157, %if.end152
  %86 = load i32* %from, align 4
  %add160 = add nsw i32 %86, 13
  %idxprom161 = sext i32 %add160 to i64
  %arrayidx162 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom161
  %87 = load i32* %arrayidx162, align 4
  %cmp163 = icmp ne i32 %87, 0
  br i1 %cmp163, label %if.then164, label %if.end166

if.then164:                                       ; preds = %if.end159
  %88 = load i32* %from, align 4
  %add165 = add nsw i32 %88, 13
  call void @push_slidE(i32 %add165)
  br label %if.end166

if.end166:                                        ; preds = %if.then164, %if.end159
  br label %sw.epilog

sw.bb167:                                         ; preds = %if.end12
  %89 = load i32* %from, align 4
  %sub168 = sub nsw i32 %89, 12
  %idxprom169 = sext i32 %sub168 to i64
  %arrayidx170 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom169
  %90 = load i32* %arrayidx170, align 4
  %cmp171 = icmp ne i32 %90, 0
  br i1 %cmp171, label %if.then172, label %if.end174

if.then172:                                       ; preds = %sw.bb167
  %91 = load i32* %from, align 4
  %sub173 = sub nsw i32 %91, 12
  call void @push_slidE(i32 %sub173)
  br label %if.end174

if.end174:                                        ; preds = %if.then172, %sw.bb167
  %92 = load i32* %from, align 4
  %sub175 = sub nsw i32 %92, 1
  %idxprom176 = sext i32 %sub175 to i64
  %arrayidx177 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom176
  %93 = load i32* %arrayidx177, align 4
  %cmp178 = icmp ne i32 %93, 0
  br i1 %cmp178, label %if.then179, label %if.end181

if.then179:                                       ; preds = %if.end174
  %94 = load i32* %from, align 4
  %sub180 = sub nsw i32 %94, 1
  call void @push_slidE(i32 %sub180)
  br label %if.end181

if.end181:                                        ; preds = %if.then179, %if.end174
  %95 = load i32* %from, align 4
  %add182 = add nsw i32 %95, 1
  %idxprom183 = sext i32 %add182 to i64
  %arrayidx184 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom183
  %96 = load i32* %arrayidx184, align 4
  %cmp185 = icmp ne i32 %96, 0
  br i1 %cmp185, label %if.then186, label %if.end188

if.then186:                                       ; preds = %if.end181
  %97 = load i32* %from, align 4
  %add187 = add nsw i32 %97, 1
  call void @push_slidE(i32 %add187)
  br label %if.end188

if.end188:                                        ; preds = %if.then186, %if.end181
  %98 = load i32* %from, align 4
  %add189 = add nsw i32 %98, 12
  %idxprom190 = sext i32 %add189 to i64
  %arrayidx191 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom190
  %99 = load i32* %arrayidx191, align 4
  %cmp192 = icmp ne i32 %99, 0
  br i1 %cmp192, label %if.then193, label %if.end195

if.then193:                                       ; preds = %if.end188
  %100 = load i32* %from, align 4
  %add194 = add nsw i32 %100, 12
  call void @push_slidE(i32 %add194)
  br label %if.end195

if.end195:                                        ; preds = %if.then193, %if.end188
  br label %sw.epilog

sw.bb196:                                         ; preds = %if.end12
  %101 = load i32* %from, align 4
  %sub197 = sub nsw i32 %101, 13
  %idxprom198 = sext i32 %sub197 to i64
  %arrayidx199 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom198
  %102 = load i32* %arrayidx199, align 4
  %cmp200 = icmp ne i32 %102, 0
  br i1 %cmp200, label %if.then201, label %if.end203

if.then201:                                       ; preds = %sw.bb196
  %103 = load i32* %from, align 4
  %sub202 = sub nsw i32 %103, 13
  call void @push_slidE(i32 %sub202)
  br label %if.end203

if.end203:                                        ; preds = %if.then201, %sw.bb196
  %104 = load i32* %from, align 4
  %sub204 = sub nsw i32 %104, 12
  %idxprom205 = sext i32 %sub204 to i64
  %arrayidx206 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom205
  %105 = load i32* %arrayidx206, align 4
  %cmp207 = icmp ne i32 %105, 0
  br i1 %cmp207, label %if.then208, label %if.end210

if.then208:                                       ; preds = %if.end203
  %106 = load i32* %from, align 4
  %sub209 = sub nsw i32 %106, 12
  call void @push_slidE(i32 %sub209)
  br label %if.end210

if.end210:                                        ; preds = %if.then208, %if.end203
  %107 = load i32* %from, align 4
  %sub211 = sub nsw i32 %107, 11
  %idxprom212 = sext i32 %sub211 to i64
  %arrayidx213 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom212
  %108 = load i32* %arrayidx213, align 4
  %cmp214 = icmp ne i32 %108, 0
  br i1 %cmp214, label %if.then215, label %if.end217

if.then215:                                       ; preds = %if.end210
  %109 = load i32* %from, align 4
  %sub216 = sub nsw i32 %109, 11
  call void @push_slidE(i32 %sub216)
  br label %if.end217

if.end217:                                        ; preds = %if.then215, %if.end210
  %110 = load i32* %from, align 4
  %sub218 = sub nsw i32 %110, 1
  %idxprom219 = sext i32 %sub218 to i64
  %arrayidx220 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom219
  %111 = load i32* %arrayidx220, align 4
  %cmp221 = icmp ne i32 %111, 0
  br i1 %cmp221, label %if.then222, label %if.end224

if.then222:                                       ; preds = %if.end217
  %112 = load i32* %from, align 4
  %sub223 = sub nsw i32 %112, 1
  call void @push_slidE(i32 %sub223)
  br label %if.end224

if.end224:                                        ; preds = %if.then222, %if.end217
  %113 = load i32* %from, align 4
  %add225 = add nsw i32 %113, 1
  %idxprom226 = sext i32 %add225 to i64
  %arrayidx227 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom226
  %114 = load i32* %arrayidx227, align 4
  %cmp228 = icmp ne i32 %114, 0
  br i1 %cmp228, label %if.then229, label %if.end231

if.then229:                                       ; preds = %if.end224
  %115 = load i32* %from, align 4
  %add230 = add nsw i32 %115, 1
  call void @push_slidE(i32 %add230)
  br label %if.end231

if.end231:                                        ; preds = %if.then229, %if.end224
  %116 = load i32* %from, align 4
  %add232 = add nsw i32 %116, 11
  %idxprom233 = sext i32 %add232 to i64
  %arrayidx234 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom233
  %117 = load i32* %arrayidx234, align 4
  %cmp235 = icmp ne i32 %117, 0
  br i1 %cmp235, label %if.then236, label %if.end238

if.then236:                                       ; preds = %if.end231
  %118 = load i32* %from, align 4
  %add237 = add nsw i32 %118, 11
  call void @push_slidE(i32 %add237)
  br label %if.end238

if.end238:                                        ; preds = %if.then236, %if.end231
  %119 = load i32* %from, align 4
  %add239 = add nsw i32 %119, 12
  %idxprom240 = sext i32 %add239 to i64
  %arrayidx241 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom240
  %120 = load i32* %arrayidx241, align 4
  %cmp242 = icmp ne i32 %120, 0
  br i1 %cmp242, label %if.then243, label %if.end245

if.then243:                                       ; preds = %if.end238
  %121 = load i32* %from, align 4
  %add244 = add nsw i32 %121, 12
  call void @push_slidE(i32 %add244)
  br label %if.end245

if.end245:                                        ; preds = %if.then243, %if.end238
  %122 = load i32* %from, align 4
  %add246 = add nsw i32 %122, 13
  %idxprom247 = sext i32 %add246 to i64
  %arrayidx248 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom247
  %123 = load i32* %arrayidx248, align 4
  %cmp249 = icmp ne i32 %123, 0
  br i1 %cmp249, label %if.then250, label %if.end252

if.then250:                                       ; preds = %if.end245
  %124 = load i32* %from, align 4
  %add251 = add nsw i32 %124, 13
  call void @push_slidE(i32 %add251)
  br label %if.end252

if.end252:                                        ; preds = %if.then250, %if.end245
  br label %sw.epilog

sw.bb253:                                         ; preds = %if.end12
  %125 = load i32* %from, align 4
  %sub254 = sub nsw i32 %125, 13
  call void @push_king(i32 %sub254)
  %126 = load i32* %from, align 4
  %sub255 = sub nsw i32 %126, 12
  call void @push_king(i32 %sub255)
  %127 = load i32* %from, align 4
  %sub256 = sub nsw i32 %127, 11
  call void @push_king(i32 %sub256)
  %128 = load i32* %from, align 4
  %sub257 = sub nsw i32 %128, 1
  call void @push_king(i32 %sub257)
  %129 = load i32* %from, align 4
  %add258 = add nsw i32 %129, 1
  call void @push_king(i32 %add258)
  %130 = load i32* %from, align 4
  %add259 = add nsw i32 %130, 11
  call void @push_king(i32 %add259)
  %131 = load i32* %from, align 4
  %add260 = add nsw i32 %131, 12
  call void @push_king(i32 %add260)
  %132 = load i32* %from, align 4
  %add261 = add nsw i32 %132, 13
  call void @push_king(i32 %add261)
  %133 = load i32* %from, align 4
  %cmp262 = icmp eq i32 %133, 30
  br i1 %cmp262, label %land.lhs.true263, label %if.end295

land.lhs.true263:                                 ; preds = %sw.bb253
  %134 = load i32* getelementptr inbounds ([144 x i32]* @moved, i32 0, i64 30), align 4
  %tobool264 = icmp ne i32 %134, 0
  br i1 %tobool264, label %if.end295, label %land.lhs.true265

land.lhs.true265:                                 ; preds = %land.lhs.true263
  %135 = load i32* @captures, align 4
  %tobool266 = icmp ne i32 %135, 0
  br i1 %tobool266, label %if.end295, label %land.lhs.true267

land.lhs.true267:                                 ; preds = %land.lhs.true265
  %136 = load i32* @Variant, align 4
  %cmp268 = icmp ne i32 %136, 3
  br i1 %cmp268, label %if.then270, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %land.lhs.true267
  %137 = load i32* @Giveaway, align 4
  %cmp269 = icmp eq i32 %137, 1
  br i1 %cmp269, label %if.then270, label %if.end295

if.then270:                                       ; preds = %lor.lhs.false, %land.lhs.true267
  %138 = load i32* getelementptr inbounds ([144 x i32]* @moved, i32 0, i64 33), align 4
  %tobool271 = icmp ne i32 %138, 0
  br i1 %tobool271, label %if.end281, label %land.lhs.true272

land.lhs.true272:                                 ; preds = %if.then270
  %139 = load i32* getelementptr inbounds ([144 x i32]* @board, i32 0, i64 33), align 4
  %cmp273 = icmp eq i32 %139, 7
  br i1 %cmp273, label %if.then274, label %if.end281

if.then274:                                       ; preds = %land.lhs.true272
  %140 = load i32* getelementptr inbounds ([144 x i32]* @board, i32 0, i64 31), align 4
  %cmp275 = icmp eq i32 %140, 13
  br i1 %cmp275, label %land.lhs.true276, label %if.end280

land.lhs.true276:                                 ; preds = %if.then274
  %141 = load i32* getelementptr inbounds ([144 x i32]* @board, i32 0, i64 32), align 4
  %cmp277 = icmp eq i32 %141, 13
  br i1 %cmp277, label %if.then278, label %if.end280

if.then278:                                       ; preds = %land.lhs.true276
  %142 = load i32* %from, align 4
  %add279 = add nsw i32 %142, 2
  call void @push_king_castle(i32 %add279, i32 1)
  br label %if.end280

if.end280:                                        ; preds = %if.then278, %land.lhs.true276, %if.then274
  br label %if.end281

if.end281:                                        ; preds = %if.end280, %land.lhs.true272, %if.then270
  %143 = load i32* getelementptr inbounds ([144 x i32]* @moved, i32 0, i64 26), align 4
  %tobool282 = icmp ne i32 %143, 0
  br i1 %tobool282, label %if.end294, label %land.lhs.true283

land.lhs.true283:                                 ; preds = %if.end281
  %144 = load i32* getelementptr inbounds ([144 x i32]* @board, i32 0, i64 26), align 4
  %cmp284 = icmp eq i32 %144, 7
  br i1 %cmp284, label %if.then285, label %if.end294

if.then285:                                       ; preds = %land.lhs.true283
  %145 = load i32* getelementptr inbounds ([144 x i32]* @board, i32 0, i64 27), align 4
  %cmp286 = icmp eq i32 %145, 13
  br i1 %cmp286, label %land.lhs.true287, label %if.end293

land.lhs.true287:                                 ; preds = %if.then285
  %146 = load i32* getelementptr inbounds ([144 x i32]* @board, i32 0, i64 28), align 4
  %cmp288 = icmp eq i32 %146, 13
  br i1 %cmp288, label %land.lhs.true289, label %if.end293

land.lhs.true289:                                 ; preds = %land.lhs.true287
  %147 = load i32* getelementptr inbounds ([144 x i32]* @board, i32 0, i64 29), align 4
  %cmp290 = icmp eq i32 %147, 13
  br i1 %cmp290, label %if.then291, label %if.end293

if.then291:                                       ; preds = %land.lhs.true289
  %148 = load i32* %from, align 4
  %sub292 = sub nsw i32 %148, 2
  call void @push_king_castle(i32 %sub292, i32 2)
  br label %if.end293

if.end293:                                        ; preds = %if.then291, %land.lhs.true289, %land.lhs.true287, %if.then285
  br label %if.end294

if.end294:                                        ; preds = %if.end293, %land.lhs.true283, %if.end281
  br label %if.end295

if.end295:                                        ; preds = %if.end294, %lor.lhs.false, %land.lhs.true265, %land.lhs.true263, %sw.bb253
  br label %sw.epilog

sw.default:                                       ; preds = %if.end12
  br label %sw.epilog

sw.epilog:                                        ; preds = %sw.default, %if.end295, %if.end252, %if.end195, %if.end166, %if.end137, %if.end81
  br label %for.inc

for.inc:                                          ; preds = %sw.epilog, %if.then11
  %149 = load i32* %j, align 4
  %inc296 = add nsw i32 %149, 1
  store i32 %inc296, i32* %j, align 4
  br label %for.cond

for.end:                                          ; preds = %land.end8
  br label %if.end612

if.else297:                                       ; preds = %restart
  store i32 1, i32* %a, align 4
  store i32 1, i32* %j, align 4
  br label %for.cond298

for.cond298:                                      ; preds = %for.inc609, %if.else297
  %150 = load i32* %a, align 4
  %151 = load i32* @piece_count, align 4
  %cmp299 = icmp sle i32 %150, %151
  br i1 %cmp299, label %land.rhs300, label %land.end310

land.rhs300:                                      ; preds = %for.cond298
  %152 = load i32* @Variant, align 4
  %cmp301 = icmp ne i32 %152, 3
  br i1 %cmp301, label %land.lhs.true302, label %lor.rhs304

land.lhs.true302:                                 ; preds = %land.rhs300
  %153 = load i32* @kingcap, align 4
  %tobool303 = icmp ne i32 %153, 0
  br i1 %tobool303, label %lor.rhs304, label %lor.end309

lor.rhs304:                                       ; preds = %land.lhs.true302, %land.rhs300
  %154 = load i32* @Variant, align 4
  %cmp305 = icmp eq i32 %154, 3
  br i1 %cmp305, label %land.rhs306, label %land.end308

land.rhs306:                                      ; preds = %lor.rhs304
  %155 = load i32* @fcaptures, align 4
  %156 = load i32* @captures, align 4
  %cmp307 = icmp eq i32 %155, %156
  br label %land.end308

land.end308:                                      ; preds = %land.rhs306, %lor.rhs304
  %157 = phi i1 [ false, %lor.rhs304 ], [ %cmp307, %land.rhs306 ]
  br label %lor.end309

lor.end309:                                       ; preds = %land.end308, %land.lhs.true302
  %158 = phi i1 [ true, %land.lhs.true302 ], [ %157, %land.end308 ]
  br label %land.end310

land.end310:                                      ; preds = %lor.end309, %for.cond298
  %159 = phi i1 [ false, %for.cond298 ], [ %158, %lor.end309 ]
  br i1 %159, label %for.body311, label %for.end611

for.body311:                                      ; preds = %land.end310
  %160 = load i32* %j, align 4
  %idxprom312 = sext i32 %160 to i64
  %arrayidx313 = getelementptr inbounds [62 x i32]* @pieces, i32 0, i64 %idxprom312
  %161 = load i32* %arrayidx313, align 4
  store i32 %161, i32* %i, align 4
  %162 = load i32* %i, align 4
  %tobool314 = icmp ne i32 %162, 0
  br i1 %tobool314, label %if.else316, label %if.then315

if.then315:                                       ; preds = %for.body311
  br label %for.inc609

if.else316:                                       ; preds = %for.body311
  %163 = load i32* %a, align 4
  %inc317 = add nsw i32 %163, 1
  store i32 %inc317, i32* %a, align 4
  br label %if.end318

if.end318:                                        ; preds = %if.else316
  %164 = load i32* %i, align 4
  store i32 %164, i32* %from, align 4
  %165 = load i32* %i, align 4
  store i32 %165, i32* @gfrom, align 4
  %166 = load i32* %from, align 4
  %idxprom319 = sext i32 %166 to i64
  %arrayidx320 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom319
  %167 = load i32* %arrayidx320, align 4
  switch i32 %167, label %sw.default607 [
    i32 2, label %sw.bb321
    i32 4, label %sw.bb391
    i32 12, label %sw.bb448
    i32 8, label %sw.bb477
    i32 10, label %sw.bb506
    i32 6, label %sw.bb563
  ]

sw.bb321:                                         ; preds = %if.end318
  %168 = load i32* %from, align 4
  %sub322 = sub nsw i32 %168, 12
  %idxprom323 = sext i32 %sub322 to i64
  %arrayidx324 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom323
  %169 = load i32* %arrayidx324, align 4
  %cmp325 = icmp eq i32 %169, 13
  br i1 %cmp325, label %if.then326, label %if.end353

if.then326:                                       ; preds = %sw.bb321
  %170 = load i32* %from, align 4
  %idxprom327 = sext i32 %170 to i64
  %arrayidx328 = getelementptr inbounds [144 x i32]* @Xrank, i32 0, i64 %idxprom327
  %171 = load i32* %arrayidx328, align 4
  %cmp329 = icmp eq i32 %171, 2
  br i1 %cmp329, label %land.lhs.true330, label %if.else336

land.lhs.true330:                                 ; preds = %if.then326
  %172 = load i32* @Variant, align 4
  %cmp331 = icmp ne i32 %172, 3
  br i1 %cmp331, label %land.lhs.true332, label %if.else336

land.lhs.true332:                                 ; preds = %land.lhs.true330
  %173 = load i32* @Variant, align 4
  %cmp333 = icmp ne i32 %173, 4
  br i1 %cmp333, label %if.then334, label %if.else336

if.then334:                                       ; preds = %land.lhs.true332
  %174 = load i32* %from, align 4
  %sub335 = sub nsw i32 %174, 12
  call void @push_pawn(i32 %sub335, i32 0)
  br label %if.end352

if.else336:                                       ; preds = %land.lhs.true332, %land.lhs.true330, %if.then326
  %175 = load i32* @captures, align 4
  %tobool337 = icmp ne i32 %175, 0
  br i1 %tobool337, label %if.end351, label %if.then338

if.then338:                                       ; preds = %if.else336
  %176 = load i32* %from, align 4
  %sub339 = sub nsw i32 %176, 12
  call void @push_pawn(i32 %sub339, i32 0)
  %177 = load i32* %from, align 4
  %idxprom340 = sext i32 %177 to i64
  %arrayidx341 = getelementptr inbounds [144 x i32]* @Xrank, i32 0, i64 %idxprom340
  %178 = load i32* %arrayidx341, align 4
  %cmp342 = icmp eq i32 %178, 7
  br i1 %cmp342, label %land.lhs.true343, label %if.end350

land.lhs.true343:                                 ; preds = %if.then338
  %179 = load i32* %from, align 4
  %sub344 = sub nsw i32 %179, 24
  %idxprom345 = sext i32 %sub344 to i64
  %arrayidx346 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom345
  %180 = load i32* %arrayidx346, align 4
  %cmp347 = icmp eq i32 %180, 13
  br i1 %cmp347, label %if.then348, label %if.end350

if.then348:                                       ; preds = %land.lhs.true343
  %181 = load i32* %from, align 4
  %sub349 = sub nsw i32 %181, 24
  call void @push_pawn_simple(i32 %sub349)
  br label %if.end350

if.end350:                                        ; preds = %if.then348, %land.lhs.true343, %if.then338
  br label %if.end351

if.end351:                                        ; preds = %if.end350, %if.else336
  br label %if.end352

if.end352:                                        ; preds = %if.end351, %if.then334
  br label %if.end353

if.end353:                                        ; preds = %if.end352, %sw.bb321
  %182 = load i32* %from, align 4
  %sub354 = sub nsw i32 %182, 13
  %idxprom355 = sext i32 %sub354 to i64
  %arrayidx356 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom355
  %183 = load i32* %arrayidx356, align 4
  %and357 = and i32 %183, 1
  %cmp358 = icmp eq i32 %and357, 1
  br i1 %cmp358, label %land.lhs.true359, label %if.end366

land.lhs.true359:                                 ; preds = %if.end353
  %184 = load i32* %from, align 4
  %sub360 = sub nsw i32 %184, 13
  %idxprom361 = sext i32 %sub360 to i64
  %arrayidx362 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom361
  %185 = load i32* %arrayidx362, align 4
  %cmp363 = icmp ne i32 %185, 13
  br i1 %cmp363, label %if.then364, label %if.end366

if.then364:                                       ; preds = %land.lhs.true359
  %186 = load i32* %from, align 4
  %sub365 = sub nsw i32 %186, 13
  call void @push_pawn(i32 %sub365, i32 0)
  br label %if.end366

if.end366:                                        ; preds = %if.then364, %land.lhs.true359, %if.end353
  %187 = load i32* %from, align 4
  %sub367 = sub nsw i32 %187, 11
  %idxprom368 = sext i32 %sub367 to i64
  %arrayidx369 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom368
  %188 = load i32* %arrayidx369, align 4
  %and370 = and i32 %188, 1
  %cmp371 = icmp eq i32 %and370, 1
  br i1 %cmp371, label %land.lhs.true372, label %if.end379

land.lhs.true372:                                 ; preds = %if.end366
  %189 = load i32* %from, align 4
  %sub373 = sub nsw i32 %189, 11
  %idxprom374 = sext i32 %sub373 to i64
  %arrayidx375 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom374
  %190 = load i32* %arrayidx375, align 4
  %cmp376 = icmp ne i32 %190, 13
  br i1 %cmp376, label %if.then377, label %if.end379

if.then377:                                       ; preds = %land.lhs.true372
  %191 = load i32* %from, align 4
  %sub378 = sub nsw i32 %191, 11
  call void @push_pawn(i32 %sub378, i32 0)
  br label %if.end379

if.end379:                                        ; preds = %if.then377, %land.lhs.true372, %if.end366
  %192 = load i32* @ep_square, align 4
  %193 = load i32* %from, align 4
  %sub380 = sub nsw i32 %193, 13
  %cmp381 = icmp eq i32 %192, %sub380
  br i1 %cmp381, label %if.then382, label %if.else384

if.then382:                                       ; preds = %if.end379
  %194 = load i32* %from, align 4
  %sub383 = sub nsw i32 %194, 13
  call void @push_pawn(i32 %sub383, i32 1)
  br label %if.end390

if.else384:                                       ; preds = %if.end379
  %195 = load i32* @ep_square, align 4
  %196 = load i32* %from, align 4
  %sub385 = sub nsw i32 %196, 11
  %cmp386 = icmp eq i32 %195, %sub385
  br i1 %cmp386, label %if.then387, label %if.end389

if.then387:                                       ; preds = %if.else384
  %197 = load i32* %from, align 4
  %sub388 = sub nsw i32 %197, 11
  call void @push_pawn(i32 %sub388, i32 1)
  br label %if.end389

if.end389:                                        ; preds = %if.then387, %if.else384
  br label %if.end390

if.end390:                                        ; preds = %if.end389, %if.then382
  br label %sw.epilog608

sw.bb391:                                         ; preds = %if.end318
  %198 = load i32* %from, align 4
  %sub392 = sub nsw i32 %198, 25
  %idxprom393 = sext i32 %sub392 to i64
  %arrayidx394 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom393
  %199 = load i32* %arrayidx394, align 4
  %cmp395 = icmp ne i32 %199, 0
  br i1 %cmp395, label %if.then396, label %if.end398

if.then396:                                       ; preds = %sw.bb391
  %200 = load i32* %from, align 4
  %sub397 = sub nsw i32 %200, 25
  call void @push_knighT(i32 %sub397)
  br label %if.end398

if.end398:                                        ; preds = %if.then396, %sw.bb391
  %201 = load i32* %from, align 4
  %sub399 = sub nsw i32 %201, 23
  %idxprom400 = sext i32 %sub399 to i64
  %arrayidx401 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom400
  %202 = load i32* %arrayidx401, align 4
  %cmp402 = icmp ne i32 %202, 0
  br i1 %cmp402, label %if.then403, label %if.end405

if.then403:                                       ; preds = %if.end398
  %203 = load i32* %from, align 4
  %sub404 = sub nsw i32 %203, 23
  call void @push_knighT(i32 %sub404)
  br label %if.end405

if.end405:                                        ; preds = %if.then403, %if.end398
  %204 = load i32* %from, align 4
  %sub406 = sub nsw i32 %204, 14
  %idxprom407 = sext i32 %sub406 to i64
  %arrayidx408 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom407
  %205 = load i32* %arrayidx408, align 4
  %cmp409 = icmp ne i32 %205, 0
  br i1 %cmp409, label %if.then410, label %if.end412

if.then410:                                       ; preds = %if.end405
  %206 = load i32* %from, align 4
  %sub411 = sub nsw i32 %206, 14
  call void @push_knighT(i32 %sub411)
  br label %if.end412

if.end412:                                        ; preds = %if.then410, %if.end405
  %207 = load i32* %from, align 4
  %sub413 = sub nsw i32 %207, 10
  %idxprom414 = sext i32 %sub413 to i64
  %arrayidx415 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom414
  %208 = load i32* %arrayidx415, align 4
  %cmp416 = icmp ne i32 %208, 0
  br i1 %cmp416, label %if.then417, label %if.end419

if.then417:                                       ; preds = %if.end412
  %209 = load i32* %from, align 4
  %sub418 = sub nsw i32 %209, 10
  call void @push_knighT(i32 %sub418)
  br label %if.end419

if.end419:                                        ; preds = %if.then417, %if.end412
  %210 = load i32* %from, align 4
  %add420 = add nsw i32 %210, 10
  %idxprom421 = sext i32 %add420 to i64
  %arrayidx422 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom421
  %211 = load i32* %arrayidx422, align 4
  %cmp423 = icmp ne i32 %211, 0
  br i1 %cmp423, label %if.then424, label %if.end426

if.then424:                                       ; preds = %if.end419
  %212 = load i32* %from, align 4
  %add425 = add nsw i32 %212, 10
  call void @push_knighT(i32 %add425)
  br label %if.end426

if.end426:                                        ; preds = %if.then424, %if.end419
  %213 = load i32* %from, align 4
  %add427 = add nsw i32 %213, 14
  %idxprom428 = sext i32 %add427 to i64
  %arrayidx429 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom428
  %214 = load i32* %arrayidx429, align 4
  %cmp430 = icmp ne i32 %214, 0
  br i1 %cmp430, label %if.then431, label %if.end433

if.then431:                                       ; preds = %if.end426
  %215 = load i32* %from, align 4
  %add432 = add nsw i32 %215, 14
  call void @push_knighT(i32 %add432)
  br label %if.end433

if.end433:                                        ; preds = %if.then431, %if.end426
  %216 = load i32* %from, align 4
  %add434 = add nsw i32 %216, 23
  %idxprom435 = sext i32 %add434 to i64
  %arrayidx436 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom435
  %217 = load i32* %arrayidx436, align 4
  %cmp437 = icmp ne i32 %217, 0
  br i1 %cmp437, label %if.then438, label %if.end440

if.then438:                                       ; preds = %if.end433
  %218 = load i32* %from, align 4
  %add439 = add nsw i32 %218, 23
  call void @push_knighT(i32 %add439)
  br label %if.end440

if.end440:                                        ; preds = %if.then438, %if.end433
  %219 = load i32* %from, align 4
  %add441 = add nsw i32 %219, 25
  %idxprom442 = sext i32 %add441 to i64
  %arrayidx443 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom442
  %220 = load i32* %arrayidx443, align 4
  %cmp444 = icmp ne i32 %220, 0
  br i1 %cmp444, label %if.then445, label %if.end447

if.then445:                                       ; preds = %if.end440
  %221 = load i32* %from, align 4
  %add446 = add nsw i32 %221, 25
  call void @push_knighT(i32 %add446)
  br label %if.end447

if.end447:                                        ; preds = %if.then445, %if.end440
  br label %sw.epilog608

sw.bb448:                                         ; preds = %if.end318
  %222 = load i32* %from, align 4
  %sub449 = sub nsw i32 %222, 13
  %idxprom450 = sext i32 %sub449 to i64
  %arrayidx451 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom450
  %223 = load i32* %arrayidx451, align 4
  %cmp452 = icmp ne i32 %223, 0
  br i1 %cmp452, label %if.then453, label %if.end455

if.then453:                                       ; preds = %sw.bb448
  %224 = load i32* %from, align 4
  %sub454 = sub nsw i32 %224, 13
  call void @push_slidE(i32 %sub454)
  br label %if.end455

if.end455:                                        ; preds = %if.then453, %sw.bb448
  %225 = load i32* %from, align 4
  %sub456 = sub nsw i32 %225, 11
  %idxprom457 = sext i32 %sub456 to i64
  %arrayidx458 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom457
  %226 = load i32* %arrayidx458, align 4
  %cmp459 = icmp ne i32 %226, 0
  br i1 %cmp459, label %if.then460, label %if.end462

if.then460:                                       ; preds = %if.end455
  %227 = load i32* %from, align 4
  %sub461 = sub nsw i32 %227, 11
  call void @push_slidE(i32 %sub461)
  br label %if.end462

if.end462:                                        ; preds = %if.then460, %if.end455
  %228 = load i32* %from, align 4
  %add463 = add nsw i32 %228, 11
  %idxprom464 = sext i32 %add463 to i64
  %arrayidx465 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom464
  %229 = load i32* %arrayidx465, align 4
  %cmp466 = icmp ne i32 %229, 0
  br i1 %cmp466, label %if.then467, label %if.end469

if.then467:                                       ; preds = %if.end462
  %230 = load i32* %from, align 4
  %add468 = add nsw i32 %230, 11
  call void @push_slidE(i32 %add468)
  br label %if.end469

if.end469:                                        ; preds = %if.then467, %if.end462
  %231 = load i32* %from, align 4
  %add470 = add nsw i32 %231, 13
  %idxprom471 = sext i32 %add470 to i64
  %arrayidx472 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom471
  %232 = load i32* %arrayidx472, align 4
  %cmp473 = icmp ne i32 %232, 0
  br i1 %cmp473, label %if.then474, label %if.end476

if.then474:                                       ; preds = %if.end469
  %233 = load i32* %from, align 4
  %add475 = add nsw i32 %233, 13
  call void @push_slidE(i32 %add475)
  br label %if.end476

if.end476:                                        ; preds = %if.then474, %if.end469
  br label %sw.epilog608

sw.bb477:                                         ; preds = %if.end318
  %234 = load i32* %from, align 4
  %sub478 = sub nsw i32 %234, 12
  %idxprom479 = sext i32 %sub478 to i64
  %arrayidx480 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom479
  %235 = load i32* %arrayidx480, align 4
  %cmp481 = icmp ne i32 %235, 0
  br i1 %cmp481, label %if.then482, label %if.end484

if.then482:                                       ; preds = %sw.bb477
  %236 = load i32* %from, align 4
  %sub483 = sub nsw i32 %236, 12
  call void @push_slidE(i32 %sub483)
  br label %if.end484

if.end484:                                        ; preds = %if.then482, %sw.bb477
  %237 = load i32* %from, align 4
  %sub485 = sub nsw i32 %237, 1
  %idxprom486 = sext i32 %sub485 to i64
  %arrayidx487 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom486
  %238 = load i32* %arrayidx487, align 4
  %cmp488 = icmp ne i32 %238, 0
  br i1 %cmp488, label %if.then489, label %if.end491

if.then489:                                       ; preds = %if.end484
  %239 = load i32* %from, align 4
  %sub490 = sub nsw i32 %239, 1
  call void @push_slidE(i32 %sub490)
  br label %if.end491

if.end491:                                        ; preds = %if.then489, %if.end484
  %240 = load i32* %from, align 4
  %add492 = add nsw i32 %240, 1
  %idxprom493 = sext i32 %add492 to i64
  %arrayidx494 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom493
  %241 = load i32* %arrayidx494, align 4
  %cmp495 = icmp ne i32 %241, 0
  br i1 %cmp495, label %if.then496, label %if.end498

if.then496:                                       ; preds = %if.end491
  %242 = load i32* %from, align 4
  %add497 = add nsw i32 %242, 1
  call void @push_slidE(i32 %add497)
  br label %if.end498

if.end498:                                        ; preds = %if.then496, %if.end491
  %243 = load i32* %from, align 4
  %add499 = add nsw i32 %243, 12
  %idxprom500 = sext i32 %add499 to i64
  %arrayidx501 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom500
  %244 = load i32* %arrayidx501, align 4
  %cmp502 = icmp ne i32 %244, 0
  br i1 %cmp502, label %if.then503, label %if.end505

if.then503:                                       ; preds = %if.end498
  %245 = load i32* %from, align 4
  %add504 = add nsw i32 %245, 12
  call void @push_slidE(i32 %add504)
  br label %if.end505

if.end505:                                        ; preds = %if.then503, %if.end498
  br label %sw.epilog608

sw.bb506:                                         ; preds = %if.end318
  %246 = load i32* %from, align 4
  %sub507 = sub nsw i32 %246, 13
  %idxprom508 = sext i32 %sub507 to i64
  %arrayidx509 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom508
  %247 = load i32* %arrayidx509, align 4
  %cmp510 = icmp ne i32 %247, 0
  br i1 %cmp510, label %if.then511, label %if.end513

if.then511:                                       ; preds = %sw.bb506
  %248 = load i32* %from, align 4
  %sub512 = sub nsw i32 %248, 13
  call void @push_slidE(i32 %sub512)
  br label %if.end513

if.end513:                                        ; preds = %if.then511, %sw.bb506
  %249 = load i32* %from, align 4
  %sub514 = sub nsw i32 %249, 12
  %idxprom515 = sext i32 %sub514 to i64
  %arrayidx516 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom515
  %250 = load i32* %arrayidx516, align 4
  %cmp517 = icmp ne i32 %250, 0
  br i1 %cmp517, label %if.then518, label %if.end520

if.then518:                                       ; preds = %if.end513
  %251 = load i32* %from, align 4
  %sub519 = sub nsw i32 %251, 12
  call void @push_slidE(i32 %sub519)
  br label %if.end520

if.end520:                                        ; preds = %if.then518, %if.end513
  %252 = load i32* %from, align 4
  %sub521 = sub nsw i32 %252, 11
  %idxprom522 = sext i32 %sub521 to i64
  %arrayidx523 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom522
  %253 = load i32* %arrayidx523, align 4
  %cmp524 = icmp ne i32 %253, 0
  br i1 %cmp524, label %if.then525, label %if.end527

if.then525:                                       ; preds = %if.end520
  %254 = load i32* %from, align 4
  %sub526 = sub nsw i32 %254, 11
  call void @push_slidE(i32 %sub526)
  br label %if.end527

if.end527:                                        ; preds = %if.then525, %if.end520
  %255 = load i32* %from, align 4
  %sub528 = sub nsw i32 %255, 1
  %idxprom529 = sext i32 %sub528 to i64
  %arrayidx530 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom529
  %256 = load i32* %arrayidx530, align 4
  %cmp531 = icmp ne i32 %256, 0
  br i1 %cmp531, label %if.then532, label %if.end534

if.then532:                                       ; preds = %if.end527
  %257 = load i32* %from, align 4
  %sub533 = sub nsw i32 %257, 1
  call void @push_slidE(i32 %sub533)
  br label %if.end534

if.end534:                                        ; preds = %if.then532, %if.end527
  %258 = load i32* %from, align 4
  %add535 = add nsw i32 %258, 1
  %idxprom536 = sext i32 %add535 to i64
  %arrayidx537 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom536
  %259 = load i32* %arrayidx537, align 4
  %cmp538 = icmp ne i32 %259, 0
  br i1 %cmp538, label %if.then539, label %if.end541

if.then539:                                       ; preds = %if.end534
  %260 = load i32* %from, align 4
  %add540 = add nsw i32 %260, 1
  call void @push_slidE(i32 %add540)
  br label %if.end541

if.end541:                                        ; preds = %if.then539, %if.end534
  %261 = load i32* %from, align 4
  %add542 = add nsw i32 %261, 11
  %idxprom543 = sext i32 %add542 to i64
  %arrayidx544 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom543
  %262 = load i32* %arrayidx544, align 4
  %cmp545 = icmp ne i32 %262, 0
  br i1 %cmp545, label %if.then546, label %if.end548

if.then546:                                       ; preds = %if.end541
  %263 = load i32* %from, align 4
  %add547 = add nsw i32 %263, 11
  call void @push_slidE(i32 %add547)
  br label %if.end548

if.end548:                                        ; preds = %if.then546, %if.end541
  %264 = load i32* %from, align 4
  %add549 = add nsw i32 %264, 12
  %idxprom550 = sext i32 %add549 to i64
  %arrayidx551 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom550
  %265 = load i32* %arrayidx551, align 4
  %cmp552 = icmp ne i32 %265, 0
  br i1 %cmp552, label %if.then553, label %if.end555

if.then553:                                       ; preds = %if.end548
  %266 = load i32* %from, align 4
  %add554 = add nsw i32 %266, 12
  call void @push_slidE(i32 %add554)
  br label %if.end555

if.end555:                                        ; preds = %if.then553, %if.end548
  %267 = load i32* %from, align 4
  %add556 = add nsw i32 %267, 13
  %idxprom557 = sext i32 %add556 to i64
  %arrayidx558 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom557
  %268 = load i32* %arrayidx558, align 4
  %cmp559 = icmp ne i32 %268, 0
  br i1 %cmp559, label %if.then560, label %if.end562

if.then560:                                       ; preds = %if.end555
  %269 = load i32* %from, align 4
  %add561 = add nsw i32 %269, 13
  call void @push_slidE(i32 %add561)
  br label %if.end562

if.end562:                                        ; preds = %if.then560, %if.end555
  br label %sw.epilog608

sw.bb563:                                         ; preds = %if.end318
  %270 = load i32* %from, align 4
  %sub564 = sub nsw i32 %270, 13
  call void @push_king(i32 %sub564)
  %271 = load i32* %from, align 4
  %sub565 = sub nsw i32 %271, 12
  call void @push_king(i32 %sub565)
  %272 = load i32* %from, align 4
  %sub566 = sub nsw i32 %272, 11
  call void @push_king(i32 %sub566)
  %273 = load i32* %from, align 4
  %sub567 = sub nsw i32 %273, 1
  call void @push_king(i32 %sub567)
  %274 = load i32* %from, align 4
  %add568 = add nsw i32 %274, 1
  call void @push_king(i32 %add568)
  %275 = load i32* %from, align 4
  %add569 = add nsw i32 %275, 11
  call void @push_king(i32 %add569)
  %276 = load i32* %from, align 4
  %add570 = add nsw i32 %276, 12
  call void @push_king(i32 %add570)
  %277 = load i32* %from, align 4
  %add571 = add nsw i32 %277, 13
  call void @push_king(i32 %add571)
  %278 = load i32* %from, align 4
  %cmp572 = icmp eq i32 %278, 114
  br i1 %cmp572, label %land.lhs.true573, label %if.end606

land.lhs.true573:                                 ; preds = %sw.bb563
  %279 = load i32* getelementptr inbounds ([144 x i32]* @moved, i32 0, i64 114), align 4
  %tobool574 = icmp ne i32 %279, 0
  br i1 %tobool574, label %if.end606, label %land.lhs.true575

land.lhs.true575:                                 ; preds = %land.lhs.true573
  %280 = load i32* @captures, align 4
  %tobool576 = icmp ne i32 %280, 0
  br i1 %tobool576, label %if.end606, label %land.lhs.true577

land.lhs.true577:                                 ; preds = %land.lhs.true575
  %281 = load i32* @Variant, align 4
  %cmp578 = icmp ne i32 %281, 3
  br i1 %cmp578, label %if.then581, label %lor.lhs.false579

lor.lhs.false579:                                 ; preds = %land.lhs.true577
  %282 = load i32* @Giveaway, align 4
  %cmp580 = icmp eq i32 %282, 1
  br i1 %cmp580, label %if.then581, label %if.end606

if.then581:                                       ; preds = %lor.lhs.false579, %land.lhs.true577
  %283 = load i32* getelementptr inbounds ([144 x i32]* @moved, i32 0, i64 117), align 4
  %tobool582 = icmp ne i32 %283, 0
  br i1 %tobool582, label %if.end592, label %land.lhs.true583

land.lhs.true583:                                 ; preds = %if.then581
  %284 = load i32* getelementptr inbounds ([144 x i32]* @board, i32 0, i64 117), align 4
  %cmp584 = icmp eq i32 %284, 8
  br i1 %cmp584, label %if.then585, label %if.end592

if.then585:                                       ; preds = %land.lhs.true583
  %285 = load i32* getelementptr inbounds ([144 x i32]* @board, i32 0, i64 115), align 4
  %cmp586 = icmp eq i32 %285, 13
  br i1 %cmp586, label %land.lhs.true587, label %if.end591

land.lhs.true587:                                 ; preds = %if.then585
  %286 = load i32* getelementptr inbounds ([144 x i32]* @board, i32 0, i64 116), align 4
  %cmp588 = icmp eq i32 %286, 13
  br i1 %cmp588, label %if.then589, label %if.end591

if.then589:                                       ; preds = %land.lhs.true587
  %287 = load i32* %from, align 4
  %add590 = add nsw i32 %287, 2
  call void @push_king_castle(i32 %add590, i32 3)
  br label %if.end591

if.end591:                                        ; preds = %if.then589, %land.lhs.true587, %if.then585
  br label %if.end592

if.end592:                                        ; preds = %if.end591, %land.lhs.true583, %if.then581
  %288 = load i32* getelementptr inbounds ([144 x i32]* @moved, i32 0, i64 110), align 4
  %tobool593 = icmp ne i32 %288, 0
  br i1 %tobool593, label %if.end605, label %land.lhs.true594

land.lhs.true594:                                 ; preds = %if.end592
  %289 = load i32* getelementptr inbounds ([144 x i32]* @board, i32 0, i64 110), align 4
  %cmp595 = icmp eq i32 %289, 8
  br i1 %cmp595, label %if.then596, label %if.end605

if.then596:                                       ; preds = %land.lhs.true594
  %290 = load i32* getelementptr inbounds ([144 x i32]* @board, i32 0, i64 111), align 4
  %cmp597 = icmp eq i32 %290, 13
  br i1 %cmp597, label %land.lhs.true598, label %if.end604

land.lhs.true598:                                 ; preds = %if.then596
  %291 = load i32* getelementptr inbounds ([144 x i32]* @board, i32 0, i64 112), align 4
  %cmp599 = icmp eq i32 %291, 13
  br i1 %cmp599, label %land.lhs.true600, label %if.end604

land.lhs.true600:                                 ; preds = %land.lhs.true598
  %292 = load i32* getelementptr inbounds ([144 x i32]* @board, i32 0, i64 113), align 4
  %cmp601 = icmp eq i32 %292, 13
  br i1 %cmp601, label %if.then602, label %if.end604

if.then602:                                       ; preds = %land.lhs.true600
  %293 = load i32* %from, align 4
  %sub603 = sub nsw i32 %293, 2
  call void @push_king_castle(i32 %sub603, i32 4)
  br label %if.end604

if.end604:                                        ; preds = %if.then602, %land.lhs.true600, %land.lhs.true598, %if.then596
  br label %if.end605

if.end605:                                        ; preds = %if.end604, %land.lhs.true594, %if.end592
  br label %if.end606

if.end606:                                        ; preds = %if.end605, %lor.lhs.false579, %land.lhs.true575, %land.lhs.true573, %sw.bb563
  br label %sw.epilog608

sw.default607:                                    ; preds = %if.end318
  br label %sw.epilog608

sw.epilog608:                                     ; preds = %sw.default607, %if.end606, %if.end562, %if.end505, %if.end476, %if.end447, %if.end390
  br label %for.inc609

for.inc609:                                       ; preds = %sw.epilog608, %if.then315
  %294 = load i32* %j, align 4
  %inc610 = add nsw i32 %294, 1
  store i32 %inc610, i32* %j, align 4
  br label %for.cond298

for.end611:                                       ; preds = %land.end310
  br label %if.end612

if.end612:                                        ; preds = %for.end611, %for.end
  %295 = load i32* @Variant, align 4
  %cmp613 = icmp eq i32 %295, 0
  br i1 %cmp613, label %land.lhs.true616, label %lor.lhs.false614

lor.lhs.false614:                                 ; preds = %if.end612
  %296 = load i32* @Variant, align 4
  %cmp615 = icmp eq i32 %296, 1
  br i1 %cmp615, label %land.lhs.true616, label %if.end720

land.lhs.true616:                                 ; preds = %lor.lhs.false614, %if.end612
  %297 = load i32* @captures, align 4
  %tobool617 = icmp ne i32 %297, 0
  br i1 %tobool617, label %if.end720, label %land.lhs.true618

land.lhs.true618:                                 ; preds = %land.lhs.true616
  %298 = load i32* @kingcap, align 4
  %tobool619 = icmp ne i32 %298, 0
  br i1 %tobool619, label %if.end720, label %if.then620

if.then620:                                       ; preds = %land.lhs.true618
  %299 = load i32* @white_to_move, align 4
  %tobool621 = icmp ne i32 %299, 0
  br i1 %tobool621, label %land.lhs.true622, label %if.else669

land.lhs.true622:                                 ; preds = %if.then620
  %300 = load i32* getelementptr inbounds ([2 x [16 x i32]]* @holding, i32 0, i64 0, i64 1), align 4
  %tobool623 = icmp ne i32 %300, 0
  br i1 %tobool623, label %if.then632, label %lor.lhs.false624

lor.lhs.false624:                                 ; preds = %land.lhs.true622
  %301 = load i32* getelementptr inbounds ([2 x [16 x i32]]* @holding, i32 0, i64 0, i64 3), align 4
  %tobool625 = icmp ne i32 %301, 0
  br i1 %tobool625, label %if.then632, label %lor.lhs.false626

lor.lhs.false626:                                 ; preds = %lor.lhs.false624
  %302 = load i32* getelementptr inbounds ([2 x [16 x i32]]* @holding, i32 0, i64 0, i64 11), align 4
  %tobool627 = icmp ne i32 %302, 0
  br i1 %tobool627, label %if.then632, label %lor.lhs.false628

lor.lhs.false628:                                 ; preds = %lor.lhs.false626
  %303 = load i32* getelementptr inbounds ([2 x [16 x i32]]* @holding, i32 0, i64 0, i64 9), align 4
  %tobool629 = icmp ne i32 %303, 0
  br i1 %tobool629, label %if.then632, label %lor.lhs.false630

lor.lhs.false630:                                 ; preds = %lor.lhs.false628
  %304 = load i32* getelementptr inbounds ([2 x [16 x i32]]* @holding, i32 0, i64 0, i64 7), align 4
  %tobool631 = icmp ne i32 %304, 0
  br i1 %tobool631, label %if.then632, label %if.else669

if.then632:                                       ; preds = %lor.lhs.false630, %lor.lhs.false628, %lor.lhs.false626, %lor.lhs.false624, %land.lhs.true622
  store i32 26, i32* %from, align 4
  br label %for.cond633

for.cond633:                                      ; preds = %for.inc666, %if.then632
  %305 = load i32* %from, align 4
  %cmp634 = icmp slt i32 %305, 118
  br i1 %cmp634, label %for.body635, label %for.end668

for.body635:                                      ; preds = %for.cond633
  %306 = load i32* %from, align 4
  store i32 %306, i32* @gfrom, align 4
  %307 = load i32* %from, align 4
  %idxprom636 = sext i32 %307 to i64
  %arrayidx637 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom636
  %308 = load i32* %arrayidx637, align 4
  switch i32 %308, label %sw.epilog665 [
    i32 0, label %sw.bb638
    i32 13, label %sw.bb640
  ]

sw.bb638:                                         ; preds = %for.body635
  %309 = load i32* %from, align 4
  %add639 = add nsw i32 %309, 3
  store i32 %add639, i32* %from, align 4
  br label %for.inc666

sw.bb640:                                         ; preds = %for.body635
  %310 = load i32* getelementptr inbounds ([2 x [16 x i32]]* @holding, i32 0, i64 0, i64 1), align 4
  %tobool641 = icmp ne i32 %310, 0
  br i1 %tobool641, label %if.then642, label %if.end652

if.then642:                                       ; preds = %sw.bb640
  %311 = load i32* %from, align 4
  %idxprom643 = sext i32 %311 to i64
  %arrayidx644 = getelementptr inbounds [144 x i32]* @Xrank, i32 0, i64 %idxprom643
  %312 = load i32* %arrayidx644, align 4
  %cmp645 = icmp ne i32 %312, 8
  br i1 %cmp645, label %land.lhs.true646, label %if.end651

land.lhs.true646:                                 ; preds = %if.then642
  %313 = load i32* %from, align 4
  %idxprom647 = sext i32 %313 to i64
  %arrayidx648 = getelementptr inbounds [144 x i32]* @Xrank, i32 0, i64 %idxprom647
  %314 = load i32* %arrayidx648, align 4
  %cmp649 = icmp ne i32 %314, 1
  br i1 %cmp649, label %if.then650, label %if.end651

if.then650:                                       ; preds = %land.lhs.true646
  call void @try_drop(i32 1)
  br label %if.end651

if.end651:                                        ; preds = %if.then650, %land.lhs.true646, %if.then642
  br label %if.end652

if.end652:                                        ; preds = %if.end651, %sw.bb640
  %315 = load i32* getelementptr inbounds ([2 x [16 x i32]]* @holding, i32 0, i64 0, i64 3), align 4
  %tobool653 = icmp ne i32 %315, 0
  br i1 %tobool653, label %if.then654, label %if.end655

if.then654:                                       ; preds = %if.end652
  call void @try_drop(i32 3)
  br label %if.end655

if.end655:                                        ; preds = %if.then654, %if.end652
  %316 = load i32* getelementptr inbounds ([2 x [16 x i32]]* @holding, i32 0, i64 0, i64 11), align 4
  %tobool656 = icmp ne i32 %316, 0
  br i1 %tobool656, label %if.then657, label %if.end658

if.then657:                                       ; preds = %if.end655
  call void @try_drop(i32 11)
  br label %if.end658

if.end658:                                        ; preds = %if.then657, %if.end655
  %317 = load i32* getelementptr inbounds ([2 x [16 x i32]]* @holding, i32 0, i64 0, i64 7), align 4
  %tobool659 = icmp ne i32 %317, 0
  br i1 %tobool659, label %if.then660, label %if.end661

if.then660:                                       ; preds = %if.end658
  call void @try_drop(i32 7)
  br label %if.end661

if.end661:                                        ; preds = %if.then660, %if.end658
  %318 = load i32* getelementptr inbounds ([2 x [16 x i32]]* @holding, i32 0, i64 0, i64 9), align 4
  %tobool662 = icmp ne i32 %318, 0
  br i1 %tobool662, label %if.then663, label %if.end664

if.then663:                                       ; preds = %if.end661
  call void @try_drop(i32 9)
  br label %if.end664

if.end664:                                        ; preds = %if.then663, %if.end661
  br label %sw.epilog665

sw.epilog665:                                     ; preds = %if.end664, %for.body635
  br label %for.inc666

for.inc666:                                       ; preds = %sw.epilog665, %sw.bb638
  %319 = load i32* %from, align 4
  %inc667 = add nsw i32 %319, 1
  store i32 %inc667, i32* %from, align 4
  br label %for.cond633

for.end668:                                       ; preds = %for.cond633
  br label %if.end719

if.else669:                                       ; preds = %lor.lhs.false630, %if.then620
  %320 = load i32* @white_to_move, align 4
  %tobool670 = icmp ne i32 %320, 0
  br i1 %tobool670, label %if.end718, label %land.lhs.true671

land.lhs.true671:                                 ; preds = %if.else669
  %321 = load i32* getelementptr inbounds ([2 x [16 x i32]]* @holding, i32 0, i64 1, i64 2), align 4
  %tobool672 = icmp ne i32 %321, 0
  br i1 %tobool672, label %if.then681, label %lor.lhs.false673

lor.lhs.false673:                                 ; preds = %land.lhs.true671
  %322 = load i32* getelementptr inbounds ([2 x [16 x i32]]* @holding, i32 0, i64 1, i64 4), align 4
  %tobool674 = icmp ne i32 %322, 0
  br i1 %tobool674, label %if.then681, label %lor.lhs.false675

lor.lhs.false675:                                 ; preds = %lor.lhs.false673
  %323 = load i32* getelementptr inbounds ([2 x [16 x i32]]* @holding, i32 0, i64 1, i64 12), align 4
  %tobool676 = icmp ne i32 %323, 0
  br i1 %tobool676, label %if.then681, label %lor.lhs.false677

lor.lhs.false677:                                 ; preds = %lor.lhs.false675
  %324 = load i32* getelementptr inbounds ([2 x [16 x i32]]* @holding, i32 0, i64 1, i64 10), align 4
  %tobool678 = icmp ne i32 %324, 0
  br i1 %tobool678, label %if.then681, label %lor.lhs.false679

lor.lhs.false679:                                 ; preds = %lor.lhs.false677
  %325 = load i32* getelementptr inbounds ([2 x [16 x i32]]* @holding, i32 0, i64 1, i64 8), align 4
  %tobool680 = icmp ne i32 %325, 0
  br i1 %tobool680, label %if.then681, label %if.end718

if.then681:                                       ; preds = %lor.lhs.false679, %lor.lhs.false677, %lor.lhs.false675, %lor.lhs.false673, %land.lhs.true671
  store i32 26, i32* %from, align 4
  br label %for.cond682

for.cond682:                                      ; preds = %for.inc715, %if.then681
  %326 = load i32* %from, align 4
  %cmp683 = icmp slt i32 %326, 118
  br i1 %cmp683, label %for.body684, label %for.end717

for.body684:                                      ; preds = %for.cond682
  %327 = load i32* %from, align 4
  store i32 %327, i32* @gfrom, align 4
  %328 = load i32* %from, align 4
  %idxprom685 = sext i32 %328 to i64
  %arrayidx686 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom685
  %329 = load i32* %arrayidx686, align 4
  switch i32 %329, label %sw.epilog714 [
    i32 0, label %sw.bb687
    i32 13, label %sw.bb689
  ]

sw.bb687:                                         ; preds = %for.body684
  %330 = load i32* %from, align 4
  %add688 = add nsw i32 %330, 3
  store i32 %add688, i32* %from, align 4
  br label %for.inc715

sw.bb689:                                         ; preds = %for.body684
  %331 = load i32* getelementptr inbounds ([2 x [16 x i32]]* @holding, i32 0, i64 1, i64 2), align 4
  %tobool690 = icmp ne i32 %331, 0
  br i1 %tobool690, label %if.then691, label %if.end701

if.then691:                                       ; preds = %sw.bb689
  %332 = load i32* %from, align 4
  %idxprom692 = sext i32 %332 to i64
  %arrayidx693 = getelementptr inbounds [144 x i32]* @Xrank, i32 0, i64 %idxprom692
  %333 = load i32* %arrayidx693, align 4
  %cmp694 = icmp ne i32 %333, 8
  br i1 %cmp694, label %land.lhs.true695, label %if.end700

land.lhs.true695:                                 ; preds = %if.then691
  %334 = load i32* %from, align 4
  %idxprom696 = sext i32 %334 to i64
  %arrayidx697 = getelementptr inbounds [144 x i32]* @Xrank, i32 0, i64 %idxprom696
  %335 = load i32* %arrayidx697, align 4
  %cmp698 = icmp ne i32 %335, 1
  br i1 %cmp698, label %if.then699, label %if.end700

if.then699:                                       ; preds = %land.lhs.true695
  call void @try_drop(i32 2)
  br label %if.end700

if.end700:                                        ; preds = %if.then699, %land.lhs.true695, %if.then691
  br label %if.end701

if.end701:                                        ; preds = %if.end700, %sw.bb689
  %336 = load i32* getelementptr inbounds ([2 x [16 x i32]]* @holding, i32 0, i64 1, i64 4), align 4
  %tobool702 = icmp ne i32 %336, 0
  br i1 %tobool702, label %if.then703, label %if.end704

if.then703:                                       ; preds = %if.end701
  call void @try_drop(i32 4)
  br label %if.end704

if.end704:                                        ; preds = %if.then703, %if.end701
  %337 = load i32* getelementptr inbounds ([2 x [16 x i32]]* @holding, i32 0, i64 1, i64 12), align 4
  %tobool705 = icmp ne i32 %337, 0
  br i1 %tobool705, label %if.then706, label %if.end707

if.then706:                                       ; preds = %if.end704
  call void @try_drop(i32 12)
  br label %if.end707

if.end707:                                        ; preds = %if.then706, %if.end704
  %338 = load i32* getelementptr inbounds ([2 x [16 x i32]]* @holding, i32 0, i64 1, i64 8), align 4
  %tobool708 = icmp ne i32 %338, 0
  br i1 %tobool708, label %if.then709, label %if.end710

if.then709:                                       ; preds = %if.end707
  call void @try_drop(i32 8)
  br label %if.end710

if.end710:                                        ; preds = %if.then709, %if.end707
  %339 = load i32* getelementptr inbounds ([2 x [16 x i32]]* @holding, i32 0, i64 1, i64 10), align 4
  %tobool711 = icmp ne i32 %339, 0
  br i1 %tobool711, label %if.then712, label %if.end713

if.then712:                                       ; preds = %if.end710
  call void @try_drop(i32 10)
  br label %if.end713

if.end713:                                        ; preds = %if.then712, %if.end710
  br label %sw.epilog714

sw.epilog714:                                     ; preds = %if.end713, %for.body684
  br label %for.inc715

for.inc715:                                       ; preds = %sw.epilog714, %sw.bb687
  %340 = load i32* %from, align 4
  %inc716 = add nsw i32 %340, 1
  store i32 %inc716, i32* %from, align 4
  br label %for.cond682

for.end717:                                       ; preds = %for.cond682
  br label %if.end718

if.end718:                                        ; preds = %for.end717, %lor.lhs.false679, %if.else669
  br label %if.end719

if.end719:                                        ; preds = %if.end718, %for.end668
  br label %if.end720

if.end720:                                        ; preds = %if.end719, %land.lhs.true618, %land.lhs.true616, %lor.lhs.false614
  %341 = load i32* @Variant, align 4
  %cmp721 = icmp eq i32 %341, 3
  br i1 %cmp721, label %land.lhs.true722, label %if.end727

land.lhs.true722:                                 ; preds = %if.end720
  %342 = load i32* @fcaptures, align 4
  %cmp723 = icmp eq i32 %342, 1
  br i1 %cmp723, label %land.lhs.true724, label %if.end727

land.lhs.true724:                                 ; preds = %land.lhs.true722
  %343 = load i32* @captures, align 4
  %cmp725 = icmp eq i32 %343, 0
  br i1 %cmp725, label %if.then726, label %if.end727

if.then726:                                       ; preds = %land.lhs.true724
  store i32 1, i32* @captures, align 4
  store i32 0, i32* @numb_moves, align 4
  br label %restart

if.end727:                                        ; preds = %land.lhs.true724, %land.lhs.true722, %if.end720
  %344 = load i32* @Variant, align 4
  %cmp728 = icmp eq i32 %344, 3
  br i1 %cmp728, label %if.then729, label %if.end730

if.then729:                                       ; preds = %if.end727
  store i32 0, i32* @kingcap, align 4
  br label %if.end730

if.end730:                                        ; preds = %if.then729, %if.end727
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @push_pawn(i32 %target, i32 %is_ep) #0 {
entry:
  %target.addr = alloca i32, align 4
  %target.addr27 = bitcast i32* %target.addr to i32*
  %bitcast = bitcast i32* %target.addr to i8*
  %mtmp = getelementptr i32* %target.addr27, i32 1
  %bitcast28 = bitcast i32* %mtmp to i8*
  %is_ep.addr = alloca i32, align 4
  %is_ep.addr29 = bitcast i32* %is_ep.addr to i32*
  %bitcast30 = bitcast i32* %is_ep.addr to i8*
  %mtmp31 = getelementptr i32* %is_ep.addr29, i32 1
  %bitcast32 = bitcast i32* %mtmp31 to i8*
  %captured_piece = alloca i32, align 4
  %captured_piece33 = bitcast i32* %captured_piece to i32*
  %bitcast34 = bitcast i32* %captured_piece to i8*
  %mtmp35 = getelementptr i32* %captured_piece33, i32 1
  %bitcast36 = bitcast i32* %mtmp35 to i8*
  store i32 %target, i32* %target.addr, align 4
  store i32 %is_ep, i32* %is_ep.addr, align 4
  %0 = load i32* %is_ep.addr, align 4
  %tobool = icmp ne i32 %0, 0
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %1 = load i32* @gfrom, align 4
  %idxprom = sext i32 %1 to i64
  %arrayidx = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom
  %2 = load i32* %arrayidx, align 4
  %cmp = icmp eq i32 %2, 1
  br i1 %cmp, label %if.then1, label %if.else

if.then1:                                         ; preds = %if.then
  %3 = load i32* %target.addr, align 4
  call void @add_capture(i32 %3, i32 2, i32 0, i32 1)
  br label %return

if.else:                                          ; preds = %if.then
  %4 = load i32* %target.addr, align 4
  call void @add_capture(i32 %4, i32 1, i32 0, i32 1)
  br label %return

if.end:                                           ; preds = %entry
  %5 = load i32* %target.addr, align 4
  %idxprom2 = sext i32 %5 to i64
  %arrayidx3 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom2
  %6 = load i32* %arrayidx3, align 4
  store i32 %6, i32* %captured_piece, align 4
  %7 = load i32* @gfrom, align 4
  %idxprom4 = sext i32 %7 to i64
  %arrayidx5 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom4
  %8 = load i32* %arrayidx5, align 4
  %cmp6 = icmp eq i32 %8, 1
  br i1 %cmp6, label %land.lhs.true, label %if.else14

land.lhs.true:                                    ; preds = %if.end
  %9 = load i32* @gfrom, align 4
  %idxprom7 = sext i32 %9 to i64
  %arrayidx8 = getelementptr inbounds [144 x i32]* @Xrank, i32 0, i64 %idxprom7
  %10 = load i32* %arrayidx8, align 4
  %cmp9 = icmp eq i32 %10, 7
  br i1 %cmp9, label %if.then10, label %if.else14

if.then10:                                        ; preds = %land.lhs.true
  %11 = load i32* %target.addr, align 4
  %12 = load i32* %captured_piece, align 4
  call void @add_capture(i32 %11, i32 %12, i32 9, i32 0)
  %13 = load i32* %target.addr, align 4
  %14 = load i32* %captured_piece, align 4
  call void @add_capture(i32 %13, i32 %14, i32 7, i32 0)
  %15 = load i32* %target.addr, align 4
  %16 = load i32* %captured_piece, align 4
  call void @add_capture(i32 %15, i32 %16, i32 11, i32 0)
  %17 = load i32* %target.addr, align 4
  %18 = load i32* %captured_piece, align 4
  call void @add_capture(i32 %17, i32 %18, i32 3, i32 0)
  %19 = load i32* @Variant, align 4
  %cmp11 = icmp eq i32 %19, 3
  br i1 %cmp11, label %if.then12, label %if.end13

if.then12:                                        ; preds = %if.then10
  %20 = load i32* %target.addr, align 4
  %21 = load i32* %captured_piece, align 4
  call void @add_capture(i32 %20, i32 %21, i32 5, i32 0)
  br label %if.end13

if.end13:                                         ; preds = %if.then12, %if.then10
  br label %return

if.else14:                                        ; preds = %land.lhs.true, %if.end
  %22 = load i32* @gfrom, align 4
  %idxprom15 = sext i32 %22 to i64
  %arrayidx16 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom15
  %23 = load i32* %arrayidx16, align 4
  %cmp17 = icmp eq i32 %23, 2
  br i1 %cmp17, label %land.lhs.true18, label %if.else26

land.lhs.true18:                                  ; preds = %if.else14
  %24 = load i32* @gfrom, align 4
  %idxprom19 = sext i32 %24 to i64
  %arrayidx20 = getelementptr inbounds [144 x i32]* @Xrank, i32 0, i64 %idxprom19
  %25 = load i32* %arrayidx20, align 4
  %cmp21 = icmp eq i32 %25, 2
  br i1 %cmp21, label %if.then22, label %if.else26

if.then22:                                        ; preds = %land.lhs.true18
  %26 = load i32* %target.addr, align 4
  %27 = load i32* %captured_piece, align 4
  call void @add_capture(i32 %26, i32 %27, i32 10, i32 0)
  %28 = load i32* %target.addr, align 4
  %29 = load i32* %captured_piece, align 4
  call void @add_capture(i32 %28, i32 %29, i32 8, i32 0)
  %30 = load i32* %target.addr, align 4
  %31 = load i32* %captured_piece, align 4
  call void @add_capture(i32 %30, i32 %31, i32 12, i32 0)
  %32 = load i32* %target.addr, align 4
  %33 = load i32* %captured_piece, align 4
  call void @add_capture(i32 %32, i32 %33, i32 4, i32 0)
  %34 = load i32* @Variant, align 4
  %cmp23 = icmp eq i32 %34, 3
  br i1 %cmp23, label %if.then24, label %if.end25

if.then24:                                        ; preds = %if.then22
  %35 = load i32* %target.addr, align 4
  %36 = load i32* %captured_piece, align 4
  call void @add_capture(i32 %35, i32 %36, i32 6, i32 0)
  br label %if.end25

if.end25:                                         ; preds = %if.then24, %if.then22
  br label %return

if.else26:                                        ; preds = %land.lhs.true18, %if.else14
  %37 = load i32* %target.addr, align 4
  %38 = load i32* %captured_piece, align 4
  call void @add_capture(i32 %37, i32 %38, i32 0, i32 0)
  br label %return

return:                                           ; preds = %if.else26, %if.end25, %if.end13, %if.else, %if.then1
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @push_pawn_simple(i32 %target) #0 {
entry:
  %target.addr = alloca i32, align 4
  %target.addr1 = bitcast i32* %target.addr to i32*
  %bitcast = bitcast i32* %target.addr to i8*
  %mtmp = getelementptr i32* %target.addr1, i32 1
  %bitcast2 = bitcast i32* %mtmp to i8*
  store i32 %target, i32* %target.addr, align 4
  %0 = load i32* %target.addr, align 4
  call void @add_move(i32 %0, i32 0)
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @push_knighT(i32 %target) #0 {
entry:
  %target.addr = alloca i32, align 4
  %target.addr16 = bitcast i32* %target.addr to i32*
  %bitcast = bitcast i32* %target.addr to i8*
  %mtmp = getelementptr i32* %target.addr16, i32 1
  %bitcast17 = bitcast i32* %mtmp to i8*
  store i32 %target, i32* %target.addr, align 4
  %0 = load i32* %target.addr, align 4
  %idxprom = sext i32 %0 to i64
  %arrayidx = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom
  %1 = load i32* %arrayidx, align 4
  %cmp = icmp eq i32 %1, 13
  br i1 %cmp, label %land.lhs.true, label %if.end

land.lhs.true:                                    ; preds = %entry
  %2 = load i32* @captures, align 4
  %tobool = icmp ne i32 %2, 0
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; preds = %land.lhs.true
  br label %return

if.end:                                           ; preds = %land.lhs.true, %entry
  %3 = load i32* %target.addr, align 4
  %idxprom1 = sext i32 %3 to i64
  %arrayidx2 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom1
  %4 = load i32* %arrayidx2, align 4
  %cmp3 = icmp eq i32 %4, 13
  br i1 %cmp3, label %if.then4, label %if.else

if.then4:                                         ; preds = %if.end
  %5 = load i32* %target.addr, align 4
  call void @add_move(i32 %5, i32 0)
  br label %return

if.else:                                          ; preds = %if.end
  %6 = load i32* %target.addr, align 4
  %idxprom5 = sext i32 %6 to i64
  %arrayidx6 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom5
  %7 = load i32* %arrayidx6, align 4
  %and = and i32 %7, 1
  %8 = load i32* @gfrom, align 4
  %idxprom7 = sext i32 %8 to i64
  %arrayidx8 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom7
  %9 = load i32* %arrayidx8, align 4
  %and9 = and i32 %9, 1
  %cmp10 = icmp ne i32 %and, %and9
  br i1 %cmp10, label %if.then11, label %if.end14

if.then11:                                        ; preds = %if.else
  %10 = load i32* %target.addr, align 4
  %11 = load i32* %target.addr, align 4
  %idxprom12 = sext i32 %11 to i64
  %arrayidx13 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom12
  %12 = load i32* %arrayidx13, align 4
  call void @add_capture(i32 %10, i32 %12, i32 0, i32 0)
  br label %return

if.end14:                                         ; preds = %if.else
  br label %if.end15

if.end15:                                         ; preds = %if.end14
  br label %return

return:                                           ; preds = %if.end15, %if.then11, %if.then4, %if.then
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @push_slidE(i32 %target) #0 {
entry:
  %target.addr = alloca i32, align 4
  %target.addr16 = bitcast i32* %target.addr to i32*
  %bitcast = bitcast i32* %target.addr to i8*
  %mtmp = getelementptr i32* %target.addr16, i32 1
  %bitcast17 = bitcast i32* %mtmp to i8*
  %offset = alloca i32, align 4
  %offset18 = bitcast i32* %offset to i32*
  %bitcast19 = bitcast i32* %offset to i8*
  %mtmp20 = getelementptr i32* %offset18, i32 1
  %bitcast21 = bitcast i32* %mtmp20 to i8*
  %mycolor = alloca i32, align 4
  %mycolor22 = bitcast i32* %mycolor to i32*
  %bitcast23 = bitcast i32* %mycolor to i8*
  %mtmp24 = getelementptr i32* %mycolor22, i32 1
  %bitcast25 = bitcast i32* %mtmp24 to i8*
  store i32 %target, i32* %target.addr, align 4
  %0 = load i32* %target.addr, align 4
  %1 = load i32* @gfrom, align 4
  %sub = sub nsw i32 %0, %1
  store i32 %sub, i32* %offset, align 4
  %2 = load i32* @gfrom, align 4
  %idxprom = sext i32 %2 to i64
  %arrayidx = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom
  %3 = load i32* %arrayidx, align 4
  %and = and i32 %3, 1
  store i32 %and, i32* %mycolor, align 4
  br label %do.body

do.body:                                          ; preds = %do.cond, %entry
  %4 = load i32* %target.addr, align 4
  %idxprom1 = sext i32 %4 to i64
  %arrayidx2 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom1
  %5 = load i32* %arrayidx2, align 4
  %cmp = icmp eq i32 %5, 13
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %do.body
  %6 = load i32* @captures, align 4
  %tobool = icmp ne i32 %6, 0
  br i1 %tobool, label %if.end, label %if.then3

if.then3:                                         ; preds = %if.then
  %7 = load i32* %target.addr, align 4
  call void @add_move(i32 %7, i32 0)
  br label %if.end

if.end:                                           ; preds = %if.then3, %if.then
  %8 = load i32* %offset, align 4
  %9 = load i32* %target.addr, align 4
  %add = add nsw i32 %9, %8
  store i32 %add, i32* %target.addr, align 4
  br label %if.end12

if.else:                                          ; preds = %do.body
  %10 = load i32* %target.addr, align 4
  %idxprom4 = sext i32 %10 to i64
  %arrayidx5 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom4
  %11 = load i32* %arrayidx5, align 4
  %and6 = and i32 %11, 1
  %12 = load i32* %mycolor, align 4
  %cmp7 = icmp ne i32 %and6, %12
  br i1 %cmp7, label %if.then8, label %if.else11

if.then8:                                         ; preds = %if.else
  %13 = load i32* %target.addr, align 4
  %14 = load i32* %target.addr, align 4
  %idxprom9 = sext i32 %14 to i64
  %arrayidx10 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom9
  %15 = load i32* %arrayidx10, align 4
  call void @add_capture(i32 %13, i32 %15, i32 0, i32 0)
  br label %do.end

if.else11:                                        ; preds = %if.else
  br label %do.end

if.end12:                                         ; preds = %if.end
  br label %do.cond

do.cond:                                          ; preds = %if.end12
  %16 = load i32* %target.addr, align 4
  %idxprom13 = sext i32 %16 to i64
  %arrayidx14 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom13
  %17 = load i32* %arrayidx14, align 4
  %cmp15 = icmp ne i32 %17, 0
  br i1 %cmp15, label %do.body, label %do.end

do.end:                                           ; preds = %do.cond, %if.else11, %if.then8
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @push_king(i32 %target) #0 {
entry:
  %target.addr = alloca i32, align 4
  %target.addr21 = bitcast i32* %target.addr to i32*
  %bitcast = bitcast i32* %target.addr to i8*
  %mtmp = getelementptr i32* %target.addr21, i32 1
  %bitcast22 = bitcast i32* %mtmp to i8*
  store i32 %target, i32* %target.addr, align 4
  %0 = load i32* %target.addr, align 4
  %idxprom = sext i32 %0 to i64
  %arrayidx = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom
  %1 = load i32* %arrayidx, align 4
  %cmp = icmp eq i32 %1, 0
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  br label %return

if.end:                                           ; preds = %entry
  %2 = load i32* %target.addr, align 4
  %idxprom1 = sext i32 %2 to i64
  %arrayidx2 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom1
  %3 = load i32* %arrayidx2, align 4
  %cmp3 = icmp eq i32 %3, 13
  br i1 %cmp3, label %land.lhs.true, label %if.end5

land.lhs.true:                                    ; preds = %if.end
  %4 = load i32* @captures, align 4
  %tobool = icmp ne i32 %4, 0
  br i1 %tobool, label %if.then4, label %if.end5

if.then4:                                         ; preds = %land.lhs.true
  br label %return

if.end5:                                          ; preds = %land.lhs.true, %if.end
  %5 = load i32* %target.addr, align 4
  %idxprom6 = sext i32 %5 to i64
  %arrayidx7 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom6
  %6 = load i32* %arrayidx7, align 4
  %cmp8 = icmp eq i32 %6, 13
  br i1 %cmp8, label %if.then9, label %if.else

if.then9:                                         ; preds = %if.end5
  %7 = load i32* %target.addr, align 4
  call void @add_move(i32 %7, i32 0)
  br label %return

if.else:                                          ; preds = %if.end5
  %8 = load i32* %target.addr, align 4
  %idxprom10 = sext i32 %8 to i64
  %arrayidx11 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom10
  %9 = load i32* %arrayidx11, align 4
  %and = and i32 %9, 1
  %10 = load i32* @gfrom, align 4
  %idxprom12 = sext i32 %10 to i64
  %arrayidx13 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom12
  %11 = load i32* %arrayidx13, align 4
  %and14 = and i32 %11, 1
  %cmp15 = icmp ne i32 %and, %and14
  br i1 %cmp15, label %if.then16, label %if.end19

if.then16:                                        ; preds = %if.else
  %12 = load i32* %target.addr, align 4
  %13 = load i32* %target.addr, align 4
  %idxprom17 = sext i32 %13 to i64
  %arrayidx18 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom17
  %14 = load i32* %arrayidx18, align 4
  call void @add_capture(i32 %12, i32 %14, i32 0, i32 0)
  br label %return

if.end19:                                         ; preds = %if.else
  br label %if.end20

if.end20:                                         ; preds = %if.end19
  br label %return

return:                                           ; preds = %if.end20, %if.then16, %if.then9, %if.then4, %if.then
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @push_king_castle(i32 %Ptarget, i32 %Pcastle_type) #0 {
entry:
  %base.alloca39 = alloca i8*
  %bound.alloca40 = alloca i8*
  %base.alloca34 = alloca i8*
  %bound.alloca35 = alloca i8*
  %base.alloca29 = alloca i8*
  %bound.alloca30 = alloca i8*
  %base.alloca24 = alloca i8*
  %bound.alloca25 = alloca i8*
  %base.alloca19 = alloca i8*
  %bound.alloca20 = alloca i8*
  %base.alloca = alloca i8*
  %bound.alloca = alloca i8*
  %Ptarget.addr = alloca i32, align 4
  %Ptarget.addr11 = bitcast i32* %Ptarget.addr to i32*
  %bitcast = bitcast i32* %Ptarget.addr to i8*
  %mtmp = getelementptr i32* %Ptarget.addr11, i32 1
  %bitcast12 = bitcast i32* %mtmp to i8*
  %Pcastle_type.addr = alloca i32, align 4
  %Pcastle_type.addr13 = bitcast i32* %Pcastle_type.addr to i32*
  %bitcast14 = bitcast i32* %Pcastle_type.addr to i8*
  %mtmp15 = getelementptr i32* %Pcastle_type.addr13, i32 1
  %bitcast16 = bitcast i32* %mtmp15 to i8*
  store i32 %Ptarget, i32* %Ptarget.addr, align 4
  store i32 %Pcastle_type, i32* %Pcastle_type.addr, align 4
  %0 = load i32* @gfrom, align 4
  %1 = load i32* @numb_moves, align 4
  %idxprom = sext i32 %1 to i64
  %2 = load %struct.move_s** @genfor, align 8
  %bitcast17 = bitcast %struct.move_s** @genfor to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast17, i8** %base.alloca, i8** %bound.alloca)
  %base.load = load i8** %base.alloca
  %bound.load = load i8** %bound.alloca
  %arrayidx = getelementptr inbounds %struct.move_s* %2, i64 %idxprom
  %from = getelementptr inbounds %struct.move_s* %arrayidx, i32 0, i32 0
  store i32 %0, i32* %from, align 4
  %3 = load i32* %Ptarget.addr, align 4
  %4 = load i32* @numb_moves, align 4
  %idxprom1 = sext i32 %4 to i64
  %5 = load %struct.move_s** @genfor, align 8
  %bitcast18 = bitcast %struct.move_s** @genfor to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast18, i8** %base.alloca19, i8** %bound.alloca20)
  %base.load21 = load i8** %base.alloca19
  %bound.load22 = load i8** %bound.alloca20
  %arrayidx2 = getelementptr inbounds %struct.move_s* %5, i64 %idxprom1
  %target = getelementptr inbounds %struct.move_s* %arrayidx2, i32 0, i32 1
  store i32 %3, i32* %target, align 4
  %6 = load i32* @numb_moves, align 4
  %idxprom3 = sext i32 %6 to i64
  %7 = load %struct.move_s** @genfor, align 8
  %bitcast23 = bitcast %struct.move_s** @genfor to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast23, i8** %base.alloca24, i8** %bound.alloca25)
  %base.load26 = load i8** %base.alloca24
  %bound.load27 = load i8** %bound.alloca25
  %arrayidx4 = getelementptr inbounds %struct.move_s* %7, i64 %idxprom3
  %captured = getelementptr inbounds %struct.move_s* %arrayidx4, i32 0, i32 2
  store i32 13, i32* %captured, align 4
  %8 = load i32* %Pcastle_type.addr, align 4
  %9 = load i32* @numb_moves, align 4
  %idxprom5 = sext i32 %9 to i64
  %10 = load %struct.move_s** @genfor, align 8
  %bitcast28 = bitcast %struct.move_s** @genfor to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast28, i8** %base.alloca29, i8** %bound.alloca30)
  %base.load31 = load i8** %base.alloca29
  %bound.load32 = load i8** %bound.alloca30
  %arrayidx6 = getelementptr inbounds %struct.move_s* %10, i64 %idxprom5
  %castled = getelementptr inbounds %struct.move_s* %arrayidx6, i32 0, i32 4
  store i32 %8, i32* %castled, align 4
  %11 = load i32* @numb_moves, align 4
  %idxprom7 = sext i32 %11 to i64
  %12 = load %struct.move_s** @genfor, align 8
  %bitcast33 = bitcast %struct.move_s** @genfor to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast33, i8** %base.alloca34, i8** %bound.alloca35)
  %base.load36 = load i8** %base.alloca34
  %bound.load37 = load i8** %bound.alloca35
  %arrayidx8 = getelementptr inbounds %struct.move_s* %12, i64 %idxprom7
  %promoted = getelementptr inbounds %struct.move_s* %arrayidx8, i32 0, i32 3
  store i32 0, i32* %promoted, align 4
  %13 = load i32* @numb_moves, align 4
  %idxprom9 = sext i32 %13 to i64
  %14 = load %struct.move_s** @genfor, align 8
  %bitcast38 = bitcast %struct.move_s** @genfor to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast38, i8** %base.alloca39, i8** %bound.alloca40)
  %base.load41 = load i8** %base.alloca39
  %bound.load42 = load i8** %bound.alloca40
  %arrayidx10 = getelementptr inbounds %struct.move_s* %14, i64 %idxprom9
  %ep = getelementptr inbounds %struct.move_s* %arrayidx10, i32 0, i32 5
  store i32 0, i32* %ep, align 4
  %15 = load i32* @numb_moves, align 4
  %inc = add nsw i32 %15, 1
  store i32 %inc, i32* @numb_moves, align 4
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @try_drop(i32 %ptype) #0 {
entry:
  %base.alloca35 = alloca i8*
  %bound.alloca36 = alloca i8*
  %base.alloca30 = alloca i8*
  %bound.alloca31 = alloca i8*
  %base.alloca25 = alloca i8*
  %bound.alloca26 = alloca i8*
  %base.alloca20 = alloca i8*
  %bound.alloca21 = alloca i8*
  %base.alloca15 = alloca i8*
  %bound.alloca16 = alloca i8*
  %base.alloca = alloca i8*
  %bound.alloca = alloca i8*
  %ptype.addr = alloca i32, align 4
  %ptype.addr11 = bitcast i32* %ptype.addr to i32*
  %bitcast = bitcast i32* %ptype.addr to i8*
  %mtmp = getelementptr i32* %ptype.addr11, i32 1
  %bitcast12 = bitcast i32* %mtmp to i8*
  store i32 %ptype, i32* %ptype.addr, align 4
  %0 = load i32* @numb_moves, align 4
  %idxprom = sext i32 %0 to i64
  %1 = load %struct.move_s** @genfor, align 8
  %bitcast13 = bitcast %struct.move_s** @genfor to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast13, i8** %base.alloca, i8** %bound.alloca)
  %base.load = load i8** %base.alloca
  %bound.load = load i8** %bound.alloca
  %arrayidx = getelementptr inbounds %struct.move_s* %1, i64 %idxprom
  %from = getelementptr inbounds %struct.move_s* %arrayidx, i32 0, i32 0
  store i32 0, i32* %from, align 4
  %2 = load i32* @gfrom, align 4
  %3 = load i32* @numb_moves, align 4
  %idxprom1 = sext i32 %3 to i64
  %4 = load %struct.move_s** @genfor, align 8
  %bitcast14 = bitcast %struct.move_s** @genfor to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast14, i8** %base.alloca15, i8** %bound.alloca16)
  %base.load17 = load i8** %base.alloca15
  %bound.load18 = load i8** %bound.alloca16
  %arrayidx2 = getelementptr inbounds %struct.move_s* %4, i64 %idxprom1
  %target = getelementptr inbounds %struct.move_s* %arrayidx2, i32 0, i32 1
  store i32 %2, i32* %target, align 4
  %5 = load i32* @numb_moves, align 4
  %idxprom3 = sext i32 %5 to i64
  %6 = load %struct.move_s** @genfor, align 8
  %bitcast19 = bitcast %struct.move_s** @genfor to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast19, i8** %base.alloca20, i8** %bound.alloca21)
  %base.load22 = load i8** %base.alloca20
  %bound.load23 = load i8** %bound.alloca21
  %arrayidx4 = getelementptr inbounds %struct.move_s* %6, i64 %idxprom3
  %captured = getelementptr inbounds %struct.move_s* %arrayidx4, i32 0, i32 2
  store i32 13, i32* %captured, align 4
  %7 = load i32* @numb_moves, align 4
  %idxprom5 = sext i32 %7 to i64
  %8 = load %struct.move_s** @genfor, align 8
  %bitcast24 = bitcast %struct.move_s** @genfor to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast24, i8** %base.alloca25, i8** %bound.alloca26)
  %base.load27 = load i8** %base.alloca25
  %bound.load28 = load i8** %bound.alloca26
  %arrayidx6 = getelementptr inbounds %struct.move_s* %8, i64 %idxprom5
  %castled = getelementptr inbounds %struct.move_s* %arrayidx6, i32 0, i32 4
  store i32 0, i32* %castled, align 4
  %9 = load i32* %ptype.addr, align 4
  %10 = load i32* @numb_moves, align 4
  %idxprom7 = sext i32 %10 to i64
  %11 = load %struct.move_s** @genfor, align 8
  %bitcast29 = bitcast %struct.move_s** @genfor to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast29, i8** %base.alloca30, i8** %bound.alloca31)
  %base.load32 = load i8** %base.alloca30
  %bound.load33 = load i8** %bound.alloca31
  %arrayidx8 = getelementptr inbounds %struct.move_s* %11, i64 %idxprom7
  %promoted = getelementptr inbounds %struct.move_s* %arrayidx8, i32 0, i32 3
  store i32 %9, i32* %promoted, align 4
  %12 = load i32* @numb_moves, align 4
  %idxprom9 = sext i32 %12 to i64
  %13 = load %struct.move_s** @genfor, align 8
  %bitcast34 = bitcast %struct.move_s** @genfor to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast34, i8** %base.alloca35, i8** %bound.alloca36)
  %base.load37 = load i8** %base.alloca35
  %bound.load38 = load i8** %bound.alloca36
  %arrayidx10 = getelementptr inbounds %struct.move_s* %13, i64 %idxprom9
  %ep = getelementptr inbounds %struct.move_s* %arrayidx10, i32 0, i32 5
  store i32 0, i32* %ep, align 4
  %14 = load i32* @numb_moves, align 4
  %inc = add nsw i32 %14, 1
  store i32 %inc, i32* @numb_moves, align 4
  ret void
}

; Function Attrs: nounwind uwtable
define internal i32 @in_check() #0 {
entry:
  %retval = alloca i32, align 4
  %retval10 = bitcast i32* %retval to i32*
  %bitcast = bitcast i32* %retval to i8*
  %mtmp = getelementptr i32* %retval10, i32 1
  %bitcast11 = bitcast i32* %mtmp to i8*
  %0 = load i32* @Variant, align 4
  %cmp = icmp eq i32 %0, 3
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval
  br label %return

if.end:                                           ; preds = %entry
  %1 = load i32* @white_to_move, align 4
  %cmp1 = icmp eq i32 %1, 1
  br i1 %cmp1, label %if.then2, label %if.else

if.then2:                                         ; preds = %if.end
  %2 = load i32* @wking_loc, align 4
  %call = call i32 @is_attacked(i32 %2, i32 0)
  %tobool = icmp ne i32 %call, 0
  br i1 %tobool, label %if.then3, label %if.end4

if.then3:                                         ; preds = %if.then2
  store i32 1, i32* %retval
  br label %return

if.end4:                                          ; preds = %if.then2
  br label %if.end9

if.else:                                          ; preds = %if.end
  %3 = load i32* @bking_loc, align 4
  %call5 = call i32 @is_attacked(i32 %3, i32 1)
  %tobool6 = icmp ne i32 %call5, 0
  br i1 %tobool6, label %if.then7, label %if.end8

if.then7:                                         ; preds = %if.else
  store i32 1, i32* %retval
  br label %return

if.end8:                                          ; preds = %if.else
  br label %if.end9

if.end9:                                          ; preds = %if.end8, %if.end4
  store i32 0, i32* %retval
  br label %return

return:                                           ; preds = %if.end9, %if.then7, %if.then3, %if.then
  %4 = load i32* %retval
  ret i32 %4
}

; Function Attrs: nounwind uwtable
define internal i32 @f_in_check(%struct.move_s* %moves, i32 %m) #0 {
entry:
  %base.alloca1069 = alloca i8*
  %bound.alloca1070 = alloca i8*
  %base.alloca1064 = alloca i8*
  %bound.alloca1065 = alloca i8*
  %base.alloca1059 = alloca i8*
  %bound.alloca1060 = alloca i8*
  %base.alloca = alloca i8*
  %bound.alloca = alloca i8*
  %0 = call i8* @__softboundcets_load_base_shadow_stack(i32 1)
  %1 = call i8* @__softboundcets_load_bound_shadow_stack(i32 1)
  %retval = alloca i32, align 4
  %retval1035 = bitcast i32* %retval to i32*
  %bitcast = bitcast i32* %retval to i8*
  %mtmp = getelementptr i32* %retval1035, i32 1
  %bitcast1036 = bitcast i32* %mtmp to i8*
  %moves.addr = alloca %struct.move_s*, align 8
  %moves.addr1037 = bitcast %struct.move_s** %moves.addr to %struct.move_s**
  %bitcast1038 = bitcast %struct.move_s** %moves.addr to i8*
  %mtmp1039 = getelementptr %struct.move_s** %moves.addr1037, i32 1
  %bitcast1040 = bitcast %struct.move_s** %mtmp1039 to i8*
  %m.addr = alloca i32, align 4
  %m.addr1041 = bitcast i32* %m.addr to i32*
  %bitcast1042 = bitcast i32* %m.addr to i8*
  %mtmp1043 = getelementptr i32* %m.addr1041, i32 1
  %bitcast1044 = bitcast i32* %mtmp1043 to i8*
  %target = alloca i32, align 4
  %target1045 = bitcast i32* %target to i32*
  %bitcast1046 = bitcast i32* %target to i8*
  %mtmp1047 = getelementptr i32* %target1045, i32 1
  %bitcast1048 = bitcast i32* %mtmp1047 to i8*
  %from = alloca i32, align 4
  %from1049 = bitcast i32* %from to i32*
  %bitcast1050 = bitcast i32* %from to i8*
  %mtmp1051 = getelementptr i32* %from1049, i32 1
  %bitcast1052 = bitcast i32* %mtmp1051 to i8*
  %l = alloca i32, align 4
  %l1053 = bitcast i32* %l to i32*
  %bitcast1054 = bitcast i32* %l to i8*
  %mtmp1055 = getelementptr i32* %l1053, i32 1
  %bitcast1056 = bitcast i32* %mtmp1055 to i8*
  store %struct.move_s* %moves, %struct.move_s** %moves.addr, align 8
  %bitcast1077 = bitcast %struct.move_s** %moves.addr to i8*
  call void @__softboundcets_metadata_store(i8* %bitcast1077, i8* %0, i8* %1)
  store i32 %m, i32* %m.addr, align 4
  %2 = load i32* %m.addr, align 4
  %idxprom = sext i32 %2 to i64
  %3 = load %struct.move_s** %moves.addr, align 8
  %bitcast1057 = bitcast %struct.move_s** %moves.addr to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast1057, i8** %base.alloca, i8** %bound.alloca)
  %base.load = load i8** %base.alloca
  %bound.load = load i8** %bound.alloca
  %arrayidx = getelementptr inbounds %struct.move_s* %3, i64 %idxprom
  %target1 = getelementptr inbounds %struct.move_s* %arrayidx, i32 0, i32 1
  %4 = load i32* %target1, align 4
  store i32 %4, i32* %target, align 4
  %5 = load i32* %m.addr, align 4
  %idxprom2 = sext i32 %5 to i64
  %6 = load %struct.move_s** %moves.addr, align 8
  %bitcast1058 = bitcast %struct.move_s** %moves.addr to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast1058, i8** %base.alloca1059, i8** %bound.alloca1060)
  %base.load1061 = load i8** %base.alloca1059
  %bound.load1062 = load i8** %bound.alloca1060
  %arrayidx3 = getelementptr inbounds %struct.move_s* %6, i64 %idxprom2
  %from4 = getelementptr inbounds %struct.move_s* %arrayidx3, i32 0, i32 0
  %7 = load i32* %from4, align 4
  store i32 %7, i32* %from, align 4
  %8 = load i32* @Variant, align 4
  %cmp = icmp eq i32 %8, 3
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval
  br label %return

if.end:                                           ; preds = %entry
  %9 = load i32* @white_to_move, align 4
  %cmp5 = icmp eq i32 %9, 1
  br i1 %cmp5, label %if.then6, label %if.else513

if.then6:                                         ; preds = %if.end
  %10 = load i32* %target, align 4
  %idxprom7 = sext i32 %10 to i64
  %arrayidx8 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom7
  %11 = load i32* %arrayidx8, align 4
  switch i32 %11, label %sw.epilog [
    i32 2, label %sw.bb
    i32 12, label %sw.bb18
    i32 8, label %sw.bb84
    i32 4, label %sw.bb154
    i32 10, label %sw.bb167
    i32 6, label %sw.bb311
  ]

sw.bb:                                            ; preds = %if.then6
  %12 = load i32* %target, align 4
  %sub = sub nsw i32 %12, 11
  %idxprom9 = sext i32 %sub to i64
  %arrayidx10 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom9
  %13 = load i32* %arrayidx10, align 4
  %cmp11 = icmp eq i32 %13, 5
  br i1 %cmp11, label %if.then16, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %sw.bb
  %14 = load i32* %target, align 4
  %sub12 = sub nsw i32 %14, 13
  %idxprom13 = sext i32 %sub12 to i64
  %arrayidx14 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom13
  %15 = load i32* %arrayidx14, align 4
  %cmp15 = icmp eq i32 %15, 5
  br i1 %cmp15, label %if.then16, label %if.end17

if.then16:                                        ; preds = %lor.lhs.false, %sw.bb
  store i32 1, i32* %retval
  br label %return

if.end17:                                         ; preds = %lor.lhs.false
  br label %sw.epilog

sw.bb18:                                          ; preds = %if.then6
  %16 = load i32* %target, align 4
  %idxprom19 = sext i32 %16 to i64
  %arrayidx20 = getelementptr inbounds [144 x i32]* @Xdiagl, i32 0, i64 %idxprom19
  %17 = load i32* %arrayidx20, align 4
  %18 = load i32* @wking_loc, align 4
  %idxprom21 = sext i32 %18 to i64
  %arrayidx22 = getelementptr inbounds [144 x i32]* @Xdiagl, i32 0, i64 %idxprom21
  %19 = load i32* %arrayidx22, align 4
  %cmp23 = icmp eq i32 %17, %19
  br i1 %cmp23, label %if.then24, label %if.else47

if.then24:                                        ; preds = %sw.bb18
  %20 = load i32* @wking_loc, align 4
  %21 = load i32* %target, align 4
  %cmp25 = icmp slt i32 %20, %21
  br i1 %cmp25, label %if.then26, label %if.else

if.then26:                                        ; preds = %if.then24
  %22 = load i32* @wking_loc, align 4
  %add = add nsw i32 %22, 13
  store i32 %add, i32* %l, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.then26
  %23 = load i32* %l, align 4
  %idxprom27 = sext i32 %23 to i64
  %arrayidx28 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom27
  %24 = load i32* %arrayidx28, align 4
  %cmp29 = icmp eq i32 %24, 13
  br i1 %cmp29, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %25 = load i32* %l, align 4
  %add30 = add nsw i32 %25, 13
  store i32 %add30, i32* %l, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %26 = load i32* %l, align 4
  %27 = load i32* %target, align 4
  %cmp31 = icmp eq i32 %26, %27
  br i1 %cmp31, label %if.then32, label %if.end33

if.then32:                                        ; preds = %for.end
  store i32 1, i32* %retval
  br label %return

if.end33:                                         ; preds = %for.end
  br label %if.end46

if.else:                                          ; preds = %if.then24
  %28 = load i32* @wking_loc, align 4
  %sub34 = sub nsw i32 %28, 13
  store i32 %sub34, i32* %l, align 4
  br label %for.cond35

for.cond35:                                       ; preds = %for.inc40, %if.else
  %29 = load i32* %l, align 4
  %idxprom36 = sext i32 %29 to i64
  %arrayidx37 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom36
  %30 = load i32* %arrayidx37, align 4
  %cmp38 = icmp eq i32 %30, 13
  br i1 %cmp38, label %for.body39, label %for.end42

for.body39:                                       ; preds = %for.cond35
  br label %for.inc40

for.inc40:                                        ; preds = %for.body39
  %31 = load i32* %l, align 4
  %sub41 = sub nsw i32 %31, 13
  store i32 %sub41, i32* %l, align 4
  br label %for.cond35

for.end42:                                        ; preds = %for.cond35
  %32 = load i32* %l, align 4
  %33 = load i32* %target, align 4
  %cmp43 = icmp eq i32 %32, %33
  br i1 %cmp43, label %if.then44, label %if.end45

if.then44:                                        ; preds = %for.end42
  store i32 1, i32* %retval
  br label %return

if.end45:                                         ; preds = %for.end42
  br label %if.end46

if.end46:                                         ; preds = %if.end45, %if.end33
  br label %if.end83

if.else47:                                        ; preds = %sw.bb18
  %34 = load i32* %target, align 4
  %idxprom48 = sext i32 %34 to i64
  %arrayidx49 = getelementptr inbounds [144 x i32]* @Xdiagr, i32 0, i64 %idxprom48
  %35 = load i32* %arrayidx49, align 4
  %36 = load i32* @wking_loc, align 4
  %idxprom50 = sext i32 %36 to i64
  %arrayidx51 = getelementptr inbounds [144 x i32]* @Xdiagr, i32 0, i64 %idxprom50
  %37 = load i32* %arrayidx51, align 4
  %cmp52 = icmp eq i32 %35, %37
  br i1 %cmp52, label %if.then53, label %if.end82

if.then53:                                        ; preds = %if.else47
  %38 = load i32* @wking_loc, align 4
  %39 = load i32* %target, align 4
  %cmp54 = icmp slt i32 %38, %39
  br i1 %cmp54, label %if.then55, label %if.else68

if.then55:                                        ; preds = %if.then53
  %40 = load i32* @wking_loc, align 4
  %add56 = add nsw i32 %40, 11
  store i32 %add56, i32* %l, align 4
  br label %for.cond57

for.cond57:                                       ; preds = %for.inc62, %if.then55
  %41 = load i32* %l, align 4
  %idxprom58 = sext i32 %41 to i64
  %arrayidx59 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom58
  %42 = load i32* %arrayidx59, align 4
  %cmp60 = icmp eq i32 %42, 13
  br i1 %cmp60, label %for.body61, label %for.end64

for.body61:                                       ; preds = %for.cond57
  br label %for.inc62

for.inc62:                                        ; preds = %for.body61
  %43 = load i32* %l, align 4
  %add63 = add nsw i32 %43, 11
  store i32 %add63, i32* %l, align 4
  br label %for.cond57

for.end64:                                        ; preds = %for.cond57
  %44 = load i32* %l, align 4
  %45 = load i32* %target, align 4
  %cmp65 = icmp eq i32 %44, %45
  br i1 %cmp65, label %if.then66, label %if.end67

if.then66:                                        ; preds = %for.end64
  store i32 1, i32* %retval
  br label %return

if.end67:                                         ; preds = %for.end64
  br label %if.end81

if.else68:                                        ; preds = %if.then53
  %46 = load i32* @wking_loc, align 4
  %sub69 = sub nsw i32 %46, 11
  store i32 %sub69, i32* %l, align 4
  br label %for.cond70

for.cond70:                                       ; preds = %for.inc75, %if.else68
  %47 = load i32* %l, align 4
  %idxprom71 = sext i32 %47 to i64
  %arrayidx72 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom71
  %48 = load i32* %arrayidx72, align 4
  %cmp73 = icmp eq i32 %48, 13
  br i1 %cmp73, label %for.body74, label %for.end77

for.body74:                                       ; preds = %for.cond70
  br label %for.inc75

for.inc75:                                        ; preds = %for.body74
  %49 = load i32* %l, align 4
  %sub76 = sub nsw i32 %49, 11
  store i32 %sub76, i32* %l, align 4
  br label %for.cond70

for.end77:                                        ; preds = %for.cond70
  %50 = load i32* %l, align 4
  %51 = load i32* %target, align 4
  %cmp78 = icmp eq i32 %50, %51
  br i1 %cmp78, label %if.then79, label %if.end80

if.then79:                                        ; preds = %for.end77
  store i32 1, i32* %retval
  br label %return

if.end80:                                         ; preds = %for.end77
  br label %if.end81

if.end81:                                         ; preds = %if.end80, %if.end67
  br label %if.end82

if.end82:                                         ; preds = %if.end81, %if.else47
  br label %if.end83

if.end83:                                         ; preds = %if.end82, %if.end46
  br label %sw.epilog

sw.bb84:                                          ; preds = %if.then6
  %52 = load i32* %target, align 4
  %idxprom85 = sext i32 %52 to i64
  %arrayidx86 = getelementptr inbounds [144 x i32]* @Xfile, i32 0, i64 %idxprom85
  %53 = load i32* %arrayidx86, align 4
  %54 = load i32* @wking_loc, align 4
  %idxprom87 = sext i32 %54 to i64
  %arrayidx88 = getelementptr inbounds [144 x i32]* @Xfile, i32 0, i64 %idxprom87
  %55 = load i32* %arrayidx88, align 4
  %cmp89 = icmp eq i32 %53, %55
  br i1 %cmp89, label %if.then90, label %if.else119

if.then90:                                        ; preds = %sw.bb84
  %56 = load i32* @wking_loc, align 4
  %57 = load i32* %target, align 4
  %cmp91 = icmp slt i32 %56, %57
  br i1 %cmp91, label %if.then92, label %if.else105

if.then92:                                        ; preds = %if.then90
  %58 = load i32* @wking_loc, align 4
  %add93 = add nsw i32 %58, 12
  store i32 %add93, i32* %l, align 4
  br label %for.cond94

for.cond94:                                       ; preds = %for.inc99, %if.then92
  %59 = load i32* %l, align 4
  %idxprom95 = sext i32 %59 to i64
  %arrayidx96 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom95
  %60 = load i32* %arrayidx96, align 4
  %cmp97 = icmp eq i32 %60, 13
  br i1 %cmp97, label %for.body98, label %for.end101

for.body98:                                       ; preds = %for.cond94
  br label %for.inc99

for.inc99:                                        ; preds = %for.body98
  %61 = load i32* %l, align 4
  %add100 = add nsw i32 %61, 12
  store i32 %add100, i32* %l, align 4
  br label %for.cond94

for.end101:                                       ; preds = %for.cond94
  %62 = load i32* %l, align 4
  %63 = load i32* %target, align 4
  %cmp102 = icmp eq i32 %62, %63
  br i1 %cmp102, label %if.then103, label %if.end104

if.then103:                                       ; preds = %for.end101
  store i32 1, i32* %retval
  br label %return

if.end104:                                        ; preds = %for.end101
  br label %if.end118

if.else105:                                       ; preds = %if.then90
  %64 = load i32* @wking_loc, align 4
  %sub106 = sub nsw i32 %64, 12
  store i32 %sub106, i32* %l, align 4
  br label %for.cond107

for.cond107:                                      ; preds = %for.inc112, %if.else105
  %65 = load i32* %l, align 4
  %idxprom108 = sext i32 %65 to i64
  %arrayidx109 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom108
  %66 = load i32* %arrayidx109, align 4
  %cmp110 = icmp eq i32 %66, 13
  br i1 %cmp110, label %for.body111, label %for.end114

for.body111:                                      ; preds = %for.cond107
  br label %for.inc112

for.inc112:                                       ; preds = %for.body111
  %67 = load i32* %l, align 4
  %sub113 = sub nsw i32 %67, 12
  store i32 %sub113, i32* %l, align 4
  br label %for.cond107

for.end114:                                       ; preds = %for.cond107
  %68 = load i32* %l, align 4
  %69 = load i32* %target, align 4
  %cmp115 = icmp eq i32 %68, %69
  br i1 %cmp115, label %if.then116, label %if.end117

if.then116:                                       ; preds = %for.end114
  store i32 1, i32* %retval
  br label %return

if.end117:                                        ; preds = %for.end114
  br label %if.end118

if.end118:                                        ; preds = %if.end117, %if.end104
  br label %if.end153

if.else119:                                       ; preds = %sw.bb84
  %70 = load i32* %target, align 4
  %idxprom120 = sext i32 %70 to i64
  %arrayidx121 = getelementptr inbounds [144 x i32]* @Xrank, i32 0, i64 %idxprom120
  %71 = load i32* %arrayidx121, align 4
  %72 = load i32* @wking_loc, align 4
  %idxprom122 = sext i32 %72 to i64
  %arrayidx123 = getelementptr inbounds [144 x i32]* @Xrank, i32 0, i64 %idxprom122
  %73 = load i32* %arrayidx123, align 4
  %cmp124 = icmp eq i32 %71, %73
  br i1 %cmp124, label %if.then125, label %if.end152

if.then125:                                       ; preds = %if.else119
  %74 = load i32* @wking_loc, align 4
  %75 = load i32* %target, align 4
  %cmp126 = icmp slt i32 %74, %75
  br i1 %cmp126, label %if.then127, label %if.else139

if.then127:                                       ; preds = %if.then125
  %76 = load i32* @wking_loc, align 4
  %add128 = add nsw i32 %76, 1
  store i32 %add128, i32* %l, align 4
  br label %for.cond129

for.cond129:                                      ; preds = %for.inc134, %if.then127
  %77 = load i32* %l, align 4
  %idxprom130 = sext i32 %77 to i64
  %arrayidx131 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom130
  %78 = load i32* %arrayidx131, align 4
  %cmp132 = icmp eq i32 %78, 13
  br i1 %cmp132, label %for.body133, label %for.end135

for.body133:                                      ; preds = %for.cond129
  br label %for.inc134

for.inc134:                                       ; preds = %for.body133
  %79 = load i32* %l, align 4
  %inc = add nsw i32 %79, 1
  store i32 %inc, i32* %l, align 4
  br label %for.cond129

for.end135:                                       ; preds = %for.cond129
  %80 = load i32* %l, align 4
  %81 = load i32* %target, align 4
  %cmp136 = icmp eq i32 %80, %81
  br i1 %cmp136, label %if.then137, label %if.end138

if.then137:                                       ; preds = %for.end135
  store i32 1, i32* %retval
  br label %return

if.end138:                                        ; preds = %for.end135
  br label %if.end151

if.else139:                                       ; preds = %if.then125
  %82 = load i32* @wking_loc, align 4
  %sub140 = sub nsw i32 %82, 1
  store i32 %sub140, i32* %l, align 4
  br label %for.cond141

for.cond141:                                      ; preds = %for.inc146, %if.else139
  %83 = load i32* %l, align 4
  %idxprom142 = sext i32 %83 to i64
  %arrayidx143 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom142
  %84 = load i32* %arrayidx143, align 4
  %cmp144 = icmp eq i32 %84, 13
  br i1 %cmp144, label %for.body145, label %for.end147

for.body145:                                      ; preds = %for.cond141
  br label %for.inc146

for.inc146:                                       ; preds = %for.body145
  %85 = load i32* %l, align 4
  %dec = add nsw i32 %85, -1
  store i32 %dec, i32* %l, align 4
  br label %for.cond141

for.end147:                                       ; preds = %for.cond141
  %86 = load i32* %l, align 4
  %87 = load i32* %target, align 4
  %cmp148 = icmp eq i32 %86, %87
  br i1 %cmp148, label %if.then149, label %if.end150

if.then149:                                       ; preds = %for.end147
  store i32 1, i32* %retval
  br label %return

if.end150:                                        ; preds = %for.end147
  br label %if.end151

if.end151:                                        ; preds = %if.end150, %if.end138
  br label %if.end152

if.end152:                                        ; preds = %if.end151, %if.else119
  br label %if.end153

if.end153:                                        ; preds = %if.end152, %if.end118
  br label %sw.epilog

sw.bb154:                                         ; preds = %if.then6
  store i32 0, i32* %l, align 4
  br label %for.cond155

for.cond155:                                      ; preds = %for.inc164, %sw.bb154
  %88 = load i32* %l, align 4
  %cmp156 = icmp slt i32 %88, 8
  br i1 %cmp156, label %for.body157, label %for.end166

for.body157:                                      ; preds = %for.cond155
  %89 = load i32* @wking_loc, align 4
  %90 = load i32* %l, align 4
  %idxprom158 = sext i32 %90 to i64
  %bitcast1073 = bitcast [8 x i32]* @f_in_check.knight_o to i8*
  %bitcast1074 = bitcast [8 x i32]* getelementptr inbounds ([8 x i32]* @f_in_check.knight_o, i32 1) to i8*
  %arrayidx159 = getelementptr inbounds [8 x i32]* @f_in_check.knight_o, i32 0, i64 %idxprom158
  %91 = load i32* %arrayidx159, align 4
  %add160 = add nsw i32 %89, %91
  %92 = load i32* %target, align 4
  %cmp161 = icmp eq i32 %add160, %92
  br i1 %cmp161, label %if.then162, label %if.end163

if.then162:                                       ; preds = %for.body157
  store i32 1, i32* %retval
  br label %return

if.end163:                                        ; preds = %for.body157
  br label %for.inc164

for.inc164:                                       ; preds = %if.end163
  %93 = load i32* %l, align 4
  %inc165 = add nsw i32 %93, 1
  store i32 %inc165, i32* %l, align 4
  br label %for.cond155

for.end166:                                       ; preds = %for.cond155
  br label %sw.epilog

sw.bb167:                                         ; preds = %if.then6
  %94 = load i32* %target, align 4
  %idxprom168 = sext i32 %94 to i64
  %arrayidx169 = getelementptr inbounds [144 x i32]* @Xfile, i32 0, i64 %idxprom168
  %95 = load i32* %arrayidx169, align 4
  %96 = load i32* @wking_loc, align 4
  %idxprom170 = sext i32 %96 to i64
  %arrayidx171 = getelementptr inbounds [144 x i32]* @Xfile, i32 0, i64 %idxprom170
  %97 = load i32* %arrayidx171, align 4
  %cmp172 = icmp eq i32 %95, %97
  br i1 %cmp172, label %if.then173, label %if.else202

if.then173:                                       ; preds = %sw.bb167
  %98 = load i32* @wking_loc, align 4
  %99 = load i32* %target, align 4
  %cmp174 = icmp slt i32 %98, %99
  br i1 %cmp174, label %if.then175, label %if.else188

if.then175:                                       ; preds = %if.then173
  %100 = load i32* @wking_loc, align 4
  %add176 = add nsw i32 %100, 12
  store i32 %add176, i32* %l, align 4
  br label %for.cond177

for.cond177:                                      ; preds = %for.inc182, %if.then175
  %101 = load i32* %l, align 4
  %idxprom178 = sext i32 %101 to i64
  %arrayidx179 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom178
  %102 = load i32* %arrayidx179, align 4
  %cmp180 = icmp eq i32 %102, 13
  br i1 %cmp180, label %for.body181, label %for.end184

for.body181:                                      ; preds = %for.cond177
  br label %for.inc182

for.inc182:                                       ; preds = %for.body181
  %103 = load i32* %l, align 4
  %add183 = add nsw i32 %103, 12
  store i32 %add183, i32* %l, align 4
  br label %for.cond177

for.end184:                                       ; preds = %for.cond177
  %104 = load i32* %l, align 4
  %105 = load i32* %target, align 4
  %cmp185 = icmp eq i32 %104, %105
  br i1 %cmp185, label %if.then186, label %if.end187

if.then186:                                       ; preds = %for.end184
  store i32 1, i32* %retval
  br label %return

if.end187:                                        ; preds = %for.end184
  br label %if.end201

if.else188:                                       ; preds = %if.then173
  %106 = load i32* @wking_loc, align 4
  %sub189 = sub nsw i32 %106, 12
  store i32 %sub189, i32* %l, align 4
  br label %for.cond190

for.cond190:                                      ; preds = %for.inc195, %if.else188
  %107 = load i32* %l, align 4
  %idxprom191 = sext i32 %107 to i64
  %arrayidx192 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom191
  %108 = load i32* %arrayidx192, align 4
  %cmp193 = icmp eq i32 %108, 13
  br i1 %cmp193, label %for.body194, label %for.end197

for.body194:                                      ; preds = %for.cond190
  br label %for.inc195

for.inc195:                                       ; preds = %for.body194
  %109 = load i32* %l, align 4
  %sub196 = sub nsw i32 %109, 12
  store i32 %sub196, i32* %l, align 4
  br label %for.cond190

for.end197:                                       ; preds = %for.cond190
  %110 = load i32* %l, align 4
  %111 = load i32* %target, align 4
  %cmp198 = icmp eq i32 %110, %111
  br i1 %cmp198, label %if.then199, label %if.end200

if.then199:                                       ; preds = %for.end197
  store i32 1, i32* %retval
  br label %return

if.end200:                                        ; preds = %for.end197
  br label %if.end201

if.end201:                                        ; preds = %if.end200, %if.end187
  br label %if.end310

if.else202:                                       ; preds = %sw.bb167
  %112 = load i32* %target, align 4
  %idxprom203 = sext i32 %112 to i64
  %arrayidx204 = getelementptr inbounds [144 x i32]* @Xrank, i32 0, i64 %idxprom203
  %113 = load i32* %arrayidx204, align 4
  %114 = load i32* @wking_loc, align 4
  %idxprom205 = sext i32 %114 to i64
  %arrayidx206 = getelementptr inbounds [144 x i32]* @Xrank, i32 0, i64 %idxprom205
  %115 = load i32* %arrayidx206, align 4
  %cmp207 = icmp eq i32 %113, %115
  br i1 %cmp207, label %if.then208, label %if.else237

if.then208:                                       ; preds = %if.else202
  %116 = load i32* @wking_loc, align 4
  %117 = load i32* %target, align 4
  %cmp209 = icmp slt i32 %116, %117
  br i1 %cmp209, label %if.then210, label %if.else223

if.then210:                                       ; preds = %if.then208
  %118 = load i32* @wking_loc, align 4
  %add211 = add nsw i32 %118, 1
  store i32 %add211, i32* %l, align 4
  br label %for.cond212

for.cond212:                                      ; preds = %for.inc217, %if.then210
  %119 = load i32* %l, align 4
  %idxprom213 = sext i32 %119 to i64
  %arrayidx214 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom213
  %120 = load i32* %arrayidx214, align 4
  %cmp215 = icmp eq i32 %120, 13
  br i1 %cmp215, label %for.body216, label %for.end219

for.body216:                                      ; preds = %for.cond212
  br label %for.inc217

for.inc217:                                       ; preds = %for.body216
  %121 = load i32* %l, align 4
  %add218 = add nsw i32 %121, 1
  store i32 %add218, i32* %l, align 4
  br label %for.cond212

for.end219:                                       ; preds = %for.cond212
  %122 = load i32* %l, align 4
  %123 = load i32* %target, align 4
  %cmp220 = icmp eq i32 %122, %123
  br i1 %cmp220, label %if.then221, label %if.end222

if.then221:                                       ; preds = %for.end219
  store i32 1, i32* %retval
  br label %return

if.end222:                                        ; preds = %for.end219
  br label %if.end236

if.else223:                                       ; preds = %if.then208
  %124 = load i32* @wking_loc, align 4
  %sub224 = sub nsw i32 %124, 1
  store i32 %sub224, i32* %l, align 4
  br label %for.cond225

for.cond225:                                      ; preds = %for.inc230, %if.else223
  %125 = load i32* %l, align 4
  %idxprom226 = sext i32 %125 to i64
  %arrayidx227 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom226
  %126 = load i32* %arrayidx227, align 4
  %cmp228 = icmp eq i32 %126, 13
  br i1 %cmp228, label %for.body229, label %for.end232

for.body229:                                      ; preds = %for.cond225
  br label %for.inc230

for.inc230:                                       ; preds = %for.body229
  %127 = load i32* %l, align 4
  %sub231 = sub nsw i32 %127, 1
  store i32 %sub231, i32* %l, align 4
  br label %for.cond225

for.end232:                                       ; preds = %for.cond225
  %128 = load i32* %l, align 4
  %129 = load i32* %target, align 4
  %cmp233 = icmp eq i32 %128, %129
  br i1 %cmp233, label %if.then234, label %if.end235

if.then234:                                       ; preds = %for.end232
  store i32 1, i32* %retval
  br label %return

if.end235:                                        ; preds = %for.end232
  br label %if.end236

if.end236:                                        ; preds = %if.end235, %if.end222
  br label %if.end309

if.else237:                                       ; preds = %if.else202
  %130 = load i32* %target, align 4
  %idxprom238 = sext i32 %130 to i64
  %arrayidx239 = getelementptr inbounds [144 x i32]* @Xdiagl, i32 0, i64 %idxprom238
  %131 = load i32* %arrayidx239, align 4
  %132 = load i32* @wking_loc, align 4
  %idxprom240 = sext i32 %132 to i64
  %arrayidx241 = getelementptr inbounds [144 x i32]* @Xdiagl, i32 0, i64 %idxprom240
  %133 = load i32* %arrayidx241, align 4
  %cmp242 = icmp eq i32 %131, %133
  br i1 %cmp242, label %if.then243, label %if.else272

if.then243:                                       ; preds = %if.else237
  %134 = load i32* @wking_loc, align 4
  %135 = load i32* %target, align 4
  %cmp244 = icmp slt i32 %134, %135
  br i1 %cmp244, label %if.then245, label %if.else258

if.then245:                                       ; preds = %if.then243
  %136 = load i32* @wking_loc, align 4
  %add246 = add nsw i32 %136, 13
  store i32 %add246, i32* %l, align 4
  br label %for.cond247

for.cond247:                                      ; preds = %for.inc252, %if.then245
  %137 = load i32* %l, align 4
  %idxprom248 = sext i32 %137 to i64
  %arrayidx249 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom248
  %138 = load i32* %arrayidx249, align 4
  %cmp250 = icmp eq i32 %138, 13
  br i1 %cmp250, label %for.body251, label %for.end254

for.body251:                                      ; preds = %for.cond247
  br label %for.inc252

for.inc252:                                       ; preds = %for.body251
  %139 = load i32* %l, align 4
  %add253 = add nsw i32 %139, 13
  store i32 %add253, i32* %l, align 4
  br label %for.cond247

for.end254:                                       ; preds = %for.cond247
  %140 = load i32* %l, align 4
  %141 = load i32* %target, align 4
  %cmp255 = icmp eq i32 %140, %141
  br i1 %cmp255, label %if.then256, label %if.end257

if.then256:                                       ; preds = %for.end254
  store i32 1, i32* %retval
  br label %return

if.end257:                                        ; preds = %for.end254
  br label %if.end271

if.else258:                                       ; preds = %if.then243
  %142 = load i32* @wking_loc, align 4
  %sub259 = sub nsw i32 %142, 13
  store i32 %sub259, i32* %l, align 4
  br label %for.cond260

for.cond260:                                      ; preds = %for.inc265, %if.else258
  %143 = load i32* %l, align 4
  %idxprom261 = sext i32 %143 to i64
  %arrayidx262 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom261
  %144 = load i32* %arrayidx262, align 4
  %cmp263 = icmp eq i32 %144, 13
  br i1 %cmp263, label %for.body264, label %for.end267

for.body264:                                      ; preds = %for.cond260
  br label %for.inc265

for.inc265:                                       ; preds = %for.body264
  %145 = load i32* %l, align 4
  %sub266 = sub nsw i32 %145, 13
  store i32 %sub266, i32* %l, align 4
  br label %for.cond260

for.end267:                                       ; preds = %for.cond260
  %146 = load i32* %l, align 4
  %147 = load i32* %target, align 4
  %cmp268 = icmp eq i32 %146, %147
  br i1 %cmp268, label %if.then269, label %if.end270

if.then269:                                       ; preds = %for.end267
  store i32 1, i32* %retval
  br label %return

if.end270:                                        ; preds = %for.end267
  br label %if.end271

if.end271:                                        ; preds = %if.end270, %if.end257
  br label %if.end308

if.else272:                                       ; preds = %if.else237
  %148 = load i32* %target, align 4
  %idxprom273 = sext i32 %148 to i64
  %arrayidx274 = getelementptr inbounds [144 x i32]* @Xdiagr, i32 0, i64 %idxprom273
  %149 = load i32* %arrayidx274, align 4
  %150 = load i32* @wking_loc, align 4
  %idxprom275 = sext i32 %150 to i64
  %arrayidx276 = getelementptr inbounds [144 x i32]* @Xdiagr, i32 0, i64 %idxprom275
  %151 = load i32* %arrayidx276, align 4
  %cmp277 = icmp eq i32 %149, %151
  br i1 %cmp277, label %if.then278, label %if.end307

if.then278:                                       ; preds = %if.else272
  %152 = load i32* @wking_loc, align 4
  %153 = load i32* %target, align 4
  %cmp279 = icmp slt i32 %152, %153
  br i1 %cmp279, label %if.then280, label %if.else293

if.then280:                                       ; preds = %if.then278
  %154 = load i32* @wking_loc, align 4
  %add281 = add nsw i32 %154, 11
  store i32 %add281, i32* %l, align 4
  br label %for.cond282

for.cond282:                                      ; preds = %for.inc287, %if.then280
  %155 = load i32* %l, align 4
  %idxprom283 = sext i32 %155 to i64
  %arrayidx284 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom283
  %156 = load i32* %arrayidx284, align 4
  %cmp285 = icmp eq i32 %156, 13
  br i1 %cmp285, label %for.body286, label %for.end289

for.body286:                                      ; preds = %for.cond282
  br label %for.inc287

for.inc287:                                       ; preds = %for.body286
  %157 = load i32* %l, align 4
  %add288 = add nsw i32 %157, 11
  store i32 %add288, i32* %l, align 4
  br label %for.cond282

for.end289:                                       ; preds = %for.cond282
  %158 = load i32* %l, align 4
  %159 = load i32* %target, align 4
  %cmp290 = icmp eq i32 %158, %159
  br i1 %cmp290, label %if.then291, label %if.end292

if.then291:                                       ; preds = %for.end289
  store i32 1, i32* %retval
  br label %return

if.end292:                                        ; preds = %for.end289
  br label %if.end306

if.else293:                                       ; preds = %if.then278
  %160 = load i32* @wking_loc, align 4
  %sub294 = sub nsw i32 %160, 11
  store i32 %sub294, i32* %l, align 4
  br label %for.cond295

for.cond295:                                      ; preds = %for.inc300, %if.else293
  %161 = load i32* %l, align 4
  %idxprom296 = sext i32 %161 to i64
  %arrayidx297 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom296
  %162 = load i32* %arrayidx297, align 4
  %cmp298 = icmp eq i32 %162, 13
  br i1 %cmp298, label %for.body299, label %for.end302

for.body299:                                      ; preds = %for.cond295
  br label %for.inc300

for.inc300:                                       ; preds = %for.body299
  %163 = load i32* %l, align 4
  %sub301 = sub nsw i32 %163, 11
  store i32 %sub301, i32* %l, align 4
  br label %for.cond295

for.end302:                                       ; preds = %for.cond295
  %164 = load i32* %l, align 4
  %165 = load i32* %target, align 4
  %cmp303 = icmp eq i32 %164, %165
  br i1 %cmp303, label %if.then304, label %if.end305

if.then304:                                       ; preds = %for.end302
  store i32 1, i32* %retval
  br label %return

if.end305:                                        ; preds = %for.end302
  br label %if.end306

if.end306:                                        ; preds = %if.end305, %if.end292
  br label %if.end307

if.end307:                                        ; preds = %if.end306, %if.else272
  br label %if.end308

if.end308:                                        ; preds = %if.end307, %if.end271
  br label %if.end309

if.end309:                                        ; preds = %if.end308, %if.end236
  br label %if.end310

if.end310:                                        ; preds = %if.end309, %if.end201
  br label %sw.epilog

sw.bb311:                                         ; preds = %if.then6
  %166 = load i32* %m.addr, align 4
  %idxprom312 = sext i32 %166 to i64
  %167 = load %struct.move_s** %moves.addr, align 8
  %bitcast1063 = bitcast %struct.move_s** %moves.addr to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast1063, i8** %base.alloca1064, i8** %bound.alloca1065)
  %base.load1066 = load i8** %base.alloca1064
  %bound.load1067 = load i8** %bound.alloca1065
  %arrayidx313 = getelementptr inbounds %struct.move_s* %167, i64 %idxprom312
  %castled = getelementptr inbounds %struct.move_s* %arrayidx313, i32 0, i32 4
  %168 = load i32* %castled, align 4
  %tobool = icmp ne i32 %168, 0
  br i1 %tobool, label %if.then314, label %if.end318

if.then314:                                       ; preds = %sw.bb311
  %169 = load i32* @wking_loc, align 4
  %call = call i32 @is_attacked(i32 %169, i32 0)
  %tobool315 = icmp ne i32 %call, 0
  br i1 %tobool315, label %if.then316, label %if.else317

if.then316:                                       ; preds = %if.then314
  store i32 1, i32* %retval
  br label %return

if.else317:                                       ; preds = %if.then314
  store i32 0, i32* %retval
  br label %return

if.end318:                                        ; preds = %sw.bb311
  br label %sw.epilog

sw.epilog:                                        ; preds = %if.end318, %if.end310, %for.end166, %if.end153, %if.end83, %if.end17, %if.then6
  %170 = load i32* %from, align 4
  %cmp319 = icmp eq i32 %170, 0
  br i1 %cmp319, label %if.then320, label %if.end321

if.then320:                                       ; preds = %sw.epilog
  store i32 0, i32* %retval
  br label %return

if.end321:                                        ; preds = %sw.epilog
  %171 = load i32* %from, align 4
  %idxprom322 = sext i32 %171 to i64
  %arrayidx323 = getelementptr inbounds [144 x i32]* @Xrank, i32 0, i64 %idxprom322
  %172 = load i32* %arrayidx323, align 4
  %173 = load i32* @wking_loc, align 4
  %idxprom324 = sext i32 %173 to i64
  %arrayidx325 = getelementptr inbounds [144 x i32]* @Xrank, i32 0, i64 %idxprom324
  %174 = load i32* %arrayidx325, align 4
  %cmp326 = icmp eq i32 %172, %174
  br i1 %cmp326, label %if.then327, label %if.else368

if.then327:                                       ; preds = %if.end321
  %175 = load i32* @wking_loc, align 4
  %176 = load i32* %from, align 4
  %cmp328 = icmp sgt i32 %175, %176
  br i1 %cmp328, label %if.then329, label %if.else348

if.then329:                                       ; preds = %if.then327
  %177 = load i32* @wking_loc, align 4
  %sub330 = sub nsw i32 %177, 1
  store i32 %sub330, i32* %l, align 4
  br label %for.cond331

for.cond331:                                      ; preds = %for.inc336, %if.then329
  %178 = load i32* %l, align 4
  %idxprom332 = sext i32 %178 to i64
  %arrayidx333 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom332
  %179 = load i32* %arrayidx333, align 4
  %cmp334 = icmp eq i32 %179, 13
  br i1 %cmp334, label %for.body335, label %for.end338

for.body335:                                      ; preds = %for.cond331
  br label %for.inc336

for.inc336:                                       ; preds = %for.body335
  %180 = load i32* %l, align 4
  %dec337 = add nsw i32 %180, -1
  store i32 %dec337, i32* %l, align 4
  br label %for.cond331

for.end338:                                       ; preds = %for.cond331
  %181 = load i32* %l, align 4
  %idxprom339 = sext i32 %181 to i64
  %arrayidx340 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom339
  %182 = load i32* %arrayidx340, align 4
  %cmp341 = icmp eq i32 %182, 8
  br i1 %cmp341, label %if.then346, label %lor.lhs.false342

lor.lhs.false342:                                 ; preds = %for.end338
  %183 = load i32* %l, align 4
  %idxprom343 = sext i32 %183 to i64
  %arrayidx344 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom343
  %184 = load i32* %arrayidx344, align 4
  %cmp345 = icmp eq i32 %184, 10
  br i1 %cmp345, label %if.then346, label %if.end347

if.then346:                                       ; preds = %lor.lhs.false342, %for.end338
  store i32 1, i32* %retval
  br label %return

if.end347:                                        ; preds = %lor.lhs.false342
  br label %if.end367

if.else348:                                       ; preds = %if.then327
  %185 = load i32* @wking_loc, align 4
  %add349 = add nsw i32 %185, 1
  store i32 %add349, i32* %l, align 4
  br label %for.cond350

for.cond350:                                      ; preds = %for.inc355, %if.else348
  %186 = load i32* %l, align 4
  %idxprom351 = sext i32 %186 to i64
  %arrayidx352 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom351
  %187 = load i32* %arrayidx352, align 4
  %cmp353 = icmp eq i32 %187, 13
  br i1 %cmp353, label %for.body354, label %for.end357

for.body354:                                      ; preds = %for.cond350
  br label %for.inc355

for.inc355:                                       ; preds = %for.body354
  %188 = load i32* %l, align 4
  %inc356 = add nsw i32 %188, 1
  store i32 %inc356, i32* %l, align 4
  br label %for.cond350

for.end357:                                       ; preds = %for.cond350
  %189 = load i32* %l, align 4
  %idxprom358 = sext i32 %189 to i64
  %arrayidx359 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom358
  %190 = load i32* %arrayidx359, align 4
  %cmp360 = icmp eq i32 %190, 8
  br i1 %cmp360, label %if.then365, label %lor.lhs.false361

lor.lhs.false361:                                 ; preds = %for.end357
  %191 = load i32* %l, align 4
  %idxprom362 = sext i32 %191 to i64
  %arrayidx363 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom362
  %192 = load i32* %arrayidx363, align 4
  %cmp364 = icmp eq i32 %192, 10
  br i1 %cmp364, label %if.then365, label %if.end366

if.then365:                                       ; preds = %lor.lhs.false361, %for.end357
  store i32 1, i32* %retval
  br label %return

if.end366:                                        ; preds = %lor.lhs.false361
  br label %if.end367

if.end367:                                        ; preds = %if.end366, %if.end347
  br label %if.end512

if.else368:                                       ; preds = %if.end321
  %193 = load i32* %from, align 4
  %idxprom369 = sext i32 %193 to i64
  %arrayidx370 = getelementptr inbounds [144 x i32]* @Xfile, i32 0, i64 %idxprom369
  %194 = load i32* %arrayidx370, align 4
  %195 = load i32* @wking_loc, align 4
  %idxprom371 = sext i32 %195 to i64
  %arrayidx372 = getelementptr inbounds [144 x i32]* @Xfile, i32 0, i64 %idxprom371
  %196 = load i32* %arrayidx372, align 4
  %cmp373 = icmp eq i32 %194, %196
  br i1 %cmp373, label %if.then374, label %if.else415

if.then374:                                       ; preds = %if.else368
  %197 = load i32* @wking_loc, align 4
  %198 = load i32* %from, align 4
  %cmp375 = icmp sgt i32 %197, %198
  br i1 %cmp375, label %if.then376, label %if.else395

if.then376:                                       ; preds = %if.then374
  %199 = load i32* @wking_loc, align 4
  %sub377 = sub nsw i32 %199, 12
  store i32 %sub377, i32* %l, align 4
  br label %for.cond378

for.cond378:                                      ; preds = %for.inc383, %if.then376
  %200 = load i32* %l, align 4
  %idxprom379 = sext i32 %200 to i64
  %arrayidx380 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom379
  %201 = load i32* %arrayidx380, align 4
  %cmp381 = icmp eq i32 %201, 13
  br i1 %cmp381, label %for.body382, label %for.end385

for.body382:                                      ; preds = %for.cond378
  br label %for.inc383

for.inc383:                                       ; preds = %for.body382
  %202 = load i32* %l, align 4
  %sub384 = sub nsw i32 %202, 12
  store i32 %sub384, i32* %l, align 4
  br label %for.cond378

for.end385:                                       ; preds = %for.cond378
  %203 = load i32* %l, align 4
  %idxprom386 = sext i32 %203 to i64
  %arrayidx387 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom386
  %204 = load i32* %arrayidx387, align 4
  %cmp388 = icmp eq i32 %204, 8
  br i1 %cmp388, label %if.then393, label %lor.lhs.false389

lor.lhs.false389:                                 ; preds = %for.end385
  %205 = load i32* %l, align 4
  %idxprom390 = sext i32 %205 to i64
  %arrayidx391 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom390
  %206 = load i32* %arrayidx391, align 4
  %cmp392 = icmp eq i32 %206, 10
  br i1 %cmp392, label %if.then393, label %if.end394

if.then393:                                       ; preds = %lor.lhs.false389, %for.end385
  store i32 1, i32* %retval
  br label %return

if.end394:                                        ; preds = %lor.lhs.false389
  br label %if.end414

if.else395:                                       ; preds = %if.then374
  %207 = load i32* @wking_loc, align 4
  %add396 = add nsw i32 %207, 12
  store i32 %add396, i32* %l, align 4
  br label %for.cond397

for.cond397:                                      ; preds = %for.inc402, %if.else395
  %208 = load i32* %l, align 4
  %idxprom398 = sext i32 %208 to i64
  %arrayidx399 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom398
  %209 = load i32* %arrayidx399, align 4
  %cmp400 = icmp eq i32 %209, 13
  br i1 %cmp400, label %for.body401, label %for.end404

for.body401:                                      ; preds = %for.cond397
  br label %for.inc402

for.inc402:                                       ; preds = %for.body401
  %210 = load i32* %l, align 4
  %add403 = add nsw i32 %210, 12
  store i32 %add403, i32* %l, align 4
  br label %for.cond397

for.end404:                                       ; preds = %for.cond397
  %211 = load i32* %l, align 4
  %idxprom405 = sext i32 %211 to i64
  %arrayidx406 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom405
  %212 = load i32* %arrayidx406, align 4
  %cmp407 = icmp eq i32 %212, 8
  br i1 %cmp407, label %if.then412, label %lor.lhs.false408

lor.lhs.false408:                                 ; preds = %for.end404
  %213 = load i32* %l, align 4
  %idxprom409 = sext i32 %213 to i64
  %arrayidx410 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom409
  %214 = load i32* %arrayidx410, align 4
  %cmp411 = icmp eq i32 %214, 10
  br i1 %cmp411, label %if.then412, label %if.end413

if.then412:                                       ; preds = %lor.lhs.false408, %for.end404
  store i32 1, i32* %retval
  br label %return

if.end413:                                        ; preds = %lor.lhs.false408
  br label %if.end414

if.end414:                                        ; preds = %if.end413, %if.end394
  br label %if.end511

if.else415:                                       ; preds = %if.else368
  %215 = load i32* %from, align 4
  %idxprom416 = sext i32 %215 to i64
  %arrayidx417 = getelementptr inbounds [144 x i32]* @Xdiagl, i32 0, i64 %idxprom416
  %216 = load i32* %arrayidx417, align 4
  %217 = load i32* @wking_loc, align 4
  %idxprom418 = sext i32 %217 to i64
  %arrayidx419 = getelementptr inbounds [144 x i32]* @Xdiagl, i32 0, i64 %idxprom418
  %218 = load i32* %arrayidx419, align 4
  %cmp420 = icmp eq i32 %216, %218
  br i1 %cmp420, label %if.then421, label %if.else462

if.then421:                                       ; preds = %if.else415
  %219 = load i32* @wking_loc, align 4
  %220 = load i32* %from, align 4
  %cmp422 = icmp sgt i32 %219, %220
  br i1 %cmp422, label %if.then423, label %if.else442

if.then423:                                       ; preds = %if.then421
  %221 = load i32* @wking_loc, align 4
  %sub424 = sub nsw i32 %221, 13
  store i32 %sub424, i32* %l, align 4
  br label %for.cond425

for.cond425:                                      ; preds = %for.inc430, %if.then423
  %222 = load i32* %l, align 4
  %idxprom426 = sext i32 %222 to i64
  %arrayidx427 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom426
  %223 = load i32* %arrayidx427, align 4
  %cmp428 = icmp eq i32 %223, 13
  br i1 %cmp428, label %for.body429, label %for.end432

for.body429:                                      ; preds = %for.cond425
  br label %for.inc430

for.inc430:                                       ; preds = %for.body429
  %224 = load i32* %l, align 4
  %sub431 = sub nsw i32 %224, 13
  store i32 %sub431, i32* %l, align 4
  br label %for.cond425

for.end432:                                       ; preds = %for.cond425
  %225 = load i32* %l, align 4
  %idxprom433 = sext i32 %225 to i64
  %arrayidx434 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom433
  %226 = load i32* %arrayidx434, align 4
  %cmp435 = icmp eq i32 %226, 12
  br i1 %cmp435, label %if.then440, label %lor.lhs.false436

lor.lhs.false436:                                 ; preds = %for.end432
  %227 = load i32* %l, align 4
  %idxprom437 = sext i32 %227 to i64
  %arrayidx438 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom437
  %228 = load i32* %arrayidx438, align 4
  %cmp439 = icmp eq i32 %228, 10
  br i1 %cmp439, label %if.then440, label %if.end441

if.then440:                                       ; preds = %lor.lhs.false436, %for.end432
  store i32 1, i32* %retval
  br label %return

if.end441:                                        ; preds = %lor.lhs.false436
  br label %if.end461

if.else442:                                       ; preds = %if.then421
  %229 = load i32* @wking_loc, align 4
  %add443 = add nsw i32 %229, 13
  store i32 %add443, i32* %l, align 4
  br label %for.cond444

for.cond444:                                      ; preds = %for.inc449, %if.else442
  %230 = load i32* %l, align 4
  %idxprom445 = sext i32 %230 to i64
  %arrayidx446 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom445
  %231 = load i32* %arrayidx446, align 4
  %cmp447 = icmp eq i32 %231, 13
  br i1 %cmp447, label %for.body448, label %for.end451

for.body448:                                      ; preds = %for.cond444
  br label %for.inc449

for.inc449:                                       ; preds = %for.body448
  %232 = load i32* %l, align 4
  %add450 = add nsw i32 %232, 13
  store i32 %add450, i32* %l, align 4
  br label %for.cond444

for.end451:                                       ; preds = %for.cond444
  %233 = load i32* %l, align 4
  %idxprom452 = sext i32 %233 to i64
  %arrayidx453 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom452
  %234 = load i32* %arrayidx453, align 4
  %cmp454 = icmp eq i32 %234, 12
  br i1 %cmp454, label %if.then459, label %lor.lhs.false455

lor.lhs.false455:                                 ; preds = %for.end451
  %235 = load i32* %l, align 4
  %idxprom456 = sext i32 %235 to i64
  %arrayidx457 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom456
  %236 = load i32* %arrayidx457, align 4
  %cmp458 = icmp eq i32 %236, 10
  br i1 %cmp458, label %if.then459, label %if.end460

if.then459:                                       ; preds = %lor.lhs.false455, %for.end451
  store i32 1, i32* %retval
  br label %return

if.end460:                                        ; preds = %lor.lhs.false455
  br label %if.end461

if.end461:                                        ; preds = %if.end460, %if.end441
  br label %if.end510

if.else462:                                       ; preds = %if.else415
  %237 = load i32* %from, align 4
  %idxprom463 = sext i32 %237 to i64
  %arrayidx464 = getelementptr inbounds [144 x i32]* @Xdiagr, i32 0, i64 %idxprom463
  %238 = load i32* %arrayidx464, align 4
  %239 = load i32* @wking_loc, align 4
  %idxprom465 = sext i32 %239 to i64
  %arrayidx466 = getelementptr inbounds [144 x i32]* @Xdiagr, i32 0, i64 %idxprom465
  %240 = load i32* %arrayidx466, align 4
  %cmp467 = icmp eq i32 %238, %240
  br i1 %cmp467, label %if.then468, label %if.end509

if.then468:                                       ; preds = %if.else462
  %241 = load i32* @wking_loc, align 4
  %242 = load i32* %from, align 4
  %cmp469 = icmp sgt i32 %241, %242
  br i1 %cmp469, label %if.then470, label %if.else489

if.then470:                                       ; preds = %if.then468
  %243 = load i32* @wking_loc, align 4
  %sub471 = sub nsw i32 %243, 11
  store i32 %sub471, i32* %l, align 4
  br label %for.cond472

for.cond472:                                      ; preds = %for.inc477, %if.then470
  %244 = load i32* %l, align 4
  %idxprom473 = sext i32 %244 to i64
  %arrayidx474 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom473
  %245 = load i32* %arrayidx474, align 4
  %cmp475 = icmp eq i32 %245, 13
  br i1 %cmp475, label %for.body476, label %for.end479

for.body476:                                      ; preds = %for.cond472
  br label %for.inc477

for.inc477:                                       ; preds = %for.body476
  %246 = load i32* %l, align 4
  %sub478 = sub nsw i32 %246, 11
  store i32 %sub478, i32* %l, align 4
  br label %for.cond472

for.end479:                                       ; preds = %for.cond472
  %247 = load i32* %l, align 4
  %idxprom480 = sext i32 %247 to i64
  %arrayidx481 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom480
  %248 = load i32* %arrayidx481, align 4
  %cmp482 = icmp eq i32 %248, 12
  br i1 %cmp482, label %if.then487, label %lor.lhs.false483

lor.lhs.false483:                                 ; preds = %for.end479
  %249 = load i32* %l, align 4
  %idxprom484 = sext i32 %249 to i64
  %arrayidx485 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom484
  %250 = load i32* %arrayidx485, align 4
  %cmp486 = icmp eq i32 %250, 10
  br i1 %cmp486, label %if.then487, label %if.end488

if.then487:                                       ; preds = %lor.lhs.false483, %for.end479
  store i32 1, i32* %retval
  br label %return

if.end488:                                        ; preds = %lor.lhs.false483
  br label %if.end508

if.else489:                                       ; preds = %if.then468
  %251 = load i32* @wking_loc, align 4
  %add490 = add nsw i32 %251, 11
  store i32 %add490, i32* %l, align 4
  br label %for.cond491

for.cond491:                                      ; preds = %for.inc496, %if.else489
  %252 = load i32* %l, align 4
  %idxprom492 = sext i32 %252 to i64
  %arrayidx493 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom492
  %253 = load i32* %arrayidx493, align 4
  %cmp494 = icmp eq i32 %253, 13
  br i1 %cmp494, label %for.body495, label %for.end498

for.body495:                                      ; preds = %for.cond491
  br label %for.inc496

for.inc496:                                       ; preds = %for.body495
  %254 = load i32* %l, align 4
  %add497 = add nsw i32 %254, 11
  store i32 %add497, i32* %l, align 4
  br label %for.cond491

for.end498:                                       ; preds = %for.cond491
  %255 = load i32* %l, align 4
  %idxprom499 = sext i32 %255 to i64
  %arrayidx500 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom499
  %256 = load i32* %arrayidx500, align 4
  %cmp501 = icmp eq i32 %256, 12
  br i1 %cmp501, label %if.then506, label %lor.lhs.false502

lor.lhs.false502:                                 ; preds = %for.end498
  %257 = load i32* %l, align 4
  %idxprom503 = sext i32 %257 to i64
  %arrayidx504 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom503
  %258 = load i32* %arrayidx504, align 4
  %cmp505 = icmp eq i32 %258, 10
  br i1 %cmp505, label %if.then506, label %if.end507

if.then506:                                       ; preds = %lor.lhs.false502, %for.end498
  store i32 1, i32* %retval
  br label %return

if.end507:                                        ; preds = %lor.lhs.false502
  br label %if.end508

if.end508:                                        ; preds = %if.end507, %if.end488
  br label %if.end509

if.end509:                                        ; preds = %if.end508, %if.else462
  br label %if.end510

if.end510:                                        ; preds = %if.end509, %if.end461
  br label %if.end511

if.end511:                                        ; preds = %if.end510, %if.end414
  br label %if.end512

if.end512:                                        ; preds = %if.end511, %if.end367
  store i32 0, i32* %retval
  br label %return

if.else513:                                       ; preds = %if.end
  %259 = load i32* %target, align 4
  %idxprom514 = sext i32 %259 to i64
  %arrayidx515 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom514
  %260 = load i32* %arrayidx515, align 4
  switch i32 %260, label %sw.epilog840 [
    i32 1, label %sw.bb516
    i32 11, label %sw.bb528
    i32 7, label %sw.bb600
    i32 3, label %sw.bb672
    i32 9, label %sw.bb685
    i32 5, label %sw.bb829
  ]

sw.bb516:                                         ; preds = %if.else513
  %261 = load i32* %target, align 4
  %add517 = add nsw i32 %261, 11
  %idxprom518 = sext i32 %add517 to i64
  %arrayidx519 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom518
  %262 = load i32* %arrayidx519, align 4
  %cmp520 = icmp eq i32 %262, 6
  br i1 %cmp520, label %if.then526, label %lor.lhs.false521

lor.lhs.false521:                                 ; preds = %sw.bb516
  %263 = load i32* %target, align 4
  %add522 = add nsw i32 %263, 13
  %idxprom523 = sext i32 %add522 to i64
  %arrayidx524 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom523
  %264 = load i32* %arrayidx524, align 4
  %cmp525 = icmp eq i32 %264, 6
  br i1 %cmp525, label %if.then526, label %if.end527

if.then526:                                       ; preds = %lor.lhs.false521, %sw.bb516
  store i32 1, i32* %retval
  br label %return

if.end527:                                        ; preds = %lor.lhs.false521
  br label %sw.epilog840

sw.bb528:                                         ; preds = %if.else513
  %265 = load i32* %target, align 4
  %idxprom529 = sext i32 %265 to i64
  %arrayidx530 = getelementptr inbounds [144 x i32]* @Xdiagl, i32 0, i64 %idxprom529
  %266 = load i32* %arrayidx530, align 4
  %267 = load i32* @bking_loc, align 4
  %idxprom531 = sext i32 %267 to i64
  %arrayidx532 = getelementptr inbounds [144 x i32]* @Xdiagl, i32 0, i64 %idxprom531
  %268 = load i32* %arrayidx532, align 4
  %cmp533 = icmp eq i32 %266, %268
  br i1 %cmp533, label %if.then534, label %if.else563

if.then534:                                       ; preds = %sw.bb528
  %269 = load i32* @bking_loc, align 4
  %270 = load i32* %target, align 4
  %cmp535 = icmp slt i32 %269, %270
  br i1 %cmp535, label %if.then536, label %if.else549

if.then536:                                       ; preds = %if.then534
  %271 = load i32* @bking_loc, align 4
  %add537 = add nsw i32 %271, 13
  store i32 %add537, i32* %l, align 4
  br label %for.cond538

for.cond538:                                      ; preds = %for.inc543, %if.then536
  %272 = load i32* %l, align 4
  %idxprom539 = sext i32 %272 to i64
  %arrayidx540 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom539
  %273 = load i32* %arrayidx540, align 4
  %cmp541 = icmp eq i32 %273, 13
  br i1 %cmp541, label %for.body542, label %for.end545

for.body542:                                      ; preds = %for.cond538
  br label %for.inc543

for.inc543:                                       ; preds = %for.body542
  %274 = load i32* %l, align 4
  %add544 = add nsw i32 %274, 13
  store i32 %add544, i32* %l, align 4
  br label %for.cond538

for.end545:                                       ; preds = %for.cond538
  %275 = load i32* %l, align 4
  %276 = load i32* %target, align 4
  %cmp546 = icmp eq i32 %275, %276
  br i1 %cmp546, label %if.then547, label %if.end548

if.then547:                                       ; preds = %for.end545
  store i32 1, i32* %retval
  br label %return

if.end548:                                        ; preds = %for.end545
  br label %if.end562

if.else549:                                       ; preds = %if.then534
  %277 = load i32* @bking_loc, align 4
  %sub550 = sub nsw i32 %277, 13
  store i32 %sub550, i32* %l, align 4
  br label %for.cond551

for.cond551:                                      ; preds = %for.inc556, %if.else549
  %278 = load i32* %l, align 4
  %idxprom552 = sext i32 %278 to i64
  %arrayidx553 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom552
  %279 = load i32* %arrayidx553, align 4
  %cmp554 = icmp eq i32 %279, 13
  br i1 %cmp554, label %for.body555, label %for.end558

for.body555:                                      ; preds = %for.cond551
  br label %for.inc556

for.inc556:                                       ; preds = %for.body555
  %280 = load i32* %l, align 4
  %sub557 = sub nsw i32 %280, 13
  store i32 %sub557, i32* %l, align 4
  br label %for.cond551

for.end558:                                       ; preds = %for.cond551
  %281 = load i32* %l, align 4
  %282 = load i32* %target, align 4
  %cmp559 = icmp eq i32 %281, %282
  br i1 %cmp559, label %if.then560, label %if.end561

if.then560:                                       ; preds = %for.end558
  store i32 1, i32* %retval
  br label %return

if.end561:                                        ; preds = %for.end558
  br label %if.end562

if.end562:                                        ; preds = %if.end561, %if.end548
  br label %if.end599

if.else563:                                       ; preds = %sw.bb528
  %283 = load i32* %target, align 4
  %idxprom564 = sext i32 %283 to i64
  %arrayidx565 = getelementptr inbounds [144 x i32]* @Xdiagr, i32 0, i64 %idxprom564
  %284 = load i32* %arrayidx565, align 4
  %285 = load i32* @bking_loc, align 4
  %idxprom566 = sext i32 %285 to i64
  %arrayidx567 = getelementptr inbounds [144 x i32]* @Xdiagr, i32 0, i64 %idxprom566
  %286 = load i32* %arrayidx567, align 4
  %cmp568 = icmp eq i32 %284, %286
  br i1 %cmp568, label %if.then569, label %if.end598

if.then569:                                       ; preds = %if.else563
  %287 = load i32* @bking_loc, align 4
  %288 = load i32* %target, align 4
  %cmp570 = icmp slt i32 %287, %288
  br i1 %cmp570, label %if.then571, label %if.else584

if.then571:                                       ; preds = %if.then569
  %289 = load i32* @bking_loc, align 4
  %add572 = add nsw i32 %289, 11
  store i32 %add572, i32* %l, align 4
  br label %for.cond573

for.cond573:                                      ; preds = %for.inc578, %if.then571
  %290 = load i32* %l, align 4
  %idxprom574 = sext i32 %290 to i64
  %arrayidx575 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom574
  %291 = load i32* %arrayidx575, align 4
  %cmp576 = icmp eq i32 %291, 13
  br i1 %cmp576, label %for.body577, label %for.end580

for.body577:                                      ; preds = %for.cond573
  br label %for.inc578

for.inc578:                                       ; preds = %for.body577
  %292 = load i32* %l, align 4
  %add579 = add nsw i32 %292, 11
  store i32 %add579, i32* %l, align 4
  br label %for.cond573

for.end580:                                       ; preds = %for.cond573
  %293 = load i32* %l, align 4
  %294 = load i32* %target, align 4
  %cmp581 = icmp eq i32 %293, %294
  br i1 %cmp581, label %if.then582, label %if.end583

if.then582:                                       ; preds = %for.end580
  store i32 1, i32* %retval
  br label %return

if.end583:                                        ; preds = %for.end580
  br label %if.end597

if.else584:                                       ; preds = %if.then569
  %295 = load i32* @bking_loc, align 4
  %sub585 = sub nsw i32 %295, 11
  store i32 %sub585, i32* %l, align 4
  br label %for.cond586

for.cond586:                                      ; preds = %for.inc591, %if.else584
  %296 = load i32* %l, align 4
  %idxprom587 = sext i32 %296 to i64
  %arrayidx588 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom587
  %297 = load i32* %arrayidx588, align 4
  %cmp589 = icmp eq i32 %297, 13
  br i1 %cmp589, label %for.body590, label %for.end593

for.body590:                                      ; preds = %for.cond586
  br label %for.inc591

for.inc591:                                       ; preds = %for.body590
  %298 = load i32* %l, align 4
  %sub592 = sub nsw i32 %298, 11
  store i32 %sub592, i32* %l, align 4
  br label %for.cond586

for.end593:                                       ; preds = %for.cond586
  %299 = load i32* %l, align 4
  %300 = load i32* %target, align 4
  %cmp594 = icmp eq i32 %299, %300
  br i1 %cmp594, label %if.then595, label %if.end596

if.then595:                                       ; preds = %for.end593
  store i32 1, i32* %retval
  br label %return

if.end596:                                        ; preds = %for.end593
  br label %if.end597

if.end597:                                        ; preds = %if.end596, %if.end583
  br label %if.end598

if.end598:                                        ; preds = %if.end597, %if.else563
  br label %if.end599

if.end599:                                        ; preds = %if.end598, %if.end562
  br label %sw.epilog840

sw.bb600:                                         ; preds = %if.else513
  %301 = load i32* %target, align 4
  %idxprom601 = sext i32 %301 to i64
  %arrayidx602 = getelementptr inbounds [144 x i32]* @Xfile, i32 0, i64 %idxprom601
  %302 = load i32* %arrayidx602, align 4
  %303 = load i32* @bking_loc, align 4
  %idxprom603 = sext i32 %303 to i64
  %arrayidx604 = getelementptr inbounds [144 x i32]* @Xfile, i32 0, i64 %idxprom603
  %304 = load i32* %arrayidx604, align 4
  %cmp605 = icmp eq i32 %302, %304
  br i1 %cmp605, label %if.then606, label %if.else635

if.then606:                                       ; preds = %sw.bb600
  %305 = load i32* @bking_loc, align 4
  %306 = load i32* %target, align 4
  %cmp607 = icmp slt i32 %305, %306
  br i1 %cmp607, label %if.then608, label %if.else621

if.then608:                                       ; preds = %if.then606
  %307 = load i32* @bking_loc, align 4
  %add609 = add nsw i32 %307, 12
  store i32 %add609, i32* %l, align 4
  br label %for.cond610

for.cond610:                                      ; preds = %for.inc615, %if.then608
  %308 = load i32* %l, align 4
  %idxprom611 = sext i32 %308 to i64
  %arrayidx612 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom611
  %309 = load i32* %arrayidx612, align 4
  %cmp613 = icmp eq i32 %309, 13
  br i1 %cmp613, label %for.body614, label %for.end617

for.body614:                                      ; preds = %for.cond610
  br label %for.inc615

for.inc615:                                       ; preds = %for.body614
  %310 = load i32* %l, align 4
  %add616 = add nsw i32 %310, 12
  store i32 %add616, i32* %l, align 4
  br label %for.cond610

for.end617:                                       ; preds = %for.cond610
  %311 = load i32* %l, align 4
  %312 = load i32* %target, align 4
  %cmp618 = icmp eq i32 %311, %312
  br i1 %cmp618, label %if.then619, label %if.end620

if.then619:                                       ; preds = %for.end617
  store i32 1, i32* %retval
  br label %return

if.end620:                                        ; preds = %for.end617
  br label %if.end634

if.else621:                                       ; preds = %if.then606
  %313 = load i32* @bking_loc, align 4
  %sub622 = sub nsw i32 %313, 12
  store i32 %sub622, i32* %l, align 4
  br label %for.cond623

for.cond623:                                      ; preds = %for.inc628, %if.else621
  %314 = load i32* %l, align 4
  %idxprom624 = sext i32 %314 to i64
  %arrayidx625 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom624
  %315 = load i32* %arrayidx625, align 4
  %cmp626 = icmp eq i32 %315, 13
  br i1 %cmp626, label %for.body627, label %for.end630

for.body627:                                      ; preds = %for.cond623
  br label %for.inc628

for.inc628:                                       ; preds = %for.body627
  %316 = load i32* %l, align 4
  %sub629 = sub nsw i32 %316, 12
  store i32 %sub629, i32* %l, align 4
  br label %for.cond623

for.end630:                                       ; preds = %for.cond623
  %317 = load i32* %l, align 4
  %318 = load i32* %target, align 4
  %cmp631 = icmp eq i32 %317, %318
  br i1 %cmp631, label %if.then632, label %if.end633

if.then632:                                       ; preds = %for.end630
  store i32 1, i32* %retval
  br label %return

if.end633:                                        ; preds = %for.end630
  br label %if.end634

if.end634:                                        ; preds = %if.end633, %if.end620
  br label %if.end671

if.else635:                                       ; preds = %sw.bb600
  %319 = load i32* %target, align 4
  %idxprom636 = sext i32 %319 to i64
  %arrayidx637 = getelementptr inbounds [144 x i32]* @Xrank, i32 0, i64 %idxprom636
  %320 = load i32* %arrayidx637, align 4
  %321 = load i32* @bking_loc, align 4
  %idxprom638 = sext i32 %321 to i64
  %arrayidx639 = getelementptr inbounds [144 x i32]* @Xrank, i32 0, i64 %idxprom638
  %322 = load i32* %arrayidx639, align 4
  %cmp640 = icmp eq i32 %320, %322
  br i1 %cmp640, label %if.then641, label %if.end670

if.then641:                                       ; preds = %if.else635
  %323 = load i32* @bking_loc, align 4
  %324 = load i32* %target, align 4
  %cmp642 = icmp slt i32 %323, %324
  br i1 %cmp642, label %if.then643, label %if.else656

if.then643:                                       ; preds = %if.then641
  %325 = load i32* @bking_loc, align 4
  %add644 = add nsw i32 %325, 1
  store i32 %add644, i32* %l, align 4
  br label %for.cond645

for.cond645:                                      ; preds = %for.inc650, %if.then643
  %326 = load i32* %l, align 4
  %idxprom646 = sext i32 %326 to i64
  %arrayidx647 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom646
  %327 = load i32* %arrayidx647, align 4
  %cmp648 = icmp eq i32 %327, 13
  br i1 %cmp648, label %for.body649, label %for.end652

for.body649:                                      ; preds = %for.cond645
  br label %for.inc650

for.inc650:                                       ; preds = %for.body649
  %328 = load i32* %l, align 4
  %inc651 = add nsw i32 %328, 1
  store i32 %inc651, i32* %l, align 4
  br label %for.cond645

for.end652:                                       ; preds = %for.cond645
  %329 = load i32* %l, align 4
  %330 = load i32* %target, align 4
  %cmp653 = icmp eq i32 %329, %330
  br i1 %cmp653, label %if.then654, label %if.end655

if.then654:                                       ; preds = %for.end652
  store i32 1, i32* %retval
  br label %return

if.end655:                                        ; preds = %for.end652
  br label %if.end669

if.else656:                                       ; preds = %if.then641
  %331 = load i32* @bking_loc, align 4
  %sub657 = sub nsw i32 %331, 1
  store i32 %sub657, i32* %l, align 4
  br label %for.cond658

for.cond658:                                      ; preds = %for.inc663, %if.else656
  %332 = load i32* %l, align 4
  %idxprom659 = sext i32 %332 to i64
  %arrayidx660 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom659
  %333 = load i32* %arrayidx660, align 4
  %cmp661 = icmp eq i32 %333, 13
  br i1 %cmp661, label %for.body662, label %for.end665

for.body662:                                      ; preds = %for.cond658
  br label %for.inc663

for.inc663:                                       ; preds = %for.body662
  %334 = load i32* %l, align 4
  %dec664 = add nsw i32 %334, -1
  store i32 %dec664, i32* %l, align 4
  br label %for.cond658

for.end665:                                       ; preds = %for.cond658
  %335 = load i32* %l, align 4
  %336 = load i32* %target, align 4
  %cmp666 = icmp eq i32 %335, %336
  br i1 %cmp666, label %if.then667, label %if.end668

if.then667:                                       ; preds = %for.end665
  store i32 1, i32* %retval
  br label %return

if.end668:                                        ; preds = %for.end665
  br label %if.end669

if.end669:                                        ; preds = %if.end668, %if.end655
  br label %if.end670

if.end670:                                        ; preds = %if.end669, %if.else635
  br label %if.end671

if.end671:                                        ; preds = %if.end670, %if.end634
  br label %sw.epilog840

sw.bb672:                                         ; preds = %if.else513
  store i32 0, i32* %l, align 4
  br label %for.cond673

for.cond673:                                      ; preds = %for.inc682, %sw.bb672
  %337 = load i32* %l, align 4
  %cmp674 = icmp slt i32 %337, 8
  br i1 %cmp674, label %for.body675, label %for.end684

for.body675:                                      ; preds = %for.cond673
  %338 = load i32* @bking_loc, align 4
  %339 = load i32* %l, align 4
  %idxprom676 = sext i32 %339 to i64
  %bitcast1075 = bitcast [8 x i32]* @f_in_check.knight_o to i8*
  %bitcast1076 = bitcast [8 x i32]* getelementptr inbounds ([8 x i32]* @f_in_check.knight_o, i32 1) to i8*
  %arrayidx677 = getelementptr inbounds [8 x i32]* @f_in_check.knight_o, i32 0, i64 %idxprom676
  %340 = load i32* %arrayidx677, align 4
  %add678 = add nsw i32 %338, %340
  %341 = load i32* %target, align 4
  %cmp679 = icmp eq i32 %add678, %341
  br i1 %cmp679, label %if.then680, label %if.end681

if.then680:                                       ; preds = %for.body675
  store i32 1, i32* %retval
  br label %return

if.end681:                                        ; preds = %for.body675
  br label %for.inc682

for.inc682:                                       ; preds = %if.end681
  %342 = load i32* %l, align 4
  %inc683 = add nsw i32 %342, 1
  store i32 %inc683, i32* %l, align 4
  br label %for.cond673

for.end684:                                       ; preds = %for.cond673
  br label %sw.epilog840

sw.bb685:                                         ; preds = %if.else513
  %343 = load i32* %target, align 4
  %idxprom686 = sext i32 %343 to i64
  %arrayidx687 = getelementptr inbounds [144 x i32]* @Xfile, i32 0, i64 %idxprom686
  %344 = load i32* %arrayidx687, align 4
  %345 = load i32* @bking_loc, align 4
  %idxprom688 = sext i32 %345 to i64
  %arrayidx689 = getelementptr inbounds [144 x i32]* @Xfile, i32 0, i64 %idxprom688
  %346 = load i32* %arrayidx689, align 4
  %cmp690 = icmp eq i32 %344, %346
  br i1 %cmp690, label %if.then691, label %if.else720

if.then691:                                       ; preds = %sw.bb685
  %347 = load i32* @bking_loc, align 4
  %348 = load i32* %target, align 4
  %cmp692 = icmp slt i32 %347, %348
  br i1 %cmp692, label %if.then693, label %if.else706

if.then693:                                       ; preds = %if.then691
  %349 = load i32* @bking_loc, align 4
  %add694 = add nsw i32 %349, 12
  store i32 %add694, i32* %l, align 4
  br label %for.cond695

for.cond695:                                      ; preds = %for.inc700, %if.then693
  %350 = load i32* %l, align 4
  %idxprom696 = sext i32 %350 to i64
  %arrayidx697 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom696
  %351 = load i32* %arrayidx697, align 4
  %cmp698 = icmp eq i32 %351, 13
  br i1 %cmp698, label %for.body699, label %for.end702

for.body699:                                      ; preds = %for.cond695
  br label %for.inc700

for.inc700:                                       ; preds = %for.body699
  %352 = load i32* %l, align 4
  %add701 = add nsw i32 %352, 12
  store i32 %add701, i32* %l, align 4
  br label %for.cond695

for.end702:                                       ; preds = %for.cond695
  %353 = load i32* %l, align 4
  %354 = load i32* %target, align 4
  %cmp703 = icmp eq i32 %353, %354
  br i1 %cmp703, label %if.then704, label %if.end705

if.then704:                                       ; preds = %for.end702
  store i32 1, i32* %retval
  br label %return

if.end705:                                        ; preds = %for.end702
  br label %if.end719

if.else706:                                       ; preds = %if.then691
  %355 = load i32* @bking_loc, align 4
  %sub707 = sub nsw i32 %355, 12
  store i32 %sub707, i32* %l, align 4
  br label %for.cond708

for.cond708:                                      ; preds = %for.inc713, %if.else706
  %356 = load i32* %l, align 4
  %idxprom709 = sext i32 %356 to i64
  %arrayidx710 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom709
  %357 = load i32* %arrayidx710, align 4
  %cmp711 = icmp eq i32 %357, 13
  br i1 %cmp711, label %for.body712, label %for.end715

for.body712:                                      ; preds = %for.cond708
  br label %for.inc713

for.inc713:                                       ; preds = %for.body712
  %358 = load i32* %l, align 4
  %sub714 = sub nsw i32 %358, 12
  store i32 %sub714, i32* %l, align 4
  br label %for.cond708

for.end715:                                       ; preds = %for.cond708
  %359 = load i32* %l, align 4
  %360 = load i32* %target, align 4
  %cmp716 = icmp eq i32 %359, %360
  br i1 %cmp716, label %if.then717, label %if.end718

if.then717:                                       ; preds = %for.end715
  store i32 1, i32* %retval
  br label %return

if.end718:                                        ; preds = %for.end715
  br label %if.end719

if.end719:                                        ; preds = %if.end718, %if.end705
  br label %if.end828

if.else720:                                       ; preds = %sw.bb685
  %361 = load i32* %target, align 4
  %idxprom721 = sext i32 %361 to i64
  %arrayidx722 = getelementptr inbounds [144 x i32]* @Xrank, i32 0, i64 %idxprom721
  %362 = load i32* %arrayidx722, align 4
  %363 = load i32* @bking_loc, align 4
  %idxprom723 = sext i32 %363 to i64
  %arrayidx724 = getelementptr inbounds [144 x i32]* @Xrank, i32 0, i64 %idxprom723
  %364 = load i32* %arrayidx724, align 4
  %cmp725 = icmp eq i32 %362, %364
  br i1 %cmp725, label %if.then726, label %if.else755

if.then726:                                       ; preds = %if.else720
  %365 = load i32* @bking_loc, align 4
  %366 = load i32* %target, align 4
  %cmp727 = icmp slt i32 %365, %366
  br i1 %cmp727, label %if.then728, label %if.else741

if.then728:                                       ; preds = %if.then726
  %367 = load i32* @bking_loc, align 4
  %add729 = add nsw i32 %367, 1
  store i32 %add729, i32* %l, align 4
  br label %for.cond730

for.cond730:                                      ; preds = %for.inc735, %if.then728
  %368 = load i32* %l, align 4
  %idxprom731 = sext i32 %368 to i64
  %arrayidx732 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom731
  %369 = load i32* %arrayidx732, align 4
  %cmp733 = icmp eq i32 %369, 13
  br i1 %cmp733, label %for.body734, label %for.end737

for.body734:                                      ; preds = %for.cond730
  br label %for.inc735

for.inc735:                                       ; preds = %for.body734
  %370 = load i32* %l, align 4
  %add736 = add nsw i32 %370, 1
  store i32 %add736, i32* %l, align 4
  br label %for.cond730

for.end737:                                       ; preds = %for.cond730
  %371 = load i32* %l, align 4
  %372 = load i32* %target, align 4
  %cmp738 = icmp eq i32 %371, %372
  br i1 %cmp738, label %if.then739, label %if.end740

if.then739:                                       ; preds = %for.end737
  store i32 1, i32* %retval
  br label %return

if.end740:                                        ; preds = %for.end737
  br label %if.end754

if.else741:                                       ; preds = %if.then726
  %373 = load i32* @bking_loc, align 4
  %sub742 = sub nsw i32 %373, 1
  store i32 %sub742, i32* %l, align 4
  br label %for.cond743

for.cond743:                                      ; preds = %for.inc748, %if.else741
  %374 = load i32* %l, align 4
  %idxprom744 = sext i32 %374 to i64
  %arrayidx745 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom744
  %375 = load i32* %arrayidx745, align 4
  %cmp746 = icmp eq i32 %375, 13
  br i1 %cmp746, label %for.body747, label %for.end750

for.body747:                                      ; preds = %for.cond743
  br label %for.inc748

for.inc748:                                       ; preds = %for.body747
  %376 = load i32* %l, align 4
  %sub749 = sub nsw i32 %376, 1
  store i32 %sub749, i32* %l, align 4
  br label %for.cond743

for.end750:                                       ; preds = %for.cond743
  %377 = load i32* %l, align 4
  %378 = load i32* %target, align 4
  %cmp751 = icmp eq i32 %377, %378
  br i1 %cmp751, label %if.then752, label %if.end753

if.then752:                                       ; preds = %for.end750
  store i32 1, i32* %retval
  br label %return

if.end753:                                        ; preds = %for.end750
  br label %if.end754

if.end754:                                        ; preds = %if.end753, %if.end740
  br label %if.end827

if.else755:                                       ; preds = %if.else720
  %379 = load i32* %target, align 4
  %idxprom756 = sext i32 %379 to i64
  %arrayidx757 = getelementptr inbounds [144 x i32]* @Xdiagl, i32 0, i64 %idxprom756
  %380 = load i32* %arrayidx757, align 4
  %381 = load i32* @bking_loc, align 4
  %idxprom758 = sext i32 %381 to i64
  %arrayidx759 = getelementptr inbounds [144 x i32]* @Xdiagl, i32 0, i64 %idxprom758
  %382 = load i32* %arrayidx759, align 4
  %cmp760 = icmp eq i32 %380, %382
  br i1 %cmp760, label %if.then761, label %if.else790

if.then761:                                       ; preds = %if.else755
  %383 = load i32* @bking_loc, align 4
  %384 = load i32* %target, align 4
  %cmp762 = icmp slt i32 %383, %384
  br i1 %cmp762, label %if.then763, label %if.else776

if.then763:                                       ; preds = %if.then761
  %385 = load i32* @bking_loc, align 4
  %add764 = add nsw i32 %385, 13
  store i32 %add764, i32* %l, align 4
  br label %for.cond765

for.cond765:                                      ; preds = %for.inc770, %if.then763
  %386 = load i32* %l, align 4
  %idxprom766 = sext i32 %386 to i64
  %arrayidx767 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom766
  %387 = load i32* %arrayidx767, align 4
  %cmp768 = icmp eq i32 %387, 13
  br i1 %cmp768, label %for.body769, label %for.end772

for.body769:                                      ; preds = %for.cond765
  br label %for.inc770

for.inc770:                                       ; preds = %for.body769
  %388 = load i32* %l, align 4
  %add771 = add nsw i32 %388, 13
  store i32 %add771, i32* %l, align 4
  br label %for.cond765

for.end772:                                       ; preds = %for.cond765
  %389 = load i32* %l, align 4
  %390 = load i32* %target, align 4
  %cmp773 = icmp eq i32 %389, %390
  br i1 %cmp773, label %if.then774, label %if.end775

if.then774:                                       ; preds = %for.end772
  store i32 1, i32* %retval
  br label %return

if.end775:                                        ; preds = %for.end772
  br label %if.end789

if.else776:                                       ; preds = %if.then761
  %391 = load i32* @bking_loc, align 4
  %sub777 = sub nsw i32 %391, 13
  store i32 %sub777, i32* %l, align 4
  br label %for.cond778

for.cond778:                                      ; preds = %for.inc783, %if.else776
  %392 = load i32* %l, align 4
  %idxprom779 = sext i32 %392 to i64
  %arrayidx780 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom779
  %393 = load i32* %arrayidx780, align 4
  %cmp781 = icmp eq i32 %393, 13
  br i1 %cmp781, label %for.body782, label %for.end785

for.body782:                                      ; preds = %for.cond778
  br label %for.inc783

for.inc783:                                       ; preds = %for.body782
  %394 = load i32* %l, align 4
  %sub784 = sub nsw i32 %394, 13
  store i32 %sub784, i32* %l, align 4
  br label %for.cond778

for.end785:                                       ; preds = %for.cond778
  %395 = load i32* %l, align 4
  %396 = load i32* %target, align 4
  %cmp786 = icmp eq i32 %395, %396
  br i1 %cmp786, label %if.then787, label %if.end788

if.then787:                                       ; preds = %for.end785
  store i32 1, i32* %retval
  br label %return

if.end788:                                        ; preds = %for.end785
  br label %if.end789

if.end789:                                        ; preds = %if.end788, %if.end775
  br label %if.end826

if.else790:                                       ; preds = %if.else755
  %397 = load i32* %target, align 4
  %idxprom791 = sext i32 %397 to i64
  %arrayidx792 = getelementptr inbounds [144 x i32]* @Xdiagr, i32 0, i64 %idxprom791
  %398 = load i32* %arrayidx792, align 4
  %399 = load i32* @bking_loc, align 4
  %idxprom793 = sext i32 %399 to i64
  %arrayidx794 = getelementptr inbounds [144 x i32]* @Xdiagr, i32 0, i64 %idxprom793
  %400 = load i32* %arrayidx794, align 4
  %cmp795 = icmp eq i32 %398, %400
  br i1 %cmp795, label %if.then796, label %if.end825

if.then796:                                       ; preds = %if.else790
  %401 = load i32* @bking_loc, align 4
  %402 = load i32* %target, align 4
  %cmp797 = icmp slt i32 %401, %402
  br i1 %cmp797, label %if.then798, label %if.else811

if.then798:                                       ; preds = %if.then796
  %403 = load i32* @bking_loc, align 4
  %add799 = add nsw i32 %403, 11
  store i32 %add799, i32* %l, align 4
  br label %for.cond800

for.cond800:                                      ; preds = %for.inc805, %if.then798
  %404 = load i32* %l, align 4
  %idxprom801 = sext i32 %404 to i64
  %arrayidx802 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom801
  %405 = load i32* %arrayidx802, align 4
  %cmp803 = icmp eq i32 %405, 13
  br i1 %cmp803, label %for.body804, label %for.end807

for.body804:                                      ; preds = %for.cond800
  br label %for.inc805

for.inc805:                                       ; preds = %for.body804
  %406 = load i32* %l, align 4
  %add806 = add nsw i32 %406, 11
  store i32 %add806, i32* %l, align 4
  br label %for.cond800

for.end807:                                       ; preds = %for.cond800
  %407 = load i32* %l, align 4
  %408 = load i32* %target, align 4
  %cmp808 = icmp eq i32 %407, %408
  br i1 %cmp808, label %if.then809, label %if.end810

if.then809:                                       ; preds = %for.end807
  store i32 1, i32* %retval
  br label %return

if.end810:                                        ; preds = %for.end807
  br label %if.end824

if.else811:                                       ; preds = %if.then796
  %409 = load i32* @bking_loc, align 4
  %sub812 = sub nsw i32 %409, 11
  store i32 %sub812, i32* %l, align 4
  br label %for.cond813

for.cond813:                                      ; preds = %for.inc818, %if.else811
  %410 = load i32* %l, align 4
  %idxprom814 = sext i32 %410 to i64
  %arrayidx815 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom814
  %411 = load i32* %arrayidx815, align 4
  %cmp816 = icmp eq i32 %411, 13
  br i1 %cmp816, label %for.body817, label %for.end820

for.body817:                                      ; preds = %for.cond813
  br label %for.inc818

for.inc818:                                       ; preds = %for.body817
  %412 = load i32* %l, align 4
  %sub819 = sub nsw i32 %412, 11
  store i32 %sub819, i32* %l, align 4
  br label %for.cond813

for.end820:                                       ; preds = %for.cond813
  %413 = load i32* %l, align 4
  %414 = load i32* %target, align 4
  %cmp821 = icmp eq i32 %413, %414
  br i1 %cmp821, label %if.then822, label %if.end823

if.then822:                                       ; preds = %for.end820
  store i32 1, i32* %retval
  br label %return

if.end823:                                        ; preds = %for.end820
  br label %if.end824

if.end824:                                        ; preds = %if.end823, %if.end810
  br label %if.end825

if.end825:                                        ; preds = %if.end824, %if.else790
  br label %if.end826

if.end826:                                        ; preds = %if.end825, %if.end789
  br label %if.end827

if.end827:                                        ; preds = %if.end826, %if.end754
  br label %if.end828

if.end828:                                        ; preds = %if.end827, %if.end719
  br label %sw.epilog840

sw.bb829:                                         ; preds = %if.else513
  %415 = load i32* %m.addr, align 4
  %idxprom830 = sext i32 %415 to i64
  %416 = load %struct.move_s** %moves.addr, align 8
  %bitcast1068 = bitcast %struct.move_s** %moves.addr to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast1068, i8** %base.alloca1069, i8** %bound.alloca1070)
  %base.load1071 = load i8** %base.alloca1069
  %bound.load1072 = load i8** %bound.alloca1070
  %arrayidx831 = getelementptr inbounds %struct.move_s* %416, i64 %idxprom830
  %castled832 = getelementptr inbounds %struct.move_s* %arrayidx831, i32 0, i32 4
  %417 = load i32* %castled832, align 4
  %tobool833 = icmp ne i32 %417, 0
  br i1 %tobool833, label %if.then834, label %if.end839

if.then834:                                       ; preds = %sw.bb829
  %418 = load i32* @bking_loc, align 4
  %call835 = call i32 @is_attacked(i32 %418, i32 1)
  %tobool836 = icmp ne i32 %call835, 0
  br i1 %tobool836, label %if.then837, label %if.else838

if.then837:                                       ; preds = %if.then834
  store i32 1, i32* %retval
  br label %return

if.else838:                                       ; preds = %if.then834
  store i32 0, i32* %retval
  br label %return

if.end839:                                        ; preds = %sw.bb829
  br label %sw.epilog840

sw.epilog840:                                     ; preds = %if.end839, %if.end828, %for.end684, %if.end671, %if.end599, %if.end527, %if.else513
  %419 = load i32* %from, align 4
  %cmp841 = icmp eq i32 %419, 0
  br i1 %cmp841, label %if.then842, label %if.end843

if.then842:                                       ; preds = %sw.epilog840
  store i32 0, i32* %retval
  br label %return

if.end843:                                        ; preds = %sw.epilog840
  %420 = load i32* %from, align 4
  %idxprom844 = sext i32 %420 to i64
  %arrayidx845 = getelementptr inbounds [144 x i32]* @Xrank, i32 0, i64 %idxprom844
  %421 = load i32* %arrayidx845, align 4
  %422 = load i32* @bking_loc, align 4
  %idxprom846 = sext i32 %422 to i64
  %arrayidx847 = getelementptr inbounds [144 x i32]* @Xrank, i32 0, i64 %idxprom846
  %423 = load i32* %arrayidx847, align 4
  %cmp848 = icmp eq i32 %421, %423
  br i1 %cmp848, label %if.then849, label %if.else890

if.then849:                                       ; preds = %if.end843
  %424 = load i32* @bking_loc, align 4
  %425 = load i32* %from, align 4
  %cmp850 = icmp sgt i32 %424, %425
  br i1 %cmp850, label %if.then851, label %if.else870

if.then851:                                       ; preds = %if.then849
  %426 = load i32* @bking_loc, align 4
  %sub852 = sub nsw i32 %426, 1
  store i32 %sub852, i32* %l, align 4
  br label %for.cond853

for.cond853:                                      ; preds = %for.inc858, %if.then851
  %427 = load i32* %l, align 4
  %idxprom854 = sext i32 %427 to i64
  %arrayidx855 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom854
  %428 = load i32* %arrayidx855, align 4
  %cmp856 = icmp eq i32 %428, 13
  br i1 %cmp856, label %for.body857, label %for.end860

for.body857:                                      ; preds = %for.cond853
  br label %for.inc858

for.inc858:                                       ; preds = %for.body857
  %429 = load i32* %l, align 4
  %dec859 = add nsw i32 %429, -1
  store i32 %dec859, i32* %l, align 4
  br label %for.cond853

for.end860:                                       ; preds = %for.cond853
  %430 = load i32* %l, align 4
  %idxprom861 = sext i32 %430 to i64
  %arrayidx862 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom861
  %431 = load i32* %arrayidx862, align 4
  %cmp863 = icmp eq i32 %431, 7
  br i1 %cmp863, label %if.then868, label %lor.lhs.false864

lor.lhs.false864:                                 ; preds = %for.end860
  %432 = load i32* %l, align 4
  %idxprom865 = sext i32 %432 to i64
  %arrayidx866 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom865
  %433 = load i32* %arrayidx866, align 4
  %cmp867 = icmp eq i32 %433, 9
  br i1 %cmp867, label %if.then868, label %if.end869

if.then868:                                       ; preds = %lor.lhs.false864, %for.end860
  store i32 1, i32* %retval
  br label %return

if.end869:                                        ; preds = %lor.lhs.false864
  br label %if.end889

if.else870:                                       ; preds = %if.then849
  %434 = load i32* @bking_loc, align 4
  %add871 = add nsw i32 %434, 1
  store i32 %add871, i32* %l, align 4
  br label %for.cond872

for.cond872:                                      ; preds = %for.inc877, %if.else870
  %435 = load i32* %l, align 4
  %idxprom873 = sext i32 %435 to i64
  %arrayidx874 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom873
  %436 = load i32* %arrayidx874, align 4
  %cmp875 = icmp eq i32 %436, 13
  br i1 %cmp875, label %for.body876, label %for.end879

for.body876:                                      ; preds = %for.cond872
  br label %for.inc877

for.inc877:                                       ; preds = %for.body876
  %437 = load i32* %l, align 4
  %inc878 = add nsw i32 %437, 1
  store i32 %inc878, i32* %l, align 4
  br label %for.cond872

for.end879:                                       ; preds = %for.cond872
  %438 = load i32* %l, align 4
  %idxprom880 = sext i32 %438 to i64
  %arrayidx881 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom880
  %439 = load i32* %arrayidx881, align 4
  %cmp882 = icmp eq i32 %439, 7
  br i1 %cmp882, label %if.then887, label %lor.lhs.false883

lor.lhs.false883:                                 ; preds = %for.end879
  %440 = load i32* %l, align 4
  %idxprom884 = sext i32 %440 to i64
  %arrayidx885 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom884
  %441 = load i32* %arrayidx885, align 4
  %cmp886 = icmp eq i32 %441, 9
  br i1 %cmp886, label %if.then887, label %if.end888

if.then887:                                       ; preds = %lor.lhs.false883, %for.end879
  store i32 1, i32* %retval
  br label %return

if.end888:                                        ; preds = %lor.lhs.false883
  br label %if.end889

if.end889:                                        ; preds = %if.end888, %if.end869
  br label %if.end1034

if.else890:                                       ; preds = %if.end843
  %442 = load i32* %from, align 4
  %idxprom891 = sext i32 %442 to i64
  %arrayidx892 = getelementptr inbounds [144 x i32]* @Xfile, i32 0, i64 %idxprom891
  %443 = load i32* %arrayidx892, align 4
  %444 = load i32* @bking_loc, align 4
  %idxprom893 = sext i32 %444 to i64
  %arrayidx894 = getelementptr inbounds [144 x i32]* @Xfile, i32 0, i64 %idxprom893
  %445 = load i32* %arrayidx894, align 4
  %cmp895 = icmp eq i32 %443, %445
  br i1 %cmp895, label %if.then896, label %if.else937

if.then896:                                       ; preds = %if.else890
  %446 = load i32* @bking_loc, align 4
  %447 = load i32* %from, align 4
  %cmp897 = icmp sgt i32 %446, %447
  br i1 %cmp897, label %if.then898, label %if.else917

if.then898:                                       ; preds = %if.then896
  %448 = load i32* @bking_loc, align 4
  %sub899 = sub nsw i32 %448, 12
  store i32 %sub899, i32* %l, align 4
  br label %for.cond900

for.cond900:                                      ; preds = %for.inc905, %if.then898
  %449 = load i32* %l, align 4
  %idxprom901 = sext i32 %449 to i64
  %arrayidx902 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom901
  %450 = load i32* %arrayidx902, align 4
  %cmp903 = icmp eq i32 %450, 13
  br i1 %cmp903, label %for.body904, label %for.end907

for.body904:                                      ; preds = %for.cond900
  br label %for.inc905

for.inc905:                                       ; preds = %for.body904
  %451 = load i32* %l, align 4
  %sub906 = sub nsw i32 %451, 12
  store i32 %sub906, i32* %l, align 4
  br label %for.cond900

for.end907:                                       ; preds = %for.cond900
  %452 = load i32* %l, align 4
  %idxprom908 = sext i32 %452 to i64
  %arrayidx909 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom908
  %453 = load i32* %arrayidx909, align 4
  %cmp910 = icmp eq i32 %453, 7
  br i1 %cmp910, label %if.then915, label %lor.lhs.false911

lor.lhs.false911:                                 ; preds = %for.end907
  %454 = load i32* %l, align 4
  %idxprom912 = sext i32 %454 to i64
  %arrayidx913 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom912
  %455 = load i32* %arrayidx913, align 4
  %cmp914 = icmp eq i32 %455, 9
  br i1 %cmp914, label %if.then915, label %if.end916

if.then915:                                       ; preds = %lor.lhs.false911, %for.end907
  store i32 1, i32* %retval
  br label %return

if.end916:                                        ; preds = %lor.lhs.false911
  br label %if.end936

if.else917:                                       ; preds = %if.then896
  %456 = load i32* @bking_loc, align 4
  %add918 = add nsw i32 %456, 12
  store i32 %add918, i32* %l, align 4
  br label %for.cond919

for.cond919:                                      ; preds = %for.inc924, %if.else917
  %457 = load i32* %l, align 4
  %idxprom920 = sext i32 %457 to i64
  %arrayidx921 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom920
  %458 = load i32* %arrayidx921, align 4
  %cmp922 = icmp eq i32 %458, 13
  br i1 %cmp922, label %for.body923, label %for.end926

for.body923:                                      ; preds = %for.cond919
  br label %for.inc924

for.inc924:                                       ; preds = %for.body923
  %459 = load i32* %l, align 4
  %add925 = add nsw i32 %459, 12
  store i32 %add925, i32* %l, align 4
  br label %for.cond919

for.end926:                                       ; preds = %for.cond919
  %460 = load i32* %l, align 4
  %idxprom927 = sext i32 %460 to i64
  %arrayidx928 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom927
  %461 = load i32* %arrayidx928, align 4
  %cmp929 = icmp eq i32 %461, 7
  br i1 %cmp929, label %if.then934, label %lor.lhs.false930

lor.lhs.false930:                                 ; preds = %for.end926
  %462 = load i32* %l, align 4
  %idxprom931 = sext i32 %462 to i64
  %arrayidx932 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom931
  %463 = load i32* %arrayidx932, align 4
  %cmp933 = icmp eq i32 %463, 9
  br i1 %cmp933, label %if.then934, label %if.end935

if.then934:                                       ; preds = %lor.lhs.false930, %for.end926
  store i32 1, i32* %retval
  br label %return

if.end935:                                        ; preds = %lor.lhs.false930
  br label %if.end936

if.end936:                                        ; preds = %if.end935, %if.end916
  br label %if.end1033

if.else937:                                       ; preds = %if.else890
  %464 = load i32* %from, align 4
  %idxprom938 = sext i32 %464 to i64
  %arrayidx939 = getelementptr inbounds [144 x i32]* @Xdiagl, i32 0, i64 %idxprom938
  %465 = load i32* %arrayidx939, align 4
  %466 = load i32* @bking_loc, align 4
  %idxprom940 = sext i32 %466 to i64
  %arrayidx941 = getelementptr inbounds [144 x i32]* @Xdiagl, i32 0, i64 %idxprom940
  %467 = load i32* %arrayidx941, align 4
  %cmp942 = icmp eq i32 %465, %467
  br i1 %cmp942, label %if.then943, label %if.else984

if.then943:                                       ; preds = %if.else937
  %468 = load i32* @bking_loc, align 4
  %469 = load i32* %from, align 4
  %cmp944 = icmp sgt i32 %468, %469
  br i1 %cmp944, label %if.then945, label %if.else964

if.then945:                                       ; preds = %if.then943
  %470 = load i32* @bking_loc, align 4
  %sub946 = sub nsw i32 %470, 13
  store i32 %sub946, i32* %l, align 4
  br label %for.cond947

for.cond947:                                      ; preds = %for.inc952, %if.then945
  %471 = load i32* %l, align 4
  %idxprom948 = sext i32 %471 to i64
  %arrayidx949 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom948
  %472 = load i32* %arrayidx949, align 4
  %cmp950 = icmp eq i32 %472, 13
  br i1 %cmp950, label %for.body951, label %for.end954

for.body951:                                      ; preds = %for.cond947
  br label %for.inc952

for.inc952:                                       ; preds = %for.body951
  %473 = load i32* %l, align 4
  %sub953 = sub nsw i32 %473, 13
  store i32 %sub953, i32* %l, align 4
  br label %for.cond947

for.end954:                                       ; preds = %for.cond947
  %474 = load i32* %l, align 4
  %idxprom955 = sext i32 %474 to i64
  %arrayidx956 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom955
  %475 = load i32* %arrayidx956, align 4
  %cmp957 = icmp eq i32 %475, 11
  br i1 %cmp957, label %if.then962, label %lor.lhs.false958

lor.lhs.false958:                                 ; preds = %for.end954
  %476 = load i32* %l, align 4
  %idxprom959 = sext i32 %476 to i64
  %arrayidx960 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom959
  %477 = load i32* %arrayidx960, align 4
  %cmp961 = icmp eq i32 %477, 9
  br i1 %cmp961, label %if.then962, label %if.end963

if.then962:                                       ; preds = %lor.lhs.false958, %for.end954
  store i32 1, i32* %retval
  br label %return

if.end963:                                        ; preds = %lor.lhs.false958
  br label %if.end983

if.else964:                                       ; preds = %if.then943
  %478 = load i32* @bking_loc, align 4
  %add965 = add nsw i32 %478, 13
  store i32 %add965, i32* %l, align 4
  br label %for.cond966

for.cond966:                                      ; preds = %for.inc971, %if.else964
  %479 = load i32* %l, align 4
  %idxprom967 = sext i32 %479 to i64
  %arrayidx968 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom967
  %480 = load i32* %arrayidx968, align 4
  %cmp969 = icmp eq i32 %480, 13
  br i1 %cmp969, label %for.body970, label %for.end973

for.body970:                                      ; preds = %for.cond966
  br label %for.inc971

for.inc971:                                       ; preds = %for.body970
  %481 = load i32* %l, align 4
  %add972 = add nsw i32 %481, 13
  store i32 %add972, i32* %l, align 4
  br label %for.cond966

for.end973:                                       ; preds = %for.cond966
  %482 = load i32* %l, align 4
  %idxprom974 = sext i32 %482 to i64
  %arrayidx975 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom974
  %483 = load i32* %arrayidx975, align 4
  %cmp976 = icmp eq i32 %483, 11
  br i1 %cmp976, label %if.then981, label %lor.lhs.false977

lor.lhs.false977:                                 ; preds = %for.end973
  %484 = load i32* %l, align 4
  %idxprom978 = sext i32 %484 to i64
  %arrayidx979 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom978
  %485 = load i32* %arrayidx979, align 4
  %cmp980 = icmp eq i32 %485, 9
  br i1 %cmp980, label %if.then981, label %if.end982

if.then981:                                       ; preds = %lor.lhs.false977, %for.end973
  store i32 1, i32* %retval
  br label %return

if.end982:                                        ; preds = %lor.lhs.false977
  br label %if.end983

if.end983:                                        ; preds = %if.end982, %if.end963
  br label %if.end1032

if.else984:                                       ; preds = %if.else937
  %486 = load i32* %from, align 4
  %idxprom985 = sext i32 %486 to i64
  %arrayidx986 = getelementptr inbounds [144 x i32]* @Xdiagr, i32 0, i64 %idxprom985
  %487 = load i32* %arrayidx986, align 4
  %488 = load i32* @bking_loc, align 4
  %idxprom987 = sext i32 %488 to i64
  %arrayidx988 = getelementptr inbounds [144 x i32]* @Xdiagr, i32 0, i64 %idxprom987
  %489 = load i32* %arrayidx988, align 4
  %cmp989 = icmp eq i32 %487, %489
  br i1 %cmp989, label %if.then990, label %if.end1031

if.then990:                                       ; preds = %if.else984
  %490 = load i32* @bking_loc, align 4
  %491 = load i32* %from, align 4
  %cmp991 = icmp sgt i32 %490, %491
  br i1 %cmp991, label %if.then992, label %if.else1011

if.then992:                                       ; preds = %if.then990
  %492 = load i32* @bking_loc, align 4
  %sub993 = sub nsw i32 %492, 11
  store i32 %sub993, i32* %l, align 4
  br label %for.cond994

for.cond994:                                      ; preds = %for.inc999, %if.then992
  %493 = load i32* %l, align 4
  %idxprom995 = sext i32 %493 to i64
  %arrayidx996 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom995
  %494 = load i32* %arrayidx996, align 4
  %cmp997 = icmp eq i32 %494, 13
  br i1 %cmp997, label %for.body998, label %for.end1001

for.body998:                                      ; preds = %for.cond994
  br label %for.inc999

for.inc999:                                       ; preds = %for.body998
  %495 = load i32* %l, align 4
  %sub1000 = sub nsw i32 %495, 11
  store i32 %sub1000, i32* %l, align 4
  br label %for.cond994

for.end1001:                                      ; preds = %for.cond994
  %496 = load i32* %l, align 4
  %idxprom1002 = sext i32 %496 to i64
  %arrayidx1003 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom1002
  %497 = load i32* %arrayidx1003, align 4
  %cmp1004 = icmp eq i32 %497, 11
  br i1 %cmp1004, label %if.then1009, label %lor.lhs.false1005

lor.lhs.false1005:                                ; preds = %for.end1001
  %498 = load i32* %l, align 4
  %idxprom1006 = sext i32 %498 to i64
  %arrayidx1007 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom1006
  %499 = load i32* %arrayidx1007, align 4
  %cmp1008 = icmp eq i32 %499, 9
  br i1 %cmp1008, label %if.then1009, label %if.end1010

if.then1009:                                      ; preds = %lor.lhs.false1005, %for.end1001
  store i32 1, i32* %retval
  br label %return

if.end1010:                                       ; preds = %lor.lhs.false1005
  br label %if.end1030

if.else1011:                                      ; preds = %if.then990
  %500 = load i32* @bking_loc, align 4
  %add1012 = add nsw i32 %500, 11
  store i32 %add1012, i32* %l, align 4
  br label %for.cond1013

for.cond1013:                                     ; preds = %for.inc1018, %if.else1011
  %501 = load i32* %l, align 4
  %idxprom1014 = sext i32 %501 to i64
  %arrayidx1015 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom1014
  %502 = load i32* %arrayidx1015, align 4
  %cmp1016 = icmp eq i32 %502, 13
  br i1 %cmp1016, label %for.body1017, label %for.end1020

for.body1017:                                     ; preds = %for.cond1013
  br label %for.inc1018

for.inc1018:                                      ; preds = %for.body1017
  %503 = load i32* %l, align 4
  %add1019 = add nsw i32 %503, 11
  store i32 %add1019, i32* %l, align 4
  br label %for.cond1013

for.end1020:                                      ; preds = %for.cond1013
  %504 = load i32* %l, align 4
  %idxprom1021 = sext i32 %504 to i64
  %arrayidx1022 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom1021
  %505 = load i32* %arrayidx1022, align 4
  %cmp1023 = icmp eq i32 %505, 11
  br i1 %cmp1023, label %if.then1028, label %lor.lhs.false1024

lor.lhs.false1024:                                ; preds = %for.end1020
  %506 = load i32* %l, align 4
  %idxprom1025 = sext i32 %506 to i64
  %arrayidx1026 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom1025
  %507 = load i32* %arrayidx1026, align 4
  %cmp1027 = icmp eq i32 %507, 9
  br i1 %cmp1027, label %if.then1028, label %if.end1029

if.then1028:                                      ; preds = %lor.lhs.false1024, %for.end1020
  store i32 1, i32* %retval
  br label %return

if.end1029:                                       ; preds = %lor.lhs.false1024
  br label %if.end1030

if.end1030:                                       ; preds = %if.end1029, %if.end1010
  br label %if.end1031

if.end1031:                                       ; preds = %if.end1030, %if.else984
  br label %if.end1032

if.end1032:                                       ; preds = %if.end1031, %if.end983
  br label %if.end1033

if.end1033:                                       ; preds = %if.end1032, %if.end936
  br label %if.end1034

if.end1034:                                       ; preds = %if.end1033, %if.end889
  store i32 0, i32* %retval
  br label %return

return:                                           ; preds = %if.end1034, %if.then1028, %if.then1009, %if.then981, %if.then962, %if.then934, %if.then915, %if.then887, %if.then868, %if.then842, %if.else838, %if.then837, %if.then822, %if.then809, %if.then787, %if.then774, %if.then752, %if.then739, %if.then717, %if.then704, %if.then680, %if.then667, %if.then654, %if.then632, %if.then619, %if.then595, %if.then582, %if.then560, %if.then547, %if.then526, %if.end512, %if.then506, %if.then487, %if.then459, %if.then440, %if.then412, %if.then393, %if.then365, %if.then346, %if.then320, %if.else317, %if.then316, %if.then304, %if.then291, %if.then269, %if.then256, %if.then234, %if.then221, %if.then199, %if.then186, %if.then162, %if.then149, %if.then137, %if.then116, %if.then103, %if.then79, %if.then66, %if.then44, %if.then32, %if.then16, %if.then
  %508 = load i32* %retval
  ret i32 %508
}

; Function Attrs: nounwind uwtable
define internal i32 @extended_in_check() #0 {
entry:
  %retval = alloca i32, align 4
  %retval174 = bitcast i32* %retval to i32*
  %bitcast = bitcast i32* %retval to i8*
  %mtmp = getelementptr i32* %retval174, i32 1
  %bitcast175 = bitcast i32* %mtmp to i8*
  %sq = alloca i32, align 4
  %sq176 = bitcast i32* %sq to i32*
  %bitcast177 = bitcast i32* %sq to i8*
  %mtmp178 = getelementptr i32* %sq176, i32 1
  %bitcast179 = bitcast i32* %mtmp178 to i8*
  %0 = load i32* @Variant, align 4
  %cmp = icmp eq i32 %0, 3
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval
  br label %return

if.end:                                           ; preds = %entry
  %1 = load i32* @white_to_move, align 4
  %cmp1 = icmp eq i32 %1, 1
  br i1 %cmp1, label %if.then2, label %if.else81

if.then2:                                         ; preds = %if.end
  %2 = load i32* @wking_loc, align 4
  %sub = sub nsw i32 %2, 12
  %idxprom = sext i32 %sub to i64
  %arrayidx = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom
  %3 = load i32* %arrayidx, align 4
  store i32 %3, i32* %sq, align 4
  %4 = load i32* %sq, align 4
  %cmp3 = icmp eq i32 %4, 8
  br i1 %cmp3, label %if.then5, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.then2
  %5 = load i32* %sq, align 4
  %cmp4 = icmp eq i32 %5, 10
  br i1 %cmp4, label %if.then5, label %if.end6

if.then5:                                         ; preds = %lor.lhs.false, %if.then2
  store i32 2, i32* %retval
  br label %return

if.end6:                                          ; preds = %lor.lhs.false
  %6 = load i32* @wking_loc, align 4
  %sub7 = sub nsw i32 %6, 1
  %idxprom8 = sext i32 %sub7 to i64
  %arrayidx9 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom8
  %7 = load i32* %arrayidx9, align 4
  store i32 %7, i32* %sq, align 4
  %8 = load i32* %sq, align 4
  %cmp10 = icmp eq i32 %8, 8
  br i1 %cmp10, label %if.then13, label %lor.lhs.false11

lor.lhs.false11:                                  ; preds = %if.end6
  %9 = load i32* %sq, align 4
  %cmp12 = icmp eq i32 %9, 10
  br i1 %cmp12, label %if.then13, label %if.end14

if.then13:                                        ; preds = %lor.lhs.false11, %if.end6
  store i32 2, i32* %retval
  br label %return

if.end14:                                         ; preds = %lor.lhs.false11
  %10 = load i32* @wking_loc, align 4
  %add = add nsw i32 %10, 1
  %idxprom15 = sext i32 %add to i64
  %arrayidx16 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom15
  %11 = load i32* %arrayidx16, align 4
  store i32 %11, i32* %sq, align 4
  %12 = load i32* %sq, align 4
  %cmp17 = icmp eq i32 %12, 8
  br i1 %cmp17, label %if.then20, label %lor.lhs.false18

lor.lhs.false18:                                  ; preds = %if.end14
  %13 = load i32* %sq, align 4
  %cmp19 = icmp eq i32 %13, 10
  br i1 %cmp19, label %if.then20, label %if.end21

if.then20:                                        ; preds = %lor.lhs.false18, %if.end14
  store i32 2, i32* %retval
  br label %return

if.end21:                                         ; preds = %lor.lhs.false18
  %14 = load i32* @wking_loc, align 4
  %add22 = add nsw i32 %14, 12
  %idxprom23 = sext i32 %add22 to i64
  %arrayidx24 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom23
  %15 = load i32* %arrayidx24, align 4
  store i32 %15, i32* %sq, align 4
  %16 = load i32* %sq, align 4
  %cmp25 = icmp eq i32 %16, 8
  br i1 %cmp25, label %if.then28, label %lor.lhs.false26

lor.lhs.false26:                                  ; preds = %if.end21
  %17 = load i32* %sq, align 4
  %cmp27 = icmp eq i32 %17, 10
  br i1 %cmp27, label %if.then28, label %if.end29

if.then28:                                        ; preds = %lor.lhs.false26, %if.end21
  store i32 2, i32* %retval
  br label %return

if.end29:                                         ; preds = %lor.lhs.false26
  %18 = load i32* @wking_loc, align 4
  %add30 = add nsw i32 %18, 13
  %idxprom31 = sext i32 %add30 to i64
  %arrayidx32 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom31
  %19 = load i32* %arrayidx32, align 4
  store i32 %19, i32* %sq, align 4
  %20 = load i32* %sq, align 4
  %cmp33 = icmp eq i32 %20, 12
  br i1 %cmp33, label %if.then38, label %lor.lhs.false34

lor.lhs.false34:                                  ; preds = %if.end29
  %21 = load i32* %sq, align 4
  %cmp35 = icmp eq i32 %21, 10
  br i1 %cmp35, label %if.then38, label %lor.lhs.false36

lor.lhs.false36:                                  ; preds = %lor.lhs.false34
  %22 = load i32* %sq, align 4
  %cmp37 = icmp eq i32 %22, 2
  br i1 %cmp37, label %if.then38, label %if.end39

if.then38:                                        ; preds = %lor.lhs.false36, %lor.lhs.false34, %if.end29
  store i32 2, i32* %retval
  br label %return

if.end39:                                         ; preds = %lor.lhs.false36
  %23 = load i32* @wking_loc, align 4
  %add40 = add nsw i32 %23, 11
  %idxprom41 = sext i32 %add40 to i64
  %arrayidx42 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom41
  %24 = load i32* %arrayidx42, align 4
  store i32 %24, i32* %sq, align 4
  %25 = load i32* %sq, align 4
  %cmp43 = icmp eq i32 %25, 12
  br i1 %cmp43, label %if.then48, label %lor.lhs.false44

lor.lhs.false44:                                  ; preds = %if.end39
  %26 = load i32* %sq, align 4
  %cmp45 = icmp eq i32 %26, 10
  br i1 %cmp45, label %if.then48, label %lor.lhs.false46

lor.lhs.false46:                                  ; preds = %lor.lhs.false44
  %27 = load i32* %sq, align 4
  %cmp47 = icmp eq i32 %27, 2
  br i1 %cmp47, label %if.then48, label %if.end49

if.then48:                                        ; preds = %lor.lhs.false46, %lor.lhs.false44, %if.end39
  store i32 2, i32* %retval
  br label %return

if.end49:                                         ; preds = %lor.lhs.false46
  %28 = load i32* @wking_loc, align 4
  %sub50 = sub nsw i32 %28, 11
  %idxprom51 = sext i32 %sub50 to i64
  %arrayidx52 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom51
  %29 = load i32* %arrayidx52, align 4
  store i32 %29, i32* %sq, align 4
  %30 = load i32* %sq, align 4
  %cmp53 = icmp eq i32 %30, 12
  br i1 %cmp53, label %if.then56, label %lor.lhs.false54

lor.lhs.false54:                                  ; preds = %if.end49
  %31 = load i32* %sq, align 4
  %cmp55 = icmp eq i32 %31, 10
  br i1 %cmp55, label %if.then56, label %if.end57

if.then56:                                        ; preds = %lor.lhs.false54, %if.end49
  store i32 2, i32* %retval
  br label %return

if.end57:                                         ; preds = %lor.lhs.false54
  %32 = load i32* @wking_loc, align 4
  %sub58 = sub nsw i32 %32, 13
  %idxprom59 = sext i32 %sub58 to i64
  %arrayidx60 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom59
  %33 = load i32* %arrayidx60, align 4
  store i32 %33, i32* %sq, align 4
  %34 = load i32* %sq, align 4
  %cmp61 = icmp eq i32 %34, 12
  br i1 %cmp61, label %if.then64, label %lor.lhs.false62

lor.lhs.false62:                                  ; preds = %if.end57
  %35 = load i32* %sq, align 4
  %cmp63 = icmp eq i32 %35, 10
  br i1 %cmp63, label %if.then64, label %if.end65

if.then64:                                        ; preds = %lor.lhs.false62, %if.end57
  store i32 2, i32* %retval
  br label %return

if.end65:                                         ; preds = %lor.lhs.false62
  store i32 0, i32* %sq, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.end65
  %36 = load i32* %sq, align 4
  %cmp66 = icmp slt i32 %36, 8
  br i1 %cmp66, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %37 = load i32* @wking_loc, align 4
  %38 = load i32* %sq, align 4
  %idxprom67 = sext i32 %38 to i64
  %bitcast180 = bitcast [8 x i32]* @extended_in_check.knight_o to i8*
  %bitcast181 = bitcast [8 x i32]* getelementptr inbounds ([8 x i32]* @extended_in_check.knight_o, i32 1) to i8*
  %arrayidx68 = getelementptr inbounds [8 x i32]* @extended_in_check.knight_o, i32 0, i64 %idxprom67
  %39 = load i32* %arrayidx68, align 4
  %add69 = add nsw i32 %37, %39
  %idxprom70 = sext i32 %add69 to i64
  %arrayidx71 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom70
  %40 = load i32* %arrayidx71, align 4
  %cmp72 = icmp eq i32 %40, 4
  br i1 %cmp72, label %if.then73, label %if.end74

if.then73:                                        ; preds = %for.body
  store i32 2, i32* %retval
  br label %return

if.end74:                                         ; preds = %for.body
  br label %for.inc

for.inc:                                          ; preds = %if.end74
  %41 = load i32* %sq, align 4
  %inc = add nsw i32 %41, 1
  store i32 %inc, i32* %sq, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %42 = load i32* @wking_loc, align 4
  %call = call i32 @is_attacked(i32 %42, i32 0)
  %tobool = icmp ne i32 %call, 0
  br i1 %tobool, label %if.then75, label %if.end80

if.then75:                                        ; preds = %for.end
  %43 = load i32* @Variant, align 4
  %cmp76 = icmp eq i32 %43, 2
  br i1 %cmp76, label %if.then79, label %lor.lhs.false77

lor.lhs.false77:                                  ; preds = %if.then75
  %44 = load i32* @Variant, align 4
  %cmp78 = icmp eq i32 %44, 4
  br i1 %cmp78, label %if.then79, label %if.else

if.then79:                                        ; preds = %lor.lhs.false77, %if.then75
  store i32 2, i32* %retval
  br label %return

if.else:                                          ; preds = %lor.lhs.false77
  store i32 1, i32* %retval
  br label %return

if.end80:                                         ; preds = %for.end
  br label %if.end173

if.else81:                                        ; preds = %if.end
  %45 = load i32* @bking_loc, align 4
  %sub82 = sub nsw i32 %45, 12
  %idxprom83 = sext i32 %sub82 to i64
  %arrayidx84 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom83
  %46 = load i32* %arrayidx84, align 4
  store i32 %46, i32* %sq, align 4
  %47 = load i32* %sq, align 4
  %cmp85 = icmp eq i32 %47, 7
  br i1 %cmp85, label %if.then88, label %lor.lhs.false86

lor.lhs.false86:                                  ; preds = %if.else81
  %48 = load i32* %sq, align 4
  %cmp87 = icmp eq i32 %48, 9
  br i1 %cmp87, label %if.then88, label %if.end89

if.then88:                                        ; preds = %lor.lhs.false86, %if.else81
  store i32 2, i32* %retval
  br label %return

if.end89:                                         ; preds = %lor.lhs.false86
  %49 = load i32* @bking_loc, align 4
  %sub90 = sub nsw i32 %49, 1
  %idxprom91 = sext i32 %sub90 to i64
  %arrayidx92 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom91
  %50 = load i32* %arrayidx92, align 4
  store i32 %50, i32* %sq, align 4
  %51 = load i32* %sq, align 4
  %cmp93 = icmp eq i32 %51, 7
  br i1 %cmp93, label %if.then96, label %lor.lhs.false94

lor.lhs.false94:                                  ; preds = %if.end89
  %52 = load i32* %sq, align 4
  %cmp95 = icmp eq i32 %52, 9
  br i1 %cmp95, label %if.then96, label %if.end97

if.then96:                                        ; preds = %lor.lhs.false94, %if.end89
  store i32 2, i32* %retval
  br label %return

if.end97:                                         ; preds = %lor.lhs.false94
  %53 = load i32* @bking_loc, align 4
  %add98 = add nsw i32 %53, 1
  %idxprom99 = sext i32 %add98 to i64
  %arrayidx100 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom99
  %54 = load i32* %arrayidx100, align 4
  store i32 %54, i32* %sq, align 4
  %55 = load i32* %sq, align 4
  %cmp101 = icmp eq i32 %55, 7
  br i1 %cmp101, label %if.then104, label %lor.lhs.false102

lor.lhs.false102:                                 ; preds = %if.end97
  %56 = load i32* %sq, align 4
  %cmp103 = icmp eq i32 %56, 9
  br i1 %cmp103, label %if.then104, label %if.end105

if.then104:                                       ; preds = %lor.lhs.false102, %if.end97
  store i32 2, i32* %retval
  br label %return

if.end105:                                        ; preds = %lor.lhs.false102
  %57 = load i32* @bking_loc, align 4
  %add106 = add nsw i32 %57, 12
  %idxprom107 = sext i32 %add106 to i64
  %arrayidx108 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom107
  %58 = load i32* %arrayidx108, align 4
  store i32 %58, i32* %sq, align 4
  %59 = load i32* %sq, align 4
  %cmp109 = icmp eq i32 %59, 7
  br i1 %cmp109, label %if.then112, label %lor.lhs.false110

lor.lhs.false110:                                 ; preds = %if.end105
  %60 = load i32* %sq, align 4
  %cmp111 = icmp eq i32 %60, 9
  br i1 %cmp111, label %if.then112, label %if.end113

if.then112:                                       ; preds = %lor.lhs.false110, %if.end105
  store i32 2, i32* %retval
  br label %return

if.end113:                                        ; preds = %lor.lhs.false110
  %61 = load i32* @bking_loc, align 4
  %sub114 = sub nsw i32 %61, 13
  %idxprom115 = sext i32 %sub114 to i64
  %arrayidx116 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom115
  %62 = load i32* %arrayidx116, align 4
  store i32 %62, i32* %sq, align 4
  %63 = load i32* %sq, align 4
  %cmp117 = icmp eq i32 %63, 11
  br i1 %cmp117, label %if.then122, label %lor.lhs.false118

lor.lhs.false118:                                 ; preds = %if.end113
  %64 = load i32* %sq, align 4
  %cmp119 = icmp eq i32 %64, 9
  br i1 %cmp119, label %if.then122, label %lor.lhs.false120

lor.lhs.false120:                                 ; preds = %lor.lhs.false118
  %65 = load i32* %sq, align 4
  %cmp121 = icmp eq i32 %65, 1
  br i1 %cmp121, label %if.then122, label %if.end123

if.then122:                                       ; preds = %lor.lhs.false120, %lor.lhs.false118, %if.end113
  store i32 2, i32* %retval
  br label %return

if.end123:                                        ; preds = %lor.lhs.false120
  %66 = load i32* @bking_loc, align 4
  %sub124 = sub nsw i32 %66, 11
  %idxprom125 = sext i32 %sub124 to i64
  %arrayidx126 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom125
  %67 = load i32* %arrayidx126, align 4
  store i32 %67, i32* %sq, align 4
  %68 = load i32* %sq, align 4
  %cmp127 = icmp eq i32 %68, 11
  br i1 %cmp127, label %if.then132, label %lor.lhs.false128

lor.lhs.false128:                                 ; preds = %if.end123
  %69 = load i32* %sq, align 4
  %cmp129 = icmp eq i32 %69, 9
  br i1 %cmp129, label %if.then132, label %lor.lhs.false130

lor.lhs.false130:                                 ; preds = %lor.lhs.false128
  %70 = load i32* %sq, align 4
  %cmp131 = icmp eq i32 %70, 1
  br i1 %cmp131, label %if.then132, label %if.end133

if.then132:                                       ; preds = %lor.lhs.false130, %lor.lhs.false128, %if.end123
  store i32 2, i32* %retval
  br label %return

if.end133:                                        ; preds = %lor.lhs.false130
  %71 = load i32* @bking_loc, align 4
  %add134 = add nsw i32 %71, 11
  %idxprom135 = sext i32 %add134 to i64
  %arrayidx136 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom135
  %72 = load i32* %arrayidx136, align 4
  store i32 %72, i32* %sq, align 4
  %73 = load i32* %sq, align 4
  %cmp137 = icmp eq i32 %73, 11
  br i1 %cmp137, label %if.then140, label %lor.lhs.false138

lor.lhs.false138:                                 ; preds = %if.end133
  %74 = load i32* %sq, align 4
  %cmp139 = icmp eq i32 %74, 9
  br i1 %cmp139, label %if.then140, label %if.end141

if.then140:                                       ; preds = %lor.lhs.false138, %if.end133
  store i32 2, i32* %retval
  br label %return

if.end141:                                        ; preds = %lor.lhs.false138
  %75 = load i32* @bking_loc, align 4
  %add142 = add nsw i32 %75, 13
  %idxprom143 = sext i32 %add142 to i64
  %arrayidx144 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom143
  %76 = load i32* %arrayidx144, align 4
  store i32 %76, i32* %sq, align 4
  %77 = load i32* %sq, align 4
  %cmp145 = icmp eq i32 %77, 11
  br i1 %cmp145, label %if.then148, label %lor.lhs.false146

lor.lhs.false146:                                 ; preds = %if.end141
  %78 = load i32* %sq, align 4
  %cmp147 = icmp eq i32 %78, 9
  br i1 %cmp147, label %if.then148, label %if.end149

if.then148:                                       ; preds = %lor.lhs.false146, %if.end141
  store i32 2, i32* %retval
  br label %return

if.end149:                                        ; preds = %lor.lhs.false146
  store i32 0, i32* %sq, align 4
  br label %for.cond150

for.cond150:                                      ; preds = %for.inc161, %if.end149
  %79 = load i32* %sq, align 4
  %cmp151 = icmp slt i32 %79, 8
  br i1 %cmp151, label %for.body152, label %for.end163

for.body152:                                      ; preds = %for.cond150
  %80 = load i32* @bking_loc, align 4
  %81 = load i32* %sq, align 4
  %idxprom153 = sext i32 %81 to i64
  %bitcast182 = bitcast [8 x i32]* @extended_in_check.knight_o to i8*
  %bitcast183 = bitcast [8 x i32]* getelementptr inbounds ([8 x i32]* @extended_in_check.knight_o, i32 1) to i8*
  %arrayidx154 = getelementptr inbounds [8 x i32]* @extended_in_check.knight_o, i32 0, i64 %idxprom153
  %82 = load i32* %arrayidx154, align 4
  %add155 = add nsw i32 %80, %82
  %idxprom156 = sext i32 %add155 to i64
  %arrayidx157 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom156
  %83 = load i32* %arrayidx157, align 4
  %cmp158 = icmp eq i32 %83, 3
  br i1 %cmp158, label %if.then159, label %if.end160

if.then159:                                       ; preds = %for.body152
  store i32 2, i32* %retval
  br label %return

if.end160:                                        ; preds = %for.body152
  br label %for.inc161

for.inc161:                                       ; preds = %if.end160
  %84 = load i32* %sq, align 4
  %inc162 = add nsw i32 %84, 1
  store i32 %inc162, i32* %sq, align 4
  br label %for.cond150

for.end163:                                       ; preds = %for.cond150
  %85 = load i32* @bking_loc, align 4
  %call164 = call i32 @is_attacked(i32 %85, i32 1)
  %tobool165 = icmp ne i32 %call164, 0
  br i1 %tobool165, label %if.then166, label %if.end172

if.then166:                                       ; preds = %for.end163
  %86 = load i32* @Variant, align 4
  %cmp167 = icmp eq i32 %86, 2
  br i1 %cmp167, label %if.then170, label %lor.lhs.false168

lor.lhs.false168:                                 ; preds = %if.then166
  %87 = load i32* @Variant, align 4
  %cmp169 = icmp eq i32 %87, 4
  br i1 %cmp169, label %if.then170, label %if.else171

if.then170:                                       ; preds = %lor.lhs.false168, %if.then166
  store i32 2, i32* %retval
  br label %return

if.else171:                                       ; preds = %lor.lhs.false168
  store i32 1, i32* %retval
  br label %return

if.end172:                                        ; preds = %for.end163
  br label %if.end173

if.end173:                                        ; preds = %if.end172, %if.end80
  store i32 0, i32* %retval
  br label %return

return:                                           ; preds = %if.end173, %if.else171, %if.then170, %if.then159, %if.then148, %if.then140, %if.then132, %if.then122, %if.then112, %if.then104, %if.then96, %if.then88, %if.else, %if.then79, %if.then73, %if.then64, %if.then56, %if.then48, %if.then38, %if.then28, %if.then20, %if.then13, %if.then5, %if.then
  %88 = load i32* %retval
  ret i32 %88
}

; Function Attrs: nounwind uwtable
define internal void @make(%struct.move_s* %moves, i32 %i) #0 {
entry:
  %base.alloca510 = alloca i8*
  %bound.alloca511 = alloca i8*
  %base.alloca505 = alloca i8*
  %bound.alloca506 = alloca i8*
  %base.alloca500 = alloca i8*
  %bound.alloca501 = alloca i8*
  %base.alloca495 = alloca i8*
  %bound.alloca496 = alloca i8*
  %base.alloca490 = alloca i8*
  %bound.alloca491 = alloca i8*
  %base.alloca = alloca i8*
  %bound.alloca = alloca i8*
  %0 = call i8* @__softboundcets_load_base_shadow_stack(i32 1)
  %1 = call i8* @__softboundcets_load_bound_shadow_stack(i32 1)
  %moves.addr = alloca %struct.move_s*, align 8
  %moves.addr454 = bitcast %struct.move_s** %moves.addr to %struct.move_s**
  %bitcast = bitcast %struct.move_s** %moves.addr to i8*
  %mtmp = getelementptr %struct.move_s** %moves.addr454, i32 1
  %bitcast455 = bitcast %struct.move_s** %mtmp to i8*
  %i.addr = alloca i32, align 4
  %i.addr456 = bitcast i32* %i.addr to i32*
  %bitcast457 = bitcast i32* %i.addr to i8*
  %mtmp458 = getelementptr i32* %i.addr456, i32 1
  %bitcast459 = bitcast i32* %mtmp458 to i8*
  %ep = alloca i32, align 4
  %ep460 = bitcast i32* %ep to i32*
  %bitcast461 = bitcast i32* %ep to i8*
  %mtmp462 = getelementptr i32* %ep460, i32 1
  %bitcast463 = bitcast i32* %mtmp462 to i8*
  %from = alloca i32, align 4
  %from464 = bitcast i32* %from to i32*
  %bitcast465 = bitcast i32* %from to i8*
  %mtmp466 = getelementptr i32* %from464, i32 1
  %bitcast467 = bitcast i32* %mtmp466 to i8*
  %target = alloca i32, align 4
  %target468 = bitcast i32* %target to i32*
  %bitcast469 = bitcast i32* %target to i8*
  %mtmp470 = getelementptr i32* %target468, i32 1
  %bitcast471 = bitcast i32* %mtmp470 to i8*
  %captured = alloca i32, align 4
  %captured472 = bitcast i32* %captured to i32*
  %bitcast473 = bitcast i32* %captured to i8*
  %mtmp474 = getelementptr i32* %captured472, i32 1
  %bitcast475 = bitcast i32* %mtmp474 to i8*
  %promoted = alloca i32, align 4
  %promoted476 = bitcast i32* %promoted to i32*
  %bitcast477 = bitcast i32* %promoted to i8*
  %mtmp478 = getelementptr i32* %promoted476, i32 1
  %bitcast479 = bitcast i32* %mtmp478 to i8*
  %castled = alloca i32, align 4
  %castled480 = bitcast i32* %castled to i32*
  %bitcast481 = bitcast i32* %castled to i8*
  %mtmp482 = getelementptr i32* %castled480, i32 1
  %bitcast483 = bitcast i32* %mtmp482 to i8*
  %find_slot = alloca i32, align 4
  %find_slot484 = bitcast i32* %find_slot to i32*
  %bitcast485 = bitcast i32* %find_slot to i8*
  %mtmp486 = getelementptr i32* %find_slot484, i32 1
  %bitcast487 = bitcast i32* %mtmp486 to i8*
  store %struct.move_s* %moves, %struct.move_s** %moves.addr, align 8
  %bitcast514 = bitcast %struct.move_s** %moves.addr to i8*
  call void @__softboundcets_metadata_store(i8* %bitcast514, i8* %0, i8* %1)
  store i32 %i, i32* %i.addr, align 4
  %2 = load i32* %i.addr, align 4
  %idxprom = sext i32 %2 to i64
  %3 = load %struct.move_s** %moves.addr, align 8
  %bitcast488 = bitcast %struct.move_s** %moves.addr to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast488, i8** %base.alloca, i8** %bound.alloca)
  %base.load = load i8** %base.alloca
  %bound.load = load i8** %bound.alloca
  %arrayidx = getelementptr inbounds %struct.move_s* %3, i64 %idxprom
  %ep1 = getelementptr inbounds %struct.move_s* %arrayidx, i32 0, i32 5
  %4 = load i32* %ep1, align 4
  store i32 %4, i32* %ep, align 4
  %5 = load i32* %i.addr, align 4
  %idxprom2 = sext i32 %5 to i64
  %6 = load %struct.move_s** %moves.addr, align 8
  %bitcast489 = bitcast %struct.move_s** %moves.addr to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast489, i8** %base.alloca490, i8** %bound.alloca491)
  %base.load492 = load i8** %base.alloca490
  %bound.load493 = load i8** %bound.alloca491
  %arrayidx3 = getelementptr inbounds %struct.move_s* %6, i64 %idxprom2
  %from4 = getelementptr inbounds %struct.move_s* %arrayidx3, i32 0, i32 0
  %7 = load i32* %from4, align 4
  store i32 %7, i32* %from, align 4
  %8 = load i32* %i.addr, align 4
  %idxprom5 = sext i32 %8 to i64
  %9 = load %struct.move_s** %moves.addr, align 8
  %bitcast494 = bitcast %struct.move_s** %moves.addr to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast494, i8** %base.alloca495, i8** %bound.alloca496)
  %base.load497 = load i8** %base.alloca495
  %bound.load498 = load i8** %bound.alloca496
  %arrayidx6 = getelementptr inbounds %struct.move_s* %9, i64 %idxprom5
  %target7 = getelementptr inbounds %struct.move_s* %arrayidx6, i32 0, i32 1
  %10 = load i32* %target7, align 4
  store i32 %10, i32* %target, align 4
  %11 = load i32* %i.addr, align 4
  %idxprom8 = sext i32 %11 to i64
  %12 = load %struct.move_s** %moves.addr, align 8
  %bitcast499 = bitcast %struct.move_s** %moves.addr to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast499, i8** %base.alloca500, i8** %bound.alloca501)
  %base.load502 = load i8** %base.alloca500
  %bound.load503 = load i8** %bound.alloca501
  %arrayidx9 = getelementptr inbounds %struct.move_s* %12, i64 %idxprom8
  %captured10 = getelementptr inbounds %struct.move_s* %arrayidx9, i32 0, i32 2
  %13 = load i32* %captured10, align 4
  store i32 %13, i32* %captured, align 4
  %14 = load i32* %i.addr, align 4
  %idxprom11 = sext i32 %14 to i64
  %15 = load %struct.move_s** %moves.addr, align 8
  %bitcast504 = bitcast %struct.move_s** %moves.addr to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast504, i8** %base.alloca505, i8** %bound.alloca506)
  %base.load507 = load i8** %base.alloca505
  %bound.load508 = load i8** %bound.alloca506
  %arrayidx12 = getelementptr inbounds %struct.move_s* %15, i64 %idxprom11
  %promoted13 = getelementptr inbounds %struct.move_s* %arrayidx12, i32 0, i32 3
  %16 = load i32* %promoted13, align 4
  store i32 %16, i32* %promoted, align 4
  %17 = load i32* %i.addr, align 4
  %idxprom14 = sext i32 %17 to i64
  %18 = load %struct.move_s** %moves.addr, align 8
  %bitcast509 = bitcast %struct.move_s** %moves.addr to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast509, i8** %base.alloca510, i8** %bound.alloca511)
  %base.load512 = load i8** %base.alloca510
  %bound.load513 = load i8** %bound.alloca511
  %arrayidx15 = getelementptr inbounds %struct.move_s* %18, i64 %idxprom14
  %castled16 = getelementptr inbounds %struct.move_s* %arrayidx15, i32 0, i32 4
  %19 = load i32* %castled16, align 4
  store i32 %19, i32* %castled, align 4
  %20 = load i32* @ep_square, align 4
  %21 = load i32* @ply, align 4
  %idxprom17 = sext i32 %21 to i64
  %arrayidx18 = getelementptr inbounds [300 x %struct.move_x]* @path_x, i32 0, i64 %idxprom17
  %epsq = getelementptr inbounds %struct.move_x* %arrayidx18, i32 0, i32 2
  store i32 %20, i32* %epsq, align 4
  store i32 0, i32* @ep_square, align 4
  %22 = load i32* @fifty, align 4
  %23 = load i32* @ply, align 4
  %idxprom19 = sext i32 %23 to i64
  %arrayidx20 = getelementptr inbounds [300 x %struct.move_x]* @path_x, i32 0, i64 %idxprom19
  %fifty = getelementptr inbounds %struct.move_x* %arrayidx20, i32 0, i32 3
  store i32 %22, i32* %fifty, align 4
  %24 = load i32* %from, align 4
  %idxprom21 = sext i32 %24 to i64
  %arrayidx22 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom21
  %25 = load i32* %arrayidx22, align 4
  %cmp = icmp eq i32 %25, 1
  br i1 %cmp, label %if.then, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %entry
  %26 = load i32* %from, align 4
  %idxprom23 = sext i32 %26 to i64
  %arrayidx24 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom23
  %27 = load i32* %arrayidx24, align 4
  %cmp25 = icmp eq i32 %27, 2
  br i1 %cmp25, label %if.then, label %lor.lhs.false26

lor.lhs.false26:                                  ; preds = %lor.lhs.false
  %28 = load i32* %target, align 4
  %idxprom27 = sext i32 %28 to i64
  %arrayidx28 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom27
  %29 = load i32* %arrayidx28, align 4
  %cmp29 = icmp ne i32 %29, 13
  br i1 %cmp29, label %if.then, label %if.else

if.then:                                          ; preds = %lor.lhs.false26, %lor.lhs.false, %entry
  store i32 0, i32* @fifty, align 4
  br label %if.end

if.else:                                          ; preds = %lor.lhs.false26
  %30 = load i32* @fifty, align 4
  %inc = add nsw i32 %30, 1
  store i32 %inc, i32* @fifty, align 4
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %31 = load i32* %from, align 4
  %cmp30 = icmp eq i32 %31, 0
  br i1 %cmp30, label %if.then31, label %if.else57

if.then31:                                        ; preds = %if.end
  %32 = load i32* @piece_count, align 4
  %inc32 = add nsw i32 %32, 1
  store i32 %inc32, i32* @piece_count, align 4
  store i32 1, i32* %find_slot, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.then31
  %33 = load i32* %find_slot, align 4
  %idxprom33 = sext i32 %33 to i64
  %arrayidx34 = getelementptr inbounds [62 x i32]* @pieces, i32 0, i64 %idxprom33
  %34 = load i32* %arrayidx34, align 4
  %cmp35 = icmp ne i32 %34, 0
  br i1 %cmp35, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %35 = load i32* %find_slot, align 4
  %inc36 = add nsw i32 %35, 1
  store i32 %inc36, i32* %find_slot, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %36 = load i32* %target, align 4
  %37 = load i32* %find_slot, align 4
  %idxprom37 = sext i32 %37 to i64
  %arrayidx38 = getelementptr inbounds [62 x i32]* @pieces, i32 0, i64 %idxprom37
  store i32 %36, i32* %arrayidx38, align 4
  %38 = load i32* %find_slot, align 4
  %idxprom39 = sext i32 %38 to i64
  %arrayidx40 = getelementptr inbounds [62 x i32]* @is_promoted, i32 0, i64 %idxprom39
  %39 = load i32* %arrayidx40, align 4
  %40 = load i32* @ply, align 4
  %idxprom41 = sext i32 %40 to i64
  %arrayidx42 = getelementptr inbounds [300 x %struct.move_x]* @path_x, i32 0, i64 %idxprom41
  %was_promoted = getelementptr inbounds %struct.move_x* %arrayidx42, i32 0, i32 1
  store i32 %39, i32* %was_promoted, align 4
  %41 = load i32* %find_slot, align 4
  %idxprom43 = sext i32 %41 to i64
  %arrayidx44 = getelementptr inbounds [62 x i32]* @is_promoted, i32 0, i64 %idxprom43
  store i32 0, i32* %arrayidx44, align 4
  %42 = load i32* %find_slot, align 4
  %43 = load i32* %target, align 4
  %idxprom45 = sext i32 %43 to i64
  %arrayidx46 = getelementptr inbounds [144 x i32]* @squares, i32 0, i64 %idxprom45
  store i32 %42, i32* %arrayidx46, align 4
  %44 = load i32* %promoted, align 4
  %45 = load i32* @white_to_move, align 4
  %tobool = icmp ne i32 %45, 0
  %cond = select i1 %tobool, i32 0, i32 1
  call void @DropremoveHolding(i32 %44, i32 %cond)
  %46 = load i32* %promoted, align 4
  %idxprom47 = sext i32 %46 to i64
  %arrayidx48 = getelementptr inbounds [14 x i32]* @material, i32 0, i64 %idxprom47
  %47 = load i32* %arrayidx48, align 4
  %48 = load i32* @Material, align 4
  %add = add nsw i32 %48, %47
  store i32 %add, i32* @Material, align 4
  %49 = load i32* %promoted, align 4
  %50 = load i32* %target, align 4
  %idxprom49 = sext i32 %50 to i64
  %arrayidx50 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom49
  store i32 %49, i32* %arrayidx50, align 4
  %51 = load i32* %target, align 4
  %idxprom51 = sext i32 %51 to i64
  %52 = load i32* %promoted, align 4
  %idxprom52 = sext i32 %52 to i64
  %arrayidx53 = getelementptr inbounds [14 x [144 x i32]]* @zobrist, i32 0, i64 %idxprom52
  %arrayidx54 = getelementptr inbounds [144 x i32]* %arrayidx53, i32 0, i64 %idxprom51
  %53 = load i32* %arrayidx54, align 4
  %54 = load i32* @hash, align 4
  %xor = xor i32 %54, %53
  store i32 %xor, i32* @hash, align 4
  %55 = load i32* @white_to_move, align 4
  %xor55 = xor i32 %55, 1
  store i32 %xor55, i32* @white_to_move, align 4
  %56 = load i32* @ply, align 4
  %inc56 = add nsw i32 %56, 1
  store i32 %inc56, i32* @ply, align 4
  br label %return

if.else57:                                        ; preds = %if.end
  %57 = load i32* %target, align 4
  %idxprom58 = sext i32 %57 to i64
  %arrayidx59 = getelementptr inbounds [144 x i32]* @squares, i32 0, i64 %idxprom58
  %58 = load i32* %arrayidx59, align 4
  %idxprom60 = sext i32 %58 to i64
  %arrayidx61 = getelementptr inbounds [62 x i32]* @is_promoted, i32 0, i64 %idxprom60
  %59 = load i32* %arrayidx61, align 4
  %60 = load i32* @ply, align 4
  %idxprom62 = sext i32 %60 to i64
  %arrayidx63 = getelementptr inbounds [300 x %struct.move_x]* @path_x, i32 0, i64 %idxprom62
  %was_promoted64 = getelementptr inbounds %struct.move_x* %arrayidx63, i32 0, i32 1
  store i32 %59, i32* %was_promoted64, align 4
  %61 = load i32* %target, align 4
  %idxprom65 = sext i32 %61 to i64
  %arrayidx66 = getelementptr inbounds [144 x i32]* @squares, i32 0, i64 %idxprom65
  %62 = load i32* %arrayidx66, align 4
  %63 = load i32* @ply, align 4
  %idxprom67 = sext i32 %63 to i64
  %arrayidx68 = getelementptr inbounds [300 x %struct.move_x]* @path_x, i32 0, i64 %idxprom67
  %cap_num = getelementptr inbounds %struct.move_x* %arrayidx68, i32 0, i32 0
  store i32 %62, i32* %cap_num, align 4
  %64 = load i32* %target, align 4
  %idxprom69 = sext i32 %64 to i64
  %arrayidx70 = getelementptr inbounds [144 x i32]* @squares, i32 0, i64 %idxprom69
  %65 = load i32* %arrayidx70, align 4
  %idxprom71 = sext i32 %65 to i64
  %arrayidx72 = getelementptr inbounds [62 x i32]* @pieces, i32 0, i64 %idxprom71
  store i32 0, i32* %arrayidx72, align 4
  %66 = load i32* %target, align 4
  %67 = load i32* %from, align 4
  %idxprom73 = sext i32 %67 to i64
  %arrayidx74 = getelementptr inbounds [144 x i32]* @squares, i32 0, i64 %idxprom73
  %68 = load i32* %arrayidx74, align 4
  %idxprom75 = sext i32 %68 to i64
  %arrayidx76 = getelementptr inbounds [62 x i32]* @pieces, i32 0, i64 %idxprom75
  store i32 %66, i32* %arrayidx76, align 4
  %69 = load i32* %from, align 4
  %idxprom77 = sext i32 %69 to i64
  %arrayidx78 = getelementptr inbounds [144 x i32]* @squares, i32 0, i64 %idxprom77
  %70 = load i32* %arrayidx78, align 4
  %71 = load i32* %target, align 4
  %idxprom79 = sext i32 %71 to i64
  %arrayidx80 = getelementptr inbounds [144 x i32]* @squares, i32 0, i64 %idxprom79
  store i32 %70, i32* %arrayidx80, align 4
  %72 = load i32* %from, align 4
  %idxprom81 = sext i32 %72 to i64
  %arrayidx82 = getelementptr inbounds [144 x i32]* @squares, i32 0, i64 %idxprom81
  store i32 0, i32* %arrayidx82, align 4
  %73 = load i32* %ep, align 4
  %tobool83 = icmp ne i32 %73, 0
  br i1 %tobool83, label %if.end119, label %if.then84

if.then84:                                        ; preds = %if.else57
  %74 = load i32* %target, align 4
  %idxprom85 = sext i32 %74 to i64
  %arrayidx86 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom85
  %75 = load i32* %arrayidx86, align 4
  switch i32 %75, label %sw.default [
    i32 13, label %sw.bb
  ]

sw.bb:                                            ; preds = %if.then84
  br label %sw.epilog

sw.default:                                       ; preds = %if.then84
  %76 = load i32* @Variant, align 4
  %cmp87 = icmp eq i32 %76, 1
  br i1 %cmp87, label %if.then90, label %lor.lhs.false88

lor.lhs.false88:                                  ; preds = %sw.default
  %77 = load i32* @Variant, align 4
  %cmp89 = icmp eq i32 %77, 0
  br i1 %cmp89, label %if.then90, label %if.end107

if.then90:                                        ; preds = %lor.lhs.false88, %sw.default
  %78 = load i32* @ply, align 4
  %idxprom91 = sext i32 %78 to i64
  %arrayidx92 = getelementptr inbounds [300 x %struct.move_x]* @path_x, i32 0, i64 %idxprom91
  %was_promoted93 = getelementptr inbounds %struct.move_x* %arrayidx92, i32 0, i32 1
  %79 = load i32* %was_promoted93, align 4
  %tobool94 = icmp ne i32 %79, 0
  br i1 %tobool94, label %if.then95, label %if.else100

if.then95:                                        ; preds = %if.then90
  %80 = load i32* %target, align 4
  %idxprom96 = sext i32 %80 to i64
  %arrayidx97 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom96
  %81 = load i32* %arrayidx97, align 4
  %call = call i32 @SwitchPromoted(i32 %81)
  %82 = load i32* @white_to_move, align 4
  %tobool98 = icmp ne i32 %82, 0
  %cond99 = select i1 %tobool98, i32 0, i32 1
  call void @addHolding(i32 %call, i32 %cond99)
  br label %if.end106

if.else100:                                       ; preds = %if.then90
  %83 = load i32* %target, align 4
  %idxprom101 = sext i32 %83 to i64
  %arrayidx102 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom101
  %84 = load i32* %arrayidx102, align 4
  %call103 = call i32 @SwitchColor(i32 %84)
  %85 = load i32* @white_to_move, align 4
  %tobool104 = icmp ne i32 %85, 0
  %cond105 = select i1 %tobool104, i32 0, i32 1
  call void @addHolding(i32 %call103, i32 %cond105)
  br label %if.end106

if.end106:                                        ; preds = %if.else100, %if.then95
  br label %if.end107

if.end107:                                        ; preds = %if.end106, %lor.lhs.false88
  %86 = load i32* %target, align 4
  %idxprom108 = sext i32 %86 to i64
  %arrayidx109 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom108
  %87 = load i32* %arrayidx109, align 4
  %idxprom110 = sext i32 %87 to i64
  %arrayidx111 = getelementptr inbounds [14 x i32]* @material, i32 0, i64 %idxprom110
  %88 = load i32* %arrayidx111, align 4
  %89 = load i32* @Material, align 4
  %sub = sub nsw i32 %89, %88
  store i32 %sub, i32* @Material, align 4
  %90 = load i32* %target, align 4
  %idxprom112 = sext i32 %90 to i64
  %91 = load i32* %target, align 4
  %idxprom113 = sext i32 %91 to i64
  %arrayidx114 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom113
  %92 = load i32* %arrayidx114, align 4
  %idxprom115 = sext i32 %92 to i64
  %arrayidx116 = getelementptr inbounds [14 x [144 x i32]]* @zobrist, i32 0, i64 %idxprom115
  %arrayidx117 = getelementptr inbounds [144 x i32]* %arrayidx116, i32 0, i64 %idxprom112
  %93 = load i32* %arrayidx117, align 4
  %94 = load i32* @hash, align 4
  %xor118 = xor i32 %94, %93
  store i32 %xor118, i32* @hash, align 4
  %95 = load i32* @piece_count, align 4
  %dec = add nsw i32 %95, -1
  store i32 %dec, i32* @piece_count, align 4
  br label %sw.epilog

sw.epilog:                                        ; preds = %if.end107, %sw.bb
  br label %if.end119

if.end119:                                        ; preds = %sw.epilog, %if.else57
  %96 = load i32* %from, align 4
  %idxprom120 = sext i32 %96 to i64
  %arrayidx121 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom120
  %97 = load i32* %arrayidx121, align 4
  %cmp122 = icmp eq i32 %97, 1
  br i1 %cmp122, label %if.then123, label %if.end226

if.then123:                                       ; preds = %if.end119
  %98 = load i32* %promoted, align 4
  %tobool124 = icmp ne i32 %98, 0
  br i1 %tobool124, label %if.then125, label %if.end154

if.then125:                                       ; preds = %if.then123
  %99 = load i32* %promoted, align 4
  %100 = load i32* %target, align 4
  %idxprom126 = sext i32 %100 to i64
  %arrayidx127 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom126
  store i32 %99, i32* %arrayidx127, align 4
  %101 = load i32* %from, align 4
  %idxprom128 = sext i32 %101 to i64
  %arrayidx129 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom128
  store i32 13, i32* %arrayidx129, align 4
  %102 = load i32* %target, align 4
  %idxprom130 = sext i32 %102 to i64
  %arrayidx131 = getelementptr inbounds [144 x i32]* @moved, i32 0, i64 %idxprom130
  %103 = load i32* %arrayidx131, align 4
  %inc132 = add nsw i32 %103, 1
  store i32 %inc132, i32* %arrayidx131, align 4
  %104 = load i32* %from, align 4
  %idxprom133 = sext i32 %104 to i64
  %arrayidx134 = getelementptr inbounds [144 x i32]* @moved, i32 0, i64 %idxprom133
  %105 = load i32* %arrayidx134, align 4
  %inc135 = add nsw i32 %105, 1
  store i32 %inc135, i32* %arrayidx134, align 4
  %106 = load i32* @white_to_move, align 4
  %xor136 = xor i32 %106, 1
  store i32 %xor136, i32* @white_to_move, align 4
  %107 = load i32* %target, align 4
  %idxprom137 = sext i32 %107 to i64
  %arrayidx138 = getelementptr inbounds [144 x i32]* @squares, i32 0, i64 %idxprom137
  %108 = load i32* %arrayidx138, align 4
  %idxprom139 = sext i32 %108 to i64
  %arrayidx140 = getelementptr inbounds [62 x i32]* @is_promoted, i32 0, i64 %idxprom139
  store i32 1, i32* %arrayidx140, align 4
  %109 = load i32* %from, align 4
  %idxprom141 = sext i32 %109 to i64
  %arrayidx142 = getelementptr inbounds [144 x i32]* getelementptr inbounds ([14 x [144 x i32]]* @zobrist, i32 0, i64 1), i32 0, i64 %idxprom141
  %110 = load i32* %arrayidx142, align 4
  %111 = load i32* @hash, align 4
  %xor143 = xor i32 %111, %110
  store i32 %xor143, i32* @hash, align 4
  %112 = load i32* %target, align 4
  %idxprom144 = sext i32 %112 to i64
  %113 = load i32* %promoted, align 4
  %idxprom145 = sext i32 %113 to i64
  %arrayidx146 = getelementptr inbounds [14 x [144 x i32]]* @zobrist, i32 0, i64 %idxprom145
  %arrayidx147 = getelementptr inbounds [144 x i32]* %arrayidx146, i32 0, i64 %idxprom144
  %114 = load i32* %arrayidx147, align 4
  %115 = load i32* @hash, align 4
  %xor148 = xor i32 %115, %114
  store i32 %xor148, i32* @hash, align 4
  %116 = load i32* getelementptr inbounds ([14 x i32]* @material, i32 0, i64 1), align 4
  %117 = load i32* @Material, align 4
  %sub149 = sub nsw i32 %117, %116
  store i32 %sub149, i32* @Material, align 4
  %118 = load i32* %promoted, align 4
  %idxprom150 = sext i32 %118 to i64
  %arrayidx151 = getelementptr inbounds [14 x i32]* @material, i32 0, i64 %idxprom150
  %119 = load i32* %arrayidx151, align 4
  %120 = load i32* @Material, align 4
  %add152 = add nsw i32 %120, %119
  store i32 %add152, i32* @Material, align 4
  %121 = load i32* @ply, align 4
  %inc153 = add nsw i32 %121, 1
  store i32 %inc153, i32* @ply, align 4
  br label %return

if.end154:                                        ; preds = %if.then123
  %122 = load i32* %ep, align 4
  %tobool155 = icmp ne i32 %122, 0
  br i1 %tobool155, label %if.then156, label %if.end202

if.then156:                                       ; preds = %if.end154
  %123 = load i32* %from, align 4
  %idxprom157 = sext i32 %123 to i64
  %arrayidx158 = getelementptr inbounds [144 x i32]* getelementptr inbounds ([14 x [144 x i32]]* @zobrist, i32 0, i64 1), i32 0, i64 %idxprom157
  %124 = load i32* %arrayidx158, align 4
  %125 = load i32* @hash, align 4
  %xor159 = xor i32 %125, %124
  store i32 %xor159, i32* @hash, align 4
  %126 = load i32* %target, align 4
  %sub160 = sub nsw i32 %126, 12
  %idxprom161 = sext i32 %sub160 to i64
  %arrayidx162 = getelementptr inbounds [144 x i32]* getelementptr inbounds ([14 x [144 x i32]]* @zobrist, i32 0, i64 2), i32 0, i64 %idxprom161
  %127 = load i32* %arrayidx162, align 4
  %128 = load i32* @hash, align 4
  %xor163 = xor i32 %128, %127
  store i32 %xor163, i32* @hash, align 4
  %129 = load i32* %target, align 4
  %idxprom164 = sext i32 %129 to i64
  %arrayidx165 = getelementptr inbounds [144 x i32]* getelementptr inbounds ([14 x [144 x i32]]* @zobrist, i32 0, i64 1), i32 0, i64 %idxprom164
  %130 = load i32* %arrayidx165, align 4
  %131 = load i32* @hash, align 4
  %xor166 = xor i32 %131, %130
  store i32 %xor166, i32* @hash, align 4
  %132 = load i32* getelementptr inbounds ([14 x i32]* @material, i32 0, i64 2), align 4
  %133 = load i32* @Material, align 4
  %sub167 = sub nsw i32 %133, %132
  store i32 %sub167, i32* @Material, align 4
  %134 = load i32* %target, align 4
  %idxprom168 = sext i32 %134 to i64
  %arrayidx169 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom168
  store i32 1, i32* %arrayidx169, align 4
  %135 = load i32* %from, align 4
  %idxprom170 = sext i32 %135 to i64
  %arrayidx171 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom170
  store i32 13, i32* %arrayidx171, align 4
  call void @addHolding(i32 1, i32 0)
  %136 = load i32* @piece_count, align 4
  %dec172 = add nsw i32 %136, -1
  store i32 %dec172, i32* @piece_count, align 4
  %137 = load i32* %target, align 4
  %sub173 = sub nsw i32 %137, 12
  %idxprom174 = sext i32 %sub173 to i64
  %arrayidx175 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom174
  store i32 13, i32* %arrayidx175, align 4
  %138 = load i32* %target, align 4
  %idxprom176 = sext i32 %138 to i64
  %arrayidx177 = getelementptr inbounds [144 x i32]* @moved, i32 0, i64 %idxprom176
  %139 = load i32* %arrayidx177, align 4
  %inc178 = add nsw i32 %139, 1
  store i32 %inc178, i32* %arrayidx177, align 4
  %140 = load i32* %from, align 4
  %idxprom179 = sext i32 %140 to i64
  %arrayidx180 = getelementptr inbounds [144 x i32]* @moved, i32 0, i64 %idxprom179
  %141 = load i32* %arrayidx180, align 4
  %inc181 = add nsw i32 %141, 1
  store i32 %inc181, i32* %arrayidx180, align 4
  %142 = load i32* %target, align 4
  %sub182 = sub nsw i32 %142, 12
  %idxprom183 = sext i32 %sub182 to i64
  %arrayidx184 = getelementptr inbounds [144 x i32]* @moved, i32 0, i64 %idxprom183
  %143 = load i32* %arrayidx184, align 4
  %inc185 = add nsw i32 %143, 1
  store i32 %inc185, i32* %arrayidx184, align 4
  %144 = load i32* @white_to_move, align 4
  %xor186 = xor i32 %144, 1
  store i32 %xor186, i32* @white_to_move, align 4
  %145 = load i32* %target, align 4
  %sub187 = sub nsw i32 %145, 12
  %idxprom188 = sext i32 %sub187 to i64
  %arrayidx189 = getelementptr inbounds [144 x i32]* @squares, i32 0, i64 %idxprom188
  %146 = load i32* %arrayidx189, align 4
  %147 = load i32* @ply, align 4
  %idxprom190 = sext i32 %147 to i64
  %arrayidx191 = getelementptr inbounds [300 x %struct.move_x]* @path_x, i32 0, i64 %idxprom190
  %cap_num192 = getelementptr inbounds %struct.move_x* %arrayidx191, i32 0, i32 0
  store i32 %146, i32* %cap_num192, align 4
  %148 = load i32* %target, align 4
  %sub193 = sub nsw i32 %148, 12
  %idxprom194 = sext i32 %sub193 to i64
  %arrayidx195 = getelementptr inbounds [144 x i32]* @squares, i32 0, i64 %idxprom194
  %149 = load i32* %arrayidx195, align 4
  %idxprom196 = sext i32 %149 to i64
  %arrayidx197 = getelementptr inbounds [62 x i32]* @pieces, i32 0, i64 %idxprom196
  store i32 0, i32* %arrayidx197, align 4
  %150 = load i32* %target, align 4
  %sub198 = sub nsw i32 %150, 12
  %idxprom199 = sext i32 %sub198 to i64
  %arrayidx200 = getelementptr inbounds [144 x i32]* @squares, i32 0, i64 %idxprom199
  store i32 0, i32* %arrayidx200, align 4
  %151 = load i32* @ply, align 4
  %inc201 = add nsw i32 %151, 1
  store i32 %inc201, i32* @ply, align 4
  br label %return

if.end202:                                        ; preds = %if.end154
  %152 = load i32* %target, align 4
  %153 = load i32* %from, align 4
  %add203 = add nsw i32 %153, 24
  %cmp204 = icmp eq i32 %152, %add203
  br i1 %cmp204, label %if.then205, label %if.end207

if.then205:                                       ; preds = %if.end202
  %154 = load i32* %from, align 4
  %add206 = add nsw i32 %154, 12
  store i32 %add206, i32* @ep_square, align 4
  br label %if.end207

if.end207:                                        ; preds = %if.then205, %if.end202
  %155 = load i32* %from, align 4
  %idxprom208 = sext i32 %155 to i64
  %arrayidx209 = getelementptr inbounds [144 x i32]* getelementptr inbounds ([14 x [144 x i32]]* @zobrist, i32 0, i64 1), i32 0, i64 %idxprom208
  %156 = load i32* %arrayidx209, align 4
  %157 = load i32* @hash, align 4
  %xor210 = xor i32 %157, %156
  store i32 %xor210, i32* @hash, align 4
  %158 = load i32* %target, align 4
  %idxprom211 = sext i32 %158 to i64
  %arrayidx212 = getelementptr inbounds [144 x i32]* getelementptr inbounds ([14 x [144 x i32]]* @zobrist, i32 0, i64 1), i32 0, i64 %idxprom211
  %159 = load i32* %arrayidx212, align 4
  %160 = load i32* @hash, align 4
  %xor213 = xor i32 %160, %159
  store i32 %xor213, i32* @hash, align 4
  %161 = load i32* %target, align 4
  %idxprom214 = sext i32 %161 to i64
  %arrayidx215 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom214
  store i32 1, i32* %arrayidx215, align 4
  %162 = load i32* %from, align 4
  %idxprom216 = sext i32 %162 to i64
  %arrayidx217 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom216
  store i32 13, i32* %arrayidx217, align 4
  %163 = load i32* %target, align 4
  %idxprom218 = sext i32 %163 to i64
  %arrayidx219 = getelementptr inbounds [144 x i32]* @moved, i32 0, i64 %idxprom218
  %164 = load i32* %arrayidx219, align 4
  %inc220 = add nsw i32 %164, 1
  store i32 %inc220, i32* %arrayidx219, align 4
  %165 = load i32* %from, align 4
  %idxprom221 = sext i32 %165 to i64
  %arrayidx222 = getelementptr inbounds [144 x i32]* @moved, i32 0, i64 %idxprom221
  %166 = load i32* %arrayidx222, align 4
  %inc223 = add nsw i32 %166, 1
  store i32 %inc223, i32* %arrayidx222, align 4
  %167 = load i32* @white_to_move, align 4
  %xor224 = xor i32 %167, 1
  store i32 %xor224, i32* @white_to_move, align 4
  %168 = load i32* @ply, align 4
  %inc225 = add nsw i32 %168, 1
  store i32 %inc225, i32* @ply, align 4
  br label %return

if.end226:                                        ; preds = %if.end119
  %169 = load i32* %from, align 4
  %idxprom227 = sext i32 %169 to i64
  %arrayidx228 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom227
  %170 = load i32* %arrayidx228, align 4
  %cmp229 = icmp eq i32 %170, 2
  br i1 %cmp229, label %if.then230, label %if.end333

if.then230:                                       ; preds = %if.end226
  %171 = load i32* %promoted, align 4
  %tobool231 = icmp ne i32 %171, 0
  br i1 %tobool231, label %if.then232, label %if.end261

if.then232:                                       ; preds = %if.then230
  %172 = load i32* %promoted, align 4
  %173 = load i32* %target, align 4
  %idxprom233 = sext i32 %173 to i64
  %arrayidx234 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom233
  store i32 %172, i32* %arrayidx234, align 4
  %174 = load i32* %from, align 4
  %idxprom235 = sext i32 %174 to i64
  %arrayidx236 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom235
  store i32 13, i32* %arrayidx236, align 4
  %175 = load i32* %target, align 4
  %idxprom237 = sext i32 %175 to i64
  %arrayidx238 = getelementptr inbounds [144 x i32]* @moved, i32 0, i64 %idxprom237
  %176 = load i32* %arrayidx238, align 4
  %inc239 = add nsw i32 %176, 1
  store i32 %inc239, i32* %arrayidx238, align 4
  %177 = load i32* %from, align 4
  %idxprom240 = sext i32 %177 to i64
  %arrayidx241 = getelementptr inbounds [144 x i32]* @moved, i32 0, i64 %idxprom240
  %178 = load i32* %arrayidx241, align 4
  %inc242 = add nsw i32 %178, 1
  store i32 %inc242, i32* %arrayidx241, align 4
  %179 = load i32* @white_to_move, align 4
  %xor243 = xor i32 %179, 1
  store i32 %xor243, i32* @white_to_move, align 4
  %180 = load i32* %target, align 4
  %idxprom244 = sext i32 %180 to i64
  %arrayidx245 = getelementptr inbounds [144 x i32]* @squares, i32 0, i64 %idxprom244
  %181 = load i32* %arrayidx245, align 4
  %idxprom246 = sext i32 %181 to i64
  %arrayidx247 = getelementptr inbounds [62 x i32]* @is_promoted, i32 0, i64 %idxprom246
  store i32 1, i32* %arrayidx247, align 4
  %182 = load i32* %from, align 4
  %idxprom248 = sext i32 %182 to i64
  %arrayidx249 = getelementptr inbounds [144 x i32]* getelementptr inbounds ([14 x [144 x i32]]* @zobrist, i32 0, i64 2), i32 0, i64 %idxprom248
  %183 = load i32* %arrayidx249, align 4
  %184 = load i32* @hash, align 4
  %xor250 = xor i32 %184, %183
  store i32 %xor250, i32* @hash, align 4
  %185 = load i32* %target, align 4
  %idxprom251 = sext i32 %185 to i64
  %186 = load i32* %promoted, align 4
  %idxprom252 = sext i32 %186 to i64
  %arrayidx253 = getelementptr inbounds [14 x [144 x i32]]* @zobrist, i32 0, i64 %idxprom252
  %arrayidx254 = getelementptr inbounds [144 x i32]* %arrayidx253, i32 0, i64 %idxprom251
  %187 = load i32* %arrayidx254, align 4
  %188 = load i32* @hash, align 4
  %xor255 = xor i32 %188, %187
  store i32 %xor255, i32* @hash, align 4
  %189 = load i32* getelementptr inbounds ([14 x i32]* @material, i32 0, i64 2), align 4
  %190 = load i32* @Material, align 4
  %sub256 = sub nsw i32 %190, %189
  store i32 %sub256, i32* @Material, align 4
  %191 = load i32* %promoted, align 4
  %idxprom257 = sext i32 %191 to i64
  %arrayidx258 = getelementptr inbounds [14 x i32]* @material, i32 0, i64 %idxprom257
  %192 = load i32* %arrayidx258, align 4
  %193 = load i32* @Material, align 4
  %add259 = add nsw i32 %193, %192
  store i32 %add259, i32* @Material, align 4
  %194 = load i32* @ply, align 4
  %inc260 = add nsw i32 %194, 1
  store i32 %inc260, i32* @ply, align 4
  br label %return

if.end261:                                        ; preds = %if.then230
  %195 = load i32* %ep, align 4
  %tobool262 = icmp ne i32 %195, 0
  br i1 %tobool262, label %if.then263, label %if.end309

if.then263:                                       ; preds = %if.end261
  %196 = load i32* %from, align 4
  %idxprom264 = sext i32 %196 to i64
  %arrayidx265 = getelementptr inbounds [144 x i32]* getelementptr inbounds ([14 x [144 x i32]]* @zobrist, i32 0, i64 2), i32 0, i64 %idxprom264
  %197 = load i32* %arrayidx265, align 4
  %198 = load i32* @hash, align 4
  %xor266 = xor i32 %198, %197
  store i32 %xor266, i32* @hash, align 4
  %199 = load i32* %target, align 4
  %add267 = add nsw i32 %199, 12
  %idxprom268 = sext i32 %add267 to i64
  %arrayidx269 = getelementptr inbounds [144 x i32]* getelementptr inbounds ([14 x [144 x i32]]* @zobrist, i32 0, i64 1), i32 0, i64 %idxprom268
  %200 = load i32* %arrayidx269, align 4
  %201 = load i32* @hash, align 4
  %xor270 = xor i32 %201, %200
  store i32 %xor270, i32* @hash, align 4
  %202 = load i32* %target, align 4
  %idxprom271 = sext i32 %202 to i64
  %arrayidx272 = getelementptr inbounds [144 x i32]* getelementptr inbounds ([14 x [144 x i32]]* @zobrist, i32 0, i64 2), i32 0, i64 %idxprom271
  %203 = load i32* %arrayidx272, align 4
  %204 = load i32* @hash, align 4
  %xor273 = xor i32 %204, %203
  store i32 %xor273, i32* @hash, align 4
  %205 = load i32* getelementptr inbounds ([14 x i32]* @material, i32 0, i64 1), align 4
  %206 = load i32* @Material, align 4
  %sub274 = sub nsw i32 %206, %205
  store i32 %sub274, i32* @Material, align 4
  %207 = load i32* %target, align 4
  %idxprom275 = sext i32 %207 to i64
  %arrayidx276 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom275
  store i32 2, i32* %arrayidx276, align 4
  %208 = load i32* %from, align 4
  %idxprom277 = sext i32 %208 to i64
  %arrayidx278 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom277
  store i32 13, i32* %arrayidx278, align 4
  call void @addHolding(i32 2, i32 1)
  %209 = load i32* @piece_count, align 4
  %dec279 = add nsw i32 %209, -1
  store i32 %dec279, i32* @piece_count, align 4
  %210 = load i32* %target, align 4
  %add280 = add nsw i32 %210, 12
  %idxprom281 = sext i32 %add280 to i64
  %arrayidx282 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom281
  store i32 13, i32* %arrayidx282, align 4
  %211 = load i32* %target, align 4
  %idxprom283 = sext i32 %211 to i64
  %arrayidx284 = getelementptr inbounds [144 x i32]* @moved, i32 0, i64 %idxprom283
  %212 = load i32* %arrayidx284, align 4
  %inc285 = add nsw i32 %212, 1
  store i32 %inc285, i32* %arrayidx284, align 4
  %213 = load i32* %from, align 4
  %idxprom286 = sext i32 %213 to i64
  %arrayidx287 = getelementptr inbounds [144 x i32]* @moved, i32 0, i64 %idxprom286
  %214 = load i32* %arrayidx287, align 4
  %inc288 = add nsw i32 %214, 1
  store i32 %inc288, i32* %arrayidx287, align 4
  %215 = load i32* %target, align 4
  %add289 = add nsw i32 %215, 12
  %idxprom290 = sext i32 %add289 to i64
  %arrayidx291 = getelementptr inbounds [144 x i32]* @moved, i32 0, i64 %idxprom290
  %216 = load i32* %arrayidx291, align 4
  %inc292 = add nsw i32 %216, 1
  store i32 %inc292, i32* %arrayidx291, align 4
  %217 = load i32* @white_to_move, align 4
  %xor293 = xor i32 %217, 1
  store i32 %xor293, i32* @white_to_move, align 4
  %218 = load i32* %target, align 4
  %add294 = add nsw i32 %218, 12
  %idxprom295 = sext i32 %add294 to i64
  %arrayidx296 = getelementptr inbounds [144 x i32]* @squares, i32 0, i64 %idxprom295
  %219 = load i32* %arrayidx296, align 4
  %220 = load i32* @ply, align 4
  %idxprom297 = sext i32 %220 to i64
  %arrayidx298 = getelementptr inbounds [300 x %struct.move_x]* @path_x, i32 0, i64 %idxprom297
  %cap_num299 = getelementptr inbounds %struct.move_x* %arrayidx298, i32 0, i32 0
  store i32 %219, i32* %cap_num299, align 4
  %221 = load i32* %target, align 4
  %add300 = add nsw i32 %221, 12
  %idxprom301 = sext i32 %add300 to i64
  %arrayidx302 = getelementptr inbounds [144 x i32]* @squares, i32 0, i64 %idxprom301
  %222 = load i32* %arrayidx302, align 4
  %idxprom303 = sext i32 %222 to i64
  %arrayidx304 = getelementptr inbounds [62 x i32]* @pieces, i32 0, i64 %idxprom303
  store i32 0, i32* %arrayidx304, align 4
  %223 = load i32* %target, align 4
  %add305 = add nsw i32 %223, 12
  %idxprom306 = sext i32 %add305 to i64
  %arrayidx307 = getelementptr inbounds [144 x i32]* @squares, i32 0, i64 %idxprom306
  store i32 0, i32* %arrayidx307, align 4
  %224 = load i32* @ply, align 4
  %inc308 = add nsw i32 %224, 1
  store i32 %inc308, i32* @ply, align 4
  br label %return

if.end309:                                        ; preds = %if.end261
  %225 = load i32* %target, align 4
  %226 = load i32* %from, align 4
  %sub310 = sub nsw i32 %226, 24
  %cmp311 = icmp eq i32 %225, %sub310
  br i1 %cmp311, label %if.then312, label %if.end314

if.then312:                                       ; preds = %if.end309
  %227 = load i32* %from, align 4
  %sub313 = sub nsw i32 %227, 12
  store i32 %sub313, i32* @ep_square, align 4
  br label %if.end314

if.end314:                                        ; preds = %if.then312, %if.end309
  %228 = load i32* %target, align 4
  %idxprom315 = sext i32 %228 to i64
  %arrayidx316 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom315
  store i32 2, i32* %arrayidx316, align 4
  %229 = load i32* %from, align 4
  %idxprom317 = sext i32 %229 to i64
  %arrayidx318 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom317
  store i32 13, i32* %arrayidx318, align 4
  %230 = load i32* %target, align 4
  %idxprom319 = sext i32 %230 to i64
  %arrayidx320 = getelementptr inbounds [144 x i32]* @moved, i32 0, i64 %idxprom319
  %231 = load i32* %arrayidx320, align 4
  %inc321 = add nsw i32 %231, 1
  store i32 %inc321, i32* %arrayidx320, align 4
  %232 = load i32* %from, align 4
  %idxprom322 = sext i32 %232 to i64
  %arrayidx323 = getelementptr inbounds [144 x i32]* @moved, i32 0, i64 %idxprom322
  %233 = load i32* %arrayidx323, align 4
  %inc324 = add nsw i32 %233, 1
  store i32 %inc324, i32* %arrayidx323, align 4
  %234 = load i32* @white_to_move, align 4
  %xor325 = xor i32 %234, 1
  store i32 %xor325, i32* @white_to_move, align 4
  %235 = load i32* %from, align 4
  %idxprom326 = sext i32 %235 to i64
  %arrayidx327 = getelementptr inbounds [144 x i32]* getelementptr inbounds ([14 x [144 x i32]]* @zobrist, i32 0, i64 2), i32 0, i64 %idxprom326
  %236 = load i32* %arrayidx327, align 4
  %237 = load i32* @hash, align 4
  %xor328 = xor i32 %237, %236
  store i32 %xor328, i32* @hash, align 4
  %238 = load i32* %target, align 4
  %idxprom329 = sext i32 %238 to i64
  %arrayidx330 = getelementptr inbounds [144 x i32]* getelementptr inbounds ([14 x [144 x i32]]* @zobrist, i32 0, i64 2), i32 0, i64 %idxprom329
  %239 = load i32* %arrayidx330, align 4
  %240 = load i32* @hash, align 4
  %xor331 = xor i32 %240, %239
  store i32 %xor331, i32* @hash, align 4
  %241 = load i32* @ply, align 4
  %inc332 = add nsw i32 %241, 1
  store i32 %inc332, i32* @ply, align 4
  br label %return

if.end333:                                        ; preds = %if.end226
  %242 = load i32* %from, align 4
  %idxprom334 = sext i32 %242 to i64
  %arrayidx335 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom334
  %243 = load i32* %arrayidx335, align 4
  %cmp336 = icmp ne i32 %243, 5
  br i1 %cmp336, label %land.lhs.true, label %if.end369

land.lhs.true:                                    ; preds = %if.end333
  %244 = load i32* %from, align 4
  %idxprom337 = sext i32 %244 to i64
  %arrayidx338 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom337
  %245 = load i32* %arrayidx338, align 4
  %cmp339 = icmp ne i32 %245, 6
  br i1 %cmp339, label %if.then340, label %if.end369

if.then340:                                       ; preds = %land.lhs.true
  %246 = load i32* %from, align 4
  %idxprom341 = sext i32 %246 to i64
  %247 = load i32* %from, align 4
  %idxprom342 = sext i32 %247 to i64
  %arrayidx343 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom342
  %248 = load i32* %arrayidx343, align 4
  %idxprom344 = sext i32 %248 to i64
  %arrayidx345 = getelementptr inbounds [14 x [144 x i32]]* @zobrist, i32 0, i64 %idxprom344
  %arrayidx346 = getelementptr inbounds [144 x i32]* %arrayidx345, i32 0, i64 %idxprom341
  %249 = load i32* %arrayidx346, align 4
  %250 = load i32* @hash, align 4
  %xor347 = xor i32 %250, %249
  store i32 %xor347, i32* @hash, align 4
  %251 = load i32* %target, align 4
  %idxprom348 = sext i32 %251 to i64
  %252 = load i32* %from, align 4
  %idxprom349 = sext i32 %252 to i64
  %arrayidx350 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom349
  %253 = load i32* %arrayidx350, align 4
  %idxprom351 = sext i32 %253 to i64
  %arrayidx352 = getelementptr inbounds [14 x [144 x i32]]* @zobrist, i32 0, i64 %idxprom351
  %arrayidx353 = getelementptr inbounds [144 x i32]* %arrayidx352, i32 0, i64 %idxprom348
  %254 = load i32* %arrayidx353, align 4
  %255 = load i32* @hash, align 4
  %xor354 = xor i32 %255, %254
  store i32 %xor354, i32* @hash, align 4
  %256 = load i32* %from, align 4
  %idxprom355 = sext i32 %256 to i64
  %arrayidx356 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom355
  %257 = load i32* %arrayidx356, align 4
  %258 = load i32* %target, align 4
  %idxprom357 = sext i32 %258 to i64
  %arrayidx358 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom357
  store i32 %257, i32* %arrayidx358, align 4
  %259 = load i32* %from, align 4
  %idxprom359 = sext i32 %259 to i64
  %arrayidx360 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom359
  store i32 13, i32* %arrayidx360, align 4
  %260 = load i32* %target, align 4
  %idxprom361 = sext i32 %260 to i64
  %arrayidx362 = getelementptr inbounds [144 x i32]* @moved, i32 0, i64 %idxprom361
  %261 = load i32* %arrayidx362, align 4
  %inc363 = add nsw i32 %261, 1
  store i32 %inc363, i32* %arrayidx362, align 4
  %262 = load i32* %from, align 4
  %idxprom364 = sext i32 %262 to i64
  %arrayidx365 = getelementptr inbounds [144 x i32]* @moved, i32 0, i64 %idxprom364
  %263 = load i32* %arrayidx365, align 4
  %inc366 = add nsw i32 %263, 1
  store i32 %inc366, i32* %arrayidx365, align 4
  %264 = load i32* @white_to_move, align 4
  %xor367 = xor i32 %264, 1
  store i32 %xor367, i32* @white_to_move, align 4
  %265 = load i32* @ply, align 4
  %inc368 = add nsw i32 %265, 1
  store i32 %inc368, i32* @ply, align 4
  br label %return

if.end369:                                        ; preds = %land.lhs.true, %if.end333
  %266 = load i32* %from, align 4
  %idxprom370 = sext i32 %266 to i64
  %arrayidx371 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom370
  %267 = load i32* %arrayidx371, align 4
  %cmp372 = icmp eq i32 %267, 5
  br i1 %cmp372, label %if.then373, label %if.else413

if.then373:                                       ; preds = %if.end369
  %268 = load i32* %target, align 4
  store i32 %268, i32* @wking_loc, align 4
  %269 = load i32* %target, align 4
  %idxprom374 = sext i32 %269 to i64
  %arrayidx375 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom374
  store i32 5, i32* %arrayidx375, align 4
  %270 = load i32* %from, align 4
  %idxprom376 = sext i32 %270 to i64
  %arrayidx377 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom376
  store i32 13, i32* %arrayidx377, align 4
  %271 = load i32* %target, align 4
  %idxprom378 = sext i32 %271 to i64
  %arrayidx379 = getelementptr inbounds [144 x i32]* @moved, i32 0, i64 %idxprom378
  %272 = load i32* %arrayidx379, align 4
  %inc380 = add nsw i32 %272, 1
  store i32 %inc380, i32* %arrayidx379, align 4
  %273 = load i32* %from, align 4
  %idxprom381 = sext i32 %273 to i64
  %arrayidx382 = getelementptr inbounds [144 x i32]* @moved, i32 0, i64 %idxprom381
  %274 = load i32* %arrayidx382, align 4
  %inc383 = add nsw i32 %274, 1
  store i32 %inc383, i32* %arrayidx382, align 4
  %275 = load i32* @white_to_move, align 4
  %xor384 = xor i32 %275, 1
  store i32 %xor384, i32* @white_to_move, align 4
  %276 = load i32* %from, align 4
  %idxprom385 = sext i32 %276 to i64
  %arrayidx386 = getelementptr inbounds [144 x i32]* getelementptr inbounds ([14 x [144 x i32]]* @zobrist, i32 0, i64 5), i32 0, i64 %idxprom385
  %277 = load i32* %arrayidx386, align 4
  %278 = load i32* @hash, align 4
  %xor387 = xor i32 %278, %277
  store i32 %xor387, i32* @hash, align 4
  %279 = load i32* %target, align 4
  %idxprom388 = sext i32 %279 to i64
  %arrayidx389 = getelementptr inbounds [144 x i32]* getelementptr inbounds ([14 x [144 x i32]]* @zobrist, i32 0, i64 5), i32 0, i64 %idxprom388
  %280 = load i32* %arrayidx389, align 4
  %281 = load i32* @hash, align 4
  %xor390 = xor i32 %281, %280
  store i32 %xor390, i32* @hash, align 4
  %282 = load i32* %castled, align 4
  %cmp391 = icmp eq i32 %282, 1
  br i1 %cmp391, label %if.then392, label %if.else400

if.then392:                                       ; preds = %if.then373
  store i32 13, i32* getelementptr inbounds ([144 x i32]* @board, i32 0, i64 33), align 4
  store i32 7, i32* getelementptr inbounds ([144 x i32]* @board, i32 0, i64 31), align 4
  %283 = load i32* getelementptr inbounds ([144 x i32]* @moved, i32 0, i64 33), align 4
  %inc393 = add nsw i32 %283, 1
  store i32 %inc393, i32* getelementptr inbounds ([144 x i32]* @moved, i32 0, i64 33), align 4
  %284 = load i32* getelementptr inbounds ([144 x i32]* @moved, i32 0, i64 31), align 4
  %inc394 = add nsw i32 %284, 1
  store i32 %inc394, i32* getelementptr inbounds ([144 x i32]* @moved, i32 0, i64 31), align 4
  store i32 1, i32* @white_castled, align 4
  %285 = load i32* getelementptr inbounds ([144 x i32]* @squares, i32 0, i64 33), align 4
  %idxprom395 = sext i32 %285 to i64
  %arrayidx396 = getelementptr inbounds [62 x i32]* @pieces, i32 0, i64 %idxprom395
  store i32 31, i32* %arrayidx396, align 4
  %286 = load i32* getelementptr inbounds ([144 x i32]* @squares, i32 0, i64 33), align 4
  store i32 %286, i32* getelementptr inbounds ([144 x i32]* @squares, i32 0, i64 31), align 4
  store i32 0, i32* getelementptr inbounds ([144 x i32]* @squares, i32 0, i64 33), align 4
  %287 = load i32* getelementptr inbounds ([14 x [144 x i32]]* @zobrist, i32 0, i64 7, i64 33), align 4
  %288 = load i32* @hash, align 4
  %xor397 = xor i32 %288, %287
  store i32 %xor397, i32* @hash, align 4
  %289 = load i32* getelementptr inbounds ([14 x [144 x i32]]* @zobrist, i32 0, i64 7, i64 31), align 4
  %290 = load i32* @hash, align 4
  %xor398 = xor i32 %290, %289
  store i32 %xor398, i32* @hash, align 4
  %291 = load i32* @ply, align 4
  %inc399 = add nsw i32 %291, 1
  store i32 %inc399, i32* @ply, align 4
  br label %return

if.else400:                                       ; preds = %if.then373
  %292 = load i32* %castled, align 4
  %cmp401 = icmp eq i32 %292, 2
  br i1 %cmp401, label %if.then402, label %if.end410

if.then402:                                       ; preds = %if.else400
  store i32 13, i32* getelementptr inbounds ([144 x i32]* @board, i32 0, i64 26), align 4
  store i32 7, i32* getelementptr inbounds ([144 x i32]* @board, i32 0, i64 29), align 4
  %293 = load i32* getelementptr inbounds ([144 x i32]* @moved, i32 0, i64 26), align 4
  %inc403 = add nsw i32 %293, 1
  store i32 %inc403, i32* getelementptr inbounds ([144 x i32]* @moved, i32 0, i64 26), align 4
  %294 = load i32* getelementptr inbounds ([144 x i32]* @moved, i32 0, i64 29), align 4
  %inc404 = add nsw i32 %294, 1
  store i32 %inc404, i32* getelementptr inbounds ([144 x i32]* @moved, i32 0, i64 29), align 4
  store i32 2, i32* @white_castled, align 4
  %295 = load i32* getelementptr inbounds ([144 x i32]* @squares, i32 0, i64 26), align 4
  %idxprom405 = sext i32 %295 to i64
  %arrayidx406 = getelementptr inbounds [62 x i32]* @pieces, i32 0, i64 %idxprom405
  store i32 29, i32* %arrayidx406, align 4
  %296 = load i32* getelementptr inbounds ([144 x i32]* @squares, i32 0, i64 26), align 4
  store i32 %296, i32* getelementptr inbounds ([144 x i32]* @squares, i32 0, i64 29), align 4
  store i32 0, i32* getelementptr inbounds ([144 x i32]* @squares, i32 0, i64 26), align 4
  %297 = load i32* getelementptr inbounds ([14 x [144 x i32]]* @zobrist, i32 0, i64 7, i64 26), align 4
  %298 = load i32* @hash, align 4
  %xor407 = xor i32 %298, %297
  store i32 %xor407, i32* @hash, align 4
  %299 = load i32* getelementptr inbounds ([14 x [144 x i32]]* @zobrist, i32 0, i64 7, i64 29), align 4
  %300 = load i32* @hash, align 4
  %xor408 = xor i32 %300, %299
  store i32 %xor408, i32* @hash, align 4
  %301 = load i32* @ply, align 4
  %inc409 = add nsw i32 %301, 1
  store i32 %inc409, i32* @ply, align 4
  br label %return

if.end410:                                        ; preds = %if.else400
  br label %if.end411

if.end411:                                        ; preds = %if.end410
  %302 = load i32* @ply, align 4
  %inc412 = add nsw i32 %302, 1
  store i32 %inc412, i32* @ply, align 4
  br label %return

if.else413:                                       ; preds = %if.end369
  %303 = load i32* %target, align 4
  store i32 %303, i32* @bking_loc, align 4
  %304 = load i32* %target, align 4
  %idxprom414 = sext i32 %304 to i64
  %arrayidx415 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom414
  store i32 6, i32* %arrayidx415, align 4
  %305 = load i32* %from, align 4
  %idxprom416 = sext i32 %305 to i64
  %arrayidx417 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom416
  store i32 13, i32* %arrayidx417, align 4
  %306 = load i32* %target, align 4
  %idxprom418 = sext i32 %306 to i64
  %arrayidx419 = getelementptr inbounds [144 x i32]* @moved, i32 0, i64 %idxprom418
  %307 = load i32* %arrayidx419, align 4
  %inc420 = add nsw i32 %307, 1
  store i32 %inc420, i32* %arrayidx419, align 4
  %308 = load i32* %from, align 4
  %idxprom421 = sext i32 %308 to i64
  %arrayidx422 = getelementptr inbounds [144 x i32]* @moved, i32 0, i64 %idxprom421
  %309 = load i32* %arrayidx422, align 4
  %inc423 = add nsw i32 %309, 1
  store i32 %inc423, i32* %arrayidx422, align 4
  %310 = load i32* @white_to_move, align 4
  %xor424 = xor i32 %310, 1
  store i32 %xor424, i32* @white_to_move, align 4
  %311 = load i32* %from, align 4
  %idxprom425 = sext i32 %311 to i64
  %arrayidx426 = getelementptr inbounds [144 x i32]* getelementptr inbounds ([14 x [144 x i32]]* @zobrist, i32 0, i64 6), i32 0, i64 %idxprom425
  %312 = load i32* %arrayidx426, align 4
  %313 = load i32* @hash, align 4
  %xor427 = xor i32 %313, %312
  store i32 %xor427, i32* @hash, align 4
  %314 = load i32* %target, align 4
  %idxprom428 = sext i32 %314 to i64
  %arrayidx429 = getelementptr inbounds [144 x i32]* getelementptr inbounds ([14 x [144 x i32]]* @zobrist, i32 0, i64 6), i32 0, i64 %idxprom428
  %315 = load i32* %arrayidx429, align 4
  %316 = load i32* @hash, align 4
  %xor430 = xor i32 %316, %315
  store i32 %xor430, i32* @hash, align 4
  %317 = load i32* %castled, align 4
  %cmp431 = icmp eq i32 %317, 3
  br i1 %cmp431, label %if.then432, label %if.else440

if.then432:                                       ; preds = %if.else413
  store i32 13, i32* getelementptr inbounds ([144 x i32]* @board, i32 0, i64 117), align 4
  store i32 8, i32* getelementptr inbounds ([144 x i32]* @board, i32 0, i64 115), align 4
  %318 = load i32* getelementptr inbounds ([144 x i32]* @moved, i32 0, i64 117), align 4
  %inc433 = add nsw i32 %318, 1
  store i32 %inc433, i32* getelementptr inbounds ([144 x i32]* @moved, i32 0, i64 117), align 4
  %319 = load i32* getelementptr inbounds ([144 x i32]* @moved, i32 0, i64 115), align 4
  %inc434 = add nsw i32 %319, 1
  store i32 %inc434, i32* getelementptr inbounds ([144 x i32]* @moved, i32 0, i64 115), align 4
  store i32 3, i32* @black_castled, align 4
  %320 = load i32* getelementptr inbounds ([144 x i32]* @squares, i32 0, i64 117), align 4
  %idxprom435 = sext i32 %320 to i64
  %arrayidx436 = getelementptr inbounds [62 x i32]* @pieces, i32 0, i64 %idxprom435
  store i32 115, i32* %arrayidx436, align 4
  %321 = load i32* getelementptr inbounds ([144 x i32]* @squares, i32 0, i64 117), align 4
  store i32 %321, i32* getelementptr inbounds ([144 x i32]* @squares, i32 0, i64 115), align 4
  store i32 0, i32* getelementptr inbounds ([144 x i32]* @squares, i32 0, i64 117), align 4
  %322 = load i32* getelementptr inbounds ([14 x [144 x i32]]* @zobrist, i32 0, i64 8, i64 117), align 4
  %323 = load i32* @hash, align 4
  %xor437 = xor i32 %323, %322
  store i32 %xor437, i32* @hash, align 4
  %324 = load i32* getelementptr inbounds ([14 x [144 x i32]]* @zobrist, i32 0, i64 8, i64 115), align 4
  %325 = load i32* @hash, align 4
  %xor438 = xor i32 %325, %324
  store i32 %xor438, i32* @hash, align 4
  %326 = load i32* @ply, align 4
  %inc439 = add nsw i32 %326, 1
  store i32 %inc439, i32* @ply, align 4
  br label %return

if.else440:                                       ; preds = %if.else413
  %327 = load i32* %castled, align 4
  %cmp441 = icmp eq i32 %327, 4
  br i1 %cmp441, label %if.then442, label %if.end450

if.then442:                                       ; preds = %if.else440
  store i32 13, i32* getelementptr inbounds ([144 x i32]* @board, i32 0, i64 110), align 4
  store i32 8, i32* getelementptr inbounds ([144 x i32]* @board, i32 0, i64 113), align 4
  %328 = load i32* getelementptr inbounds ([144 x i32]* @moved, i32 0, i64 110), align 4
  %inc443 = add nsw i32 %328, 1
  store i32 %inc443, i32* getelementptr inbounds ([144 x i32]* @moved, i32 0, i64 110), align 4
  %329 = load i32* getelementptr inbounds ([144 x i32]* @moved, i32 0, i64 113), align 4
  %inc444 = add nsw i32 %329, 1
  store i32 %inc444, i32* getelementptr inbounds ([144 x i32]* @moved, i32 0, i64 113), align 4
  store i32 4, i32* @black_castled, align 4
  %330 = load i32* getelementptr inbounds ([144 x i32]* @squares, i32 0, i64 110), align 4
  %idxprom445 = sext i32 %330 to i64
  %arrayidx446 = getelementptr inbounds [62 x i32]* @pieces, i32 0, i64 %idxprom445
  store i32 113, i32* %arrayidx446, align 4
  %331 = load i32* getelementptr inbounds ([144 x i32]* @squares, i32 0, i64 110), align 4
  store i32 %331, i32* getelementptr inbounds ([144 x i32]* @squares, i32 0, i64 113), align 4
  store i32 0, i32* getelementptr inbounds ([144 x i32]* @squares, i32 0, i64 110), align 4
  %332 = load i32* getelementptr inbounds ([14 x [144 x i32]]* @zobrist, i32 0, i64 8, i64 110), align 4
  %333 = load i32* @hash, align 4
  %xor447 = xor i32 %333, %332
  store i32 %xor447, i32* @hash, align 4
  %334 = load i32* getelementptr inbounds ([14 x [144 x i32]]* @zobrist, i32 0, i64 8, i64 113), align 4
  %335 = load i32* @hash, align 4
  %xor448 = xor i32 %335, %334
  store i32 %xor448, i32* @hash, align 4
  %336 = load i32* @ply, align 4
  %inc449 = add nsw i32 %336, 1
  store i32 %inc449, i32* @ply, align 4
  br label %return

if.end450:                                        ; preds = %if.else440
  br label %if.end451

if.end451:                                        ; preds = %if.end450
  br label %if.end452

if.end452:                                        ; preds = %if.end451
  %337 = load i32* @ply, align 4
  %inc453 = add nsw i32 %337, 1
  store i32 %inc453, i32* @ply, align 4
  br label %return

return:                                           ; preds = %if.end452, %if.then442, %if.then432, %if.end411, %if.then402, %if.then392, %if.then340, %if.end314, %if.then263, %if.then232, %if.end207, %if.then156, %if.then125, %for.end
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @add_move(i32 %Ptarget, i32 %Ppromoted) #0 {
entry:
  %base.alloca39 = alloca i8*
  %bound.alloca40 = alloca i8*
  %base.alloca34 = alloca i8*
  %bound.alloca35 = alloca i8*
  %base.alloca29 = alloca i8*
  %bound.alloca30 = alloca i8*
  %base.alloca24 = alloca i8*
  %bound.alloca25 = alloca i8*
  %base.alloca19 = alloca i8*
  %bound.alloca20 = alloca i8*
  %base.alloca = alloca i8*
  %bound.alloca = alloca i8*
  %Ptarget.addr = alloca i32, align 4
  %Ptarget.addr11 = bitcast i32* %Ptarget.addr to i32*
  %bitcast = bitcast i32* %Ptarget.addr to i8*
  %mtmp = getelementptr i32* %Ptarget.addr11, i32 1
  %bitcast12 = bitcast i32* %mtmp to i8*
  %Ppromoted.addr = alloca i32, align 4
  %Ppromoted.addr13 = bitcast i32* %Ppromoted.addr to i32*
  %bitcast14 = bitcast i32* %Ppromoted.addr to i8*
  %mtmp15 = getelementptr i32* %Ppromoted.addr13, i32 1
  %bitcast16 = bitcast i32* %mtmp15 to i8*
  store i32 %Ptarget, i32* %Ptarget.addr, align 4
  store i32 %Ppromoted, i32* %Ppromoted.addr, align 4
  %0 = load i32* @gfrom, align 4
  %1 = load i32* @numb_moves, align 4
  %idxprom = sext i32 %1 to i64
  %2 = load %struct.move_s** @genfor, align 8
  %bitcast17 = bitcast %struct.move_s** @genfor to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast17, i8** %base.alloca, i8** %bound.alloca)
  %base.load = load i8** %base.alloca
  %bound.load = load i8** %bound.alloca
  %arrayidx = getelementptr inbounds %struct.move_s* %2, i64 %idxprom
  %from = getelementptr inbounds %struct.move_s* %arrayidx, i32 0, i32 0
  store i32 %0, i32* %from, align 4
  %3 = load i32* %Ptarget.addr, align 4
  %4 = load i32* @numb_moves, align 4
  %idxprom1 = sext i32 %4 to i64
  %5 = load %struct.move_s** @genfor, align 8
  %bitcast18 = bitcast %struct.move_s** @genfor to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast18, i8** %base.alloca19, i8** %bound.alloca20)
  %base.load21 = load i8** %base.alloca19
  %bound.load22 = load i8** %bound.alloca20
  %arrayidx2 = getelementptr inbounds %struct.move_s* %5, i64 %idxprom1
  %target = getelementptr inbounds %struct.move_s* %arrayidx2, i32 0, i32 1
  store i32 %3, i32* %target, align 4
  %6 = load i32* @numb_moves, align 4
  %idxprom3 = sext i32 %6 to i64
  %7 = load %struct.move_s** @genfor, align 8
  %bitcast23 = bitcast %struct.move_s** @genfor to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast23, i8** %base.alloca24, i8** %bound.alloca25)
  %base.load26 = load i8** %base.alloca24
  %bound.load27 = load i8** %bound.alloca25
  %arrayidx4 = getelementptr inbounds %struct.move_s* %7, i64 %idxprom3
  %captured = getelementptr inbounds %struct.move_s* %arrayidx4, i32 0, i32 2
  store i32 13, i32* %captured, align 4
  %8 = load i32* @numb_moves, align 4
  %idxprom5 = sext i32 %8 to i64
  %9 = load %struct.move_s** @genfor, align 8
  %bitcast28 = bitcast %struct.move_s** @genfor to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast28, i8** %base.alloca29, i8** %bound.alloca30)
  %base.load31 = load i8** %base.alloca29
  %bound.load32 = load i8** %bound.alloca30
  %arrayidx6 = getelementptr inbounds %struct.move_s* %9, i64 %idxprom5
  %castled = getelementptr inbounds %struct.move_s* %arrayidx6, i32 0, i32 4
  store i32 0, i32* %castled, align 4
  %10 = load i32* %Ppromoted.addr, align 4
  %11 = load i32* @numb_moves, align 4
  %idxprom7 = sext i32 %11 to i64
  %12 = load %struct.move_s** @genfor, align 8
  %bitcast33 = bitcast %struct.move_s** @genfor to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast33, i8** %base.alloca34, i8** %bound.alloca35)
  %base.load36 = load i8** %base.alloca34
  %bound.load37 = load i8** %bound.alloca35
  %arrayidx8 = getelementptr inbounds %struct.move_s* %12, i64 %idxprom7
  %promoted = getelementptr inbounds %struct.move_s* %arrayidx8, i32 0, i32 3
  store i32 %10, i32* %promoted, align 4
  %13 = load i32* @numb_moves, align 4
  %idxprom9 = sext i32 %13 to i64
  %14 = load %struct.move_s** @genfor, align 8
  %bitcast38 = bitcast %struct.move_s** @genfor to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast38, i8** %base.alloca39, i8** %bound.alloca40)
  %base.load41 = load i8** %base.alloca39
  %bound.load42 = load i8** %bound.alloca40
  %arrayidx10 = getelementptr inbounds %struct.move_s* %14, i64 %idxprom9
  %ep = getelementptr inbounds %struct.move_s* %arrayidx10, i32 0, i32 5
  store i32 0, i32* %ep, align 4
  %15 = load i32* @numb_moves, align 4
  %inc = add nsw i32 %15, 1
  store i32 %inc, i32* @numb_moves, align 4
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @add_capture(i32 %Ptarget, i32 %Pcaptured, i32 %Ppromoted, i32 %Pep) #0 {
entry:
  %base.alloca52 = alloca i8*
  %bound.alloca53 = alloca i8*
  %base.alloca47 = alloca i8*
  %bound.alloca48 = alloca i8*
  %base.alloca42 = alloca i8*
  %bound.alloca43 = alloca i8*
  %base.alloca37 = alloca i8*
  %bound.alloca38 = alloca i8*
  %base.alloca32 = alloca i8*
  %bound.alloca33 = alloca i8*
  %base.alloca = alloca i8*
  %bound.alloca = alloca i8*
  %Ptarget.addr = alloca i32, align 4
  %Ptarget.addr16 = bitcast i32* %Ptarget.addr to i32*
  %bitcast = bitcast i32* %Ptarget.addr to i8*
  %mtmp = getelementptr i32* %Ptarget.addr16, i32 1
  %bitcast17 = bitcast i32* %mtmp to i8*
  %Pcaptured.addr = alloca i32, align 4
  %Pcaptured.addr18 = bitcast i32* %Pcaptured.addr to i32*
  %bitcast19 = bitcast i32* %Pcaptured.addr to i8*
  %mtmp20 = getelementptr i32* %Pcaptured.addr18, i32 1
  %bitcast21 = bitcast i32* %mtmp20 to i8*
  %Ppromoted.addr = alloca i32, align 4
  %Ppromoted.addr22 = bitcast i32* %Ppromoted.addr to i32*
  %bitcast23 = bitcast i32* %Ppromoted.addr to i8*
  %mtmp24 = getelementptr i32* %Ppromoted.addr22, i32 1
  %bitcast25 = bitcast i32* %mtmp24 to i8*
  %Pep.addr = alloca i32, align 4
  %Pep.addr26 = bitcast i32* %Pep.addr to i32*
  %bitcast27 = bitcast i32* %Pep.addr to i8*
  %mtmp28 = getelementptr i32* %Pep.addr26, i32 1
  %bitcast29 = bitcast i32* %mtmp28 to i8*
  store i32 %Ptarget, i32* %Ptarget.addr, align 4
  store i32 %Pcaptured, i32* %Pcaptured.addr, align 4
  store i32 %Ppromoted, i32* %Ppromoted.addr, align 4
  store i32 %Pep, i32* %Pep.addr, align 4
  %0 = load i32* @Variant, align 4
  %cmp = icmp ne i32 %0, 3
  br i1 %cmp, label %land.lhs.true, label %if.else

land.lhs.true:                                    ; preds = %entry
  %1 = load i32* %Pcaptured.addr, align 4
  %cmp1 = icmp eq i32 %1, 5
  br i1 %cmp1, label %if.then, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %land.lhs.true
  %2 = load i32* %Pcaptured.addr, align 4
  %cmp2 = icmp eq i32 %2, 6
  br i1 %cmp2, label %if.then, label %if.else

if.then:                                          ; preds = %lor.lhs.false, %land.lhs.true
  store i32 1, i32* @kingcap, align 4
  br label %return

if.else:                                          ; preds = %lor.lhs.false, %entry
  %3 = load i32* %Pcaptured.addr, align 4
  %cmp3 = icmp ne i32 %3, 13
  br i1 %cmp3, label %if.then4, label %if.end

if.then4:                                         ; preds = %if.else
  store i32 1, i32* @fcaptures, align 4
  br label %if.end

if.end:                                           ; preds = %if.then4, %if.else
  br label %if.end5

if.end5:                                          ; preds = %if.end
  %4 = load i32* @gfrom, align 4
  %5 = load i32* @numb_moves, align 4
  %idxprom = sext i32 %5 to i64
  %6 = load %struct.move_s** @genfor, align 8
  %bitcast30 = bitcast %struct.move_s** @genfor to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast30, i8** %base.alloca, i8** %bound.alloca)
  %base.load = load i8** %base.alloca
  %bound.load = load i8** %bound.alloca
  %arrayidx = getelementptr inbounds %struct.move_s* %6, i64 %idxprom
  %from = getelementptr inbounds %struct.move_s* %arrayidx, i32 0, i32 0
  store i32 %4, i32* %from, align 4
  %7 = load i32* %Ptarget.addr, align 4
  %8 = load i32* @numb_moves, align 4
  %idxprom6 = sext i32 %8 to i64
  %9 = load %struct.move_s** @genfor, align 8
  %bitcast31 = bitcast %struct.move_s** @genfor to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast31, i8** %base.alloca32, i8** %bound.alloca33)
  %base.load34 = load i8** %base.alloca32
  %bound.load35 = load i8** %bound.alloca33
  %arrayidx7 = getelementptr inbounds %struct.move_s* %9, i64 %idxprom6
  %target = getelementptr inbounds %struct.move_s* %arrayidx7, i32 0, i32 1
  store i32 %7, i32* %target, align 4
  %10 = load i32* %Pcaptured.addr, align 4
  %11 = load i32* @numb_moves, align 4
  %idxprom8 = sext i32 %11 to i64
  %12 = load %struct.move_s** @genfor, align 8
  %bitcast36 = bitcast %struct.move_s** @genfor to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast36, i8** %base.alloca37, i8** %bound.alloca38)
  %base.load39 = load i8** %base.alloca37
  %bound.load40 = load i8** %bound.alloca38
  %arrayidx9 = getelementptr inbounds %struct.move_s* %12, i64 %idxprom8
  %captured = getelementptr inbounds %struct.move_s* %arrayidx9, i32 0, i32 2
  store i32 %10, i32* %captured, align 4
  %13 = load i32* @numb_moves, align 4
  %idxprom10 = sext i32 %13 to i64
  %14 = load %struct.move_s** @genfor, align 8
  %bitcast41 = bitcast %struct.move_s** @genfor to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast41, i8** %base.alloca42, i8** %bound.alloca43)
  %base.load44 = load i8** %base.alloca42
  %bound.load45 = load i8** %bound.alloca43
  %arrayidx11 = getelementptr inbounds %struct.move_s* %14, i64 %idxprom10
  %castled = getelementptr inbounds %struct.move_s* %arrayidx11, i32 0, i32 4
  store i32 0, i32* %castled, align 4
  %15 = load i32* %Ppromoted.addr, align 4
  %16 = load i32* @numb_moves, align 4
  %idxprom12 = sext i32 %16 to i64
  %17 = load %struct.move_s** @genfor, align 8
  %bitcast46 = bitcast %struct.move_s** @genfor to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast46, i8** %base.alloca47, i8** %bound.alloca48)
  %base.load49 = load i8** %base.alloca47
  %bound.load50 = load i8** %bound.alloca48
  %arrayidx13 = getelementptr inbounds %struct.move_s* %17, i64 %idxprom12
  %promoted = getelementptr inbounds %struct.move_s* %arrayidx13, i32 0, i32 3
  store i32 %15, i32* %promoted, align 4
  %18 = load i32* %Pep.addr, align 4
  %19 = load i32* @numb_moves, align 4
  %idxprom14 = sext i32 %19 to i64
  %20 = load %struct.move_s** @genfor, align 8
  %bitcast51 = bitcast %struct.move_s** @genfor to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast51, i8** %base.alloca52, i8** %bound.alloca53)
  %base.load54 = load i8** %base.alloca52
  %bound.load55 = load i8** %bound.alloca53
  %arrayidx15 = getelementptr inbounds %struct.move_s* %20, i64 %idxprom14
  %ep = getelementptr inbounds %struct.move_s* %arrayidx15, i32 0, i32 5
  store i32 %18, i32* %ep, align 4
  %21 = load i32* @numb_moves, align 4
  %inc = add nsw i32 %21, 1
  store i32 %inc, i32* @numb_moves, align 4
  br label %return

return:                                           ; preds = %if.end5, %if.then
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @unmake(%struct.move_s* %moves, i32 %i) #0 {
entry:
  %base.alloca452 = alloca i8*
  %bound.alloca453 = alloca i8*
  %base.alloca447 = alloca i8*
  %bound.alloca448 = alloca i8*
  %base.alloca442 = alloca i8*
  %bound.alloca443 = alloca i8*
  %base.alloca437 = alloca i8*
  %bound.alloca438 = alloca i8*
  %base.alloca432 = alloca i8*
  %bound.alloca433 = alloca i8*
  %base.alloca = alloca i8*
  %bound.alloca = alloca i8*
  %0 = call i8* @__softboundcets_load_base_shadow_stack(i32 1)
  %1 = call i8* @__softboundcets_load_bound_shadow_stack(i32 1)
  %moves.addr = alloca %struct.move_s*, align 8
  %moves.addr400 = bitcast %struct.move_s** %moves.addr to %struct.move_s**
  %bitcast = bitcast %struct.move_s** %moves.addr to i8*
  %mtmp = getelementptr %struct.move_s** %moves.addr400, i32 1
  %bitcast401 = bitcast %struct.move_s** %mtmp to i8*
  %i.addr = alloca i32, align 4
  %i.addr402 = bitcast i32* %i.addr to i32*
  %bitcast403 = bitcast i32* %i.addr to i8*
  %mtmp404 = getelementptr i32* %i.addr402, i32 1
  %bitcast405 = bitcast i32* %mtmp404 to i8*
  %ep = alloca i32, align 4
  %ep406 = bitcast i32* %ep to i32*
  %bitcast407 = bitcast i32* %ep to i8*
  %mtmp408 = getelementptr i32* %ep406, i32 1
  %bitcast409 = bitcast i32* %mtmp408 to i8*
  %from = alloca i32, align 4
  %from410 = bitcast i32* %from to i32*
  %bitcast411 = bitcast i32* %from to i8*
  %mtmp412 = getelementptr i32* %from410, i32 1
  %bitcast413 = bitcast i32* %mtmp412 to i8*
  %target = alloca i32, align 4
  %target414 = bitcast i32* %target to i32*
  %bitcast415 = bitcast i32* %target to i8*
  %mtmp416 = getelementptr i32* %target414, i32 1
  %bitcast417 = bitcast i32* %mtmp416 to i8*
  %captured = alloca i32, align 4
  %captured418 = bitcast i32* %captured to i32*
  %bitcast419 = bitcast i32* %captured to i8*
  %mtmp420 = getelementptr i32* %captured418, i32 1
  %bitcast421 = bitcast i32* %mtmp420 to i8*
  %promoted = alloca i32, align 4
  %promoted422 = bitcast i32* %promoted to i32*
  %bitcast423 = bitcast i32* %promoted to i8*
  %mtmp424 = getelementptr i32* %promoted422, i32 1
  %bitcast425 = bitcast i32* %mtmp424 to i8*
  %castled = alloca i32, align 4
  %castled426 = bitcast i32* %castled to i32*
  %bitcast427 = bitcast i32* %castled to i8*
  %mtmp428 = getelementptr i32* %castled426, i32 1
  %bitcast429 = bitcast i32* %mtmp428 to i8*
  store %struct.move_s* %moves, %struct.move_s** %moves.addr, align 8
  %bitcast456 = bitcast %struct.move_s** %moves.addr to i8*
  call void @__softboundcets_metadata_store(i8* %bitcast456, i8* %0, i8* %1)
  store i32 %i, i32* %i.addr, align 4
  %2 = load i32* %i.addr, align 4
  %idxprom = sext i32 %2 to i64
  %3 = load %struct.move_s** %moves.addr, align 8
  %bitcast430 = bitcast %struct.move_s** %moves.addr to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast430, i8** %base.alloca, i8** %bound.alloca)
  %base.load = load i8** %base.alloca
  %bound.load = load i8** %bound.alloca
  %arrayidx = getelementptr inbounds %struct.move_s* %3, i64 %idxprom
  %ep1 = getelementptr inbounds %struct.move_s* %arrayidx, i32 0, i32 5
  %4 = load i32* %ep1, align 4
  store i32 %4, i32* %ep, align 4
  %5 = load i32* %i.addr, align 4
  %idxprom2 = sext i32 %5 to i64
  %6 = load %struct.move_s** %moves.addr, align 8
  %bitcast431 = bitcast %struct.move_s** %moves.addr to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast431, i8** %base.alloca432, i8** %bound.alloca433)
  %base.load434 = load i8** %base.alloca432
  %bound.load435 = load i8** %bound.alloca433
  %arrayidx3 = getelementptr inbounds %struct.move_s* %6, i64 %idxprom2
  %from4 = getelementptr inbounds %struct.move_s* %arrayidx3, i32 0, i32 0
  %7 = load i32* %from4, align 4
  store i32 %7, i32* %from, align 4
  %8 = load i32* %i.addr, align 4
  %idxprom5 = sext i32 %8 to i64
  %9 = load %struct.move_s** %moves.addr, align 8
  %bitcast436 = bitcast %struct.move_s** %moves.addr to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast436, i8** %base.alloca437, i8** %bound.alloca438)
  %base.load439 = load i8** %base.alloca437
  %bound.load440 = load i8** %bound.alloca438
  %arrayidx6 = getelementptr inbounds %struct.move_s* %9, i64 %idxprom5
  %target7 = getelementptr inbounds %struct.move_s* %arrayidx6, i32 0, i32 1
  %10 = load i32* %target7, align 4
  store i32 %10, i32* %target, align 4
  %11 = load i32* %i.addr, align 4
  %idxprom8 = sext i32 %11 to i64
  %12 = load %struct.move_s** %moves.addr, align 8
  %bitcast441 = bitcast %struct.move_s** %moves.addr to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast441, i8** %base.alloca442, i8** %bound.alloca443)
  %base.load444 = load i8** %base.alloca442
  %bound.load445 = load i8** %bound.alloca443
  %arrayidx9 = getelementptr inbounds %struct.move_s* %12, i64 %idxprom8
  %captured10 = getelementptr inbounds %struct.move_s* %arrayidx9, i32 0, i32 2
  %13 = load i32* %captured10, align 4
  store i32 %13, i32* %captured, align 4
  %14 = load i32* %i.addr, align 4
  %idxprom11 = sext i32 %14 to i64
  %15 = load %struct.move_s** %moves.addr, align 8
  %bitcast446 = bitcast %struct.move_s** %moves.addr to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast446, i8** %base.alloca447, i8** %bound.alloca448)
  %base.load449 = load i8** %base.alloca447
  %bound.load450 = load i8** %bound.alloca448
  %arrayidx12 = getelementptr inbounds %struct.move_s* %15, i64 %idxprom11
  %promoted13 = getelementptr inbounds %struct.move_s* %arrayidx12, i32 0, i32 3
  %16 = load i32* %promoted13, align 4
  store i32 %16, i32* %promoted, align 4
  %17 = load i32* %i.addr, align 4
  %idxprom14 = sext i32 %17 to i64
  %18 = load %struct.move_s** %moves.addr, align 8
  %bitcast451 = bitcast %struct.move_s** %moves.addr to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast451, i8** %base.alloca452, i8** %bound.alloca453)
  %base.load454 = load i8** %base.alloca452
  %bound.load455 = load i8** %bound.alloca453
  %arrayidx15 = getelementptr inbounds %struct.move_s* %18, i64 %idxprom14
  %castled16 = getelementptr inbounds %struct.move_s* %arrayidx15, i32 0, i32 4
  %19 = load i32* %castled16, align 4
  store i32 %19, i32* %castled, align 4
  %20 = load i32* @ply, align 4
  %dec = add nsw i32 %20, -1
  store i32 %dec, i32* @ply, align 4
  %21 = load i32* @ply, align 4
  %idxprom17 = sext i32 %21 to i64
  %arrayidx18 = getelementptr inbounds [300 x %struct.move_x]* @path_x, i32 0, i64 %idxprom17
  %epsq = getelementptr inbounds %struct.move_x* %arrayidx18, i32 0, i32 2
  %22 = load i32* %epsq, align 4
  store i32 %22, i32* @ep_square, align 4
  %23 = load i32* @ply, align 4
  %idxprom19 = sext i32 %23 to i64
  %arrayidx20 = getelementptr inbounds [300 x %struct.move_x]* @path_x, i32 0, i64 %idxprom19
  %fifty = getelementptr inbounds %struct.move_x* %arrayidx20, i32 0, i32 3
  %24 = load i32* %fifty, align 4
  store i32 %24, i32* @fifty, align 4
  %25 = load i32* %from, align 4
  %cmp = icmp eq i32 %25, 0
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  %26 = load i32* %target, align 4
  %idxprom21 = sext i32 %26 to i64
  %arrayidx22 = getelementptr inbounds [144 x i32]* @squares, i32 0, i64 %idxprom21
  %27 = load i32* %arrayidx22, align 4
  %idxprom23 = sext i32 %27 to i64
  %arrayidx24 = getelementptr inbounds [62 x i32]* @pieces, i32 0, i64 %idxprom23
  store i32 0, i32* %arrayidx24, align 4
  %28 = load i32* @ply, align 4
  %idxprom25 = sext i32 %28 to i64
  %arrayidx26 = getelementptr inbounds [300 x %struct.move_x]* @path_x, i32 0, i64 %idxprom25
  %was_promoted = getelementptr inbounds %struct.move_x* %arrayidx26, i32 0, i32 1
  %29 = load i32* %was_promoted, align 4
  %30 = load i32* %target, align 4
  %idxprom27 = sext i32 %30 to i64
  %arrayidx28 = getelementptr inbounds [144 x i32]* @squares, i32 0, i64 %idxprom27
  %31 = load i32* %arrayidx28, align 4
  %idxprom29 = sext i32 %31 to i64
  %arrayidx30 = getelementptr inbounds [62 x i32]* @is_promoted, i32 0, i64 %idxprom29
  store i32 %29, i32* %arrayidx30, align 4
  %32 = load i32* %target, align 4
  %idxprom31 = sext i32 %32 to i64
  %arrayidx32 = getelementptr inbounds [144 x i32]* @squares, i32 0, i64 %idxprom31
  store i32 0, i32* %arrayidx32, align 4
  %33 = load i32* @piece_count, align 4
  %dec33 = add nsw i32 %33, -1
  store i32 %dec33, i32* @piece_count, align 4
  %34 = load i32* %promoted, align 4
  %35 = load i32* @white_to_move, align 4
  %tobool = icmp ne i32 %35, 0
  %cond = select i1 %tobool, i32 1, i32 0
  call void @DropaddHolding(i32 %34, i32 %cond)
  %36 = load i32* %promoted, align 4
  %idxprom34 = sext i32 %36 to i64
  %arrayidx35 = getelementptr inbounds [14 x i32]* @material, i32 0, i64 %idxprom34
  %37 = load i32* %arrayidx35, align 4
  %38 = load i32* @Material, align 4
  %sub = sub nsw i32 %38, %37
  store i32 %sub, i32* @Material, align 4
  %39 = load i32* %captured, align 4
  %40 = load i32* %target, align 4
  %idxprom36 = sext i32 %40 to i64
  %arrayidx37 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom36
  store i32 %39, i32* %arrayidx37, align 4
  %41 = load i32* %target, align 4
  %idxprom38 = sext i32 %41 to i64
  %42 = load i32* %promoted, align 4
  %idxprom39 = sext i32 %42 to i64
  %arrayidx40 = getelementptr inbounds [14 x [144 x i32]]* @zobrist, i32 0, i64 %idxprom39
  %arrayidx41 = getelementptr inbounds [144 x i32]* %arrayidx40, i32 0, i64 %idxprom38
  %43 = load i32* %arrayidx41, align 4
  %44 = load i32* @hash, align 4
  %xor = xor i32 %44, %43
  store i32 %xor, i32* @hash, align 4
  %45 = load i32* @white_to_move, align 4
  %xor42 = xor i32 %45, 1
  store i32 %xor42, i32* @white_to_move, align 4
  br label %return

if.else:                                          ; preds = %entry
  %46 = load i32* %target, align 4
  %idxprom43 = sext i32 %46 to i64
  %arrayidx44 = getelementptr inbounds [144 x i32]* @squares, i32 0, i64 %idxprom43
  %47 = load i32* %arrayidx44, align 4
  %48 = load i32* %from, align 4
  %idxprom45 = sext i32 %48 to i64
  %arrayidx46 = getelementptr inbounds [144 x i32]* @squares, i32 0, i64 %idxprom45
  store i32 %47, i32* %arrayidx46, align 4
  %49 = load i32* @ply, align 4
  %idxprom47 = sext i32 %49 to i64
  %arrayidx48 = getelementptr inbounds [300 x %struct.move_x]* @path_x, i32 0, i64 %idxprom47
  %cap_num = getelementptr inbounds %struct.move_x* %arrayidx48, i32 0, i32 0
  %50 = load i32* %cap_num, align 4
  %51 = load i32* %target, align 4
  %idxprom49 = sext i32 %51 to i64
  %arrayidx50 = getelementptr inbounds [144 x i32]* @squares, i32 0, i64 %idxprom49
  store i32 %50, i32* %arrayidx50, align 4
  %52 = load i32* %target, align 4
  %53 = load i32* %target, align 4
  %idxprom51 = sext i32 %53 to i64
  %arrayidx52 = getelementptr inbounds [144 x i32]* @squares, i32 0, i64 %idxprom51
  %54 = load i32* %arrayidx52, align 4
  %idxprom53 = sext i32 %54 to i64
  %arrayidx54 = getelementptr inbounds [62 x i32]* @pieces, i32 0, i64 %idxprom53
  store i32 %52, i32* %arrayidx54, align 4
  %55 = load i32* %from, align 4
  %56 = load i32* %from, align 4
  %idxprom55 = sext i32 %56 to i64
  %arrayidx56 = getelementptr inbounds [144 x i32]* @squares, i32 0, i64 %idxprom55
  %57 = load i32* %arrayidx56, align 4
  %idxprom57 = sext i32 %57 to i64
  %arrayidx58 = getelementptr inbounds [62 x i32]* @pieces, i32 0, i64 %idxprom57
  store i32 %55, i32* %arrayidx58, align 4
  %58 = load i32* @ply, align 4
  %idxprom59 = sext i32 %58 to i64
  %arrayidx60 = getelementptr inbounds [300 x %struct.move_x]* @path_x, i32 0, i64 %idxprom59
  %was_promoted61 = getelementptr inbounds %struct.move_x* %arrayidx60, i32 0, i32 1
  %59 = load i32* %was_promoted61, align 4
  %60 = load i32* %target, align 4
  %idxprom62 = sext i32 %60 to i64
  %arrayidx63 = getelementptr inbounds [144 x i32]* @squares, i32 0, i64 %idxprom62
  %61 = load i32* %arrayidx63, align 4
  %idxprom64 = sext i32 %61 to i64
  %arrayidx65 = getelementptr inbounds [62 x i32]* @is_promoted, i32 0, i64 %idxprom64
  store i32 %59, i32* %arrayidx65, align 4
  %62 = load i32* %ep, align 4
  %tobool66 = icmp ne i32 %62, 0
  br i1 %tobool66, label %if.end91, label %if.then67

if.then67:                                        ; preds = %if.else
  %63 = load i32* %captured, align 4
  switch i32 %63, label %sw.default [
    i32 13, label %sw.bb
  ]

sw.bb:                                            ; preds = %if.then67
  br label %sw.epilog

sw.default:                                       ; preds = %if.then67
  %64 = load i32* @Variant, align 4
  %cmp68 = icmp eq i32 %64, 1
  br i1 %cmp68, label %if.then70, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %sw.default
  %65 = load i32* @Variant, align 4
  %cmp69 = icmp eq i32 %65, 0
  br i1 %cmp69, label %if.then70, label %if.end83

if.then70:                                        ; preds = %lor.lhs.false, %sw.default
  %66 = load i32* %target, align 4
  %idxprom71 = sext i32 %66 to i64
  %arrayidx72 = getelementptr inbounds [144 x i32]* @squares, i32 0, i64 %idxprom71
  %67 = load i32* %arrayidx72, align 4
  %idxprom73 = sext i32 %67 to i64
  %arrayidx74 = getelementptr inbounds [62 x i32]* @is_promoted, i32 0, i64 %idxprom73
  %68 = load i32* %arrayidx74, align 4
  %tobool75 = icmp ne i32 %68, 0
  br i1 %tobool75, label %if.then76, label %if.else79

if.then76:                                        ; preds = %if.then70
  %69 = load i32* %captured, align 4
  %call = call i32 @SwitchPromoted(i32 %69)
  %70 = load i32* @white_to_move, align 4
  %tobool77 = icmp ne i32 %70, 0
  %cond78 = select i1 %tobool77, i32 1, i32 0
  call void @removeHolding(i32 %call, i32 %cond78)
  br label %if.end

if.else79:                                        ; preds = %if.then70
  %71 = load i32* %captured, align 4
  %call80 = call i32 @SwitchColor(i32 %71)
  %72 = load i32* @white_to_move, align 4
  %tobool81 = icmp ne i32 %72, 0
  %cond82 = select i1 %tobool81, i32 1, i32 0
  call void @removeHolding(i32 %call80, i32 %cond82)
  br label %if.end

if.end:                                           ; preds = %if.else79, %if.then76
  br label %if.end83

if.end83:                                         ; preds = %if.end, %lor.lhs.false
  %73 = load i32* %target, align 4
  %idxprom84 = sext i32 %73 to i64
  %74 = load i32* %captured, align 4
  %idxprom85 = sext i32 %74 to i64
  %arrayidx86 = getelementptr inbounds [14 x [144 x i32]]* @zobrist, i32 0, i64 %idxprom85
  %arrayidx87 = getelementptr inbounds [144 x i32]* %arrayidx86, i32 0, i64 %idxprom84
  %75 = load i32* %arrayidx87, align 4
  %76 = load i32* @hash, align 4
  %xor88 = xor i32 %76, %75
  store i32 %xor88, i32* @hash, align 4
  %77 = load i32* %captured, align 4
  %idxprom89 = sext i32 %77 to i64
  %arrayidx90 = getelementptr inbounds [14 x i32]* @material, i32 0, i64 %idxprom89
  %78 = load i32* %arrayidx90, align 4
  %79 = load i32* @Material, align 4
  %add = add nsw i32 %79, %78
  store i32 %add, i32* @Material, align 4
  %80 = load i32* @piece_count, align 4
  %inc = add nsw i32 %80, 1
  store i32 %inc, i32* @piece_count, align 4
  br label %sw.epilog

sw.epilog:                                        ; preds = %if.end83, %sw.bb
  br label %if.end91

if.end91:                                         ; preds = %sw.epilog, %if.else
  %81 = load i32* %target, align 4
  %idxprom92 = sext i32 %81 to i64
  %arrayidx93 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom92
  %82 = load i32* %arrayidx93, align 4
  %cmp94 = icmp eq i32 %82, 1
  br i1 %cmp94, label %if.then95, label %if.end160

if.then95:                                        ; preds = %if.end91
  %83 = load i32* %ep, align 4
  %tobool96 = icmp ne i32 %83, 0
  br i1 %tobool96, label %if.then97, label %if.end142

if.then97:                                        ; preds = %if.then95
  %84 = load i32* %target, align 4
  %idxprom98 = sext i32 %84 to i64
  %arrayidx99 = getelementptr inbounds [144 x i32]* getelementptr inbounds ([14 x [144 x i32]]* @zobrist, i32 0, i64 1), i32 0, i64 %idxprom98
  %85 = load i32* %arrayidx99, align 4
  %86 = load i32* @hash, align 4
  %xor100 = xor i32 %86, %85
  store i32 %xor100, i32* @hash, align 4
  %87 = load i32* %from, align 4
  %idxprom101 = sext i32 %87 to i64
  %arrayidx102 = getelementptr inbounds [144 x i32]* getelementptr inbounds ([14 x [144 x i32]]* @zobrist, i32 0, i64 1), i32 0, i64 %idxprom101
  %88 = load i32* %arrayidx102, align 4
  %89 = load i32* @hash, align 4
  %xor103 = xor i32 %89, %88
  store i32 %xor103, i32* @hash, align 4
  %90 = load i32* %target, align 4
  %sub104 = sub nsw i32 %90, 12
  %idxprom105 = sext i32 %sub104 to i64
  %arrayidx106 = getelementptr inbounds [144 x i32]* getelementptr inbounds ([14 x [144 x i32]]* @zobrist, i32 0, i64 2), i32 0, i64 %idxprom105
  %91 = load i32* %arrayidx106, align 4
  %92 = load i32* @hash, align 4
  %xor107 = xor i32 %92, %91
  store i32 %xor107, i32* @hash, align 4
  %93 = load i32* %target, align 4
  %idxprom108 = sext i32 %93 to i64
  %arrayidx109 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom108
  store i32 13, i32* %arrayidx109, align 4
  %94 = load i32* %from, align 4
  %idxprom110 = sext i32 %94 to i64
  %arrayidx111 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom110
  store i32 1, i32* %arrayidx111, align 4
  %95 = load i32* getelementptr inbounds ([14 x i32]* @material, i32 0, i64 2), align 4
  %96 = load i32* @Material, align 4
  %add112 = add nsw i32 %96, %95
  store i32 %add112, i32* @Material, align 4
  call void @removeHolding(i32 1, i32 0)
  %97 = load i32* @piece_count, align 4
  %inc113 = add nsw i32 %97, 1
  store i32 %inc113, i32* @piece_count, align 4
  %98 = load i32* %target, align 4
  %sub114 = sub nsw i32 %98, 12
  %idxprom115 = sext i32 %sub114 to i64
  %arrayidx116 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom115
  store i32 2, i32* %arrayidx116, align 4
  %99 = load i32* %target, align 4
  %idxprom117 = sext i32 %99 to i64
  %arrayidx118 = getelementptr inbounds [144 x i32]* @moved, i32 0, i64 %idxprom117
  %100 = load i32* %arrayidx118, align 4
  %dec119 = add nsw i32 %100, -1
  store i32 %dec119, i32* %arrayidx118, align 4
  %101 = load i32* %from, align 4
  %idxprom120 = sext i32 %101 to i64
  %arrayidx121 = getelementptr inbounds [144 x i32]* @moved, i32 0, i64 %idxprom120
  %102 = load i32* %arrayidx121, align 4
  %dec122 = add nsw i32 %102, -1
  store i32 %dec122, i32* %arrayidx121, align 4
  %103 = load i32* %target, align 4
  %sub123 = sub nsw i32 %103, 12
  %idxprom124 = sext i32 %sub123 to i64
  %arrayidx125 = getelementptr inbounds [144 x i32]* @moved, i32 0, i64 %idxprom124
  %104 = load i32* %arrayidx125, align 4
  %dec126 = add nsw i32 %104, -1
  store i32 %dec126, i32* %arrayidx125, align 4
  %105 = load i32* @white_to_move, align 4
  %xor127 = xor i32 %105, 1
  store i32 %xor127, i32* @white_to_move, align 4
  %106 = load i32* @ply, align 4
  %idxprom128 = sext i32 %106 to i64
  %arrayidx129 = getelementptr inbounds [300 x %struct.move_x]* @path_x, i32 0, i64 %idxprom128
  %cap_num130 = getelementptr inbounds %struct.move_x* %arrayidx129, i32 0, i32 0
  %107 = load i32* %cap_num130, align 4
  %108 = load i32* %target, align 4
  %sub131 = sub nsw i32 %108, 12
  %idxprom132 = sext i32 %sub131 to i64
  %arrayidx133 = getelementptr inbounds [144 x i32]* @squares, i32 0, i64 %idxprom132
  store i32 %107, i32* %arrayidx133, align 4
  %109 = load i32* %target, align 4
  %sub134 = sub nsw i32 %109, 12
  %110 = load i32* @ply, align 4
  %idxprom135 = sext i32 %110 to i64
  %arrayidx136 = getelementptr inbounds [300 x %struct.move_x]* @path_x, i32 0, i64 %idxprom135
  %cap_num137 = getelementptr inbounds %struct.move_x* %arrayidx136, i32 0, i32 0
  %111 = load i32* %cap_num137, align 4
  %idxprom138 = sext i32 %111 to i64
  %arrayidx139 = getelementptr inbounds [62 x i32]* @pieces, i32 0, i64 %idxprom138
  store i32 %sub134, i32* %arrayidx139, align 4
  %112 = load i32* %target, align 4
  %idxprom140 = sext i32 %112 to i64
  %arrayidx141 = getelementptr inbounds [144 x i32]* @squares, i32 0, i64 %idxprom140
  store i32 0, i32* %arrayidx141, align 4
  br label %return

if.end142:                                        ; preds = %if.then95
  %113 = load i32* %from, align 4
  %idxprom143 = sext i32 %113 to i64
  %arrayidx144 = getelementptr inbounds [144 x i32]* getelementptr inbounds ([14 x [144 x i32]]* @zobrist, i32 0, i64 1), i32 0, i64 %idxprom143
  %114 = load i32* %arrayidx144, align 4
  %115 = load i32* @hash, align 4
  %xor145 = xor i32 %115, %114
  store i32 %xor145, i32* @hash, align 4
  %116 = load i32* %target, align 4
  %idxprom146 = sext i32 %116 to i64
  %arrayidx147 = getelementptr inbounds [144 x i32]* getelementptr inbounds ([14 x [144 x i32]]* @zobrist, i32 0, i64 1), i32 0, i64 %idxprom146
  %117 = load i32* %arrayidx147, align 4
  %118 = load i32* @hash, align 4
  %xor148 = xor i32 %118, %117
  store i32 %xor148, i32* @hash, align 4
  %119 = load i32* %captured, align 4
  %120 = load i32* %target, align 4
  %idxprom149 = sext i32 %120 to i64
  %arrayidx150 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom149
  store i32 %119, i32* %arrayidx150, align 4
  %121 = load i32* %from, align 4
  %idxprom151 = sext i32 %121 to i64
  %arrayidx152 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom151
  store i32 1, i32* %arrayidx152, align 4
  %122 = load i32* %target, align 4
  %idxprom153 = sext i32 %122 to i64
  %arrayidx154 = getelementptr inbounds [144 x i32]* @moved, i32 0, i64 %idxprom153
  %123 = load i32* %arrayidx154, align 4
  %dec155 = add nsw i32 %123, -1
  store i32 %dec155, i32* %arrayidx154, align 4
  %124 = load i32* %from, align 4
  %idxprom156 = sext i32 %124 to i64
  %arrayidx157 = getelementptr inbounds [144 x i32]* @moved, i32 0, i64 %idxprom156
  %125 = load i32* %arrayidx157, align 4
  %dec158 = add nsw i32 %125, -1
  store i32 %dec158, i32* %arrayidx157, align 4
  %126 = load i32* @white_to_move, align 4
  %xor159 = xor i32 %126, 1
  store i32 %xor159, i32* @white_to_move, align 4
  br label %return

if.end160:                                        ; preds = %if.end91
  %127 = load i32* %target, align 4
  %idxprom161 = sext i32 %127 to i64
  %arrayidx162 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom161
  %128 = load i32* %arrayidx162, align 4
  %cmp163 = icmp eq i32 %128, 2
  br i1 %cmp163, label %if.then164, label %if.end229

if.then164:                                       ; preds = %if.end160
  %129 = load i32* %ep, align 4
  %tobool165 = icmp ne i32 %129, 0
  br i1 %tobool165, label %if.then166, label %if.end211

if.then166:                                       ; preds = %if.then164
  %130 = load i32* %target, align 4
  %idxprom167 = sext i32 %130 to i64
  %arrayidx168 = getelementptr inbounds [144 x i32]* getelementptr inbounds ([14 x [144 x i32]]* @zobrist, i32 0, i64 2), i32 0, i64 %idxprom167
  %131 = load i32* %arrayidx168, align 4
  %132 = load i32* @hash, align 4
  %xor169 = xor i32 %132, %131
  store i32 %xor169, i32* @hash, align 4
  %133 = load i32* %from, align 4
  %idxprom170 = sext i32 %133 to i64
  %arrayidx171 = getelementptr inbounds [144 x i32]* getelementptr inbounds ([14 x [144 x i32]]* @zobrist, i32 0, i64 2), i32 0, i64 %idxprom170
  %134 = load i32* %arrayidx171, align 4
  %135 = load i32* @hash, align 4
  %xor172 = xor i32 %135, %134
  store i32 %xor172, i32* @hash, align 4
  %136 = load i32* %target, align 4
  %add173 = add nsw i32 %136, 12
  %idxprom174 = sext i32 %add173 to i64
  %arrayidx175 = getelementptr inbounds [144 x i32]* getelementptr inbounds ([14 x [144 x i32]]* @zobrist, i32 0, i64 1), i32 0, i64 %idxprom174
  %137 = load i32* %arrayidx175, align 4
  %138 = load i32* @hash, align 4
  %xor176 = xor i32 %138, %137
  store i32 %xor176, i32* @hash, align 4
  %139 = load i32* %target, align 4
  %idxprom177 = sext i32 %139 to i64
  %arrayidx178 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom177
  store i32 13, i32* %arrayidx178, align 4
  %140 = load i32* %from, align 4
  %idxprom179 = sext i32 %140 to i64
  %arrayidx180 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom179
  store i32 2, i32* %arrayidx180, align 4
  %141 = load i32* getelementptr inbounds ([14 x i32]* @material, i32 0, i64 1), align 4
  %142 = load i32* @Material, align 4
  %add181 = add nsw i32 %142, %141
  store i32 %add181, i32* @Material, align 4
  call void @removeHolding(i32 2, i32 1)
  %143 = load i32* @piece_count, align 4
  %inc182 = add nsw i32 %143, 1
  store i32 %inc182, i32* @piece_count, align 4
  %144 = load i32* %target, align 4
  %add183 = add nsw i32 %144, 12
  %idxprom184 = sext i32 %add183 to i64
  %arrayidx185 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom184
  store i32 1, i32* %arrayidx185, align 4
  %145 = load i32* %target, align 4
  %idxprom186 = sext i32 %145 to i64
  %arrayidx187 = getelementptr inbounds [144 x i32]* @moved, i32 0, i64 %idxprom186
  %146 = load i32* %arrayidx187, align 4
  %dec188 = add nsw i32 %146, -1
  store i32 %dec188, i32* %arrayidx187, align 4
  %147 = load i32* %from, align 4
  %idxprom189 = sext i32 %147 to i64
  %arrayidx190 = getelementptr inbounds [144 x i32]* @moved, i32 0, i64 %idxprom189
  %148 = load i32* %arrayidx190, align 4
  %dec191 = add nsw i32 %148, -1
  store i32 %dec191, i32* %arrayidx190, align 4
  %149 = load i32* %target, align 4
  %add192 = add nsw i32 %149, 12
  %idxprom193 = sext i32 %add192 to i64
  %arrayidx194 = getelementptr inbounds [144 x i32]* @moved, i32 0, i64 %idxprom193
  %150 = load i32* %arrayidx194, align 4
  %dec195 = add nsw i32 %150, -1
  store i32 %dec195, i32* %arrayidx194, align 4
  %151 = load i32* @white_to_move, align 4
  %xor196 = xor i32 %151, 1
  store i32 %xor196, i32* @white_to_move, align 4
  %152 = load i32* @ply, align 4
  %idxprom197 = sext i32 %152 to i64
  %arrayidx198 = getelementptr inbounds [300 x %struct.move_x]* @path_x, i32 0, i64 %idxprom197
  %cap_num199 = getelementptr inbounds %struct.move_x* %arrayidx198, i32 0, i32 0
  %153 = load i32* %cap_num199, align 4
  %154 = load i32* %target, align 4
  %add200 = add nsw i32 %154, 12
  %idxprom201 = sext i32 %add200 to i64
  %arrayidx202 = getelementptr inbounds [144 x i32]* @squares, i32 0, i64 %idxprom201
  store i32 %153, i32* %arrayidx202, align 4
  %155 = load i32* %target, align 4
  %add203 = add nsw i32 %155, 12
  %156 = load i32* @ply, align 4
  %idxprom204 = sext i32 %156 to i64
  %arrayidx205 = getelementptr inbounds [300 x %struct.move_x]* @path_x, i32 0, i64 %idxprom204
  %cap_num206 = getelementptr inbounds %struct.move_x* %arrayidx205, i32 0, i32 0
  %157 = load i32* %cap_num206, align 4
  %idxprom207 = sext i32 %157 to i64
  %arrayidx208 = getelementptr inbounds [62 x i32]* @pieces, i32 0, i64 %idxprom207
  store i32 %add203, i32* %arrayidx208, align 4
  %158 = load i32* %target, align 4
  %idxprom209 = sext i32 %158 to i64
  %arrayidx210 = getelementptr inbounds [144 x i32]* @squares, i32 0, i64 %idxprom209
  store i32 0, i32* %arrayidx210, align 4
  br label %return

if.end211:                                        ; preds = %if.then164
  %159 = load i32* %from, align 4
  %idxprom212 = sext i32 %159 to i64
  %arrayidx213 = getelementptr inbounds [144 x i32]* getelementptr inbounds ([14 x [144 x i32]]* @zobrist, i32 0, i64 2), i32 0, i64 %idxprom212
  %160 = load i32* %arrayidx213, align 4
  %161 = load i32* @hash, align 4
  %xor214 = xor i32 %161, %160
  store i32 %xor214, i32* @hash, align 4
  %162 = load i32* %target, align 4
  %idxprom215 = sext i32 %162 to i64
  %arrayidx216 = getelementptr inbounds [144 x i32]* getelementptr inbounds ([14 x [144 x i32]]* @zobrist, i32 0, i64 2), i32 0, i64 %idxprom215
  %163 = load i32* %arrayidx216, align 4
  %164 = load i32* @hash, align 4
  %xor217 = xor i32 %164, %163
  store i32 %xor217, i32* @hash, align 4
  %165 = load i32* %captured, align 4
  %166 = load i32* %target, align 4
  %idxprom218 = sext i32 %166 to i64
  %arrayidx219 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom218
  store i32 %165, i32* %arrayidx219, align 4
  %167 = load i32* %from, align 4
  %idxprom220 = sext i32 %167 to i64
  %arrayidx221 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom220
  store i32 2, i32* %arrayidx221, align 4
  %168 = load i32* %target, align 4
  %idxprom222 = sext i32 %168 to i64
  %arrayidx223 = getelementptr inbounds [144 x i32]* @moved, i32 0, i64 %idxprom222
  %169 = load i32* %arrayidx223, align 4
  %dec224 = add nsw i32 %169, -1
  store i32 %dec224, i32* %arrayidx223, align 4
  %170 = load i32* %from, align 4
  %idxprom225 = sext i32 %170 to i64
  %arrayidx226 = getelementptr inbounds [144 x i32]* @moved, i32 0, i64 %idxprom225
  %171 = load i32* %arrayidx226, align 4
  %dec227 = add nsw i32 %171, -1
  store i32 %dec227, i32* %arrayidx226, align 4
  %172 = load i32* @white_to_move, align 4
  %xor228 = xor i32 %172, 1
  store i32 %xor228, i32* @white_to_move, align 4
  br label %return

if.end229:                                        ; preds = %if.end160
  %173 = load i32* %target, align 4
  %idxprom230 = sext i32 %173 to i64
  %arrayidx231 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom230
  %174 = load i32* %arrayidx231, align 4
  %cmp232 = icmp ne i32 %174, 5
  br i1 %cmp232, label %land.lhs.true, label %if.end266

land.lhs.true:                                    ; preds = %if.end229
  %175 = load i32* %target, align 4
  %idxprom233 = sext i32 %175 to i64
  %arrayidx234 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom233
  %176 = load i32* %arrayidx234, align 4
  %cmp235 = icmp ne i32 %176, 6
  br i1 %cmp235, label %land.lhs.true236, label %if.end266

land.lhs.true236:                                 ; preds = %land.lhs.true
  %177 = load i32* %promoted, align 4
  %tobool237 = icmp ne i32 %177, 0
  br i1 %tobool237, label %if.end266, label %if.then238

if.then238:                                       ; preds = %land.lhs.true236
  %178 = load i32* %target, align 4
  %idxprom239 = sext i32 %178 to i64
  %arrayidx240 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom239
  %179 = load i32* %arrayidx240, align 4
  %180 = load i32* %from, align 4
  %idxprom241 = sext i32 %180 to i64
  %arrayidx242 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom241
  store i32 %179, i32* %arrayidx242, align 4
  %181 = load i32* %captured, align 4
  %182 = load i32* %target, align 4
  %idxprom243 = sext i32 %182 to i64
  %arrayidx244 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom243
  store i32 %181, i32* %arrayidx244, align 4
  %183 = load i32* %target, align 4
  %idxprom245 = sext i32 %183 to i64
  %arrayidx246 = getelementptr inbounds [144 x i32]* @moved, i32 0, i64 %idxprom245
  %184 = load i32* %arrayidx246, align 4
  %dec247 = add nsw i32 %184, -1
  store i32 %dec247, i32* %arrayidx246, align 4
  %185 = load i32* %from, align 4
  %idxprom248 = sext i32 %185 to i64
  %arrayidx249 = getelementptr inbounds [144 x i32]* @moved, i32 0, i64 %idxprom248
  %186 = load i32* %arrayidx249, align 4
  %dec250 = add nsw i32 %186, -1
  store i32 %dec250, i32* %arrayidx249, align 4
  %187 = load i32* @white_to_move, align 4
  %xor251 = xor i32 %187, 1
  store i32 %xor251, i32* @white_to_move, align 4
  %188 = load i32* %target, align 4
  %idxprom252 = sext i32 %188 to i64
  %189 = load i32* %from, align 4
  %idxprom253 = sext i32 %189 to i64
  %arrayidx254 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom253
  %190 = load i32* %arrayidx254, align 4
  %idxprom255 = sext i32 %190 to i64
  %arrayidx256 = getelementptr inbounds [14 x [144 x i32]]* @zobrist, i32 0, i64 %idxprom255
  %arrayidx257 = getelementptr inbounds [144 x i32]* %arrayidx256, i32 0, i64 %idxprom252
  %191 = load i32* %arrayidx257, align 4
  %192 = load i32* @hash, align 4
  %xor258 = xor i32 %192, %191
  store i32 %xor258, i32* @hash, align 4
  %193 = load i32* %from, align 4
  %idxprom259 = sext i32 %193 to i64
  %194 = load i32* %from, align 4
  %idxprom260 = sext i32 %194 to i64
  %arrayidx261 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom260
  %195 = load i32* %arrayidx261, align 4
  %idxprom262 = sext i32 %195 to i64
  %arrayidx263 = getelementptr inbounds [14 x [144 x i32]]* @zobrist, i32 0, i64 %idxprom262
  %arrayidx264 = getelementptr inbounds [144 x i32]* %arrayidx263, i32 0, i64 %idxprom259
  %196 = load i32* %arrayidx264, align 4
  %197 = load i32* @hash, align 4
  %xor265 = xor i32 %197, %196
  store i32 %xor265, i32* @hash, align 4
  br label %return

if.end266:                                        ; preds = %land.lhs.true236, %land.lhs.true, %if.end229
  %198 = load i32* %promoted, align 4
  %tobool267 = icmp ne i32 %198, 0
  br i1 %tobool267, label %if.then268, label %if.end320

if.then268:                                       ; preds = %if.end266
  %199 = load i32* %target, align 4
  %idxprom269 = sext i32 %199 to i64
  %arrayidx270 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom269
  %200 = load i32* %arrayidx270, align 4
  %rem = srem i32 %200, 2
  %tobool271 = icmp ne i32 %rem, 0
  br i1 %tobool271, label %if.then272, label %if.end296

if.then272:                                       ; preds = %if.then268
  %201 = load i32* %captured, align 4
  %202 = load i32* %target, align 4
  %idxprom273 = sext i32 %202 to i64
  %arrayidx274 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom273
  store i32 %201, i32* %arrayidx274, align 4
  %203 = load i32* %from, align 4
  %idxprom275 = sext i32 %203 to i64
  %arrayidx276 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom275
  store i32 1, i32* %arrayidx276, align 4
  %204 = load i32* %target, align 4
  %idxprom277 = sext i32 %204 to i64
  %arrayidx278 = getelementptr inbounds [144 x i32]* @moved, i32 0, i64 %idxprom277
  %205 = load i32* %arrayidx278, align 4
  %dec279 = add nsw i32 %205, -1
  store i32 %dec279, i32* %arrayidx278, align 4
  %206 = load i32* %from, align 4
  %idxprom280 = sext i32 %206 to i64
  %arrayidx281 = getelementptr inbounds [144 x i32]* @moved, i32 0, i64 %idxprom280
  %207 = load i32* %arrayidx281, align 4
  %dec282 = add nsw i32 %207, -1
  store i32 %dec282, i32* %arrayidx281, align 4
  %208 = load i32* @white_to_move, align 4
  %xor283 = xor i32 %208, 1
  store i32 %xor283, i32* @white_to_move, align 4
  %209 = load i32* %from, align 4
  %idxprom284 = sext i32 %209 to i64
  %arrayidx285 = getelementptr inbounds [144 x i32]* getelementptr inbounds ([14 x [144 x i32]]* @zobrist, i32 0, i64 1), i32 0, i64 %idxprom284
  %210 = load i32* %arrayidx285, align 4
  %211 = load i32* @hash, align 4
  %xor286 = xor i32 %211, %210
  store i32 %xor286, i32* @hash, align 4
  %212 = load i32* %target, align 4
  %idxprom287 = sext i32 %212 to i64
  %213 = load i32* %promoted, align 4
  %idxprom288 = sext i32 %213 to i64
  %arrayidx289 = getelementptr inbounds [14 x [144 x i32]]* @zobrist, i32 0, i64 %idxprom288
  %arrayidx290 = getelementptr inbounds [144 x i32]* %arrayidx289, i32 0, i64 %idxprom287
  %214 = load i32* %arrayidx290, align 4
  %215 = load i32* @hash, align 4
  %xor291 = xor i32 %215, %214
  store i32 %xor291, i32* @hash, align 4
  %216 = load i32* %promoted, align 4
  %idxprom292 = sext i32 %216 to i64
  %arrayidx293 = getelementptr inbounds [14 x i32]* @material, i32 0, i64 %idxprom292
  %217 = load i32* %arrayidx293, align 4
  %218 = load i32* @Material, align 4
  %sub294 = sub nsw i32 %218, %217
  store i32 %sub294, i32* @Material, align 4
  %219 = load i32* getelementptr inbounds ([14 x i32]* @material, i32 0, i64 1), align 4
  %220 = load i32* @Material, align 4
  %add295 = add nsw i32 %220, %219
  store i32 %add295, i32* @Material, align 4
  br label %return

if.end296:                                        ; preds = %if.then268
  %221 = load i32* %captured, align 4
  %222 = load i32* %target, align 4
  %idxprom297 = sext i32 %222 to i64
  %arrayidx298 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom297
  store i32 %221, i32* %arrayidx298, align 4
  %223 = load i32* %from, align 4
  %idxprom299 = sext i32 %223 to i64
  %arrayidx300 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom299
  store i32 2, i32* %arrayidx300, align 4
  %224 = load i32* %target, align 4
  %idxprom301 = sext i32 %224 to i64
  %arrayidx302 = getelementptr inbounds [144 x i32]* @moved, i32 0, i64 %idxprom301
  %225 = load i32* %arrayidx302, align 4
  %dec303 = add nsw i32 %225, -1
  store i32 %dec303, i32* %arrayidx302, align 4
  %226 = load i32* %from, align 4
  %idxprom304 = sext i32 %226 to i64
  %arrayidx305 = getelementptr inbounds [144 x i32]* @moved, i32 0, i64 %idxprom304
  %227 = load i32* %arrayidx305, align 4
  %dec306 = add nsw i32 %227, -1
  store i32 %dec306, i32* %arrayidx305, align 4
  %228 = load i32* @white_to_move, align 4
  %xor307 = xor i32 %228, 1
  store i32 %xor307, i32* @white_to_move, align 4
  %229 = load i32* %from, align 4
  %idxprom308 = sext i32 %229 to i64
  %arrayidx309 = getelementptr inbounds [144 x i32]* getelementptr inbounds ([14 x [144 x i32]]* @zobrist, i32 0, i64 2), i32 0, i64 %idxprom308
  %230 = load i32* %arrayidx309, align 4
  %231 = load i32* @hash, align 4
  %xor310 = xor i32 %231, %230
  store i32 %xor310, i32* @hash, align 4
  %232 = load i32* %target, align 4
  %idxprom311 = sext i32 %232 to i64
  %233 = load i32* %promoted, align 4
  %idxprom312 = sext i32 %233 to i64
  %arrayidx313 = getelementptr inbounds [14 x [144 x i32]]* @zobrist, i32 0, i64 %idxprom312
  %arrayidx314 = getelementptr inbounds [144 x i32]* %arrayidx313, i32 0, i64 %idxprom311
  %234 = load i32* %arrayidx314, align 4
  %235 = load i32* @hash, align 4
  %xor315 = xor i32 %235, %234
  store i32 %xor315, i32* @hash, align 4
  %236 = load i32* %promoted, align 4
  %idxprom316 = sext i32 %236 to i64
  %arrayidx317 = getelementptr inbounds [14 x i32]* @material, i32 0, i64 %idxprom316
  %237 = load i32* %arrayidx317, align 4
  %238 = load i32* @Material, align 4
  %sub318 = sub nsw i32 %238, %237
  store i32 %sub318, i32* @Material, align 4
  %239 = load i32* getelementptr inbounds ([14 x i32]* @material, i32 0, i64 2), align 4
  %240 = load i32* @Material, align 4
  %add319 = add nsw i32 %240, %239
  store i32 %add319, i32* @Material, align 4
  br label %return

if.end320:                                        ; preds = %if.end266
  %241 = load i32* %target, align 4
  %idxprom321 = sext i32 %241 to i64
  %arrayidx322 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom321
  %242 = load i32* %arrayidx322, align 4
  %cmp323 = icmp eq i32 %242, 5
  br i1 %cmp323, label %if.then324, label %if.else361

if.then324:                                       ; preds = %if.end320
  %243 = load i32* %from, align 4
  store i32 %243, i32* @wking_loc, align 4
  %244 = load i32* %captured, align 4
  %245 = load i32* %target, align 4
  %idxprom325 = sext i32 %245 to i64
  %arrayidx326 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom325
  store i32 %244, i32* %arrayidx326, align 4
  %246 = load i32* %from, align 4
  %idxprom327 = sext i32 %246 to i64
  %arrayidx328 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom327
  store i32 5, i32* %arrayidx328, align 4
  %247 = load i32* %target, align 4
  %idxprom329 = sext i32 %247 to i64
  %arrayidx330 = getelementptr inbounds [144 x i32]* @moved, i32 0, i64 %idxprom329
  %248 = load i32* %arrayidx330, align 4
  %dec331 = add nsw i32 %248, -1
  store i32 %dec331, i32* %arrayidx330, align 4
  %249 = load i32* %from, align 4
  %idxprom332 = sext i32 %249 to i64
  %arrayidx333 = getelementptr inbounds [144 x i32]* @moved, i32 0, i64 %idxprom332
  %250 = load i32* %arrayidx333, align 4
  %dec334 = add nsw i32 %250, -1
  store i32 %dec334, i32* %arrayidx333, align 4
  %251 = load i32* @white_to_move, align 4
  %xor335 = xor i32 %251, 1
  store i32 %xor335, i32* @white_to_move, align 4
  %252 = load i32* %from, align 4
  %idxprom336 = sext i32 %252 to i64
  %arrayidx337 = getelementptr inbounds [144 x i32]* getelementptr inbounds ([14 x [144 x i32]]* @zobrist, i32 0, i64 5), i32 0, i64 %idxprom336
  %253 = load i32* %arrayidx337, align 4
  %254 = load i32* @hash, align 4
  %xor338 = xor i32 %254, %253
  store i32 %xor338, i32* @hash, align 4
  %255 = load i32* %target, align 4
  %idxprom339 = sext i32 %255 to i64
  %arrayidx340 = getelementptr inbounds [144 x i32]* getelementptr inbounds ([14 x [144 x i32]]* @zobrist, i32 0, i64 5), i32 0, i64 %idxprom339
  %256 = load i32* %arrayidx340, align 4
  %257 = load i32* @hash, align 4
  %xor341 = xor i32 %257, %256
  store i32 %xor341, i32* @hash, align 4
  %258 = load i32* %castled, align 4
  %cmp342 = icmp eq i32 %258, 1
  br i1 %cmp342, label %if.then343, label %if.else350

if.then343:                                       ; preds = %if.then324
  store i32 7, i32* getelementptr inbounds ([144 x i32]* @board, i32 0, i64 33), align 4
  store i32 13, i32* getelementptr inbounds ([144 x i32]* @board, i32 0, i64 31), align 4
  %259 = load i32* getelementptr inbounds ([144 x i32]* @moved, i32 0, i64 33), align 4
  %dec344 = add nsw i32 %259, -1
  store i32 %dec344, i32* getelementptr inbounds ([144 x i32]* @moved, i32 0, i64 33), align 4
  %260 = load i32* getelementptr inbounds ([144 x i32]* @moved, i32 0, i64 31), align 4
  %dec345 = add nsw i32 %260, -1
  store i32 %dec345, i32* getelementptr inbounds ([144 x i32]* @moved, i32 0, i64 31), align 4
  store i32 0, i32* @white_castled, align 4
  %261 = load i32* getelementptr inbounds ([144 x i32]* @squares, i32 0, i64 31), align 4
  store i32 %261, i32* getelementptr inbounds ([144 x i32]* @squares, i32 0, i64 33), align 4
  store i32 0, i32* getelementptr inbounds ([144 x i32]* @squares, i32 0, i64 31), align 4
  %262 = load i32* getelementptr inbounds ([144 x i32]* @squares, i32 0, i64 33), align 4
  %idxprom346 = sext i32 %262 to i64
  %arrayidx347 = getelementptr inbounds [62 x i32]* @pieces, i32 0, i64 %idxprom346
  store i32 33, i32* %arrayidx347, align 4
  %263 = load i32* getelementptr inbounds ([14 x [144 x i32]]* @zobrist, i32 0, i64 7, i64 33), align 4
  %264 = load i32* @hash, align 4
  %xor348 = xor i32 %264, %263
  store i32 %xor348, i32* @hash, align 4
  %265 = load i32* getelementptr inbounds ([14 x [144 x i32]]* @zobrist, i32 0, i64 7, i64 31), align 4
  %266 = load i32* @hash, align 4
  %xor349 = xor i32 %266, %265
  store i32 %xor349, i32* @hash, align 4
  br label %return

if.else350:                                       ; preds = %if.then324
  %267 = load i32* %castled, align 4
  %cmp351 = icmp eq i32 %267, 2
  br i1 %cmp351, label %if.then352, label %if.end359

if.then352:                                       ; preds = %if.else350
  store i32 7, i32* getelementptr inbounds ([144 x i32]* @board, i32 0, i64 26), align 4
  store i32 13, i32* getelementptr inbounds ([144 x i32]* @board, i32 0, i64 29), align 4
  %268 = load i32* getelementptr inbounds ([144 x i32]* @moved, i32 0, i64 26), align 4
  %dec353 = add nsw i32 %268, -1
  store i32 %dec353, i32* getelementptr inbounds ([144 x i32]* @moved, i32 0, i64 26), align 4
  %269 = load i32* getelementptr inbounds ([144 x i32]* @moved, i32 0, i64 29), align 4
  %dec354 = add nsw i32 %269, -1
  store i32 %dec354, i32* getelementptr inbounds ([144 x i32]* @moved, i32 0, i64 29), align 4
  store i32 0, i32* @white_castled, align 4
  %270 = load i32* getelementptr inbounds ([144 x i32]* @squares, i32 0, i64 29), align 4
  store i32 %270, i32* getelementptr inbounds ([144 x i32]* @squares, i32 0, i64 26), align 4
  store i32 0, i32* getelementptr inbounds ([144 x i32]* @squares, i32 0, i64 29), align 4
  %271 = load i32* getelementptr inbounds ([144 x i32]* @squares, i32 0, i64 26), align 4
  %idxprom355 = sext i32 %271 to i64
  %arrayidx356 = getelementptr inbounds [62 x i32]* @pieces, i32 0, i64 %idxprom355
  store i32 26, i32* %arrayidx356, align 4
  %272 = load i32* getelementptr inbounds ([14 x [144 x i32]]* @zobrist, i32 0, i64 7, i64 29), align 4
  %273 = load i32* @hash, align 4
  %xor357 = xor i32 %273, %272
  store i32 %xor357, i32* @hash, align 4
  %274 = load i32* getelementptr inbounds ([14 x [144 x i32]]* @zobrist, i32 0, i64 7, i64 26), align 4
  %275 = load i32* @hash, align 4
  %xor358 = xor i32 %275, %274
  store i32 %xor358, i32* @hash, align 4
  br label %return

if.end359:                                        ; preds = %if.else350
  br label %if.end360

if.end360:                                        ; preds = %if.end359
  br label %return

if.else361:                                       ; preds = %if.end320
  %276 = load i32* %from, align 4
  store i32 %276, i32* @bking_loc, align 4
  %277 = load i32* %captured, align 4
  %278 = load i32* %target, align 4
  %idxprom362 = sext i32 %278 to i64
  %arrayidx363 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom362
  store i32 %277, i32* %arrayidx363, align 4
  %279 = load i32* %from, align 4
  %idxprom364 = sext i32 %279 to i64
  %arrayidx365 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom364
  store i32 6, i32* %arrayidx365, align 4
  %280 = load i32* %target, align 4
  %idxprom366 = sext i32 %280 to i64
  %arrayidx367 = getelementptr inbounds [144 x i32]* @moved, i32 0, i64 %idxprom366
  %281 = load i32* %arrayidx367, align 4
  %dec368 = add nsw i32 %281, -1
  store i32 %dec368, i32* %arrayidx367, align 4
  %282 = load i32* %from, align 4
  %idxprom369 = sext i32 %282 to i64
  %arrayidx370 = getelementptr inbounds [144 x i32]* @moved, i32 0, i64 %idxprom369
  %283 = load i32* %arrayidx370, align 4
  %dec371 = add nsw i32 %283, -1
  store i32 %dec371, i32* %arrayidx370, align 4
  %284 = load i32* @white_to_move, align 4
  %xor372 = xor i32 %284, 1
  store i32 %xor372, i32* @white_to_move, align 4
  %285 = load i32* %from, align 4
  %idxprom373 = sext i32 %285 to i64
  %arrayidx374 = getelementptr inbounds [144 x i32]* getelementptr inbounds ([14 x [144 x i32]]* @zobrist, i32 0, i64 6), i32 0, i64 %idxprom373
  %286 = load i32* %arrayidx374, align 4
  %287 = load i32* @hash, align 4
  %xor375 = xor i32 %287, %286
  store i32 %xor375, i32* @hash, align 4
  %288 = load i32* %target, align 4
  %idxprom376 = sext i32 %288 to i64
  %arrayidx377 = getelementptr inbounds [144 x i32]* getelementptr inbounds ([14 x [144 x i32]]* @zobrist, i32 0, i64 6), i32 0, i64 %idxprom376
  %289 = load i32* %arrayidx377, align 4
  %290 = load i32* @hash, align 4
  %xor378 = xor i32 %290, %289
  store i32 %xor378, i32* @hash, align 4
  %291 = load i32* %castled, align 4
  %cmp379 = icmp eq i32 %291, 3
  br i1 %cmp379, label %if.then380, label %if.else387

if.then380:                                       ; preds = %if.else361
  store i32 8, i32* getelementptr inbounds ([144 x i32]* @board, i32 0, i64 117), align 4
  store i32 13, i32* getelementptr inbounds ([144 x i32]* @board, i32 0, i64 115), align 4
  %292 = load i32* getelementptr inbounds ([144 x i32]* @moved, i32 0, i64 117), align 4
  %dec381 = add nsw i32 %292, -1
  store i32 %dec381, i32* getelementptr inbounds ([144 x i32]* @moved, i32 0, i64 117), align 4
  %293 = load i32* getelementptr inbounds ([144 x i32]* @moved, i32 0, i64 115), align 4
  %dec382 = add nsw i32 %293, -1
  store i32 %dec382, i32* getelementptr inbounds ([144 x i32]* @moved, i32 0, i64 115), align 4
  store i32 0, i32* @black_castled, align 4
  %294 = load i32* getelementptr inbounds ([144 x i32]* @squares, i32 0, i64 115), align 4
  store i32 %294, i32* getelementptr inbounds ([144 x i32]* @squares, i32 0, i64 117), align 4
  store i32 0, i32* getelementptr inbounds ([144 x i32]* @squares, i32 0, i64 115), align 4
  %295 = load i32* getelementptr inbounds ([144 x i32]* @squares, i32 0, i64 117), align 4
  %idxprom383 = sext i32 %295 to i64
  %arrayidx384 = getelementptr inbounds [62 x i32]* @pieces, i32 0, i64 %idxprom383
  store i32 117, i32* %arrayidx384, align 4
  %296 = load i32* getelementptr inbounds ([14 x [144 x i32]]* @zobrist, i32 0, i64 8, i64 117), align 4
  %297 = load i32* @hash, align 4
  %xor385 = xor i32 %297, %296
  store i32 %xor385, i32* @hash, align 4
  %298 = load i32* getelementptr inbounds ([14 x [144 x i32]]* @zobrist, i32 0, i64 8, i64 115), align 4
  %299 = load i32* @hash, align 4
  %xor386 = xor i32 %299, %298
  store i32 %xor386, i32* @hash, align 4
  br label %return

if.else387:                                       ; preds = %if.else361
  %300 = load i32* %castled, align 4
  %cmp388 = icmp eq i32 %300, 4
  br i1 %cmp388, label %if.then389, label %if.end396

if.then389:                                       ; preds = %if.else387
  store i32 8, i32* getelementptr inbounds ([144 x i32]* @board, i32 0, i64 110), align 4
  store i32 13, i32* getelementptr inbounds ([144 x i32]* @board, i32 0, i64 113), align 4
  %301 = load i32* getelementptr inbounds ([144 x i32]* @moved, i32 0, i64 110), align 4
  %dec390 = add nsw i32 %301, -1
  store i32 %dec390, i32* getelementptr inbounds ([144 x i32]* @moved, i32 0, i64 110), align 4
  %302 = load i32* getelementptr inbounds ([144 x i32]* @moved, i32 0, i64 113), align 4
  %dec391 = add nsw i32 %302, -1
  store i32 %dec391, i32* getelementptr inbounds ([144 x i32]* @moved, i32 0, i64 113), align 4
  store i32 0, i32* @black_castled, align 4
  %303 = load i32* getelementptr inbounds ([144 x i32]* @squares, i32 0, i64 113), align 4
  store i32 %303, i32* getelementptr inbounds ([144 x i32]* @squares, i32 0, i64 110), align 4
  store i32 0, i32* getelementptr inbounds ([144 x i32]* @squares, i32 0, i64 113), align 4
  %304 = load i32* getelementptr inbounds ([144 x i32]* @squares, i32 0, i64 110), align 4
  %idxprom392 = sext i32 %304 to i64
  %arrayidx393 = getelementptr inbounds [62 x i32]* @pieces, i32 0, i64 %idxprom392
  store i32 110, i32* %arrayidx393, align 4
  %305 = load i32* getelementptr inbounds ([14 x [144 x i32]]* @zobrist, i32 0, i64 8, i64 110), align 4
  %306 = load i32* @hash, align 4
  %xor394 = xor i32 %306, %305
  store i32 %xor394, i32* @hash, align 4
  %307 = load i32* getelementptr inbounds ([14 x [144 x i32]]* @zobrist, i32 0, i64 8, i64 113), align 4
  %308 = load i32* @hash, align 4
  %xor395 = xor i32 %308, %307
  store i32 %xor395, i32* @hash, align 4
  br label %return

if.end396:                                        ; preds = %if.else387
  br label %if.end397

if.end397:                                        ; preds = %if.end396
  br label %if.end398

if.end398:                                        ; preds = %if.end397
  br label %if.end399

if.end399:                                        ; preds = %if.end398
  br label %return

return:                                           ; preds = %if.end399, %if.then389, %if.then380, %if.end360, %if.then352, %if.then343, %if.end296, %if.then272, %if.then238, %if.end211, %if.then166, %if.end142, %if.then97, %if.then
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @check_phase() #0 {
entry:
  %xnum_pieces = alloca i32, align 4
  %xnum_pieces34 = bitcast i32* %xnum_pieces to i32*
  %bitcast = bitcast i32* %xnum_pieces to i8*
  %mtmp = getelementptr i32* %xnum_pieces34, i32 1
  %bitcast35 = bitcast i32* %mtmp to i8*
  %j = alloca i32, align 4
  %j36 = bitcast i32* %j to i32*
  %bitcast37 = bitcast i32* %j to i8*
  %mtmp38 = getelementptr i32* %j36, i32 1
  %bitcast39 = bitcast i32* %mtmp38 to i8*
  %a = alloca i32, align 4
  %a40 = bitcast i32* %a to i32*
  %bitcast41 = bitcast i32* %a to i8*
  %mtmp42 = getelementptr i32* %a40, i32 1
  %bitcast43 = bitcast i32* %mtmp42 to i8*
  %i = alloca i32, align 4
  %i44 = bitcast i32* %i to i32*
  %bitcast45 = bitcast i32* %i to i8*
  %mtmp46 = getelementptr i32* %i44, i32 1
  %bitcast47 = bitcast i32* %mtmp46 to i8*
  store i32 0, i32* %xnum_pieces, align 4
  store i32 1, i32* %j, align 4
  store i32 1, i32* %a, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32* %a, align 4
  %1 = load i32* @piece_count, align 4
  %cmp = icmp sle i32 %0, %1
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %2 = load i32* %j, align 4
  %idxprom = sext i32 %2 to i64
  %arrayidx = getelementptr inbounds [62 x i32]* @pieces, i32 0, i64 %idxprom
  %3 = load i32* %arrayidx, align 4
  store i32 %3, i32* %i, align 4
  %4 = load i32* %i, align 4
  %tobool = icmp ne i32 %4, 0
  br i1 %tobool, label %if.else, label %if.then

if.then:                                          ; preds = %for.body
  br label %for.inc

if.else:                                          ; preds = %for.body
  %5 = load i32* %a, align 4
  %inc = add nsw i32 %5, 1
  store i32 %inc, i32* %a, align 4
  br label %if.end

if.end:                                           ; preds = %if.else
  %6 = load i32* %i, align 4
  %idxprom1 = sext i32 %6 to i64
  %arrayidx2 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom1
  %7 = load i32* %arrayidx2, align 4
  %cmp3 = icmp ne i32 %7, 1
  br i1 %cmp3, label %land.lhs.true, label %if.end17

land.lhs.true:                                    ; preds = %if.end
  %8 = load i32* %i, align 4
  %idxprom4 = sext i32 %8 to i64
  %arrayidx5 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom4
  %9 = load i32* %arrayidx5, align 4
  %cmp6 = icmp ne i32 %9, 2
  br i1 %cmp6, label %land.lhs.true7, label %if.end17

land.lhs.true7:                                   ; preds = %land.lhs.true
  %10 = load i32* %i, align 4
  %idxprom8 = sext i32 %10 to i64
  %arrayidx9 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom8
  %11 = load i32* %arrayidx9, align 4
  %cmp10 = icmp ne i32 %11, 13
  br i1 %cmp10, label %land.lhs.true11, label %if.end17

land.lhs.true11:                                  ; preds = %land.lhs.true7
  %12 = load i32* %i, align 4
  %idxprom12 = sext i32 %12 to i64
  %arrayidx13 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom12
  %13 = load i32* %arrayidx13, align 4
  %cmp14 = icmp ne i32 %13, 0
  br i1 %cmp14, label %if.then15, label %if.end17

if.then15:                                        ; preds = %land.lhs.true11
  %14 = load i32* %xnum_pieces, align 4
  %inc16 = add nsw i32 %14, 1
  store i32 %inc16, i32* %xnum_pieces, align 4
  br label %if.end17

if.end17:                                         ; preds = %if.then15, %land.lhs.true11, %land.lhs.true7, %land.lhs.true, %if.end
  br label %for.inc

for.inc:                                          ; preds = %if.end17, %if.then
  %15 = load i32* %j, align 4
  %inc18 = add nsw i32 %15, 1
  store i32 %inc18, i32* %j, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %16 = load i32* %xnum_pieces, align 4
  %cmp19 = icmp sge i32 %16, 12
  br i1 %cmp19, label %land.lhs.true20, label %if.else28

land.lhs.true20:                                  ; preds = %for.end
  %17 = load i32* @white_castled, align 4
  %tobool21 = icmp ne i32 %17, 0
  br i1 %tobool21, label %lor.lhs.false, label %land.lhs.true23

lor.lhs.false:                                    ; preds = %land.lhs.true20
  %18 = load i32* @black_castled, align 4
  %tobool22 = icmp ne i32 %18, 0
  br i1 %tobool22, label %if.else28, label %land.lhs.true23

land.lhs.true23:                                  ; preds = %lor.lhs.false, %land.lhs.true20
  %19 = load i32* getelementptr inbounds ([144 x i32]* @board, i32 0, i64 30), align 4
  %cmp24 = icmp eq i32 %19, 5
  br i1 %cmp24, label %if.then27, label %lor.lhs.false25

lor.lhs.false25:                                  ; preds = %land.lhs.true23
  %20 = load i32* getelementptr inbounds ([144 x i32]* @board, i32 0, i64 114), align 4
  %cmp26 = icmp eq i32 %20, 6
  br i1 %cmp26, label %if.then27, label %if.else28

if.then27:                                        ; preds = %lor.lhs.false25, %land.lhs.true23
  store i32 0, i32* @phase, align 4
  br label %if.end33

if.else28:                                        ; preds = %lor.lhs.false25, %lor.lhs.false, %for.end
  %21 = load i32* %xnum_pieces, align 4
  %cmp29 = icmp sle i32 %21, 6
  br i1 %cmp29, label %if.then30, label %if.else31

if.then30:                                        ; preds = %if.else28
  store i32 2, i32* @phase, align 4
  br label %if.end32

if.else31:                                        ; preds = %if.else28
  store i32 1, i32* @phase, align 4
  br label %if.end32

if.end32:                                         ; preds = %if.else31, %if.then30
  br label %if.end33

if.end33:                                         ; preds = %if.end32, %if.then27
  ret void
}

; Function Attrs: nounwind uwtable
define internal i32 @King(i32 %sq, i32 %c) #0 {
entry:
  %sq.addr = alloca i32, align 4
  %sq.addr35 = bitcast i32* %sq.addr to i32*
  %bitcast = bitcast i32* %sq.addr to i8*
  %mtmp = getelementptr i32* %sq.addr35, i32 1
  %bitcast36 = bitcast i32* %mtmp to i8*
  %c.addr = alloca i32, align 4
  %c.addr37 = bitcast i32* %c.addr to i32*
  %bitcast38 = bitcast i32* %c.addr to i8*
  %mtmp39 = getelementptr i32* %c.addr37, i32 1
  %bitcast40 = bitcast i32* %mtmp39 to i8*
  %s = alloca i32, align 4
  %s41 = bitcast i32* %s to i32*
  %bitcast42 = bitcast i32* %s to i8*
  %mtmp43 = getelementptr i32* %s41, i32 1
  %bitcast44 = bitcast i32* %mtmp43 to i8*
  store i32 %sq, i32* %sq.addr, align 4
  store i32 %c, i32* %c.addr, align 4
  store i32 0, i32* %s, align 4
  %0 = load i32* %sq.addr, align 4
  %idxprom = sext i32 %0 to i64
  %arrayidx = getelementptr inbounds [144 x i32]* @Xfile, i32 0, i64 %idxprom
  %1 = load i32* %arrayidx, align 4
  %cmp = icmp sge i32 %1, 6
  br i1 %cmp, label %land.lhs.true, label %if.end

land.lhs.true:                                    ; preds = %entry
  %2 = load i32* %sq.addr, align 4
  %sub = sub nsw i32 %2, 1
  %idxprom1 = sext i32 %sub to i64
  %arrayidx2 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom1
  %3 = load i32* %arrayidx2, align 4
  %add = add nsw i32 %3, 1
  %shr = ashr i32 %add, 1
  %cmp3 = icmp eq i32 %shr, 4
  br i1 %cmp3, label %land.lhs.true4, label %if.end

land.lhs.true4:                                   ; preds = %land.lhs.true
  %4 = load i32* %sq.addr, align 4
  %sub5 = sub nsw i32 %4, 1
  %idxprom6 = sext i32 %sub5 to i64
  %arrayidx7 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom6
  %5 = load i32* %arrayidx7, align 4
  %add8 = add nsw i32 %5, 1
  %and = and i32 %add8, 1
  %6 = load i32* %c.addr, align 4
  %cmp9 = icmp eq i32 %and, %6
  br i1 %cmp9, label %if.then, label %if.end

if.then:                                          ; preds = %land.lhs.true4
  %7 = load i32* %s, align 4
  %add10 = add nsw i32 %7, 2
  store i32 %add10, i32* %s, align 4
  br label %if.end

if.end:                                           ; preds = %if.then, %land.lhs.true4, %land.lhs.true, %entry
  %8 = load i32* %sq.addr, align 4
  %idxprom11 = sext i32 %8 to i64
  %arrayidx12 = getelementptr inbounds [144 x i32]* @Xfile, i32 0, i64 %idxprom11
  %9 = load i32* %arrayidx12, align 4
  %cmp13 = icmp sge i32 %9, 6
  br i1 %cmp13, label %land.lhs.true14, label %if.end30

land.lhs.true14:                                  ; preds = %if.end
  %10 = load i32* %sq.addr, align 4
  %add15 = add nsw i32 %10, 1
  %idxprom16 = sext i32 %add15 to i64
  %arrayidx17 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom16
  %11 = load i32* %arrayidx17, align 4
  %add18 = add nsw i32 %11, 1
  %shr19 = ashr i32 %add18, 1
  %cmp20 = icmp eq i32 %shr19, 4
  br i1 %cmp20, label %land.lhs.true21, label %if.end30

land.lhs.true21:                                  ; preds = %land.lhs.true14
  %12 = load i32* %sq.addr, align 4
  %add22 = add nsw i32 %12, 1
  %idxprom23 = sext i32 %add22 to i64
  %arrayidx24 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom23
  %13 = load i32* %arrayidx24, align 4
  %add25 = add nsw i32 %13, 1
  %and26 = and i32 %add25, 1
  %14 = load i32* %c.addr, align 4
  %cmp27 = icmp eq i32 %and26, %14
  br i1 %cmp27, label %if.then28, label %if.end30

if.then28:                                        ; preds = %land.lhs.true21
  %15 = load i32* %s, align 4
  %add29 = add nsw i32 %15, 2
  store i32 %add29, i32* %s, align 4
  br label %if.end30

if.end30:                                         ; preds = %if.then28, %land.lhs.true21, %land.lhs.true14, %if.end
  %16 = load i32* %c.addr, align 4
  %cmp31 = icmp eq i32 %16, 1
  br i1 %cmp31, label %if.then32, label %if.end34

if.then32:                                        ; preds = %if.end30
  %17 = load i32* %s, align 4
  %sub33 = sub nsw i32 0, %17
  store i32 %sub33, i32* %s, align 4
  br label %if.end34

if.end34:                                         ; preds = %if.then32, %if.end30
  %18 = load i32* %s, align 4
  ret i32 %18
}

; Function Attrs: nounwind uwtable
define internal i32 @Queen(i32 %sq, i32 %c) #0 {
entry:
  %sq.addr = alloca i32, align 4
  %sq.addr25 = bitcast i32* %sq.addr to i32*
  %bitcast = bitcast i32* %sq.addr to i8*
  %mtmp = getelementptr i32* %sq.addr25, i32 1
  %bitcast26 = bitcast i32* %mtmp to i8*
  %c.addr = alloca i32, align 4
  %c.addr27 = bitcast i32* %c.addr to i32*
  %bitcast28 = bitcast i32* %c.addr to i8*
  %mtmp29 = getelementptr i32* %c.addr27, i32 1
  %bitcast30 = bitcast i32* %mtmp29 to i8*
  %s = alloca i32, align 4
  %s31 = bitcast i32* %s to i32*
  %bitcast32 = bitcast i32* %s to i8*
  %mtmp33 = getelementptr i32* %s31, i32 1
  %bitcast34 = bitcast i32* %mtmp33 to i8*
  %mob = alloca i32, align 4
  %mob35 = bitcast i32* %mob to i32*
  %bitcast36 = bitcast i32* %mob to i8*
  %mtmp37 = getelementptr i32* %mob35, i32 1
  %bitcast38 = bitcast i32* %mtmp37 to i8*
  %xside = alloca i32, align 4
  %xside39 = bitcast i32* %xside to i32*
  %bitcast40 = bitcast i32* %xside to i8*
  %mtmp41 = getelementptr i32* %xside39, i32 1
  %bitcast42 = bitcast i32* %mtmp41 to i8*
  store i32 %sq, i32* %sq.addr, align 4
  store i32 %c, i32* %c.addr, align 4
  store i32 0, i32* %s, align 4
  %0 = load i32* %c.addr, align 4
  %xor = xor i32 %0, 1
  store i32 %xor, i32* %xside, align 4
  %1 = load i32* %s, align 4
  %add = add nsw i32 %1, 900
  store i32 %add, i32* %s, align 4
  %2 = load i32* %xside, align 4
  %idxprom = sext i32 %2 to i64
  %bitcast43 = bitcast [2 x i32]* @king_locs to i8*
  %bitcast44 = bitcast [2 x i32]* getelementptr inbounds ([2 x i32]* @king_locs, i32 1) to i8*
  %arrayidx = getelementptr inbounds [2 x i32]* @king_locs, i32 0, i64 %idxprom
  %3 = load i32* %arrayidx, align 4
  %idxprom1 = sext i32 %3 to i64
  %4 = load i32* %sq.addr, align 4
  %idxprom2 = sext i32 %4 to i64
  %bitcast45 = bitcast [144 x [144 x i32]]* @distance to i8*
  %bitcast46 = bitcast [144 x [144 x i32]]* getelementptr inbounds ([144 x [144 x i32]]* @distance, i32 1) to i8*
  %arrayidx3 = getelementptr inbounds [144 x [144 x i32]]* @distance, i32 0, i64 %idxprom2
  %arrayidx4 = getelementptr inbounds [144 x i32]* %arrayidx3, i32 0, i64 %idxprom1
  %5 = load i32* %arrayidx4, align 4
  %idxprom5 = sext i32 %5 to i64
  %bitcast47 = bitcast [8 x i32]* @std_q_tropism to i8*
  %bitcast48 = bitcast [8 x i32]* getelementptr inbounds ([8 x i32]* @std_q_tropism, i32 1) to i8*
  %arrayidx6 = getelementptr inbounds [8 x i32]* @std_q_tropism, i32 0, i64 %idxprom5
  %6 = load i32* %arrayidx6, align 4
  %7 = load i32* %s, align 4
  %add7 = add nsw i32 %7, %6
  store i32 %add7, i32* %s, align 4
  %8 = load i32* %sq.addr, align 4
  %call = call i32 @rook_mobility(i32 %8)
  %shl = shl i32 %call, 1
  store i32 %shl, i32* %mob, align 4
  %9 = load i32* %sq.addr, align 4
  %call8 = call i32 @bishop_mobility(i32 %9)
  %shl9 = shl i32 %call8, 1
  %10 = load i32* %mob, align 4
  %add10 = add nsw i32 %10, %shl9
  store i32 %add10, i32* %mob, align 4
  %11 = load i32* %mob, align 4
  %cmp = icmp sle i32 %11, 4
  br i1 %cmp, label %if.then, label %if.end19

if.then:                                          ; preds = %entry
  %12 = load i32* %mob, align 4
  %cmp11 = icmp eq i32 %12, 0
  br i1 %cmp11, label %if.then12, label %if.else

if.then12:                                        ; preds = %if.then
  %13 = load i32* %mob, align 4
  %sub = sub nsw i32 %13, 15
  store i32 %sub, i32* %mob, align 4
  br label %if.end18

if.else:                                          ; preds = %if.then
  %14 = load i32* %mob, align 4
  %cmp13 = icmp eq i32 %14, 2
  br i1 %cmp13, label %if.then14, label %if.else16

if.then14:                                        ; preds = %if.else
  %15 = load i32* %mob, align 4
  %sub15 = sub nsw i32 %15, 10
  store i32 %sub15, i32* %mob, align 4
  br label %if.end

if.else16:                                        ; preds = %if.else
  %16 = load i32* %mob, align 4
  %sub17 = sub nsw i32 %16, 5
  store i32 %sub17, i32* %mob, align 4
  br label %if.end

if.end:                                           ; preds = %if.else16, %if.then14
  br label %if.end18

if.end18:                                         ; preds = %if.end, %if.then12
  br label %if.end19

if.end19:                                         ; preds = %if.end18, %entry
  %17 = load i32* %mob, align 4
  %18 = load i32* %s, align 4
  %add20 = add nsw i32 %18, %17
  store i32 %add20, i32* %s, align 4
  %19 = load i32* %c.addr, align 4
  %cmp21 = icmp eq i32 %19, 1
  br i1 %cmp21, label %if.then22, label %if.end24

if.then22:                                        ; preds = %if.end19
  %20 = load i32* %s, align 4
  %sub23 = sub nsw i32 0, %20
  store i32 %sub23, i32* %s, align 4
  br label %if.end24

if.end24:                                         ; preds = %if.then22, %if.end19
  %21 = load i32* %s, align 4
  ret i32 %21
}

; Function Attrs: nounwind uwtable
define internal i32 @Rook(i32 %sq, i32 %c) #0 {
entry:
  %sq.addr = alloca i32, align 4
  %sq.addr59 = bitcast i32* %sq.addr to i32*
  %bitcast = bitcast i32* %sq.addr to i8*
  %mtmp = getelementptr i32* %sq.addr59, i32 1
  %bitcast60 = bitcast i32* %mtmp to i8*
  %c.addr = alloca i32, align 4
  %c.addr61 = bitcast i32* %c.addr to i32*
  %bitcast62 = bitcast i32* %c.addr to i8*
  %mtmp63 = getelementptr i32* %c.addr61, i32 1
  %bitcast64 = bitcast i32* %mtmp63 to i8*
  %s = alloca i32, align 4
  %s65 = bitcast i32* %s to i32*
  %bitcast66 = bitcast i32* %s to i8*
  %mtmp67 = getelementptr i32* %s65, i32 1
  %bitcast68 = bitcast i32* %mtmp67 to i8*
  %mob = alloca i32, align 4
  %mob69 = bitcast i32* %mob to i32*
  %bitcast70 = bitcast i32* %mob to i8*
  %mtmp71 = getelementptr i32* %mob69, i32 1
  %bitcast72 = bitcast i32* %mtmp71 to i8*
  %xside = alloca i32, align 4
  %xside73 = bitcast i32* %xside to i32*
  %bitcast74 = bitcast i32* %xside to i8*
  %mtmp75 = getelementptr i32* %xside73, i32 1
  %bitcast76 = bitcast i32* %mtmp75 to i8*
  store i32 %sq, i32* %sq.addr, align 4
  store i32 %c, i32* %c.addr, align 4
  store i32 0, i32* %s, align 4
  %0 = load i32* %c.addr, align 4
  %xor = xor i32 %0, 1
  store i32 %xor, i32* %xside, align 4
  %1 = load i32* %s, align 4
  %add = add nsw i32 %1, 500
  store i32 %add, i32* %s, align 4
  %2 = load i32* %xside, align 4
  %idxprom = sext i32 %2 to i64
  %bitcast77 = bitcast [2 x i32]* @king_locs to i8*
  %bitcast78 = bitcast [2 x i32]* getelementptr inbounds ([2 x i32]* @king_locs, i32 1) to i8*
  %arrayidx = getelementptr inbounds [2 x i32]* @king_locs, i32 0, i64 %idxprom
  %3 = load i32* %arrayidx, align 4
  %idxprom1 = sext i32 %3 to i64
  %4 = load i32* %sq.addr, align 4
  %idxprom2 = sext i32 %4 to i64
  %bitcast79 = bitcast [144 x [144 x i32]]* @rookdistance to i8*
  %bitcast80 = bitcast [144 x [144 x i32]]* getelementptr inbounds ([144 x [144 x i32]]* @rookdistance, i32 1) to i8*
  %arrayidx3 = getelementptr inbounds [144 x [144 x i32]]* @rookdistance, i32 0, i64 %idxprom2
  %arrayidx4 = getelementptr inbounds [144 x i32]* %arrayidx3, i32 0, i64 %idxprom1
  %5 = load i32* %arrayidx4, align 4
  %idxprom5 = sext i32 %5 to i64
  %bitcast81 = bitcast [16 x i32]* @std_r_tropism to i8*
  %bitcast82 = bitcast [16 x i32]* getelementptr inbounds ([16 x i32]* @std_r_tropism, i32 1) to i8*
  %arrayidx6 = getelementptr inbounds [16 x i32]* @std_r_tropism, i32 0, i64 %idxprom5
  %6 = load i32* %arrayidx6, align 4
  %7 = load i32* %s, align 4
  %add7 = add nsw i32 %7, %6
  store i32 %add7, i32* %s, align 4
  %8 = load i32* %sq.addr, align 4
  %call = call i32 @rook_mobility(i32 %8)
  %shl = shl i32 %call, 1
  store i32 %shl, i32* %mob, align 4
  %9 = load i32* %mob, align 4
  %cmp = icmp sle i32 %9, 2
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %10 = load i32* %mob, align 4
  %sub = sub nsw i32 %10, 5
  store i32 %sub, i32* %mob, align 4
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %11 = load i32* %mob, align 4
  %12 = load i32* %s, align 4
  %add8 = add nsw i32 %12, %11
  store i32 %add8, i32* %s, align 4
  %13 = load i32* %sq.addr, align 4
  %sub9 = sub nsw i32 %13, 1
  %idxprom10 = sext i32 %sub9 to i64
  %arrayidx11 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom10
  %14 = load i32* %arrayidx11, align 4
  %cmp12 = icmp ne i32 %14, 13
  br i1 %cmp12, label %land.lhs.true, label %if.end19

land.lhs.true:                                    ; preds = %if.end
  %15 = load i32* %sq.addr, align 4
  %add13 = add nsw i32 %15, 1
  %idxprom14 = sext i32 %add13 to i64
  %arrayidx15 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom14
  %16 = load i32* %arrayidx15, align 4
  %cmp16 = icmp ne i32 %16, 13
  br i1 %cmp16, label %if.then17, label %if.end19

if.then17:                                        ; preds = %land.lhs.true
  %17 = load i32* %s, align 4
  %sub18 = sub nsw i32 %17, 5
  store i32 %sub18, i32* %s, align 4
  br label %if.end19

if.end19:                                         ; preds = %if.then17, %land.lhs.true, %if.end
  %18 = load i32* @wmat, align 4
  %cmp20 = icmp ne i32 %18, 1300
  br i1 %cmp20, label %if.then22, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.end19
  %19 = load i32* @bmat, align 4
  %cmp21 = icmp ne i32 %19, 1300
  br i1 %cmp21, label %if.then22, label %if.end54

if.then22:                                        ; preds = %lor.lhs.false, %if.end19
  %20 = load i32* %sq.addr, align 4
  %21 = load i32* %c.addr, align 4
  %idxprom23 = sext i32 %21 to i64
  %bitcast83 = bitcast [2 x i32]* @Rook.square_d1 to i8*
  %bitcast84 = bitcast [2 x i32]* getelementptr inbounds ([2 x i32]* @Rook.square_d1, i32 1) to i8*
  %arrayidx24 = getelementptr inbounds [2 x i32]* @Rook.square_d1, i32 0, i64 %idxprom23
  %22 = load i32* %arrayidx24, align 4
  %cmp25 = icmp eq i32 %20, %22
  br i1 %cmp25, label %if.then26, label %if.end46

if.then26:                                        ; preds = %if.then22
  %23 = load i32* %s, align 4
  %add27 = add nsw i32 %23, 10
  store i32 %add27, i32* %s, align 4
  %24 = load i32* %c.addr, align 4
  %idxprom28 = sext i32 %24 to i64
  %bitcast85 = bitcast [2 x i32]* @Rook.square_d1 to i8*
  %bitcast86 = bitcast [2 x i32]* getelementptr inbounds ([2 x i32]* @Rook.square_d1, i32 1) to i8*
  %arrayidx29 = getelementptr inbounds [2 x i32]* @Rook.square_d1, i32 0, i64 %idxprom28
  %25 = load i32* %arrayidx29, align 4
  %add30 = add nsw i32 %25, 1
  %idxprom31 = sext i32 %add30 to i64
  %arrayidx32 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom31
  %26 = load i32* %arrayidx32, align 4
  %add33 = add nsw i32 %26, 1
  %shr = ashr i32 %add33, 1
  %cmp34 = icmp eq i32 %shr, 4
  br i1 %cmp34, label %land.lhs.true35, label %if.end45

land.lhs.true35:                                  ; preds = %if.then26
  %27 = load i32* %c.addr, align 4
  %idxprom36 = sext i32 %27 to i64
  %bitcast89 = bitcast [2 x i32]* @Rook.square_d1 to i8*
  %bitcast90 = bitcast [2 x i32]* getelementptr inbounds ([2 x i32]* @Rook.square_d1, i32 1) to i8*
  %arrayidx37 = getelementptr inbounds [2 x i32]* @Rook.square_d1, i32 0, i64 %idxprom36
  %28 = load i32* %arrayidx37, align 4
  %add38 = add nsw i32 %28, 1
  %idxprom39 = sext i32 %add38 to i64
  %arrayidx40 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom39
  %29 = load i32* %arrayidx40, align 4
  %add41 = add nsw i32 %29, 1
  %and = and i32 %add41, 1
  %30 = load i32* %c.addr, align 4
  %cmp42 = icmp eq i32 %and, %30
  br i1 %cmp42, label %if.then43, label %if.end45

if.then43:                                        ; preds = %land.lhs.true35
  %31 = load i32* %s, align 4
  %add44 = add nsw i32 %31, 5
  store i32 %add44, i32* %s, align 4
  br label %if.end45

if.end45:                                         ; preds = %if.then43, %land.lhs.true35, %if.then26
  br label %if.end46

if.end46:                                         ; preds = %if.end45, %if.then22
  %32 = load i32* %sq.addr, align 4
  %33 = load i32* %c.addr, align 4
  %idxprom47 = sext i32 %33 to i64
  %bitcast87 = bitcast [2 x i32]* @Rook.square_d1 to i8*
  %bitcast88 = bitcast [2 x i32]* getelementptr inbounds ([2 x i32]* @Rook.square_d1, i32 1) to i8*
  %arrayidx48 = getelementptr inbounds [2 x i32]* @Rook.square_d1, i32 0, i64 %idxprom47
  %34 = load i32* %arrayidx48, align 4
  %add49 = add nsw i32 %34, 1
  %cmp50 = icmp eq i32 %32, %add49
  br i1 %cmp50, label %if.then51, label %if.end53

if.then51:                                        ; preds = %if.end46
  %35 = load i32* %s, align 4
  %add52 = add nsw i32 %35, 10
  store i32 %add52, i32* %s, align 4
  br label %if.end53

if.end53:                                         ; preds = %if.then51, %if.end46
  br label %if.end54

if.end54:                                         ; preds = %if.end53, %lor.lhs.false
  %36 = load i32* %c.addr, align 4
  %cmp55 = icmp eq i32 %36, 1
  br i1 %cmp55, label %if.then56, label %if.end58

if.then56:                                        ; preds = %if.end54
  %37 = load i32* %s, align 4
  %sub57 = sub nsw i32 0, %37
  store i32 %sub57, i32* %s, align 4
  br label %if.end58

if.end58:                                         ; preds = %if.then56, %if.end54
  %38 = load i32* %s, align 4
  ret i32 %38
}

; Function Attrs: nounwind uwtable
define internal i32 @Bishop(i32 %sq, i32 %c) #0 {
entry:
  %sq.addr = alloca i32, align 4
  %sq.addr28 = bitcast i32* %sq.addr to i32*
  %bitcast = bitcast i32* %sq.addr to i8*
  %mtmp = getelementptr i32* %sq.addr28, i32 1
  %bitcast29 = bitcast i32* %mtmp to i8*
  %c.addr = alloca i32, align 4
  %c.addr30 = bitcast i32* %c.addr to i32*
  %bitcast31 = bitcast i32* %c.addr to i8*
  %mtmp32 = getelementptr i32* %c.addr30, i32 1
  %bitcast33 = bitcast i32* %mtmp32 to i8*
  %s = alloca i32, align 4
  %s34 = bitcast i32* %s to i32*
  %bitcast35 = bitcast i32* %s to i8*
  %mtmp36 = getelementptr i32* %s34, i32 1
  %bitcast37 = bitcast i32* %mtmp36 to i8*
  %mob = alloca i32, align 4
  %mob38 = bitcast i32* %mob to i32*
  %bitcast39 = bitcast i32* %mob to i8*
  %mtmp40 = getelementptr i32* %mob38, i32 1
  %bitcast41 = bitcast i32* %mtmp40 to i8*
  %xside = alloca i32, align 4
  %xside42 = bitcast i32* %xside to i32*
  %bitcast43 = bitcast i32* %xside to i8*
  %mtmp44 = getelementptr i32* %xside42, i32 1
  %bitcast45 = bitcast i32* %mtmp44 to i8*
  store i32 %sq, i32* %sq.addr, align 4
  store i32 %c, i32* %c.addr, align 4
  store i32 0, i32* %s, align 4
  %0 = load i32* %c.addr, align 4
  %xor = xor i32 %0, 1
  store i32 %xor, i32* %xside, align 4
  %1 = load i32* %s, align 4
  %add = add nsw i32 %1, 325
  store i32 %add, i32* %s, align 4
  %2 = load i32* %sq.addr, align 4
  %idxprom = sext i32 %2 to i64
  %bitcast46 = bitcast [144 x i32]* @sbishop to i8*
  %bitcast47 = bitcast [144 x i32]* getelementptr inbounds ([144 x i32]* @sbishop, i32 1) to i8*
  %arrayidx = getelementptr inbounds [144 x i32]* @sbishop, i32 0, i64 %idxprom
  %3 = load i32* %arrayidx, align 4
  %4 = load i32* %s, align 4
  %add1 = add nsw i32 %4, %3
  store i32 %add1, i32* %s, align 4
  %5 = load i32* %xside, align 4
  %idxprom2 = sext i32 %5 to i64
  %bitcast48 = bitcast [2 x i32]* @king_locs to i8*
  %bitcast49 = bitcast [2 x i32]* getelementptr inbounds ([2 x i32]* @king_locs, i32 1) to i8*
  %arrayidx3 = getelementptr inbounds [2 x i32]* @king_locs, i32 0, i64 %idxprom2
  %6 = load i32* %arrayidx3, align 4
  %idxprom4 = sext i32 %6 to i64
  %7 = load i32* %sq.addr, align 4
  %idxprom5 = sext i32 %7 to i64
  %bitcast50 = bitcast [144 x [144 x i32]]* @distance to i8*
  %bitcast51 = bitcast [144 x [144 x i32]]* getelementptr inbounds ([144 x [144 x i32]]* @distance, i32 1) to i8*
  %arrayidx6 = getelementptr inbounds [144 x [144 x i32]]* @distance, i32 0, i64 %idxprom5
  %arrayidx7 = getelementptr inbounds [144 x i32]* %arrayidx6, i32 0, i64 %idxprom4
  %8 = load i32* %arrayidx7, align 4
  %idxprom8 = sext i32 %8 to i64
  %bitcast52 = bitcast [8 x i32]* @std_b_tropism to i8*
  %bitcast53 = bitcast [8 x i32]* getelementptr inbounds ([8 x i32]* @std_b_tropism, i32 1) to i8*
  %arrayidx9 = getelementptr inbounds [8 x i32]* @std_b_tropism, i32 0, i64 %idxprom8
  %9 = load i32* %arrayidx9, align 4
  %10 = load i32* %s, align 4
  %add10 = add nsw i32 %10, %9
  store i32 %add10, i32* %s, align 4
  %11 = load i32* %sq.addr, align 4
  %call = call i32 @bishop_mobility(i32 %11)
  %shl = shl i32 %call, 1
  store i32 %shl, i32* %mob, align 4
  %12 = load i32* %mob, align 4
  %cmp = icmp sle i32 %12, 2
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %13 = load i32* %mob, align 4
  %sub = sub nsw i32 %13, 5
  store i32 %sub, i32* %mob, align 4
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %14 = load i32* %mob, align 4
  %15 = load i32* %s, align 4
  %add11 = add nsw i32 %15, %14
  store i32 %add11, i32* %s, align 4
  %16 = load i32* %c.addr, align 4
  %cmp12 = icmp eq i32 %16, 0
  br i1 %cmp12, label %land.lhs.true, label %lor.lhs.false

land.lhs.true:                                    ; preds = %if.end
  %17 = load i32* %sq.addr, align 4
  %cmp13 = icmp eq i32 %17, 39
  br i1 %cmp13, label %land.lhs.true14, label %lor.lhs.false

land.lhs.true14:                                  ; preds = %land.lhs.true
  %18 = load i32* getelementptr inbounds ([144 x i32]* @board, i32 0, i64 52), align 4
  %cmp15 = icmp eq i32 %18, 1
  br i1 %cmp15, label %if.then21, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %land.lhs.true14, %land.lhs.true, %if.end
  %19 = load i32* %c.addr, align 4
  %cmp16 = icmp eq i32 %19, 1
  br i1 %cmp16, label %land.lhs.true17, label %if.end23

land.lhs.true17:                                  ; preds = %lor.lhs.false
  %20 = load i32* %sq.addr, align 4
  %cmp18 = icmp eq i32 %20, 99
  br i1 %cmp18, label %land.lhs.true19, label %if.end23

land.lhs.true19:                                  ; preds = %land.lhs.true17
  %21 = load i32* getelementptr inbounds ([144 x i32]* @board, i32 0, i64 88), align 4
  %cmp20 = icmp eq i32 %21, 2
  br i1 %cmp20, label %if.then21, label %if.end23

if.then21:                                        ; preds = %land.lhs.true19, %land.lhs.true14
  %22 = load i32* %s, align 4
  %sub22 = sub nsw i32 %22, 5
  store i32 %sub22, i32* %s, align 4
  br label %if.end23

if.end23:                                         ; preds = %if.then21, %land.lhs.true19, %land.lhs.true17, %lor.lhs.false
  %23 = load i32* %c.addr, align 4
  %cmp24 = icmp eq i32 %23, 1
  br i1 %cmp24, label %if.then25, label %if.end27

if.then25:                                        ; preds = %if.end23
  %24 = load i32* %s, align 4
  %sub26 = sub nsw i32 0, %24
  store i32 %sub26, i32* %s, align 4
  br label %if.end27

if.end27:                                         ; preds = %if.then25, %if.end23
  %25 = load i32* %s, align 4
  ret i32 %25
}

; Function Attrs: nounwind uwtable
define internal i32 @Knight(i32 %sq, i32 %c) #0 {
entry:
  %sq.addr = alloca i32, align 4
  %sq.addr11 = bitcast i32* %sq.addr to i32*
  %bitcast = bitcast i32* %sq.addr to i8*
  %mtmp = getelementptr i32* %sq.addr11, i32 1
  %bitcast12 = bitcast i32* %mtmp to i8*
  %c.addr = alloca i32, align 4
  %c.addr13 = bitcast i32* %c.addr to i32*
  %bitcast14 = bitcast i32* %c.addr to i8*
  %mtmp15 = getelementptr i32* %c.addr13, i32 1
  %bitcast16 = bitcast i32* %mtmp15 to i8*
  %s = alloca i32, align 4
  %s17 = bitcast i32* %s to i32*
  %bitcast18 = bitcast i32* %s to i8*
  %mtmp19 = getelementptr i32* %s17, i32 1
  %bitcast20 = bitcast i32* %mtmp19 to i8*
  %xside = alloca i32, align 4
  %xside21 = bitcast i32* %xside to i32*
  %bitcast22 = bitcast i32* %xside to i8*
  %mtmp23 = getelementptr i32* %xside21, i32 1
  %bitcast24 = bitcast i32* %mtmp23 to i8*
  store i32 %sq, i32* %sq.addr, align 4
  store i32 %c, i32* %c.addr, align 4
  store i32 0, i32* %s, align 4
  %0 = load i32* %c.addr, align 4
  %xor = xor i32 %0, 1
  store i32 %xor, i32* %xside, align 4
  %1 = load i32* %s, align 4
  %add = add nsw i32 %1, 310
  store i32 %add, i32* %s, align 4
  %2 = load i32* %sq.addr, align 4
  %idxprom = sext i32 %2 to i64
  %bitcast25 = bitcast [144 x i32]* @sknight to i8*
  %bitcast26 = bitcast [144 x i32]* getelementptr inbounds ([144 x i32]* @sknight, i32 1) to i8*
  %arrayidx = getelementptr inbounds [144 x i32]* @sknight, i32 0, i64 %idxprom
  %3 = load i32* %arrayidx, align 4
  %4 = load i32* %s, align 4
  %add1 = add nsw i32 %4, %3
  store i32 %add1, i32* %s, align 4
  %5 = load i32* %xside, align 4
  %idxprom2 = sext i32 %5 to i64
  %bitcast27 = bitcast [2 x i32]* @king_locs to i8*
  %bitcast28 = bitcast [2 x i32]* getelementptr inbounds ([2 x i32]* @king_locs, i32 1) to i8*
  %arrayidx3 = getelementptr inbounds [2 x i32]* @king_locs, i32 0, i64 %idxprom2
  %6 = load i32* %arrayidx3, align 4
  %idxprom4 = sext i32 %6 to i64
  %7 = load i32* %sq.addr, align 4
  %idxprom5 = sext i32 %7 to i64
  %bitcast29 = bitcast [144 x [144 x i32]]* @distance to i8*
  %bitcast30 = bitcast [144 x [144 x i32]]* getelementptr inbounds ([144 x [144 x i32]]* @distance, i32 1) to i8*
  %arrayidx6 = getelementptr inbounds [144 x [144 x i32]]* @distance, i32 0, i64 %idxprom5
  %arrayidx7 = getelementptr inbounds [144 x i32]* %arrayidx6, i32 0, i64 %idxprom4
  %8 = load i32* %arrayidx7, align 4
  %idxprom8 = sext i32 %8 to i64
  %bitcast31 = bitcast [8 x i32]* @std_n_tropism to i8*
  %bitcast32 = bitcast [8 x i32]* getelementptr inbounds ([8 x i32]* @std_n_tropism, i32 1) to i8*
  %arrayidx9 = getelementptr inbounds [8 x i32]* @std_n_tropism, i32 0, i64 %idxprom8
  %9 = load i32* %arrayidx9, align 4
  %10 = load i32* %s, align 4
  %add10 = add nsw i32 %10, %9
  store i32 %add10, i32* %s, align 4
  %11 = load i32* %c.addr, align 4
  %cmp = icmp eq i32 %11, 1
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %12 = load i32* %s, align 4
  %sub = sub nsw i32 0, %12
  store i32 %sub, i32* %s, align 4
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %13 = load i32* %s, align 4
  ret i32 %13
}

; Function Attrs: nounwind uwtable
define internal i32 @Pawn(i32 %sq, i32 %c) #0 {
entry:
  %sq.addr = alloca i32, align 4
  %sq.addr62 = bitcast i32* %sq.addr to i32*
  %bitcast = bitcast i32* %sq.addr to i8*
  %mtmp = getelementptr i32* %sq.addr62, i32 1
  %bitcast63 = bitcast i32* %mtmp to i8*
  %c.addr = alloca i32, align 4
  %c.addr64 = bitcast i32* %c.addr to i32*
  %bitcast65 = bitcast i32* %c.addr to i8*
  %mtmp66 = getelementptr i32* %c.addr64, i32 1
  %bitcast67 = bitcast i32* %mtmp66 to i8*
  %s = alloca i32, align 4
  %s68 = bitcast i32* %s to i32*
  %bitcast69 = bitcast i32* %s to i8*
  %mtmp70 = getelementptr i32* %s68, i32 1
  %bitcast71 = bitcast i32* %mtmp70 to i8*
  %xside = alloca i32, align 4
  %xside72 = bitcast i32* %xside to i32*
  %bitcast73 = bitcast i32* %xside to i8*
  %mtmp74 = getelementptr i32* %xside72, i32 1
  %bitcast75 = bitcast i32* %mtmp74 to i8*
  store i32 %sq, i32* %sq.addr, align 4
  store i32 %c, i32* %c.addr, align 4
  store i32 0, i32* %s, align 4
  %0 = load i32* %c.addr, align 4
  %xor = xor i32 %0, 1
  store i32 %xor, i32* %xside, align 4
  %1 = load i32* %s, align 4
  %add = add nsw i32 %1, 100
  store i32 %add, i32* %s, align 4
  %2 = load i32* %xside, align 4
  %idxprom = sext i32 %2 to i64
  %bitcast76 = bitcast [2 x i32]* @king_locs to i8*
  %bitcast77 = bitcast [2 x i32]* getelementptr inbounds ([2 x i32]* @king_locs, i32 1) to i8*
  %arrayidx = getelementptr inbounds [2 x i32]* @king_locs, i32 0, i64 %idxprom
  %3 = load i32* %arrayidx, align 4
  %idxprom1 = sext i32 %3 to i64
  %4 = load i32* %sq.addr, align 4
  %idxprom2 = sext i32 %4 to i64
  %bitcast78 = bitcast [144 x [144 x i32]]* @distance to i8*
  %bitcast79 = bitcast [144 x [144 x i32]]* getelementptr inbounds ([144 x [144 x i32]]* @distance, i32 1) to i8*
  %arrayidx3 = getelementptr inbounds [144 x [144 x i32]]* @distance, i32 0, i64 %idxprom2
  %arrayidx4 = getelementptr inbounds [144 x i32]* %arrayidx3, i32 0, i64 %idxprom1
  %5 = load i32* %arrayidx4, align 4
  %idxprom5 = sext i32 %5 to i64
  %bitcast80 = bitcast [8 x i32]* @std_p_tropism to i8*
  %bitcast81 = bitcast [8 x i32]* getelementptr inbounds ([8 x i32]* @std_p_tropism, i32 1) to i8*
  %arrayidx6 = getelementptr inbounds [8 x i32]* @std_p_tropism, i32 0, i64 %idxprom5
  %6 = load i32* %arrayidx6, align 4
  %7 = load i32* %s, align 4
  %add7 = add nsw i32 %7, %6
  store i32 %add7, i32* %s, align 4
  %8 = load i32* %c.addr, align 4
  %idxprom8 = sext i32 %8 to i64
  %bitcast82 = bitcast [2 x i32]* @king_locs to i8*
  %bitcast83 = bitcast [2 x i32]* getelementptr inbounds ([2 x i32]* @king_locs, i32 1) to i8*
  %arrayidx9 = getelementptr inbounds [2 x i32]* @king_locs, i32 0, i64 %idxprom8
  %9 = load i32* %arrayidx9, align 4
  %idxprom10 = sext i32 %9 to i64
  %10 = load i32* %sq.addr, align 4
  %idxprom11 = sext i32 %10 to i64
  %bitcast84 = bitcast [144 x [144 x i32]]* @distance to i8*
  %bitcast85 = bitcast [144 x [144 x i32]]* getelementptr inbounds ([144 x [144 x i32]]* @distance, i32 1) to i8*
  %arrayidx12 = getelementptr inbounds [144 x [144 x i32]]* @distance, i32 0, i64 %idxprom11
  %arrayidx13 = getelementptr inbounds [144 x i32]* %arrayidx12, i32 0, i64 %idxprom10
  %11 = load i32* %arrayidx13, align 4
  %idxprom14 = sext i32 %11 to i64
  %bitcast86 = bitcast [8 x i32]* @std_own_p_tropism to i8*
  %bitcast87 = bitcast [8 x i32]* getelementptr inbounds ([8 x i32]* @std_own_p_tropism, i32 1) to i8*
  %arrayidx15 = getelementptr inbounds [8 x i32]* @std_own_p_tropism, i32 0, i64 %idxprom14
  %12 = load i32* %arrayidx15, align 4
  %13 = load i32* %s, align 4
  %add16 = add nsw i32 %13, %12
  store i32 %add16, i32* %s, align 4
  %14 = load i32* %sq.addr, align 4
  %add17 = add nsw i32 %14, 1
  %idxprom18 = sext i32 %add17 to i64
  %arrayidx19 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom18
  %15 = load i32* %arrayidx19, align 4
  %add20 = add nsw i32 %15, 1
  %shr = ashr i32 %add20, 1
  %cmp = icmp eq i32 %shr, 1
  br i1 %cmp, label %land.lhs.true, label %if.end

land.lhs.true:                                    ; preds = %entry
  %16 = load i32* %sq.addr, align 4
  %add21 = add nsw i32 %16, 1
  %idxprom22 = sext i32 %add21 to i64
  %arrayidx23 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom22
  %17 = load i32* %arrayidx23, align 4
  %add24 = add nsw i32 %17, 1
  %and = and i32 %add24, 1
  %18 = load i32* %c.addr, align 4
  %cmp25 = icmp eq i32 %and, %18
  br i1 %cmp25, label %if.then, label %if.end

if.then:                                          ; preds = %land.lhs.true
  %19 = load i32* %s, align 4
  %add26 = add nsw i32 %19, 5
  store i32 %add26, i32* %s, align 4
  br label %if.end

if.end:                                           ; preds = %if.then, %land.lhs.true, %entry
  %20 = load i32* %sq.addr, align 4
  %add27 = add nsw i32 %20, 11
  %idxprom28 = sext i32 %add27 to i64
  %arrayidx29 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom28
  %21 = load i32* %arrayidx29, align 4
  %add30 = add nsw i32 %21, 1
  %shr31 = ashr i32 %add30, 1
  %cmp32 = icmp eq i32 %shr31, 1
  br i1 %cmp32, label %land.lhs.true33, label %if.else

land.lhs.true33:                                  ; preds = %if.end
  %22 = load i32* %sq.addr, align 4
  %add34 = add nsw i32 %22, 11
  %idxprom35 = sext i32 %add34 to i64
  %arrayidx36 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom35
  %23 = load i32* %arrayidx36, align 4
  %add37 = add nsw i32 %23, 1
  %and38 = and i32 %add37, 1
  %24 = load i32* %c.addr, align 4
  %cmp39 = icmp eq i32 %and38, %24
  br i1 %cmp39, label %if.then40, label %if.else

if.then40:                                        ; preds = %land.lhs.true33
  %25 = load i32* %s, align 4
  %add41 = add nsw i32 %25, 1
  store i32 %add41, i32* %s, align 4
  br label %if.end58

if.else:                                          ; preds = %land.lhs.true33, %if.end
  %26 = load i32* %sq.addr, align 4
  %add42 = add nsw i32 %26, 13
  %idxprom43 = sext i32 %add42 to i64
  %arrayidx44 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom43
  %27 = load i32* %arrayidx44, align 4
  %add45 = add nsw i32 %27, 1
  %shr46 = ashr i32 %add45, 1
  %cmp47 = icmp eq i32 %shr46, 1
  br i1 %cmp47, label %land.lhs.true48, label %if.end57

land.lhs.true48:                                  ; preds = %if.else
  %28 = load i32* %sq.addr, align 4
  %add49 = add nsw i32 %28, 13
  %idxprom50 = sext i32 %add49 to i64
  %arrayidx51 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom50
  %29 = load i32* %arrayidx51, align 4
  %add52 = add nsw i32 %29, 1
  %and53 = and i32 %add52, 1
  %30 = load i32* %c.addr, align 4
  %cmp54 = icmp eq i32 %and53, %30
  br i1 %cmp54, label %if.then55, label %if.end57

if.then55:                                        ; preds = %land.lhs.true48
  %31 = load i32* %s, align 4
  %add56 = add nsw i32 %31, 1
  store i32 %add56, i32* %s, align 4
  br label %if.end57

if.end57:                                         ; preds = %if.then55, %land.lhs.true48, %if.else
  br label %if.end58

if.end58:                                         ; preds = %if.end57, %if.then40
  %32 = load i32* %c.addr, align 4
  %cmp59 = icmp eq i32 %32, 1
  br i1 %cmp59, label %if.then60, label %if.end61

if.then60:                                        ; preds = %if.end58
  %33 = load i32* %s, align 4
  %sub = sub nsw i32 0, %33
  store i32 %sub, i32* %s, align 4
  br label %if.end61

if.end61:                                         ; preds = %if.then60, %if.end58
  %34 = load i32* %s, align 4
  ret i32 %34
}

; Function Attrs: nounwind uwtable
define internal i32 @ErrorIt(i32 %sq, i32 %c) #0 {
entry:
  %sq.addr = alloca i32, align 4
  %sq.addr1 = bitcast i32* %sq.addr to i32*
  %bitcast = bitcast i32* %sq.addr to i8*
  %mtmp = getelementptr i32* %sq.addr1, i32 1
  %bitcast2 = bitcast i32* %mtmp to i8*
  %c.addr = alloca i32, align 4
  %c.addr3 = bitcast i32* %c.addr to i32*
  %bitcast4 = bitcast i32* %c.addr to i8*
  %mtmp5 = getelementptr i32* %c.addr3, i32 1
  %bitcast6 = bitcast i32* %mtmp5 to i8*
  store i32 %sq, i32* %sq.addr, align 4
  store i32 %c, i32* %c.addr, align 4
  %0 = load i32* %sq.addr, align 4
  %1 = load i32* %c.addr, align 4
  %call = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([35 x i8]* @.str22, i32 0, i32 0), i32 %0, i32 %1)
  ret i32 0
}

; Function Attrs: nounwind uwtable
define internal i32 @std_eval(i32 %alpha, i32 %beta) #0 {
entry:
  %base.alloca = alloca i8*
  %bound.alloca = alloca i8*
  %retval = alloca i32, align 4
  %retval1363 = bitcast i32* %retval to i32*
  %bitcast = bitcast i32* %retval to i8*
  %mtmp = getelementptr i32* %retval1363, i32 1
  %bitcast1364 = bitcast i32* %mtmp to i8*
  %alpha.addr = alloca i32, align 4
  %alpha.addr1365 = bitcast i32* %alpha.addr to i32*
  %bitcast1366 = bitcast i32* %alpha.addr to i8*
  %mtmp1367 = getelementptr i32* %alpha.addr1365, i32 1
  %bitcast1368 = bitcast i32* %mtmp1367 to i8*
  %beta.addr = alloca i32, align 4
  %beta.addr1369 = bitcast i32* %beta.addr to i32*
  %bitcast1370 = bitcast i32* %beta.addr to i8*
  %mtmp1371 = getelementptr i32* %beta.addr1369, i32 1
  %bitcast1372 = bitcast i32* %mtmp1371 to i8*
  %i = alloca i32, align 4
  %i1373 = bitcast i32* %i to i32*
  %bitcast1374 = bitcast i32* %i to i8*
  %mtmp1375 = getelementptr i32* %i1373, i32 1
  %bitcast1376 = bitcast i32* %mtmp1375 to i8*
  %a = alloca i32, align 4
  %a1377 = bitcast i32* %a to i32*
  %bitcast1378 = bitcast i32* %a to i8*
  %mtmp1379 = getelementptr i32* %a1377, i32 1
  %bitcast1380 = bitcast i32* %mtmp1379 to i8*
  %pawn_file = alloca i32, align 4
  %pawn_file1381 = bitcast i32* %pawn_file to i32*
  %bitcast1382 = bitcast i32* %pawn_file to i8*
  %mtmp1383 = getelementptr i32* %pawn_file1381, i32 1
  %bitcast1384 = bitcast i32* %mtmp1383 to i8*
  %pawns = alloca [2 x [11 x i32]], align 16
  %pawns1385 = bitcast [2 x [11 x i32]]* %pawns to [2 x [11 x i32]]*
  %bitcast1386 = bitcast [2 x [11 x i32]]* %pawns to i8*
  %mtmp1387 = getelementptr [2 x [11 x i32]]* %pawns1385, i32 1
  %bitcast1388 = bitcast [2 x [11 x i32]]* %mtmp1387 to i8*
  %white_back_pawn = alloca [11 x i32], align 16
  %white_back_pawn1389 = bitcast [11 x i32]* %white_back_pawn to [11 x i32]*
  %bitcast1390 = bitcast [11 x i32]* %white_back_pawn to i8*
  %mtmp1391 = getelementptr [11 x i32]* %white_back_pawn1389, i32 1
  %bitcast1392 = bitcast [11 x i32]* %mtmp1391 to i8*
  %black_back_pawn = alloca [11 x i32], align 16
  %black_back_pawn1393 = bitcast [11 x i32]* %black_back_pawn to [11 x i32]*
  %bitcast1394 = bitcast [11 x i32]* %black_back_pawn to i8*
  %mtmp1395 = getelementptr [11 x i32]* %black_back_pawn1393, i32 1
  %bitcast1396 = bitcast [11 x i32]* %mtmp1395 to i8*
  %srank = alloca i32, align 4
  %srank1397 = bitcast i32* %srank to i32*
  %bitcast1398 = bitcast i32* %srank to i8*
  %mtmp1399 = getelementptr i32* %srank1397, i32 1
  %bitcast1400 = bitcast i32* %mtmp1399 to i8*
  %wking_pawn_file = alloca i32, align 4
  %wking_pawn_file1401 = bitcast i32* %wking_pawn_file to i32*
  %bitcast1402 = bitcast i32* %wking_pawn_file to i8*
  %mtmp1403 = getelementptr i32* %wking_pawn_file1401, i32 1
  %bitcast1404 = bitcast i32* %mtmp1403 to i8*
  %bking_pawn_file = alloca i32, align 4
  %bking_pawn_file1405 = bitcast i32* %bking_pawn_file to i32*
  %bitcast1406 = bitcast i32* %bking_pawn_file to i8*
  %mtmp1407 = getelementptr i32* %bking_pawn_file1405, i32 1
  %bitcast1408 = bitcast i32* %mtmp1407 to i8*
  %j = alloca i32, align 4
  %j1409 = bitcast i32* %j to i32*
  %bitcast1410 = bitcast i32* %j to i8*
  %mtmp1411 = getelementptr i32* %j1409, i32 1
  %bitcast1412 = bitcast i32* %mtmp1411 to i8*
  %score = alloca i32, align 4
  %score1413 = bitcast i32* %score to i32*
  %bitcast1414 = bitcast i32* %score to i8*
  %mtmp1415 = getelementptr i32* %score1413, i32 1
  %bitcast1416 = bitcast i32* %mtmp1415 to i8*
  %isolated = alloca i32, align 4
  %isolated1417 = bitcast i32* %isolated to i32*
  %bitcast1418 = bitcast i32* %isolated to i8*
  %mtmp1419 = getelementptr i32* %isolated1417, i32 1
  %bitcast1420 = bitcast i32* %mtmp1419 to i8*
  %backwards = alloca i32, align 4
  %backwards1421 = bitcast i32* %backwards to i32*
  %bitcast1422 = bitcast i32* %backwards to i8*
  %mtmp1423 = getelementptr i32* %backwards1421, i32 1
  %bitcast1424 = bitcast i32* %mtmp1423 to i8*
  %in_cache = alloca i32, align 4
  %in_cache1425 = bitcast i32* %in_cache to i32*
  %bitcast1426 = bitcast i32* %in_cache to i8*
  %mtmp1427 = getelementptr i32* %in_cache1425, i32 1
  %bitcast1428 = bitcast i32* %mtmp1427 to i8*
  %wp = alloca i32, align 4
  %wp1429 = bitcast i32* %wp to i32*
  %bitcast1430 = bitcast i32* %wp to i8*
  %mtmp1431 = getelementptr i32* %wp1429, i32 1
  %bitcast1432 = bitcast i32* %mtmp1431 to i8*
  %bp = alloca i32, align 4
  %bp1433 = bitcast i32* %bp to i32*
  %bitcast1434 = bitcast i32* %bp to i8*
  %mtmp1435 = getelementptr i32* %bp1433, i32 1
  %bitcast1436 = bitcast i32* %mtmp1435 to i8*
  %wn = alloca i32, align 4
  %wn1437 = bitcast i32* %wn to i32*
  %bitcast1438 = bitcast i32* %wn to i8*
  %mtmp1439 = getelementptr i32* %wn1437, i32 1
  %bitcast1440 = bitcast i32* %mtmp1439 to i8*
  %bn = alloca i32, align 4
  %bn1441 = bitcast i32* %bn to i32*
  %bitcast1442 = bitcast i32* %bn to i8*
  %mtmp1443 = getelementptr i32* %bn1441, i32 1
  %bitcast1444 = bitcast i32* %mtmp1443 to i8*
  %wb = alloca i32, align 4
  %wb1445 = bitcast i32* %wb to i32*
  %bitcast1446 = bitcast i32* %wb to i8*
  %mtmp1447 = getelementptr i32* %wb1445, i32 1
  %bitcast1448 = bitcast i32* %mtmp1447 to i8*
  %bb = alloca i32, align 4
  %bb1449 = bitcast i32* %bb to i32*
  %bitcast1450 = bitcast i32* %bb to i8*
  %mtmp1451 = getelementptr i32* %bb1449, i32 1
  %bitcast1452 = bitcast i32* %mtmp1451 to i8*
  %wq = alloca i32, align 4
  %wq1453 = bitcast i32* %wq to i32*
  %bitcast1454 = bitcast i32* %wq to i8*
  %mtmp1455 = getelementptr i32* %wq1453, i32 1
  %bitcast1456 = bitcast i32* %mtmp1455 to i8*
  %bq = alloca i32, align 4
  %bq1457 = bitcast i32* %bq to i32*
  %bitcast1458 = bitcast i32* %bq to i8*
  %mtmp1459 = getelementptr i32* %bq1457, i32 1
  %bitcast1460 = bitcast i32* %mtmp1459 to i8*
  %wr = alloca i32, align 4
  %wr1461 = bitcast i32* %wr to i32*
  %bitcast1462 = bitcast i32* %wr to i8*
  %mtmp1463 = getelementptr i32* %wr1461, i32 1
  %bitcast1464 = bitcast i32* %mtmp1463 to i8*
  %br = alloca i32, align 4
  %br1465 = bitcast i32* %br to i32*
  %bitcast1466 = bitcast i32* %br to i8*
  %mtmp1467 = getelementptr i32* %br1465, i32 1
  %bitcast1468 = bitcast i32* %mtmp1467 to i8*
  %rbrook = alloca i32, align 4
  %rbrook1469 = bitcast i32* %rbrook to i32*
  %bitcast1470 = bitcast i32* %rbrook to i8*
  %mtmp1471 = getelementptr i32* %rbrook1469, i32 1
  %bitcast1472 = bitcast i32* %mtmp1471 to i8*
  %fbrook = alloca i32, align 4
  %fbrook1473 = bitcast i32* %fbrook to i32*
  %bitcast1474 = bitcast i32* %fbrook to i8*
  %mtmp1475 = getelementptr i32* %fbrook1473, i32 1
  %bitcast1476 = bitcast i32* %mtmp1475 to i8*
  %rwrook = alloca i32, align 4
  %rwrook1477 = bitcast i32* %rwrook to i32*
  %bitcast1478 = bitcast i32* %rwrook to i8*
  %mtmp1479 = getelementptr i32* %rwrook1477, i32 1
  %bitcast1480 = bitcast i32* %mtmp1479 to i8*
  %fwrook = alloca i32, align 4
  %fwrook1481 = bitcast i32* %fwrook to i32*
  %bitcast1482 = bitcast i32* %fwrook to i8*
  %mtmp1483 = getelementptr i32* %fwrook1481, i32 1
  %bitcast1484 = bitcast i32* %mtmp1483 to i8*
  %wpotential = alloca i32, align 4
  %wpotential1485 = bitcast i32* %wpotential to i32*
  %bitcast1486 = bitcast i32* %wpotential to i8*
  %mtmp1487 = getelementptr i32* %wpotential1485, i32 1
  %bitcast1488 = bitcast i32* %mtmp1487 to i8*
  %bpotential = alloca i32, align 4
  %bpotential1489 = bitcast i32* %bpotential to i32*
  %bitcast1490 = bitcast i32* %bpotential to i8*
  %mtmp1491 = getelementptr i32* %bpotential1489, i32 1
  %bitcast1492 = bitcast i32* %mtmp1491 to i8*
  %tmp = alloca i32, align 4
  %tmp1493 = bitcast i32* %tmp to i32*
  %bitcast1494 = bitcast i32* %tmp to i8*
  %mtmp1495 = getelementptr i32* %tmp1493, i32 1
  %bitcast1496 = bitcast i32* %mtmp1495 to i8*
  %wksafety = alloca i32, align 4
  %wksafety1497 = bitcast i32* %wksafety to i32*
  %bitcast1498 = bitcast i32* %wksafety to i8*
  %mtmp1499 = getelementptr i32* %wksafety1497, i32 1
  %bitcast1500 = bitcast i32* %mtmp1499 to i8*
  %bksafety = alloca i32, align 4
  %bksafety1501 = bitcast i32* %bksafety to i32*
  %bitcast1502 = bitcast i32* %bksafety to i8*
  %mtmp1503 = getelementptr i32* %bksafety1501, i32 1
  %bitcast1504 = bitcast i32* %mtmp1503 to i8*
  store i32 %alpha, i32* %alpha.addr, align 4
  store i32 %beta, i32* %beta.addr, align 4
  store i32 0, i32* %score, align 4
  %0 = load i32* @white_to_move, align 4
  %tobool = icmp ne i32 %0, 0
  br i1 %tobool, label %cond.true, label %cond.false

cond.true:                                        ; preds = %entry
  %1 = load i32* @Material, align 4
  br label %cond.end

cond.false:                                       ; preds = %entry
  %2 = load i32* @Material, align 4
  %sub = sub nsw i32 0, %2
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %1, %cond.true ], [ %sub, %cond.false ]
  %3 = load i32* @maxposdiff, align 4
  %sub3 = sub nsw i32 %cond, %3
  %4 = load i32* %beta.addr, align 4
  %cmp = icmp sge i32 %sub3, %4
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %cond.end
  %5 = load i32* @white_to_move, align 4
  %tobool4 = icmp ne i32 %5, 0
  br i1 %tobool4, label %cond.true5, label %cond.false6

cond.true5:                                       ; preds = %if.then
  %6 = load i32* @Material, align 4
  br label %cond.end8

cond.false6:                                      ; preds = %if.then
  %7 = load i32* @Material, align 4
  %sub7 = sub nsw i32 0, %7
  br label %cond.end8

cond.end8:                                        ; preds = %cond.false6, %cond.true5
  %cond9 = phi i32 [ %6, %cond.true5 ], [ %sub7, %cond.false6 ]
  %8 = load i32* @maxposdiff, align 4
  %sub10 = sub nsw i32 %cond9, %8
  store i32 %sub10, i32* %retval
  br label %return

if.end:                                           ; preds = %cond.end
  %9 = load i32* @white_to_move, align 4
  %tobool11 = icmp ne i32 %9, 0
  br i1 %tobool11, label %cond.true12, label %cond.false13

cond.true12:                                      ; preds = %if.end
  %10 = load i32* @Material, align 4
  br label %cond.end15

cond.false13:                                     ; preds = %if.end
  %11 = load i32* @Material, align 4
  %sub14 = sub nsw i32 0, %11
  br label %cond.end15

cond.end15:                                       ; preds = %cond.false13, %cond.true12
  %cond16 = phi i32 [ %10, %cond.true12 ], [ %sub14, %cond.false13 ]
  %12 = load i32* @maxposdiff, align 4
  %add = add nsw i32 %cond16, %12
  %13 = load i32* %alpha.addr, align 4
  %cmp17 = icmp sle i32 %add, %13
  br i1 %cmp17, label %if.then18, label %if.end26

if.then18:                                        ; preds = %cond.end15
  %14 = load i32* @white_to_move, align 4
  %tobool19 = icmp ne i32 %14, 0
  br i1 %tobool19, label %cond.true20, label %cond.false21

cond.true20:                                      ; preds = %if.then18
  %15 = load i32* @Material, align 4
  br label %cond.end23

cond.false21:                                     ; preds = %if.then18
  %16 = load i32* @Material, align 4
  %sub22 = sub nsw i32 0, %16
  br label %cond.end23

cond.end23:                                       ; preds = %cond.false21, %cond.true20
  %cond24 = phi i32 [ %15, %cond.true20 ], [ %sub22, %cond.false21 ]
  %17 = load i32* @maxposdiff, align 4
  %add25 = add nsw i32 %cond24, %17
  store i32 %add25, i32* %retval
  br label %return

if.end26:                                         ; preds = %cond.end15
  store i32 0, i32* %in_cache, align 4
  call void @__softboundcets_allocate_shadow_stack_space(i32 3)
  call void @__softboundcets_store_base_shadow_stack(i8* %bitcast1414, i32 1)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bitcast1416, i32 1)
  call void @__softboundcets_store_base_shadow_stack(i8* %bitcast1426, i32 2)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bitcast1428, i32 2)
  call void @checkECache(i32* %score, i32* %in_cache)
  call void @__softboundcets_deallocate_shadow_stack_space()
  %18 = load i32* %in_cache, align 4
  %tobool27 = icmp ne i32 %18, 0
  br i1 %tobool27, label %if.then28, label %if.end33

if.then28:                                        ; preds = %if.end26
  %19 = load i32* @white_to_move, align 4
  %cmp29 = icmp eq i32 %19, 1
  br i1 %cmp29, label %if.then30, label %if.end31

if.then30:                                        ; preds = %if.then28
  %20 = load i32* %score, align 4
  store i32 %20, i32* %retval
  br label %return

if.end31:                                         ; preds = %if.then28
  %21 = load i32* %score, align 4
  %sub32 = sub nsw i32 0, %21
  store i32 %sub32, i32* %retval
  br label %return

if.end33:                                         ; preds = %if.end26
  %22 = bitcast [2 x [11 x i32]]* %pawns to i8*
  call void @__softboundcets_memset_check(i8* %22, i64 88, i8* %bitcast1386, i8* %bitcast1388)
  call void @llvm.memset.p0i8.i64(i8* %22, i8 0, i64 88, i32 16, i1 false)
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.end33
  %23 = load i32* %i, align 4
  %cmp34 = icmp slt i32 %23, 11
  br i1 %cmp34, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %24 = load i32* %i, align 4
  %idxprom = sext i32 %24 to i64
  %arrayidx = getelementptr inbounds [11 x i32]* %white_back_pawn, i32 0, i64 %idxprom
  store i32 7, i32* %arrayidx, align 4
  %25 = load i32* %i, align 4
  %idxprom35 = sext i32 %25 to i64
  %arrayidx36 = getelementptr inbounds [11 x i32]* %black_back_pawn, i32 0, i64 %idxprom35
  store i32 2, i32* %arrayidx36, align 4
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %26 = load i32* %i, align 4
  %inc = add nsw i32 %26, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  store i32 0, i32* @wmat, align 4
  store i32 0, i32* @bmat, align 4
  %27 = load i32* @wking_loc, align 4
  store i32 %27, i32* getelementptr inbounds ([2 x i32]* @king_locs, i32 0, i64 0), align 4
  %28 = load i32* @bking_loc, align 4
  store i32 %28, i32* getelementptr inbounds ([2 x i32]* @king_locs, i32 0, i64 1), align 4
  store i32 1, i32* %j, align 4
  store i32 1, i32* %a, align 4
  br label %for.cond37

for.cond37:                                       ; preds = %for.inc116, %for.end
  %29 = load i32* %a, align 4
  %30 = load i32* @piece_count, align 4
  %cmp38 = icmp sle i32 %29, %30
  br i1 %cmp38, label %for.body39, label %for.end118

for.body39:                                       ; preds = %for.cond37
  %31 = load i32* %j, align 4
  %idxprom40 = sext i32 %31 to i64
  %arrayidx41 = getelementptr inbounds [62 x i32]* @pieces, i32 0, i64 %idxprom40
  %32 = load i32* %arrayidx41, align 4
  store i32 %32, i32* %i, align 4
  %33 = load i32* %i, align 4
  %tobool42 = icmp ne i32 %33, 0
  br i1 %tobool42, label %if.else, label %if.then43

if.then43:                                        ; preds = %for.body39
  br label %for.inc116

if.else:                                          ; preds = %for.body39
  %34 = load i32* %a, align 4
  %inc44 = add nsw i32 %34, 1
  store i32 %inc44, i32* %a, align 4
  br label %if.end45

if.end45:                                         ; preds = %if.else
  %35 = load i32* %i, align 4
  %idxprom46 = sext i32 %35 to i64
  %arrayidx47 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom46
  %36 = load i32* %arrayidx47, align 4
  %add48 = add nsw i32 %36, 1
  %shr = ashr i32 %add48, 1
  %cmp49 = icmp ne i32 %shr, 1
  br i1 %cmp49, label %land.lhs.true, label %if.end73

land.lhs.true:                                    ; preds = %if.end45
  %37 = load i32* %i, align 4
  %idxprom50 = sext i32 %37 to i64
  %arrayidx51 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom50
  %38 = load i32* %arrayidx51, align 4
  %add52 = add nsw i32 %38, 1
  %shr53 = ashr i32 %add52, 1
  %cmp54 = icmp ne i32 %shr53, 3
  br i1 %cmp54, label %if.then55, label %if.end73

if.then55:                                        ; preds = %land.lhs.true
  %39 = load i32* %i, align 4
  %idxprom56 = sext i32 %39 to i64
  %arrayidx57 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom56
  %40 = load i32* %arrayidx57, align 4
  %add58 = add nsw i32 %40, 1
  %and = and i32 %add58, 1
  %cmp59 = icmp eq i32 %and, 0
  br i1 %cmp59, label %if.then60, label %if.else66

if.then60:                                        ; preds = %if.then55
  %41 = load i32* %i, align 4
  %idxprom61 = sext i32 %41 to i64
  %arrayidx62 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom61
  %42 = load i32* %arrayidx62, align 4
  %idxprom63 = sext i32 %42 to i64
  %arrayidx64 = getelementptr inbounds [14 x i32]* @material, i32 0, i64 %idxprom63
  %43 = load i32* %arrayidx64, align 4
  %44 = load i32* @wmat, align 4
  %add65 = add nsw i32 %44, %43
  store i32 %add65, i32* @wmat, align 4
  br label %if.end72

if.else66:                                        ; preds = %if.then55
  %45 = load i32* %i, align 4
  %idxprom67 = sext i32 %45 to i64
  %arrayidx68 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom67
  %46 = load i32* %arrayidx68, align 4
  %idxprom69 = sext i32 %46 to i64
  %arrayidx70 = getelementptr inbounds [14 x i32]* @material, i32 0, i64 %idxprom69
  %47 = load i32* %arrayidx70, align 4
  %call = call i32 @softboundcets_abs(i32 %47) #5
  %48 = load i32* @bmat, align 4
  %add71 = add nsw i32 %48, %call
  store i32 %add71, i32* @bmat, align 4
  br label %if.end72

if.end72:                                         ; preds = %if.else66, %if.then60
  br label %if.end73

if.end73:                                         ; preds = %if.end72, %land.lhs.true, %if.end45
  %49 = load i32* %i, align 4
  %idxprom74 = sext i32 %49 to i64
  %arrayidx75 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom74
  %50 = load i32* %arrayidx75, align 4
  %add76 = add nsw i32 %50, 1
  %shr77 = ashr i32 %add76, 1
  %cmp78 = icmp eq i32 %shr77, 1
  br i1 %cmp78, label %if.then79, label %if.end115

if.then79:                                        ; preds = %if.end73
  %51 = load i32* %i, align 4
  %idxprom80 = sext i32 %51 to i64
  %arrayidx81 = getelementptr inbounds [144 x i32]* @Xfile, i32 0, i64 %idxprom80
  %52 = load i32* %arrayidx81, align 4
  %add82 = add nsw i32 %52, 1
  store i32 %add82, i32* %pawn_file, align 4
  %53 = load i32* %i, align 4
  %idxprom83 = sext i32 %53 to i64
  %arrayidx84 = getelementptr inbounds [144 x i32]* @Xrank, i32 0, i64 %idxprom83
  %54 = load i32* %arrayidx84, align 4
  store i32 %54, i32* %srank, align 4
  %55 = load i32* %i, align 4
  %idxprom85 = sext i32 %55 to i64
  %arrayidx86 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom85
  %56 = load i32* %arrayidx86, align 4
  %add87 = add nsw i32 %56, 1
  %and88 = and i32 %add87, 1
  %cmp89 = icmp eq i32 %and88, 0
  br i1 %cmp89, label %if.then90, label %if.else102

if.then90:                                        ; preds = %if.then79
  %57 = load i32* %pawn_file, align 4
  %idxprom91 = sext i32 %57 to i64
  %arrayidx92 = getelementptr inbounds [2 x [11 x i32]]* %pawns, i32 0, i64 1
  %arrayidx93 = getelementptr inbounds [11 x i32]* %arrayidx92, i32 0, i64 %idxprom91
  %58 = load i32* %arrayidx93, align 4
  %inc94 = add nsw i32 %58, 1
  store i32 %inc94, i32* %arrayidx93, align 4
  %59 = load i32* %srank, align 4
  %60 = load i32* %pawn_file, align 4
  %idxprom95 = sext i32 %60 to i64
  %arrayidx96 = getelementptr inbounds [11 x i32]* %white_back_pawn, i32 0, i64 %idxprom95
  %61 = load i32* %arrayidx96, align 4
  %cmp97 = icmp slt i32 %59, %61
  br i1 %cmp97, label %if.then98, label %if.end101

if.then98:                                        ; preds = %if.then90
  %62 = load i32* %srank, align 4
  %63 = load i32* %pawn_file, align 4
  %idxprom99 = sext i32 %63 to i64
  %arrayidx100 = getelementptr inbounds [11 x i32]* %white_back_pawn, i32 0, i64 %idxprom99
  store i32 %62, i32* %arrayidx100, align 4
  br label %if.end101

if.end101:                                        ; preds = %if.then98, %if.then90
  br label %if.end114

if.else102:                                       ; preds = %if.then79
  %64 = load i32* %pawn_file, align 4
  %idxprom103 = sext i32 %64 to i64
  %arrayidx104 = getelementptr inbounds [2 x [11 x i32]]* %pawns, i32 0, i64 0
  %arrayidx105 = getelementptr inbounds [11 x i32]* %arrayidx104, i32 0, i64 %idxprom103
  %65 = load i32* %arrayidx105, align 4
  %inc106 = add nsw i32 %65, 1
  store i32 %inc106, i32* %arrayidx105, align 4
  %66 = load i32* %srank, align 4
  %67 = load i32* %pawn_file, align 4
  %idxprom107 = sext i32 %67 to i64
  %arrayidx108 = getelementptr inbounds [11 x i32]* %black_back_pawn, i32 0, i64 %idxprom107
  %68 = load i32* %arrayidx108, align 4
  %cmp109 = icmp sgt i32 %66, %68
  br i1 %cmp109, label %if.then110, label %if.end113

if.then110:                                       ; preds = %if.else102
  %69 = load i32* %srank, align 4
  %70 = load i32* %pawn_file, align 4
  %idxprom111 = sext i32 %70 to i64
  %arrayidx112 = getelementptr inbounds [11 x i32]* %black_back_pawn, i32 0, i64 %idxprom111
  store i32 %69, i32* %arrayidx112, align 4
  br label %if.end113

if.end113:                                        ; preds = %if.then110, %if.else102
  br label %if.end114

if.end114:                                        ; preds = %if.end113, %if.end101
  br label %if.end115

if.end115:                                        ; preds = %if.end114, %if.end73
  br label %for.inc116

for.inc116:                                       ; preds = %if.end115, %if.then43
  %71 = load i32* %j, align 4
  %inc117 = add nsw i32 %71, 1
  store i32 %inc117, i32* %j, align 4
  br label %for.cond37

for.end118:                                       ; preds = %for.cond37
  store i32 0, i32* %wpotential, align 4
  store i32 0, i32* %bpotential, align 4
  store i32 0, i32* %wksafety, align 4
  store i32 0, i32* %bksafety, align 4
  store i32 0, i32* %rbrook, align 4
  store i32 0, i32* %fbrook, align 4
  store i32 0, i32* %rwrook, align 4
  store i32 0, i32* %fwrook, align 4
  store i32 0, i32* %wp, align 4
  store i32 0, i32* %bp, align 4
  store i32 0, i32* %wb, align 4
  store i32 0, i32* %bb, align 4
  store i32 0, i32* %wn, align 4
  store i32 0, i32* %bn, align 4
  store i32 0, i32* %wr, align 4
  store i32 0, i32* %br, align 4
  store i32 0, i32* %wq, align 4
  store i32 0, i32* %bq, align 4
  store i32 1, i32* %j, align 4
  store i32 1, i32* %a, align 4
  br label %for.cond119

for.cond119:                                      ; preds = %for.inc991, %for.end118
  %72 = load i32* %a, align 4
  %73 = load i32* @piece_count, align 4
  %cmp120 = icmp sle i32 %72, %73
  br i1 %cmp120, label %for.body121, label %for.end993

for.body121:                                      ; preds = %for.cond119
  %74 = load i32* %j, align 4
  %idxprom122 = sext i32 %74 to i64
  %arrayidx123 = getelementptr inbounds [62 x i32]* @pieces, i32 0, i64 %idxprom122
  %75 = load i32* %arrayidx123, align 4
  store i32 %75, i32* %i, align 4
  %76 = load i32* %i, align 4
  %tobool124 = icmp ne i32 %76, 0
  br i1 %tobool124, label %if.else126, label %if.then125

if.then125:                                       ; preds = %for.body121
  br label %for.inc991

if.else126:                                       ; preds = %for.body121
  %77 = load i32* %a, align 4
  %inc127 = add nsw i32 %77, 1
  store i32 %inc127, i32* %a, align 4
  br label %if.end128

if.end128:                                        ; preds = %if.else126
  %78 = load i32* %i, align 4
  %idxprom129 = sext i32 %78 to i64
  %arrayidx130 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom129
  %79 = load i32* %arrayidx130, align 4
  %add131 = add nsw i32 %79, 1
  %shr132 = ashr i32 %add131, 1
  %idxprom133 = sext i32 %shr132 to i64
  %bitcast1505 = bitcast [7 x i32 (i32, i32)*]* @evalRoutines to i8*
  %bitcast1506 = bitcast [7 x i32 (i32, i32)*]* getelementptr inbounds ([7 x i32 (i32, i32)*]* @evalRoutines, i32 1) to i8*
  %arrayidx134 = getelementptr inbounds [7 x i32 (i32, i32)*]* @evalRoutines, i32 0, i64 %idxprom133
  %80 = load i32 (i32, i32)** %arrayidx134, align 8
  %bitcast1507 = bitcast i32 (i32, i32)** %arrayidx134 to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast1507, i8** %base.alloca, i8** %bound.alloca)
  %base.load = load i8** %base.alloca
  %bound.load = load i8** %bound.alloca
  %81 = load i32* %i, align 4
  %82 = load i32* %i, align 4
  %idxprom135 = sext i32 %82 to i64
  %arrayidx136 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom135
  %83 = load i32* %arrayidx136, align 4
  %add137 = add nsw i32 %83, 1
  %and138 = and i32 %add137, 1
  %call139 = call i32 %80(i32 %81, i32 %and138)
  %84 = load i32* %score, align 4
  %add140 = add nsw i32 %84, %call139
  store i32 %add140, i32* %score, align 4
  %85 = load i32* %i, align 4
  %idxprom141 = sext i32 %85 to i64
  %arrayidx142 = getelementptr inbounds [144 x i32]* @Xfile, i32 0, i64 %idxprom141
  %86 = load i32* %arrayidx142, align 4
  %add143 = add nsw i32 %86, 1
  store i32 %add143, i32* %pawn_file, align 4
  %87 = load i32* %i, align 4
  %idxprom144 = sext i32 %87 to i64
  %arrayidx145 = getelementptr inbounds [144 x i32]* @Xrank, i32 0, i64 %idxprom144
  %88 = load i32* %arrayidx145, align 4
  store i32 %88, i32* %srank, align 4
  %89 = load i32* %i, align 4
  %idxprom146 = sext i32 %89 to i64
  %arrayidx147 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom146
  %90 = load i32* %arrayidx147, align 4
  switch i32 %90, label %sw.epilog [
    i32 1, label %sw.bb
    i32 2, label %sw.bb414
    i32 7, label %sw.bb685
    i32 8, label %sw.bb726
    i32 11, label %sw.bb767
    i32 12, label %sw.bb769
    i32 3, label %sw.bb771
    i32 4, label %sw.bb773
    i32 9, label %sw.bb775
    i32 10, label %sw.bb777
    i32 5, label %sw.bb779
    i32 6, label %sw.bb882
  ]

sw.bb:                                            ; preds = %if.end128
  store i32 0, i32* %isolated, align 4
  store i32 0, i32* %backwards, align 4
  %91 = load i32* %i, align 4
  %idxprom148 = sext i32 %91 to i64
  %bitcast1508 = bitcast [144 x i32]* @swhite_pawn to i8*
  %bitcast1509 = bitcast [144 x i32]* getelementptr inbounds ([144 x i32]* @swhite_pawn, i32 1) to i8*
  %arrayidx149 = getelementptr inbounds [144 x i32]* @swhite_pawn, i32 0, i64 %idxprom148
  %92 = load i32* %arrayidx149, align 4
  %93 = load i32* %score, align 4
  %add150 = add nsw i32 %93, %92
  store i32 %add150, i32* %score, align 4
  %94 = load i32* %wp, align 4
  %inc151 = add nsw i32 %94, 1
  store i32 %inc151, i32* %wp, align 4
  %95 = load i32* %pawn_file, align 4
  %add152 = add nsw i32 %95, 1
  %idxprom153 = sext i32 %add152 to i64
  %arrayidx154 = getelementptr inbounds [11 x i32]* %white_back_pawn, i32 0, i64 %idxprom153
  %96 = load i32* %arrayidx154, align 4
  %97 = load i32* %srank, align 4
  %cmp155 = icmp sgt i32 %96, %97
  br i1 %cmp155, label %land.lhs.true156, label %if.end177

land.lhs.true156:                                 ; preds = %sw.bb
  %98 = load i32* %pawn_file, align 4
  %sub157 = sub nsw i32 %98, 1
  %idxprom158 = sext i32 %sub157 to i64
  %arrayidx159 = getelementptr inbounds [11 x i32]* %white_back_pawn, i32 0, i64 %idxprom158
  %99 = load i32* %arrayidx159, align 4
  %100 = load i32* %srank, align 4
  %cmp160 = icmp sgt i32 %99, %100
  br i1 %cmp160, label %if.then161, label %if.end177

if.then161:                                       ; preds = %land.lhs.true156
  %101 = load i32* %score, align 4
  %sub162 = sub nsw i32 %101, 8
  store i32 %sub162, i32* %score, align 4
  store i32 1, i32* %backwards, align 4
  %102 = load i32* %pawn_file, align 4
  %add163 = add nsw i32 %102, 1
  %idxprom164 = sext i32 %add163 to i64
  %arrayidx165 = getelementptr inbounds [2 x [11 x i32]]* %pawns, i32 0, i64 1
  %arrayidx166 = getelementptr inbounds [11 x i32]* %arrayidx165, i32 0, i64 %idxprom164
  %103 = load i32* %arrayidx166, align 4
  %tobool167 = icmp ne i32 %103, 0
  br i1 %tobool167, label %if.end176, label %land.lhs.true168

land.lhs.true168:                                 ; preds = %if.then161
  %104 = load i32* %pawn_file, align 4
  %sub169 = sub nsw i32 %104, 1
  %idxprom170 = sext i32 %sub169 to i64
  %arrayidx171 = getelementptr inbounds [2 x [11 x i32]]* %pawns, i32 0, i64 1
  %arrayidx172 = getelementptr inbounds [11 x i32]* %arrayidx171, i32 0, i64 %idxprom170
  %105 = load i32* %arrayidx172, align 4
  %tobool173 = icmp ne i32 %105, 0
  br i1 %tobool173, label %if.end176, label %if.then174

if.then174:                                       ; preds = %land.lhs.true168
  %106 = load i32* %score, align 4
  %sub175 = sub nsw i32 %106, 5
  store i32 %sub175, i32* %score, align 4
  store i32 1, i32* %isolated, align 4
  br label %if.end176

if.end176:                                        ; preds = %if.then174, %land.lhs.true168, %if.then161
  br label %if.end177

if.end177:                                        ; preds = %if.end176, %land.lhs.true156, %sw.bb
  %107 = load i32* %pawn_file, align 4
  %idxprom178 = sext i32 %107 to i64
  %arrayidx179 = getelementptr inbounds [2 x [11 x i32]]* %pawns, i32 0, i64 0
  %arrayidx180 = getelementptr inbounds [11 x i32]* %arrayidx179, i32 0, i64 %idxprom178
  %108 = load i32* %arrayidx180, align 4
  %tobool181 = icmp ne i32 %108, 0
  br i1 %tobool181, label %if.end191, label %if.then182

if.then182:                                       ; preds = %if.end177
  %109 = load i32* %backwards, align 4
  %tobool183 = icmp ne i32 %109, 0
  br i1 %tobool183, label %if.then184, label %if.end186

if.then184:                                       ; preds = %if.then182
  %110 = load i32* %score, align 4
  %sub185 = sub nsw i32 %110, 3
  store i32 %sub185, i32* %score, align 4
  br label %if.end186

if.end186:                                        ; preds = %if.then184, %if.then182
  %111 = load i32* %isolated, align 4
  %tobool187 = icmp ne i32 %111, 0
  br i1 %tobool187, label %if.then188, label %if.end190

if.then188:                                       ; preds = %if.end186
  %112 = load i32* %score, align 4
  %sub189 = sub nsw i32 %112, 5
  store i32 %sub189, i32* %score, align 4
  br label %if.end190

if.end190:                                        ; preds = %if.then188, %if.end186
  br label %if.end191

if.end191:                                        ; preds = %if.end190, %if.end177
  %113 = load i32* %pawn_file, align 4
  %idxprom192 = sext i32 %113 to i64
  %arrayidx193 = getelementptr inbounds [2 x [11 x i32]]* %pawns, i32 0, i64 1
  %arrayidx194 = getelementptr inbounds [11 x i32]* %arrayidx193, i32 0, i64 %idxprom192
  %114 = load i32* %arrayidx194, align 4
  %cmp195 = icmp sgt i32 %114, 1
  br i1 %cmp195, label %if.then196, label %if.end202

if.then196:                                       ; preds = %if.end191
  %115 = load i32* %pawn_file, align 4
  %idxprom197 = sext i32 %115 to i64
  %arrayidx198 = getelementptr inbounds [2 x [11 x i32]]* %pawns, i32 0, i64 1
  %arrayidx199 = getelementptr inbounds [11 x i32]* %arrayidx198, i32 0, i64 %idxprom197
  %116 = load i32* %arrayidx199, align 4
  %sub200 = sub nsw i32 %116, 1
  %mul = mul nsw i32 3, %sub200
  %117 = load i32* %score, align 4
  %sub201 = sub nsw i32 %117, %mul
  store i32 %sub201, i32* %score, align 4
  br label %if.end202

if.end202:                                        ; preds = %if.then196, %if.end191
  %118 = load i32* %pawn_file, align 4
  %idxprom203 = sext i32 %118 to i64
  %arrayidx204 = getelementptr inbounds [2 x [11 x i32]]* %pawns, i32 0, i64 0
  %arrayidx205 = getelementptr inbounds [11 x i32]* %arrayidx204, i32 0, i64 %idxprom203
  %119 = load i32* %arrayidx205, align 4
  %tobool206 = icmp ne i32 %119, 0
  br i1 %tobool206, label %if.end405, label %land.lhs.true207

land.lhs.true207:                                 ; preds = %if.end202
  %120 = load i32* %srank, align 4
  %121 = load i32* %pawn_file, align 4
  %sub208 = sub nsw i32 %121, 1
  %idxprom209 = sext i32 %sub208 to i64
  %arrayidx210 = getelementptr inbounds [11 x i32]* %black_back_pawn, i32 0, i64 %idxprom209
  %122 = load i32* %arrayidx210, align 4
  %cmp211 = icmp sge i32 %120, %122
  br i1 %cmp211, label %land.lhs.true212, label %if.end405

land.lhs.true212:                                 ; preds = %land.lhs.true207
  %123 = load i32* %srank, align 4
  %124 = load i32* %pawn_file, align 4
  %add213 = add nsw i32 %124, 1
  %idxprom214 = sext i32 %add213 to i64
  %arrayidx215 = getelementptr inbounds [11 x i32]* %black_back_pawn, i32 0, i64 %idxprom214
  %125 = load i32* %arrayidx215, align 4
  %cmp216 = icmp sge i32 %123, %125
  br i1 %cmp216, label %if.then217, label %if.end405

if.then217:                                       ; preds = %land.lhs.true212
  %126 = load i32* %i, align 4
  %idxprom218 = sext i32 %126 to i64
  %bitcast1526 = bitcast [144 x i32]* @swhite_pawn to i8*
  %bitcast1527 = bitcast [144 x i32]* getelementptr inbounds ([144 x i32]* @swhite_pawn, i32 1) to i8*
  %arrayidx219 = getelementptr inbounds [144 x i32]* @swhite_pawn, i32 0, i64 %idxprom218
  %127 = load i32* %arrayidx219, align 4
  %mul220 = mul nsw i32 3, %127
  %add221 = add nsw i32 30, %mul220
  %128 = load i32* %score, align 4
  %add222 = add nsw i32 %128, %add221
  store i32 %add222, i32* %score, align 4
  %129 = load i32* @white_to_move, align 4
  %tobool223 = icmp ne i32 %129, 0
  br i1 %tobool223, label %if.then224, label %if.else268

if.then224:                                       ; preds = %if.then217
  %130 = load i32* %i, align 4
  %idxprom225 = sext i32 %130 to i64
  %arrayidx226 = getelementptr inbounds [144 x i32]* @Xfile, i32 0, i64 %idxprom225
  %131 = load i32* %arrayidx226, align 4
  %add227 = add nsw i32 110, %131
  %sub228 = sub nsw i32 %add227, 1
  store i32 %sub228, i32* %tmp, align 4
  %132 = load i32* @bking_loc, align 4
  %idxprom229 = sext i32 %132 to i64
  %arrayidx230 = getelementptr inbounds [144 x i32]* @Xfile, i32 0, i64 %idxprom229
  %133 = load i32* %arrayidx230, align 4
  %134 = load i32* %tmp, align 4
  %idxprom231 = sext i32 %134 to i64
  %arrayidx232 = getelementptr inbounds [144 x i32]* @Xfile, i32 0, i64 %idxprom231
  %135 = load i32* %arrayidx232, align 4
  %sub233 = sub nsw i32 %133, %135
  %call234 = call i32 @softboundcets_abs(i32 %sub233) #5
  %136 = load i32* @bking_loc, align 4
  %idxprom235 = sext i32 %136 to i64
  %arrayidx236 = getelementptr inbounds [144 x i32]* @Xrank, i32 0, i64 %idxprom235
  %137 = load i32* %arrayidx236, align 4
  %138 = load i32* %tmp, align 4
  %idxprom237 = sext i32 %138 to i64
  %arrayidx238 = getelementptr inbounds [144 x i32]* @Xrank, i32 0, i64 %idxprom237
  %139 = load i32* %arrayidx238, align 4
  %sub239 = sub nsw i32 %137, %139
  %call240 = call i32 @softboundcets_abs(i32 %sub239) #5
  %cmp241 = icmp sgt i32 %call234, %call240
  br i1 %cmp241, label %cond.true242, label %cond.false249

cond.true242:                                     ; preds = %if.then224
  %140 = load i32* @bking_loc, align 4
  %idxprom243 = sext i32 %140 to i64
  %arrayidx244 = getelementptr inbounds [144 x i32]* @Xfile, i32 0, i64 %idxprom243
  %141 = load i32* %arrayidx244, align 4
  %142 = load i32* %tmp, align 4
  %idxprom245 = sext i32 %142 to i64
  %arrayidx246 = getelementptr inbounds [144 x i32]* @Xfile, i32 0, i64 %idxprom245
  %143 = load i32* %arrayidx246, align 4
  %sub247 = sub nsw i32 %141, %143
  %call248 = call i32 @softboundcets_abs(i32 %sub247) #5
  br label %cond.end256

cond.false249:                                    ; preds = %if.then224
  %144 = load i32* @bking_loc, align 4
  %idxprom250 = sext i32 %144 to i64
  %arrayidx251 = getelementptr inbounds [144 x i32]* @Xrank, i32 0, i64 %idxprom250
  %145 = load i32* %arrayidx251, align 4
  %146 = load i32* %tmp, align 4
  %idxprom252 = sext i32 %146 to i64
  %arrayidx253 = getelementptr inbounds [144 x i32]* @Xrank, i32 0, i64 %idxprom252
  %147 = load i32* %arrayidx253, align 4
  %sub254 = sub nsw i32 %145, %147
  %call255 = call i32 @softboundcets_abs(i32 %sub254) #5
  br label %cond.end256

cond.end256:                                      ; preds = %cond.false249, %cond.true242
  %cond257 = phi i32 [ %call248, %cond.true242 ], [ %call255, %cond.false249 ]
  %148 = load i32* %tmp, align 4
  %idxprom258 = sext i32 %148 to i64
  %arrayidx259 = getelementptr inbounds [144 x i32]* @Xrank, i32 0, i64 %idxprom258
  %149 = load i32* %arrayidx259, align 4
  %150 = load i32* %i, align 4
  %idxprom260 = sext i32 %150 to i64
  %arrayidx261 = getelementptr inbounds [144 x i32]* @Xrank, i32 0, i64 %idxprom260
  %151 = load i32* %arrayidx261, align 4
  %sub262 = sub nsw i32 %149, %151
  %call263 = call i32 @softboundcets_abs(i32 %sub262) #5
  %cmp264 = icmp sgt i32 %cond257, %call263
  br i1 %cmp264, label %if.then265, label %if.end267

if.then265:                                       ; preds = %cond.end256
  %152 = load i32* %wpotential, align 4
  %add266 = add nsw i32 %152, 800
  store i32 %add266, i32* %wpotential, align 4
  br label %if.end267

if.end267:                                        ; preds = %if.then265, %cond.end256
  br label %if.end313

if.else268:                                       ; preds = %if.then217
  %153 = load i32* %i, align 4
  %idxprom269 = sext i32 %153 to i64
  %arrayidx270 = getelementptr inbounds [144 x i32]* @Xfile, i32 0, i64 %idxprom269
  %154 = load i32* %arrayidx270, align 4
  %add271 = add nsw i32 110, %154
  %sub272 = sub nsw i32 %add271, 1
  store i32 %sub272, i32* %tmp, align 4
  %155 = load i32* @bking_loc, align 4
  %idxprom273 = sext i32 %155 to i64
  %arrayidx274 = getelementptr inbounds [144 x i32]* @Xfile, i32 0, i64 %idxprom273
  %156 = load i32* %arrayidx274, align 4
  %157 = load i32* %tmp, align 4
  %idxprom275 = sext i32 %157 to i64
  %arrayidx276 = getelementptr inbounds [144 x i32]* @Xfile, i32 0, i64 %idxprom275
  %158 = load i32* %arrayidx276, align 4
  %sub277 = sub nsw i32 %156, %158
  %call278 = call i32 @softboundcets_abs(i32 %sub277) #5
  %159 = load i32* @bking_loc, align 4
  %idxprom279 = sext i32 %159 to i64
  %arrayidx280 = getelementptr inbounds [144 x i32]* @Xrank, i32 0, i64 %idxprom279
  %160 = load i32* %arrayidx280, align 4
  %161 = load i32* %tmp, align 4
  %idxprom281 = sext i32 %161 to i64
  %arrayidx282 = getelementptr inbounds [144 x i32]* @Xrank, i32 0, i64 %idxprom281
  %162 = load i32* %arrayidx282, align 4
  %sub283 = sub nsw i32 %160, %162
  %call284 = call i32 @softboundcets_abs(i32 %sub283) #5
  %cmp285 = icmp sgt i32 %call278, %call284
  br i1 %cmp285, label %cond.true286, label %cond.false293

cond.true286:                                     ; preds = %if.else268
  %163 = load i32* @bking_loc, align 4
  %idxprom287 = sext i32 %163 to i64
  %arrayidx288 = getelementptr inbounds [144 x i32]* @Xfile, i32 0, i64 %idxprom287
  %164 = load i32* %arrayidx288, align 4
  %165 = load i32* %tmp, align 4
  %idxprom289 = sext i32 %165 to i64
  %arrayidx290 = getelementptr inbounds [144 x i32]* @Xfile, i32 0, i64 %idxprom289
  %166 = load i32* %arrayidx290, align 4
  %sub291 = sub nsw i32 %164, %166
  %call292 = call i32 @softboundcets_abs(i32 %sub291) #5
  br label %cond.end300

cond.false293:                                    ; preds = %if.else268
  %167 = load i32* @bking_loc, align 4
  %idxprom294 = sext i32 %167 to i64
  %arrayidx295 = getelementptr inbounds [144 x i32]* @Xrank, i32 0, i64 %idxprom294
  %168 = load i32* %arrayidx295, align 4
  %169 = load i32* %tmp, align 4
  %idxprom296 = sext i32 %169 to i64
  %arrayidx297 = getelementptr inbounds [144 x i32]* @Xrank, i32 0, i64 %idxprom296
  %170 = load i32* %arrayidx297, align 4
  %sub298 = sub nsw i32 %168, %170
  %call299 = call i32 @softboundcets_abs(i32 %sub298) #5
  br label %cond.end300

cond.end300:                                      ; preds = %cond.false293, %cond.true286
  %cond301 = phi i32 [ %call292, %cond.true286 ], [ %call299, %cond.false293 ]
  %sub302 = sub nsw i32 %cond301, 1
  %171 = load i32* %tmp, align 4
  %idxprom303 = sext i32 %171 to i64
  %arrayidx304 = getelementptr inbounds [144 x i32]* @Xrank, i32 0, i64 %idxprom303
  %172 = load i32* %arrayidx304, align 4
  %173 = load i32* %i, align 4
  %idxprom305 = sext i32 %173 to i64
  %arrayidx306 = getelementptr inbounds [144 x i32]* @Xrank, i32 0, i64 %idxprom305
  %174 = load i32* %arrayidx306, align 4
  %sub307 = sub nsw i32 %172, %174
  %call308 = call i32 @softboundcets_abs(i32 %sub307) #5
  %cmp309 = icmp sgt i32 %sub302, %call308
  br i1 %cmp309, label %if.then310, label %if.end312

if.then310:                                       ; preds = %cond.end300
  %175 = load i32* %wpotential, align 4
  %add311 = add nsw i32 %175, 800
  store i32 %add311, i32* %wpotential, align 4
  br label %if.end312

if.end312:                                        ; preds = %if.then310, %cond.end300
  br label %if.end313

if.end313:                                        ; preds = %if.end312, %if.end267
  %176 = load i32* %i, align 4
  %idxprom314 = sext i32 %176 to i64
  %arrayidx315 = getelementptr inbounds [144 x i32]* @Xfile, i32 0, i64 %idxprom314
  %177 = load i32* %arrayidx315, align 4
  %cmp316 = icmp eq i32 %177, 1
  br i1 %cmp316, label %if.then320, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.end313
  %178 = load i32* %i, align 4
  %idxprom317 = sext i32 %178 to i64
  %arrayidx318 = getelementptr inbounds [144 x i32]* @Xfile, i32 0, i64 %idxprom317
  %179 = load i32* %arrayidx318, align 4
  %cmp319 = icmp eq i32 %179, 8
  br i1 %cmp319, label %if.then320, label %if.end326

if.then320:                                       ; preds = %lor.lhs.false, %if.end313
  %180 = load i32* %i, align 4
  %idxprom321 = sext i32 %180 to i64
  %bitcast1536 = bitcast [144 x i32]* @swhite_pawn to i8*
  %bitcast1537 = bitcast [144 x i32]* getelementptr inbounds ([144 x i32]* @swhite_pawn, i32 1) to i8*
  %arrayidx322 = getelementptr inbounds [144 x i32]* @swhite_pawn, i32 0, i64 %idxprom321
  %181 = load i32* %arrayidx322, align 4
  %mul323 = mul nsw i32 2, %181
  %add324 = add nsw i32 12, %mul323
  %182 = load i32* %score, align 4
  %add325 = add nsw i32 %182, %add324
  store i32 %add325, i32* %score, align 4
  br label %if.end326

if.end326:                                        ; preds = %if.then320, %lor.lhs.false
  %183 = load i32* %isolated, align 4
  %tobool327 = icmp ne i32 %183, 0
  br i1 %tobool327, label %if.end404, label %if.then328

if.then328:                                       ; preds = %if.end326
  %184 = load i32* %score, align 4
  %add329 = add nsw i32 %184, 12
  store i32 %add329, i32* %score, align 4
  %185 = load i32* %pawn_file, align 4
  %add330 = add nsw i32 %185, 1
  %idxprom331 = sext i32 %add330 to i64
  %arrayidx332 = getelementptr inbounds [2 x [11 x i32]]* %pawns, i32 0, i64 1
  %arrayidx333 = getelementptr inbounds [11 x i32]* %arrayidx332, i32 0, i64 %idxprom331
  %186 = load i32* %arrayidx333, align 4
  %tobool334 = icmp ne i32 %186, 0
  br i1 %tobool334, label %if.then335, label %if.end366

if.then335:                                       ; preds = %if.then328
  %187 = load i32* %pawn_file, align 4
  %add336 = add nsw i32 %187, 1
  %idxprom337 = sext i32 %add336 to i64
  %arrayidx338 = getelementptr inbounds [2 x [11 x i32]]* %pawns, i32 0, i64 0
  %arrayidx339 = getelementptr inbounds [11 x i32]* %arrayidx338, i32 0, i64 %idxprom337
  %188 = load i32* %arrayidx339, align 4
  %tobool340 = icmp ne i32 %188, 0
  br i1 %tobool340, label %if.end365, label %land.lhs.true341

land.lhs.true341:                                 ; preds = %if.then335
  %189 = load i32* %pawn_file, align 4
  %add342 = add nsw i32 %189, 1
  %idxprom343 = sext i32 %add342 to i64
  %arrayidx344 = getelementptr inbounds [11 x i32]* %white_back_pawn, i32 0, i64 %idxprom343
  %190 = load i32* %arrayidx344, align 4
  %191 = load i32* %pawn_file, align 4
  %add345 = add nsw i32 %191, 2
  %idxprom346 = sext i32 %add345 to i64
  %arrayidx347 = getelementptr inbounds [11 x i32]* %black_back_pawn, i32 0, i64 %idxprom346
  %192 = load i32* %arrayidx347, align 4
  %cmp348 = icmp sge i32 %190, %192
  br i1 %cmp348, label %if.then349, label %if.end365

if.then349:                                       ; preds = %land.lhs.true341
  %193 = load i32* %i, align 4
  %idxprom350 = sext i32 %193 to i64
  %arrayidx351 = getelementptr inbounds [144 x i32]* @Xrank, i32 0, i64 %idxprom350
  %194 = load i32* %arrayidx351, align 4
  %mul352 = mul nsw i32 7, %194
  %195 = load i32* %score, align 4
  %add353 = add nsw i32 %195, %mul352
  store i32 %add353, i32* %score, align 4
  %196 = load i32* %i, align 4
  %idxprom354 = sext i32 %196 to i64
  %arrayidx355 = getelementptr inbounds [144 x i32]* @Xrank, i32 0, i64 %idxprom354
  %197 = load i32* %arrayidx355, align 4
  %cmp356 = icmp eq i32 %197, 7
  br i1 %cmp356, label %land.lhs.true357, label %if.end364

land.lhs.true357:                                 ; preds = %if.then349
  %198 = load i32* %pawn_file, align 4
  %add358 = add nsw i32 %198, 1
  %idxprom359 = sext i32 %add358 to i64
  %arrayidx360 = getelementptr inbounds [11 x i32]* %white_back_pawn, i32 0, i64 %idxprom359
  %199 = load i32* %arrayidx360, align 4
  %cmp361 = icmp sge i32 %199, 6
  br i1 %cmp361, label %if.then362, label %if.end364

if.then362:                                       ; preds = %land.lhs.true357
  %200 = load i32* %score, align 4
  %add363 = add nsw i32 %200, 50
  store i32 %add363, i32* %score, align 4
  br label %if.end364

if.end364:                                        ; preds = %if.then362, %land.lhs.true357, %if.then349
  br label %if.end365

if.end365:                                        ; preds = %if.end364, %land.lhs.true341, %if.then335
  br label %if.end366

if.end366:                                        ; preds = %if.end365, %if.then328
  %201 = load i32* %pawn_file, align 4
  %sub367 = sub nsw i32 %201, 1
  %idxprom368 = sext i32 %sub367 to i64
  %arrayidx369 = getelementptr inbounds [2 x [11 x i32]]* %pawns, i32 0, i64 1
  %arrayidx370 = getelementptr inbounds [11 x i32]* %arrayidx369, i32 0, i64 %idxprom368
  %202 = load i32* %arrayidx370, align 4
  %tobool371 = icmp ne i32 %202, 0
  br i1 %tobool371, label %if.then372, label %if.end403

if.then372:                                       ; preds = %if.end366
  %203 = load i32* %pawn_file, align 4
  %sub373 = sub nsw i32 %203, 1
  %idxprom374 = sext i32 %sub373 to i64
  %arrayidx375 = getelementptr inbounds [2 x [11 x i32]]* %pawns, i32 0, i64 0
  %arrayidx376 = getelementptr inbounds [11 x i32]* %arrayidx375, i32 0, i64 %idxprom374
  %204 = load i32* %arrayidx376, align 4
  %tobool377 = icmp ne i32 %204, 0
  br i1 %tobool377, label %if.end402, label %land.lhs.true378

land.lhs.true378:                                 ; preds = %if.then372
  %205 = load i32* %pawn_file, align 4
  %add379 = add nsw i32 %205, 1
  %idxprom380 = sext i32 %add379 to i64
  %arrayidx381 = getelementptr inbounds [11 x i32]* %white_back_pawn, i32 0, i64 %idxprom380
  %206 = load i32* %arrayidx381, align 4
  %207 = load i32* %pawn_file, align 4
  %sub382 = sub nsw i32 %207, 2
  %idxprom383 = sext i32 %sub382 to i64
  %arrayidx384 = getelementptr inbounds [11 x i32]* %black_back_pawn, i32 0, i64 %idxprom383
  %208 = load i32* %arrayidx384, align 4
  %cmp385 = icmp sge i32 %206, %208
  br i1 %cmp385, label %if.then386, label %if.end402

if.then386:                                       ; preds = %land.lhs.true378
  %209 = load i32* %i, align 4
  %idxprom387 = sext i32 %209 to i64
  %arrayidx388 = getelementptr inbounds [144 x i32]* @Xrank, i32 0, i64 %idxprom387
  %210 = load i32* %arrayidx388, align 4
  %mul389 = mul nsw i32 7, %210
  %211 = load i32* %score, align 4
  %add390 = add nsw i32 %211, %mul389
  store i32 %add390, i32* %score, align 4
  %212 = load i32* %i, align 4
  %idxprom391 = sext i32 %212 to i64
  %arrayidx392 = getelementptr inbounds [144 x i32]* @Xrank, i32 0, i64 %idxprom391
  %213 = load i32* %arrayidx392, align 4
  %cmp393 = icmp eq i32 %213, 7
  br i1 %cmp393, label %land.lhs.true394, label %if.end401

land.lhs.true394:                                 ; preds = %if.then386
  %214 = load i32* %pawn_file, align 4
  %sub395 = sub nsw i32 %214, 1
  %idxprom396 = sext i32 %sub395 to i64
  %arrayidx397 = getelementptr inbounds [11 x i32]* %white_back_pawn, i32 0, i64 %idxprom396
  %215 = load i32* %arrayidx397, align 4
  %cmp398 = icmp sge i32 %215, 6
  br i1 %cmp398, label %if.then399, label %if.end401

if.then399:                                       ; preds = %land.lhs.true394
  %216 = load i32* %score, align 4
  %add400 = add nsw i32 %216, 50
  store i32 %add400, i32* %score, align 4
  br label %if.end401

if.end401:                                        ; preds = %if.then399, %land.lhs.true394, %if.then386
  br label %if.end402

if.end402:                                        ; preds = %if.end401, %land.lhs.true378, %if.then372
  br label %if.end403

if.end403:                                        ; preds = %if.end402, %if.end366
  br label %if.end404

if.end404:                                        ; preds = %if.end403, %if.end326
  br label %if.end405

if.end405:                                        ; preds = %if.end404, %land.lhs.true212, %land.lhs.true207, %if.end202
  %217 = load i32* %pawn_file, align 4
  %sub406 = sub nsw i32 %217, 1
  %idxprom407 = sext i32 %sub406 to i64
  %arrayidx408 = getelementptr inbounds [2 x [11 x i32]]* %pawns, i32 0, i64 1
  %arrayidx409 = getelementptr inbounds [11 x i32]* %arrayidx408, i32 0, i64 %idxprom407
  %218 = load i32* %arrayidx409, align 4
  %tobool410 = icmp ne i32 %218, 0
  br i1 %tobool410, label %if.end413, label %if.then411

if.then411:                                       ; preds = %if.end405
  %219 = load i32* %score, align 4
  %sub412 = sub nsw i32 %219, 7
  store i32 %sub412, i32* %score, align 4
  br label %if.end413

if.end413:                                        ; preds = %if.then411, %if.end405
  br label %sw.epilog

sw.bb414:                                         ; preds = %if.end128
  store i32 0, i32* %isolated, align 4
  store i32 0, i32* %backwards, align 4
  %220 = load i32* %i, align 4
  %idxprom415 = sext i32 %220 to i64
  %bitcast1510 = bitcast [144 x i32]* @sblack_pawn to i8*
  %bitcast1511 = bitcast [144 x i32]* getelementptr inbounds ([144 x i32]* @sblack_pawn, i32 1) to i8*
  %arrayidx416 = getelementptr inbounds [144 x i32]* @sblack_pawn, i32 0, i64 %idxprom415
  %221 = load i32* %arrayidx416, align 4
  %222 = load i32* %score, align 4
  %sub417 = sub nsw i32 %222, %221
  store i32 %sub417, i32* %score, align 4
  %223 = load i32* %bp, align 4
  %inc418 = add nsw i32 %223, 1
  store i32 %inc418, i32* %bp, align 4
  %224 = load i32* %pawn_file, align 4
  %add419 = add nsw i32 %224, 1
  %idxprom420 = sext i32 %add419 to i64
  %arrayidx421 = getelementptr inbounds [11 x i32]* %black_back_pawn, i32 0, i64 %idxprom420
  %225 = load i32* %arrayidx421, align 4
  %226 = load i32* %srank, align 4
  %cmp422 = icmp slt i32 %225, %226
  br i1 %cmp422, label %land.lhs.true423, label %if.end444

land.lhs.true423:                                 ; preds = %sw.bb414
  %227 = load i32* %pawn_file, align 4
  %sub424 = sub nsw i32 %227, 1
  %idxprom425 = sext i32 %sub424 to i64
  %arrayidx426 = getelementptr inbounds [11 x i32]* %black_back_pawn, i32 0, i64 %idxprom425
  %228 = load i32* %arrayidx426, align 4
  %229 = load i32* %srank, align 4
  %cmp427 = icmp slt i32 %228, %229
  br i1 %cmp427, label %if.then428, label %if.end444

if.then428:                                       ; preds = %land.lhs.true423
  %230 = load i32* %score, align 4
  %add429 = add nsw i32 %230, 8
  store i32 %add429, i32* %score, align 4
  store i32 1, i32* %backwards, align 4
  %231 = load i32* %pawn_file, align 4
  %add430 = add nsw i32 %231, 1
  %idxprom431 = sext i32 %add430 to i64
  %arrayidx432 = getelementptr inbounds [2 x [11 x i32]]* %pawns, i32 0, i64 0
  %arrayidx433 = getelementptr inbounds [11 x i32]* %arrayidx432, i32 0, i64 %idxprom431
  %232 = load i32* %arrayidx433, align 4
  %tobool434 = icmp ne i32 %232, 0
  br i1 %tobool434, label %if.end443, label %land.lhs.true435

land.lhs.true435:                                 ; preds = %if.then428
  %233 = load i32* %pawn_file, align 4
  %sub436 = sub nsw i32 %233, 1
  %idxprom437 = sext i32 %sub436 to i64
  %arrayidx438 = getelementptr inbounds [2 x [11 x i32]]* %pawns, i32 0, i64 0
  %arrayidx439 = getelementptr inbounds [11 x i32]* %arrayidx438, i32 0, i64 %idxprom437
  %234 = load i32* %arrayidx439, align 4
  %tobool440 = icmp ne i32 %234, 0
  br i1 %tobool440, label %if.end443, label %if.then441

if.then441:                                       ; preds = %land.lhs.true435
  %235 = load i32* %score, align 4
  %add442 = add nsw i32 %235, 5
  store i32 %add442, i32* %score, align 4
  store i32 1, i32* %isolated, align 4
  br label %if.end443

if.end443:                                        ; preds = %if.then441, %land.lhs.true435, %if.then428
  br label %if.end444

if.end444:                                        ; preds = %if.end443, %land.lhs.true423, %sw.bb414
  %236 = load i32* %pawn_file, align 4
  %idxprom445 = sext i32 %236 to i64
  %arrayidx446 = getelementptr inbounds [2 x [11 x i32]]* %pawns, i32 0, i64 1
  %arrayidx447 = getelementptr inbounds [11 x i32]* %arrayidx446, i32 0, i64 %idxprom445
  %237 = load i32* %arrayidx447, align 4
  %tobool448 = icmp ne i32 %237, 0
  br i1 %tobool448, label %if.end458, label %if.then449

if.then449:                                       ; preds = %if.end444
  %238 = load i32* %backwards, align 4
  %tobool450 = icmp ne i32 %238, 0
  br i1 %tobool450, label %if.then451, label %if.end453

if.then451:                                       ; preds = %if.then449
  %239 = load i32* %score, align 4
  %add452 = add nsw i32 %239, 3
  store i32 %add452, i32* %score, align 4
  br label %if.end453

if.end453:                                        ; preds = %if.then451, %if.then449
  %240 = load i32* %isolated, align 4
  %tobool454 = icmp ne i32 %240, 0
  br i1 %tobool454, label %if.then455, label %if.end457

if.then455:                                       ; preds = %if.end453
  %241 = load i32* %score, align 4
  %add456 = add nsw i32 %241, 5
  store i32 %add456, i32* %score, align 4
  br label %if.end457

if.end457:                                        ; preds = %if.then455, %if.end453
  br label %if.end458

if.end458:                                        ; preds = %if.end457, %if.end444
  %242 = load i32* %pawn_file, align 4
  %idxprom459 = sext i32 %242 to i64
  %arrayidx460 = getelementptr inbounds [2 x [11 x i32]]* %pawns, i32 0, i64 0
  %arrayidx461 = getelementptr inbounds [11 x i32]* %arrayidx460, i32 0, i64 %idxprom459
  %243 = load i32* %arrayidx461, align 4
  %cmp462 = icmp sgt i32 %243, 1
  br i1 %cmp462, label %if.then463, label %if.end470

if.then463:                                       ; preds = %if.end458
  %244 = load i32* %pawn_file, align 4
  %idxprom464 = sext i32 %244 to i64
  %arrayidx465 = getelementptr inbounds [2 x [11 x i32]]* %pawns, i32 0, i64 0
  %arrayidx466 = getelementptr inbounds [11 x i32]* %arrayidx465, i32 0, i64 %idxprom464
  %245 = load i32* %arrayidx466, align 4
  %sub467 = sub nsw i32 %245, 1
  %mul468 = mul nsw i32 3, %sub467
  %246 = load i32* %score, align 4
  %add469 = add nsw i32 %246, %mul468
  store i32 %add469, i32* %score, align 4
  br label %if.end470

if.end470:                                        ; preds = %if.then463, %if.end458
  %247 = load i32* %pawn_file, align 4
  %idxprom471 = sext i32 %247 to i64
  %arrayidx472 = getelementptr inbounds [2 x [11 x i32]]* %pawns, i32 0, i64 1
  %arrayidx473 = getelementptr inbounds [11 x i32]* %arrayidx472, i32 0, i64 %idxprom471
  %248 = load i32* %arrayidx473, align 4
  %tobool474 = icmp ne i32 %248, 0
  br i1 %tobool474, label %if.end676, label %land.lhs.true475

land.lhs.true475:                                 ; preds = %if.end470
  %249 = load i32* %srank, align 4
  %250 = load i32* %pawn_file, align 4
  %sub476 = sub nsw i32 %250, 1
  %idxprom477 = sext i32 %sub476 to i64
  %arrayidx478 = getelementptr inbounds [11 x i32]* %white_back_pawn, i32 0, i64 %idxprom477
  %251 = load i32* %arrayidx478, align 4
  %cmp479 = icmp sle i32 %249, %251
  br i1 %cmp479, label %land.lhs.true480, label %if.end676

land.lhs.true480:                                 ; preds = %land.lhs.true475
  %252 = load i32* %srank, align 4
  %253 = load i32* %pawn_file, align 4
  %add481 = add nsw i32 %253, 1
  %idxprom482 = sext i32 %add481 to i64
  %arrayidx483 = getelementptr inbounds [11 x i32]* %white_back_pawn, i32 0, i64 %idxprom482
  %254 = load i32* %arrayidx483, align 4
  %cmp484 = icmp sle i32 %252, %254
  br i1 %cmp484, label %if.then485, label %if.end676

if.then485:                                       ; preds = %land.lhs.true480
  %255 = load i32* %i, align 4
  %idxprom486 = sext i32 %255 to i64
  %bitcast1528 = bitcast [144 x i32]* @sblack_pawn to i8*
  %bitcast1529 = bitcast [144 x i32]* getelementptr inbounds ([144 x i32]* @sblack_pawn, i32 1) to i8*
  %arrayidx487 = getelementptr inbounds [144 x i32]* @sblack_pawn, i32 0, i64 %idxprom486
  %256 = load i32* %arrayidx487, align 4
  %mul488 = mul nsw i32 3, %256
  %add489 = add nsw i32 30, %mul488
  %257 = load i32* %score, align 4
  %sub490 = sub nsw i32 %257, %add489
  store i32 %sub490, i32* %score, align 4
  %258 = load i32* @white_to_move, align 4
  %tobool491 = icmp ne i32 %258, 0
  br i1 %tobool491, label %if.else536, label %if.then492

if.then492:                                       ; preds = %if.then485
  %259 = load i32* %i, align 4
  %idxprom493 = sext i32 %259 to i64
  %arrayidx494 = getelementptr inbounds [144 x i32]* @Xfile, i32 0, i64 %idxprom493
  %260 = load i32* %arrayidx494, align 4
  %add495 = add nsw i32 26, %260
  %sub496 = sub nsw i32 %add495, 1
  store i32 %sub496, i32* %tmp, align 4
  %261 = load i32* @wking_loc, align 4
  %idxprom497 = sext i32 %261 to i64
  %arrayidx498 = getelementptr inbounds [144 x i32]* @Xfile, i32 0, i64 %idxprom497
  %262 = load i32* %arrayidx498, align 4
  %263 = load i32* %tmp, align 4
  %idxprom499 = sext i32 %263 to i64
  %arrayidx500 = getelementptr inbounds [144 x i32]* @Xfile, i32 0, i64 %idxprom499
  %264 = load i32* %arrayidx500, align 4
  %sub501 = sub nsw i32 %262, %264
  %call502 = call i32 @softboundcets_abs(i32 %sub501) #5
  %265 = load i32* @wking_loc, align 4
  %idxprom503 = sext i32 %265 to i64
  %arrayidx504 = getelementptr inbounds [144 x i32]* @Xrank, i32 0, i64 %idxprom503
  %266 = load i32* %arrayidx504, align 4
  %267 = load i32* %tmp, align 4
  %idxprom505 = sext i32 %267 to i64
  %arrayidx506 = getelementptr inbounds [144 x i32]* @Xrank, i32 0, i64 %idxprom505
  %268 = load i32* %arrayidx506, align 4
  %sub507 = sub nsw i32 %266, %268
  %call508 = call i32 @softboundcets_abs(i32 %sub507) #5
  %cmp509 = icmp sgt i32 %call502, %call508
  br i1 %cmp509, label %cond.true510, label %cond.false517

cond.true510:                                     ; preds = %if.then492
  %269 = load i32* @wking_loc, align 4
  %idxprom511 = sext i32 %269 to i64
  %arrayidx512 = getelementptr inbounds [144 x i32]* @Xfile, i32 0, i64 %idxprom511
  %270 = load i32* %arrayidx512, align 4
  %271 = load i32* %tmp, align 4
  %idxprom513 = sext i32 %271 to i64
  %arrayidx514 = getelementptr inbounds [144 x i32]* @Xfile, i32 0, i64 %idxprom513
  %272 = load i32* %arrayidx514, align 4
  %sub515 = sub nsw i32 %270, %272
  %call516 = call i32 @softboundcets_abs(i32 %sub515) #5
  br label %cond.end524

cond.false517:                                    ; preds = %if.then492
  %273 = load i32* @wking_loc, align 4
  %idxprom518 = sext i32 %273 to i64
  %arrayidx519 = getelementptr inbounds [144 x i32]* @Xrank, i32 0, i64 %idxprom518
  %274 = load i32* %arrayidx519, align 4
  %275 = load i32* %tmp, align 4
  %idxprom520 = sext i32 %275 to i64
  %arrayidx521 = getelementptr inbounds [144 x i32]* @Xrank, i32 0, i64 %idxprom520
  %276 = load i32* %arrayidx521, align 4
  %sub522 = sub nsw i32 %274, %276
  %call523 = call i32 @softboundcets_abs(i32 %sub522) #5
  br label %cond.end524

cond.end524:                                      ; preds = %cond.false517, %cond.true510
  %cond525 = phi i32 [ %call516, %cond.true510 ], [ %call523, %cond.false517 ]
  %277 = load i32* %tmp, align 4
  %idxprom526 = sext i32 %277 to i64
  %arrayidx527 = getelementptr inbounds [144 x i32]* @Xrank, i32 0, i64 %idxprom526
  %278 = load i32* %arrayidx527, align 4
  %279 = load i32* %i, align 4
  %idxprom528 = sext i32 %279 to i64
  %arrayidx529 = getelementptr inbounds [144 x i32]* @Xrank, i32 0, i64 %idxprom528
  %280 = load i32* %arrayidx529, align 4
  %sub530 = sub nsw i32 %278, %280
  %call531 = call i32 @softboundcets_abs(i32 %sub530) #5
  %cmp532 = icmp sgt i32 %cond525, %call531
  br i1 %cmp532, label %if.then533, label %if.end535

if.then533:                                       ; preds = %cond.end524
  %281 = load i32* %bpotential, align 4
  %sub534 = sub nsw i32 %281, 800
  store i32 %sub534, i32* %bpotential, align 4
  br label %if.end535

if.end535:                                        ; preds = %if.then533, %cond.end524
  br label %if.end581

if.else536:                                       ; preds = %if.then485
  %282 = load i32* %i, align 4
  %idxprom537 = sext i32 %282 to i64
  %arrayidx538 = getelementptr inbounds [144 x i32]* @Xfile, i32 0, i64 %idxprom537
  %283 = load i32* %arrayidx538, align 4
  %add539 = add nsw i32 26, %283
  %sub540 = sub nsw i32 %add539, 1
  store i32 %sub540, i32* %tmp, align 4
  %284 = load i32* @wking_loc, align 4
  %idxprom541 = sext i32 %284 to i64
  %arrayidx542 = getelementptr inbounds [144 x i32]* @Xfile, i32 0, i64 %idxprom541
  %285 = load i32* %arrayidx542, align 4
  %286 = load i32* %tmp, align 4
  %idxprom543 = sext i32 %286 to i64
  %arrayidx544 = getelementptr inbounds [144 x i32]* @Xfile, i32 0, i64 %idxprom543
  %287 = load i32* %arrayidx544, align 4
  %sub545 = sub nsw i32 %285, %287
  %call546 = call i32 @softboundcets_abs(i32 %sub545) #5
  %288 = load i32* @wking_loc, align 4
  %idxprom547 = sext i32 %288 to i64
  %arrayidx548 = getelementptr inbounds [144 x i32]* @Xrank, i32 0, i64 %idxprom547
  %289 = load i32* %arrayidx548, align 4
  %290 = load i32* %tmp, align 4
  %idxprom549 = sext i32 %290 to i64
  %arrayidx550 = getelementptr inbounds [144 x i32]* @Xrank, i32 0, i64 %idxprom549
  %291 = load i32* %arrayidx550, align 4
  %sub551 = sub nsw i32 %289, %291
  %call552 = call i32 @softboundcets_abs(i32 %sub551) #5
  %cmp553 = icmp sgt i32 %call546, %call552
  br i1 %cmp553, label %cond.true554, label %cond.false561

cond.true554:                                     ; preds = %if.else536
  %292 = load i32* @wking_loc, align 4
  %idxprom555 = sext i32 %292 to i64
  %arrayidx556 = getelementptr inbounds [144 x i32]* @Xfile, i32 0, i64 %idxprom555
  %293 = load i32* %arrayidx556, align 4
  %294 = load i32* %tmp, align 4
  %idxprom557 = sext i32 %294 to i64
  %arrayidx558 = getelementptr inbounds [144 x i32]* @Xfile, i32 0, i64 %idxprom557
  %295 = load i32* %arrayidx558, align 4
  %sub559 = sub nsw i32 %293, %295
  %call560 = call i32 @softboundcets_abs(i32 %sub559) #5
  br label %cond.end568

cond.false561:                                    ; preds = %if.else536
  %296 = load i32* @wking_loc, align 4
  %idxprom562 = sext i32 %296 to i64
  %arrayidx563 = getelementptr inbounds [144 x i32]* @Xrank, i32 0, i64 %idxprom562
  %297 = load i32* %arrayidx563, align 4
  %298 = load i32* %tmp, align 4
  %idxprom564 = sext i32 %298 to i64
  %arrayidx565 = getelementptr inbounds [144 x i32]* @Xrank, i32 0, i64 %idxprom564
  %299 = load i32* %arrayidx565, align 4
  %sub566 = sub nsw i32 %297, %299
  %call567 = call i32 @softboundcets_abs(i32 %sub566) #5
  br label %cond.end568

cond.end568:                                      ; preds = %cond.false561, %cond.true554
  %cond569 = phi i32 [ %call560, %cond.true554 ], [ %call567, %cond.false561 ]
  %sub570 = sub nsw i32 %cond569, 1
  %300 = load i32* %tmp, align 4
  %idxprom571 = sext i32 %300 to i64
  %arrayidx572 = getelementptr inbounds [144 x i32]* @Xrank, i32 0, i64 %idxprom571
  %301 = load i32* %arrayidx572, align 4
  %302 = load i32* %i, align 4
  %idxprom573 = sext i32 %302 to i64
  %arrayidx574 = getelementptr inbounds [144 x i32]* @Xrank, i32 0, i64 %idxprom573
  %303 = load i32* %arrayidx574, align 4
  %sub575 = sub nsw i32 %301, %303
  %call576 = call i32 @softboundcets_abs(i32 %sub575) #5
  %cmp577 = icmp sgt i32 %sub570, %call576
  br i1 %cmp577, label %if.then578, label %if.end580

if.then578:                                       ; preds = %cond.end568
  %304 = load i32* %bpotential, align 4
  %sub579 = sub nsw i32 %304, 800
  store i32 %sub579, i32* %bpotential, align 4
  br label %if.end580

if.end580:                                        ; preds = %if.then578, %cond.end568
  br label %if.end581

if.end581:                                        ; preds = %if.end580, %if.end535
  %305 = load i32* %i, align 4
  %idxprom582 = sext i32 %305 to i64
  %arrayidx583 = getelementptr inbounds [144 x i32]* @Xfile, i32 0, i64 %idxprom582
  %306 = load i32* %arrayidx583, align 4
  %cmp584 = icmp eq i32 %306, 1
  br i1 %cmp584, label %if.then589, label %lor.lhs.false585

lor.lhs.false585:                                 ; preds = %if.end581
  %307 = load i32* %i, align 4
  %idxprom586 = sext i32 %307 to i64
  %arrayidx587 = getelementptr inbounds [144 x i32]* @Xfile, i32 0, i64 %idxprom586
  %308 = load i32* %arrayidx587, align 4
  %cmp588 = icmp eq i32 %308, 8
  br i1 %cmp588, label %if.then589, label %if.end595

if.then589:                                       ; preds = %lor.lhs.false585, %if.end581
  %309 = load i32* %i, align 4
  %idxprom590 = sext i32 %309 to i64
  %bitcast1538 = bitcast [144 x i32]* @sblack_pawn to i8*
  %bitcast1539 = bitcast [144 x i32]* getelementptr inbounds ([144 x i32]* @sblack_pawn, i32 1) to i8*
  %arrayidx591 = getelementptr inbounds [144 x i32]* @sblack_pawn, i32 0, i64 %idxprom590
  %310 = load i32* %arrayidx591, align 4
  %mul592 = mul nsw i32 2, %310
  %add593 = add nsw i32 12, %mul592
  %311 = load i32* %score, align 4
  %sub594 = sub nsw i32 %311, %add593
  store i32 %sub594, i32* %score, align 4
  br label %if.end595

if.end595:                                        ; preds = %if.then589, %lor.lhs.false585
  %312 = load i32* %isolated, align 4
  %tobool596 = icmp ne i32 %312, 0
  br i1 %tobool596, label %if.end675, label %if.then597

if.then597:                                       ; preds = %if.end595
  %313 = load i32* %score, align 4
  %sub598 = sub nsw i32 %313, 12
  store i32 %sub598, i32* %score, align 4
  %314 = load i32* %pawn_file, align 4
  %add599 = add nsw i32 %314, 1
  %idxprom600 = sext i32 %add599 to i64
  %arrayidx601 = getelementptr inbounds [2 x [11 x i32]]* %pawns, i32 0, i64 0
  %arrayidx602 = getelementptr inbounds [11 x i32]* %arrayidx601, i32 0, i64 %idxprom600
  %315 = load i32* %arrayidx602, align 4
  %tobool603 = icmp ne i32 %315, 0
  br i1 %tobool603, label %if.then604, label %if.end636

if.then604:                                       ; preds = %if.then597
  %316 = load i32* %pawn_file, align 4
  %add605 = add nsw i32 %316, 1
  %idxprom606 = sext i32 %add605 to i64
  %arrayidx607 = getelementptr inbounds [2 x [11 x i32]]* %pawns, i32 0, i64 1
  %arrayidx608 = getelementptr inbounds [11 x i32]* %arrayidx607, i32 0, i64 %idxprom606
  %317 = load i32* %arrayidx608, align 4
  %tobool609 = icmp ne i32 %317, 0
  br i1 %tobool609, label %if.end635, label %land.lhs.true610

land.lhs.true610:                                 ; preds = %if.then604
  %318 = load i32* %pawn_file, align 4
  %add611 = add nsw i32 %318, 1
  %idxprom612 = sext i32 %add611 to i64
  %arrayidx613 = getelementptr inbounds [11 x i32]* %black_back_pawn, i32 0, i64 %idxprom612
  %319 = load i32* %arrayidx613, align 4
  %320 = load i32* %pawn_file, align 4
  %add614 = add nsw i32 %320, 2
  %idxprom615 = sext i32 %add614 to i64
  %arrayidx616 = getelementptr inbounds [11 x i32]* %white_back_pawn, i32 0, i64 %idxprom615
  %321 = load i32* %arrayidx616, align 4
  %cmp617 = icmp sle i32 %319, %321
  br i1 %cmp617, label %if.then618, label %if.end635

if.then618:                                       ; preds = %land.lhs.true610
  %322 = load i32* %i, align 4
  %idxprom619 = sext i32 %322 to i64
  %arrayidx620 = getelementptr inbounds [144 x i32]* @Xrank, i32 0, i64 %idxprom619
  %323 = load i32* %arrayidx620, align 4
  %sub621 = sub nsw i32 9, %323
  %mul622 = mul nsw i32 7, %sub621
  %324 = load i32* %score, align 4
  %sub623 = sub nsw i32 %324, %mul622
  store i32 %sub623, i32* %score, align 4
  %325 = load i32* %i, align 4
  %idxprom624 = sext i32 %325 to i64
  %arrayidx625 = getelementptr inbounds [144 x i32]* @Xrank, i32 0, i64 %idxprom624
  %326 = load i32* %arrayidx625, align 4
  %cmp626 = icmp eq i32 %326, 2
  br i1 %cmp626, label %land.lhs.true627, label %if.end634

land.lhs.true627:                                 ; preds = %if.then618
  %327 = load i32* %pawn_file, align 4
  %add628 = add nsw i32 %327, 1
  %idxprom629 = sext i32 %add628 to i64
  %arrayidx630 = getelementptr inbounds [11 x i32]* %black_back_pawn, i32 0, i64 %idxprom629
  %328 = load i32* %arrayidx630, align 4
  %cmp631 = icmp sle i32 %328, 3
  br i1 %cmp631, label %if.then632, label %if.end634

if.then632:                                       ; preds = %land.lhs.true627
  %329 = load i32* %score, align 4
  %sub633 = sub nsw i32 %329, 50
  store i32 %sub633, i32* %score, align 4
  br label %if.end634

if.end634:                                        ; preds = %if.then632, %land.lhs.true627, %if.then618
  br label %if.end635

if.end635:                                        ; preds = %if.end634, %land.lhs.true610, %if.then604
  br label %if.end636

if.end636:                                        ; preds = %if.end635, %if.then597
  %330 = load i32* %pawn_file, align 4
  %sub637 = sub nsw i32 %330, 1
  %idxprom638 = sext i32 %sub637 to i64
  %arrayidx639 = getelementptr inbounds [2 x [11 x i32]]* %pawns, i32 0, i64 0
  %arrayidx640 = getelementptr inbounds [11 x i32]* %arrayidx639, i32 0, i64 %idxprom638
  %331 = load i32* %arrayidx640, align 4
  %tobool641 = icmp ne i32 %331, 0
  br i1 %tobool641, label %if.then642, label %if.end674

if.then642:                                       ; preds = %if.end636
  %332 = load i32* %pawn_file, align 4
  %sub643 = sub nsw i32 %332, 1
  %idxprom644 = sext i32 %sub643 to i64
  %arrayidx645 = getelementptr inbounds [2 x [11 x i32]]* %pawns, i32 0, i64 1
  %arrayidx646 = getelementptr inbounds [11 x i32]* %arrayidx645, i32 0, i64 %idxprom644
  %333 = load i32* %arrayidx646, align 4
  %tobool647 = icmp ne i32 %333, 0
  br i1 %tobool647, label %if.end673, label %land.lhs.true648

land.lhs.true648:                                 ; preds = %if.then642
  %334 = load i32* %pawn_file, align 4
  %sub649 = sub nsw i32 %334, 1
  %idxprom650 = sext i32 %sub649 to i64
  %arrayidx651 = getelementptr inbounds [11 x i32]* %black_back_pawn, i32 0, i64 %idxprom650
  %335 = load i32* %arrayidx651, align 4
  %336 = load i32* %pawn_file, align 4
  %sub652 = sub nsw i32 %336, 2
  %idxprom653 = sext i32 %sub652 to i64
  %arrayidx654 = getelementptr inbounds [11 x i32]* %white_back_pawn, i32 0, i64 %idxprom653
  %337 = load i32* %arrayidx654, align 4
  %cmp655 = icmp sle i32 %335, %337
  br i1 %cmp655, label %if.then656, label %if.end673

if.then656:                                       ; preds = %land.lhs.true648
  %338 = load i32* %i, align 4
  %idxprom657 = sext i32 %338 to i64
  %arrayidx658 = getelementptr inbounds [144 x i32]* @Xrank, i32 0, i64 %idxprom657
  %339 = load i32* %arrayidx658, align 4
  %sub659 = sub nsw i32 9, %339
  %mul660 = mul nsw i32 7, %sub659
  %340 = load i32* %score, align 4
  %sub661 = sub nsw i32 %340, %mul660
  store i32 %sub661, i32* %score, align 4
  %341 = load i32* %i, align 4
  %idxprom662 = sext i32 %341 to i64
  %arrayidx663 = getelementptr inbounds [144 x i32]* @Xrank, i32 0, i64 %idxprom662
  %342 = load i32* %arrayidx663, align 4
  %cmp664 = icmp eq i32 %342, 2
  br i1 %cmp664, label %land.lhs.true665, label %if.end672

land.lhs.true665:                                 ; preds = %if.then656
  %343 = load i32* %pawn_file, align 4
  %sub666 = sub nsw i32 %343, 1
  %idxprom667 = sext i32 %sub666 to i64
  %arrayidx668 = getelementptr inbounds [11 x i32]* %black_back_pawn, i32 0, i64 %idxprom667
  %344 = load i32* %arrayidx668, align 4
  %cmp669 = icmp sle i32 %344, 3
  br i1 %cmp669, label %if.then670, label %if.end672

if.then670:                                       ; preds = %land.lhs.true665
  %345 = load i32* %score, align 4
  %sub671 = sub nsw i32 %345, 50
  store i32 %sub671, i32* %score, align 4
  br label %if.end672

if.end672:                                        ; preds = %if.then670, %land.lhs.true665, %if.then656
  br label %if.end673

if.end673:                                        ; preds = %if.end672, %land.lhs.true648, %if.then642
  br label %if.end674

if.end674:                                        ; preds = %if.end673, %if.end636
  br label %if.end675

if.end675:                                        ; preds = %if.end674, %if.end595
  br label %if.end676

if.end676:                                        ; preds = %if.end675, %land.lhs.true480, %land.lhs.true475, %if.end470
  %346 = load i32* %pawn_file, align 4
  %sub677 = sub nsw i32 %346, 1
  %idxprom678 = sext i32 %sub677 to i64
  %arrayidx679 = getelementptr inbounds [2 x [11 x i32]]* %pawns, i32 0, i64 0
  %arrayidx680 = getelementptr inbounds [11 x i32]* %arrayidx679, i32 0, i64 %idxprom678
  %347 = load i32* %arrayidx680, align 4
  %tobool681 = icmp ne i32 %347, 0
  br i1 %tobool681, label %if.end684, label %if.then682

if.then682:                                       ; preds = %if.end676
  %348 = load i32* %score, align 4
  %add683 = add nsw i32 %348, 7
  store i32 %add683, i32* %score, align 4
  br label %if.end684

if.end684:                                        ; preds = %if.then682, %if.end676
  br label %sw.epilog

sw.bb685:                                         ; preds = %if.end128
  %349 = load i32* %wr, align 4
  %inc686 = add nsw i32 %349, 1
  store i32 %inc686, i32* %wr, align 4
  %350 = load i32* %wr, align 4
  %cmp687 = icmp eq i32 %350, 1
  br i1 %cmp687, label %if.then688, label %if.end693

if.then688:                                       ; preds = %sw.bb685
  %351 = load i32* %i, align 4
  %idxprom689 = sext i32 %351 to i64
  %arrayidx690 = getelementptr inbounds [144 x i32]* @Xfile, i32 0, i64 %idxprom689
  %352 = load i32* %arrayidx690, align 4
  store i32 %352, i32* %fwrook, align 4
  %353 = load i32* %i, align 4
  %idxprom691 = sext i32 %353 to i64
  %arrayidx692 = getelementptr inbounds [144 x i32]* @Xrank, i32 0, i64 %idxprom691
  %354 = load i32* %arrayidx692, align 4
  store i32 %354, i32* %rwrook, align 4
  br label %if.end693

if.end693:                                        ; preds = %if.then688, %sw.bb685
  %355 = load i32* %srank, align 4
  %cmp694 = icmp eq i32 %355, 7
  br i1 %cmp694, label %if.then695, label %if.end703

if.then695:                                       ; preds = %if.end693
  %356 = load i32* %score, align 4
  %add696 = add nsw i32 %356, 25
  store i32 %add696, i32* %score, align 4
  %357 = load i32* %wr, align 4
  %cmp697 = icmp eq i32 %357, 2
  br i1 %cmp697, label %land.lhs.true698, label %if.end702

land.lhs.true698:                                 ; preds = %if.then695
  %358 = load i32* %rwrook, align 4
  %cmp699 = icmp eq i32 %358, 7
  br i1 %cmp699, label %if.then700, label %if.end702

if.then700:                                       ; preds = %land.lhs.true698
  %359 = load i32* %score, align 4
  %add701 = add nsw i32 %359, 10
  store i32 %add701, i32* %score, align 4
  br label %if.end702

if.end702:                                        ; preds = %if.then700, %land.lhs.true698, %if.then695
  br label %if.end703

if.end703:                                        ; preds = %if.end702, %if.end693
  %360 = load i32* %pawn_file, align 4
  %idxprom704 = sext i32 %360 to i64
  %arrayidx705 = getelementptr inbounds [2 x [11 x i32]]* %pawns, i32 0, i64 1
  %arrayidx706 = getelementptr inbounds [11 x i32]* %arrayidx705, i32 0, i64 %idxprom704
  %361 = load i32* %arrayidx706, align 4
  %tobool707 = icmp ne i32 %361, 0
  br i1 %tobool707, label %if.end725, label %if.then708

if.then708:                                       ; preds = %if.end703
  %362 = load i32* %score, align 4
  %add709 = add nsw i32 %362, 5
  store i32 %add709, i32* %score, align 4
  %363 = load i32* %wr, align 4
  %cmp710 = icmp eq i32 %363, 2
  br i1 %cmp710, label %land.lhs.true711, label %if.end717

land.lhs.true711:                                 ; preds = %if.then708
  %364 = load i32* %i, align 4
  %idxprom712 = sext i32 %364 to i64
  %arrayidx713 = getelementptr inbounds [144 x i32]* @Xfile, i32 0, i64 %idxprom712
  %365 = load i32* %arrayidx713, align 4
  %366 = load i32* %fwrook, align 4
  %cmp714 = icmp eq i32 %365, %366
  br i1 %cmp714, label %if.then715, label %if.end717

if.then715:                                       ; preds = %land.lhs.true711
  %367 = load i32* %score, align 4
  %add716 = add nsw i32 %367, 12
  store i32 %add716, i32* %score, align 4
  br label %if.end717

if.end717:                                        ; preds = %if.then715, %land.lhs.true711, %if.then708
  %368 = load i32* %pawn_file, align 4
  %idxprom718 = sext i32 %368 to i64
  %arrayidx719 = getelementptr inbounds [2 x [11 x i32]]* %pawns, i32 0, i64 0
  %arrayidx720 = getelementptr inbounds [11 x i32]* %arrayidx719, i32 0, i64 %idxprom718
  %369 = load i32* %arrayidx720, align 4
  %tobool721 = icmp ne i32 %369, 0
  br i1 %tobool721, label %if.end724, label %if.then722

if.then722:                                       ; preds = %if.end717
  %370 = load i32* %score, align 4
  %add723 = add nsw i32 %370, 3
  store i32 %add723, i32* %score, align 4
  br label %if.end724

if.end724:                                        ; preds = %if.then722, %if.end717
  br label %if.end725

if.end725:                                        ; preds = %if.end724, %if.end703
  br label %sw.epilog

sw.bb726:                                         ; preds = %if.end128
  %371 = load i32* %br, align 4
  %inc727 = add nsw i32 %371, 1
  store i32 %inc727, i32* %br, align 4
  %372 = load i32* %br, align 4
  %cmp728 = icmp eq i32 %372, 1
  br i1 %cmp728, label %if.then729, label %if.end734

if.then729:                                       ; preds = %sw.bb726
  %373 = load i32* %i, align 4
  %idxprom730 = sext i32 %373 to i64
  %arrayidx731 = getelementptr inbounds [144 x i32]* @Xfile, i32 0, i64 %idxprom730
  %374 = load i32* %arrayidx731, align 4
  store i32 %374, i32* %fbrook, align 4
  %375 = load i32* %i, align 4
  %idxprom732 = sext i32 %375 to i64
  %arrayidx733 = getelementptr inbounds [144 x i32]* @Xrank, i32 0, i64 %idxprom732
  %376 = load i32* %arrayidx733, align 4
  store i32 %376, i32* %rbrook, align 4
  br label %if.end734

if.end734:                                        ; preds = %if.then729, %sw.bb726
  %377 = load i32* %srank, align 4
  %cmp735 = icmp eq i32 %377, 2
  br i1 %cmp735, label %if.then736, label %if.end744

if.then736:                                       ; preds = %if.end734
  %378 = load i32* %score, align 4
  %sub737 = sub nsw i32 %378, 25
  store i32 %sub737, i32* %score, align 4
  %379 = load i32* %wr, align 4
  %cmp738 = icmp eq i32 %379, 2
  br i1 %cmp738, label %land.lhs.true739, label %if.end743

land.lhs.true739:                                 ; preds = %if.then736
  %380 = load i32* %rbrook, align 4
  %cmp740 = icmp eq i32 %380, 2
  br i1 %cmp740, label %if.then741, label %if.end743

if.then741:                                       ; preds = %land.lhs.true739
  %381 = load i32* %score, align 4
  %sub742 = sub nsw i32 %381, 10
  store i32 %sub742, i32* %score, align 4
  br label %if.end743

if.end743:                                        ; preds = %if.then741, %land.lhs.true739, %if.then736
  br label %if.end744

if.end744:                                        ; preds = %if.end743, %if.end734
  %382 = load i32* %pawn_file, align 4
  %idxprom745 = sext i32 %382 to i64
  %arrayidx746 = getelementptr inbounds [2 x [11 x i32]]* %pawns, i32 0, i64 0
  %arrayidx747 = getelementptr inbounds [11 x i32]* %arrayidx746, i32 0, i64 %idxprom745
  %383 = load i32* %arrayidx747, align 4
  %tobool748 = icmp ne i32 %383, 0
  br i1 %tobool748, label %if.end766, label %if.then749

if.then749:                                       ; preds = %if.end744
  %384 = load i32* %score, align 4
  %sub750 = sub nsw i32 %384, 5
  store i32 %sub750, i32* %score, align 4
  %385 = load i32* %br, align 4
  %cmp751 = icmp eq i32 %385, 2
  br i1 %cmp751, label %land.lhs.true752, label %if.end758

land.lhs.true752:                                 ; preds = %if.then749
  %386 = load i32* %i, align 4
  %idxprom753 = sext i32 %386 to i64
  %arrayidx754 = getelementptr inbounds [144 x i32]* @Xfile, i32 0, i64 %idxprom753
  %387 = load i32* %arrayidx754, align 4
  %388 = load i32* %fbrook, align 4
  %cmp755 = icmp eq i32 %387, %388
  br i1 %cmp755, label %if.then756, label %if.end758

if.then756:                                       ; preds = %land.lhs.true752
  %389 = load i32* %score, align 4
  %sub757 = sub nsw i32 %389, 12
  store i32 %sub757, i32* %score, align 4
  br label %if.end758

if.end758:                                        ; preds = %if.then756, %land.lhs.true752, %if.then749
  %390 = load i32* %pawn_file, align 4
  %idxprom759 = sext i32 %390 to i64
  %arrayidx760 = getelementptr inbounds [2 x [11 x i32]]* %pawns, i32 0, i64 1
  %arrayidx761 = getelementptr inbounds [11 x i32]* %arrayidx760, i32 0, i64 %idxprom759
  %391 = load i32* %arrayidx761, align 4
  %tobool762 = icmp ne i32 %391, 0
  br i1 %tobool762, label %if.end765, label %if.then763

if.then763:                                       ; preds = %if.end758
  %392 = load i32* %score, align 4
  %sub764 = sub nsw i32 %392, 3
  store i32 %sub764, i32* %score, align 4
  br label %if.end765

if.end765:                                        ; preds = %if.then763, %if.end758
  br label %if.end766

if.end766:                                        ; preds = %if.end765, %if.end744
  br label %sw.epilog

sw.bb767:                                         ; preds = %if.end128
  %393 = load i32* %wb, align 4
  %inc768 = add nsw i32 %393, 1
  store i32 %inc768, i32* %wb, align 4
  br label %sw.epilog

sw.bb769:                                         ; preds = %if.end128
  %394 = load i32* %bb, align 4
  %inc770 = add nsw i32 %394, 1
  store i32 %inc770, i32* %bb, align 4
  br label %sw.epilog

sw.bb771:                                         ; preds = %if.end128
  %395 = load i32* %wn, align 4
  %inc772 = add nsw i32 %395, 1
  store i32 %inc772, i32* %wn, align 4
  br label %sw.epilog

sw.bb773:                                         ; preds = %if.end128
  %396 = load i32* %bn, align 4
  %inc774 = add nsw i32 %396, 1
  store i32 %inc774, i32* %bn, align 4
  br label %sw.epilog

sw.bb775:                                         ; preds = %if.end128
  %397 = load i32* %wq, align 4
  %inc776 = add nsw i32 %397, 1
  store i32 %inc776, i32* %wq, align 4
  br label %sw.epilog

sw.bb777:                                         ; preds = %if.end128
  %398 = load i32* %bq, align 4
  %inc778 = add nsw i32 %398, 1
  store i32 %inc778, i32* %bq, align 4
  br label %sw.epilog

sw.bb779:                                         ; preds = %if.end128
  %399 = load i32* @wmat, align 4
  %cmp780 = icmp sgt i32 %399, 1300
  br i1 %cmp780, label %if.then781, label %if.else877

if.then781:                                       ; preds = %sw.bb779
  %400 = load i32* %i, align 4
  %idxprom782 = sext i32 %400 to i64
  %bitcast1512 = bitcast [144 x i32]* @swhite_king to i8*
  %bitcast1513 = bitcast [144 x i32]* getelementptr inbounds ([144 x i32]* @swhite_king, i32 1) to i8*
  %arrayidx783 = getelementptr inbounds [144 x i32]* @swhite_king, i32 0, i64 %idxprom782
  %401 = load i32* %arrayidx783, align 4
  %402 = load i32* %score, align 4
  %add784 = add nsw i32 %402, %401
  store i32 %add784, i32* %score, align 4
  %403 = load i32* @white_castled, align 4
  %cmp785 = icmp eq i32 %403, 2
  br i1 %cmp785, label %if.then786, label %if.else788

if.then786:                                       ; preds = %if.then781
  %404 = load i32* %score, align 4
  %add787 = add nsw i32 %404, 15
  store i32 %add787, i32* %score, align 4
  br label %if.end805

if.else788:                                       ; preds = %if.then781
  %405 = load i32* @white_castled, align 4
  %cmp789 = icmp eq i32 %405, 1
  br i1 %cmp789, label %if.then790, label %if.else792

if.then790:                                       ; preds = %if.else788
  %406 = load i32* %score, align 4
  %add791 = add nsw i32 %406, 25
  store i32 %add791, i32* %score, align 4
  br label %if.end804

if.else792:                                       ; preds = %if.else788
  %407 = load i32* getelementptr inbounds ([144 x i32]* @moved, i32 0, i64 30), align 4
  %tobool793 = icmp ne i32 %407, 0
  br i1 %tobool793, label %if.then794, label %if.end803

if.then794:                                       ; preds = %if.else792
  %408 = load i32* %score, align 4
  %sub795 = sub nsw i32 %408, 10
  store i32 %sub795, i32* %score, align 4
  %409 = load i32* %pawn_file, align 4
  %idxprom796 = sext i32 %409 to i64
  %arrayidx797 = getelementptr inbounds [2 x [11 x i32]]* %pawns, i32 0, i64 1
  %arrayidx798 = getelementptr inbounds [11 x i32]* %arrayidx797, i32 0, i64 %idxprom796
  %410 = load i32* %arrayidx798, align 4
  %tobool799 = icmp ne i32 %410, 0
  br i1 %tobool799, label %if.end802, label %if.then800

if.then800:                                       ; preds = %if.then794
  %411 = load i32* %score, align 4
  %sub801 = sub nsw i32 %411, 15
  store i32 %sub801, i32* %score, align 4
  br label %if.end802

if.end802:                                        ; preds = %if.then800, %if.then794
  br label %if.end803

if.end803:                                        ; preds = %if.end802, %if.else792
  br label %if.end804

if.end804:                                        ; preds = %if.end803, %if.then790
  br label %if.end805

if.end805:                                        ; preds = %if.end804, %if.then786
  %412 = load i32* @wking_loc, align 4
  %idxprom806 = sext i32 %412 to i64
  %arrayidx807 = getelementptr inbounds [144 x i32]* @Xfile, i32 0, i64 %idxprom806
  %413 = load i32* %arrayidx807, align 4
  %cmp808 = icmp ne i32 %413, 4
  br i1 %cmp808, label %land.lhs.true809, label %if.else874

land.lhs.true809:                                 ; preds = %if.end805
  %414 = load i32* @wking_loc, align 4
  %idxprom810 = sext i32 %414 to i64
  %arrayidx811 = getelementptr inbounds [144 x i32]* @Xfile, i32 0, i64 %idxprom810
  %415 = load i32* %arrayidx811, align 4
  %cmp812 = icmp ne i32 %415, 5
  br i1 %cmp812, label %if.then813, label %if.else874

if.then813:                                       ; preds = %land.lhs.true809
  %416 = load i32* %srank, align 4
  %417 = load i32* %pawn_file, align 4
  %idxprom814 = sext i32 %417 to i64
  %arrayidx815 = getelementptr inbounds [11 x i32]* %white_back_pawn, i32 0, i64 %idxprom814
  %418 = load i32* %arrayidx815, align 4
  %cmp816 = icmp slt i32 %416, %418
  br i1 %cmp816, label %land.lhs.true817, label %if.else829

land.lhs.true817:                                 ; preds = %if.then813
  %419 = load i32* %pawn_file, align 4
  %idxprom818 = sext i32 %419 to i64
  %arrayidx819 = getelementptr inbounds [2 x [11 x i32]]* %pawns, i32 0, i64 1
  %arrayidx820 = getelementptr inbounds [11 x i32]* %arrayidx819, i32 0, i64 %idxprom818
  %420 = load i32* %arrayidx820, align 4
  %tobool821 = icmp ne i32 %420, 0
  br i1 %tobool821, label %if.then822, label %if.else829

if.then822:                                       ; preds = %land.lhs.true817
  %421 = load i32* %pawn_file, align 4
  %idxprom823 = sext i32 %421 to i64
  %arrayidx824 = getelementptr inbounds [11 x i32]* %white_back_pawn, i32 0, i64 %idxprom823
  %422 = load i32* %arrayidx824, align 4
  %423 = load i32* %srank, align 4
  %sub825 = sub nsw i32 %422, %423
  %sub826 = sub nsw i32 %sub825, 1
  %mul827 = mul nsw i32 9, %sub826
  %424 = load i32* %score, align 4
  %sub828 = sub nsw i32 %424, %mul827
  store i32 %sub828, i32* %score, align 4
  br label %if.end831

if.else829:                                       ; preds = %land.lhs.true817, %if.then813
  %425 = load i32* %score, align 4
  %sub830 = sub nsw i32 %425, 22
  store i32 %sub830, i32* %score, align 4
  br label %if.end831

if.end831:                                        ; preds = %if.else829, %if.then822
  %426 = load i32* %srank, align 4
  %427 = load i32* %pawn_file, align 4
  %add832 = add nsw i32 %427, 1
  %idxprom833 = sext i32 %add832 to i64
  %arrayidx834 = getelementptr inbounds [11 x i32]* %white_back_pawn, i32 0, i64 %idxprom833
  %428 = load i32* %arrayidx834, align 4
  %cmp835 = icmp slt i32 %426, %428
  br i1 %cmp835, label %land.lhs.true836, label %if.else850

land.lhs.true836:                                 ; preds = %if.end831
  %429 = load i32* %pawn_file, align 4
  %add837 = add nsw i32 %429, 1
  %idxprom838 = sext i32 %add837 to i64
  %arrayidx839 = getelementptr inbounds [2 x [11 x i32]]* %pawns, i32 0, i64 1
  %arrayidx840 = getelementptr inbounds [11 x i32]* %arrayidx839, i32 0, i64 %idxprom838
  %430 = load i32* %arrayidx840, align 4
  %tobool841 = icmp ne i32 %430, 0
  br i1 %tobool841, label %if.then842, label %if.else850

if.then842:                                       ; preds = %land.lhs.true836
  %431 = load i32* %pawn_file, align 4
  %add843 = add nsw i32 %431, 1
  %idxprom844 = sext i32 %add843 to i64
  %arrayidx845 = getelementptr inbounds [11 x i32]* %white_back_pawn, i32 0, i64 %idxprom844
  %432 = load i32* %arrayidx845, align 4
  %433 = load i32* %srank, align 4
  %sub846 = sub nsw i32 %432, %433
  %sub847 = sub nsw i32 %sub846, 1
  %mul848 = mul nsw i32 8, %sub847
  %434 = load i32* %score, align 4
  %sub849 = sub nsw i32 %434, %mul848
  store i32 %sub849, i32* %score, align 4
  br label %if.end852

if.else850:                                       ; preds = %land.lhs.true836, %if.end831
  %435 = load i32* %score, align 4
  %sub851 = sub nsw i32 %435, 16
  store i32 %sub851, i32* %score, align 4
  br label %if.end852

if.end852:                                        ; preds = %if.else850, %if.then842
  %436 = load i32* %srank, align 4
  %437 = load i32* %pawn_file, align 4
  %sub853 = sub nsw i32 %437, 1
  %idxprom854 = sext i32 %sub853 to i64
  %arrayidx855 = getelementptr inbounds [11 x i32]* %white_back_pawn, i32 0, i64 %idxprom854
  %438 = load i32* %arrayidx855, align 4
  %cmp856 = icmp slt i32 %436, %438
  br i1 %cmp856, label %land.lhs.true857, label %if.else871

land.lhs.true857:                                 ; preds = %if.end852
  %439 = load i32* %pawn_file, align 4
  %sub858 = sub nsw i32 %439, 1
  %idxprom859 = sext i32 %sub858 to i64
  %arrayidx860 = getelementptr inbounds [2 x [11 x i32]]* %pawns, i32 0, i64 1
  %arrayidx861 = getelementptr inbounds [11 x i32]* %arrayidx860, i32 0, i64 %idxprom859
  %440 = load i32* %arrayidx861, align 4
  %tobool862 = icmp ne i32 %440, 0
  br i1 %tobool862, label %if.then863, label %if.else871

if.then863:                                       ; preds = %land.lhs.true857
  %441 = load i32* %pawn_file, align 4
  %sub864 = sub nsw i32 %441, 1
  %idxprom865 = sext i32 %sub864 to i64
  %arrayidx866 = getelementptr inbounds [11 x i32]* %white_back_pawn, i32 0, i64 %idxprom865
  %442 = load i32* %arrayidx866, align 4
  %443 = load i32* %srank, align 4
  %sub867 = sub nsw i32 %442, %443
  %sub868 = sub nsw i32 %sub867, 1
  %mul869 = mul nsw i32 8, %sub868
  %444 = load i32* %score, align 4
  %sub870 = sub nsw i32 %444, %mul869
  store i32 %sub870, i32* %score, align 4
  br label %if.end873

if.else871:                                       ; preds = %land.lhs.true857, %if.end852
  %445 = load i32* %score, align 4
  %sub872 = sub nsw i32 %445, 16
  store i32 %sub872, i32* %score, align 4
  br label %if.end873

if.end873:                                        ; preds = %if.else871, %if.then863
  br label %if.end876

if.else874:                                       ; preds = %land.lhs.true809, %if.end805
  %446 = load i32* %score, align 4
  %sub875 = sub nsw i32 %446, 10
  store i32 %sub875, i32* %score, align 4
  br label %if.end876

if.end876:                                        ; preds = %if.else874, %if.end873
  br label %if.end881

if.else877:                                       ; preds = %sw.bb779
  %447 = load i32* %i, align 4
  %idxprom878 = sext i32 %447 to i64
  %bitcast1514 = bitcast [144 x i32]* @send_king to i8*
  %bitcast1515 = bitcast [144 x i32]* getelementptr inbounds ([144 x i32]* @send_king, i32 1) to i8*
  %arrayidx879 = getelementptr inbounds [144 x i32]* @send_king, i32 0, i64 %idxprom878
  %448 = load i32* %arrayidx879, align 4
  %449 = load i32* %score, align 4
  %add880 = add nsw i32 %449, %448
  store i32 %add880, i32* %score, align 4
  br label %if.end881

if.end881:                                        ; preds = %if.else877, %if.end876
  br label %sw.epilog

sw.bb882:                                         ; preds = %if.end128
  %450 = load i32* @bmat, align 4
  %cmp883 = icmp sgt i32 %450, 1300
  br i1 %cmp883, label %if.then884, label %if.else986

if.then884:                                       ; preds = %sw.bb882
  %451 = load i32* %i, align 4
  %idxprom885 = sext i32 %451 to i64
  %bitcast1516 = bitcast [144 x i32]* @sblack_king to i8*
  %bitcast1517 = bitcast [144 x i32]* getelementptr inbounds ([144 x i32]* @sblack_king, i32 1) to i8*
  %arrayidx886 = getelementptr inbounds [144 x i32]* @sblack_king, i32 0, i64 %idxprom885
  %452 = load i32* %arrayidx886, align 4
  %453 = load i32* %score, align 4
  %sub887 = sub nsw i32 %453, %452
  store i32 %sub887, i32* %score, align 4
  %454 = load i32* @black_castled, align 4
  %cmp888 = icmp eq i32 %454, 4
  br i1 %cmp888, label %if.then889, label %if.else891

if.then889:                                       ; preds = %if.then884
  %455 = load i32* %score, align 4
  %sub890 = sub nsw i32 %455, 15
  store i32 %sub890, i32* %score, align 4
  br label %if.end908

if.else891:                                       ; preds = %if.then884
  %456 = load i32* @black_castled, align 4
  %cmp892 = icmp eq i32 %456, 3
  br i1 %cmp892, label %if.then893, label %if.else895

if.then893:                                       ; preds = %if.else891
  %457 = load i32* %score, align 4
  %sub894 = sub nsw i32 %457, 25
  store i32 %sub894, i32* %score, align 4
  br label %if.end907

if.else895:                                       ; preds = %if.else891
  %458 = load i32* getelementptr inbounds ([144 x i32]* @moved, i32 0, i64 114), align 4
  %tobool896 = icmp ne i32 %458, 0
  br i1 %tobool896, label %if.then897, label %if.end906

if.then897:                                       ; preds = %if.else895
  %459 = load i32* %score, align 4
  %add898 = add nsw i32 %459, 10
  store i32 %add898, i32* %score, align 4
  %460 = load i32* %pawn_file, align 4
  %idxprom899 = sext i32 %460 to i64
  %arrayidx900 = getelementptr inbounds [2 x [11 x i32]]* %pawns, i32 0, i64 0
  %arrayidx901 = getelementptr inbounds [11 x i32]* %arrayidx900, i32 0, i64 %idxprom899
  %461 = load i32* %arrayidx901, align 4
  %tobool902 = icmp ne i32 %461, 0
  br i1 %tobool902, label %if.end905, label %if.then903

if.then903:                                       ; preds = %if.then897
  %462 = load i32* %score, align 4
  %add904 = add nsw i32 %462, 15
  store i32 %add904, i32* %score, align 4
  br label %if.end905

if.end905:                                        ; preds = %if.then903, %if.then897
  br label %if.end906

if.end906:                                        ; preds = %if.end905, %if.else895
  br label %if.end907

if.end907:                                        ; preds = %if.end906, %if.then893
  br label %if.end908

if.end908:                                        ; preds = %if.end907, %if.then889
  %463 = load i32* @bking_loc, align 4
  %idxprom909 = sext i32 %463 to i64
  %arrayidx910 = getelementptr inbounds [144 x i32]* @Xfile, i32 0, i64 %idxprom909
  %464 = load i32* %arrayidx910, align 4
  %cmp911 = icmp ne i32 %464, 4
  br i1 %cmp911, label %land.lhs.true912, label %if.else983

land.lhs.true912:                                 ; preds = %if.end908
  %465 = load i32* @bking_loc, align 4
  %idxprom913 = sext i32 %465 to i64
  %arrayidx914 = getelementptr inbounds [144 x i32]* @Xfile, i32 0, i64 %idxprom913
  %466 = load i32* %arrayidx914, align 4
  %cmp915 = icmp ne i32 %466, 5
  br i1 %cmp915, label %if.then916, label %if.else983

if.then916:                                       ; preds = %land.lhs.true912
  %467 = load i32* %srank, align 4
  %468 = load i32* %pawn_file, align 4
  %idxprom917 = sext i32 %468 to i64
  %arrayidx918 = getelementptr inbounds [11 x i32]* %black_back_pawn, i32 0, i64 %idxprom917
  %469 = load i32* %arrayidx918, align 4
  %cmp919 = icmp sgt i32 %467, %469
  br i1 %cmp919, label %land.lhs.true920, label %if.else934

land.lhs.true920:                                 ; preds = %if.then916
  %470 = load i32* %pawn_file, align 4
  %idxprom921 = sext i32 %470 to i64
  %arrayidx922 = getelementptr inbounds [2 x [11 x i32]]* %pawns, i32 0, i64 0
  %arrayidx923 = getelementptr inbounds [11 x i32]* %arrayidx922, i32 0, i64 %idxprom921
  %471 = load i32* %arrayidx923, align 4
  %tobool924 = icmp ne i32 %471, 0
  br i1 %tobool924, label %if.then925, label %if.else934

if.then925:                                       ; preds = %land.lhs.true920
  %472 = load i32* %srank, align 4
  %473 = load i32* %pawn_file, align 4
  %idxprom926 = sext i32 %473 to i64
  %arrayidx927 = getelementptr inbounds [11 x i32]* %black_back_pawn, i32 0, i64 %idxprom926
  %474 = load i32* %arrayidx927, align 4
  %sub928 = sub nsw i32 %472, %474
  %sub929 = sub nsw i32 %sub928, 1
  %idxprom930 = sext i32 %sub929 to i64
  %bitcast1530 = bitcast [9 x i32]* @srev_rank to i8*
  %bitcast1531 = bitcast [9 x i32]* getelementptr inbounds ([9 x i32]* @srev_rank, i32 1) to i8*
  %arrayidx931 = getelementptr inbounds [9 x i32]* @srev_rank, i32 0, i64 %idxprom930
  %475 = load i32* %arrayidx931, align 4
  %mul932 = mul nsw i32 9, %475
  %476 = load i32* %score, align 4
  %add933 = add nsw i32 %476, %mul932
  store i32 %add933, i32* %score, align 4
  br label %if.end936

if.else934:                                       ; preds = %land.lhs.true920, %if.then916
  %477 = load i32* %score, align 4
  %add935 = add nsw i32 %477, 22
  store i32 %add935, i32* %score, align 4
  br label %if.end936

if.end936:                                        ; preds = %if.else934, %if.then925
  %478 = load i32* %srank, align 4
  %479 = load i32* %pawn_file, align 4
  %add937 = add nsw i32 %479, 1
  %idxprom938 = sext i32 %add937 to i64
  %arrayidx939 = getelementptr inbounds [11 x i32]* %black_back_pawn, i32 0, i64 %idxprom938
  %480 = load i32* %arrayidx939, align 4
  %cmp940 = icmp sgt i32 %478, %480
  br i1 %cmp940, label %land.lhs.true941, label %if.else957

land.lhs.true941:                                 ; preds = %if.end936
  %481 = load i32* %pawn_file, align 4
  %add942 = add nsw i32 %481, 1
  %idxprom943 = sext i32 %add942 to i64
  %arrayidx944 = getelementptr inbounds [2 x [11 x i32]]* %pawns, i32 0, i64 0
  %arrayidx945 = getelementptr inbounds [11 x i32]* %arrayidx944, i32 0, i64 %idxprom943
  %482 = load i32* %arrayidx945, align 4
  %tobool946 = icmp ne i32 %482, 0
  br i1 %tobool946, label %if.then947, label %if.else957

if.then947:                                       ; preds = %land.lhs.true941
  %483 = load i32* %srank, align 4
  %484 = load i32* %pawn_file, align 4
  %add948 = add nsw i32 %484, 1
  %idxprom949 = sext i32 %add948 to i64
  %arrayidx950 = getelementptr inbounds [11 x i32]* %black_back_pawn, i32 0, i64 %idxprom949
  %485 = load i32* %arrayidx950, align 4
  %sub951 = sub nsw i32 %483, %485
  %sub952 = sub nsw i32 %sub951, 1
  %idxprom953 = sext i32 %sub952 to i64
  %bitcast1532 = bitcast [9 x i32]* @srev_rank to i8*
  %bitcast1533 = bitcast [9 x i32]* getelementptr inbounds ([9 x i32]* @srev_rank, i32 1) to i8*
  %arrayidx954 = getelementptr inbounds [9 x i32]* @srev_rank, i32 0, i64 %idxprom953
  %486 = load i32* %arrayidx954, align 4
  %mul955 = mul nsw i32 8, %486
  %487 = load i32* %score, align 4
  %add956 = add nsw i32 %487, %mul955
  store i32 %add956, i32* %score, align 4
  br label %if.end959

if.else957:                                       ; preds = %land.lhs.true941, %if.end936
  %488 = load i32* %score, align 4
  %add958 = add nsw i32 %488, 16
  store i32 %add958, i32* %score, align 4
  br label %if.end959

if.end959:                                        ; preds = %if.else957, %if.then947
  %489 = load i32* %srank, align 4
  %490 = load i32* %pawn_file, align 4
  %sub960 = sub nsw i32 %490, 1
  %idxprom961 = sext i32 %sub960 to i64
  %arrayidx962 = getelementptr inbounds [11 x i32]* %black_back_pawn, i32 0, i64 %idxprom961
  %491 = load i32* %arrayidx962, align 4
  %cmp963 = icmp sgt i32 %489, %491
  br i1 %cmp963, label %land.lhs.true964, label %if.else980

land.lhs.true964:                                 ; preds = %if.end959
  %492 = load i32* %pawn_file, align 4
  %sub965 = sub nsw i32 %492, 1
  %idxprom966 = sext i32 %sub965 to i64
  %arrayidx967 = getelementptr inbounds [2 x [11 x i32]]* %pawns, i32 0, i64 0
  %arrayidx968 = getelementptr inbounds [11 x i32]* %arrayidx967, i32 0, i64 %idxprom966
  %493 = load i32* %arrayidx968, align 4
  %tobool969 = icmp ne i32 %493, 0
  br i1 %tobool969, label %if.then970, label %if.else980

if.then970:                                       ; preds = %land.lhs.true964
  %494 = load i32* %srank, align 4
  %495 = load i32* %pawn_file, align 4
  %sub971 = sub nsw i32 %495, 1
  %idxprom972 = sext i32 %sub971 to i64
  %arrayidx973 = getelementptr inbounds [11 x i32]* %black_back_pawn, i32 0, i64 %idxprom972
  %496 = load i32* %arrayidx973, align 4
  %sub974 = sub nsw i32 %494, %496
  %sub975 = sub nsw i32 %sub974, 1
  %idxprom976 = sext i32 %sub975 to i64
  %bitcast1534 = bitcast [9 x i32]* @srev_rank to i8*
  %bitcast1535 = bitcast [9 x i32]* getelementptr inbounds ([9 x i32]* @srev_rank, i32 1) to i8*
  %arrayidx977 = getelementptr inbounds [9 x i32]* @srev_rank, i32 0, i64 %idxprom976
  %497 = load i32* %arrayidx977, align 4
  %mul978 = mul nsw i32 8, %497
  %498 = load i32* %score, align 4
  %add979 = add nsw i32 %498, %mul978
  store i32 %add979, i32* %score, align 4
  br label %if.end982

if.else980:                                       ; preds = %land.lhs.true964, %if.end959
  %499 = load i32* %score, align 4
  %add981 = add nsw i32 %499, 16
  store i32 %add981, i32* %score, align 4
  br label %if.end982

if.end982:                                        ; preds = %if.else980, %if.then970
  br label %if.end985

if.else983:                                       ; preds = %land.lhs.true912, %if.end908
  %500 = load i32* %score, align 4
  %add984 = add nsw i32 %500, 10
  store i32 %add984, i32* %score, align 4
  br label %if.end985

if.end985:                                        ; preds = %if.else983, %if.end982
  br label %if.end990

if.else986:                                       ; preds = %sw.bb882
  %501 = load i32* %i, align 4
  %idxprom987 = sext i32 %501 to i64
  %bitcast1518 = bitcast [144 x i32]* @send_king to i8*
  %bitcast1519 = bitcast [144 x i32]* getelementptr inbounds ([144 x i32]* @send_king, i32 1) to i8*
  %arrayidx988 = getelementptr inbounds [144 x i32]* @send_king, i32 0, i64 %idxprom987
  %502 = load i32* %arrayidx988, align 4
  %503 = load i32* %score, align 4
  %sub989 = sub nsw i32 %503, %502
  store i32 %sub989, i32* %score, align 4
  br label %if.end990

if.end990:                                        ; preds = %if.else986, %if.end985
  br label %sw.epilog

sw.epilog:                                        ; preds = %if.end990, %if.end881, %sw.bb777, %sw.bb775, %sw.bb773, %sw.bb771, %sw.bb769, %sw.bb767, %if.end766, %if.end725, %if.end684, %if.end413, %if.end128
  br label %for.inc991

for.inc991:                                       ; preds = %sw.epilog, %if.then125
  %504 = load i32* %j, align 4
  %inc992 = add nsw i32 %504, 1
  store i32 %inc992, i32* %j, align 4
  br label %for.cond119

for.end993:                                       ; preds = %for.cond119
  %505 = load i32* @wmat, align 4
  %cmp994 = icmp sgt i32 %505, 2200
  br i1 %cmp994, label %if.then997, label %lor.lhs.false995

lor.lhs.false995:                                 ; preds = %for.end993
  %506 = load i32* @bmat, align 4
  %cmp996 = icmp sgt i32 %506, 2200
  br i1 %cmp996, label %if.then997, label %if.end1022

if.then997:                                       ; preds = %lor.lhs.false995, %for.end993
  %507 = load i32* getelementptr inbounds ([144 x i32]* @moved, i32 0, i64 41), align 4
  %tobool998 = icmp ne i32 %507, 0
  br i1 %tobool998, label %if.end1003, label %land.lhs.true999

land.lhs.true999:                                 ; preds = %if.then997
  %508 = load i32* getelementptr inbounds ([144 x i32]* @board, i32 0, i64 53), align 4
  %cmp1000 = icmp ne i32 %508, 13
  br i1 %cmp1000, label %if.then1001, label %if.end1003

if.then1001:                                      ; preds = %land.lhs.true999
  %509 = load i32* %score, align 4
  %sub1002 = sub nsw i32 %509, 5
  store i32 %sub1002, i32* %score, align 4
  br label %if.end1003

if.end1003:                                       ; preds = %if.then1001, %land.lhs.true999, %if.then997
  %510 = load i32* getelementptr inbounds ([144 x i32]* @moved, i32 0, i64 42), align 4
  %tobool1004 = icmp ne i32 %510, 0
  br i1 %tobool1004, label %if.end1009, label %land.lhs.true1005

land.lhs.true1005:                                ; preds = %if.end1003
  %511 = load i32* getelementptr inbounds ([144 x i32]* @board, i32 0, i64 54), align 4
  %cmp1006 = icmp ne i32 %511, 13
  br i1 %cmp1006, label %if.then1007, label %if.end1009

if.then1007:                                      ; preds = %land.lhs.true1005
  %512 = load i32* %score, align 4
  %sub1008 = sub nsw i32 %512, 5
  store i32 %sub1008, i32* %score, align 4
  br label %if.end1009

if.end1009:                                       ; preds = %if.then1007, %land.lhs.true1005, %if.end1003
  %513 = load i32* getelementptr inbounds ([144 x i32]* @moved, i32 0, i64 101), align 4
  %tobool1010 = icmp ne i32 %513, 0
  br i1 %tobool1010, label %if.end1015, label %land.lhs.true1011

land.lhs.true1011:                                ; preds = %if.end1009
  %514 = load i32* getelementptr inbounds ([144 x i32]* @board, i32 0, i64 89), align 4
  %cmp1012 = icmp ne i32 %514, 13
  br i1 %cmp1012, label %if.then1013, label %if.end1015

if.then1013:                                      ; preds = %land.lhs.true1011
  %515 = load i32* %score, align 4
  %add1014 = add nsw i32 %515, 5
  store i32 %add1014, i32* %score, align 4
  br label %if.end1015

if.end1015:                                       ; preds = %if.then1013, %land.lhs.true1011, %if.end1009
  %516 = load i32* getelementptr inbounds ([144 x i32]* @moved, i32 0, i64 102), align 4
  %tobool1016 = icmp ne i32 %516, 0
  br i1 %tobool1016, label %if.end1021, label %land.lhs.true1017

land.lhs.true1017:                                ; preds = %if.end1015
  %517 = load i32* getelementptr inbounds ([144 x i32]* @board, i32 0, i64 90), align 4
  %cmp1018 = icmp ne i32 %517, 13
  br i1 %cmp1018, label %if.then1019, label %if.end1021

if.then1019:                                      ; preds = %land.lhs.true1017
  %518 = load i32* %score, align 4
  %add1020 = add nsw i32 %518, 5
  store i32 %add1020, i32* %score, align 4
  br label %if.end1021

if.end1021:                                       ; preds = %if.then1019, %land.lhs.true1017, %if.end1015
  br label %if.end1022

if.end1022:                                       ; preds = %if.end1021, %lor.lhs.false995
  %519 = load i32* @wmat, align 4
  %cmp1023 = icmp sgt i32 %519, 1300
  br i1 %cmp1023, label %if.then1026, label %lor.lhs.false1024

lor.lhs.false1024:                                ; preds = %if.end1022
  %520 = load i32* @bmat, align 4
  %cmp1025 = icmp sgt i32 %520, 1300
  br i1 %cmp1025, label %if.then1026, label %if.end1124

if.then1026:                                      ; preds = %lor.lhs.false1024, %if.end1022
  %521 = load i32* @wking_loc, align 4
  %idxprom1027 = sext i32 %521 to i64
  %arrayidx1028 = getelementptr inbounds [144 x i32]* @Xfile, i32 0, i64 %idxprom1027
  %522 = load i32* %arrayidx1028, align 4
  %add1029 = add nsw i32 %522, 1
  store i32 %add1029, i32* %wking_pawn_file, align 4
  %523 = load i32* @bking_loc, align 4
  %idxprom1030 = sext i32 %523 to i64
  %arrayidx1031 = getelementptr inbounds [144 x i32]* @Xfile, i32 0, i64 %idxprom1030
  %524 = load i32* %arrayidx1031, align 4
  %add1032 = add nsw i32 %524, 1
  store i32 %add1032, i32* %bking_pawn_file, align 4
  %525 = load i32* %wking_pawn_file, align 4
  %526 = load i32* %bking_pawn_file, align 4
  %sub1033 = sub nsw i32 %525, %526
  %call1034 = call i32 @softboundcets_abs(i32 %sub1033) #5
  %cmp1035 = icmp sgt i32 %call1034, 2
  br i1 %cmp1035, label %if.then1036, label %if.end1123

if.then1036:                                      ; preds = %if.then1026
  %527 = load i32* %wking_pawn_file, align 4
  %idxprom1037 = sext i32 %527 to i64
  %arrayidx1038 = getelementptr inbounds [11 x i32]* %black_back_pawn, i32 0, i64 %idxprom1037
  %528 = load i32* %arrayidx1038, align 4
  %idxprom1039 = sext i32 %528 to i64
  %bitcast1520 = bitcast [9 x i32]* @srev_rank to i8*
  %bitcast1521 = bitcast [9 x i32]* getelementptr inbounds ([9 x i32]* @srev_rank, i32 1) to i8*
  %arrayidx1040 = getelementptr inbounds [9 x i32]* @srev_rank, i32 0, i64 %idxprom1039
  %529 = load i32* %arrayidx1040, align 4
  %sub1041 = sub nsw i32 %529, 2
  %mul1042 = mul nsw i32 3, %sub1041
  %530 = load i32* %wksafety, align 4
  %add1043 = add nsw i32 %530, %mul1042
  store i32 %add1043, i32* %wksafety, align 4
  %531 = load i32* %wking_pawn_file, align 4
  %add1044 = add nsw i32 %531, 1
  %idxprom1045 = sext i32 %add1044 to i64
  %arrayidx1046 = getelementptr inbounds [11 x i32]* %black_back_pawn, i32 0, i64 %idxprom1045
  %532 = load i32* %arrayidx1046, align 4
  %idxprom1047 = sext i32 %532 to i64
  %bitcast1522 = bitcast [9 x i32]* @srev_rank to i8*
  %bitcast1523 = bitcast [9 x i32]* getelementptr inbounds ([9 x i32]* @srev_rank, i32 1) to i8*
  %arrayidx1048 = getelementptr inbounds [9 x i32]* @srev_rank, i32 0, i64 %idxprom1047
  %533 = load i32* %arrayidx1048, align 4
  %sub1049 = sub nsw i32 %533, 2
  %mul1050 = mul nsw i32 3, %sub1049
  %534 = load i32* %wksafety, align 4
  %add1051 = add nsw i32 %534, %mul1050
  store i32 %add1051, i32* %wksafety, align 4
  %535 = load i32* %wking_pawn_file, align 4
  %sub1052 = sub nsw i32 %535, 1
  %idxprom1053 = sext i32 %sub1052 to i64
  %arrayidx1054 = getelementptr inbounds [11 x i32]* %black_back_pawn, i32 0, i64 %idxprom1053
  %536 = load i32* %arrayidx1054, align 4
  %idxprom1055 = sext i32 %536 to i64
  %bitcast1524 = bitcast [9 x i32]* @srev_rank to i8*
  %bitcast1525 = bitcast [9 x i32]* getelementptr inbounds ([9 x i32]* @srev_rank, i32 1) to i8*
  %arrayidx1056 = getelementptr inbounds [9 x i32]* @srev_rank, i32 0, i64 %idxprom1055
  %537 = load i32* %arrayidx1056, align 4
  %sub1057 = sub nsw i32 %537, 2
  %mul1058 = mul nsw i32 3, %sub1057
  %538 = load i32* %wksafety, align 4
  %add1059 = add nsw i32 %538, %mul1058
  store i32 %add1059, i32* %wksafety, align 4
  %539 = load i32* %bking_pawn_file, align 4
  %idxprom1060 = sext i32 %539 to i64
  %arrayidx1061 = getelementptr inbounds [11 x i32]* %white_back_pawn, i32 0, i64 %idxprom1060
  %540 = load i32* %arrayidx1061, align 4
  %sub1062 = sub nsw i32 %540, 2
  %mul1063 = mul nsw i32 3, %sub1062
  %541 = load i32* %bksafety, align 4
  %add1064 = add nsw i32 %541, %mul1063
  store i32 %add1064, i32* %bksafety, align 4
  %542 = load i32* %bking_pawn_file, align 4
  %add1065 = add nsw i32 %542, 1
  %idxprom1066 = sext i32 %add1065 to i64
  %arrayidx1067 = getelementptr inbounds [11 x i32]* %white_back_pawn, i32 0, i64 %idxprom1066
  %543 = load i32* %arrayidx1067, align 4
  %sub1068 = sub nsw i32 %543, 2
  %mul1069 = mul nsw i32 3, %sub1068
  %544 = load i32* %bksafety, align 4
  %add1070 = add nsw i32 %544, %mul1069
  store i32 %add1070, i32* %bksafety, align 4
  %545 = load i32* %bking_pawn_file, align 4
  %sub1071 = sub nsw i32 %545, 1
  %idxprom1072 = sext i32 %sub1071 to i64
  %arrayidx1073 = getelementptr inbounds [11 x i32]* %white_back_pawn, i32 0, i64 %idxprom1072
  %546 = load i32* %arrayidx1073, align 4
  %sub1074 = sub nsw i32 %546, 2
  %mul1075 = mul nsw i32 3, %sub1074
  %547 = load i32* %bksafety, align 4
  %add1076 = add nsw i32 %547, %mul1075
  store i32 %add1076, i32* %bksafety, align 4
  %548 = load i32* %wking_pawn_file, align 4
  %idxprom1077 = sext i32 %548 to i64
  %arrayidx1078 = getelementptr inbounds [2 x [11 x i32]]* %pawns, i32 0, i64 0
  %arrayidx1079 = getelementptr inbounds [11 x i32]* %arrayidx1078, i32 0, i64 %idxprom1077
  %549 = load i32* %arrayidx1079, align 4
  %tobool1080 = icmp ne i32 %549, 0
  br i1 %tobool1080, label %if.end1083, label %if.then1081

if.then1081:                                      ; preds = %if.then1036
  %550 = load i32* %wksafety, align 4
  %add1082 = add nsw i32 %550, 8
  store i32 %add1082, i32* %wksafety, align 4
  br label %if.end1083

if.end1083:                                       ; preds = %if.then1081, %if.then1036
  %551 = load i32* %wking_pawn_file, align 4
  %add1084 = add nsw i32 %551, 1
  %idxprom1085 = sext i32 %add1084 to i64
  %arrayidx1086 = getelementptr inbounds [2 x [11 x i32]]* %pawns, i32 0, i64 0
  %arrayidx1087 = getelementptr inbounds [11 x i32]* %arrayidx1086, i32 0, i64 %idxprom1085
  %552 = load i32* %arrayidx1087, align 4
  %tobool1088 = icmp ne i32 %552, 0
  br i1 %tobool1088, label %if.end1091, label %if.then1089

if.then1089:                                      ; preds = %if.end1083
  %553 = load i32* %wksafety, align 4
  %add1090 = add nsw i32 %553, 6
  store i32 %add1090, i32* %wksafety, align 4
  br label %if.end1091

if.end1091:                                       ; preds = %if.then1089, %if.end1083
  %554 = load i32* %wking_pawn_file, align 4
  %sub1092 = sub nsw i32 %554, 1
  %idxprom1093 = sext i32 %sub1092 to i64
  %arrayidx1094 = getelementptr inbounds [2 x [11 x i32]]* %pawns, i32 0, i64 0
  %arrayidx1095 = getelementptr inbounds [11 x i32]* %arrayidx1094, i32 0, i64 %idxprom1093
  %555 = load i32* %arrayidx1095, align 4
  %tobool1096 = icmp ne i32 %555, 0
  br i1 %tobool1096, label %if.end1099, label %if.then1097

if.then1097:                                      ; preds = %if.end1091
  %556 = load i32* %wksafety, align 4
  %add1098 = add nsw i32 %556, 6
  store i32 %add1098, i32* %wksafety, align 4
  br label %if.end1099

if.end1099:                                       ; preds = %if.then1097, %if.end1091
  %557 = load i32* %bking_pawn_file, align 4
  %idxprom1100 = sext i32 %557 to i64
  %arrayidx1101 = getelementptr inbounds [2 x [11 x i32]]* %pawns, i32 0, i64 1
  %arrayidx1102 = getelementptr inbounds [11 x i32]* %arrayidx1101, i32 0, i64 %idxprom1100
  %558 = load i32* %arrayidx1102, align 4
  %tobool1103 = icmp ne i32 %558, 0
  br i1 %tobool1103, label %if.end1106, label %if.then1104

if.then1104:                                      ; preds = %if.end1099
  %559 = load i32* %bksafety, align 4
  %add1105 = add nsw i32 %559, 8
  store i32 %add1105, i32* %bksafety, align 4
  br label %if.end1106

if.end1106:                                       ; preds = %if.then1104, %if.end1099
  %560 = load i32* %bking_pawn_file, align 4
  %add1107 = add nsw i32 %560, 1
  %idxprom1108 = sext i32 %add1107 to i64
  %arrayidx1109 = getelementptr inbounds [2 x [11 x i32]]* %pawns, i32 0, i64 1
  %arrayidx1110 = getelementptr inbounds [11 x i32]* %arrayidx1109, i32 0, i64 %idxprom1108
  %561 = load i32* %arrayidx1110, align 4
  %tobool1111 = icmp ne i32 %561, 0
  br i1 %tobool1111, label %if.end1114, label %if.then1112

if.then1112:                                      ; preds = %if.end1106
  %562 = load i32* %bksafety, align 4
  %add1113 = add nsw i32 %562, 6
  store i32 %add1113, i32* %bksafety, align 4
  br label %if.end1114

if.end1114:                                       ; preds = %if.then1112, %if.end1106
  %563 = load i32* %bking_pawn_file, align 4
  %sub1115 = sub nsw i32 %563, 1
  %idxprom1116 = sext i32 %sub1115 to i64
  %arrayidx1117 = getelementptr inbounds [2 x [11 x i32]]* %pawns, i32 0, i64 1
  %arrayidx1118 = getelementptr inbounds [11 x i32]* %arrayidx1117, i32 0, i64 %idxprom1116
  %564 = load i32* %arrayidx1118, align 4
  %tobool1119 = icmp ne i32 %564, 0
  br i1 %tobool1119, label %if.end1122, label %if.then1120

if.then1120:                                      ; preds = %if.end1114
  %565 = load i32* %bksafety, align 4
  %add1121 = add nsw i32 %565, 6
  store i32 %add1121, i32* %bksafety, align 4
  br label %if.end1122

if.end1122:                                       ; preds = %if.then1120, %if.end1114
  br label %if.end1123

if.end1123:                                       ; preds = %if.end1122, %if.then1026
  br label %if.end1124

if.end1124:                                       ; preds = %if.end1123, %lor.lhs.false1024
  %566 = load i32* @bmat, align 4
  %cmp1125 = icmp sgt i32 %566, 1300
  br i1 %cmp1125, label %land.lhs.true1126, label %if.end1130

land.lhs.true1126:                                ; preds = %if.end1124
  %567 = load i32* %bq, align 4
  %tobool1127 = icmp ne i32 %567, 0
  br i1 %tobool1127, label %if.then1128, label %if.end1130

if.then1128:                                      ; preds = %land.lhs.true1126
  %568 = load i32* %wksafety, align 4
  %569 = load i32* %score, align 4
  %sub1129 = sub nsw i32 %569, %568
  store i32 %sub1129, i32* %score, align 4
  br label %if.end1130

if.end1130:                                       ; preds = %if.then1128, %land.lhs.true1126, %if.end1124
  %570 = load i32* @wmat, align 4
  %cmp1131 = icmp sgt i32 %570, 1300
  br i1 %cmp1131, label %land.lhs.true1132, label %if.end1136

land.lhs.true1132:                                ; preds = %if.end1130
  %571 = load i32* %wq, align 4
  %tobool1133 = icmp ne i32 %571, 0
  br i1 %tobool1133, label %if.then1134, label %if.end1136

if.then1134:                                      ; preds = %land.lhs.true1132
  %572 = load i32* %bksafety, align 4
  %573 = load i32* %score, align 4
  %add1135 = add nsw i32 %573, %572
  store i32 %add1135, i32* %score, align 4
  br label %if.end1136

if.end1136:                                       ; preds = %if.then1134, %land.lhs.true1132, %if.end1130
  %574 = load i32* %wr, align 4
  %tobool1137 = icmp ne i32 %574, 0
  br i1 %tobool1137, label %if.end1146, label %land.lhs.true1138

land.lhs.true1138:                                ; preds = %if.end1136
  %575 = load i32* %wq, align 4
  %tobool1139 = icmp ne i32 %575, 0
  br i1 %tobool1139, label %if.end1146, label %land.lhs.true1140

land.lhs.true1140:                                ; preds = %land.lhs.true1138
  %576 = load i32* %wb, align 4
  %tobool1141 = icmp ne i32 %576, 0
  br i1 %tobool1141, label %if.end1146, label %land.lhs.true1142

land.lhs.true1142:                                ; preds = %land.lhs.true1140
  %577 = load i32* %wn, align 4
  %tobool1143 = icmp ne i32 %577, 0
  br i1 %tobool1143, label %if.end1146, label %if.then1144

if.then1144:                                      ; preds = %land.lhs.true1142
  %578 = load i32* %bpotential, align 4
  %579 = load i32* %score, align 4
  %add1145 = add nsw i32 %579, %578
  store i32 %add1145, i32* %score, align 4
  br label %if.end1146

if.end1146:                                       ; preds = %if.then1144, %land.lhs.true1142, %land.lhs.true1140, %land.lhs.true1138, %if.end1136
  %580 = load i32* %br, align 4
  %tobool1147 = icmp ne i32 %580, 0
  br i1 %tobool1147, label %if.end1156, label %land.lhs.true1148

land.lhs.true1148:                                ; preds = %if.end1146
  %581 = load i32* %bq, align 4
  %tobool1149 = icmp ne i32 %581, 0
  br i1 %tobool1149, label %if.end1156, label %land.lhs.true1150

land.lhs.true1150:                                ; preds = %land.lhs.true1148
  %582 = load i32* %bb, align 4
  %tobool1151 = icmp ne i32 %582, 0
  br i1 %tobool1151, label %if.end1156, label %land.lhs.true1152

land.lhs.true1152:                                ; preds = %land.lhs.true1150
  %583 = load i32* %bn, align 4
  %tobool1153 = icmp ne i32 %583, 0
  br i1 %tobool1153, label %if.end1156, label %if.then1154

if.then1154:                                      ; preds = %land.lhs.true1152
  %584 = load i32* %wpotential, align 4
  %585 = load i32* %score, align 4
  %add1155 = add nsw i32 %585, %584
  store i32 %add1155, i32* %score, align 4
  br label %if.end1156

if.end1156:                                       ; preds = %if.then1154, %land.lhs.true1152, %land.lhs.true1150, %land.lhs.true1148, %if.end1146
  %586 = load i32* %wp, align 4
  %tobool1157 = icmp ne i32 %586, 0
  br i1 %tobool1157, label %if.else1260, label %land.lhs.true1158

land.lhs.true1158:                                ; preds = %if.end1156
  %587 = load i32* %bp, align 4
  %tobool1159 = icmp ne i32 %587, 0
  br i1 %tobool1159, label %if.else1260, label %if.then1160

if.then1160:                                      ; preds = %land.lhs.true1158
  %588 = load i32* %wr, align 4
  %tobool1161 = icmp ne i32 %588, 0
  br i1 %tobool1161, label %if.else1209, label %land.lhs.true1162

land.lhs.true1162:                                ; preds = %if.then1160
  %589 = load i32* %br, align 4
  %tobool1163 = icmp ne i32 %589, 0
  br i1 %tobool1163, label %if.else1209, label %land.lhs.true1164

land.lhs.true1164:                                ; preds = %land.lhs.true1162
  %590 = load i32* %wq, align 4
  %tobool1165 = icmp ne i32 %590, 0
  br i1 %tobool1165, label %if.else1209, label %land.lhs.true1166

land.lhs.true1166:                                ; preds = %land.lhs.true1164
  %591 = load i32* %bq, align 4
  %tobool1167 = icmp ne i32 %591, 0
  br i1 %tobool1167, label %if.else1209, label %if.then1168

if.then1168:                                      ; preds = %land.lhs.true1166
  %592 = load i32* %bb, align 4
  %tobool1169 = icmp ne i32 %592, 0
  br i1 %tobool1169, label %if.else1178, label %land.lhs.true1170

land.lhs.true1170:                                ; preds = %if.then1168
  %593 = load i32* %wb, align 4
  %tobool1171 = icmp ne i32 %593, 0
  br i1 %tobool1171, label %if.else1178, label %if.then1172

if.then1172:                                      ; preds = %land.lhs.true1170
  %594 = load i32* %wn, align 4
  %cmp1173 = icmp slt i32 %594, 3
  br i1 %cmp1173, label %land.lhs.true1174, label %if.end1177

land.lhs.true1174:                                ; preds = %if.then1172
  %595 = load i32* %bn, align 4
  %cmp1175 = icmp slt i32 %595, 3
  br i1 %cmp1175, label %if.then1176, label %if.end1177

if.then1176:                                      ; preds = %land.lhs.true1174
  store i32 0, i32* %score, align 4
  br label %if.end1177

if.end1177:                                       ; preds = %if.then1176, %land.lhs.true1174, %if.then1172
  br label %if.end1208

if.else1178:                                      ; preds = %land.lhs.true1170, %if.then1168
  %596 = load i32* %wn, align 4
  %tobool1179 = icmp ne i32 %596, 0
  br i1 %tobool1179, label %if.else1188, label %land.lhs.true1180

land.lhs.true1180:                                ; preds = %if.else1178
  %597 = load i32* %bn, align 4
  %tobool1181 = icmp ne i32 %597, 0
  br i1 %tobool1181, label %if.else1188, label %if.then1182

if.then1182:                                      ; preds = %land.lhs.true1180
  %598 = load i32* %wb, align 4
  %599 = load i32* %bb, align 4
  %sub1183 = sub nsw i32 %598, %599
  %call1184 = call i32 @softboundcets_abs(i32 %sub1183) #5
  %cmp1185 = icmp slt i32 %call1184, 2
  br i1 %cmp1185, label %if.then1186, label %if.end1187

if.then1186:                                      ; preds = %if.then1182
  store i32 0, i32* %score, align 4
  br label %if.end1187

if.end1187:                                       ; preds = %if.then1186, %if.then1182
  br label %if.end1207

if.else1188:                                      ; preds = %land.lhs.true1180, %if.else1178
  %600 = load i32* %wn, align 4
  %cmp1189 = icmp slt i32 %600, 3
  br i1 %cmp1189, label %land.lhs.true1190, label %lor.lhs.false1192

land.lhs.true1190:                                ; preds = %if.else1188
  %601 = load i32* %wb, align 4
  %tobool1191 = icmp ne i32 %601, 0
  br i1 %tobool1191, label %lor.lhs.false1192, label %if.then1196

lor.lhs.false1192:                                ; preds = %land.lhs.true1190, %if.else1188
  %602 = load i32* %wb, align 4
  %cmp1193 = icmp eq i32 %602, 1
  br i1 %cmp1193, label %land.lhs.true1194, label %if.end1206

land.lhs.true1194:                                ; preds = %lor.lhs.false1192
  %603 = load i32* %wn, align 4
  %tobool1195 = icmp ne i32 %603, 0
  br i1 %tobool1195, label %if.end1206, label %if.then1196

if.then1196:                                      ; preds = %land.lhs.true1194, %land.lhs.true1190
  %604 = load i32* %bn, align 4
  %cmp1197 = icmp slt i32 %604, 3
  br i1 %cmp1197, label %land.lhs.true1198, label %lor.lhs.false1200

land.lhs.true1198:                                ; preds = %if.then1196
  %605 = load i32* %bb, align 4
  %tobool1199 = icmp ne i32 %605, 0
  br i1 %tobool1199, label %lor.lhs.false1200, label %if.then1204

lor.lhs.false1200:                                ; preds = %land.lhs.true1198, %if.then1196
  %606 = load i32* %bb, align 4
  %cmp1201 = icmp eq i32 %606, 1
  br i1 %cmp1201, label %land.lhs.true1202, label %if.end1205

land.lhs.true1202:                                ; preds = %lor.lhs.false1200
  %607 = load i32* %bn, align 4
  %tobool1203 = icmp ne i32 %607, 0
  br i1 %tobool1203, label %if.end1205, label %if.then1204

if.then1204:                                      ; preds = %land.lhs.true1202, %land.lhs.true1198
  store i32 0, i32* %score, align 4
  br label %if.end1205

if.end1205:                                       ; preds = %if.then1204, %land.lhs.true1202, %lor.lhs.false1200
  br label %if.end1206

if.end1206:                                       ; preds = %if.end1205, %land.lhs.true1194, %lor.lhs.false1192
  br label %if.end1207

if.end1207:                                       ; preds = %if.end1206, %if.end1187
  br label %if.end1208

if.end1208:                                       ; preds = %if.end1207, %if.end1177
  br label %if.end1259

if.else1209:                                      ; preds = %land.lhs.true1166, %land.lhs.true1164, %land.lhs.true1162, %if.then1160
  %608 = load i32* %wq, align 4
  %tobool1210 = icmp ne i32 %608, 0
  br i1 %tobool1210, label %if.end1258, label %land.lhs.true1211

land.lhs.true1211:                                ; preds = %if.else1209
  %609 = load i32* %bq, align 4
  %tobool1212 = icmp ne i32 %609, 0
  br i1 %tobool1212, label %if.end1258, label %if.then1213

if.then1213:                                      ; preds = %land.lhs.true1211
  %610 = load i32* %wr, align 4
  %cmp1214 = icmp eq i32 %610, 1
  br i1 %cmp1214, label %land.lhs.true1215, label %if.else1225

land.lhs.true1215:                                ; preds = %if.then1213
  %611 = load i32* %br, align 4
  %cmp1216 = icmp eq i32 %611, 1
  br i1 %cmp1216, label %if.then1217, label %if.else1225

if.then1217:                                      ; preds = %land.lhs.true1215
  %612 = load i32* %wn, align 4
  %613 = load i32* %wb, align 4
  %add1218 = add nsw i32 %612, %613
  %cmp1219 = icmp slt i32 %add1218, 2
  br i1 %cmp1219, label %land.lhs.true1220, label %if.end1224

land.lhs.true1220:                                ; preds = %if.then1217
  %614 = load i32* %bn, align 4
  %615 = load i32* %bb, align 4
  %add1221 = add nsw i32 %614, %615
  %cmp1222 = icmp slt i32 %add1221, 2
  br i1 %cmp1222, label %if.then1223, label %if.end1224

if.then1223:                                      ; preds = %land.lhs.true1220
  store i32 0, i32* %score, align 4
  br label %if.end1224

if.end1224:                                       ; preds = %if.then1223, %land.lhs.true1220, %if.then1217
  br label %if.end1257

if.else1225:                                      ; preds = %land.lhs.true1215, %if.then1213
  %616 = load i32* %wr, align 4
  %cmp1226 = icmp eq i32 %616, 1
  br i1 %cmp1226, label %land.lhs.true1227, label %if.else1240

land.lhs.true1227:                                ; preds = %if.else1225
  %617 = load i32* %br, align 4
  %tobool1228 = icmp ne i32 %617, 0
  br i1 %tobool1228, label %if.else1240, label %if.then1229

if.then1229:                                      ; preds = %land.lhs.true1227
  %618 = load i32* %wn, align 4
  %619 = load i32* %wb, align 4
  %add1230 = add nsw i32 %618, %619
  %cmp1231 = icmp eq i32 %add1230, 0
  br i1 %cmp1231, label %land.lhs.true1232, label %if.end1239

land.lhs.true1232:                                ; preds = %if.then1229
  %620 = load i32* %bn, align 4
  %621 = load i32* %bb, align 4
  %add1233 = add nsw i32 %620, %621
  %cmp1234 = icmp eq i32 %add1233, 1
  br i1 %cmp1234, label %if.then1238, label %lor.lhs.false1235

lor.lhs.false1235:                                ; preds = %land.lhs.true1232
  %622 = load i32* %bn, align 4
  %623 = load i32* %bb, align 4
  %add1236 = add nsw i32 %622, %623
  %cmp1237 = icmp eq i32 %add1236, 2
  br i1 %cmp1237, label %if.then1238, label %if.end1239

if.then1238:                                      ; preds = %lor.lhs.false1235, %land.lhs.true1232
  store i32 0, i32* %score, align 4
  br label %if.end1239

if.end1239:                                       ; preds = %if.then1238, %lor.lhs.false1235, %if.then1229
  br label %if.end1256

if.else1240:                                      ; preds = %land.lhs.true1227, %if.else1225
  %624 = load i32* %br, align 4
  %cmp1241 = icmp eq i32 %624, 1
  br i1 %cmp1241, label %land.lhs.true1242, label %if.end1255

land.lhs.true1242:                                ; preds = %if.else1240
  %625 = load i32* %wr, align 4
  %tobool1243 = icmp ne i32 %625, 0
  br i1 %tobool1243, label %if.end1255, label %if.then1244

if.then1244:                                      ; preds = %land.lhs.true1242
  %626 = load i32* %bn, align 4
  %627 = load i32* %bb, align 4
  %add1245 = add nsw i32 %626, %627
  %cmp1246 = icmp eq i32 %add1245, 0
  br i1 %cmp1246, label %land.lhs.true1247, label %if.end1254

land.lhs.true1247:                                ; preds = %if.then1244
  %628 = load i32* %wn, align 4
  %629 = load i32* %wb, align 4
  %add1248 = add nsw i32 %628, %629
  %cmp1249 = icmp eq i32 %add1248, 1
  br i1 %cmp1249, label %if.then1253, label %lor.lhs.false1250

lor.lhs.false1250:                                ; preds = %land.lhs.true1247
  %630 = load i32* %wn, align 4
  %631 = load i32* %wb, align 4
  %add1251 = add nsw i32 %630, %631
  %cmp1252 = icmp eq i32 %add1251, 2
  br i1 %cmp1252, label %if.then1253, label %if.end1254

if.then1253:                                      ; preds = %lor.lhs.false1250, %land.lhs.true1247
  store i32 0, i32* %score, align 4
  br label %if.end1254

if.end1254:                                       ; preds = %if.then1253, %lor.lhs.false1250, %if.then1244
  br label %if.end1255

if.end1255:                                       ; preds = %if.end1254, %land.lhs.true1242, %if.else1240
  br label %if.end1256

if.end1256:                                       ; preds = %if.end1255, %if.end1239
  br label %if.end1257

if.end1257:                                       ; preds = %if.end1256, %if.end1224
  br label %if.end1258

if.end1258:                                       ; preds = %if.end1257, %land.lhs.true1211, %if.else1209
  br label %if.end1259

if.end1259:                                       ; preds = %if.end1258, %if.end1208
  br label %if.end1344

if.else1260:                                      ; preds = %land.lhs.true1158, %if.end1156
  %632 = load i32* %wn, align 4
  %633 = load i32* %wb, align 4
  %add1261 = add nsw i32 %632, %633
  %634 = load i32* %bn, align 4
  %635 = load i32* %bb, align 4
  %add1262 = add nsw i32 %634, %635
  %cmp1263 = icmp ne i32 %add1261, %add1262
  br i1 %cmp1263, label %if.then1264, label %if.else1324

if.then1264:                                      ; preds = %if.else1260
  %636 = load i32* %wq, align 4
  %637 = load i32* %wr, align 4
  %add1265 = add nsw i32 %636, %637
  %638 = load i32* %bq, align 4
  %639 = load i32* %br, align 4
  %add1266 = add nsw i32 %638, %639
  %cmp1267 = icmp eq i32 %add1265, %add1266
  br i1 %cmp1267, label %if.then1268, label %if.else1277

if.then1268:                                      ; preds = %if.then1264
  %640 = load i32* %wn, align 4
  %641 = load i32* %wb, align 4
  %add1269 = add nsw i32 %640, %641
  %642 = load i32* %bn, align 4
  %643 = load i32* %bb, align 4
  %add1270 = add nsw i32 %642, %643
  %cmp1271 = icmp sgt i32 %add1269, %add1270
  br i1 %cmp1271, label %if.then1272, label %if.else1274

if.then1272:                                      ; preds = %if.then1268
  %644 = load i32* %score, align 4
  %add1273 = add nsw i32 %644, 120
  store i32 %add1273, i32* %score, align 4
  br label %if.end1276

if.else1274:                                      ; preds = %if.then1268
  %645 = load i32* %score, align 4
  %sub1275 = sub nsw i32 %645, 120
  store i32 %sub1275, i32* %score, align 4
  br label %if.end1276

if.end1276:                                       ; preds = %if.else1274, %if.then1272
  br label %if.end1323

if.else1277:                                      ; preds = %if.then1264
  %646 = load i32* %wr, align 4
  %647 = load i32* %wq, align 4
  %add1278 = add nsw i32 %646, %647
  %648 = load i32* %br, align 4
  %649 = load i32* %bq, align 4
  %add1279 = add nsw i32 %648, %649
  %sub1280 = sub nsw i32 %add1278, %add1279
  %call1281 = call i32 @softboundcets_abs(i32 %sub1280) #5
  %cmp1282 = icmp eq i32 %call1281, 1
  br i1 %cmp1282, label %if.then1283, label %if.else1299

if.then1283:                                      ; preds = %if.else1277
  %650 = load i32* %wb, align 4
  %651 = load i32* %wn, align 4
  %add1284 = add nsw i32 %650, %651
  %652 = load i32* %bb, align 4
  %653 = load i32* %bn, align 4
  %add1285 = add nsw i32 %652, %653
  %add1286 = add nsw i32 %add1285, 1
  %cmp1287 = icmp sgt i32 %add1284, %add1286
  br i1 %cmp1287, label %if.then1288, label %if.else1290

if.then1288:                                      ; preds = %if.then1283
  %654 = load i32* %score, align 4
  %add1289 = add nsw i32 %654, 120
  store i32 %add1289, i32* %score, align 4
  br label %if.end1298

if.else1290:                                      ; preds = %if.then1283
  %655 = load i32* %bb, align 4
  %656 = load i32* %bn, align 4
  %add1291 = add nsw i32 %655, %656
  %657 = load i32* %wb, align 4
  %658 = load i32* %wn, align 4
  %add1292 = add nsw i32 %657, %658
  %add1293 = add nsw i32 %add1292, 1
  %cmp1294 = icmp sgt i32 %add1291, %add1293
  br i1 %cmp1294, label %if.then1295, label %if.end1297

if.then1295:                                      ; preds = %if.else1290
  %659 = load i32* %score, align 4
  %sub1296 = sub nsw i32 %659, 120
  store i32 %sub1296, i32* %score, align 4
  br label %if.end1297

if.end1297:                                       ; preds = %if.then1295, %if.else1290
  br label %if.end1298

if.end1298:                                       ; preds = %if.end1297, %if.then1288
  br label %if.end1322

if.else1299:                                      ; preds = %if.else1277
  %660 = load i32* %wr, align 4
  %661 = load i32* %wq, align 4
  %add1300 = add nsw i32 %660, %661
  %662 = load i32* %br, align 4
  %663 = load i32* %bq, align 4
  %add1301 = add nsw i32 %662, %663
  %sub1302 = sub nsw i32 %add1300, %add1301
  %call1303 = call i32 @softboundcets_abs(i32 %sub1302) #5
  %cmp1304 = icmp eq i32 %call1303, 2
  br i1 %cmp1304, label %if.then1305, label %if.end1321

if.then1305:                                      ; preds = %if.else1299
  %664 = load i32* %wb, align 4
  %665 = load i32* %wn, align 4
  %add1306 = add nsw i32 %664, %665
  %666 = load i32* %bb, align 4
  %667 = load i32* %bn, align 4
  %add1307 = add nsw i32 %666, %667
  %add1308 = add nsw i32 %add1307, 2
  %cmp1309 = icmp sgt i32 %add1306, %add1308
  br i1 %cmp1309, label %if.then1310, label %if.else1312

if.then1310:                                      ; preds = %if.then1305
  %668 = load i32* %score, align 4
  %add1311 = add nsw i32 %668, 120
  store i32 %add1311, i32* %score, align 4
  br label %if.end1320

if.else1312:                                      ; preds = %if.then1305
  %669 = load i32* %bb, align 4
  %670 = load i32* %bn, align 4
  %add1313 = add nsw i32 %669, %670
  %671 = load i32* %wb, align 4
  %672 = load i32* %wn, align 4
  %add1314 = add nsw i32 %671, %672
  %add1315 = add nsw i32 %add1314, 2
  %cmp1316 = icmp sgt i32 %add1313, %add1315
  br i1 %cmp1316, label %if.then1317, label %if.end1319

if.then1317:                                      ; preds = %if.else1312
  %673 = load i32* %score, align 4
  %sub1318 = sub nsw i32 %673, 120
  store i32 %sub1318, i32* %score, align 4
  br label %if.end1319

if.end1319:                                       ; preds = %if.then1317, %if.else1312
  br label %if.end1320

if.end1320:                                       ; preds = %if.end1319, %if.then1310
  br label %if.end1321

if.end1321:                                       ; preds = %if.end1320, %if.else1299
  br label %if.end1322

if.end1322:                                       ; preds = %if.end1321, %if.end1298
  br label %if.end1323

if.end1323:                                       ; preds = %if.end1322, %if.end1276
  br label %if.end1343

if.else1324:                                      ; preds = %if.else1260
  %674 = load i32* %wq, align 4
  %675 = load i32* %wr, align 4
  %add1325 = add nsw i32 %674, %675
  %676 = load i32* %bq, align 4
  %677 = load i32* %br, align 4
  %add1326 = add nsw i32 %676, %677
  %cmp1327 = icmp eq i32 %add1325, %add1326
  br i1 %cmp1327, label %if.then1328, label %if.end1342

if.then1328:                                      ; preds = %if.else1324
  %678 = load i32* %wq, align 4
  %tobool1329 = icmp ne i32 %678, 0
  br i1 %tobool1329, label %land.lhs.true1330, label %if.else1334

land.lhs.true1330:                                ; preds = %if.then1328
  %679 = load i32* %bq, align 4
  %tobool1331 = icmp ne i32 %679, 0
  br i1 %tobool1331, label %if.else1334, label %if.then1332

if.then1332:                                      ; preds = %land.lhs.true1330
  %680 = load i32* %score, align 4
  %add1333 = add nsw i32 %680, 120
  store i32 %add1333, i32* %score, align 4
  br label %if.end1341

if.else1334:                                      ; preds = %land.lhs.true1330, %if.then1328
  %681 = load i32* %wq, align 4
  %tobool1335 = icmp ne i32 %681, 0
  br i1 %tobool1335, label %if.end1340, label %land.lhs.true1336

land.lhs.true1336:                                ; preds = %if.else1334
  %682 = load i32* %bq, align 4
  %tobool1337 = icmp ne i32 %682, 0
  br i1 %tobool1337, label %if.then1338, label %if.end1340

if.then1338:                                      ; preds = %land.lhs.true1336
  %683 = load i32* %score, align 4
  %sub1339 = sub nsw i32 %683, 120
  store i32 %sub1339, i32* %score, align 4
  br label %if.end1340

if.end1340:                                       ; preds = %if.then1338, %land.lhs.true1336, %if.else1334
  br label %if.end1341

if.end1341:                                       ; preds = %if.end1340, %if.then1332
  br label %if.end1342

if.end1342:                                       ; preds = %if.end1341, %if.else1324
  br label %if.end1343

if.end1343:                                       ; preds = %if.end1342, %if.end1323
  br label %if.end1344

if.end1344:                                       ; preds = %if.end1343, %if.end1259
  %684 = load i32* %score, align 4
  call void @storeECache(i32 %684)
  %685 = load i32* @Material, align 4
  %686 = load i32* %score, align 4
  %sub1345 = sub nsw i32 %685, %686
  %call1346 = call i32 @softboundcets_abs(i32 %sub1345) #5
  %687 = load i32* @maxposdiff, align 4
  %cmp1347 = icmp sgt i32 %call1346, %687
  br i1 %cmp1347, label %if.then1348, label %if.end1358

if.then1348:                                      ; preds = %if.end1344
  %688 = load i32* @Material, align 4
  %689 = load i32* %score, align 4
  %sub1349 = sub nsw i32 %688, %689
  %call1350 = call i32 @softboundcets_abs(i32 %sub1349) #5
  %cmp1351 = icmp slt i32 1000, %call1350
  br i1 %cmp1351, label %cond.true1352, label %cond.false1353

cond.true1352:                                    ; preds = %if.then1348
  br label %cond.end1356

cond.false1353:                                   ; preds = %if.then1348
  %690 = load i32* @Material, align 4
  %691 = load i32* %score, align 4
  %sub1354 = sub nsw i32 %690, %691
  %call1355 = call i32 @softboundcets_abs(i32 %sub1354) #5
  br label %cond.end1356

cond.end1356:                                     ; preds = %cond.false1353, %cond.true1352
  %cond1357 = phi i32 [ 1000, %cond.true1352 ], [ %call1355, %cond.false1353 ]
  store i32 %cond1357, i32* @maxposdiff, align 4
  br label %if.end1358

if.end1358:                                       ; preds = %cond.end1356, %if.end1344
  %692 = load i32* @white_to_move, align 4
  %cmp1359 = icmp eq i32 %692, 1
  br i1 %cmp1359, label %if.then1360, label %if.else1361

if.then1360:                                      ; preds = %if.end1358
  %693 = load i32* %score, align 4
  store i32 %693, i32* %retval
  br label %return

if.else1361:                                      ; preds = %if.end1358
  %694 = load i32* %score, align 4
  %sub1362 = sub nsw i32 0, %694
  store i32 %sub1362, i32* %retval
  br label %return

return:                                           ; preds = %if.else1361, %if.then1360, %if.end31, %if.then30, %cond.end23, %cond.end8
  %695 = load i32* %retval
  ret i32 %695
}

; Function Attrs: nounwind uwtable
define internal i32 @rook_mobility(i32 %square) #0 {
entry:
  %square.addr = alloca i32, align 4
  %square.addr12 = bitcast i32* %square.addr to i32*
  %bitcast = bitcast i32* %square.addr to i8*
  %mtmp = getelementptr i32* %square.addr12, i32 1
  %bitcast13 = bitcast i32* %mtmp to i8*
  %l = alloca i32, align 4
  %l14 = bitcast i32* %l to i32*
  %bitcast15 = bitcast i32* %l to i8*
  %mtmp16 = getelementptr i32* %l14, i32 1
  %bitcast17 = bitcast i32* %mtmp16 to i8*
  %m = alloca i32, align 4
  %m18 = bitcast i32* %m to i32*
  %bitcast19 = bitcast i32* %m to i8*
  %mtmp20 = getelementptr i32* %m18, i32 1
  %bitcast21 = bitcast i32* %mtmp20 to i8*
  %diridx = alloca i32, align 4
  %diridx22 = bitcast i32* %diridx to i32*
  %bitcast23 = bitcast i32* %diridx to i8*
  %mtmp24 = getelementptr i32* %diridx22, i32 1
  %bitcast25 = bitcast i32* %mtmp24 to i8*
  store i32 %square, i32* %square.addr, align 4
  store i32 0, i32* %m, align 4
  store i32 0, i32* %diridx, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc9, %entry
  %0 = load i32* %diridx, align 4
  %cmp = icmp slt i32 %0, 4
  br i1 %cmp, label %for.body, label %for.end11

for.body:                                         ; preds = %for.cond
  %1 = load i32* %square.addr, align 4
  %2 = load i32* %diridx, align 4
  %idxprom = sext i32 %2 to i64
  %bitcast26 = bitcast [4 x i32]* @rook_mobility.dir to i8*
  %bitcast27 = bitcast [4 x i32]* getelementptr inbounds ([4 x i32]* @rook_mobility.dir, i32 1) to i8*
  %arrayidx = getelementptr inbounds [4 x i32]* @rook_mobility.dir, i32 0, i64 %idxprom
  %3 = load i32* %arrayidx, align 4
  %add = add nsw i32 %1, %3
  store i32 %add, i32* %l, align 4
  br label %for.cond1

for.cond1:                                        ; preds = %for.inc, %for.body
  %4 = load i32* %l, align 4
  %idxprom2 = sext i32 %4 to i64
  %arrayidx3 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom2
  %5 = load i32* %arrayidx3, align 4
  %cmp4 = icmp eq i32 %5, 13
  br i1 %cmp4, label %for.body5, label %for.end

for.body5:                                        ; preds = %for.cond1
  %6 = load i32* %m, align 4
  %inc = add nsw i32 %6, 1
  store i32 %inc, i32* %m, align 4
  br label %for.inc

for.inc:                                          ; preds = %for.body5
  %7 = load i32* %diridx, align 4
  %idxprom6 = sext i32 %7 to i64
  %bitcast28 = bitcast [4 x i32]* @rook_mobility.dir to i8*
  %bitcast29 = bitcast [4 x i32]* getelementptr inbounds ([4 x i32]* @rook_mobility.dir, i32 1) to i8*
  %arrayidx7 = getelementptr inbounds [4 x i32]* @rook_mobility.dir, i32 0, i64 %idxprom6
  %8 = load i32* %arrayidx7, align 4
  %9 = load i32* %l, align 4
  %add8 = add nsw i32 %9, %8
  store i32 %add8, i32* %l, align 4
  br label %for.cond1

for.end:                                          ; preds = %for.cond1
  br label %for.inc9

for.inc9:                                         ; preds = %for.end
  %10 = load i32* %diridx, align 4
  %inc10 = add nsw i32 %10, 1
  store i32 %inc10, i32* %diridx, align 4
  br label %for.cond

for.end11:                                        ; preds = %for.cond
  %11 = load i32* %m, align 4
  ret i32 %11
}

; Function Attrs: nounwind uwtable
define internal i32 @bishop_mobility(i32 %square) #0 {
entry:
  %square.addr = alloca i32, align 4
  %square.addr12 = bitcast i32* %square.addr to i32*
  %bitcast = bitcast i32* %square.addr to i8*
  %mtmp = getelementptr i32* %square.addr12, i32 1
  %bitcast13 = bitcast i32* %mtmp to i8*
  %l = alloca i32, align 4
  %l14 = bitcast i32* %l to i32*
  %bitcast15 = bitcast i32* %l to i8*
  %mtmp16 = getelementptr i32* %l14, i32 1
  %bitcast17 = bitcast i32* %mtmp16 to i8*
  %m = alloca i32, align 4
  %m18 = bitcast i32* %m to i32*
  %bitcast19 = bitcast i32* %m to i8*
  %mtmp20 = getelementptr i32* %m18, i32 1
  %bitcast21 = bitcast i32* %mtmp20 to i8*
  %diridx = alloca i32, align 4
  %diridx22 = bitcast i32* %diridx to i32*
  %bitcast23 = bitcast i32* %diridx to i8*
  %mtmp24 = getelementptr i32* %diridx22, i32 1
  %bitcast25 = bitcast i32* %mtmp24 to i8*
  store i32 %square, i32* %square.addr, align 4
  store i32 0, i32* %m, align 4
  store i32 0, i32* %diridx, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc9, %entry
  %0 = load i32* %diridx, align 4
  %cmp = icmp slt i32 %0, 4
  br i1 %cmp, label %for.body, label %for.end11

for.body:                                         ; preds = %for.cond
  %1 = load i32* %square.addr, align 4
  %2 = load i32* %diridx, align 4
  %idxprom = sext i32 %2 to i64
  %bitcast26 = bitcast [4 x i32]* @bishop_mobility.dir to i8*
  %bitcast27 = bitcast [4 x i32]* getelementptr inbounds ([4 x i32]* @bishop_mobility.dir, i32 1) to i8*
  %arrayidx = getelementptr inbounds [4 x i32]* @bishop_mobility.dir, i32 0, i64 %idxprom
  %3 = load i32* %arrayidx, align 4
  %add = add nsw i32 %1, %3
  store i32 %add, i32* %l, align 4
  br label %for.cond1

for.cond1:                                        ; preds = %for.inc, %for.body
  %4 = load i32* %l, align 4
  %idxprom2 = sext i32 %4 to i64
  %arrayidx3 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom2
  %5 = load i32* %arrayidx3, align 4
  %cmp4 = icmp eq i32 %5, 13
  br i1 %cmp4, label %for.body5, label %for.end

for.body5:                                        ; preds = %for.cond1
  %6 = load i32* %m, align 4
  %inc = add nsw i32 %6, 1
  store i32 %inc, i32* %m, align 4
  br label %for.inc

for.inc:                                          ; preds = %for.body5
  %7 = load i32* %diridx, align 4
  %idxprom6 = sext i32 %7 to i64
  %bitcast28 = bitcast [4 x i32]* @bishop_mobility.dir to i8*
  %bitcast29 = bitcast [4 x i32]* getelementptr inbounds ([4 x i32]* @bishop_mobility.dir, i32 1) to i8*
  %arrayidx7 = getelementptr inbounds [4 x i32]* @bishop_mobility.dir, i32 0, i64 %idxprom6
  %8 = load i32* %arrayidx7, align 4
  %9 = load i32* %l, align 4
  %add8 = add nsw i32 %9, %8
  store i32 %add8, i32* %l, align 4
  br label %for.cond1

for.end:                                          ; preds = %for.cond1
  br label %for.inc9

for.inc9:                                         ; preds = %for.end
  %10 = load i32* %diridx, align 4
  %inc10 = add nsw i32 %10, 1
  store i32 %inc10, i32* %diridx, align 4
  br label %for.cond

for.end11:                                        ; preds = %for.cond
  %11 = load i32* %m, align 4
  ret i32 %11
}

; Function Attrs: nounwind uwtable
define internal void @ResetHandValue() #0 {
entry:
  call void @__softboundcets_memcopy_check(i8* bitcast ([13 x i32]* @hand_value to i8*), i8* bitcast ([13 x i32]* @std_hand_value to i8*), i64 52, i8* bitcast ([13 x i32]* @hand_value to i8*), i8* bitcast ([13 x i32]* getelementptr inbounds ([13 x i32]* @hand_value, i32 1) to i8*), i8* bitcast ([13 x i32]* @std_hand_value to i8*), i8* bitcast ([13 x i32]* getelementptr inbounds ([13 x i32]* @std_hand_value, i32 1) to i8*))
  call void @__softboundcets_copy_metadata(i8* bitcast ([13 x i32]* @hand_value to i8*), i8* bitcast ([13 x i32]* @std_hand_value to i8*), i64 52)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* bitcast ([13 x i32]* @hand_value to i8*), i8* bitcast ([13 x i32]* @std_hand_value to i8*), i64 52, i32 16, i1 false)
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @BegForPartner() #0 {
entry:
  %0 = load i32* @xb_mode, align 4
  %tobool = icmp ne i32 %0, 0
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @GreetPartner() #0 {
entry:
  %call = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([69 x i8]* @.str29, i32 0, i32 0))
  %call1 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([76 x i8]* @.str130, i32 0, i32 0))
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @HandlePartner(i8* %input) #0 {
entry:
  %base.alloca11 = alloca i8*
  %bound.alloca12 = alloca i8*
  %base.alloca = alloca i8*
  %bound.alloca = alloca i8*
  %0 = call i8* @__softboundcets_load_base_shadow_stack(i32 1)
  %1 = call i8* @__softboundcets_load_bound_shadow_stack(i32 1)
  %input.addr = alloca i8*, align 8
  %input.addr7 = bitcast i8** %input.addr to i8**
  %bitcast = bitcast i8** %input.addr to i8*
  %mtmp = getelementptr i8** %input.addr7, i32 1
  %bitcast8 = bitcast i8** %mtmp to i8*
  store i8* %input, i8** %input.addr, align 8
  %bitcast15 = bitcast i8** %input.addr to i8*
  call void @__softboundcets_metadata_store(i8* %bitcast15, i8* %0, i8* %1)
  %2 = load i8** %input.addr, align 8
  %bitcast9 = bitcast i8** %input.addr to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast9, i8** %base.alloca, i8** %bound.alloca)
  %base.load = load i8** %base.alloca
  %bound.load = load i8** %bound.alloca
  %arrayidx = getelementptr inbounds i8* %2, i64 0
  %3 = load i8* %arrayidx, align 1
  %conv = sext i8 %3 to i32
  %cmp = icmp eq i32 %conv, 32
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  %4 = load i32* @have_partner, align 4
  %tobool = icmp ne i32 %4, 0
  br i1 %tobool, label %if.end, label %if.then2

if.then2:                                         ; preds = %if.then
  %5 = load i8** %input.addr, align 8
  %bitcast10 = bitcast i8** %input.addr to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast10, i8** %base.alloca11, i8** %bound.alloca12)
  %base.load13 = load i8** %base.alloca11
  %bound.load14 = load i8** %bound.alloca12
  %add.ptr = getelementptr inbounds i8* %5, i64 1
  %call = call i32 (i8*, i8*, ...)* @__isoc99_sscanf(i8* %add.ptr, i8* getelementptr inbounds ([3 x i8]* @.str231, i32 0, i32 0), i8* getelementptr inbounds ([256 x i8]* @my_partner, i32 0, i32 0)) #1
  store i32 1, i32* @have_partner, align 4
  call void @GreetPartner()
  %call3 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([25 x i8]* @.str332, i32 0, i32 0))
  %call4 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([16 x i8]* @.str433, i32 0, i32 0))
  br label %if.end

if.end:                                           ; preds = %if.then2, %if.then
  br label %if.end6

if.else:                                          ; preds = %entry
  call void @__softboundcets_memset_check(i8* getelementptr inbounds ([256 x i8]* @my_partner, i32 0, i32 0), i64 256, i8* null, i8* inttoptr (i64 281474976710656 to i8*))
  call void @llvm.memset.p0i8.i64(i8* getelementptr inbounds ([256 x i8]* @my_partner, i32 0, i32 0), i8 0, i64 256, i32 16, i1 false)
  store i32 0, i32* @have_partner, align 4
  call void @BegForPartner()
  %call5 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([20 x i8]* @.str534, i32 0, i32 0))
  br label %if.end6

if.end6:                                          ; preds = %if.else, %if.end
  ret void
}

; Function Attrs: nounwind
declare i32 @__isoc99_sscanf(i8*, i8*, ...) #3

; Function Attrs: nounwind uwtable
define internal void @HandlePtell(i8* %input) #0 {
entry:
  %base.alloca834 = alloca i8*
  %bound.alloca835 = alloca i8*
  %base.alloca829 = alloca i8*
  %bound.alloca830 = alloca i8*
  %base.alloca824 = alloca i8*
  %bound.alloca825 = alloca i8*
  %base.alloca819 = alloca i8*
  %bound.alloca820 = alloca i8*
  %base.alloca814 = alloca i8*
  %bound.alloca815 = alloca i8*
  %base.alloca809 = alloca i8*
  %bound.alloca810 = alloca i8*
  %base.alloca804 = alloca i8*
  %bound.alloca805 = alloca i8*
  %base.alloca799 = alloca i8*
  %bound.alloca800 = alloca i8*
  %base.alloca794 = alloca i8*
  %bound.alloca795 = alloca i8*
  %base.alloca789 = alloca i8*
  %bound.alloca790 = alloca i8*
  %base.alloca784 = alloca i8*
  %bound.alloca785 = alloca i8*
  %base.alloca779 = alloca i8*
  %bound.alloca780 = alloca i8*
  %base.alloca774 = alloca i8*
  %bound.alloca775 = alloca i8*
  %base.alloca769 = alloca i8*
  %bound.alloca770 = alloca i8*
  %base.alloca764 = alloca i8*
  %bound.alloca765 = alloca i8*
  %base.alloca759 = alloca i8*
  %bound.alloca760 = alloca i8*
  %base.alloca754 = alloca i8*
  %bound.alloca755 = alloca i8*
  %base.alloca749 = alloca i8*
  %bound.alloca750 = alloca i8*
  %base.alloca744 = alloca i8*
  %bound.alloca745 = alloca i8*
  %base.alloca739 = alloca i8*
  %bound.alloca740 = alloca i8*
  %base.alloca734 = alloca i8*
  %bound.alloca735 = alloca i8*
  %base.alloca729 = alloca i8*
  %bound.alloca730 = alloca i8*
  %base.alloca724 = alloca i8*
  %bound.alloca725 = alloca i8*
  %base.alloca719 = alloca i8*
  %bound.alloca720 = alloca i8*
  %base.alloca714 = alloca i8*
  %bound.alloca715 = alloca i8*
  %base.alloca709 = alloca i8*
  %bound.alloca710 = alloca i8*
  %base.alloca704 = alloca i8*
  %bound.alloca705 = alloca i8*
  %base.alloca699 = alloca i8*
  %bound.alloca700 = alloca i8*
  %base.alloca694 = alloca i8*
  %bound.alloca695 = alloca i8*
  %base.alloca689 = alloca i8*
  %bound.alloca690 = alloca i8*
  %base.alloca684 = alloca i8*
  %bound.alloca685 = alloca i8*
  %base.alloca679 = alloca i8*
  %bound.alloca680 = alloca i8*
  %base.alloca674 = alloca i8*
  %bound.alloca675 = alloca i8*
  %base.alloca669 = alloca i8*
  %bound.alloca670 = alloca i8*
  %base.alloca664 = alloca i8*
  %bound.alloca665 = alloca i8*
  %base.alloca659 = alloca i8*
  %bound.alloca660 = alloca i8*
  %base.alloca654 = alloca i8*
  %bound.alloca655 = alloca i8*
  %base.alloca649 = alloca i8*
  %bound.alloca650 = alloca i8*
  %base.alloca644 = alloca i8*
  %bound.alloca645 = alloca i8*
  %base.alloca639 = alloca i8*
  %bound.alloca640 = alloca i8*
  %base.alloca634 = alloca i8*
  %bound.alloca635 = alloca i8*
  %base.alloca629 = alloca i8*
  %bound.alloca630 = alloca i8*
  %base.alloca624 = alloca i8*
  %bound.alloca625 = alloca i8*
  %base.alloca619 = alloca i8*
  %bound.alloca620 = alloca i8*
  %base.alloca614 = alloca i8*
  %bound.alloca615 = alloca i8*
  %base.alloca609 = alloca i8*
  %bound.alloca610 = alloca i8*
  %base.alloca604 = alloca i8*
  %bound.alloca605 = alloca i8*
  %base.alloca599 = alloca i8*
  %bound.alloca600 = alloca i8*
  %base.alloca594 = alloca i8*
  %bound.alloca595 = alloca i8*
  %base.alloca589 = alloca i8*
  %bound.alloca590 = alloca i8*
  %base.alloca584 = alloca i8*
  %bound.alloca585 = alloca i8*
  %base.alloca579 = alloca i8*
  %bound.alloca580 = alloca i8*
  %base.alloca574 = alloca i8*
  %bound.alloca575 = alloca i8*
  %base.alloca569 = alloca i8*
  %bound.alloca570 = alloca i8*
  %base.alloca564 = alloca i8*
  %bound.alloca565 = alloca i8*
  %base.alloca559 = alloca i8*
  %bound.alloca560 = alloca i8*
  %base.alloca554 = alloca i8*
  %bound.alloca555 = alloca i8*
  %base.alloca549 = alloca i8*
  %bound.alloca550 = alloca i8*
  %base.alloca544 = alloca i8*
  %bound.alloca545 = alloca i8*
  %base.alloca539 = alloca i8*
  %bound.alloca540 = alloca i8*
  %base.alloca534 = alloca i8*
  %bound.alloca535 = alloca i8*
  %base.alloca = alloca i8*
  %bound.alloca = alloca i8*
  %0 = call i8* @__softboundcets_load_base_shadow_stack(i32 1)
  %1 = call i8* @__softboundcets_load_bound_shadow_stack(i32 1)
  %input.addr = alloca i8*, align 8
  %input.addr522 = bitcast i8** %input.addr to i8**
  %bitcast = bitcast i8** %input.addr to i8*
  %mtmp = getelementptr i8** %input.addr522, i32 1
  %bitcast523 = bitcast i8** %mtmp to i8*
  %change = alloca i32, align 4
  %change524 = bitcast i32* %change to i32*
  %bitcast525 = bitcast i32* %change to i8*
  %mtmp526 = getelementptr i32* %change524, i32 1
  %bitcast527 = bitcast i32* %mtmp526 to i8*
  %howmuch = alloca [80 x i8], align 16
  %howmuch528 = bitcast [80 x i8]* %howmuch to [80 x i8]*
  %bitcast529 = bitcast [80 x i8]* %howmuch to i8*
  %mtmp530 = getelementptr [80 x i8]* %howmuch528, i32 1
  %bitcast531 = bitcast [80 x i8]* %mtmp530 to i8*
  store i8* %input, i8** %input.addr, align 8
  %bitcast838 = bitcast i8** %input.addr to i8*
  call void @__softboundcets_metadata_store(i8* %bitcast838, i8* %0, i8* %1)
  store i32 0, i32* %change, align 4
  %2 = bitcast [80 x i8]* %howmuch to i8*
  call void @__softboundcets_memcopy_check(i8* %2, i8* getelementptr inbounds ([80 x i8]* @HandlePtell.howmuch, i32 0, i32 0), i64 80, i8* %bitcast529, i8* %bitcast531, i8* getelementptr inbounds ([80 x i8]* @HandlePtell.howmuch, i32 0, i32 0), i8* getelementptr inbounds ([80 x i8]* @HandlePtell.howmuch, i32 1, i32 0))
  call void @__softboundcets_copy_metadata(i8* %2, i8* getelementptr inbounds ([80 x i8]* @HandlePtell.howmuch, i32 0, i32 0), i64 80)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %2, i8* getelementptr inbounds ([80 x i8]* @HandlePtell.howmuch, i32 0, i32 0), i64 80, i32 16, i1 false)
  %3 = load i8** %input.addr, align 8
  %bitcast532 = bitcast i8** %input.addr to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast532, i8** %base.alloca, i8** %bound.alloca)
  %base.load = load i8** %base.alloca
  %bound.load = load i8** %bound.alloca
  %add.ptr = getelementptr inbounds i8* %3, i64 6
  call void @__softboundcets_allocate_shadow_stack_space(i32 3)
  call void @__softboundcets_store_base_shadow_stack(i8* %base.load, i32 1)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bound.load, i32 1)
  call void @__softboundcets_store_base_shadow_stack(i8* getelementptr inbounds ([5 x i8]* @.str635, i32 0, i32 0), i32 2)
  call void @__softboundcets_store_bound_shadow_stack(i8* getelementptr inbounds ([5 x i8]* @.str635, i32 1, i32 0), i32 2)
  %call = call i32 @softboundcets_strncmp(i8* %add.ptr, i8* getelementptr inbounds ([5 x i8]* @.str635, i32 0, i32 0), i64 4) #6
  call void @__softboundcets_deallocate_shadow_stack_space()
  %tobool = icmp ne i32 %call, 0
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  %call1 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([147 x i8]* @.str736, i32 0, i32 0))
  br label %return

if.end:                                           ; preds = %entry
  %4 = load i32* @Variant, align 4
  %cmp = icmp ne i32 %4, 1
  br i1 %cmp, label %land.lhs.true, label %if.end7

land.lhs.true:                                    ; preds = %if.end
  %5 = load i8** %input.addr, align 8
  %bitcast533 = bitcast i8** %input.addr to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast533, i8** %base.alloca534, i8** %bound.alloca535)
  %base.load536 = load i8** %base.alloca534
  %bound.load537 = load i8** %bound.alloca535
  %add.ptr2 = getelementptr inbounds i8* %5, i64 6
  call void @__softboundcets_allocate_shadow_stack_space(i32 3)
  call void @__softboundcets_store_base_shadow_stack(i8* %base.load536, i32 1)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bound.load537, i32 1)
  call void @__softboundcets_store_base_shadow_stack(i8* getelementptr inbounds ([6 x i8]* @.str837, i32 0, i32 0), i32 2)
  call void @__softboundcets_store_bound_shadow_stack(i8* getelementptr inbounds ([6 x i8]* @.str837, i32 1, i32 0), i32 2)
  %call3 = call i32 @softboundcets_strncmp(i8* %add.ptr2, i8* getelementptr inbounds ([6 x i8]* @.str837, i32 0, i32 0), i64 5) #6
  call void @__softboundcets_deallocate_shadow_stack_space()
  %tobool4 = icmp ne i32 %call3, 0
  br i1 %tobool4, label %if.then5, label %if.end7

if.then5:                                         ; preds = %land.lhs.true
  %call6 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([59 x i8]* @.str938, i32 0, i32 0))
  br label %return

if.end7:                                          ; preds = %land.lhs.true, %if.end
  %6 = load i8** %input.addr, align 8
  %bitcast538 = bitcast i8** %input.addr to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast538, i8** %base.alloca539, i8** %bound.alloca540)
  %base.load541 = load i8** %base.alloca539
  %bound.load542 = load i8** %bound.alloca540
  %add.ptr8 = getelementptr inbounds i8* %6, i64 6
  call void @__softboundcets_allocate_shadow_stack_space(i32 3)
  call void @__softboundcets_store_base_shadow_stack(i8* %base.load541, i32 1)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bound.load542, i32 1)
  call void @__softboundcets_store_base_shadow_stack(i8* getelementptr inbounds ([4 x i8]* @.str1039, i32 0, i32 0), i32 2)
  call void @__softboundcets_store_bound_shadow_stack(i8* getelementptr inbounds ([4 x i8]* @.str1039, i32 1, i32 0), i32 2)
  %call9 = call i32 @softboundcets_strncmp(i8* %add.ptr8, i8* getelementptr inbounds ([4 x i8]* @.str1039, i32 0, i32 0), i64 3) #6
  call void @__softboundcets_deallocate_shadow_stack_space()
  %tobool10 = icmp ne i32 %call9, 0
  br i1 %tobool10, label %if.else, label %if.then11

if.then11:                                        ; preds = %if.end7
  %call12 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([56 x i8]* @.str1140, i32 0, i32 0))
  store i32 1, i32* @must_sit, align 4
  store i32 0, i32* @must_go, align 4
  br label %if.end521

if.else:                                          ; preds = %if.end7
  %7 = load i8** %input.addr, align 8
  %bitcast543 = bitcast i8** %input.addr to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast543, i8** %base.alloca544, i8** %bound.alloca545)
  %base.load546 = load i8** %base.alloca544
  %bound.load547 = load i8** %bound.alloca545
  %add.ptr13 = getelementptr inbounds i8* %7, i64 6
  call void @__softboundcets_allocate_shadow_stack_space(i32 3)
  call void @__softboundcets_store_base_shadow_stack(i8* %base.load546, i32 1)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bound.load547, i32 1)
  call void @__softboundcets_store_base_shadow_stack(i8* getelementptr inbounds ([3 x i8]* @.str1241, i32 0, i32 0), i32 2)
  call void @__softboundcets_store_bound_shadow_stack(i8* getelementptr inbounds ([3 x i8]* @.str1241, i32 1, i32 0), i32 2)
  %call14 = call i32 @softboundcets_strncmp(i8* %add.ptr13, i8* getelementptr inbounds ([3 x i8]* @.str1241, i32 0, i32 0), i64 2) #6
  call void @__softboundcets_deallocate_shadow_stack_space()
  %tobool15 = icmp ne i32 %call14, 0
  br i1 %tobool15, label %lor.lhs.false, label %if.then19

lor.lhs.false:                                    ; preds = %if.else
  %8 = load i8** %input.addr, align 8
  %bitcast548 = bitcast i8** %input.addr to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast548, i8** %base.alloca549, i8** %bound.alloca550)
  %base.load551 = load i8** %base.alloca549
  %bound.load552 = load i8** %bound.alloca550
  %add.ptr16 = getelementptr inbounds i8* %8, i64 6
  call void @__softboundcets_allocate_shadow_stack_space(i32 3)
  call void @__softboundcets_store_base_shadow_stack(i8* %base.load551, i32 1)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bound.load552, i32 1)
  call void @__softboundcets_store_base_shadow_stack(i8* getelementptr inbounds ([5 x i8]* @.str1342, i32 0, i32 0), i32 2)
  call void @__softboundcets_store_bound_shadow_stack(i8* getelementptr inbounds ([5 x i8]* @.str1342, i32 1, i32 0), i32 2)
  %call17 = call i32 @softboundcets_strncmp(i8* %add.ptr16, i8* getelementptr inbounds ([5 x i8]* @.str1342, i32 0, i32 0), i64 4) #6
  call void @__softboundcets_deallocate_shadow_stack_space()
  %tobool18 = icmp ne i32 %call17, 0
  br i1 %tobool18, label %if.else21, label %if.then19

if.then19:                                        ; preds = %lor.lhs.false, %if.else
  %call20 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([31 x i8]* @.str1443, i32 0, i32 0))
  store i32 0, i32* @must_sit, align 4
  store i32 4, i32* @must_go, align 4
  br label %if.end520

if.else21:                                        ; preds = %lor.lhs.false
  %9 = load i8** %input.addr, align 8
  %bitcast553 = bitcast i8** %input.addr to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast553, i8** %base.alloca554, i8** %bound.alloca555)
  %base.load556 = load i8** %base.alloca554
  %bound.load557 = load i8** %bound.alloca555
  %add.ptr22 = getelementptr inbounds i8* %9, i64 6
  call void @__softboundcets_allocate_shadow_stack_space(i32 3)
  call void @__softboundcets_store_base_shadow_stack(i8* %base.load556, i32 1)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bound.load557, i32 1)
  call void @__softboundcets_store_base_shadow_stack(i8* getelementptr inbounds ([5 x i8]* @.str1544, i32 0, i32 0), i32 2)
  call void @__softboundcets_store_bound_shadow_stack(i8* getelementptr inbounds ([5 x i8]* @.str1544, i32 1, i32 0), i32 2)
  %call23 = call i32 @softboundcets_strncmp(i8* %add.ptr22, i8* getelementptr inbounds ([5 x i8]* @.str1544, i32 0, i32 0), i64 4) #6
  call void @__softboundcets_deallocate_shadow_stack_space()
  %tobool24 = icmp ne i32 %call23, 0
  br i1 %tobool24, label %lor.lhs.false25, label %if.then29

lor.lhs.false25:                                  ; preds = %if.else21
  %10 = load i8** %input.addr, align 8
  %bitcast558 = bitcast i8** %input.addr to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast558, i8** %base.alloca559, i8** %bound.alloca560)
  %base.load561 = load i8** %base.alloca559
  %bound.load562 = load i8** %bound.alloca560
  %add.ptr26 = getelementptr inbounds i8* %10, i64 6
  call void @__softboundcets_allocate_shadow_stack_space(i32 3)
  call void @__softboundcets_store_base_shadow_stack(i8* %base.load561, i32 1)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bound.load562, i32 1)
  call void @__softboundcets_store_base_shadow_stack(i8* getelementptr inbounds ([5 x i8]* @.str1645, i32 0, i32 0), i32 2)
  call void @__softboundcets_store_bound_shadow_stack(i8* getelementptr inbounds ([5 x i8]* @.str1645, i32 1, i32 0), i32 2)
  %call27 = call i32 @softboundcets_strncmp(i8* %add.ptr26, i8* getelementptr inbounds ([5 x i8]* @.str1645, i32 0, i32 0), i64 4) #6
  call void @__softboundcets_deallocate_shadow_stack_space()
  %tobool28 = icmp ne i32 %call27, 0
  br i1 %tobool28, label %if.else31, label %if.then29

if.then29:                                        ; preds = %lor.lhs.false25, %if.else21
  %call30 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([35 x i8]* @.str1746, i32 0, i32 0))
  store i32 1, i32* @go_fast, align 4
  store i32 0, i32* @must_sit, align 4
  br label %if.end519

if.else31:                                        ; preds = %lor.lhs.false25
  %11 = load i8** %input.addr, align 8
  %bitcast563 = bitcast i8** %input.addr to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast563, i8** %base.alloca564, i8** %bound.alloca565)
  %base.load566 = load i8** %base.alloca564
  %bound.load567 = load i8** %bound.alloca565
  %add.ptr32 = getelementptr inbounds i8* %11, i64 6
  call void @__softboundcets_allocate_shadow_stack_space(i32 3)
  call void @__softboundcets_store_base_shadow_stack(i8* %base.load566, i32 1)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bound.load567, i32 1)
  call void @__softboundcets_store_base_shadow_stack(i8* getelementptr inbounds ([5 x i8]* @.str1847, i32 0, i32 0), i32 2)
  call void @__softboundcets_store_bound_shadow_stack(i8* getelementptr inbounds ([5 x i8]* @.str1847, i32 1, i32 0), i32 2)
  %call33 = call i32 @softboundcets_strncmp(i8* %add.ptr32, i8* getelementptr inbounds ([5 x i8]* @.str1847, i32 0, i32 0), i64 4) #6
  call void @__softboundcets_deallocate_shadow_stack_space()
  %tobool34 = icmp ne i32 %call33, 0
  br i1 %tobool34, label %if.else37, label %if.then35

if.then35:                                        ; preds = %if.else31
  %call36 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([36 x i8]* @.str19, i32 0, i32 0))
  store i32 0, i32* @go_fast, align 4
  store i32 0, i32* @must_sit, align 4
  br label %if.end518

if.else37:                                        ; preds = %if.else31
  %12 = load i8** %input.addr, align 8
  %bitcast568 = bitcast i8** %input.addr to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast568, i8** %base.alloca569, i8** %bound.alloca570)
  %base.load571 = load i8** %base.alloca569
  %bound.load572 = load i8** %bound.alloca570
  %add.ptr38 = getelementptr inbounds i8* %12, i64 6
  call void @__softboundcets_allocate_shadow_stack_space(i32 3)
  call void @__softboundcets_store_base_shadow_stack(i8* %base.load571, i32 1)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bound.load572, i32 1)
  call void @__softboundcets_store_base_shadow_stack(i8* getelementptr inbounds ([6 x i8]* @.str20, i32 0, i32 0), i32 2)
  call void @__softboundcets_store_bound_shadow_stack(i8* getelementptr inbounds ([6 x i8]* @.str20, i32 1, i32 0), i32 2)
  %call39 = call i32 @softboundcets_strncmp(i8* %add.ptr38, i8* getelementptr inbounds ([6 x i8]* @.str20, i32 0, i32 0), i64 5) #6
  call void @__softboundcets_deallocate_shadow_stack_space()
  %tobool40 = icmp ne i32 %call39, 0
  br i1 %tobool40, label %if.else44, label %if.then41

if.then41:                                        ; preds = %if.else37
  %call42 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([35 x i8]* @.str21, i32 0, i32 0))
  %call43 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([15 x i8]* @.str2248, i32 0, i32 0))
  br label %if.end517

if.else44:                                        ; preds = %if.else37
  %13 = load i8** %input.addr, align 8
  %bitcast573 = bitcast i8** %input.addr to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast573, i8** %base.alloca574, i8** %bound.alloca575)
  %base.load576 = load i8** %base.alloca574
  %bound.load577 = load i8** %bound.alloca575
  %add.ptr45 = getelementptr inbounds i8* %13, i64 6
  call void @__softboundcets_allocate_shadow_stack_space(i32 3)
  call void @__softboundcets_store_base_shadow_stack(i8* %base.load576, i32 1)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bound.load577, i32 1)
  call void @__softboundcets_store_base_shadow_stack(i8* getelementptr inbounds ([5 x i8]* @.str23, i32 0, i32 0), i32 2)
  call void @__softboundcets_store_bound_shadow_stack(i8* getelementptr inbounds ([5 x i8]* @.str23, i32 1, i32 0), i32 2)
  %call46 = call i32 @softboundcets_strncmp(i8* %add.ptr45, i8* getelementptr inbounds ([5 x i8]* @.str23, i32 0, i32 0), i64 4) #6
  call void @__softboundcets_deallocate_shadow_stack_space()
  %tobool47 = icmp ne i32 %call46, 0
  br i1 %tobool47, label %if.else51, label %if.then48

if.then48:                                        ; preds = %if.else44
  %call49 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([27 x i8]* @.str24, i32 0, i32 0))
  %call50 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([14 x i8]* @.str25, i32 0, i32 0))
  br label %if.end516

if.else51:                                        ; preds = %if.else44
  %14 = load i8** %input.addr, align 8
  %bitcast578 = bitcast i8** %input.addr to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast578, i8** %base.alloca579, i8** %bound.alloca580)
  %base.load581 = load i8** %base.alloca579
  %bound.load582 = load i8** %bound.alloca580
  %add.ptr52 = getelementptr inbounds i8* %14, i64 6
  call void @__softboundcets_allocate_shadow_stack_space(i32 3)
  call void @__softboundcets_store_base_shadow_stack(i8* %base.load581, i32 1)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bound.load582, i32 1)
  call void @__softboundcets_store_base_shadow_stack(i8* getelementptr inbounds ([2 x i8]* @.str26, i32 0, i32 0), i32 2)
  call void @__softboundcets_store_bound_shadow_stack(i8* getelementptr inbounds ([2 x i8]* @.str26, i32 1, i32 0), i32 2)
  %call53 = call i32 @softboundcets_strncmp(i8* %add.ptr52, i8* getelementptr inbounds ([2 x i8]* @.str26, i32 0, i32 0), i64 1) #6
  call void @__softboundcets_deallocate_shadow_stack_space()
  %tobool54 = icmp ne i32 %call53, 0
  br i1 %tobool54, label %if.else243, label %if.then55

if.then55:                                        ; preds = %if.else51
  %15 = load i8** %input.addr, align 8
  %bitcast588 = bitcast i8** %input.addr to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast588, i8** %base.alloca589, i8** %bound.alloca590)
  %base.load591 = load i8** %base.alloca589
  %bound.load592 = load i8** %bound.alloca590
  %add.ptr56 = getelementptr inbounds i8* %15, i64 6
  call void @__softboundcets_allocate_shadow_stack_space(i32 3)
  call void @__softboundcets_store_base_shadow_stack(i8* %base.load591, i32 1)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bound.load592, i32 1)
  call void @__softboundcets_store_base_shadow_stack(i8* getelementptr inbounds ([6 x i8]* @.str2749, i32 0, i32 0), i32 2)
  call void @__softboundcets_store_bound_shadow_stack(i8* getelementptr inbounds ([6 x i8]* @.str2749, i32 1, i32 0), i32 2)
  %call57 = call i8* @softboundcets_strstr(i8* %add.ptr56, i8* getelementptr inbounds ([6 x i8]* @.str2749, i32 0, i32 0)) #6
  %16 = call i8* @__softboundcets_load_base_shadow_stack(i32 0)
  %17 = call i8* @__softboundcets_load_bound_shadow_stack(i32 0)
  call void @__softboundcets_deallocate_shadow_stack_space()
  %cmp58 = icmp ne i8* %call57, null
  br i1 %cmp58, label %if.then87, label %lor.lhs.false59

lor.lhs.false59:                                  ; preds = %if.then55
  %18 = load i8** %input.addr, align 8
  %bitcast603 = bitcast i8** %input.addr to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast603, i8** %base.alloca604, i8** %bound.alloca605)
  %base.load606 = load i8** %base.alloca604
  %bound.load607 = load i8** %bound.alloca605
  %add.ptr60 = getelementptr inbounds i8* %18, i64 6
  call void @__softboundcets_allocate_shadow_stack_space(i32 3)
  call void @__softboundcets_store_base_shadow_stack(i8* %base.load606, i32 1)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bound.load607, i32 1)
  call void @__softboundcets_store_base_shadow_stack(i8* getelementptr inbounds ([2 x i8]* @.str28, i32 0, i32 0), i32 2)
  call void @__softboundcets_store_bound_shadow_stack(i8* getelementptr inbounds ([2 x i8]* @.str28, i32 1, i32 0), i32 2)
  %call61 = call i8* @softboundcets_strstr(i8* %add.ptr60, i8* getelementptr inbounds ([2 x i8]* @.str28, i32 0, i32 0)) #6
  %19 = call i8* @__softboundcets_load_base_shadow_stack(i32 0)
  %20 = call i8* @__softboundcets_load_bound_shadow_stack(i32 0)
  call void @__softboundcets_deallocate_shadow_stack_space()
  %cmp62 = icmp eq i8* %call61, null
  br i1 %cmp62, label %land.lhs.true63, label %if.else101

land.lhs.true63:                                  ; preds = %lor.lhs.false59
  %21 = load i8** %input.addr, align 8
  %bitcast623 = bitcast i8** %input.addr to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast623, i8** %base.alloca624, i8** %bound.alloca625)
  %base.load626 = load i8** %base.alloca624
  %bound.load627 = load i8** %bound.alloca625
  %add.ptr64 = getelementptr inbounds i8* %21, i64 6
  call void @__softboundcets_allocate_shadow_stack_space(i32 3)
  call void @__softboundcets_store_base_shadow_stack(i8* %base.load626, i32 1)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bound.load627, i32 1)
  call void @__softboundcets_store_base_shadow_stack(i8* getelementptr inbounds ([2 x i8]* @.str2950, i32 0, i32 0), i32 2)
  call void @__softboundcets_store_bound_shadow_stack(i8* getelementptr inbounds ([2 x i8]* @.str2950, i32 1, i32 0), i32 2)
  %call65 = call i8* @softboundcets_strstr(i8* %add.ptr64, i8* getelementptr inbounds ([2 x i8]* @.str2950, i32 0, i32 0)) #6
  %22 = call i8* @__softboundcets_load_base_shadow_stack(i32 0)
  %23 = call i8* @__softboundcets_load_bound_shadow_stack(i32 0)
  call void @__softboundcets_deallocate_shadow_stack_space()
  %cmp66 = icmp eq i8* %call65, null
  br i1 %cmp66, label %land.lhs.true67, label %if.else101

land.lhs.true67:                                  ; preds = %land.lhs.true63
  %24 = load i8** %input.addr, align 8
  %bitcast653 = bitcast i8** %input.addr to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast653, i8** %base.alloca654, i8** %bound.alloca655)
  %base.load656 = load i8** %base.alloca654
  %bound.load657 = load i8** %bound.alloca655
  %add.ptr68 = getelementptr inbounds i8* %24, i64 6
  call void @__softboundcets_allocate_shadow_stack_space(i32 3)
  call void @__softboundcets_store_base_shadow_stack(i8* %base.load656, i32 1)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bound.load657, i32 1)
  call void @__softboundcets_store_base_shadow_stack(i8* getelementptr inbounds ([2 x i8]* @.str30, i32 0, i32 0), i32 2)
  call void @__softboundcets_store_bound_shadow_stack(i8* getelementptr inbounds ([2 x i8]* @.str30, i32 1, i32 0), i32 2)
  %call69 = call i8* @softboundcets_strstr(i8* %add.ptr68, i8* getelementptr inbounds ([2 x i8]* @.str30, i32 0, i32 0)) #6
  %25 = call i8* @__softboundcets_load_base_shadow_stack(i32 0)
  %26 = call i8* @__softboundcets_load_bound_shadow_stack(i32 0)
  call void @__softboundcets_deallocate_shadow_stack_space()
  %cmp70 = icmp eq i8* %call69, null
  br i1 %cmp70, label %land.lhs.true71, label %if.else101

land.lhs.true71:                                  ; preds = %land.lhs.true67
  %27 = load i8** %input.addr, align 8
  %bitcast693 = bitcast i8** %input.addr to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast693, i8** %base.alloca694, i8** %bound.alloca695)
  %base.load696 = load i8** %base.alloca694
  %bound.load697 = load i8** %bound.alloca695
  %add.ptr72 = getelementptr inbounds i8* %27, i64 6
  call void @__softboundcets_allocate_shadow_stack_space(i32 3)
  call void @__softboundcets_store_base_shadow_stack(i8* %base.load696, i32 1)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bound.load697, i32 1)
  call void @__softboundcets_store_base_shadow_stack(i8* getelementptr inbounds ([2 x i8]* @.str31, i32 0, i32 0), i32 2)
  call void @__softboundcets_store_bound_shadow_stack(i8* getelementptr inbounds ([2 x i8]* @.str31, i32 1, i32 0), i32 2)
  %call73 = call i8* @softboundcets_strstr(i8* %add.ptr72, i8* getelementptr inbounds ([2 x i8]* @.str31, i32 0, i32 0)) #6
  %28 = call i8* @__softboundcets_load_base_shadow_stack(i32 0)
  %29 = call i8* @__softboundcets_load_bound_shadow_stack(i32 0)
  call void @__softboundcets_deallocate_shadow_stack_space()
  %cmp74 = icmp eq i8* %call73, null
  br i1 %cmp74, label %land.lhs.true75, label %if.else101

land.lhs.true75:                                  ; preds = %land.lhs.true71
  %30 = load i8** %input.addr, align 8
  %bitcast728 = bitcast i8** %input.addr to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast728, i8** %base.alloca729, i8** %bound.alloca730)
  %base.load731 = load i8** %base.alloca729
  %bound.load732 = load i8** %bound.alloca730
  %add.ptr76 = getelementptr inbounds i8* %30, i64 6
  call void @__softboundcets_allocate_shadow_stack_space(i32 3)
  call void @__softboundcets_store_base_shadow_stack(i8* %base.load731, i32 1)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bound.load732, i32 1)
  call void @__softboundcets_store_base_shadow_stack(i8* getelementptr inbounds ([2 x i8]* @.str32, i32 0, i32 0), i32 2)
  call void @__softboundcets_store_bound_shadow_stack(i8* getelementptr inbounds ([2 x i8]* @.str32, i32 1, i32 0), i32 2)
  %call77 = call i8* @softboundcets_strstr(i8* %add.ptr76, i8* getelementptr inbounds ([2 x i8]* @.str32, i32 0, i32 0)) #6
  %31 = call i8* @__softboundcets_load_base_shadow_stack(i32 0)
  %32 = call i8* @__softboundcets_load_bound_shadow_stack(i32 0)
  call void @__softboundcets_deallocate_shadow_stack_space()
  %cmp78 = icmp eq i8* %call77, null
  br i1 %cmp78, label %land.lhs.true79, label %if.else101

land.lhs.true79:                                  ; preds = %land.lhs.true75
  %33 = load i8** %input.addr, align 8
  %bitcast753 = bitcast i8** %input.addr to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast753, i8** %base.alloca754, i8** %bound.alloca755)
  %base.load756 = load i8** %base.alloca754
  %bound.load757 = load i8** %bound.alloca755
  %add.ptr80 = getelementptr inbounds i8* %33, i64 6
  call void @__softboundcets_allocate_shadow_stack_space(i32 3)
  call void @__softboundcets_store_base_shadow_stack(i8* %base.load756, i32 1)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bound.load757, i32 1)
  call void @__softboundcets_store_base_shadow_stack(i8* getelementptr inbounds ([2 x i8]* @.str33, i32 0, i32 0), i32 2)
  call void @__softboundcets_store_bound_shadow_stack(i8* getelementptr inbounds ([2 x i8]* @.str33, i32 1, i32 0), i32 2)
  %call81 = call i8* @softboundcets_strstr(i8* %add.ptr80, i8* getelementptr inbounds ([2 x i8]* @.str33, i32 0, i32 0)) #6
  %34 = call i8* @__softboundcets_load_base_shadow_stack(i32 0)
  %35 = call i8* @__softboundcets_load_bound_shadow_stack(i32 0)
  call void @__softboundcets_deallocate_shadow_stack_space()
  %cmp82 = icmp eq i8* %call81, null
  br i1 %cmp82, label %land.lhs.true83, label %if.else101

land.lhs.true83:                                  ; preds = %land.lhs.true79
  %36 = load i8** %input.addr, align 8
  %bitcast778 = bitcast i8** %input.addr to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast778, i8** %base.alloca779, i8** %bound.alloca780)
  %base.load781 = load i8** %base.alloca779
  %bound.load782 = load i8** %bound.alloca780
  %add.ptr84 = getelementptr inbounds i8* %36, i64 6
  call void @__softboundcets_allocate_shadow_stack_space(i32 3)
  call void @__softboundcets_store_base_shadow_stack(i8* %base.load781, i32 1)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bound.load782, i32 1)
  call void @__softboundcets_store_base_shadow_stack(i8* getelementptr inbounds ([2 x i8]* @.str34, i32 0, i32 0), i32 2)
  call void @__softboundcets_store_bound_shadow_stack(i8* getelementptr inbounds ([2 x i8]* @.str34, i32 1, i32 0), i32 2)
  %call85 = call i8* @softboundcets_strstr(i8* %add.ptr84, i8* getelementptr inbounds ([2 x i8]* @.str34, i32 0, i32 0)) #6
  %37 = call i8* @__softboundcets_load_base_shadow_stack(i32 0)
  %38 = call i8* @__softboundcets_load_bound_shadow_stack(i32 0)
  call void @__softboundcets_deallocate_shadow_stack_space()
  %cmp86 = icmp eq i8* %call85, null
  br i1 %cmp86, label %if.then87, label %if.else101

if.then87:                                        ; preds = %land.lhs.true83, %if.then55
  %39 = load i32* @comp_color, align 4
  %cmp88 = icmp eq i32 %39, 1
  br i1 %cmp88, label %if.then89, label %if.else94

if.then89:                                        ; preds = %if.then87
  %40 = load i32* getelementptr inbounds ([13 x i32]* @hand_value, i32 0, i64 1), align 4
  %add = add nsw i32 %40, 25
  store i32 %add, i32* getelementptr inbounds ([13 x i32]* @hand_value, i32 0, i64 1), align 4
  %41 = load i32* getelementptr inbounds ([13 x i32]* @hand_value, i32 0, i64 3), align 4
  %add90 = add nsw i32 %41, 50
  store i32 %add90, i32* getelementptr inbounds ([13 x i32]* @hand_value, i32 0, i64 3), align 4
  %42 = load i32* getelementptr inbounds ([13 x i32]* @hand_value, i32 0, i64 11), align 4
  %add91 = add nsw i32 %42, 50
  store i32 %add91, i32* getelementptr inbounds ([13 x i32]* @hand_value, i32 0, i64 11), align 4
  %43 = load i32* getelementptr inbounds ([13 x i32]* @hand_value, i32 0, i64 7), align 4
  %add92 = add nsw i32 %43, 50
  store i32 %add92, i32* getelementptr inbounds ([13 x i32]* @hand_value, i32 0, i64 7), align 4
  %44 = load i32* getelementptr inbounds ([13 x i32]* @hand_value, i32 0, i64 9), align 4
  %add93 = add nsw i32 %44, 100
  store i32 %add93, i32* getelementptr inbounds ([13 x i32]* @hand_value, i32 0, i64 9), align 4
  br label %if.end99

if.else94:                                        ; preds = %if.then87
  %45 = load i32* getelementptr inbounds ([13 x i32]* @hand_value, i32 0, i64 2), align 4
  %sub = sub nsw i32 %45, 25
  store i32 %sub, i32* getelementptr inbounds ([13 x i32]* @hand_value, i32 0, i64 2), align 4
  %46 = load i32* getelementptr inbounds ([13 x i32]* @hand_value, i32 0, i64 4), align 4
  %sub95 = sub nsw i32 %46, 50
  store i32 %sub95, i32* getelementptr inbounds ([13 x i32]* @hand_value, i32 0, i64 4), align 4
  %47 = load i32* getelementptr inbounds ([13 x i32]* @hand_value, i32 0, i64 12), align 4
  %sub96 = sub nsw i32 %47, 50
  store i32 %sub96, i32* getelementptr inbounds ([13 x i32]* @hand_value, i32 0, i64 12), align 4
  %48 = load i32* getelementptr inbounds ([13 x i32]* @hand_value, i32 0, i64 8), align 4
  %sub97 = sub nsw i32 %48, 50
  store i32 %sub97, i32* getelementptr inbounds ([13 x i32]* @hand_value, i32 0, i64 8), align 4
  %49 = load i32* getelementptr inbounds ([13 x i32]* @hand_value, i32 0, i64 10), align 4
  %sub98 = sub nsw i32 %49, 100
  store i32 %sub98, i32* getelementptr inbounds ([13 x i32]* @hand_value, i32 0, i64 10), align 4
  br label %if.end99

if.end99:                                         ; preds = %if.else94, %if.then89
  %call100 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([35 x i8]* @.str35, i32 0, i32 0))
  br label %if.end125

if.else101:                                       ; preds = %land.lhs.true83, %land.lhs.true79, %land.lhs.true75, %land.lhs.true71, %land.lhs.true67, %land.lhs.true63, %lor.lhs.false59
  %50 = load i8** %input.addr, align 8
  %bitcast628 = bitcast i8** %input.addr to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast628, i8** %base.alloca629, i8** %bound.alloca630)
  %base.load631 = load i8** %base.alloca629
  %bound.load632 = load i8** %bound.alloca630
  %add.ptr102 = getelementptr inbounds i8* %50, i64 6
  call void @__softboundcets_allocate_shadow_stack_space(i32 3)
  call void @__softboundcets_store_base_shadow_stack(i8* %base.load631, i32 1)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bound.load632, i32 1)
  call void @__softboundcets_store_base_shadow_stack(i8* getelementptr inbounds ([4 x i8]* @.str36, i32 0, i32 0), i32 2)
  call void @__softboundcets_store_bound_shadow_stack(i8* getelementptr inbounds ([4 x i8]* @.str36, i32 1, i32 0), i32 2)
  %call103 = call i8* @softboundcets_strstr(i8* %add.ptr102, i8* getelementptr inbounds ([4 x i8]* @.str36, i32 0, i32 0)) #6
  %51 = call i8* @__softboundcets_load_base_shadow_stack(i32 0)
  %52 = call i8* @__softboundcets_load_bound_shadow_stack(i32 0)
  call void @__softboundcets_deallocate_shadow_stack_space()
  %cmp104 = icmp ne i8* %call103, null
  br i1 %cmp104, label %if.then105, label %if.else107

if.then105:                                       ; preds = %if.else101
  store i32 50000, i32* %change, align 4
  %arraydecay = getelementptr inbounds [80 x i8]* %howmuch, i32 0, i32 0
  call void @__softboundcets_allocate_shadow_stack_space(i32 3)
  call void @__softboundcets_store_base_shadow_stack(i8* %bitcast529, i32 1)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bitcast531, i32 1)
  call void @__softboundcets_store_base_shadow_stack(i8* getelementptr inbounds ([6 x i8]* @.str37, i32 0, i32 0), i32 2)
  call void @__softboundcets_store_bound_shadow_stack(i8* getelementptr inbounds ([6 x i8]* @.str37, i32 1, i32 0), i32 2)
  %call106 = call i8* @softboundcets_strcpy(i8* %arraydecay, i8* getelementptr inbounds ([6 x i8]* @.str37, i32 0, i32 0)) #1
  %53 = call i8* @__softboundcets_load_base_shadow_stack(i32 0)
  %54 = call i8* @__softboundcets_load_bound_shadow_stack(i32 0)
  call void @__softboundcets_deallocate_shadow_stack_space()
  br label %if.end124

if.else107:                                       ; preds = %if.else101
  %55 = load i8** %input.addr, align 8
  %bitcast658 = bitcast i8** %input.addr to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast658, i8** %base.alloca659, i8** %bound.alloca660)
  %base.load661 = load i8** %base.alloca659
  %bound.load662 = load i8** %bound.alloca660
  %add.ptr108 = getelementptr inbounds i8* %55, i64 6
  call void @__softboundcets_allocate_shadow_stack_space(i32 3)
  call void @__softboundcets_store_base_shadow_stack(i8* %base.load661, i32 1)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bound.load662, i32 1)
  call void @__softboundcets_store_base_shadow_stack(i8* getelementptr inbounds ([3 x i8]* @.str38, i32 0, i32 0), i32 2)
  call void @__softboundcets_store_bound_shadow_stack(i8* getelementptr inbounds ([3 x i8]* @.str38, i32 1, i32 0), i32 2)
  %call109 = call i8* @softboundcets_strstr(i8* %add.ptr108, i8* getelementptr inbounds ([3 x i8]* @.str38, i32 0, i32 0)) #6
  %56 = call i8* @__softboundcets_load_base_shadow_stack(i32 0)
  %57 = call i8* @__softboundcets_load_bound_shadow_stack(i32 0)
  call void @__softboundcets_deallocate_shadow_stack_space()
  %cmp110 = icmp ne i8* %call109, null
  br i1 %cmp110, label %if.then111, label %if.else114

if.then111:                                       ; preds = %if.else107
  store i32 1000, i32* %change, align 4
  %arraydecay112 = getelementptr inbounds [80 x i8]* %howmuch, i32 0, i32 0
  call void @__softboundcets_allocate_shadow_stack_space(i32 3)
  call void @__softboundcets_store_base_shadow_stack(i8* %bitcast529, i32 1)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bitcast531, i32 1)
  call void @__softboundcets_store_base_shadow_stack(i8* getelementptr inbounds ([49 x i8]* @.str39, i32 0, i32 0), i32 2)
  call void @__softboundcets_store_bound_shadow_stack(i8* getelementptr inbounds ([49 x i8]* @.str39, i32 1, i32 0), i32 2)
  %call113 = call i8* @softboundcets_strcpy(i8* %arraydecay112, i8* getelementptr inbounds ([49 x i8]* @.str39, i32 0, i32 0)) #1
  %58 = call i8* @__softboundcets_load_base_shadow_stack(i32 0)
  %59 = call i8* @__softboundcets_load_bound_shadow_stack(i32 0)
  call void @__softboundcets_deallocate_shadow_stack_space()
  br label %if.end123

if.else114:                                       ; preds = %if.else107
  %60 = load i8** %input.addr, align 8
  %bitcast698 = bitcast i8** %input.addr to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast698, i8** %base.alloca699, i8** %bound.alloca700)
  %base.load701 = load i8** %base.alloca699
  %bound.load702 = load i8** %bound.alloca700
  %add.ptr115 = getelementptr inbounds i8* %60, i64 6
  call void @__softboundcets_allocate_shadow_stack_space(i32 3)
  call void @__softboundcets_store_base_shadow_stack(i8* %base.load701, i32 1)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bound.load702, i32 1)
  call void @__softboundcets_store_base_shadow_stack(i8* getelementptr inbounds ([2 x i8]* @.str26, i32 0, i32 0), i32 2)
  call void @__softboundcets_store_bound_shadow_stack(i8* getelementptr inbounds ([2 x i8]* @.str26, i32 1, i32 0), i32 2)
  %call116 = call i8* @softboundcets_strstr(i8* %add.ptr115, i8* getelementptr inbounds ([2 x i8]* @.str26, i32 0, i32 0)) #6
  %61 = call i8* @__softboundcets_load_base_shadow_stack(i32 0)
  %62 = call i8* @__softboundcets_load_bound_shadow_stack(i32 0)
  call void @__softboundcets_deallocate_shadow_stack_space()
  %cmp117 = icmp ne i8* %call116, null
  br i1 %cmp117, label %if.then118, label %if.else121

if.then118:                                       ; preds = %if.else114
  store i32 150, i32* %change, align 4
  %arraydecay119 = getelementptr inbounds [80 x i8]* %howmuch, i32 0, i32 0
  call void @__softboundcets_allocate_shadow_stack_space(i32 3)
  call void @__softboundcets_store_base_shadow_stack(i8* %bitcast529, i32 1)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bitcast531, i32 1)
  call void @__softboundcets_store_base_shadow_stack(i8* getelementptr inbounds ([44 x i8]* @.str40, i32 0, i32 0), i32 2)
  call void @__softboundcets_store_bound_shadow_stack(i8* getelementptr inbounds ([44 x i8]* @.str40, i32 1, i32 0), i32 2)
  %call120 = call i8* @softboundcets_strcpy(i8* %arraydecay119, i8* getelementptr inbounds ([44 x i8]* @.str40, i32 0, i32 0)) #1
  %63 = call i8* @__softboundcets_load_base_shadow_stack(i32 0)
  %64 = call i8* @__softboundcets_load_bound_shadow_stack(i32 0)
  call void @__softboundcets_deallocate_shadow_stack_space()
  br label %if.end122

if.else121:                                       ; preds = %if.else114
  store i32 0, i32* null, align 4
  br label %if.end122

if.end122:                                        ; preds = %if.else121, %if.then118
  br label %if.end123

if.end123:                                        ; preds = %if.end122, %if.then111
  br label %if.end124

if.end124:                                        ; preds = %if.end123, %if.then105
  br label %if.end125

if.end125:                                        ; preds = %if.end124, %if.end99
  %65 = load i8** %input.addr, align 8
  %bitcast688 = bitcast i8** %input.addr to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast688, i8** %base.alloca689, i8** %bound.alloca690)
  %base.load691 = load i8** %base.alloca689
  %bound.load692 = load i8** %bound.alloca690
  %add.ptr126 = getelementptr inbounds i8* %65, i64 6
  call void @__softboundcets_allocate_shadow_stack_space(i32 3)
  call void @__softboundcets_store_base_shadow_stack(i8* %base.load691, i32 1)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bound.load692, i32 1)
  call void @__softboundcets_store_base_shadow_stack(i8* getelementptr inbounds ([2 x i8]* @.str28, i32 0, i32 0), i32 2)
  call void @__softboundcets_store_bound_shadow_stack(i8* getelementptr inbounds ([2 x i8]* @.str28, i32 1, i32 0), i32 2)
  %call127 = call i8* @softboundcets_strstr(i8* %add.ptr126, i8* getelementptr inbounds ([2 x i8]* @.str28, i32 0, i32 0)) #6
  %66 = call i8* @__softboundcets_load_base_shadow_stack(i32 0)
  %67 = call i8* @__softboundcets_load_bound_shadow_stack(i32 0)
  call void @__softboundcets_deallocate_shadow_stack_space()
  %cmp128 = icmp ne i8* %call127, null
  br i1 %cmp128, label %if.then129, label %if.end138

if.then129:                                       ; preds = %if.end125
  %68 = load i32* @comp_color, align 4
  %cmp130 = icmp eq i32 %68, 1
  br i1 %cmp130, label %if.then131, label %if.else133

if.then131:                                       ; preds = %if.then129
  %69 = load i32* getelementptr inbounds ([13 x i32]* @std_hand_value, i32 0, i64 3), align 4
  %70 = load i32* %change, align 4
  %add132 = add nsw i32 %69, %70
  store i32 %add132, i32* getelementptr inbounds ([13 x i32]* @hand_value, i32 0, i64 3), align 4
  br label %if.end135

if.else133:                                       ; preds = %if.then129
  %71 = load i32* getelementptr inbounds ([13 x i32]* @std_hand_value, i32 0, i64 4), align 4
  %72 = load i32* %change, align 4
  %sub134 = sub nsw i32 %71, %72
  store i32 %sub134, i32* getelementptr inbounds ([13 x i32]* @hand_value, i32 0, i64 4), align 4
  br label %if.end135

if.end135:                                        ; preds = %if.else133, %if.then131
  %arraydecay136 = getelementptr inbounds [80 x i8]* %howmuch, i32 0, i32 0
  %call137 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([29 x i8]* @.str41, i32 0, i32 0), i8* %arraydecay136)
  br label %if.end138

if.end138:                                        ; preds = %if.end135, %if.end125
  %73 = load i8** %input.addr, align 8
  %bitcast723 = bitcast i8** %input.addr to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast723, i8** %base.alloca724, i8** %bound.alloca725)
  %base.load726 = load i8** %base.alloca724
  %bound.load727 = load i8** %bound.alloca725
  %add.ptr139 = getelementptr inbounds i8* %73, i64 6
  call void @__softboundcets_allocate_shadow_stack_space(i32 3)
  call void @__softboundcets_store_base_shadow_stack(i8* %base.load726, i32 1)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bound.load727, i32 1)
  call void @__softboundcets_store_base_shadow_stack(i8* getelementptr inbounds ([2 x i8]* @.str2950, i32 0, i32 0), i32 2)
  call void @__softboundcets_store_bound_shadow_stack(i8* getelementptr inbounds ([2 x i8]* @.str2950, i32 1, i32 0), i32 2)
  %call140 = call i8* @softboundcets_strstr(i8* %add.ptr139, i8* getelementptr inbounds ([2 x i8]* @.str2950, i32 0, i32 0)) #6
  %74 = call i8* @__softboundcets_load_base_shadow_stack(i32 0)
  %75 = call i8* @__softboundcets_load_bound_shadow_stack(i32 0)
  call void @__softboundcets_deallocate_shadow_stack_space()
  %cmp141 = icmp ne i8* %call140, null
  br i1 %cmp141, label %if.then142, label %if.end157

if.then142:                                       ; preds = %if.end138
  %76 = load i32* @comp_color, align 4
  %cmp143 = icmp eq i32 %76, 1
  br i1 %cmp143, label %if.then144, label %if.else146

if.then144:                                       ; preds = %if.then142
  %77 = load i32* getelementptr inbounds ([13 x i32]* @std_hand_value, i32 0, i64 11), align 4
  %78 = load i32* %change, align 4
  %add145 = add nsw i32 %77, %78
  store i32 %add145, i32* getelementptr inbounds ([13 x i32]* @hand_value, i32 0, i64 11), align 4
  br label %if.end148

if.else146:                                       ; preds = %if.then142
  %79 = load i32* getelementptr inbounds ([13 x i32]* @std_hand_value, i32 0, i64 12), align 4
  %80 = load i32* %change, align 4
  %sub147 = sub nsw i32 %79, %80
  store i32 %sub147, i32* getelementptr inbounds ([13 x i32]* @hand_value, i32 0, i64 12), align 4
  br label %if.end148

if.end148:                                        ; preds = %if.else146, %if.then144
  %81 = load i32* @comp_color, align 4
  %cmp149 = icmp eq i32 %81, 1
  br i1 %cmp149, label %if.then150, label %if.else152

if.then150:                                       ; preds = %if.end148
  %82 = load i32* getelementptr inbounds ([13 x i32]* @std_hand_value, i32 0, i64 9), align 4
  %83 = load i32* %change, align 4
  %add151 = add nsw i32 %82, %83
  store i32 %add151, i32* getelementptr inbounds ([13 x i32]* @hand_value, i32 0, i64 9), align 4
  br label %if.end154

if.else152:                                       ; preds = %if.end148
  %84 = load i32* getelementptr inbounds ([13 x i32]* @std_hand_value, i32 0, i64 10), align 4
  %85 = load i32* %change, align 4
  %sub153 = sub nsw i32 %84, %85
  store i32 %sub153, i32* getelementptr inbounds ([13 x i32]* @hand_value, i32 0, i64 10), align 4
  br label %if.end154

if.end154:                                        ; preds = %if.else152, %if.then150
  %arraydecay155 = getelementptr inbounds [80 x i8]* %howmuch, i32 0, i32 0
  %call156 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([29 x i8]* @.str42, i32 0, i32 0), i8* %arraydecay155)
  br label %if.end157

if.end157:                                        ; preds = %if.end154, %if.end138
  %86 = load i8** %input.addr, align 8
  %bitcast748 = bitcast i8** %input.addr to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast748, i8** %base.alloca749, i8** %bound.alloca750)
  %base.load751 = load i8** %base.alloca749
  %bound.load752 = load i8** %bound.alloca750
  %add.ptr158 = getelementptr inbounds i8* %86, i64 6
  call void @__softboundcets_allocate_shadow_stack_space(i32 3)
  call void @__softboundcets_store_base_shadow_stack(i8* %base.load751, i32 1)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bound.load752, i32 1)
  call void @__softboundcets_store_base_shadow_stack(i8* getelementptr inbounds ([2 x i8]* @.str31, i32 0, i32 0), i32 2)
  call void @__softboundcets_store_bound_shadow_stack(i8* getelementptr inbounds ([2 x i8]* @.str31, i32 1, i32 0), i32 2)
  %call159 = call i8* @softboundcets_strstr(i8* %add.ptr158, i8* getelementptr inbounds ([2 x i8]* @.str31, i32 0, i32 0)) #6
  %87 = call i8* @__softboundcets_load_base_shadow_stack(i32 0)
  %88 = call i8* @__softboundcets_load_bound_shadow_stack(i32 0)
  call void @__softboundcets_deallocate_shadow_stack_space()
  %cmp160 = icmp ne i8* %call159, null
  br i1 %cmp160, label %if.then161, label %if.end176

if.then161:                                       ; preds = %if.end157
  %89 = load i32* @comp_color, align 4
  %cmp162 = icmp eq i32 %89, 1
  br i1 %cmp162, label %if.then163, label %if.else165

if.then163:                                       ; preds = %if.then161
  %90 = load i32* getelementptr inbounds ([13 x i32]* @std_hand_value, i32 0, i64 7), align 4
  %91 = load i32* %change, align 4
  %add164 = add nsw i32 %90, %91
  store i32 %add164, i32* getelementptr inbounds ([13 x i32]* @hand_value, i32 0, i64 7), align 4
  br label %if.end167

if.else165:                                       ; preds = %if.then161
  %92 = load i32* getelementptr inbounds ([13 x i32]* @std_hand_value, i32 0, i64 8), align 4
  %93 = load i32* %change, align 4
  %sub166 = sub nsw i32 %92, %93
  store i32 %sub166, i32* getelementptr inbounds ([13 x i32]* @hand_value, i32 0, i64 8), align 4
  br label %if.end167

if.end167:                                        ; preds = %if.else165, %if.then163
  %94 = load i32* @comp_color, align 4
  %cmp168 = icmp eq i32 %94, 1
  br i1 %cmp168, label %if.then169, label %if.else171

if.then169:                                       ; preds = %if.end167
  %95 = load i32* getelementptr inbounds ([13 x i32]* @std_hand_value, i32 0, i64 9), align 4
  %96 = load i32* %change, align 4
  %add170 = add nsw i32 %95, %96
  store i32 %add170, i32* getelementptr inbounds ([13 x i32]* @hand_value, i32 0, i64 9), align 4
  br label %if.end173

if.else171:                                       ; preds = %if.end167
  %97 = load i32* getelementptr inbounds ([13 x i32]* @std_hand_value, i32 0, i64 10), align 4
  %98 = load i32* %change, align 4
  %sub172 = sub nsw i32 %97, %98
  store i32 %sub172, i32* getelementptr inbounds ([13 x i32]* @hand_value, i32 0, i64 10), align 4
  br label %if.end173

if.end173:                                        ; preds = %if.else171, %if.then169
  %arraydecay174 = getelementptr inbounds [80 x i8]* %howmuch, i32 0, i32 0
  %call175 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([27 x i8]* @.str43, i32 0, i32 0), i8* %arraydecay174)
  br label %if.end176

if.end176:                                        ; preds = %if.end173, %if.end157
  %99 = load i8** %input.addr, align 8
  %bitcast773 = bitcast i8** %input.addr to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast773, i8** %base.alloca774, i8** %bound.alloca775)
  %base.load776 = load i8** %base.alloca774
  %bound.load777 = load i8** %bound.alloca775
  %add.ptr177 = getelementptr inbounds i8* %99, i64 6
  call void @__softboundcets_allocate_shadow_stack_space(i32 3)
  call void @__softboundcets_store_base_shadow_stack(i8* %base.load776, i32 1)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bound.load777, i32 1)
  call void @__softboundcets_store_base_shadow_stack(i8* getelementptr inbounds ([2 x i8]* @.str32, i32 0, i32 0), i32 2)
  call void @__softboundcets_store_bound_shadow_stack(i8* getelementptr inbounds ([2 x i8]* @.str32, i32 1, i32 0), i32 2)
  %call178 = call i8* @softboundcets_strstr(i8* %add.ptr177, i8* getelementptr inbounds ([2 x i8]* @.str32, i32 0, i32 0)) #6
  %100 = call i8* @__softboundcets_load_base_shadow_stack(i32 0)
  %101 = call i8* @__softboundcets_load_bound_shadow_stack(i32 0)
  call void @__softboundcets_deallocate_shadow_stack_space()
  %cmp179 = icmp ne i8* %call178, null
  br i1 %cmp179, label %if.then180, label %if.end189

if.then180:                                       ; preds = %if.end176
  %102 = load i32* @comp_color, align 4
  %cmp181 = icmp eq i32 %102, 1
  br i1 %cmp181, label %if.then182, label %if.else184

if.then182:                                       ; preds = %if.then180
  %103 = load i32* getelementptr inbounds ([13 x i32]* @std_hand_value, i32 0, i64 9), align 4
  %104 = load i32* %change, align 4
  %add183 = add nsw i32 %103, %104
  store i32 %add183, i32* getelementptr inbounds ([13 x i32]* @hand_value, i32 0, i64 9), align 4
  br label %if.end186

if.else184:                                       ; preds = %if.then180
  %105 = load i32* getelementptr inbounds ([13 x i32]* @std_hand_value, i32 0, i64 10), align 4
  %106 = load i32* %change, align 4
  %sub185 = sub nsw i32 %105, %106
  store i32 %sub185, i32* getelementptr inbounds ([13 x i32]* @hand_value, i32 0, i64 10), align 4
  br label %if.end186

if.end186:                                        ; preds = %if.else184, %if.then182
  %arraydecay187 = getelementptr inbounds [80 x i8]* %howmuch, i32 0, i32 0
  %call188 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([28 x i8]* @.str44, i32 0, i32 0), i8* %arraydecay187)
  br label %if.end189

if.end189:                                        ; preds = %if.end186, %if.end176
  %107 = load i8** %input.addr, align 8
  %bitcast798 = bitcast i8** %input.addr to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast798, i8** %base.alloca799, i8** %bound.alloca800)
  %base.load801 = load i8** %base.alloca799
  %bound.load802 = load i8** %bound.alloca800
  %add.ptr190 = getelementptr inbounds i8* %107, i64 6
  call void @__softboundcets_allocate_shadow_stack_space(i32 3)
  call void @__softboundcets_store_base_shadow_stack(i8* %base.load801, i32 1)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bound.load802, i32 1)
  call void @__softboundcets_store_base_shadow_stack(i8* getelementptr inbounds ([2 x i8]* @.str30, i32 0, i32 0), i32 2)
  call void @__softboundcets_store_bound_shadow_stack(i8* getelementptr inbounds ([2 x i8]* @.str30, i32 1, i32 0), i32 2)
  %call191 = call i8* @softboundcets_strstr(i8* %add.ptr190, i8* getelementptr inbounds ([2 x i8]* @.str30, i32 0, i32 0)) #6
  %108 = call i8* @__softboundcets_load_base_shadow_stack(i32 0)
  %109 = call i8* @__softboundcets_load_bound_shadow_stack(i32 0)
  call void @__softboundcets_deallocate_shadow_stack_space()
  %cmp192 = icmp ne i8* %call191, null
  br i1 %cmp192, label %if.then193, label %if.end210

if.then193:                                       ; preds = %if.end189
  %110 = load i32* @comp_color, align 4
  %cmp194 = icmp eq i32 %110, 1
  br i1 %cmp194, label %if.then195, label %if.else197

if.then195:                                       ; preds = %if.then193
  %111 = load i32* getelementptr inbounds ([13 x i32]* @std_hand_value, i32 0, i64 1), align 4
  %112 = load i32* %change, align 4
  %add196 = add nsw i32 %111, %112
  store i32 %add196, i32* getelementptr inbounds ([13 x i32]* @hand_value, i32 0, i64 1), align 4
  br label %if.end199

if.else197:                                       ; preds = %if.then193
  %113 = load i32* getelementptr inbounds ([13 x i32]* @std_hand_value, i32 0, i64 2), align 4
  %114 = load i32* %change, align 4
  %sub198 = sub nsw i32 %113, %114
  store i32 %sub198, i32* getelementptr inbounds ([13 x i32]* @hand_value, i32 0, i64 2), align 4
  br label %if.end199

if.end199:                                        ; preds = %if.else197, %if.then195
  %115 = load i32* @comp_color, align 4
  %cmp200 = icmp eq i32 %115, 1
  br i1 %cmp200, label %if.then201, label %if.else204

if.then201:                                       ; preds = %if.end199
  %116 = load i32* getelementptr inbounds ([13 x i32]* @std_hand_value, i32 0, i64 9), align 4
  %117 = load i32* %change, align 4
  %add202 = add nsw i32 %116, %117
  store i32 %add202, i32* getelementptr inbounds ([13 x i32]* @hand_value, i32 0, i64 9), align 4
  %118 = load i32* getelementptr inbounds ([13 x i32]* @std_hand_value, i32 0, i64 11), align 4
  %119 = load i32* %change, align 4
  %add203 = add nsw i32 %118, %119
  store i32 %add203, i32* getelementptr inbounds ([13 x i32]* @hand_value, i32 0, i64 11), align 4
  br label %if.end207

if.else204:                                       ; preds = %if.end199
  %120 = load i32* getelementptr inbounds ([13 x i32]* @std_hand_value, i32 0, i64 10), align 4
  %121 = load i32* %change, align 4
  %sub205 = sub nsw i32 %120, %121
  store i32 %sub205, i32* getelementptr inbounds ([13 x i32]* @hand_value, i32 0, i64 10), align 4
  %122 = load i32* getelementptr inbounds ([13 x i32]* @std_hand_value, i32 0, i64 12), align 4
  %123 = load i32* %change, align 4
  %sub206 = sub nsw i32 %122, %123
  store i32 %sub206, i32* getelementptr inbounds ([13 x i32]* @hand_value, i32 0, i64 12), align 4
  br label %if.end207

if.end207:                                        ; preds = %if.else204, %if.then201
  %arraydecay208 = getelementptr inbounds [80 x i8]* %howmuch, i32 0, i32 0
  %call209 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([27 x i8]* @.str45, i32 0, i32 0), i8* %arraydecay208)
  br label %if.end210

if.end210:                                        ; preds = %if.end207, %if.end189
  %124 = load i8** %input.addr, align 8
  %bitcast813 = bitcast i8** %input.addr to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast813, i8** %base.alloca814, i8** %bound.alloca815)
  %base.load816 = load i8** %base.alloca814
  %bound.load817 = load i8** %bound.alloca815
  %add.ptr211 = getelementptr inbounds i8* %124, i64 6
  call void @__softboundcets_allocate_shadow_stack_space(i32 3)
  call void @__softboundcets_store_base_shadow_stack(i8* %base.load816, i32 1)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bound.load817, i32 1)
  call void @__softboundcets_store_base_shadow_stack(i8* getelementptr inbounds ([2 x i8]* @.str33, i32 0, i32 0), i32 2)
  call void @__softboundcets_store_bound_shadow_stack(i8* getelementptr inbounds ([2 x i8]* @.str33, i32 1, i32 0), i32 2)
  %call212 = call i8* @softboundcets_strstr(i8* %add.ptr211, i8* getelementptr inbounds ([2 x i8]* @.str33, i32 0, i32 0)) #6
  %125 = call i8* @__softboundcets_load_base_shadow_stack(i32 0)
  %126 = call i8* @__softboundcets_load_bound_shadow_stack(i32 0)
  call void @__softboundcets_deallocate_shadow_stack_space()
  %cmp213 = icmp ne i8* %call212, null
  br i1 %cmp213, label %if.then214, label %if.end227

if.then214:                                       ; preds = %if.end210
  %127 = load i32* @comp_color, align 4
  %cmp215 = icmp eq i32 %127, 1
  br i1 %cmp215, label %if.then216, label %if.else220

if.then216:                                       ; preds = %if.then214
  %128 = load i32* getelementptr inbounds ([13 x i32]* @std_hand_value, i32 0, i64 1), align 4
  %129 = load i32* %change, align 4
  %add217 = add nsw i32 %128, %129
  store i32 %add217, i32* getelementptr inbounds ([13 x i32]* @hand_value, i32 0, i64 1), align 4
  %130 = load i32* getelementptr inbounds ([13 x i32]* @std_hand_value, i32 0, i64 11), align 4
  %131 = load i32* %change, align 4
  %add218 = add nsw i32 %130, %131
  store i32 %add218, i32* getelementptr inbounds ([13 x i32]* @hand_value, i32 0, i64 11), align 4
  %132 = load i32* getelementptr inbounds ([13 x i32]* @std_hand_value, i32 0, i64 9), align 4
  %133 = load i32* %change, align 4
  %add219 = add nsw i32 %132, %133
  store i32 %add219, i32* getelementptr inbounds ([13 x i32]* @hand_value, i32 0, i64 9), align 4
  br label %if.end224

if.else220:                                       ; preds = %if.then214
  %134 = load i32* getelementptr inbounds ([13 x i32]* @std_hand_value, i32 0, i64 2), align 4
  %135 = load i32* %change, align 4
  %sub221 = sub nsw i32 %134, %135
  store i32 %sub221, i32* getelementptr inbounds ([13 x i32]* @hand_value, i32 0, i64 2), align 4
  %136 = load i32* getelementptr inbounds ([13 x i32]* @std_hand_value, i32 0, i64 12), align 4
  %137 = load i32* %change, align 4
  %sub222 = sub nsw i32 %136, %137
  store i32 %sub222, i32* getelementptr inbounds ([13 x i32]* @hand_value, i32 0, i64 12), align 4
  %138 = load i32* getelementptr inbounds ([13 x i32]* @std_hand_value, i32 0, i64 10), align 4
  %139 = load i32* %change, align 4
  %sub223 = sub nsw i32 %138, %139
  store i32 %sub223, i32* getelementptr inbounds ([13 x i32]* @hand_value, i32 0, i64 10), align 4
  br label %if.end224

if.end224:                                        ; preds = %if.else220, %if.then216
  %arraydecay225 = getelementptr inbounds [80 x i8]* %howmuch, i32 0, i32 0
  %call226 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([31 x i8]* @.str46, i32 0, i32 0), i8* %arraydecay225)
  br label %if.end227

if.end227:                                        ; preds = %if.end224, %if.end210
  %140 = load i8** %input.addr, align 8
  %bitcast828 = bitcast i8** %input.addr to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast828, i8** %base.alloca829, i8** %bound.alloca830)
  %base.load831 = load i8** %base.alloca829
  %bound.load832 = load i8** %bound.alloca830
  %add.ptr228 = getelementptr inbounds i8* %140, i64 6
  call void @__softboundcets_allocate_shadow_stack_space(i32 3)
  call void @__softboundcets_store_base_shadow_stack(i8* %base.load831, i32 1)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bound.load832, i32 1)
  call void @__softboundcets_store_base_shadow_stack(i8* getelementptr inbounds ([2 x i8]* @.str34, i32 0, i32 0), i32 2)
  call void @__softboundcets_store_bound_shadow_stack(i8* getelementptr inbounds ([2 x i8]* @.str34, i32 1, i32 0), i32 2)
  %call229 = call i8* @softboundcets_strstr(i8* %add.ptr228, i8* getelementptr inbounds ([2 x i8]* @.str34, i32 0, i32 0)) #6
  %141 = call i8* @__softboundcets_load_base_shadow_stack(i32 0)
  %142 = call i8* @__softboundcets_load_bound_shadow_stack(i32 0)
  call void @__softboundcets_deallocate_shadow_stack_space()
  %cmp230 = icmp ne i8* %call229, null
  br i1 %cmp230, label %if.then231, label %if.end242

if.then231:                                       ; preds = %if.end227
  %143 = load i32* @comp_color, align 4
  %cmp232 = icmp eq i32 %143, 1
  br i1 %cmp232, label %if.then233, label %if.else236

if.then233:                                       ; preds = %if.then231
  %144 = load i32* getelementptr inbounds ([13 x i32]* @std_hand_value, i32 0, i64 7), align 4
  %145 = load i32* %change, align 4
  %add234 = add nsw i32 %144, %145
  store i32 %add234, i32* getelementptr inbounds ([13 x i32]* @hand_value, i32 0, i64 7), align 4
  %146 = load i32* getelementptr inbounds ([13 x i32]* @std_hand_value, i32 0, i64 9), align 4
  %147 = load i32* %change, align 4
  %add235 = add nsw i32 %146, %147
  store i32 %add235, i32* getelementptr inbounds ([13 x i32]* @hand_value, i32 0, i64 9), align 4
  br label %if.end239

if.else236:                                       ; preds = %if.then231
  %148 = load i32* getelementptr inbounds ([13 x i32]* @std_hand_value, i32 0, i64 8), align 4
  %149 = load i32* %change, align 4
  %sub237 = sub nsw i32 %148, %149
  store i32 %sub237, i32* getelementptr inbounds ([13 x i32]* @hand_value, i32 0, i64 8), align 4
  %150 = load i32* getelementptr inbounds ([13 x i32]* @std_hand_value, i32 0, i64 10), align 4
  %151 = load i32* %change, align 4
  %sub238 = sub nsw i32 %150, %151
  store i32 %sub238, i32* getelementptr inbounds ([13 x i32]* @hand_value, i32 0, i64 10), align 4
  br label %if.end239

if.end239:                                        ; preds = %if.else236, %if.then233
  %arraydecay240 = getelementptr inbounds [80 x i8]* %howmuch, i32 0, i32 0
  %call241 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([28 x i8]* @.str47, i32 0, i32 0), i8* %arraydecay240)
  br label %if.end242

if.end242:                                        ; preds = %if.end239, %if.end227
  br label %if.end515

if.else243:                                       ; preds = %if.else51
  %152 = load i8** %input.addr, align 8
  %bitcast583 = bitcast i8** %input.addr to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast583, i8** %base.alloca584, i8** %bound.alloca585)
  %base.load586 = load i8** %base.alloca584
  %bound.load587 = load i8** %bound.alloca585
  %add.ptr244 = getelementptr inbounds i8* %152, i64 6
  call void @__softboundcets_allocate_shadow_stack_space(i32 3)
  call void @__softboundcets_store_base_shadow_stack(i8* %base.load586, i32 1)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bound.load587, i32 1)
  call void @__softboundcets_store_base_shadow_stack(i8* getelementptr inbounds ([2 x i8]* @.str48, i32 0, i32 0), i32 2)
  call void @__softboundcets_store_bound_shadow_stack(i8* getelementptr inbounds ([2 x i8]* @.str48, i32 1, i32 0), i32 2)
  %call245 = call i32 @softboundcets_strncmp(i8* %add.ptr244, i8* getelementptr inbounds ([2 x i8]* @.str48, i32 0, i32 0), i64 1) #6
  call void @__softboundcets_deallocate_shadow_stack_space()
  %tobool246 = icmp ne i32 %call245, 0
  br i1 %tobool246, label %if.else438, label %if.then247

if.then247:                                       ; preds = %if.else243
  %153 = load i8** %input.addr, align 8
  %bitcast598 = bitcast i8** %input.addr to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast598, i8** %base.alloca599, i8** %bound.alloca600)
  %base.load601 = load i8** %base.alloca599
  %bound.load602 = load i8** %bound.alloca600
  %add.ptr248 = getelementptr inbounds i8* %153, i64 6
  call void @__softboundcets_allocate_shadow_stack_space(i32 3)
  call void @__softboundcets_store_base_shadow_stack(i8* %base.load601, i32 1)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bound.load602, i32 1)
  call void @__softboundcets_store_base_shadow_stack(i8* getelementptr inbounds ([6 x i8]* @.str2749, i32 0, i32 0), i32 2)
  call void @__softboundcets_store_bound_shadow_stack(i8* getelementptr inbounds ([6 x i8]* @.str2749, i32 1, i32 0), i32 2)
  %call249 = call i8* @softboundcets_strstr(i8* %add.ptr248, i8* getelementptr inbounds ([6 x i8]* @.str2749, i32 0, i32 0)) #6
  %154 = call i8* @__softboundcets_load_base_shadow_stack(i32 0)
  %155 = call i8* @__softboundcets_load_bound_shadow_stack(i32 0)
  call void @__softboundcets_deallocate_shadow_stack_space()
  %cmp250 = icmp ne i8* %call249, null
  br i1 %cmp250, label %if.then279, label %lor.lhs.false251

lor.lhs.false251:                                 ; preds = %if.then247
  %156 = load i8** %input.addr, align 8
  %bitcast618 = bitcast i8** %input.addr to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast618, i8** %base.alloca619, i8** %bound.alloca620)
  %base.load621 = load i8** %base.alloca619
  %bound.load622 = load i8** %bound.alloca620
  %add.ptr252 = getelementptr inbounds i8* %156, i64 6
  call void @__softboundcets_allocate_shadow_stack_space(i32 3)
  call void @__softboundcets_store_base_shadow_stack(i8* %base.load621, i32 1)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bound.load622, i32 1)
  call void @__softboundcets_store_base_shadow_stack(i8* getelementptr inbounds ([2 x i8]* @.str28, i32 0, i32 0), i32 2)
  call void @__softboundcets_store_bound_shadow_stack(i8* getelementptr inbounds ([2 x i8]* @.str28, i32 1, i32 0), i32 2)
  %call253 = call i8* @softboundcets_strstr(i8* %add.ptr252, i8* getelementptr inbounds ([2 x i8]* @.str28, i32 0, i32 0)) #6
  %157 = call i8* @__softboundcets_load_base_shadow_stack(i32 0)
  %158 = call i8* @__softboundcets_load_bound_shadow_stack(i32 0)
  call void @__softboundcets_deallocate_shadow_stack_space()
  %cmp254 = icmp eq i8* %call253, null
  br i1 %cmp254, label %land.lhs.true255, label %if.else295

land.lhs.true255:                                 ; preds = %lor.lhs.false251
  %159 = load i8** %input.addr, align 8
  %bitcast643 = bitcast i8** %input.addr to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast643, i8** %base.alloca644, i8** %bound.alloca645)
  %base.load646 = load i8** %base.alloca644
  %bound.load647 = load i8** %bound.alloca645
  %add.ptr256 = getelementptr inbounds i8* %159, i64 6
  call void @__softboundcets_allocate_shadow_stack_space(i32 3)
  call void @__softboundcets_store_base_shadow_stack(i8* %base.load646, i32 1)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bound.load647, i32 1)
  call void @__softboundcets_store_base_shadow_stack(i8* getelementptr inbounds ([2 x i8]* @.str2950, i32 0, i32 0), i32 2)
  call void @__softboundcets_store_bound_shadow_stack(i8* getelementptr inbounds ([2 x i8]* @.str2950, i32 1, i32 0), i32 2)
  %call257 = call i8* @softboundcets_strstr(i8* %add.ptr256, i8* getelementptr inbounds ([2 x i8]* @.str2950, i32 0, i32 0)) #6
  %160 = call i8* @__softboundcets_load_base_shadow_stack(i32 0)
  %161 = call i8* @__softboundcets_load_bound_shadow_stack(i32 0)
  call void @__softboundcets_deallocate_shadow_stack_space()
  %cmp258 = icmp eq i8* %call257, null
  br i1 %cmp258, label %land.lhs.true259, label %if.else295

land.lhs.true259:                                 ; preds = %land.lhs.true255
  %162 = load i8** %input.addr, align 8
  %bitcast678 = bitcast i8** %input.addr to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast678, i8** %base.alloca679, i8** %bound.alloca680)
  %base.load681 = load i8** %base.alloca679
  %bound.load682 = load i8** %bound.alloca680
  %add.ptr260 = getelementptr inbounds i8* %162, i64 6
  call void @__softboundcets_allocate_shadow_stack_space(i32 3)
  call void @__softboundcets_store_base_shadow_stack(i8* %base.load681, i32 1)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bound.load682, i32 1)
  call void @__softboundcets_store_base_shadow_stack(i8* getelementptr inbounds ([2 x i8]* @.str30, i32 0, i32 0), i32 2)
  call void @__softboundcets_store_bound_shadow_stack(i8* getelementptr inbounds ([2 x i8]* @.str30, i32 1, i32 0), i32 2)
  %call261 = call i8* @softboundcets_strstr(i8* %add.ptr260, i8* getelementptr inbounds ([2 x i8]* @.str30, i32 0, i32 0)) #6
  %163 = call i8* @__softboundcets_load_base_shadow_stack(i32 0)
  %164 = call i8* @__softboundcets_load_bound_shadow_stack(i32 0)
  call void @__softboundcets_deallocate_shadow_stack_space()
  %cmp262 = icmp eq i8* %call261, null
  br i1 %cmp262, label %land.lhs.true263, label %if.else295

land.lhs.true263:                                 ; preds = %land.lhs.true259
  %165 = load i8** %input.addr, align 8
  %bitcast713 = bitcast i8** %input.addr to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast713, i8** %base.alloca714, i8** %bound.alloca715)
  %base.load716 = load i8** %base.alloca714
  %bound.load717 = load i8** %bound.alloca715
  %add.ptr264 = getelementptr inbounds i8* %165, i64 6
  call void @__softboundcets_allocate_shadow_stack_space(i32 3)
  call void @__softboundcets_store_base_shadow_stack(i8* %base.load716, i32 1)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bound.load717, i32 1)
  call void @__softboundcets_store_base_shadow_stack(i8* getelementptr inbounds ([2 x i8]* @.str31, i32 0, i32 0), i32 2)
  call void @__softboundcets_store_bound_shadow_stack(i8* getelementptr inbounds ([2 x i8]* @.str31, i32 1, i32 0), i32 2)
  %call265 = call i8* @softboundcets_strstr(i8* %add.ptr264, i8* getelementptr inbounds ([2 x i8]* @.str31, i32 0, i32 0)) #6
  %166 = call i8* @__softboundcets_load_base_shadow_stack(i32 0)
  %167 = call i8* @__softboundcets_load_bound_shadow_stack(i32 0)
  call void @__softboundcets_deallocate_shadow_stack_space()
  %cmp266 = icmp eq i8* %call265, null
  br i1 %cmp266, label %land.lhs.true267, label %if.else295

land.lhs.true267:                                 ; preds = %land.lhs.true263
  %168 = load i8** %input.addr, align 8
  %bitcast743 = bitcast i8** %input.addr to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast743, i8** %base.alloca744, i8** %bound.alloca745)
  %base.load746 = load i8** %base.alloca744
  %bound.load747 = load i8** %bound.alloca745
  %add.ptr268 = getelementptr inbounds i8* %168, i64 6
  call void @__softboundcets_allocate_shadow_stack_space(i32 3)
  call void @__softboundcets_store_base_shadow_stack(i8* %base.load746, i32 1)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bound.load747, i32 1)
  call void @__softboundcets_store_base_shadow_stack(i8* getelementptr inbounds ([2 x i8]* @.str32, i32 0, i32 0), i32 2)
  call void @__softboundcets_store_bound_shadow_stack(i8* getelementptr inbounds ([2 x i8]* @.str32, i32 1, i32 0), i32 2)
  %call269 = call i8* @softboundcets_strstr(i8* %add.ptr268, i8* getelementptr inbounds ([2 x i8]* @.str32, i32 0, i32 0)) #6
  %169 = call i8* @__softboundcets_load_base_shadow_stack(i32 0)
  %170 = call i8* @__softboundcets_load_bound_shadow_stack(i32 0)
  call void @__softboundcets_deallocate_shadow_stack_space()
  %cmp270 = icmp eq i8* %call269, null
  br i1 %cmp270, label %land.lhs.true271, label %if.else295

land.lhs.true271:                                 ; preds = %land.lhs.true267
  %171 = load i8** %input.addr, align 8
  %bitcast768 = bitcast i8** %input.addr to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast768, i8** %base.alloca769, i8** %bound.alloca770)
  %base.load771 = load i8** %base.alloca769
  %bound.load772 = load i8** %bound.alloca770
  %add.ptr272 = getelementptr inbounds i8* %171, i64 6
  call void @__softboundcets_allocate_shadow_stack_space(i32 3)
  call void @__softboundcets_store_base_shadow_stack(i8* %base.load771, i32 1)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bound.load772, i32 1)
  call void @__softboundcets_store_base_shadow_stack(i8* getelementptr inbounds ([2 x i8]* @.str33, i32 0, i32 0), i32 2)
  call void @__softboundcets_store_bound_shadow_stack(i8* getelementptr inbounds ([2 x i8]* @.str33, i32 1, i32 0), i32 2)
  %call273 = call i8* @softboundcets_strstr(i8* %add.ptr272, i8* getelementptr inbounds ([2 x i8]* @.str33, i32 0, i32 0)) #6
  %172 = call i8* @__softboundcets_load_base_shadow_stack(i32 0)
  %173 = call i8* @__softboundcets_load_bound_shadow_stack(i32 0)
  call void @__softboundcets_deallocate_shadow_stack_space()
  %cmp274 = icmp eq i8* %call273, null
  br i1 %cmp274, label %land.lhs.true275, label %if.else295

land.lhs.true275:                                 ; preds = %land.lhs.true271
  %174 = load i8** %input.addr, align 8
  %bitcast793 = bitcast i8** %input.addr to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast793, i8** %base.alloca794, i8** %bound.alloca795)
  %base.load796 = load i8** %base.alloca794
  %bound.load797 = load i8** %bound.alloca795
  %add.ptr276 = getelementptr inbounds i8* %174, i64 6
  call void @__softboundcets_allocate_shadow_stack_space(i32 3)
  call void @__softboundcets_store_base_shadow_stack(i8* %base.load796, i32 1)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bound.load797, i32 1)
  call void @__softboundcets_store_base_shadow_stack(i8* getelementptr inbounds ([2 x i8]* @.str34, i32 0, i32 0), i32 2)
  call void @__softboundcets_store_bound_shadow_stack(i8* getelementptr inbounds ([2 x i8]* @.str34, i32 1, i32 0), i32 2)
  %call277 = call i8* @softboundcets_strstr(i8* %add.ptr276, i8* getelementptr inbounds ([2 x i8]* @.str34, i32 0, i32 0)) #6
  %175 = call i8* @__softboundcets_load_base_shadow_stack(i32 0)
  %176 = call i8* @__softboundcets_load_bound_shadow_stack(i32 0)
  call void @__softboundcets_deallocate_shadow_stack_space()
  %cmp278 = icmp eq i8* %call277, null
  br i1 %cmp278, label %if.then279, label %if.else295

if.then279:                                       ; preds = %land.lhs.true275, %if.then247
  %177 = load i32* @comp_color, align 4
  %cmp280 = icmp eq i32 %177, 1
  br i1 %cmp280, label %if.then281, label %if.else287

if.then281:                                       ; preds = %if.then279
  %178 = load i32* getelementptr inbounds ([13 x i32]* @hand_value, i32 0, i64 2), align 4
  %sub282 = sub nsw i32 %178, 20
  store i32 %sub282, i32* getelementptr inbounds ([13 x i32]* @hand_value, i32 0, i64 2), align 4
  %179 = load i32* getelementptr inbounds ([13 x i32]* @hand_value, i32 0, i64 4), align 4
  %sub283 = sub nsw i32 %179, 50
  store i32 %sub283, i32* getelementptr inbounds ([13 x i32]* @hand_value, i32 0, i64 4), align 4
  %180 = load i32* getelementptr inbounds ([13 x i32]* @hand_value, i32 0, i64 12), align 4
  %sub284 = sub nsw i32 %180, 50
  store i32 %sub284, i32* getelementptr inbounds ([13 x i32]* @hand_value, i32 0, i64 12), align 4
  %181 = load i32* getelementptr inbounds ([13 x i32]* @hand_value, i32 0, i64 8), align 4
  %sub285 = sub nsw i32 %181, 50
  store i32 %sub285, i32* getelementptr inbounds ([13 x i32]* @hand_value, i32 0, i64 8), align 4
  %182 = load i32* getelementptr inbounds ([13 x i32]* @hand_value, i32 0, i64 10), align 4
  %sub286 = sub nsw i32 %182, 100
  store i32 %sub286, i32* getelementptr inbounds ([13 x i32]* @hand_value, i32 0, i64 10), align 4
  br label %if.end293

if.else287:                                       ; preds = %if.then279
  %183 = load i32* getelementptr inbounds ([13 x i32]* @hand_value, i32 0, i64 1), align 4
  %add288 = add nsw i32 %183, 20
  store i32 %add288, i32* getelementptr inbounds ([13 x i32]* @hand_value, i32 0, i64 1), align 4
  %184 = load i32* getelementptr inbounds ([13 x i32]* @hand_value, i32 0, i64 3), align 4
  %add289 = add nsw i32 %184, 50
  store i32 %add289, i32* getelementptr inbounds ([13 x i32]* @hand_value, i32 0, i64 3), align 4
  %185 = load i32* getelementptr inbounds ([13 x i32]* @hand_value, i32 0, i64 11), align 4
  %add290 = add nsw i32 %185, 50
  store i32 %add290, i32* getelementptr inbounds ([13 x i32]* @hand_value, i32 0, i64 11), align 4
  %186 = load i32* getelementptr inbounds ([13 x i32]* @hand_value, i32 0, i64 7), align 4
  %add291 = add nsw i32 %186, 50
  store i32 %add291, i32* getelementptr inbounds ([13 x i32]* @hand_value, i32 0, i64 7), align 4
  %187 = load i32* getelementptr inbounds ([13 x i32]* @hand_value, i32 0, i64 9), align 4
  %add292 = add nsw i32 %187, 100
  store i32 %add292, i32* getelementptr inbounds ([13 x i32]* @hand_value, i32 0, i64 9), align 4
  br label %if.end293

if.end293:                                        ; preds = %if.else287, %if.then281
  %call294 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([34 x i8]* @.str49, i32 0, i32 0))
  br label %if.end320

if.else295:                                       ; preds = %land.lhs.true275, %land.lhs.true271, %land.lhs.true267, %land.lhs.true263, %land.lhs.true259, %land.lhs.true255, %lor.lhs.false251
  %188 = load i8** %input.addr, align 8
  %bitcast648 = bitcast i8** %input.addr to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast648, i8** %base.alloca649, i8** %bound.alloca650)
  %base.load651 = load i8** %base.alloca649
  %bound.load652 = load i8** %bound.alloca650
  %add.ptr296 = getelementptr inbounds i8* %188, i64 6
  call void @__softboundcets_allocate_shadow_stack_space(i32 3)
  call void @__softboundcets_store_base_shadow_stack(i8* %base.load651, i32 1)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bound.load652, i32 1)
  call void @__softboundcets_store_base_shadow_stack(i8* getelementptr inbounds ([4 x i8]* @.str50, i32 0, i32 0), i32 2)
  call void @__softboundcets_store_bound_shadow_stack(i8* getelementptr inbounds ([4 x i8]* @.str50, i32 1, i32 0), i32 2)
  %call297 = call i8* @softboundcets_strstr(i8* %add.ptr296, i8* getelementptr inbounds ([4 x i8]* @.str50, i32 0, i32 0)) #6
  %189 = call i8* @__softboundcets_load_base_shadow_stack(i32 0)
  %190 = call i8* @__softboundcets_load_bound_shadow_stack(i32 0)
  call void @__softboundcets_deallocate_shadow_stack_space()
  %cmp298 = icmp ne i8* %call297, null
  br i1 %cmp298, label %if.then299, label %if.else302

if.then299:                                       ; preds = %if.else295
  store i32 50000, i32* %change, align 4
  %arraydecay300 = getelementptr inbounds [80 x i8]* %howmuch, i32 0, i32 0
  call void @__softboundcets_allocate_shadow_stack_space(i32 3)
  call void @__softboundcets_store_base_shadow_stack(i8* %bitcast529, i32 1)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bitcast531, i32 1)
  call void @__softboundcets_store_base_shadow_stack(i8* getelementptr inbounds ([53 x i8]* @.str51, i32 0, i32 0), i32 2)
  call void @__softboundcets_store_bound_shadow_stack(i8* getelementptr inbounds ([53 x i8]* @.str51, i32 1, i32 0), i32 2)
  %call301 = call i8* @softboundcets_strcpy(i8* %arraydecay300, i8* getelementptr inbounds ([53 x i8]* @.str51, i32 0, i32 0)) #1
  %191 = call i8* @__softboundcets_load_base_shadow_stack(i32 0)
  %192 = call i8* @__softboundcets_load_bound_shadow_stack(i32 0)
  call void @__softboundcets_deallocate_shadow_stack_space()
  br label %if.end319

if.else302:                                       ; preds = %if.else295
  %193 = load i8** %input.addr, align 8
  %bitcast683 = bitcast i8** %input.addr to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast683, i8** %base.alloca684, i8** %bound.alloca685)
  %base.load686 = load i8** %base.alloca684
  %bound.load687 = load i8** %bound.alloca685
  %add.ptr303 = getelementptr inbounds i8* %193, i64 6
  call void @__softboundcets_allocate_shadow_stack_space(i32 3)
  call void @__softboundcets_store_base_shadow_stack(i8* %base.load686, i32 1)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bound.load687, i32 1)
  call void @__softboundcets_store_base_shadow_stack(i8* getelementptr inbounds ([3 x i8]* @.str52, i32 0, i32 0), i32 2)
  call void @__softboundcets_store_bound_shadow_stack(i8* getelementptr inbounds ([3 x i8]* @.str52, i32 1, i32 0), i32 2)
  %call304 = call i8* @softboundcets_strstr(i8* %add.ptr303, i8* getelementptr inbounds ([3 x i8]* @.str52, i32 0, i32 0)) #6
  %194 = call i8* @__softboundcets_load_base_shadow_stack(i32 0)
  %195 = call i8* @__softboundcets_load_bound_shadow_stack(i32 0)
  call void @__softboundcets_deallocate_shadow_stack_space()
  %cmp305 = icmp ne i8* %call304, null
  br i1 %cmp305, label %if.then306, label %if.else309

if.then306:                                       ; preds = %if.else302
  store i32 1000, i32* %change, align 4
  %arraydecay307 = getelementptr inbounds [80 x i8]* %howmuch, i32 0, i32 0
  call void @__softboundcets_allocate_shadow_stack_space(i32 3)
  call void @__softboundcets_store_base_shadow_stack(i8* %bitcast529, i32 1)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bitcast531, i32 1)
  call void @__softboundcets_store_base_shadow_stack(i8* getelementptr inbounds ([52 x i8]* @.str53, i32 0, i32 0), i32 2)
  call void @__softboundcets_store_bound_shadow_stack(i8* getelementptr inbounds ([52 x i8]* @.str53, i32 1, i32 0), i32 2)
  %call308 = call i8* @softboundcets_strcpy(i8* %arraydecay307, i8* getelementptr inbounds ([52 x i8]* @.str53, i32 0, i32 0)) #1
  %196 = call i8* @__softboundcets_load_base_shadow_stack(i32 0)
  %197 = call i8* @__softboundcets_load_bound_shadow_stack(i32 0)
  call void @__softboundcets_deallocate_shadow_stack_space()
  br label %if.end318

if.else309:                                       ; preds = %if.else302
  %198 = load i8** %input.addr, align 8
  %bitcast718 = bitcast i8** %input.addr to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast718, i8** %base.alloca719, i8** %bound.alloca720)
  %base.load721 = load i8** %base.alloca719
  %bound.load722 = load i8** %bound.alloca720
  %add.ptr310 = getelementptr inbounds i8* %198, i64 6
  call void @__softboundcets_allocate_shadow_stack_space(i32 3)
  call void @__softboundcets_store_base_shadow_stack(i8* %base.load721, i32 1)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bound.load722, i32 1)
  call void @__softboundcets_store_base_shadow_stack(i8* getelementptr inbounds ([2 x i8]* @.str48, i32 0, i32 0), i32 2)
  call void @__softboundcets_store_bound_shadow_stack(i8* getelementptr inbounds ([2 x i8]* @.str48, i32 1, i32 0), i32 2)
  %call311 = call i8* @softboundcets_strstr(i8* %add.ptr310, i8* getelementptr inbounds ([2 x i8]* @.str48, i32 0, i32 0)) #6
  %199 = call i8* @__softboundcets_load_base_shadow_stack(i32 0)
  %200 = call i8* @__softboundcets_load_bound_shadow_stack(i32 0)
  call void @__softboundcets_deallocate_shadow_stack_space()
  %cmp312 = icmp ne i8* %call311, null
  br i1 %cmp312, label %if.then313, label %if.else316

if.then313:                                       ; preds = %if.else309
  store i32 150, i32* %change, align 4
  %arraydecay314 = getelementptr inbounds [80 x i8]* %howmuch, i32 0, i32 0
  call void @__softboundcets_allocate_shadow_stack_space(i32 3)
  call void @__softboundcets_store_base_shadow_stack(i8* %bitcast529, i32 1)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bitcast531, i32 1)
  call void @__softboundcets_store_base_shadow_stack(i8* getelementptr inbounds ([47 x i8]* @.str54, i32 0, i32 0), i32 2)
  call void @__softboundcets_store_bound_shadow_stack(i8* getelementptr inbounds ([47 x i8]* @.str54, i32 1, i32 0), i32 2)
  %call315 = call i8* @softboundcets_strcpy(i8* %arraydecay314, i8* getelementptr inbounds ([47 x i8]* @.str54, i32 0, i32 0)) #1
  %201 = call i8* @__softboundcets_load_base_shadow_stack(i32 0)
  %202 = call i8* @__softboundcets_load_bound_shadow_stack(i32 0)
  call void @__softboundcets_deallocate_shadow_stack_space()
  br label %if.end317

if.else316:                                       ; preds = %if.else309
  store i32 0, i32* null, align 4
  br label %if.end317

if.end317:                                        ; preds = %if.else316, %if.then313
  br label %if.end318

if.end318:                                        ; preds = %if.end317, %if.then306
  br label %if.end319

if.end319:                                        ; preds = %if.end318, %if.then299
  br label %if.end320

if.end320:                                        ; preds = %if.end319, %if.end293
  %203 = load i8** %input.addr, align 8
  %bitcast708 = bitcast i8** %input.addr to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast708, i8** %base.alloca709, i8** %bound.alloca710)
  %base.load711 = load i8** %base.alloca709
  %bound.load712 = load i8** %bound.alloca710
  %add.ptr321 = getelementptr inbounds i8* %203, i64 6
  call void @__softboundcets_allocate_shadow_stack_space(i32 3)
  call void @__softboundcets_store_base_shadow_stack(i8* %base.load711, i32 1)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bound.load712, i32 1)
  call void @__softboundcets_store_base_shadow_stack(i8* getelementptr inbounds ([2 x i8]* @.str28, i32 0, i32 0), i32 2)
  call void @__softboundcets_store_bound_shadow_stack(i8* getelementptr inbounds ([2 x i8]* @.str28, i32 1, i32 0), i32 2)
  %call322 = call i8* @softboundcets_strstr(i8* %add.ptr321, i8* getelementptr inbounds ([2 x i8]* @.str28, i32 0, i32 0)) #6
  %204 = call i8* @__softboundcets_load_base_shadow_stack(i32 0)
  %205 = call i8* @__softboundcets_load_bound_shadow_stack(i32 0)
  call void @__softboundcets_deallocate_shadow_stack_space()
  %cmp323 = icmp ne i8* %call322, null
  br i1 %cmp323, label %if.then324, label %if.end333

if.then324:                                       ; preds = %if.end320
  %206 = load i32* @comp_color, align 4
  %cmp325 = icmp eq i32 %206, 1
  br i1 %cmp325, label %if.then326, label %if.else328

if.then326:                                       ; preds = %if.then324
  %207 = load i32* getelementptr inbounds ([13 x i32]* @std_hand_value, i32 0, i64 4), align 4
  %208 = load i32* %change, align 4
  %sub327 = sub nsw i32 %207, %208
  store i32 %sub327, i32* getelementptr inbounds ([13 x i32]* @hand_value, i32 0, i64 4), align 4
  br label %if.end330

if.else328:                                       ; preds = %if.then324
  %209 = load i32* getelementptr inbounds ([13 x i32]* @std_hand_value, i32 0, i64 3), align 4
  %210 = load i32* %change, align 4
  %add329 = add nsw i32 %209, %210
  store i32 %add329, i32* getelementptr inbounds ([13 x i32]* @hand_value, i32 0, i64 3), align 4
  br label %if.end330

if.end330:                                        ; preds = %if.else328, %if.then326
  %arraydecay331 = getelementptr inbounds [80 x i8]* %howmuch, i32 0, i32 0
  %call332 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([29 x i8]* @.str41, i32 0, i32 0), i8* %arraydecay331)
  br label %if.end333

if.end333:                                        ; preds = %if.end330, %if.end320
  %211 = load i8** %input.addr, align 8
  %bitcast738 = bitcast i8** %input.addr to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast738, i8** %base.alloca739, i8** %bound.alloca740)
  %base.load741 = load i8** %base.alloca739
  %bound.load742 = load i8** %bound.alloca740
  %add.ptr334 = getelementptr inbounds i8* %211, i64 6
  call void @__softboundcets_allocate_shadow_stack_space(i32 3)
  call void @__softboundcets_store_base_shadow_stack(i8* %base.load741, i32 1)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bound.load742, i32 1)
  call void @__softboundcets_store_base_shadow_stack(i8* getelementptr inbounds ([2 x i8]* @.str2950, i32 0, i32 0), i32 2)
  call void @__softboundcets_store_bound_shadow_stack(i8* getelementptr inbounds ([2 x i8]* @.str2950, i32 1, i32 0), i32 2)
  %call335 = call i8* @softboundcets_strstr(i8* %add.ptr334, i8* getelementptr inbounds ([2 x i8]* @.str2950, i32 0, i32 0)) #6
  %212 = call i8* @__softboundcets_load_base_shadow_stack(i32 0)
  %213 = call i8* @__softboundcets_load_bound_shadow_stack(i32 0)
  call void @__softboundcets_deallocate_shadow_stack_space()
  %cmp336 = icmp ne i8* %call335, null
  br i1 %cmp336, label %if.then337, label %if.end352

if.then337:                                       ; preds = %if.end333
  %214 = load i32* @comp_color, align 4
  %cmp338 = icmp eq i32 %214, 1
  br i1 %cmp338, label %if.then339, label %if.else341

if.then339:                                       ; preds = %if.then337
  %215 = load i32* getelementptr inbounds ([13 x i32]* @std_hand_value, i32 0, i64 12), align 4
  %216 = load i32* %change, align 4
  %sub340 = sub nsw i32 %215, %216
  store i32 %sub340, i32* getelementptr inbounds ([13 x i32]* @hand_value, i32 0, i64 12), align 4
  br label %if.end343

if.else341:                                       ; preds = %if.then337
  %217 = load i32* getelementptr inbounds ([13 x i32]* @std_hand_value, i32 0, i64 11), align 4
  %218 = load i32* %change, align 4
  %add342 = add nsw i32 %217, %218
  store i32 %add342, i32* getelementptr inbounds ([13 x i32]* @hand_value, i32 0, i64 11), align 4
  br label %if.end343

if.end343:                                        ; preds = %if.else341, %if.then339
  %219 = load i32* @comp_color, align 4
  %cmp344 = icmp eq i32 %219, 1
  br i1 %cmp344, label %if.then345, label %if.else347

if.then345:                                       ; preds = %if.end343
  %220 = load i32* getelementptr inbounds ([13 x i32]* @std_hand_value, i32 0, i64 10), align 4
  %221 = load i32* %change, align 4
  %sub346 = sub nsw i32 %220, %221
  store i32 %sub346, i32* getelementptr inbounds ([13 x i32]* @hand_value, i32 0, i64 10), align 4
  br label %if.end349

if.else347:                                       ; preds = %if.end343
  %222 = load i32* getelementptr inbounds ([13 x i32]* @std_hand_value, i32 0, i64 9), align 4
  %223 = load i32* %change, align 4
  %add348 = add nsw i32 %222, %223
  store i32 %add348, i32* getelementptr inbounds ([13 x i32]* @hand_value, i32 0, i64 9), align 4
  br label %if.end349

if.end349:                                        ; preds = %if.else347, %if.then345
  %arraydecay350 = getelementptr inbounds [80 x i8]* %howmuch, i32 0, i32 0
  %call351 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([29 x i8]* @.str42, i32 0, i32 0), i8* %arraydecay350)
  br label %if.end352

if.end352:                                        ; preds = %if.end349, %if.end333
  %224 = load i8** %input.addr, align 8
  %bitcast763 = bitcast i8** %input.addr to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast763, i8** %base.alloca764, i8** %bound.alloca765)
  %base.load766 = load i8** %base.alloca764
  %bound.load767 = load i8** %bound.alloca765
  %add.ptr353 = getelementptr inbounds i8* %224, i64 6
  call void @__softboundcets_allocate_shadow_stack_space(i32 3)
  call void @__softboundcets_store_base_shadow_stack(i8* %base.load766, i32 1)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bound.load767, i32 1)
  call void @__softboundcets_store_base_shadow_stack(i8* getelementptr inbounds ([2 x i8]* @.str31, i32 0, i32 0), i32 2)
  call void @__softboundcets_store_bound_shadow_stack(i8* getelementptr inbounds ([2 x i8]* @.str31, i32 1, i32 0), i32 2)
  %call354 = call i8* @softboundcets_strstr(i8* %add.ptr353, i8* getelementptr inbounds ([2 x i8]* @.str31, i32 0, i32 0)) #6
  %225 = call i8* @__softboundcets_load_base_shadow_stack(i32 0)
  %226 = call i8* @__softboundcets_load_bound_shadow_stack(i32 0)
  call void @__softboundcets_deallocate_shadow_stack_space()
  %cmp355 = icmp ne i8* %call354, null
  br i1 %cmp355, label %if.then356, label %if.end371

if.then356:                                       ; preds = %if.end352
  %227 = load i32* @comp_color, align 4
  %cmp357 = icmp eq i32 %227, 1
  br i1 %cmp357, label %if.then358, label %if.else360

if.then358:                                       ; preds = %if.then356
  %228 = load i32* getelementptr inbounds ([13 x i32]* @std_hand_value, i32 0, i64 8), align 4
  %229 = load i32* %change, align 4
  %sub359 = sub nsw i32 %228, %229
  store i32 %sub359, i32* getelementptr inbounds ([13 x i32]* @hand_value, i32 0, i64 8), align 4
  br label %if.end362

if.else360:                                       ; preds = %if.then356
  %230 = load i32* getelementptr inbounds ([13 x i32]* @std_hand_value, i32 0, i64 7), align 4
  %231 = load i32* %change, align 4
  %add361 = add nsw i32 %230, %231
  store i32 %add361, i32* getelementptr inbounds ([13 x i32]* @hand_value, i32 0, i64 7), align 4
  br label %if.end362

if.end362:                                        ; preds = %if.else360, %if.then358
  %232 = load i32* @comp_color, align 4
  %cmp363 = icmp eq i32 %232, 1
  br i1 %cmp363, label %if.then364, label %if.else366

if.then364:                                       ; preds = %if.end362
  %233 = load i32* getelementptr inbounds ([13 x i32]* @std_hand_value, i32 0, i64 10), align 4
  %234 = load i32* %change, align 4
  %sub365 = sub nsw i32 %233, %234
  store i32 %sub365, i32* getelementptr inbounds ([13 x i32]* @hand_value, i32 0, i64 10), align 4
  br label %if.end368

if.else366:                                       ; preds = %if.end362
  %235 = load i32* getelementptr inbounds ([13 x i32]* @std_hand_value, i32 0, i64 9), align 4
  %236 = load i32* %change, align 4
  %add367 = add nsw i32 %235, %236
  store i32 %add367, i32* getelementptr inbounds ([13 x i32]* @hand_value, i32 0, i64 9), align 4
  br label %if.end368

if.end368:                                        ; preds = %if.else366, %if.then364
  %arraydecay369 = getelementptr inbounds [80 x i8]* %howmuch, i32 0, i32 0
  %call370 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([27 x i8]* @.str43, i32 0, i32 0), i8* %arraydecay369)
  br label %if.end371

if.end371:                                        ; preds = %if.end368, %if.end352
  %237 = load i8** %input.addr, align 8
  %bitcast788 = bitcast i8** %input.addr to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast788, i8** %base.alloca789, i8** %bound.alloca790)
  %base.load791 = load i8** %base.alloca789
  %bound.load792 = load i8** %bound.alloca790
  %add.ptr372 = getelementptr inbounds i8* %237, i64 6
  call void @__softboundcets_allocate_shadow_stack_space(i32 3)
  call void @__softboundcets_store_base_shadow_stack(i8* %base.load791, i32 1)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bound.load792, i32 1)
  call void @__softboundcets_store_base_shadow_stack(i8* getelementptr inbounds ([2 x i8]* @.str32, i32 0, i32 0), i32 2)
  call void @__softboundcets_store_bound_shadow_stack(i8* getelementptr inbounds ([2 x i8]* @.str32, i32 1, i32 0), i32 2)
  %call373 = call i8* @softboundcets_strstr(i8* %add.ptr372, i8* getelementptr inbounds ([2 x i8]* @.str32, i32 0, i32 0)) #6
  %238 = call i8* @__softboundcets_load_base_shadow_stack(i32 0)
  %239 = call i8* @__softboundcets_load_bound_shadow_stack(i32 0)
  call void @__softboundcets_deallocate_shadow_stack_space()
  %cmp374 = icmp ne i8* %call373, null
  br i1 %cmp374, label %if.then375, label %if.end384

if.then375:                                       ; preds = %if.end371
  %240 = load i32* @comp_color, align 4
  %cmp376 = icmp eq i32 %240, 1
  br i1 %cmp376, label %if.then377, label %if.else379

if.then377:                                       ; preds = %if.then375
  %241 = load i32* getelementptr inbounds ([13 x i32]* @std_hand_value, i32 0, i64 10), align 4
  %242 = load i32* %change, align 4
  %sub378 = sub nsw i32 %241, %242
  store i32 %sub378, i32* getelementptr inbounds ([13 x i32]* @hand_value, i32 0, i64 10), align 4
  br label %if.end381

if.else379:                                       ; preds = %if.then375
  %243 = load i32* getelementptr inbounds ([13 x i32]* @std_hand_value, i32 0, i64 9), align 4
  %244 = load i32* %change, align 4
  %add380 = add nsw i32 %243, %244
  store i32 %add380, i32* getelementptr inbounds ([13 x i32]* @hand_value, i32 0, i64 9), align 4
  br label %if.end381

if.end381:                                        ; preds = %if.else379, %if.then377
  %arraydecay382 = getelementptr inbounds [80 x i8]* %howmuch, i32 0, i32 0
  %call383 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([28 x i8]* @.str44, i32 0, i32 0), i8* %arraydecay382)
  br label %if.end384

if.end384:                                        ; preds = %if.end381, %if.end371
  %245 = load i8** %input.addr, align 8
  %bitcast808 = bitcast i8** %input.addr to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast808, i8** %base.alloca809, i8** %bound.alloca810)
  %base.load811 = load i8** %base.alloca809
  %bound.load812 = load i8** %bound.alloca810
  %add.ptr385 = getelementptr inbounds i8* %245, i64 6
  call void @__softboundcets_allocate_shadow_stack_space(i32 3)
  call void @__softboundcets_store_base_shadow_stack(i8* %base.load811, i32 1)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bound.load812, i32 1)
  call void @__softboundcets_store_base_shadow_stack(i8* getelementptr inbounds ([2 x i8]* @.str30, i32 0, i32 0), i32 2)
  call void @__softboundcets_store_bound_shadow_stack(i8* getelementptr inbounds ([2 x i8]* @.str30, i32 1, i32 0), i32 2)
  %call386 = call i8* @softboundcets_strstr(i8* %add.ptr385, i8* getelementptr inbounds ([2 x i8]* @.str30, i32 0, i32 0)) #6
  %246 = call i8* @__softboundcets_load_base_shadow_stack(i32 0)
  %247 = call i8* @__softboundcets_load_bound_shadow_stack(i32 0)
  call void @__softboundcets_deallocate_shadow_stack_space()
  %cmp387 = icmp ne i8* %call386, null
  br i1 %cmp387, label %if.then388, label %if.end405

if.then388:                                       ; preds = %if.end384
  %248 = load i32* @comp_color, align 4
  %cmp389 = icmp eq i32 %248, 1
  br i1 %cmp389, label %if.then390, label %if.else392

if.then390:                                       ; preds = %if.then388
  %249 = load i32* getelementptr inbounds ([13 x i32]* @std_hand_value, i32 0, i64 2), align 4
  %250 = load i32* %change, align 4
  %sub391 = sub nsw i32 %249, %250
  store i32 %sub391, i32* getelementptr inbounds ([13 x i32]* @hand_value, i32 0, i64 2), align 4
  br label %if.end394

if.else392:                                       ; preds = %if.then388
  %251 = load i32* getelementptr inbounds ([13 x i32]* @std_hand_value, i32 0, i64 1), align 4
  %252 = load i32* %change, align 4
  %add393 = add nsw i32 %251, %252
  store i32 %add393, i32* getelementptr inbounds ([13 x i32]* @hand_value, i32 0, i64 1), align 4
  br label %if.end394

if.end394:                                        ; preds = %if.else392, %if.then390
  %253 = load i32* @comp_color, align 4
  %cmp395 = icmp eq i32 %253, 1
  br i1 %cmp395, label %if.then396, label %if.else399

if.then396:                                       ; preds = %if.end394
  %254 = load i32* getelementptr inbounds ([13 x i32]* @std_hand_value, i32 0, i64 10), align 4
  %255 = load i32* %change, align 4
  %sub397 = sub nsw i32 %254, %255
  store i32 %sub397, i32* getelementptr inbounds ([13 x i32]* @hand_value, i32 0, i64 10), align 4
  %256 = load i32* getelementptr inbounds ([13 x i32]* @std_hand_value, i32 0, i64 12), align 4
  %257 = load i32* %change, align 4
  %sub398 = sub nsw i32 %256, %257
  store i32 %sub398, i32* getelementptr inbounds ([13 x i32]* @hand_value, i32 0, i64 12), align 4
  br label %if.end402

if.else399:                                       ; preds = %if.end394
  %258 = load i32* getelementptr inbounds ([13 x i32]* @std_hand_value, i32 0, i64 9), align 4
  %259 = load i32* %change, align 4
  %add400 = add nsw i32 %258, %259
  store i32 %add400, i32* getelementptr inbounds ([13 x i32]* @hand_value, i32 0, i64 9), align 4
  %260 = load i32* getelementptr inbounds ([13 x i32]* @std_hand_value, i32 0, i64 11), align 4
  %261 = load i32* %change, align 4
  %add401 = add nsw i32 %260, %261
  store i32 %add401, i32* getelementptr inbounds ([13 x i32]* @hand_value, i32 0, i64 11), align 4
  br label %if.end402

if.end402:                                        ; preds = %if.else399, %if.then396
  %arraydecay403 = getelementptr inbounds [80 x i8]* %howmuch, i32 0, i32 0
  %call404 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([27 x i8]* @.str45, i32 0, i32 0), i8* %arraydecay403)
  br label %if.end405

if.end405:                                        ; preds = %if.end402, %if.end384
  %262 = load i8** %input.addr, align 8
  %bitcast823 = bitcast i8** %input.addr to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast823, i8** %base.alloca824, i8** %bound.alloca825)
  %base.load826 = load i8** %base.alloca824
  %bound.load827 = load i8** %bound.alloca825
  %add.ptr406 = getelementptr inbounds i8* %262, i64 6
  call void @__softboundcets_allocate_shadow_stack_space(i32 3)
  call void @__softboundcets_store_base_shadow_stack(i8* %base.load826, i32 1)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bound.load827, i32 1)
  call void @__softboundcets_store_base_shadow_stack(i8* getelementptr inbounds ([2 x i8]* @.str33, i32 0, i32 0), i32 2)
  call void @__softboundcets_store_bound_shadow_stack(i8* getelementptr inbounds ([2 x i8]* @.str33, i32 1, i32 0), i32 2)
  %call407 = call i8* @softboundcets_strstr(i8* %add.ptr406, i8* getelementptr inbounds ([2 x i8]* @.str33, i32 0, i32 0)) #6
  %263 = call i8* @__softboundcets_load_base_shadow_stack(i32 0)
  %264 = call i8* @__softboundcets_load_bound_shadow_stack(i32 0)
  call void @__softboundcets_deallocate_shadow_stack_space()
  %cmp408 = icmp ne i8* %call407, null
  br i1 %cmp408, label %if.then409, label %if.end422

if.then409:                                       ; preds = %if.end405
  %265 = load i32* @comp_color, align 4
  %cmp410 = icmp eq i32 %265, 1
  br i1 %cmp410, label %if.then411, label %if.else415

if.then411:                                       ; preds = %if.then409
  %266 = load i32* getelementptr inbounds ([13 x i32]* @std_hand_value, i32 0, i64 2), align 4
  %267 = load i32* %change, align 4
  %sub412 = sub nsw i32 %266, %267
  store i32 %sub412, i32* getelementptr inbounds ([13 x i32]* @hand_value, i32 0, i64 2), align 4
  %268 = load i32* getelementptr inbounds ([13 x i32]* @std_hand_value, i32 0, i64 12), align 4
  %269 = load i32* %change, align 4
  %sub413 = sub nsw i32 %268, %269
  store i32 %sub413, i32* getelementptr inbounds ([13 x i32]* @hand_value, i32 0, i64 12), align 4
  %270 = load i32* getelementptr inbounds ([13 x i32]* @std_hand_value, i32 0, i64 10), align 4
  %271 = load i32* %change, align 4
  %sub414 = sub nsw i32 %270, %271
  store i32 %sub414, i32* getelementptr inbounds ([13 x i32]* @hand_value, i32 0, i64 10), align 4
  br label %if.end419

if.else415:                                       ; preds = %if.then409
  %272 = load i32* getelementptr inbounds ([13 x i32]* @std_hand_value, i32 0, i64 1), align 4
  %273 = load i32* %change, align 4
  %add416 = add nsw i32 %272, %273
  store i32 %add416, i32* getelementptr inbounds ([13 x i32]* @hand_value, i32 0, i64 1), align 4
  %274 = load i32* getelementptr inbounds ([13 x i32]* @std_hand_value, i32 0, i64 11), align 4
  %275 = load i32* %change, align 4
  %add417 = add nsw i32 %274, %275
  store i32 %add417, i32* getelementptr inbounds ([13 x i32]* @hand_value, i32 0, i64 11), align 4
  %276 = load i32* getelementptr inbounds ([13 x i32]* @std_hand_value, i32 0, i64 9), align 4
  %277 = load i32* %change, align 4
  %add418 = add nsw i32 %276, %277
  store i32 %add418, i32* getelementptr inbounds ([13 x i32]* @hand_value, i32 0, i64 9), align 4
  br label %if.end419

if.end419:                                        ; preds = %if.else415, %if.then411
  %arraydecay420 = getelementptr inbounds [80 x i8]* %howmuch, i32 0, i32 0
  %call421 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([31 x i8]* @.str46, i32 0, i32 0), i8* %arraydecay420)
  br label %if.end422

if.end422:                                        ; preds = %if.end419, %if.end405
  %278 = load i8** %input.addr, align 8
  %bitcast833 = bitcast i8** %input.addr to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast833, i8** %base.alloca834, i8** %bound.alloca835)
  %base.load836 = load i8** %base.alloca834
  %bound.load837 = load i8** %bound.alloca835
  %add.ptr423 = getelementptr inbounds i8* %278, i64 6
  call void @__softboundcets_allocate_shadow_stack_space(i32 3)
  call void @__softboundcets_store_base_shadow_stack(i8* %base.load836, i32 1)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bound.load837, i32 1)
  call void @__softboundcets_store_base_shadow_stack(i8* getelementptr inbounds ([2 x i8]* @.str34, i32 0, i32 0), i32 2)
  call void @__softboundcets_store_bound_shadow_stack(i8* getelementptr inbounds ([2 x i8]* @.str34, i32 1, i32 0), i32 2)
  %call424 = call i8* @softboundcets_strstr(i8* %add.ptr423, i8* getelementptr inbounds ([2 x i8]* @.str34, i32 0, i32 0)) #6
  %279 = call i8* @__softboundcets_load_base_shadow_stack(i32 0)
  %280 = call i8* @__softboundcets_load_bound_shadow_stack(i32 0)
  call void @__softboundcets_deallocate_shadow_stack_space()
  %cmp425 = icmp ne i8* %call424, null
  br i1 %cmp425, label %if.then426, label %if.end437

if.then426:                                       ; preds = %if.end422
  %281 = load i32* @comp_color, align 4
  %cmp427 = icmp eq i32 %281, 1
  br i1 %cmp427, label %if.then428, label %if.else431

if.then428:                                       ; preds = %if.then426
  %282 = load i32* getelementptr inbounds ([13 x i32]* @std_hand_value, i32 0, i64 8), align 4
  %283 = load i32* %change, align 4
  %sub429 = sub nsw i32 %282, %283
  store i32 %sub429, i32* getelementptr inbounds ([13 x i32]* @hand_value, i32 0, i64 8), align 4
  %284 = load i32* getelementptr inbounds ([13 x i32]* @std_hand_value, i32 0, i64 10), align 4
  %285 = load i32* %change, align 4
  %sub430 = sub nsw i32 %284, %285
  store i32 %sub430, i32* getelementptr inbounds ([13 x i32]* @hand_value, i32 0, i64 10), align 4
  br label %if.end434

if.else431:                                       ; preds = %if.then426
  %286 = load i32* getelementptr inbounds ([13 x i32]* @std_hand_value, i32 0, i64 7), align 4
  %287 = load i32* %change, align 4
  %add432 = add nsw i32 %286, %287
  store i32 %add432, i32* getelementptr inbounds ([13 x i32]* @hand_value, i32 0, i64 7), align 4
  %288 = load i32* getelementptr inbounds ([13 x i32]* @std_hand_value, i32 0, i64 9), align 4
  %289 = load i32* %change, align 4
  %add433 = add nsw i32 %288, %289
  store i32 %add433, i32* getelementptr inbounds ([13 x i32]* @hand_value, i32 0, i64 9), align 4
  br label %if.end434

if.end434:                                        ; preds = %if.else431, %if.then428
  %arraydecay435 = getelementptr inbounds [80 x i8]* %howmuch, i32 0, i32 0
  %call436 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([28 x i8]* @.str47, i32 0, i32 0), i8* %arraydecay435)
  br label %if.end437

if.end437:                                        ; preds = %if.end434, %if.end422
  br label %if.end514

if.else438:                                       ; preds = %if.else243
  %290 = load i8** %input.addr, align 8
  %bitcast593 = bitcast i8** %input.addr to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast593, i8** %base.alloca594, i8** %bound.alloca595)
  %base.load596 = load i8** %base.alloca594
  %bound.load597 = load i8** %bound.alloca595
  %add.ptr439 = getelementptr inbounds i8* %290, i64 6
  call void @__softboundcets_allocate_shadow_stack_space(i32 3)
  call void @__softboundcets_store_base_shadow_stack(i8* %base.load596, i32 1)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bound.load597, i32 1)
  call void @__softboundcets_store_base_shadow_stack(i8* getelementptr inbounds ([2 x i8]* @.str55, i32 0, i32 0), i32 2)
  call void @__softboundcets_store_bound_shadow_stack(i8* getelementptr inbounds ([2 x i8]* @.str55, i32 1, i32 0), i32 2)
  %call440 = call i32 @softboundcets_strncmp(i8* %add.ptr439, i8* getelementptr inbounds ([2 x i8]* @.str55, i32 0, i32 0), i64 1) #6
  call void @__softboundcets_deallocate_shadow_stack_space()
  %tobool441 = icmp ne i32 %call440, 0
  br i1 %tobool441, label %lor.lhs.false442, label %land.lhs.true458

lor.lhs.false442:                                 ; preds = %if.else438
  %291 = load i8** %input.addr, align 8
  %bitcast608 = bitcast i8** %input.addr to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast608, i8** %base.alloca609, i8** %bound.alloca610)
  %base.load611 = load i8** %base.alloca609
  %bound.load612 = load i8** %bound.alloca610
  %add.ptr443 = getelementptr inbounds i8* %291, i64 6
  call void @__softboundcets_allocate_shadow_stack_space(i32 3)
  call void @__softboundcets_store_base_shadow_stack(i8* %base.load611, i32 1)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bound.load612, i32 1)
  call void @__softboundcets_store_base_shadow_stack(i8* getelementptr inbounds ([16 x i8]* @.str56, i32 0, i32 0), i32 2)
  call void @__softboundcets_store_bound_shadow_stack(i8* getelementptr inbounds ([16 x i8]* @.str56, i32 1, i32 0), i32 2)
  %call444 = call i8* @softboundcets_strstr(i8* %add.ptr443, i8* getelementptr inbounds ([16 x i8]* @.str56, i32 0, i32 0)) #6
  %292 = call i8* @__softboundcets_load_base_shadow_stack(i32 0)
  %293 = call i8* @__softboundcets_load_bound_shadow_stack(i32 0)
  call void @__softboundcets_deallocate_shadow_stack_space()
  %cmp445 = icmp ne i8* %call444, null
  br i1 %cmp445, label %land.lhs.true458, label %lor.lhs.false446

lor.lhs.false446:                                 ; preds = %lor.lhs.false442
  %294 = load i8** %input.addr, align 8
  %bitcast633 = bitcast i8** %input.addr to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast633, i8** %base.alloca634, i8** %bound.alloca635)
  %base.load636 = load i8** %base.alloca634
  %bound.load637 = load i8** %bound.alloca635
  %add.ptr447 = getelementptr inbounds i8* %294, i64 6
  call void @__softboundcets_allocate_shadow_stack_space(i32 3)
  call void @__softboundcets_store_base_shadow_stack(i8* %base.load636, i32 1)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bound.load637, i32 1)
  call void @__softboundcets_store_base_shadow_stack(i8* getelementptr inbounds ([6 x i8]* @.str57, i32 0, i32 0), i32 2)
  call void @__softboundcets_store_bound_shadow_stack(i8* getelementptr inbounds ([6 x i8]* @.str57, i32 1, i32 0), i32 2)
  %call448 = call i8* @softboundcets_strstr(i8* %add.ptr447, i8* getelementptr inbounds ([6 x i8]* @.str57, i32 0, i32 0)) #6
  %295 = call i8* @__softboundcets_load_base_shadow_stack(i32 0)
  %296 = call i8* @__softboundcets_load_bound_shadow_stack(i32 0)
  call void @__softboundcets_deallocate_shadow_stack_space()
  %cmp449 = icmp ne i8* %call448, null
  br i1 %cmp449, label %land.lhs.true450, label %lor.lhs.false454

land.lhs.true450:                                 ; preds = %lor.lhs.false446
  %297 = load i8** %input.addr, align 8
  %bitcast663 = bitcast i8** %input.addr to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast663, i8** %base.alloca664, i8** %bound.alloca665)
  %base.load666 = load i8** %base.alloca664
  %bound.load667 = load i8** %bound.alloca665
  %add.ptr451 = getelementptr inbounds i8* %297, i64 6
  call void @__softboundcets_allocate_shadow_stack_space(i32 3)
  call void @__softboundcets_store_base_shadow_stack(i8* %base.load666, i32 1)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bound.load667, i32 1)
  call void @__softboundcets_store_base_shadow_stack(i8* getelementptr inbounds ([5 x i8]* @.str5851, i32 0, i32 0), i32 2)
  call void @__softboundcets_store_bound_shadow_stack(i8* getelementptr inbounds ([5 x i8]* @.str5851, i32 1, i32 0), i32 2)
  %call452 = call i8* @softboundcets_strstr(i8* %add.ptr451, i8* getelementptr inbounds ([5 x i8]* @.str5851, i32 0, i32 0)) #6
  %298 = call i8* @__softboundcets_load_base_shadow_stack(i32 0)
  %299 = call i8* @__softboundcets_load_bound_shadow_stack(i32 0)
  call void @__softboundcets_deallocate_shadow_stack_space()
  %cmp453 = icmp ne i8* %call452, null
  br i1 %cmp453, label %land.lhs.true458, label %lor.lhs.false454

lor.lhs.false454:                                 ; preds = %land.lhs.true450, %lor.lhs.false446
  %300 = load i8** %input.addr, align 8
  %bitcast668 = bitcast i8** %input.addr to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast668, i8** %base.alloca669, i8** %bound.alloca670)
  %base.load671 = load i8** %base.alloca669
  %bound.load672 = load i8** %bound.alloca670
  %add.ptr455 = getelementptr inbounds i8* %300, i64 6
  call void @__softboundcets_allocate_shadow_stack_space(i32 3)
  call void @__softboundcets_store_base_shadow_stack(i8* %base.load671, i32 1)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bound.load672, i32 1)
  call void @__softboundcets_store_base_shadow_stack(i8* getelementptr inbounds ([2 x i8]* @.str59, i32 0, i32 0), i32 2)
  call void @__softboundcets_store_bound_shadow_stack(i8* getelementptr inbounds ([2 x i8]* @.str59, i32 1, i32 0), i32 2)
  %call456 = call i32 @softboundcets_strncmp(i8* %add.ptr455, i8* getelementptr inbounds ([2 x i8]* @.str59, i32 0, i32 0), i64 1) #6
  call void @__softboundcets_deallocate_shadow_stack_space()
  %tobool457 = icmp ne i32 %call456, 0
  br i1 %tobool457, label %if.else464, label %land.lhs.true458

land.lhs.true458:                                 ; preds = %lor.lhs.false454, %land.lhs.true450, %lor.lhs.false442, %if.else438
  %301 = load i8** %input.addr, align 8
  %bitcast613 = bitcast i8** %input.addr to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast613, i8** %base.alloca614, i8** %bound.alloca615)
  %base.load616 = load i8** %base.alloca614
  %bound.load617 = load i8** %bound.alloca615
  %add.ptr459 = getelementptr inbounds i8* %301, i64 6
  call void @__softboundcets_allocate_shadow_stack_space(i32 3)
  call void @__softboundcets_store_base_shadow_stack(i8* %base.load616, i32 1)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bound.load617, i32 1)
  call void @__softboundcets_store_base_shadow_stack(i8* getelementptr inbounds ([9 x i8]* @.str60, i32 0, i32 0), i32 2)
  call void @__softboundcets_store_bound_shadow_stack(i8* getelementptr inbounds ([9 x i8]* @.str60, i32 1, i32 0), i32 2)
  %call460 = call i8* @softboundcets_strstr(i8* %add.ptr459, i8* getelementptr inbounds ([9 x i8]* @.str60, i32 0, i32 0)) #6
  %302 = call i8* @__softboundcets_load_base_shadow_stack(i32 0)
  %303 = call i8* @__softboundcets_load_bound_shadow_stack(i32 0)
  call void @__softboundcets_deallocate_shadow_stack_space()
  %cmp461 = icmp eq i8* %call460, null
  br i1 %cmp461, label %if.then462, label %if.else464

if.then462:                                       ; preds = %land.lhs.true458
  %call463 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([55 x i8]* @.str61, i32 0, i32 0))
  call void @ResetHandValue()
  store i32 0, i32* @must_sit, align 4
  store i32 0, i32* @partnerdead, align 4
  store i32 0, i32* @piecedead, align 4
  br label %if.end513

if.else464:                                       ; preds = %land.lhs.true458, %lor.lhs.false454
  %304 = load i8** %input.addr, align 8
  %bitcast638 = bitcast i8** %input.addr to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast638, i8** %base.alloca639, i8** %bound.alloca640)
  %base.load641 = load i8** %base.alloca639
  %bound.load642 = load i8** %bound.alloca640
  %add.ptr465 = getelementptr inbounds i8* %304, i64 6
  call void @__softboundcets_allocate_shadow_stack_space(i32 3)
  call void @__softboundcets_store_base_shadow_stack(i8* %base.load641, i32 1)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bound.load642, i32 1)
  call void @__softboundcets_store_base_shadow_stack(i8* getelementptr inbounds ([26 x i8]* @.str62, i32 0, i32 0), i32 2)
  call void @__softboundcets_store_bound_shadow_stack(i8* getelementptr inbounds ([26 x i8]* @.str62, i32 1, i32 0), i32 2)
  %call466 = call i32 @softboundcets_strncmp(i8* %add.ptr465, i8* getelementptr inbounds ([26 x i8]* @.str62, i32 0, i32 0), i64 25) #6
  call void @__softboundcets_deallocate_shadow_stack_space()
  %tobool467 = icmp ne i32 %call466, 0
  br i1 %tobool467, label %lor.lhs.false468, label %if.then472

lor.lhs.false468:                                 ; preds = %if.else464
  %305 = load i8** %input.addr, align 8
  %bitcast673 = bitcast i8** %input.addr to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast673, i8** %base.alloca674, i8** %bound.alloca675)
  %base.load676 = load i8** %base.alloca674
  %bound.load677 = load i8** %bound.alloca675
  %add.ptr469 = getelementptr inbounds i8* %305, i64 6
  call void @__softboundcets_allocate_shadow_stack_space(i32 3)
  call void @__softboundcets_store_base_shadow_stack(i8* %base.load676, i32 1)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bound.load677, i32 1)
  call void @__softboundcets_store_base_shadow_stack(i8* getelementptr inbounds ([5 x i8]* @.str63, i32 0, i32 0), i32 2)
  call void @__softboundcets_store_bound_shadow_stack(i8* getelementptr inbounds ([5 x i8]* @.str63, i32 1, i32 0), i32 2)
  %call470 = call i32 @softboundcets_strncmp(i8* %add.ptr469, i8* getelementptr inbounds ([5 x i8]* @.str63, i32 0, i32 0), i64 4) #6
  call void @__softboundcets_deallocate_shadow_stack_space()
  %tobool471 = icmp ne i32 %call470, 0
  br i1 %tobool471, label %if.else473, label %if.then472

if.then472:                                       ; preds = %lor.lhs.false468, %if.else464
  store i32 1, i32* @go_fast, align 4
  store i32 0, i32* @must_sit, align 4
  store i32 1, i32* @partnerdead, align 4
  br label %if.end512

if.else473:                                       ; preds = %lor.lhs.false468
  %306 = load i8** %input.addr, align 8
  %bitcast703 = bitcast i8** %input.addr to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast703, i8** %base.alloca704, i8** %bound.alloca705)
  %base.load706 = load i8** %base.alloca704
  %bound.load707 = load i8** %bound.alloca705
  %add.ptr474 = getelementptr inbounds i8* %306, i64 6
  call void @__softboundcets_allocate_shadow_stack_space(i32 3)
  call void @__softboundcets_store_base_shadow_stack(i8* %base.load706, i32 1)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bound.load707, i32 1)
  call void @__softboundcets_store_base_shadow_stack(i8* getelementptr inbounds ([27 x i8]* @.str64, i32 0, i32 0), i32 2)
  call void @__softboundcets_store_bound_shadow_stack(i8* getelementptr inbounds ([27 x i8]* @.str64, i32 1, i32 0), i32 2)
  %call475 = call i32 @softboundcets_strncmp(i8* %add.ptr474, i8* getelementptr inbounds ([27 x i8]* @.str64, i32 0, i32 0), i64 26) #6
  call void @__softboundcets_deallocate_shadow_stack_space()
  %tobool476 = icmp ne i32 %call475, 0
  br i1 %tobool476, label %if.else478, label %if.then477

if.then477:                                       ; preds = %if.else473
  store i32 1, i32* @go_fast, align 4
  store i32 0, i32* @must_sit, align 4
  store i32 1, i32* @piecedead, align 4
  br label %if.end511

if.else478:                                       ; preds = %if.else473
  %307 = load i8** %input.addr, align 8
  %bitcast733 = bitcast i8** %input.addr to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast733, i8** %base.alloca734, i8** %bound.alloca735)
  %base.load736 = load i8** %base.alloca734
  %bound.load737 = load i8** %bound.alloca735
  %add.ptr479 = getelementptr inbounds i8* %307, i64 6
  call void @__softboundcets_allocate_shadow_stack_space(i32 3)
  call void @__softboundcets_store_base_shadow_stack(i8* %base.load736, i32 1)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bound.load737, i32 1)
  call void @__softboundcets_store_base_shadow_stack(i8* getelementptr inbounds ([6 x i8]* @.str837, i32 0, i32 0), i32 2)
  call void @__softboundcets_store_bound_shadow_stack(i8* getelementptr inbounds ([6 x i8]* @.str837, i32 1, i32 0), i32 2)
  %call480 = call i32 @softboundcets_strncmp(i8* %add.ptr479, i8* getelementptr inbounds ([6 x i8]* @.str837, i32 0, i32 0), i64 5) #6
  call void @__softboundcets_deallocate_shadow_stack_space()
  %tobool481 = icmp ne i32 %call480, 0
  br i1 %tobool481, label %if.else483, label %if.then482

if.then482:                                       ; preds = %if.else478
  br label %return

if.else483:                                       ; preds = %if.else478
  %308 = load i8** %input.addr, align 8
  %bitcast758 = bitcast i8** %input.addr to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast758, i8** %base.alloca759, i8** %bound.alloca760)
  %base.load761 = load i8** %base.alloca759
  %bound.load762 = load i8** %bound.alloca760
  %add.ptr484 = getelementptr inbounds i8* %308, i64 6
  call void @__softboundcets_allocate_shadow_stack_space(i32 3)
  call void @__softboundcets_store_base_shadow_stack(i8* %base.load761, i32 1)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bound.load762, i32 1)
  call void @__softboundcets_store_base_shadow_stack(i8* getelementptr inbounds ([3 x i8]* @.str65, i32 0, i32 0), i32 2)
  call void @__softboundcets_store_bound_shadow_stack(i8* getelementptr inbounds ([3 x i8]* @.str65, i32 1, i32 0), i32 2)
  %call485 = call i32 @softboundcets_strncmp(i8* %add.ptr484, i8* getelementptr inbounds ([3 x i8]* @.str65, i32 0, i32 0), i64 2) #6
  call void @__softboundcets_deallocate_shadow_stack_space()
  %tobool486 = icmp ne i32 %call485, 0
  br i1 %tobool486, label %if.else488, label %if.then487

if.then487:                                       ; preds = %if.else483
  br label %return

if.else488:                                       ; preds = %if.else483
  %309 = load i8** %input.addr, align 8
  %bitcast783 = bitcast i8** %input.addr to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast783, i8** %base.alloca784, i8** %bound.alloca785)
  %base.load786 = load i8** %base.alloca784
  %bound.load787 = load i8** %bound.alloca785
  %add.ptr489 = getelementptr inbounds i8* %309, i64 6
  call void @__softboundcets_allocate_shadow_stack_space(i32 3)
  call void @__softboundcets_store_base_shadow_stack(i8* %base.load786, i32 1)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bound.load787, i32 1)
  call void @__softboundcets_store_base_shadow_stack(i8* getelementptr inbounds ([3 x i8]* @.str66, i32 0, i32 0), i32 2)
  call void @__softboundcets_store_bound_shadow_stack(i8* getelementptr inbounds ([3 x i8]* @.str66, i32 1, i32 0), i32 2)
  %call490 = call i32 @softboundcets_strncmp(i8* %add.ptr489, i8* getelementptr inbounds ([3 x i8]* @.str66, i32 0, i32 0), i64 2) #6
  call void @__softboundcets_deallocate_shadow_stack_space()
  %tobool491 = icmp ne i32 %call490, 0
  br i1 %tobool491, label %lor.lhs.false492, label %if.then496

lor.lhs.false492:                                 ; preds = %if.else488
  %310 = load i8** %input.addr, align 8
  %bitcast803 = bitcast i8** %input.addr to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast803, i8** %base.alloca804, i8** %bound.alloca805)
  %base.load806 = load i8** %base.alloca804
  %bound.load807 = load i8** %bound.alloca805
  %add.ptr493 = getelementptr inbounds i8* %310, i64 6
  call void @__softboundcets_allocate_shadow_stack_space(i32 3)
  call void @__softboundcets_store_base_shadow_stack(i8* %base.load806, i32 1)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bound.load807, i32 1)
  call void @__softboundcets_store_base_shadow_stack(i8* getelementptr inbounds ([6 x i8]* @.str67, i32 0, i32 0), i32 2)
  call void @__softboundcets_store_bound_shadow_stack(i8* getelementptr inbounds ([6 x i8]* @.str67, i32 1, i32 0), i32 2)
  %call494 = call i32 @softboundcets_strncmp(i8* %add.ptr493, i8* getelementptr inbounds ([6 x i8]* @.str67, i32 0, i32 0), i64 5) #6
  call void @__softboundcets_deallocate_shadow_stack_space()
  %tobool495 = icmp ne i32 %call494, 0
  br i1 %tobool495, label %if.else498, label %if.then496

if.then496:                                       ; preds = %lor.lhs.false492, %if.else488
  %call497 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([26 x i8]* @.str68, i32 0, i32 0))
  br label %if.end508

if.else498:                                       ; preds = %lor.lhs.false492
  %311 = load i8** %input.addr, align 8
  %bitcast818 = bitcast i8** %input.addr to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast818, i8** %base.alloca819, i8** %bound.alloca820)
  %base.load821 = load i8** %base.alloca819
  %bound.load822 = load i8** %bound.alloca820
  %add.ptr499 = getelementptr inbounds i8* %311, i64 6
  call void @__softboundcets_allocate_shadow_stack_space(i32 3)
  call void @__softboundcets_store_base_shadow_stack(i8* %base.load821, i32 1)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bound.load822, i32 1)
  call void @__softboundcets_store_base_shadow_stack(i8* getelementptr inbounds ([8 x i8]* @.str69, i32 0, i32 0), i32 2)
  call void @__softboundcets_store_bound_shadow_stack(i8* getelementptr inbounds ([8 x i8]* @.str69, i32 1, i32 0), i32 2)
  %call500 = call i8* @softboundcets_strstr(i8* %add.ptr499, i8* getelementptr inbounds ([8 x i8]* @.str69, i32 0, i32 0)) #6
  %312 = call i8* @__softboundcets_load_base_shadow_stack(i32 0)
  %313 = call i8* @__softboundcets_load_bound_shadow_stack(i32 0)
  call void @__softboundcets_deallocate_shadow_stack_space()
  %cmp501 = icmp ne i8* %call500, null
  br i1 %cmp501, label %if.then502, label %if.else505

if.then502:                                       ; preds = %if.else498
  %call503 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([87 x i8]* @.str70, i32 0, i32 0))
  %call504 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([25 x i8]* @.str332, i32 0, i32 0))
  br label %if.end507

if.else505:                                       ; preds = %if.else498
  %call506 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([59 x i8]* @.str71, i32 0, i32 0))
  br label %if.end507

if.end507:                                        ; preds = %if.else505, %if.then502
  br label %if.end508

if.end508:                                        ; preds = %if.end507, %if.then496
  br label %if.end509

if.end509:                                        ; preds = %if.end508
  br label %if.end510

if.end510:                                        ; preds = %if.end509
  br label %if.end511

if.end511:                                        ; preds = %if.end510, %if.then477
  br label %if.end512

if.end512:                                        ; preds = %if.end511, %if.then472
  br label %if.end513

if.end513:                                        ; preds = %if.end512, %if.then462
  br label %if.end514

if.end514:                                        ; preds = %if.end513, %if.end437
  br label %if.end515

if.end515:                                        ; preds = %if.end514, %if.end242
  br label %if.end516

if.end516:                                        ; preds = %if.end515, %if.then48
  br label %if.end517

if.end517:                                        ; preds = %if.end516, %if.then41
  br label %if.end518

if.end518:                                        ; preds = %if.end517, %if.then35
  br label %if.end519

if.end519:                                        ; preds = %if.end518, %if.then29
  br label %if.end520

if.end520:                                        ; preds = %if.end519, %if.then19
  br label %if.end521

if.end521:                                        ; preds = %if.end520, %if.then11
  br label %return

return:                                           ; preds = %if.end521, %if.then487, %if.then482, %if.then5, %if.then
  ret void
}

declare i32 @softboundcets_strncmp(i8*, i8*, i64)

declare i8* @softboundcets_strcpy(i8*, i8*)

; Function Attrs: nounwind uwtable
define internal void @CheckBadFlow(i32 %reset) #0 {
entry:
  %reset.addr = alloca i32, align 4
  %reset.addr389 = bitcast i32* %reset.addr to i32*
  %bitcast = bitcast i32* %reset.addr to i8*
  %mtmp = getelementptr i32* %reset.addr389, i32 1
  %bitcast390 = bitcast i32* %mtmp to i8*
  %hismoves = alloca [512 x %struct.move_s], align 16
  %hismoves391 = bitcast [512 x %struct.move_s]* %hismoves to [512 x %struct.move_s]*
  %bitcast392 = bitcast [512 x %struct.move_s]* %hismoves to i8*
  %mtmp393 = getelementptr [512 x %struct.move_s]* %hismoves391, i32 1
  %bitcast394 = bitcast [512 x %struct.move_s]* %mtmp393 to i8*
  %ourmoves = alloca [512 x %struct.move_s], align 16
  %ourmoves395 = bitcast [512 x %struct.move_s]* %ourmoves to [512 x %struct.move_s]*
  %bitcast396 = bitcast [512 x %struct.move_s]* %ourmoves to i8*
  %mtmp397 = getelementptr [512 x %struct.move_s]* %ourmoves395, i32 1
  %bitcast398 = bitcast [512 x %struct.move_s]* %mtmp397 to i8*
  %his_num_moves = alloca i32, align 4
  %his_num_moves399 = bitcast i32* %his_num_moves to i32*
  %bitcast400 = bitcast i32* %his_num_moves to i8*
  %mtmp401 = getelementptr i32* %his_num_moves399, i32 1
  %bitcast402 = bitcast i32* %mtmp401 to i8*
  %our_num_moves = alloca i32, align 4
  %our_num_moves403 = bitcast i32* %our_num_moves to i32*
  %bitcast404 = bitcast i32* %our_num_moves to i8*
  %mtmp405 = getelementptr i32* %our_num_moves403, i32 1
  %bitcast406 = bitcast i32* %mtmp405 to i8*
  %j = alloca i32, align 4
  %j407 = bitcast i32* %j to i32*
  %bitcast408 = bitcast i32* %j to i8*
  %mtmp409 = getelementptr i32* %j407, i32 1
  %bitcast410 = bitcast i32* %mtmp409 to i8*
  %i = alloca i32, align 4
  %i411 = bitcast i32* %i to i32*
  %bitcast412 = bitcast i32* %i to i8*
  %mtmp413 = getelementptr i32* %i411, i32 1
  %bitcast414 = bitcast i32* %mtmp413 to i8*
  %ic = alloca i32, align 4
  %ic415 = bitcast i32* %ic to i32*
  %bitcast416 = bitcast i32* %ic to i8*
  %mtmp417 = getelementptr i32* %ic415, i32 1
  %bitcast418 = bitcast i32* %mtmp417 to i8*
  %icc = alloca i32, align 4
  %icc419 = bitcast i32* %icc to i32*
  %bitcast420 = bitcast i32* %icc to i8*
  %mtmp421 = getelementptr i32* %icc419, i32 1
  %bitcast422 = bitcast i32* %mtmp421 to i8*
  %othermove = alloca i32, align 4
  %othermove423 = bitcast i32* %othermove to i32*
  %bitcast424 = bitcast i32* %othermove to i8*
  %mtmp425 = getelementptr i32* %othermove423, i32 1
  %bitcast426 = bitcast i32* %mtmp425 to i8*
  %pawnmates = alloca i32, align 4
  %pawnmates427 = bitcast i32* %pawnmates to i32*
  %bitcast428 = bitcast i32* %pawnmates to i8*
  %mtmp429 = getelementptr i32* %pawnmates427, i32 1
  %bitcast430 = bitcast i32* %mtmp429 to i8*
  %knightmates = alloca i32, align 4
  %knightmates431 = bitcast i32* %knightmates to i32*
  %bitcast432 = bitcast i32* %knightmates to i8*
  %mtmp433 = getelementptr i32* %knightmates431, i32 1
  %bitcast434 = bitcast i32* %mtmp433 to i8*
  %bishopmates = alloca i32, align 4
  %bishopmates435 = bitcast i32* %bishopmates to i32*
  %bitcast436 = bitcast i32* %bishopmates to i8*
  %mtmp437 = getelementptr i32* %bishopmates435, i32 1
  %bitcast438 = bitcast i32* %mtmp437 to i8*
  %rookmates = alloca i32, align 4
  %rookmates439 = bitcast i32* %rookmates to i32*
  %bitcast440 = bitcast i32* %rookmates to i8*
  %mtmp441 = getelementptr i32* %rookmates439, i32 1
  %bitcast442 = bitcast i32* %mtmp441 to i8*
  %queenmates = alloca i32, align 4
  %queenmates443 = bitcast i32* %queenmates to i32*
  %bitcast444 = bitcast i32* %queenmates to i8*
  %mtmp445 = getelementptr i32* %queenmates443, i32 1
  %bitcast446 = bitcast i32* %mtmp445 to i8*
  %pawnwarn = alloca i32, align 4
  %pawnwarn447 = bitcast i32* %pawnwarn to i32*
  %bitcast448 = bitcast i32* %pawnwarn to i8*
  %mtmp449 = getelementptr i32* %pawnwarn447, i32 1
  %bitcast450 = bitcast i32* %mtmp449 to i8*
  %knightwarn = alloca i32, align 4
  %knightwarn451 = bitcast i32* %knightwarn to i32*
  %bitcast452 = bitcast i32* %knightwarn to i8*
  %mtmp453 = getelementptr i32* %knightwarn451, i32 1
  %bitcast454 = bitcast i32* %mtmp453 to i8*
  %bishopwarn = alloca i32, align 4
  %bishopwarn455 = bitcast i32* %bishopwarn to i32*
  %bitcast456 = bitcast i32* %bishopwarn to i8*
  %mtmp457 = getelementptr i32* %bishopwarn455, i32 1
  %bitcast458 = bitcast i32* %mtmp457 to i8*
  %rookwarn = alloca i32, align 4
  %rookwarn459 = bitcast i32* %rookwarn to i32*
  %bitcast460 = bitcast i32* %rookwarn to i8*
  %mtmp461 = getelementptr i32* %rookwarn459, i32 1
  %bitcast462 = bitcast i32* %mtmp461 to i8*
  %queenwarn = alloca i32, align 4
  %queenwarn463 = bitcast i32* %queenwarn to i32*
  %bitcast464 = bitcast i32* %queenwarn to i8*
  %mtmp465 = getelementptr i32* %queenwarn463, i32 1
  %bitcast466 = bitcast i32* %mtmp465 to i8*
  store i32 %reset, i32* %reset.addr, align 4
  store i32 0, i32* %othermove, align 4
  store i32 0, i32* %pawnmates, align 4
  store i32 0, i32* %knightmates, align 4
  store i32 0, i32* %bishopmates, align 4
  store i32 0, i32* %rookmates, align 4
  store i32 0, i32* %queenmates, align 4
  store i32 0, i32* %pawnwarn, align 4
  store i32 0, i32* %knightwarn, align 4
  store i32 0, i32* %bishopwarn, align 4
  store i32 0, i32* %rookwarn, align 4
  store i32 0, i32* %queenwarn, align 4
  %0 = load i32* %reset.addr, align 4
  %tobool = icmp ne i32 %0, 0
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  store i32 0, i32* @CheckBadFlow.pawnmated, align 4
  store i32 0, i32* @CheckBadFlow.knightmated, align 4
  store i32 0, i32* @CheckBadFlow.bishopmated, align 4
  store i32 0, i32* @CheckBadFlow.rookmated, align 4
  store i32 0, i32* @CheckBadFlow.queenmated, align 4
  br label %return

if.end:                                           ; preds = %entry
  %call = call i32 @in_check()
  store i32 %call, i32* %ic, align 4
  %1 = load i32* @white_to_move, align 4
  %tobool1 = icmp ne i32 %1, 0
  %cond = select i1 %tobool1, i32 1, i32 2
  %idxprom = sext i32 %cond to i64
  %2 = load i32* @white_to_move, align 4
  %tobool2 = icmp ne i32 %2, 0
  %lnot = xor i1 %tobool2, true
  %lnot.ext = zext i1 %lnot to i32
  %idxprom3 = sext i32 %lnot.ext to i64
  %arrayidx = getelementptr inbounds [2 x [16 x i32]]* @holding, i32 0, i64 %idxprom3
  %arrayidx4 = getelementptr inbounds [16 x i32]* %arrayidx, i32 0, i64 %idxprom
  %3 = load i32* %arrayidx4, align 4
  %tobool5 = icmp ne i32 %3, 0
  br i1 %tobool5, label %if.end44, label %if.then6

if.then6:                                         ; preds = %if.end
  %4 = load i32* @white_to_move, align 4
  %tobool7 = icmp ne i32 %4, 0
  %cond8 = select i1 %tobool7, i32 1, i32 2
  %5 = load i32* @white_to_move, align 4
  %tobool9 = icmp ne i32 %5, 0
  %lnot10 = xor i1 %tobool9, true
  %lnot.ext11 = zext i1 %lnot10 to i32
  call void @DropaddHolding(i32 %cond8, i32 %lnot.ext11)
  %arrayidx12 = getelementptr inbounds [512 x %struct.move_s]* %hismoves, i32 0, i64 0
  call void @__softboundcets_allocate_shadow_stack_space(i32 2)
  call void @__softboundcets_store_base_shadow_stack(i8* %bitcast392, i32 1)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bitcast394, i32 1)
  call void @gen(%struct.move_s* %arrayidx12)
  call void @__softboundcets_deallocate_shadow_stack_space()
  %6 = load i32* @numb_moves, align 4
  store i32 %6, i32* %his_num_moves, align 4
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc36, %if.then6
  %7 = load i32* %i, align 4
  %8 = load i32* %his_num_moves, align 4
  %cmp = icmp slt i32 %7, %8
  br i1 %cmp, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %for.cond
  %9 = load i32* %pawnmates, align 4
  %cmp13 = icmp eq i32 %9, 0
  br label %land.end

land.end:                                         ; preds = %land.rhs, %for.cond
  %10 = phi i1 [ false, %for.cond ], [ %cmp13, %land.rhs ]
  br i1 %10, label %for.body, label %for.end38

for.body:                                         ; preds = %land.end
  %arrayidx14 = getelementptr inbounds [512 x %struct.move_s]* %hismoves, i32 0, i64 0
  %11 = load i32* %i, align 4
  call void @__softboundcets_allocate_shadow_stack_space(i32 2)
  call void @__softboundcets_store_base_shadow_stack(i8* %bitcast392, i32 1)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bitcast394, i32 1)
  call void @make(%struct.move_s* %arrayidx14, i32 %11)
  call void @__softboundcets_deallocate_shadow_stack_space()
  %arrayidx15 = getelementptr inbounds [512 x %struct.move_s]* %hismoves, i32 0, i64 0
  %12 = load i32* %i, align 4
  %13 = load i32* %ic, align 4
  call void @__softboundcets_allocate_shadow_stack_space(i32 2)
  call void @__softboundcets_store_base_shadow_stack(i8* %bitcast392, i32 1)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bitcast394, i32 1)
  %call16 = call i32 @check_legal(%struct.move_s* %arrayidx15, i32 %12, i32 %13)
  call void @__softboundcets_deallocate_shadow_stack_space()
  %tobool17 = icmp ne i32 %call16, 0
  br i1 %tobool17, label %if.then18, label %if.end34

if.then18:                                        ; preds = %for.body
  store i32 3, i32* %pawnmates, align 4
  %call19 = call i32 @in_check()
  store i32 %call19, i32* %icc, align 4
  %arrayidx20 = getelementptr inbounds [512 x %struct.move_s]* %ourmoves, i32 0, i64 0
  call void @__softboundcets_allocate_shadow_stack_space(i32 2)
  call void @__softboundcets_store_base_shadow_stack(i8* %bitcast396, i32 1)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bitcast398, i32 1)
  call void @gen(%struct.move_s* %arrayidx20)
  call void @__softboundcets_deallocate_shadow_stack_space()
  %14 = load i32* @numb_moves, align 4
  store i32 %14, i32* %our_num_moves, align 4
  store i32 0, i32* %j, align 4
  br label %for.cond21

for.cond21:                                       ; preds = %for.inc, %if.then18
  %15 = load i32* %j, align 4
  %16 = load i32* %our_num_moves, align 4
  %cmp22 = icmp slt i32 %15, %16
  br i1 %cmp22, label %land.rhs23, label %land.end25

land.rhs23:                                       ; preds = %for.cond21
  %17 = load i32* %pawnmates, align 4
  %cmp24 = icmp ne i32 %17, 0
  br label %land.end25

land.end25:                                       ; preds = %land.rhs23, %for.cond21
  %18 = phi i1 [ false, %for.cond21 ], [ %cmp24, %land.rhs23 ]
  br i1 %18, label %for.body26, label %for.end

for.body26:                                       ; preds = %land.end25
  %arrayidx27 = getelementptr inbounds [512 x %struct.move_s]* %ourmoves, i32 0, i64 0
  %19 = load i32* %j, align 4
  call void @__softboundcets_allocate_shadow_stack_space(i32 2)
  call void @__softboundcets_store_base_shadow_stack(i8* %bitcast396, i32 1)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bitcast398, i32 1)
  call void @make(%struct.move_s* %arrayidx27, i32 %19)
  call void @__softboundcets_deallocate_shadow_stack_space()
  %arrayidx28 = getelementptr inbounds [512 x %struct.move_s]* %ourmoves, i32 0, i64 0
  %20 = load i32* %j, align 4
  %21 = load i32* %icc, align 4
  call void @__softboundcets_allocate_shadow_stack_space(i32 2)
  call void @__softboundcets_store_base_shadow_stack(i8* %bitcast396, i32 1)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bitcast398, i32 1)
  %call29 = call i32 @check_legal(%struct.move_s* %arrayidx28, i32 %20, i32 %21)
  call void @__softboundcets_deallocate_shadow_stack_space()
  %tobool30 = icmp ne i32 %call29, 0
  br i1 %tobool30, label %if.then31, label %if.end32

if.then31:                                        ; preds = %for.body26
  store i32 0, i32* %pawnmates, align 4
  br label %if.end32

if.end32:                                         ; preds = %if.then31, %for.body26
  %arrayidx33 = getelementptr inbounds [512 x %struct.move_s]* %ourmoves, i32 0, i64 0
  %22 = load i32* %j, align 4
  call void @__softboundcets_allocate_shadow_stack_space(i32 2)
  call void @__softboundcets_store_base_shadow_stack(i8* %bitcast396, i32 1)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bitcast398, i32 1)
  call void @unmake(%struct.move_s* %arrayidx33, i32 %22)
  call void @__softboundcets_deallocate_shadow_stack_space()
  br label %for.inc

for.inc:                                          ; preds = %if.end32
  %23 = load i32* %j, align 4
  %inc = add nsw i32 %23, 1
  store i32 %inc, i32* %j, align 4
  br label %for.cond21

for.end:                                          ; preds = %land.end25
  br label %if.end34

if.end34:                                         ; preds = %for.end, %for.body
  %arrayidx35 = getelementptr inbounds [512 x %struct.move_s]* %hismoves, i32 0, i64 0
  %24 = load i32* %i, align 4
  call void @__softboundcets_allocate_shadow_stack_space(i32 2)
  call void @__softboundcets_store_base_shadow_stack(i8* %bitcast392, i32 1)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bitcast394, i32 1)
  call void @unmake(%struct.move_s* %arrayidx35, i32 %24)
  call void @__softboundcets_deallocate_shadow_stack_space()
  br label %for.inc36

for.inc36:                                        ; preds = %if.end34
  %25 = load i32* %i, align 4
  %inc37 = add nsw i32 %25, 1
  store i32 %inc37, i32* %i, align 4
  br label %for.cond

for.end38:                                        ; preds = %land.end
  %26 = load i32* @white_to_move, align 4
  %tobool39 = icmp ne i32 %26, 0
  %cond40 = select i1 %tobool39, i32 1, i32 2
  %27 = load i32* @white_to_move, align 4
  %tobool41 = icmp ne i32 %27, 0
  %lnot42 = xor i1 %tobool41, true
  %lnot.ext43 = zext i1 %lnot42 to i32
  call void @DropremoveHolding(i32 %cond40, i32 %lnot.ext43)
  br label %if.end44

if.end44:                                         ; preds = %for.end38, %if.end
  %28 = load i32* @white_to_move, align 4
  %tobool45 = icmp ne i32 %28, 0
  %cond46 = select i1 %tobool45, i32 3, i32 4
  %idxprom47 = sext i32 %cond46 to i64
  %29 = load i32* @white_to_move, align 4
  %tobool48 = icmp ne i32 %29, 0
  %lnot49 = xor i1 %tobool48, true
  %lnot.ext50 = zext i1 %lnot49 to i32
  %idxprom51 = sext i32 %lnot.ext50 to i64
  %arrayidx52 = getelementptr inbounds [2 x [16 x i32]]* @holding, i32 0, i64 %idxprom51
  %arrayidx53 = getelementptr inbounds [16 x i32]* %arrayidx52, i32 0, i64 %idxprom47
  %30 = load i32* %arrayidx53, align 4
  %tobool54 = icmp ne i32 %30, 0
  br i1 %tobool54, label %if.end101, label %if.then55

if.then55:                                        ; preds = %if.end44
  %31 = load i32* @white_to_move, align 4
  %tobool56 = icmp ne i32 %31, 0
  %cond57 = select i1 %tobool56, i32 3, i32 4
  %32 = load i32* @white_to_move, align 4
  %tobool58 = icmp ne i32 %32, 0
  %lnot59 = xor i1 %tobool58, true
  %lnot.ext60 = zext i1 %lnot59 to i32
  call void @DropaddHolding(i32 %cond57, i32 %lnot.ext60)
  %arrayidx61 = getelementptr inbounds [512 x %struct.move_s]* %hismoves, i32 0, i64 0
  call void @__softboundcets_allocate_shadow_stack_space(i32 2)
  call void @__softboundcets_store_base_shadow_stack(i8* %bitcast392, i32 1)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bitcast394, i32 1)
  call void @gen(%struct.move_s* %arrayidx61)
  call void @__softboundcets_deallocate_shadow_stack_space()
  %33 = load i32* @numb_moves, align 4
  store i32 %33, i32* %his_num_moves, align 4
  store i32 0, i32* %i, align 4
  br label %for.cond62

for.cond62:                                       ; preds = %for.inc93, %if.then55
  %34 = load i32* %i, align 4
  %35 = load i32* %his_num_moves, align 4
  %cmp63 = icmp slt i32 %34, %35
  br i1 %cmp63, label %land.rhs64, label %land.end66

land.rhs64:                                       ; preds = %for.cond62
  %36 = load i32* %knightmates, align 4
  %cmp65 = icmp eq i32 %36, 0
  br label %land.end66

land.end66:                                       ; preds = %land.rhs64, %for.cond62
  %37 = phi i1 [ false, %for.cond62 ], [ %cmp65, %land.rhs64 ]
  br i1 %37, label %for.body67, label %for.end95

for.body67:                                       ; preds = %land.end66
  %arrayidx68 = getelementptr inbounds [512 x %struct.move_s]* %hismoves, i32 0, i64 0
  %38 = load i32* %i, align 4
  call void @__softboundcets_allocate_shadow_stack_space(i32 2)
  call void @__softboundcets_store_base_shadow_stack(i8* %bitcast392, i32 1)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bitcast394, i32 1)
  call void @make(%struct.move_s* %arrayidx68, i32 %38)
  call void @__softboundcets_deallocate_shadow_stack_space()
  %arrayidx69 = getelementptr inbounds [512 x %struct.move_s]* %hismoves, i32 0, i64 0
  %39 = load i32* %i, align 4
  %40 = load i32* %ic, align 4
  call void @__softboundcets_allocate_shadow_stack_space(i32 2)
  call void @__softboundcets_store_base_shadow_stack(i8* %bitcast392, i32 1)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bitcast394, i32 1)
  %call70 = call i32 @check_legal(%struct.move_s* %arrayidx69, i32 %39, i32 %40)
  call void @__softboundcets_deallocate_shadow_stack_space()
  %tobool71 = icmp ne i32 %call70, 0
  br i1 %tobool71, label %if.then72, label %if.end91

if.then72:                                        ; preds = %for.body67
  store i32 3, i32* %knightmates, align 4
  %call73 = call i32 @in_check()
  store i32 %call73, i32* %icc, align 4
  %arrayidx74 = getelementptr inbounds [512 x %struct.move_s]* %ourmoves, i32 0, i64 0
  call void @__softboundcets_allocate_shadow_stack_space(i32 2)
  call void @__softboundcets_store_base_shadow_stack(i8* %bitcast396, i32 1)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bitcast398, i32 1)
  call void @gen(%struct.move_s* %arrayidx74)
  call void @__softboundcets_deallocate_shadow_stack_space()
  %41 = load i32* @numb_moves, align 4
  store i32 %41, i32* %our_num_moves, align 4
  store i32 0, i32* %j, align 4
  br label %for.cond75

for.cond75:                                       ; preds = %for.inc88, %if.then72
  %42 = load i32* %j, align 4
  %43 = load i32* %our_num_moves, align 4
  %cmp76 = icmp slt i32 %42, %43
  br i1 %cmp76, label %land.rhs77, label %land.end79

land.rhs77:                                       ; preds = %for.cond75
  %44 = load i32* %knightmates, align 4
  %cmp78 = icmp ne i32 %44, 0
  br label %land.end79

land.end79:                                       ; preds = %land.rhs77, %for.cond75
  %45 = phi i1 [ false, %for.cond75 ], [ %cmp78, %land.rhs77 ]
  br i1 %45, label %for.body80, label %for.end90

for.body80:                                       ; preds = %land.end79
  %arrayidx81 = getelementptr inbounds [512 x %struct.move_s]* %ourmoves, i32 0, i64 0
  %46 = load i32* %j, align 4
  call void @__softboundcets_allocate_shadow_stack_space(i32 2)
  call void @__softboundcets_store_base_shadow_stack(i8* %bitcast396, i32 1)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bitcast398, i32 1)
  call void @make(%struct.move_s* %arrayidx81, i32 %46)
  call void @__softboundcets_deallocate_shadow_stack_space()
  %arrayidx82 = getelementptr inbounds [512 x %struct.move_s]* %ourmoves, i32 0, i64 0
  %47 = load i32* %j, align 4
  %48 = load i32* %icc, align 4
  call void @__softboundcets_allocate_shadow_stack_space(i32 2)
  call void @__softboundcets_store_base_shadow_stack(i8* %bitcast396, i32 1)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bitcast398, i32 1)
  %call83 = call i32 @check_legal(%struct.move_s* %arrayidx82, i32 %47, i32 %48)
  call void @__softboundcets_deallocate_shadow_stack_space()
  %tobool84 = icmp ne i32 %call83, 0
  br i1 %tobool84, label %if.then85, label %if.end86

if.then85:                                        ; preds = %for.body80
  store i32 0, i32* %knightmates, align 4
  br label %if.end86

if.end86:                                         ; preds = %if.then85, %for.body80
  %arrayidx87 = getelementptr inbounds [512 x %struct.move_s]* %ourmoves, i32 0, i64 0
  %49 = load i32* %j, align 4
  call void @__softboundcets_allocate_shadow_stack_space(i32 2)
  call void @__softboundcets_store_base_shadow_stack(i8* %bitcast396, i32 1)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bitcast398, i32 1)
  call void @unmake(%struct.move_s* %arrayidx87, i32 %49)
  call void @__softboundcets_deallocate_shadow_stack_space()
  br label %for.inc88

for.inc88:                                        ; preds = %if.end86
  %50 = load i32* %j, align 4
  %inc89 = add nsw i32 %50, 1
  store i32 %inc89, i32* %j, align 4
  br label %for.cond75

for.end90:                                        ; preds = %land.end79
  br label %if.end91

if.end91:                                         ; preds = %for.end90, %for.body67
  %arrayidx92 = getelementptr inbounds [512 x %struct.move_s]* %hismoves, i32 0, i64 0
  %51 = load i32* %i, align 4
  call void @__softboundcets_allocate_shadow_stack_space(i32 2)
  call void @__softboundcets_store_base_shadow_stack(i8* %bitcast392, i32 1)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bitcast394, i32 1)
  call void @unmake(%struct.move_s* %arrayidx92, i32 %51)
  call void @__softboundcets_deallocate_shadow_stack_space()
  br label %for.inc93

for.inc93:                                        ; preds = %if.end91
  %52 = load i32* %i, align 4
  %inc94 = add nsw i32 %52, 1
  store i32 %inc94, i32* %i, align 4
  br label %for.cond62

for.end95:                                        ; preds = %land.end66
  %53 = load i32* @white_to_move, align 4
  %tobool96 = icmp ne i32 %53, 0
  %cond97 = select i1 %tobool96, i32 3, i32 4
  %54 = load i32* @white_to_move, align 4
  %tobool98 = icmp ne i32 %54, 0
  %lnot99 = xor i1 %tobool98, true
  %lnot.ext100 = zext i1 %lnot99 to i32
  call void @DropremoveHolding(i32 %cond97, i32 %lnot.ext100)
  br label %if.end101

if.end101:                                        ; preds = %for.end95, %if.end44
  %55 = load i32* @white_to_move, align 4
  %tobool102 = icmp ne i32 %55, 0
  %cond103 = select i1 %tobool102, i32 11, i32 12
  %idxprom104 = sext i32 %cond103 to i64
  %56 = load i32* @white_to_move, align 4
  %tobool105 = icmp ne i32 %56, 0
  %lnot106 = xor i1 %tobool105, true
  %lnot.ext107 = zext i1 %lnot106 to i32
  %idxprom108 = sext i32 %lnot.ext107 to i64
  %arrayidx109 = getelementptr inbounds [2 x [16 x i32]]* @holding, i32 0, i64 %idxprom108
  %arrayidx110 = getelementptr inbounds [16 x i32]* %arrayidx109, i32 0, i64 %idxprom104
  %57 = load i32* %arrayidx110, align 4
  %tobool111 = icmp ne i32 %57, 0
  br i1 %tobool111, label %if.end158, label %if.then112

if.then112:                                       ; preds = %if.end101
  %58 = load i32* @white_to_move, align 4
  %tobool113 = icmp ne i32 %58, 0
  %cond114 = select i1 %tobool113, i32 11, i32 12
  %59 = load i32* @white_to_move, align 4
  %tobool115 = icmp ne i32 %59, 0
  %lnot116 = xor i1 %tobool115, true
  %lnot.ext117 = zext i1 %lnot116 to i32
  call void @DropaddHolding(i32 %cond114, i32 %lnot.ext117)
  %arrayidx118 = getelementptr inbounds [512 x %struct.move_s]* %hismoves, i32 0, i64 0
  call void @__softboundcets_allocate_shadow_stack_space(i32 2)
  call void @__softboundcets_store_base_shadow_stack(i8* %bitcast392, i32 1)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bitcast394, i32 1)
  call void @gen(%struct.move_s* %arrayidx118)
  call void @__softboundcets_deallocate_shadow_stack_space()
  %60 = load i32* @numb_moves, align 4
  store i32 %60, i32* %his_num_moves, align 4
  store i32 0, i32* %i, align 4
  br label %for.cond119

for.cond119:                                      ; preds = %for.inc150, %if.then112
  %61 = load i32* %i, align 4
  %62 = load i32* %his_num_moves, align 4
  %cmp120 = icmp slt i32 %61, %62
  br i1 %cmp120, label %land.rhs121, label %land.end123

land.rhs121:                                      ; preds = %for.cond119
  %63 = load i32* %bishopmates, align 4
  %cmp122 = icmp eq i32 %63, 0
  br label %land.end123

land.end123:                                      ; preds = %land.rhs121, %for.cond119
  %64 = phi i1 [ false, %for.cond119 ], [ %cmp122, %land.rhs121 ]
  br i1 %64, label %for.body124, label %for.end152

for.body124:                                      ; preds = %land.end123
  %arrayidx125 = getelementptr inbounds [512 x %struct.move_s]* %hismoves, i32 0, i64 0
  %65 = load i32* %i, align 4
  call void @__softboundcets_allocate_shadow_stack_space(i32 2)
  call void @__softboundcets_store_base_shadow_stack(i8* %bitcast392, i32 1)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bitcast394, i32 1)
  call void @make(%struct.move_s* %arrayidx125, i32 %65)
  call void @__softboundcets_deallocate_shadow_stack_space()
  %arrayidx126 = getelementptr inbounds [512 x %struct.move_s]* %hismoves, i32 0, i64 0
  %66 = load i32* %i, align 4
  %67 = load i32* %ic, align 4
  call void @__softboundcets_allocate_shadow_stack_space(i32 2)
  call void @__softboundcets_store_base_shadow_stack(i8* %bitcast392, i32 1)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bitcast394, i32 1)
  %call127 = call i32 @check_legal(%struct.move_s* %arrayidx126, i32 %66, i32 %67)
  call void @__softboundcets_deallocate_shadow_stack_space()
  %tobool128 = icmp ne i32 %call127, 0
  br i1 %tobool128, label %if.then129, label %if.end148

if.then129:                                       ; preds = %for.body124
  store i32 3, i32* %bishopmates, align 4
  %call130 = call i32 @in_check()
  store i32 %call130, i32* %icc, align 4
  %arrayidx131 = getelementptr inbounds [512 x %struct.move_s]* %ourmoves, i32 0, i64 0
  call void @__softboundcets_allocate_shadow_stack_space(i32 2)
  call void @__softboundcets_store_base_shadow_stack(i8* %bitcast396, i32 1)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bitcast398, i32 1)
  call void @gen(%struct.move_s* %arrayidx131)
  call void @__softboundcets_deallocate_shadow_stack_space()
  %68 = load i32* @numb_moves, align 4
  store i32 %68, i32* %our_num_moves, align 4
  store i32 0, i32* %j, align 4
  br label %for.cond132

for.cond132:                                      ; preds = %for.inc145, %if.then129
  %69 = load i32* %j, align 4
  %70 = load i32* %our_num_moves, align 4
  %cmp133 = icmp slt i32 %69, %70
  br i1 %cmp133, label %land.rhs134, label %land.end136

land.rhs134:                                      ; preds = %for.cond132
  %71 = load i32* %bishopmates, align 4
  %cmp135 = icmp ne i32 %71, 0
  br label %land.end136

land.end136:                                      ; preds = %land.rhs134, %for.cond132
  %72 = phi i1 [ false, %for.cond132 ], [ %cmp135, %land.rhs134 ]
  br i1 %72, label %for.body137, label %for.end147

for.body137:                                      ; preds = %land.end136
  %arrayidx138 = getelementptr inbounds [512 x %struct.move_s]* %ourmoves, i32 0, i64 0
  %73 = load i32* %j, align 4
  call void @__softboundcets_allocate_shadow_stack_space(i32 2)
  call void @__softboundcets_store_base_shadow_stack(i8* %bitcast396, i32 1)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bitcast398, i32 1)
  call void @make(%struct.move_s* %arrayidx138, i32 %73)
  call void @__softboundcets_deallocate_shadow_stack_space()
  %arrayidx139 = getelementptr inbounds [512 x %struct.move_s]* %ourmoves, i32 0, i64 0
  %74 = load i32* %j, align 4
  %75 = load i32* %icc, align 4
  call void @__softboundcets_allocate_shadow_stack_space(i32 2)
  call void @__softboundcets_store_base_shadow_stack(i8* %bitcast396, i32 1)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bitcast398, i32 1)
  %call140 = call i32 @check_legal(%struct.move_s* %arrayidx139, i32 %74, i32 %75)
  call void @__softboundcets_deallocate_shadow_stack_space()
  %tobool141 = icmp ne i32 %call140, 0
  br i1 %tobool141, label %if.then142, label %if.end143

if.then142:                                       ; preds = %for.body137
  store i32 0, i32* %bishopmates, align 4
  br label %if.end143

if.end143:                                        ; preds = %if.then142, %for.body137
  %arrayidx144 = getelementptr inbounds [512 x %struct.move_s]* %ourmoves, i32 0, i64 0
  %76 = load i32* %j, align 4
  call void @__softboundcets_allocate_shadow_stack_space(i32 2)
  call void @__softboundcets_store_base_shadow_stack(i8* %bitcast396, i32 1)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bitcast398, i32 1)
  call void @unmake(%struct.move_s* %arrayidx144, i32 %76)
  call void @__softboundcets_deallocate_shadow_stack_space()
  br label %for.inc145

for.inc145:                                       ; preds = %if.end143
  %77 = load i32* %j, align 4
  %inc146 = add nsw i32 %77, 1
  store i32 %inc146, i32* %j, align 4
  br label %for.cond132

for.end147:                                       ; preds = %land.end136
  br label %if.end148

if.end148:                                        ; preds = %for.end147, %for.body124
  %arrayidx149 = getelementptr inbounds [512 x %struct.move_s]* %hismoves, i32 0, i64 0
  %78 = load i32* %i, align 4
  call void @__softboundcets_allocate_shadow_stack_space(i32 2)
  call void @__softboundcets_store_base_shadow_stack(i8* %bitcast392, i32 1)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bitcast394, i32 1)
  call void @unmake(%struct.move_s* %arrayidx149, i32 %78)
  call void @__softboundcets_deallocate_shadow_stack_space()
  br label %for.inc150

for.inc150:                                       ; preds = %if.end148
  %79 = load i32* %i, align 4
  %inc151 = add nsw i32 %79, 1
  store i32 %inc151, i32* %i, align 4
  br label %for.cond119

for.end152:                                       ; preds = %land.end123
  %80 = load i32* @white_to_move, align 4
  %tobool153 = icmp ne i32 %80, 0
  %cond154 = select i1 %tobool153, i32 11, i32 12
  %81 = load i32* @white_to_move, align 4
  %tobool155 = icmp ne i32 %81, 0
  %lnot156 = xor i1 %tobool155, true
  %lnot.ext157 = zext i1 %lnot156 to i32
  call void @DropremoveHolding(i32 %cond154, i32 %lnot.ext157)
  br label %if.end158

if.end158:                                        ; preds = %for.end152, %if.end101
  %82 = load i32* @white_to_move, align 4
  %tobool159 = icmp ne i32 %82, 0
  %cond160 = select i1 %tobool159, i32 7, i32 8
  %idxprom161 = sext i32 %cond160 to i64
  %83 = load i32* @white_to_move, align 4
  %tobool162 = icmp ne i32 %83, 0
  %lnot163 = xor i1 %tobool162, true
  %lnot.ext164 = zext i1 %lnot163 to i32
  %idxprom165 = sext i32 %lnot.ext164 to i64
  %arrayidx166 = getelementptr inbounds [2 x [16 x i32]]* @holding, i32 0, i64 %idxprom165
  %arrayidx167 = getelementptr inbounds [16 x i32]* %arrayidx166, i32 0, i64 %idxprom161
  %84 = load i32* %arrayidx167, align 4
  %tobool168 = icmp ne i32 %84, 0
  br i1 %tobool168, label %if.end215, label %if.then169

if.then169:                                       ; preds = %if.end158
  %85 = load i32* @white_to_move, align 4
  %tobool170 = icmp ne i32 %85, 0
  %cond171 = select i1 %tobool170, i32 7, i32 8
  %86 = load i32* @white_to_move, align 4
  %tobool172 = icmp ne i32 %86, 0
  %lnot173 = xor i1 %tobool172, true
  %lnot.ext174 = zext i1 %lnot173 to i32
  call void @DropaddHolding(i32 %cond171, i32 %lnot.ext174)
  %arrayidx175 = getelementptr inbounds [512 x %struct.move_s]* %hismoves, i32 0, i64 0
  call void @__softboundcets_allocate_shadow_stack_space(i32 2)
  call void @__softboundcets_store_base_shadow_stack(i8* %bitcast392, i32 1)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bitcast394, i32 1)
  call void @gen(%struct.move_s* %arrayidx175)
  call void @__softboundcets_deallocate_shadow_stack_space()
  %87 = load i32* @numb_moves, align 4
  store i32 %87, i32* %his_num_moves, align 4
  store i32 0, i32* %i, align 4
  br label %for.cond176

for.cond176:                                      ; preds = %for.inc207, %if.then169
  %88 = load i32* %i, align 4
  %89 = load i32* %his_num_moves, align 4
  %cmp177 = icmp slt i32 %88, %89
  br i1 %cmp177, label %land.rhs178, label %land.end180

land.rhs178:                                      ; preds = %for.cond176
  %90 = load i32* %rookmates, align 4
  %cmp179 = icmp eq i32 %90, 0
  br label %land.end180

land.end180:                                      ; preds = %land.rhs178, %for.cond176
  %91 = phi i1 [ false, %for.cond176 ], [ %cmp179, %land.rhs178 ]
  br i1 %91, label %for.body181, label %for.end209

for.body181:                                      ; preds = %land.end180
  %arrayidx182 = getelementptr inbounds [512 x %struct.move_s]* %hismoves, i32 0, i64 0
  %92 = load i32* %i, align 4
  call void @__softboundcets_allocate_shadow_stack_space(i32 2)
  call void @__softboundcets_store_base_shadow_stack(i8* %bitcast392, i32 1)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bitcast394, i32 1)
  call void @make(%struct.move_s* %arrayidx182, i32 %92)
  call void @__softboundcets_deallocate_shadow_stack_space()
  %arrayidx183 = getelementptr inbounds [512 x %struct.move_s]* %hismoves, i32 0, i64 0
  %93 = load i32* %i, align 4
  %94 = load i32* %ic, align 4
  call void @__softboundcets_allocate_shadow_stack_space(i32 2)
  call void @__softboundcets_store_base_shadow_stack(i8* %bitcast392, i32 1)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bitcast394, i32 1)
  %call184 = call i32 @check_legal(%struct.move_s* %arrayidx183, i32 %93, i32 %94)
  call void @__softboundcets_deallocate_shadow_stack_space()
  %tobool185 = icmp ne i32 %call184, 0
  br i1 %tobool185, label %if.then186, label %if.end205

if.then186:                                       ; preds = %for.body181
  store i32 3, i32* %rookmates, align 4
  %call187 = call i32 @in_check()
  store i32 %call187, i32* %icc, align 4
  %arrayidx188 = getelementptr inbounds [512 x %struct.move_s]* %ourmoves, i32 0, i64 0
  call void @__softboundcets_allocate_shadow_stack_space(i32 2)
  call void @__softboundcets_store_base_shadow_stack(i8* %bitcast396, i32 1)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bitcast398, i32 1)
  call void @gen(%struct.move_s* %arrayidx188)
  call void @__softboundcets_deallocate_shadow_stack_space()
  %95 = load i32* @numb_moves, align 4
  store i32 %95, i32* %our_num_moves, align 4
  store i32 0, i32* %j, align 4
  br label %for.cond189

for.cond189:                                      ; preds = %for.inc202, %if.then186
  %96 = load i32* %j, align 4
  %97 = load i32* %our_num_moves, align 4
  %cmp190 = icmp slt i32 %96, %97
  br i1 %cmp190, label %land.rhs191, label %land.end193

land.rhs191:                                      ; preds = %for.cond189
  %98 = load i32* %rookmates, align 4
  %cmp192 = icmp ne i32 %98, 0
  br label %land.end193

land.end193:                                      ; preds = %land.rhs191, %for.cond189
  %99 = phi i1 [ false, %for.cond189 ], [ %cmp192, %land.rhs191 ]
  br i1 %99, label %for.body194, label %for.end204

for.body194:                                      ; preds = %land.end193
  %arrayidx195 = getelementptr inbounds [512 x %struct.move_s]* %ourmoves, i32 0, i64 0
  %100 = load i32* %j, align 4
  call void @__softboundcets_allocate_shadow_stack_space(i32 2)
  call void @__softboundcets_store_base_shadow_stack(i8* %bitcast396, i32 1)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bitcast398, i32 1)
  call void @make(%struct.move_s* %arrayidx195, i32 %100)
  call void @__softboundcets_deallocate_shadow_stack_space()
  %arrayidx196 = getelementptr inbounds [512 x %struct.move_s]* %ourmoves, i32 0, i64 0
  %101 = load i32* %j, align 4
  %102 = load i32* %icc, align 4
  call void @__softboundcets_allocate_shadow_stack_space(i32 2)
  call void @__softboundcets_store_base_shadow_stack(i8* %bitcast396, i32 1)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bitcast398, i32 1)
  %call197 = call i32 @check_legal(%struct.move_s* %arrayidx196, i32 %101, i32 %102)
  call void @__softboundcets_deallocate_shadow_stack_space()
  %tobool198 = icmp ne i32 %call197, 0
  br i1 %tobool198, label %if.then199, label %if.end200

if.then199:                                       ; preds = %for.body194
  store i32 0, i32* %rookmates, align 4
  br label %if.end200

if.end200:                                        ; preds = %if.then199, %for.body194
  %arrayidx201 = getelementptr inbounds [512 x %struct.move_s]* %ourmoves, i32 0, i64 0
  %103 = load i32* %j, align 4
  call void @__softboundcets_allocate_shadow_stack_space(i32 2)
  call void @__softboundcets_store_base_shadow_stack(i8* %bitcast396, i32 1)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bitcast398, i32 1)
  call void @unmake(%struct.move_s* %arrayidx201, i32 %103)
  call void @__softboundcets_deallocate_shadow_stack_space()
  br label %for.inc202

for.inc202:                                       ; preds = %if.end200
  %104 = load i32* %j, align 4
  %inc203 = add nsw i32 %104, 1
  store i32 %inc203, i32* %j, align 4
  br label %for.cond189

for.end204:                                       ; preds = %land.end193
  br label %if.end205

if.end205:                                        ; preds = %for.end204, %for.body181
  %arrayidx206 = getelementptr inbounds [512 x %struct.move_s]* %hismoves, i32 0, i64 0
  %105 = load i32* %i, align 4
  call void @__softboundcets_allocate_shadow_stack_space(i32 2)
  call void @__softboundcets_store_base_shadow_stack(i8* %bitcast392, i32 1)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bitcast394, i32 1)
  call void @unmake(%struct.move_s* %arrayidx206, i32 %105)
  call void @__softboundcets_deallocate_shadow_stack_space()
  br label %for.inc207

for.inc207:                                       ; preds = %if.end205
  %106 = load i32* %i, align 4
  %inc208 = add nsw i32 %106, 1
  store i32 %inc208, i32* %i, align 4
  br label %for.cond176

for.end209:                                       ; preds = %land.end180
  %107 = load i32* @white_to_move, align 4
  %tobool210 = icmp ne i32 %107, 0
  %cond211 = select i1 %tobool210, i32 7, i32 8
  %108 = load i32* @white_to_move, align 4
  %tobool212 = icmp ne i32 %108, 0
  %lnot213 = xor i1 %tobool212, true
  %lnot.ext214 = zext i1 %lnot213 to i32
  call void @DropremoveHolding(i32 %cond211, i32 %lnot.ext214)
  br label %if.end215

if.end215:                                        ; preds = %for.end209, %if.end158
  %109 = load i32* @white_to_move, align 4
  %tobool216 = icmp ne i32 %109, 0
  %cond217 = select i1 %tobool216, i32 9, i32 10
  %idxprom218 = sext i32 %cond217 to i64
  %110 = load i32* @white_to_move, align 4
  %tobool219 = icmp ne i32 %110, 0
  %lnot220 = xor i1 %tobool219, true
  %lnot.ext221 = zext i1 %lnot220 to i32
  %idxprom222 = sext i32 %lnot.ext221 to i64
  %arrayidx223 = getelementptr inbounds [2 x [16 x i32]]* @holding, i32 0, i64 %idxprom222
  %arrayidx224 = getelementptr inbounds [16 x i32]* %arrayidx223, i32 0, i64 %idxprom218
  %111 = load i32* %arrayidx224, align 4
  %tobool225 = icmp ne i32 %111, 0
  br i1 %tobool225, label %if.end272, label %if.then226

if.then226:                                       ; preds = %if.end215
  %112 = load i32* @white_to_move, align 4
  %tobool227 = icmp ne i32 %112, 0
  %cond228 = select i1 %tobool227, i32 9, i32 10
  %113 = load i32* @white_to_move, align 4
  %tobool229 = icmp ne i32 %113, 0
  %lnot230 = xor i1 %tobool229, true
  %lnot.ext231 = zext i1 %lnot230 to i32
  call void @DropaddHolding(i32 %cond228, i32 %lnot.ext231)
  %arrayidx232 = getelementptr inbounds [512 x %struct.move_s]* %hismoves, i32 0, i64 0
  call void @__softboundcets_allocate_shadow_stack_space(i32 2)
  call void @__softboundcets_store_base_shadow_stack(i8* %bitcast392, i32 1)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bitcast394, i32 1)
  call void @gen(%struct.move_s* %arrayidx232)
  call void @__softboundcets_deallocate_shadow_stack_space()
  %114 = load i32* @numb_moves, align 4
  store i32 %114, i32* %his_num_moves, align 4
  store i32 0, i32* %i, align 4
  br label %for.cond233

for.cond233:                                      ; preds = %for.inc264, %if.then226
  %115 = load i32* %i, align 4
  %116 = load i32* %his_num_moves, align 4
  %cmp234 = icmp slt i32 %115, %116
  br i1 %cmp234, label %land.rhs235, label %land.end237

land.rhs235:                                      ; preds = %for.cond233
  %117 = load i32* %queenmates, align 4
  %cmp236 = icmp eq i32 %117, 0
  br label %land.end237

land.end237:                                      ; preds = %land.rhs235, %for.cond233
  %118 = phi i1 [ false, %for.cond233 ], [ %cmp236, %land.rhs235 ]
  br i1 %118, label %for.body238, label %for.end266

for.body238:                                      ; preds = %land.end237
  %arrayidx239 = getelementptr inbounds [512 x %struct.move_s]* %hismoves, i32 0, i64 0
  %119 = load i32* %i, align 4
  call void @__softboundcets_allocate_shadow_stack_space(i32 2)
  call void @__softboundcets_store_base_shadow_stack(i8* %bitcast392, i32 1)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bitcast394, i32 1)
  call void @make(%struct.move_s* %arrayidx239, i32 %119)
  call void @__softboundcets_deallocate_shadow_stack_space()
  %arrayidx240 = getelementptr inbounds [512 x %struct.move_s]* %hismoves, i32 0, i64 0
  %120 = load i32* %i, align 4
  %121 = load i32* %ic, align 4
  call void @__softboundcets_allocate_shadow_stack_space(i32 2)
  call void @__softboundcets_store_base_shadow_stack(i8* %bitcast392, i32 1)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bitcast394, i32 1)
  %call241 = call i32 @check_legal(%struct.move_s* %arrayidx240, i32 %120, i32 %121)
  call void @__softboundcets_deallocate_shadow_stack_space()
  %tobool242 = icmp ne i32 %call241, 0
  br i1 %tobool242, label %if.then243, label %if.end262

if.then243:                                       ; preds = %for.body238
  store i32 3, i32* %queenmates, align 4
  %call244 = call i32 @in_check()
  store i32 %call244, i32* %icc, align 4
  %arrayidx245 = getelementptr inbounds [512 x %struct.move_s]* %ourmoves, i32 0, i64 0
  call void @__softboundcets_allocate_shadow_stack_space(i32 2)
  call void @__softboundcets_store_base_shadow_stack(i8* %bitcast396, i32 1)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bitcast398, i32 1)
  call void @gen(%struct.move_s* %arrayidx245)
  call void @__softboundcets_deallocate_shadow_stack_space()
  %122 = load i32* @numb_moves, align 4
  store i32 %122, i32* %our_num_moves, align 4
  store i32 0, i32* %j, align 4
  br label %for.cond246

for.cond246:                                      ; preds = %for.inc259, %if.then243
  %123 = load i32* %j, align 4
  %124 = load i32* %our_num_moves, align 4
  %cmp247 = icmp slt i32 %123, %124
  br i1 %cmp247, label %land.rhs248, label %land.end250

land.rhs248:                                      ; preds = %for.cond246
  %125 = load i32* %queenmates, align 4
  %cmp249 = icmp ne i32 %125, 0
  br label %land.end250

land.end250:                                      ; preds = %land.rhs248, %for.cond246
  %126 = phi i1 [ false, %for.cond246 ], [ %cmp249, %land.rhs248 ]
  br i1 %126, label %for.body251, label %for.end261

for.body251:                                      ; preds = %land.end250
  %arrayidx252 = getelementptr inbounds [512 x %struct.move_s]* %ourmoves, i32 0, i64 0
  %127 = load i32* %j, align 4
  call void @__softboundcets_allocate_shadow_stack_space(i32 2)
  call void @__softboundcets_store_base_shadow_stack(i8* %bitcast396, i32 1)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bitcast398, i32 1)
  call void @make(%struct.move_s* %arrayidx252, i32 %127)
  call void @__softboundcets_deallocate_shadow_stack_space()
  %arrayidx253 = getelementptr inbounds [512 x %struct.move_s]* %ourmoves, i32 0, i64 0
  %128 = load i32* %j, align 4
  %129 = load i32* %icc, align 4
  call void @__softboundcets_allocate_shadow_stack_space(i32 2)
  call void @__softboundcets_store_base_shadow_stack(i8* %bitcast396, i32 1)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bitcast398, i32 1)
  %call254 = call i32 @check_legal(%struct.move_s* %arrayidx253, i32 %128, i32 %129)
  call void @__softboundcets_deallocate_shadow_stack_space()
  %tobool255 = icmp ne i32 %call254, 0
  br i1 %tobool255, label %if.then256, label %if.end257

if.then256:                                       ; preds = %for.body251
  store i32 0, i32* %queenmates, align 4
  br label %if.end257

if.end257:                                        ; preds = %if.then256, %for.body251
  %arrayidx258 = getelementptr inbounds [512 x %struct.move_s]* %ourmoves, i32 0, i64 0
  %130 = load i32* %j, align 4
  call void @__softboundcets_allocate_shadow_stack_space(i32 2)
  call void @__softboundcets_store_base_shadow_stack(i8* %bitcast396, i32 1)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bitcast398, i32 1)
  call void @unmake(%struct.move_s* %arrayidx258, i32 %130)
  call void @__softboundcets_deallocate_shadow_stack_space()
  br label %for.inc259

for.inc259:                                       ; preds = %if.end257
  %131 = load i32* %j, align 4
  %inc260 = add nsw i32 %131, 1
  store i32 %inc260, i32* %j, align 4
  br label %for.cond246

for.end261:                                       ; preds = %land.end250
  br label %if.end262

if.end262:                                        ; preds = %for.end261, %for.body238
  %arrayidx263 = getelementptr inbounds [512 x %struct.move_s]* %hismoves, i32 0, i64 0
  %132 = load i32* %i, align 4
  call void @__softboundcets_allocate_shadow_stack_space(i32 2)
  call void @__softboundcets_store_base_shadow_stack(i8* %bitcast392, i32 1)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bitcast394, i32 1)
  call void @unmake(%struct.move_s* %arrayidx263, i32 %132)
  call void @__softboundcets_deallocate_shadow_stack_space()
  br label %for.inc264

for.inc264:                                       ; preds = %if.end262
  %133 = load i32* %i, align 4
  %inc265 = add nsw i32 %133, 1
  store i32 %inc265, i32* %i, align 4
  br label %for.cond233

for.end266:                                       ; preds = %land.end237
  %134 = load i32* @white_to_move, align 4
  %tobool267 = icmp ne i32 %134, 0
  %cond268 = select i1 %tobool267, i32 9, i32 10
  %135 = load i32* @white_to_move, align 4
  %tobool269 = icmp ne i32 %135, 0
  %lnot270 = xor i1 %tobool269, true
  %lnot.ext271 = zext i1 %lnot270 to i32
  call void @DropremoveHolding(i32 %cond268, i32 %lnot.ext271)
  br label %if.end272

if.end272:                                        ; preds = %for.end266, %if.end215
  %136 = load i32* %pawnmates, align 4
  %137 = load i32* @CheckBadFlow.pawnmated, align 4
  %cmp273 = icmp ne i32 %136, %137
  br i1 %cmp273, label %if.then274, label %if.end283

if.then274:                                       ; preds = %if.end272
  %138 = load i32* %pawnmates, align 4
  %cmp275 = icmp eq i32 %138, 3
  br i1 %cmp275, label %if.then276, label %if.else

if.then276:                                       ; preds = %if.then274
  store i32 1, i32* %pawnwarn, align 4
  br label %if.end282

if.else:                                          ; preds = %if.then274
  %139 = load i32* %pawnmates, align 4
  %cmp277 = icmp eq i32 %139, 0
  br i1 %cmp277, label %land.lhs.true, label %if.end281

land.lhs.true:                                    ; preds = %if.else
  %140 = load i32* @CheckBadFlow.pawnmated, align 4
  %cmp278 = icmp eq i32 %140, 0
  br i1 %cmp278, label %if.then279, label %if.end281

if.then279:                                       ; preds = %land.lhs.true
  %call280 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([41 x i8]* @.str72, i32 0, i32 0))
  store i32 1, i32* %othermove, align 4
  br label %if.end281

if.end281:                                        ; preds = %if.then279, %land.lhs.true, %if.else
  br label %if.end282

if.end282:                                        ; preds = %if.end281, %if.then276
  br label %if.end283

if.end283:                                        ; preds = %if.end282, %if.end272
  %141 = load i32* %knightmates, align 4
  %142 = load i32* @CheckBadFlow.knightmated, align 4
  %cmp284 = icmp ne i32 %141, %142
  br i1 %cmp284, label %if.then285, label %if.end296

if.then285:                                       ; preds = %if.end283
  %143 = load i32* %knightmates, align 4
  %cmp286 = icmp eq i32 %143, 3
  br i1 %cmp286, label %if.then287, label %if.else288

if.then287:                                       ; preds = %if.then285
  store i32 1, i32* %knightwarn, align 4
  br label %if.end295

if.else288:                                       ; preds = %if.then285
  %144 = load i32* %knightmates, align 4
  %cmp289 = icmp eq i32 %144, 0
  br i1 %cmp289, label %land.lhs.true290, label %if.end294

land.lhs.true290:                                 ; preds = %if.else288
  %145 = load i32* @CheckBadFlow.knightmated, align 4
  %cmp291 = icmp eq i32 %145, 0
  br i1 %cmp291, label %if.then292, label %if.end294

if.then292:                                       ; preds = %land.lhs.true290
  %call293 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([41 x i8]* @.str73, i32 0, i32 0))
  store i32 1, i32* %othermove, align 4
  br label %if.end294

if.end294:                                        ; preds = %if.then292, %land.lhs.true290, %if.else288
  br label %if.end295

if.end295:                                        ; preds = %if.end294, %if.then287
  br label %if.end296

if.end296:                                        ; preds = %if.end295, %if.end283
  %146 = load i32* %bishopmates, align 4
  %147 = load i32* @CheckBadFlow.bishopmated, align 4
  %cmp297 = icmp ne i32 %146, %147
  br i1 %cmp297, label %if.then298, label %if.end309

if.then298:                                       ; preds = %if.end296
  %148 = load i32* %bishopmates, align 4
  %cmp299 = icmp eq i32 %148, 3
  br i1 %cmp299, label %if.then300, label %if.else301

if.then300:                                       ; preds = %if.then298
  store i32 1, i32* %bishopwarn, align 4
  br label %if.end308

if.else301:                                       ; preds = %if.then298
  %149 = load i32* %bishopmates, align 4
  %cmp302 = icmp eq i32 %149, 0
  br i1 %cmp302, label %land.lhs.true303, label %if.end307

land.lhs.true303:                                 ; preds = %if.else301
  %150 = load i32* @CheckBadFlow.bishopmated, align 4
  %cmp304 = icmp eq i32 %150, 0
  br i1 %cmp304, label %if.then305, label %if.end307

if.then305:                                       ; preds = %land.lhs.true303
  %call306 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([41 x i8]* @.str74, i32 0, i32 0))
  store i32 1, i32* %othermove, align 4
  br label %if.end307

if.end307:                                        ; preds = %if.then305, %land.lhs.true303, %if.else301
  br label %if.end308

if.end308:                                        ; preds = %if.end307, %if.then300
  br label %if.end309

if.end309:                                        ; preds = %if.end308, %if.end296
  %151 = load i32* %rookmates, align 4
  %152 = load i32* @CheckBadFlow.rookmated, align 4
  %cmp310 = icmp ne i32 %151, %152
  br i1 %cmp310, label %if.then311, label %if.end322

if.then311:                                       ; preds = %if.end309
  %153 = load i32* %rookmates, align 4
  %cmp312 = icmp eq i32 %153, 3
  br i1 %cmp312, label %if.then313, label %if.else314

if.then313:                                       ; preds = %if.then311
  store i32 1, i32* %rookwarn, align 4
  br label %if.end321

if.else314:                                       ; preds = %if.then311
  %154 = load i32* %rookmates, align 4
  %cmp315 = icmp eq i32 %154, 0
  br i1 %cmp315, label %land.lhs.true316, label %if.end320

land.lhs.true316:                                 ; preds = %if.else314
  %155 = load i32* @CheckBadFlow.rookmated, align 4
  %cmp317 = icmp eq i32 %155, 0
  br i1 %cmp317, label %if.then318, label %if.end320

if.then318:                                       ; preds = %land.lhs.true316
  %call319 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([41 x i8]* @.str75, i32 0, i32 0))
  store i32 1, i32* %othermove, align 4
  br label %if.end320

if.end320:                                        ; preds = %if.then318, %land.lhs.true316, %if.else314
  br label %if.end321

if.end321:                                        ; preds = %if.end320, %if.then313
  br label %if.end322

if.end322:                                        ; preds = %if.end321, %if.end309
  %156 = load i32* %queenmates, align 4
  %157 = load i32* @CheckBadFlow.queenmated, align 4
  %cmp323 = icmp ne i32 %156, %157
  br i1 %cmp323, label %if.then324, label %if.end335

if.then324:                                       ; preds = %if.end322
  %158 = load i32* %queenmates, align 4
  %cmp325 = icmp eq i32 %158, 3
  br i1 %cmp325, label %if.then326, label %if.else327

if.then326:                                       ; preds = %if.then324
  store i32 1, i32* %queenwarn, align 4
  br label %if.end334

if.else327:                                       ; preds = %if.then324
  %159 = load i32* %queenmates, align 4
  %cmp328 = icmp eq i32 %159, 0
  br i1 %cmp328, label %land.lhs.true329, label %if.end333

land.lhs.true329:                                 ; preds = %if.else327
  %160 = load i32* @CheckBadFlow.queenmated, align 4
  %cmp330 = icmp eq i32 %160, 0
  br i1 %cmp330, label %if.then331, label %if.end333

if.then331:                                       ; preds = %land.lhs.true329
  %call332 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([41 x i8]* @.str76, i32 0, i32 0))
  store i32 1, i32* %othermove, align 4
  br label %if.end333

if.end333:                                        ; preds = %if.then331, %land.lhs.true329, %if.else327
  br label %if.end334

if.end334:                                        ; preds = %if.end333, %if.then326
  br label %if.end335

if.end335:                                        ; preds = %if.end334, %if.end322
  %161 = load i32* %pawnwarn, align 4
  %tobool336 = icmp ne i32 %161, 0
  br i1 %tobool336, label %if.then337, label %if.end339

if.then337:                                       ; preds = %if.end335
  %call338 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([20 x i8]* @.str77, i32 0, i32 0))
  br label %if.end339

if.end339:                                        ; preds = %if.then337, %if.end335
  %162 = load i32* %knightwarn, align 4
  %tobool340 = icmp ne i32 %162, 0
  br i1 %tobool340, label %if.then341, label %if.end343

if.then341:                                       ; preds = %if.end339
  %call342 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([20 x i8]* @.str78, i32 0, i32 0))
  br label %if.end343

if.end343:                                        ; preds = %if.then341, %if.end339
  %163 = load i32* %bishopwarn, align 4
  %tobool344 = icmp ne i32 %163, 0
  br i1 %tobool344, label %if.then345, label %if.end347

if.then345:                                       ; preds = %if.end343
  %call346 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([20 x i8]* @.str79, i32 0, i32 0))
  br label %if.end347

if.end347:                                        ; preds = %if.then345, %if.end343
  %164 = load i32* %rookwarn, align 4
  %tobool348 = icmp ne i32 %164, 0
  br i1 %tobool348, label %if.then349, label %if.end351

if.then349:                                       ; preds = %if.end347
  %call350 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([20 x i8]* @.str80, i32 0, i32 0))
  br label %if.end351

if.end351:                                        ; preds = %if.then349, %if.end347
  %165 = load i32* %queenwarn, align 4
  %tobool352 = icmp ne i32 %165, 0
  br i1 %tobool352, label %if.then353, label %if.end355

if.then353:                                       ; preds = %if.end351
  %call354 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([20 x i8]* @.str81, i32 0, i32 0))
  br label %if.end355

if.end355:                                        ; preds = %if.then353, %if.end351
  %166 = load i32* @piecedead, align 4
  %tobool356 = icmp ne i32 %166, 0
  br i1 %tobool356, label %land.lhs.true357, label %if.end362

land.lhs.true357:                                 ; preds = %if.end355
  %167 = load i32* %othermove, align 4
  %tobool358 = icmp ne i32 %167, 0
  br i1 %tobool358, label %if.then359, label %if.end362

if.then359:                                       ; preds = %land.lhs.true357
  store i32 0, i32* @piecedead, align 4
  %call360 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([17 x i8]* @.str82, i32 0, i32 0))
  %call361 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([18 x i8]* @.str83, i32 0, i32 0))
  store i32 0, i32* @go_fast, align 4
  br label %if.end362

if.end362:                                        ; preds = %if.then359, %land.lhs.true357, %if.end355
  %168 = load i32* %pawnmates, align 4
  %tobool363 = icmp ne i32 %168, 0
  br i1 %tobool363, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.end362
  %169 = load i32* %pawnmates, align 4
  store i32 %169, i32* @CheckBadFlow.pawnmated, align 4
  br label %cond.end

cond.false:                                       ; preds = %if.end362
  %170 = load i32* @CheckBadFlow.pawnmated, align 4
  %dec = add nsw i32 %170, -1
  store i32 %dec, i32* @CheckBadFlow.pawnmated, align 4
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond364 = phi i32 [ %169, %cond.true ], [ %170, %cond.false ]
  %171 = load i32* %bishopmates, align 4
  %tobool365 = icmp ne i32 %171, 0
  br i1 %tobool365, label %cond.true366, label %cond.false367

cond.true366:                                     ; preds = %cond.end
  %172 = load i32* %bishopmates, align 4
  store i32 %172, i32* @CheckBadFlow.bishopmated, align 4
  br label %cond.end369

cond.false367:                                    ; preds = %cond.end
  %173 = load i32* @CheckBadFlow.bishopmated, align 4
  %dec368 = add nsw i32 %173, -1
  store i32 %dec368, i32* @CheckBadFlow.bishopmated, align 4
  br label %cond.end369

cond.end369:                                      ; preds = %cond.false367, %cond.true366
  %cond370 = phi i32 [ %172, %cond.true366 ], [ %173, %cond.false367 ]
  %174 = load i32* %rookmates, align 4
  %tobool371 = icmp ne i32 %174, 0
  br i1 %tobool371, label %cond.true372, label %cond.false373

cond.true372:                                     ; preds = %cond.end369
  %175 = load i32* %rookmates, align 4
  store i32 %175, i32* @CheckBadFlow.rookmated, align 4
  br label %cond.end375

cond.false373:                                    ; preds = %cond.end369
  %176 = load i32* @CheckBadFlow.rookmated, align 4
  %dec374 = add nsw i32 %176, -1
  store i32 %dec374, i32* @CheckBadFlow.rookmated, align 4
  br label %cond.end375

cond.end375:                                      ; preds = %cond.false373, %cond.true372
  %cond376 = phi i32 [ %175, %cond.true372 ], [ %176, %cond.false373 ]
  %177 = load i32* %queenmates, align 4
  %tobool377 = icmp ne i32 %177, 0
  br i1 %tobool377, label %cond.true378, label %cond.false379

cond.true378:                                     ; preds = %cond.end375
  %178 = load i32* %queenmates, align 4
  store i32 %178, i32* @CheckBadFlow.queenmated, align 4
  br label %cond.end381

cond.false379:                                    ; preds = %cond.end375
  %179 = load i32* @CheckBadFlow.queenmated, align 4
  %dec380 = add nsw i32 %179, -1
  store i32 %dec380, i32* @CheckBadFlow.queenmated, align 4
  br label %cond.end381

cond.end381:                                      ; preds = %cond.false379, %cond.true378
  %cond382 = phi i32 [ %178, %cond.true378 ], [ %179, %cond.false379 ]
  %180 = load i32* %knightmates, align 4
  %tobool383 = icmp ne i32 %180, 0
  br i1 %tobool383, label %cond.true384, label %cond.false385

cond.true384:                                     ; preds = %cond.end381
  %181 = load i32* %knightmates, align 4
  store i32 %181, i32* @CheckBadFlow.knightmated, align 4
  br label %cond.end387

cond.false385:                                    ; preds = %cond.end381
  %182 = load i32* @CheckBadFlow.knightmated, align 4
  %dec386 = add nsw i32 %182, -1
  store i32 %dec386, i32* @CheckBadFlow.knightmated, align 4
  br label %cond.end387

cond.end387:                                      ; preds = %cond.false385, %cond.true384
  %cond388 = phi i32 [ %181, %cond.true384 ], [ %182, %cond.false385 ]
  br label %return

return:                                           ; preds = %cond.end387, %if.then
  ret void
}

; Function Attrs: nounwind uwtable
define internal i8* @Xmalloc(i32 %size) #0 {
entry:
  %base.alloca = alloca i8*
  %bound.alloca = alloca i8*
  %size.addr = alloca i32, align 4
  %size.addr1 = bitcast i32* %size.addr to i32*
  %bitcast = bitcast i32* %size.addr to i8*
  %mtmp = getelementptr i32* %size.addr1, i32 1
  %bitcast2 = bitcast i32* %mtmp to i8*
  %oldtop = alloca i32, align 4
  %oldtop3 = bitcast i32* %oldtop to i32*
  %bitcast4 = bitcast i32* %oldtop to i8*
  %mtmp5 = getelementptr i32* %oldtop3, i32 1
  %bitcast6 = bitcast i32* %mtmp5 to i8*
  store i32 %size, i32* %size.addr, align 4
  %0 = load i32* @bufftop, align 4
  store i32 %0, i32* %oldtop, align 4
  %1 = load i32* %size.addr, align 4
  %2 = load i32* @bufftop, align 4
  %add = add nsw i32 %2, %1
  store i32 %add, i32* @bufftop, align 4
  %3 = load i32* %oldtop, align 4
  %idxprom = sext i32 %3 to i64
  %4 = load i8** @membuff, align 8
  %bitcast7 = bitcast i8** @membuff to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast7, i8** %base.alloca, i8** %bound.alloca)
  %base.load = load i8** %base.alloca
  %bound.load = load i8** %bound.alloca
  %arrayidx = getelementptr inbounds i8* %4, i64 %idxprom
  call void @__softboundcets_store_base_shadow_stack(i8* %base.load, i32 0)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bound.load, i32 0)
  ret i8* %arrayidx
}

; Function Attrs: nounwind uwtable
define internal void @Xfree() #0 {
entry:
  store i32 0, i32* @bufftop, align 4
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @freenodes(%struct.node* %node) #0 {
entry:
  %base.alloca88 = alloca i8*
  %bound.alloca89 = alloca i8*
  %base.alloca83 = alloca i8*
  %bound.alloca84 = alloca i8*
  %base.alloca78 = alloca i8*
  %bound.alloca79 = alloca i8*
  %base.alloca73 = alloca i8*
  %bound.alloca74 = alloca i8*
  %base.alloca68 = alloca i8*
  %bound.alloca69 = alloca i8*
  %base.alloca63 = alloca i8*
  %bound.alloca64 = alloca i8*
  %base.alloca58 = alloca i8*
  %bound.alloca59 = alloca i8*
  %base.alloca53 = alloca i8*
  %bound.alloca54 = alloca i8*
  %base.alloca48 = alloca i8*
  %bound.alloca49 = alloca i8*
  %base.alloca43 = alloca i8*
  %bound.alloca44 = alloca i8*
  %base.alloca38 = alloca i8*
  %bound.alloca39 = alloca i8*
  %base.alloca33 = alloca i8*
  %bound.alloca34 = alloca i8*
  %base.alloca28 = alloca i8*
  %bound.alloca29 = alloca i8*
  %base.alloca = alloca i8*
  %bound.alloca = alloca i8*
  %0 = call i8* @__softboundcets_load_base_shadow_stack(i32 1)
  %1 = call i8* @__softboundcets_load_bound_shadow_stack(i32 1)
  %node.addr = alloca %struct.node*, align 8
  %node.addr20 = bitcast %struct.node** %node.addr to %struct.node**
  %bitcast = bitcast %struct.node** %node.addr to i8*
  %mtmp = getelementptr %struct.node** %node.addr20, i32 1
  %bitcast21 = bitcast %struct.node** %mtmp to i8*
  %i = alloca i32, align 4
  %i22 = bitcast i32* %i to i32*
  %bitcast23 = bitcast i32* %i to i8*
  %mtmp24 = getelementptr i32* %i22, i32 1
  %bitcast25 = bitcast i32* %mtmp24 to i8*
  store %struct.node* %node, %struct.node** %node.addr, align 8
  %bitcast92 = bitcast %struct.node** %node.addr to i8*
  call void @__softboundcets_metadata_store(i8* %bitcast92, i8* %0, i8* %1)
  %2 = load %struct.node** %node.addr, align 8
  %bitcast26 = bitcast %struct.node** %node.addr to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast26, i8** %base.alloca, i8** %bound.alloca)
  %base.load = load i8** %base.alloca
  %bound.load = load i8** %bound.alloca
  %tobool = icmp ne %struct.node* %2, null
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  br label %return

if.end:                                           ; preds = %entry
  %3 = load %struct.node** %node.addr, align 8
  %bitcast27 = bitcast %struct.node** %node.addr to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast27, i8** %base.alloca28, i8** %bound.alloca29)
  %base.load30 = load i8** %base.alloca28
  %bound.load31 = load i8** %bound.alloca29
  %children = getelementptr inbounds %struct.node* %3, i32 0, i32 6
  %4 = load %struct.node*** %children, align 8
  %bitcast32 = bitcast %struct.node*** %children to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast32, i8** %base.alloca33, i8** %bound.alloca34)
  %base.load35 = load i8** %base.alloca33
  %bound.load36 = load i8** %bound.alloca34
  %tobool1 = icmp ne %struct.node** %4, null
  br i1 %tobool1, label %if.then2, label %if.end19

if.then2:                                         ; preds = %if.end
  %5 = load %struct.node** %node.addr, align 8
  %bitcast37 = bitcast %struct.node** %node.addr to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast37, i8** %base.alloca38, i8** %bound.alloca39)
  %base.load40 = load i8** %base.alloca38
  %bound.load41 = load i8** %bound.alloca39
  %num_children = getelementptr inbounds %struct.node* %5, i32 0, i32 1
  %6 = load i8* %num_children, align 1
  %conv = zext i8 %6 to i32
  %cmp = icmp sgt i32 %conv, 0
  br i1 %cmp, label %if.then4, label %if.end18

if.then4:                                         ; preds = %if.then2
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.then4
  %7 = load i32* %i, align 4
  %8 = load %struct.node** %node.addr, align 8
  %bitcast47 = bitcast %struct.node** %node.addr to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast47, i8** %base.alloca48, i8** %bound.alloca49)
  %base.load50 = load i8** %base.alloca48
  %bound.load51 = load i8** %bound.alloca49
  %num_children5 = getelementptr inbounds %struct.node* %8, i32 0, i32 1
  %9 = load i8* %num_children5, align 1
  %conv6 = zext i8 %9 to i32
  %cmp7 = icmp slt i32 %7, %conv6
  br i1 %cmp7, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %10 = load i32* %i, align 4
  %idxprom = sext i32 %10 to i64
  %11 = load %struct.node** %node.addr, align 8
  %bitcast52 = bitcast %struct.node** %node.addr to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast52, i8** %base.alloca53, i8** %bound.alloca54)
  %base.load55 = load i8** %base.alloca53
  %bound.load56 = load i8** %bound.alloca54
  %children9 = getelementptr inbounds %struct.node* %11, i32 0, i32 6
  %12 = load %struct.node*** %children9, align 8
  %bitcast57 = bitcast %struct.node*** %children9 to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast57, i8** %base.alloca58, i8** %bound.alloca59)
  %base.load60 = load i8** %base.alloca58
  %bound.load61 = load i8** %bound.alloca59
  %arrayidx = getelementptr inbounds %struct.node** %12, i64 %idxprom
  %13 = load %struct.node** %arrayidx, align 8
  %bitcast62 = bitcast %struct.node** %arrayidx to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast62, i8** %base.alloca63, i8** %bound.alloca64)
  %base.load65 = load i8** %base.alloca63
  %bound.load66 = load i8** %bound.alloca64
  %cmp10 = icmp ne %struct.node* %13, null
  br i1 %cmp10, label %if.then12, label %if.end16

if.then12:                                        ; preds = %for.body
  %14 = load i32* %i, align 4
  %idxprom13 = sext i32 %14 to i64
  %15 = load %struct.node** %node.addr, align 8
  %bitcast77 = bitcast %struct.node** %node.addr to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast77, i8** %base.alloca78, i8** %bound.alloca79)
  %base.load80 = load i8** %base.alloca78
  %bound.load81 = load i8** %bound.alloca79
  %children14 = getelementptr inbounds %struct.node* %15, i32 0, i32 6
  %16 = load %struct.node*** %children14, align 8
  %bitcast82 = bitcast %struct.node*** %children14 to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast82, i8** %base.alloca83, i8** %bound.alloca84)
  %base.load85 = load i8** %base.alloca83
  %bound.load86 = load i8** %bound.alloca84
  %arrayidx15 = getelementptr inbounds %struct.node** %16, i64 %idxprom13
  %17 = load %struct.node** %arrayidx15, align 8
  %bitcast87 = bitcast %struct.node** %arrayidx15 to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast87, i8** %base.alloca88, i8** %bound.alloca89)
  %base.load90 = load i8** %base.alloca88
  %bound.load91 = load i8** %bound.alloca89
  call void @__softboundcets_allocate_shadow_stack_space(i32 2)
  call void @__softboundcets_store_base_shadow_stack(i8* %base.load90, i32 1)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bound.load91, i32 1)
  call void @freenodes(%struct.node* %17)
  call void @__softboundcets_deallocate_shadow_stack_space()
  br label %if.end16

if.end16:                                         ; preds = %if.then12, %for.body
  br label %for.inc

for.inc:                                          ; preds = %if.end16
  %18 = load i32* %i, align 4
  %inc = add nsw i32 %18, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %19 = load %struct.node** %node.addr, align 8
  %bitcast67 = bitcast %struct.node** %node.addr to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast67, i8** %base.alloca68, i8** %bound.alloca69)
  %base.load70 = load i8** %base.alloca68
  %bound.load71 = load i8** %bound.alloca69
  %children17 = getelementptr inbounds %struct.node* %19, i32 0, i32 6
  %20 = load %struct.node*** %children17, align 8
  %bitcast72 = bitcast %struct.node*** %children17 to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast72, i8** %base.alloca73, i8** %bound.alloca74)
  %base.load75 = load i8** %base.alloca73
  %bound.load76 = load i8** %bound.alloca74
  %21 = bitcast %struct.node** %20 to i8*
  call void @__softboundcets_allocate_shadow_stack_space(i32 2)
  call void @__softboundcets_store_base_shadow_stack(i8* %base.load75, i32 1)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bound.load76, i32 1)
  call void @softboundcets_free(i8* %21) #1
  call void @__softboundcets_deallocate_shadow_stack_space()
  br label %if.end18

if.end18:                                         ; preds = %for.end, %if.then2
  br label %if.end19

if.end19:                                         ; preds = %if.end18, %if.end
  %22 = load %struct.node** %node.addr, align 8
  %bitcast42 = bitcast %struct.node** %node.addr to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast42, i8** %base.alloca43, i8** %bound.alloca44)
  %base.load45 = load i8** %base.alloca43
  %bound.load46 = load i8** %bound.alloca44
  %23 = bitcast %struct.node* %22 to i8*
  call void @__softboundcets_allocate_shadow_stack_space(i32 2)
  call void @__softboundcets_store_base_shadow_stack(i8* %base.load45, i32 1)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bound.load46, i32 1)
  call void @softboundcets_free(i8* %23) #1
  call void @__softboundcets_deallocate_shadow_stack_space()
  br label %return

return:                                           ; preds = %if.end19, %if.then
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @pn_eval(%struct.node* %this) #0 {
entry:
  %base.alloca14 = alloca i8*
  %bound.alloca15 = alloca i8*
  %base.alloca9 = alloca i8*
  %bound.alloca10 = alloca i8*
  %base.alloca = alloca i8*
  %bound.alloca = alloca i8*
  %0 = call i8* @__softboundcets_load_base_shadow_stack(i32 1)
  %1 = call i8* @__softboundcets_load_bound_shadow_stack(i32 1)
  %this.addr = alloca %struct.node*, align 8
  %this.addr5 = bitcast %struct.node** %this.addr to %struct.node**
  %bitcast = bitcast %struct.node** %this.addr to i8*
  %mtmp = getelementptr %struct.node** %this.addr5, i32 1
  %bitcast6 = bitcast %struct.node** %mtmp to i8*
  store %struct.node* %this, %struct.node** %this.addr, align 8
  %bitcast18 = bitcast %struct.node** %this.addr to i8*
  call void @__softboundcets_metadata_store(i8* %bitcast18, i8* %0, i8* %1)
  %2 = load i32* @Variant, align 4
  %cmp = icmp eq i32 %2, 3
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  %3 = load %struct.node** %this.addr, align 8
  %bitcast7 = bitcast %struct.node** %this.addr to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast7, i8** %base.alloca, i8** %bound.alloca)
  %base.load = load i8** %base.alloca
  %bound.load = load i8** %bound.alloca
  call void @__softboundcets_allocate_shadow_stack_space(i32 2)
  call void @__softboundcets_store_base_shadow_stack(i8* %base.load, i32 1)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bound.load, i32 1)
  call void @suicide_pn_eval(%struct.node* %3)
  call void @__softboundcets_deallocate_shadow_stack_space()
  br label %if.end4

if.else:                                          ; preds = %entry
  %4 = load i32* @Variant, align 4
  %cmp1 = icmp eq i32 %4, 4
  br i1 %cmp1, label %if.then2, label %if.else3

if.then2:                                         ; preds = %if.else
  %5 = load %struct.node** %this.addr, align 8
  %bitcast8 = bitcast %struct.node** %this.addr to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast8, i8** %base.alloca9, i8** %bound.alloca10)
  %base.load11 = load i8** %base.alloca9
  %bound.load12 = load i8** %bound.alloca10
  call void @__softboundcets_allocate_shadow_stack_space(i32 2)
  call void @__softboundcets_store_base_shadow_stack(i8* %base.load11, i32 1)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bound.load12, i32 1)
  call void @losers_pn_eval(%struct.node* %5)
  call void @__softboundcets_deallocate_shadow_stack_space()
  br label %if.end

if.else3:                                         ; preds = %if.else
  %6 = load %struct.node** %this.addr, align 8
  %bitcast13 = bitcast %struct.node** %this.addr to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast13, i8** %base.alloca14, i8** %bound.alloca15)
  %base.load16 = load i8** %base.alloca14
  %bound.load17 = load i8** %bound.alloca15
  call void @__softboundcets_allocate_shadow_stack_space(i32 2)
  call void @__softboundcets_store_base_shadow_stack(i8* %base.load16, i32 1)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bound.load17, i32 1)
  call void @std_pn_eval(%struct.node* %6)
  call void @__softboundcets_deallocate_shadow_stack_space()
  br label %if.end

if.end:                                           ; preds = %if.else3, %if.then2
  br label %if.end4

if.end4:                                          ; preds = %if.end, %if.then
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @suicide_pn_eval(%struct.node* %this) #0 {
entry:
  %base.alloca75 = alloca i8*
  %bound.alloca76 = alloca i8*
  %base.alloca70 = alloca i8*
  %bound.alloca71 = alloca i8*
  %base.alloca65 = alloca i8*
  %bound.alloca66 = alloca i8*
  %base.alloca60 = alloca i8*
  %bound.alloca61 = alloca i8*
  %base.alloca55 = alloca i8*
  %bound.alloca56 = alloca i8*
  %base.alloca = alloca i8*
  %bound.alloca = alloca i8*
  %0 = call i8* @__softboundcets_load_base_shadow_stack(i32 1)
  %1 = call i8* @__softboundcets_load_bound_shadow_stack(i32 1)
  %this.addr = alloca %struct.node*, align 8
  %this.addr31 = bitcast %struct.node** %this.addr to %struct.node**
  %bitcast = bitcast %struct.node** %this.addr to i8*
  %mtmp = getelementptr %struct.node** %this.addr31, i32 1
  %bitcast32 = bitcast %struct.node** %mtmp to i8*
  %j = alloca i32, align 4
  %j33 = bitcast i32* %j to i32*
  %bitcast34 = bitcast i32* %j to i8*
  %mtmp35 = getelementptr i32* %j33, i32 1
  %bitcast36 = bitcast i32* %mtmp35 to i8*
  %a = alloca i32, align 4
  %a37 = bitcast i32* %a to i32*
  %bitcast38 = bitcast i32* %a to i8*
  %mtmp39 = getelementptr i32* %a37, i32 1
  %bitcast40 = bitcast i32* %mtmp39 to i8*
  %i = alloca i32, align 4
  %i41 = bitcast i32* %i to i32*
  %bitcast42 = bitcast i32* %i to i8*
  %mtmp43 = getelementptr i32* %i41, i32 1
  %bitcast44 = bitcast i32* %mtmp43 to i8*
  %wp = alloca i32, align 4
  %wp45 = bitcast i32* %wp to i32*
  %bitcast46 = bitcast i32* %wp to i8*
  %mtmp47 = getelementptr i32* %wp45, i32 1
  %bitcast48 = bitcast i32* %mtmp47 to i8*
  %bp = alloca i32, align 4
  %bp49 = bitcast i32* %bp to i32*
  %bitcast50 = bitcast i32* %bp to i8*
  %mtmp51 = getelementptr i32* %bp49, i32 1
  %bitcast52 = bitcast i32* %mtmp51 to i8*
  store %struct.node* %this, %struct.node** %this.addr, align 8
  %bitcast79 = bitcast %struct.node** %this.addr to i8*
  call void @__softboundcets_metadata_store(i8* %bitcast79, i8* %0, i8* %1)
  store i32 0, i32* %wp, align 4
  store i32 0, i32* %bp, align 4
  %2 = load %struct.node** %this.addr, align 8
  %bitcast53 = bitcast %struct.node** %this.addr to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast53, i8** %base.alloca, i8** %bound.alloca)
  %base.load = load i8** %base.alloca
  %bound.load = load i8** %bound.alloca
  %evaluated = getelementptr inbounds %struct.node* %2, i32 0, i32 3
  store i8 1, i8* %evaluated, align 1
  store i32 1, i32* %j, align 4
  store i32 1, i32* %a, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %3 = load i32* %a, align 4
  %4 = load i32* @piece_count, align 4
  %cmp = icmp sle i32 %3, %4
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %5 = load i32* %j, align 4
  %idxprom = sext i32 %5 to i64
  %arrayidx = getelementptr inbounds [62 x i32]* @pieces, i32 0, i64 %idxprom
  %6 = load i32* %arrayidx, align 4
  store i32 %6, i32* %i, align 4
  %7 = load i32* %i, align 4
  %tobool = icmp ne i32 %7, 0
  br i1 %tobool, label %if.else, label %if.then

if.then:                                          ; preds = %for.body
  br label %for.inc

if.else:                                          ; preds = %for.body
  %8 = load i32* %a, align 4
  %inc = add nsw i32 %8, 1
  store i32 %inc, i32* %a, align 4
  br label %if.end

if.end:                                           ; preds = %if.else
  %9 = load i32* %i, align 4
  %idxprom1 = sext i32 %9 to i64
  %arrayidx2 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom1
  %10 = load i32* %arrayidx2, align 4
  switch i32 %10, label %sw.epilog [
    i32 1, label %sw.bb
    i32 11, label %sw.bb
    i32 7, label %sw.bb
    i32 5, label %sw.bb
    i32 9, label %sw.bb
    i32 3, label %sw.bb
    i32 2, label %sw.bb4
    i32 12, label %sw.bb4
    i32 8, label %sw.bb4
    i32 6, label %sw.bb4
    i32 10, label %sw.bb4
    i32 4, label %sw.bb4
  ]

sw.bb:                                            ; preds = %if.end, %if.end, %if.end, %if.end, %if.end, %if.end
  %11 = load i32* %wp, align 4
  %inc3 = add nsw i32 %11, 1
  store i32 %inc3, i32* %wp, align 4
  br label %sw.epilog

sw.bb4:                                           ; preds = %if.end, %if.end, %if.end, %if.end, %if.end, %if.end
  %12 = load i32* %bp, align 4
  %inc5 = add nsw i32 %12, 1
  store i32 %inc5, i32* %bp, align 4
  br label %sw.epilog

sw.epilog:                                        ; preds = %sw.bb4, %sw.bb, %if.end
  %13 = load i32* %wp, align 4
  %tobool6 = icmp ne i32 %13, 0
  br i1 %tobool6, label %land.lhs.true, label %if.end9

land.lhs.true:                                    ; preds = %sw.epilog
  %14 = load i32* %bp, align 4
  %tobool7 = icmp ne i32 %14, 0
  br i1 %tobool7, label %if.then8, label %if.end9

if.then8:                                         ; preds = %land.lhs.true
  br label %for.end

if.end9:                                          ; preds = %land.lhs.true, %sw.epilog
  br label %for.inc

for.inc:                                          ; preds = %if.end9, %if.then
  %15 = load i32* %j, align 4
  %inc10 = add nsw i32 %15, 1
  store i32 %inc10, i32* %j, align 4
  br label %for.cond

for.end:                                          ; preds = %if.then8, %for.cond
  %16 = load i32* %wp, align 4
  %tobool11 = icmp ne i32 %16, 0
  br i1 %tobool11, label %if.else18, label %if.then12

if.then12:                                        ; preds = %for.end
  %17 = load i32* @root_to_move, align 4
  %tobool13 = icmp ne i32 %17, 0
  br i1 %tobool13, label %if.else15, label %if.then14

if.then14:                                        ; preds = %if.then12
  %18 = load %struct.node** %this.addr, align 8
  %bitcast64 = bitcast %struct.node** %this.addr to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast64, i8** %base.alloca65, i8** %bound.alloca66)
  %base.load67 = load i8** %base.alloca65
  %bound.load68 = load i8** %bound.alloca66
  %value = getelementptr inbounds %struct.node* %18, i32 0, i32 0
  store i8 1, i8* %value, align 1
  br label %if.end17

if.else15:                                        ; preds = %if.then12
  %19 = load %struct.node** %this.addr, align 8
  %bitcast59 = bitcast %struct.node** %this.addr to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast59, i8** %base.alloca60, i8** %bound.alloca61)
  %base.load62 = load i8** %base.alloca60
  %bound.load63 = load i8** %bound.alloca61
  %value16 = getelementptr inbounds %struct.node* %19, i32 0, i32 0
  store i8 0, i8* %value16, align 1
  br label %if.end17

if.end17:                                         ; preds = %if.else15, %if.then14
  br label %if.end30

if.else18:                                        ; preds = %for.end
  %20 = load i32* %bp, align 4
  %tobool19 = icmp ne i32 %20, 0
  br i1 %tobool19, label %if.else27, label %if.then20

if.then20:                                        ; preds = %if.else18
  %21 = load i32* @root_to_move, align 4
  %tobool21 = icmp ne i32 %21, 0
  br i1 %tobool21, label %if.else24, label %if.then22

if.then22:                                        ; preds = %if.then20
  %22 = load %struct.node** %this.addr, align 8
  %bitcast74 = bitcast %struct.node** %this.addr to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast74, i8** %base.alloca75, i8** %bound.alloca76)
  %base.load77 = load i8** %base.alloca75
  %bound.load78 = load i8** %bound.alloca76
  %value23 = getelementptr inbounds %struct.node* %22, i32 0, i32 0
  store i8 0, i8* %value23, align 1
  br label %if.end26

if.else24:                                        ; preds = %if.then20
  %23 = load %struct.node** %this.addr, align 8
  %bitcast69 = bitcast %struct.node** %this.addr to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast69, i8** %base.alloca70, i8** %bound.alloca71)
  %base.load72 = load i8** %base.alloca70
  %bound.load73 = load i8** %bound.alloca71
  %value25 = getelementptr inbounds %struct.node* %23, i32 0, i32 0
  store i8 1, i8* %value25, align 1
  br label %if.end26

if.end26:                                         ; preds = %if.else24, %if.then22
  br label %if.end29

if.else27:                                        ; preds = %if.else18
  %24 = load %struct.node** %this.addr, align 8
  %bitcast54 = bitcast %struct.node** %this.addr to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast54, i8** %base.alloca55, i8** %bound.alloca56)
  %base.load57 = load i8** %base.alloca55
  %bound.load58 = load i8** %bound.alloca56
  %value28 = getelementptr inbounds %struct.node* %24, i32 0, i32 0
  store i8 2, i8* %value28, align 1
  br label %if.end29

if.end29:                                         ; preds = %if.else27, %if.end26
  br label %if.end30

if.end30:                                         ; preds = %if.end29, %if.end17
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @losers_pn_eval(%struct.node* %this) #0 {
entry:
  %base.alloca156 = alloca i8*
  %bound.alloca157 = alloca i8*
  %base.alloca151 = alloca i8*
  %bound.alloca152 = alloca i8*
  %base.alloca146 = alloca i8*
  %bound.alloca147 = alloca i8*
  %base.alloca141 = alloca i8*
  %bound.alloca142 = alloca i8*
  %base.alloca136 = alloca i8*
  %bound.alloca137 = alloca i8*
  %base.alloca131 = alloca i8*
  %bound.alloca132 = alloca i8*
  %base.alloca126 = alloca i8*
  %bound.alloca127 = alloca i8*
  %base.alloca121 = alloca i8*
  %bound.alloca122 = alloca i8*
  %base.alloca = alloca i8*
  %bound.alloca = alloca i8*
  %0 = call i8* @__softboundcets_load_base_shadow_stack(i32 1)
  %1 = call i8* @__softboundcets_load_bound_shadow_stack(i32 1)
  %this.addr = alloca %struct.node*, align 8
  %this.addr85 = bitcast %struct.node** %this.addr to %struct.node**
  %bitcast = bitcast %struct.node** %this.addr to i8*
  %mtmp = getelementptr %struct.node** %this.addr85, i32 1
  %bitcast86 = bitcast %struct.node** %mtmp to i8*
  %num_moves = alloca i32, align 4
  %num_moves87 = bitcast i32* %num_moves to i32*
  %bitcast88 = bitcast i32* %num_moves to i8*
  %mtmp89 = getelementptr i32* %num_moves87, i32 1
  %bitcast90 = bitcast i32* %mtmp89 to i8*
  %moves = alloca [512 x %struct.move_s], align 16
  %moves91 = bitcast [512 x %struct.move_s]* %moves to [512 x %struct.move_s]*
  %bitcast92 = bitcast [512 x %struct.move_s]* %moves to i8*
  %mtmp93 = getelementptr [512 x %struct.move_s]* %moves91, i32 1
  %bitcast94 = bitcast [512 x %struct.move_s]* %mtmp93 to i8*
  %mate = alloca i32, align 4
  %mate95 = bitcast i32* %mate to i32*
  %bitcast96 = bitcast i32* %mate to i8*
  %mtmp97 = getelementptr i32* %mate95, i32 1
  %bitcast98 = bitcast i32* %mtmp97 to i8*
  %i = alloca i32, align 4
  %i99 = bitcast i32* %i to i32*
  %bitcast100 = bitcast i32* %i to i8*
  %mtmp101 = getelementptr i32* %i99, i32 1
  %bitcast102 = bitcast i32* %mtmp101 to i8*
  %j = alloca i32, align 4
  %j103 = bitcast i32* %j to i32*
  %bitcast104 = bitcast i32* %j to i8*
  %mtmp105 = getelementptr i32* %j103, i32 1
  %bitcast106 = bitcast i32* %mtmp105 to i8*
  %a = alloca i32, align 4
  %a107 = bitcast i32* %a to i32*
  %bitcast108 = bitcast i32* %a to i8*
  %mtmp109 = getelementptr i32* %a107, i32 1
  %bitcast110 = bitcast i32* %mtmp109 to i8*
  %wp = alloca i32, align 4
  %wp111 = bitcast i32* %wp to i32*
  %bitcast112 = bitcast i32* %wp to i8*
  %mtmp113 = getelementptr i32* %wp111, i32 1
  %bitcast114 = bitcast i32* %mtmp113 to i8*
  %bp = alloca i32, align 4
  %bp115 = bitcast i32* %bp to i32*
  %bitcast116 = bitcast i32* %bp to i8*
  %mtmp117 = getelementptr i32* %bp115, i32 1
  %bitcast118 = bitcast i32* %mtmp117 to i8*
  store %struct.node* %this, %struct.node** %this.addr, align 8
  %bitcast160 = bitcast %struct.node** %this.addr to i8*
  call void @__softboundcets_metadata_store(i8* %bitcast160, i8* %0, i8* %1)
  store i32 0, i32* %wp, align 4
  store i32 0, i32* %bp, align 4
  %2 = load %struct.node** %this.addr, align 8
  %bitcast119 = bitcast %struct.node** %this.addr to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast119, i8** %base.alloca, i8** %bound.alloca)
  %base.load = load i8** %base.alloca
  %bound.load = load i8** %bound.alloca
  %evaluated = getelementptr inbounds %struct.node* %2, i32 0, i32 3
  store i8 1, i8* %evaluated, align 1
  store i32 1, i32* %j, align 4
  store i32 1, i32* %a, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %3 = load i32* %a, align 4
  %4 = load i32* @piece_count, align 4
  %cmp = icmp sle i32 %3, %4
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %5 = load i32* %j, align 4
  %idxprom = sext i32 %5 to i64
  %arrayidx = getelementptr inbounds [62 x i32]* @pieces, i32 0, i64 %idxprom
  %6 = load i32* %arrayidx, align 4
  store i32 %6, i32* %i, align 4
  %7 = load i32* %i, align 4
  %tobool = icmp ne i32 %7, 0
  br i1 %tobool, label %if.else, label %if.then

if.then:                                          ; preds = %for.body
  br label %for.inc

if.else:                                          ; preds = %for.body
  %8 = load i32* %a, align 4
  %inc = add nsw i32 %8, 1
  store i32 %inc, i32* %a, align 4
  br label %if.end

if.end:                                           ; preds = %if.else
  %9 = load i32* %i, align 4
  %idxprom1 = sext i32 %9 to i64
  %arrayidx2 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom1
  %10 = load i32* %arrayidx2, align 4
  switch i32 %10, label %sw.epilog [
    i32 1, label %sw.bb
    i32 11, label %sw.bb
    i32 7, label %sw.bb
    i32 9, label %sw.bb
    i32 3, label %sw.bb
    i32 2, label %sw.bb4
    i32 12, label %sw.bb4
    i32 8, label %sw.bb4
    i32 10, label %sw.bb4
    i32 4, label %sw.bb4
  ]

sw.bb:                                            ; preds = %if.end, %if.end, %if.end, %if.end, %if.end
  %11 = load i32* %wp, align 4
  %inc3 = add nsw i32 %11, 1
  store i32 %inc3, i32* %wp, align 4
  br label %sw.epilog

sw.bb4:                                           ; preds = %if.end, %if.end, %if.end, %if.end, %if.end
  %12 = load i32* %bp, align 4
  %inc5 = add nsw i32 %12, 1
  store i32 %inc5, i32* %bp, align 4
  br label %sw.epilog

sw.epilog:                                        ; preds = %sw.bb4, %sw.bb, %if.end
  %13 = load i32* %wp, align 4
  %tobool6 = icmp ne i32 %13, 0
  br i1 %tobool6, label %land.lhs.true, label %if.end9

land.lhs.true:                                    ; preds = %sw.epilog
  %14 = load i32* %bp, align 4
  %tobool7 = icmp ne i32 %14, 0
  br i1 %tobool7, label %if.then8, label %if.end9

if.then8:                                         ; preds = %land.lhs.true
  br label %for.end

if.end9:                                          ; preds = %land.lhs.true, %sw.epilog
  br label %for.inc

for.inc:                                          ; preds = %if.end9, %if.then
  %15 = load i32* %j, align 4
  %inc10 = add nsw i32 %15, 1
  store i32 %inc10, i32* %j, align 4
  br label %for.cond

for.end:                                          ; preds = %if.then8, %for.cond
  %16 = load i32* %wp, align 4
  %tobool11 = icmp ne i32 %16, 0
  br i1 %tobool11, label %if.else18, label %if.then12

if.then12:                                        ; preds = %for.end
  %17 = load i32* @root_to_move, align 4
  %tobool13 = icmp ne i32 %17, 0
  br i1 %tobool13, label %if.else15, label %if.then14

if.then14:                                        ; preds = %if.then12
  %18 = load %struct.node** %this.addr, align 8
  %bitcast125 = bitcast %struct.node** %this.addr to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast125, i8** %base.alloca126, i8** %bound.alloca127)
  %base.load128 = load i8** %base.alloca126
  %bound.load129 = load i8** %bound.alloca127
  %value = getelementptr inbounds %struct.node* %18, i32 0, i32 0
  store i8 1, i8* %value, align 1
  br label %if.end17

if.else15:                                        ; preds = %if.then12
  %19 = load %struct.node** %this.addr, align 8
  %bitcast120 = bitcast %struct.node** %this.addr to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast120, i8** %base.alloca121, i8** %bound.alloca122)
  %base.load123 = load i8** %base.alloca121
  %bound.load124 = load i8** %bound.alloca122
  %value16 = getelementptr inbounds %struct.node* %19, i32 0, i32 0
  store i8 0, i8* %value16, align 1
  br label %if.end17

if.end17:                                         ; preds = %if.else15, %if.then14
  br label %if.end84

if.else18:                                        ; preds = %for.end
  %20 = load i32* %bp, align 4
  %tobool19 = icmp ne i32 %20, 0
  br i1 %tobool19, label %if.end27, label %if.then20

if.then20:                                        ; preds = %if.else18
  %21 = load i32* @root_to_move, align 4
  %tobool21 = icmp ne i32 %21, 0
  br i1 %tobool21, label %if.then22, label %if.else24

if.then22:                                        ; preds = %if.then20
  %22 = load %struct.node** %this.addr, align 8
  %bitcast130 = bitcast %struct.node** %this.addr to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast130, i8** %base.alloca131, i8** %bound.alloca132)
  %base.load133 = load i8** %base.alloca131
  %bound.load134 = load i8** %bound.alloca132
  %value23 = getelementptr inbounds %struct.node* %22, i32 0, i32 0
  store i8 1, i8* %value23, align 1
  br label %if.end26

if.else24:                                        ; preds = %if.then20
  %23 = load %struct.node** %this.addr, align 8
  %bitcast135 = bitcast %struct.node** %this.addr to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast135, i8** %base.alloca136, i8** %bound.alloca137)
  %base.load138 = load i8** %base.alloca136
  %bound.load139 = load i8** %bound.alloca137
  %value25 = getelementptr inbounds %struct.node* %23, i32 0, i32 0
  store i8 0, i8* %value25, align 1
  br label %if.end26

if.end26:                                         ; preds = %if.else24, %if.then22
  br label %if.end84

if.end27:                                         ; preds = %if.else18
  br label %if.end28

if.end28:                                         ; preds = %if.end27
  %24 = load i32* @white_to_move, align 4
  %tobool29 = icmp ne i32 %24, 0
  br i1 %tobool29, label %land.lhs.true30, label %lor.lhs.false

land.lhs.true30:                                  ; preds = %if.end28
  %25 = load i32* @wking_loc, align 4
  %call = call i32 @is_attacked(i32 %25, i32 0)
  %tobool31 = icmp ne i32 %call, 0
  br i1 %tobool31, label %if.then36, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %land.lhs.true30, %if.end28
  %26 = load i32* @white_to_move, align 4
  %tobool32 = icmp ne i32 %26, 0
  br i1 %tobool32, label %if.else82, label %land.lhs.true33

land.lhs.true33:                                  ; preds = %lor.lhs.false
  %27 = load i32* @bking_loc, align 4
  %call34 = call i32 @is_attacked(i32 %27, i32 1)
  %tobool35 = icmp ne i32 %call34, 0
  br i1 %tobool35, label %if.then36, label %if.else82

if.then36:                                        ; preds = %land.lhs.true33, %land.lhs.true30
  store i32 1, i32* @captures, align 4
  store i32 0, i32* %num_moves, align 4
  %arrayidx37 = getelementptr inbounds [512 x %struct.move_s]* %moves, i32 0, i64 0
  call void @__softboundcets_allocate_shadow_stack_space(i32 2)
  call void @__softboundcets_store_base_shadow_stack(i8* %bitcast92, i32 1)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bitcast94, i32 1)
  call void @gen(%struct.move_s* %arrayidx37)
  call void @__softboundcets_deallocate_shadow_stack_space()
  %28 = load i32* @numb_moves, align 4
  store i32 %28, i32* %num_moves, align 4
  store i32 0, i32* @captures, align 4
  store i32 1, i32* %mate, align 4
  store i32 0, i32* %i, align 4
  br label %for.cond38

for.cond38:                                       ; preds = %for.inc49, %if.then36
  %29 = load i32* %i, align 4
  %30 = load i32* %num_moves, align 4
  %cmp39 = icmp slt i32 %29, %30
  br i1 %cmp39, label %for.body40, label %for.end51

for.body40:                                       ; preds = %for.cond38
  %arrayidx41 = getelementptr inbounds [512 x %struct.move_s]* %moves, i32 0, i64 0
  %31 = load i32* %i, align 4
  call void @__softboundcets_allocate_shadow_stack_space(i32 2)
  call void @__softboundcets_store_base_shadow_stack(i8* %bitcast92, i32 1)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bitcast94, i32 1)
  call void @make(%struct.move_s* %arrayidx41, i32 %31)
  call void @__softboundcets_deallocate_shadow_stack_space()
  %arrayidx42 = getelementptr inbounds [512 x %struct.move_s]* %moves, i32 0, i64 0
  %32 = load i32* %i, align 4
  call void @__softboundcets_allocate_shadow_stack_space(i32 2)
  call void @__softboundcets_store_base_shadow_stack(i8* %bitcast92, i32 1)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bitcast94, i32 1)
  %call43 = call i32 @check_legal(%struct.move_s* %arrayidx42, i32 %32, i32 1)
  call void @__softboundcets_deallocate_shadow_stack_space()
  %tobool44 = icmp ne i32 %call43, 0
  br i1 %tobool44, label %if.then45, label %if.end47

if.then45:                                        ; preds = %for.body40
  store i32 0, i32* %mate, align 4
  %arrayidx46 = getelementptr inbounds [512 x %struct.move_s]* %moves, i32 0, i64 0
  %33 = load i32* %i, align 4
  call void @__softboundcets_allocate_shadow_stack_space(i32 2)
  call void @__softboundcets_store_base_shadow_stack(i8* %bitcast92, i32 1)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bitcast94, i32 1)
  call void @unmake(%struct.move_s* %arrayidx46, i32 %33)
  call void @__softboundcets_deallocate_shadow_stack_space()
  br label %for.end51

if.end47:                                         ; preds = %for.body40
  %arrayidx48 = getelementptr inbounds [512 x %struct.move_s]* %moves, i32 0, i64 0
  %34 = load i32* %i, align 4
  call void @__softboundcets_allocate_shadow_stack_space(i32 2)
  call void @__softboundcets_store_base_shadow_stack(i8* %bitcast92, i32 1)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bitcast94, i32 1)
  call void @unmake(%struct.move_s* %arrayidx48, i32 %34)
  call void @__softboundcets_deallocate_shadow_stack_space()
  br label %for.inc49

for.inc49:                                        ; preds = %if.end47
  %35 = load i32* %i, align 4
  %inc50 = add nsw i32 %35, 1
  store i32 %inc50, i32* %i, align 4
  br label %for.cond38

for.end51:                                        ; preds = %if.then45, %for.cond38
  %36 = load i32* %mate, align 4
  %cmp52 = icmp eq i32 %36, 1
  br i1 %cmp52, label %if.then53, label %if.end69

if.then53:                                        ; preds = %for.end51
  store i32 0, i32* @captures, align 4
  store i32 0, i32* %num_moves, align 4
  %arrayidx54 = getelementptr inbounds [512 x %struct.move_s]* %moves, i32 0, i64 0
  call void @__softboundcets_allocate_shadow_stack_space(i32 2)
  call void @__softboundcets_store_base_shadow_stack(i8* %bitcast92, i32 1)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bitcast94, i32 1)
  call void @gen(%struct.move_s* %arrayidx54)
  call void @__softboundcets_deallocate_shadow_stack_space()
  %37 = load i32* @numb_moves, align 4
  store i32 %37, i32* %num_moves, align 4
  store i32 0, i32* %i, align 4
  br label %for.cond55

for.cond55:                                       ; preds = %for.inc66, %if.then53
  %38 = load i32* %i, align 4
  %39 = load i32* %num_moves, align 4
  %cmp56 = icmp slt i32 %38, %39
  br i1 %cmp56, label %for.body57, label %for.end68

for.body57:                                       ; preds = %for.cond55
  %arrayidx58 = getelementptr inbounds [512 x %struct.move_s]* %moves, i32 0, i64 0
  %40 = load i32* %i, align 4
  call void @__softboundcets_allocate_shadow_stack_space(i32 2)
  call void @__softboundcets_store_base_shadow_stack(i8* %bitcast92, i32 1)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bitcast94, i32 1)
  call void @make(%struct.move_s* %arrayidx58, i32 %40)
  call void @__softboundcets_deallocate_shadow_stack_space()
  %arrayidx59 = getelementptr inbounds [512 x %struct.move_s]* %moves, i32 0, i64 0
  %41 = load i32* %i, align 4
  call void @__softboundcets_allocate_shadow_stack_space(i32 2)
  call void @__softboundcets_store_base_shadow_stack(i8* %bitcast92, i32 1)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bitcast94, i32 1)
  %call60 = call i32 @check_legal(%struct.move_s* %arrayidx59, i32 %41, i32 1)
  call void @__softboundcets_deallocate_shadow_stack_space()
  %tobool61 = icmp ne i32 %call60, 0
  br i1 %tobool61, label %if.then62, label %if.end64

if.then62:                                        ; preds = %for.body57
  store i32 0, i32* %mate, align 4
  %arrayidx63 = getelementptr inbounds [512 x %struct.move_s]* %moves, i32 0, i64 0
  %42 = load i32* %i, align 4
  call void @__softboundcets_allocate_shadow_stack_space(i32 2)
  call void @__softboundcets_store_base_shadow_stack(i8* %bitcast92, i32 1)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bitcast94, i32 1)
  call void @unmake(%struct.move_s* %arrayidx63, i32 %42)
  call void @__softboundcets_deallocate_shadow_stack_space()
  br label %for.end68

if.end64:                                         ; preds = %for.body57
  %arrayidx65 = getelementptr inbounds [512 x %struct.move_s]* %moves, i32 0, i64 0
  %43 = load i32* %i, align 4
  call void @__softboundcets_allocate_shadow_stack_space(i32 2)
  call void @__softboundcets_store_base_shadow_stack(i8* %bitcast92, i32 1)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bitcast94, i32 1)
  call void @unmake(%struct.move_s* %arrayidx65, i32 %43)
  call void @__softboundcets_deallocate_shadow_stack_space()
  br label %for.inc66

for.inc66:                                        ; preds = %if.end64
  %44 = load i32* %i, align 4
  %inc67 = add nsw i32 %44, 1
  store i32 %inc67, i32* %i, align 4
  br label %for.cond55

for.end68:                                        ; preds = %if.then62, %for.cond55
  br label %if.end69

if.end69:                                         ; preds = %for.end68, %for.end51
  %45 = load i32* %mate, align 4
  %cmp70 = icmp eq i32 %45, 1
  br i1 %cmp70, label %if.then71, label %if.else79

if.then71:                                        ; preds = %if.end69
  %46 = load i32* @white_to_move, align 4
  %tobool72 = icmp ne i32 %46, 0
  %cond = select i1 %tobool72, i32 0, i32 1
  %47 = load i32* @root_to_move, align 4
  %cmp73 = icmp eq i32 %cond, %47
  br i1 %cmp73, label %if.then74, label %if.else76

if.then74:                                        ; preds = %if.then71
  %48 = load %struct.node** %this.addr, align 8
  %bitcast150 = bitcast %struct.node** %this.addr to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast150, i8** %base.alloca151, i8** %bound.alloca152)
  %base.load153 = load i8** %base.alloca151
  %bound.load154 = load i8** %bound.alloca152
  %value75 = getelementptr inbounds %struct.node* %48, i32 0, i32 0
  store i8 1, i8* %value75, align 1
  br label %if.end78

if.else76:                                        ; preds = %if.then71
  %49 = load %struct.node** %this.addr, align 8
  %bitcast155 = bitcast %struct.node** %this.addr to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast155, i8** %base.alloca156, i8** %bound.alloca157)
  %base.load158 = load i8** %base.alloca156
  %bound.load159 = load i8** %bound.alloca157
  %value77 = getelementptr inbounds %struct.node* %49, i32 0, i32 0
  store i8 0, i8* %value77, align 1
  br label %if.end78

if.end78:                                         ; preds = %if.else76, %if.then74
  br label %if.end81

if.else79:                                        ; preds = %if.end69
  %50 = load %struct.node** %this.addr, align 8
  %bitcast145 = bitcast %struct.node** %this.addr to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast145, i8** %base.alloca146, i8** %bound.alloca147)
  %base.load148 = load i8** %base.alloca146
  %bound.load149 = load i8** %bound.alloca147
  %value80 = getelementptr inbounds %struct.node* %50, i32 0, i32 0
  store i8 2, i8* %value80, align 1
  br label %if.end81

if.end81:                                         ; preds = %if.else79, %if.end78
  br label %if.end84

if.else82:                                        ; preds = %land.lhs.true33, %lor.lhs.false
  %51 = load %struct.node** %this.addr, align 8
  %bitcast140 = bitcast %struct.node** %this.addr to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast140, i8** %base.alloca141, i8** %bound.alloca142)
  %base.load143 = load i8** %base.alloca141
  %bound.load144 = load i8** %bound.alloca142
  %value83 = getelementptr inbounds %struct.node* %51, i32 0, i32 0
  store i8 2, i8* %value83, align 1
  br label %if.end84

if.end84:                                         ; preds = %if.else82, %if.end81, %if.end26, %if.end17
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @std_pn_eval(%struct.node* %this) #0 {
entry:
  %base.alloca61 = alloca i8*
  %bound.alloca62 = alloca i8*
  %base.alloca56 = alloca i8*
  %bound.alloca57 = alloca i8*
  %base.alloca51 = alloca i8*
  %bound.alloca52 = alloca i8*
  %base.alloca46 = alloca i8*
  %bound.alloca47 = alloca i8*
  %base.alloca = alloca i8*
  %bound.alloca = alloca i8*
  %0 = call i8* @__softboundcets_load_base_shadow_stack(i32 1)
  %1 = call i8* @__softboundcets_load_bound_shadow_stack(i32 1)
  %this.addr = alloca %struct.node*, align 8
  %this.addr26 = bitcast %struct.node** %this.addr to %struct.node**
  %bitcast = bitcast %struct.node** %this.addr to i8*
  %mtmp = getelementptr %struct.node** %this.addr26, i32 1
  %bitcast27 = bitcast %struct.node** %mtmp to i8*
  %num_moves = alloca i32, align 4
  %num_moves28 = bitcast i32* %num_moves to i32*
  %bitcast29 = bitcast i32* %num_moves to i8*
  %mtmp30 = getelementptr i32* %num_moves28, i32 1
  %bitcast31 = bitcast i32* %mtmp30 to i8*
  %moves = alloca [512 x %struct.move_s], align 16
  %moves32 = bitcast [512 x %struct.move_s]* %moves to [512 x %struct.move_s]*
  %bitcast33 = bitcast [512 x %struct.move_s]* %moves to i8*
  %mtmp34 = getelementptr [512 x %struct.move_s]* %moves32, i32 1
  %bitcast35 = bitcast [512 x %struct.move_s]* %mtmp34 to i8*
  %mate = alloca i32, align 4
  %mate36 = bitcast i32* %mate to i32*
  %bitcast37 = bitcast i32* %mate to i8*
  %mtmp38 = getelementptr i32* %mate36, i32 1
  %bitcast39 = bitcast i32* %mtmp38 to i8*
  %i = alloca i32, align 4
  %i40 = bitcast i32* %i to i32*
  %bitcast41 = bitcast i32* %i to i8*
  %mtmp42 = getelementptr i32* %i40, i32 1
  %bitcast43 = bitcast i32* %mtmp42 to i8*
  store %struct.node* %this, %struct.node** %this.addr, align 8
  %bitcast65 = bitcast %struct.node** %this.addr to i8*
  call void @__softboundcets_metadata_store(i8* %bitcast65, i8* %0, i8* %1)
  %2 = load %struct.node** %this.addr, align 8
  %bitcast44 = bitcast %struct.node** %this.addr to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast44, i8** %base.alloca, i8** %bound.alloca)
  %base.load = load i8** %base.alloca
  %bound.load = load i8** %bound.alloca
  %evaluated = getelementptr inbounds %struct.node* %2, i32 0, i32 3
  store i8 1, i8* %evaluated, align 1
  %3 = load i32* @white_to_move, align 4
  %tobool = icmp ne i32 %3, 0
  br i1 %tobool, label %land.lhs.true, label %lor.lhs.false

land.lhs.true:                                    ; preds = %entry
  %4 = load i32* @wking_loc, align 4
  %call = call i32 @is_attacked(i32 %4, i32 0)
  %tobool1 = icmp ne i32 %call, 0
  br i1 %tobool1, label %if.then, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %land.lhs.true, %entry
  %5 = load i32* @white_to_move, align 4
  %tobool2 = icmp ne i32 %5, 0
  br i1 %tobool2, label %if.else23, label %land.lhs.true3

land.lhs.true3:                                   ; preds = %lor.lhs.false
  %6 = load i32* @bking_loc, align 4
  %call4 = call i32 @is_attacked(i32 %6, i32 1)
  %tobool5 = icmp ne i32 %call4, 0
  br i1 %tobool5, label %if.then, label %if.else23

if.then:                                          ; preds = %land.lhs.true3, %land.lhs.true
  store i32 0, i32* %num_moves, align 4
  %arrayidx = getelementptr inbounds [512 x %struct.move_s]* %moves, i32 0, i64 0
  call void @__softboundcets_allocate_shadow_stack_space(i32 2)
  call void @__softboundcets_store_base_shadow_stack(i8* %bitcast33, i32 1)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bitcast35, i32 1)
  call void @gen(%struct.move_s* %arrayidx)
  call void @__softboundcets_deallocate_shadow_stack_space()
  %7 = load i32* @numb_moves, align 4
  store i32 %7, i32* %num_moves, align 4
  store i32 1, i32* %mate, align 4
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.then
  %8 = load i32* %i, align 4
  %9 = load i32* %num_moves, align 4
  %cmp = icmp slt i32 %8, %9
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %arrayidx6 = getelementptr inbounds [512 x %struct.move_s]* %moves, i32 0, i64 0
  %10 = load i32* %i, align 4
  call void @__softboundcets_allocate_shadow_stack_space(i32 2)
  call void @__softboundcets_store_base_shadow_stack(i8* %bitcast33, i32 1)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bitcast35, i32 1)
  call void @make(%struct.move_s* %arrayidx6, i32 %10)
  call void @__softboundcets_deallocate_shadow_stack_space()
  %arrayidx7 = getelementptr inbounds [512 x %struct.move_s]* %moves, i32 0, i64 0
  %11 = load i32* %i, align 4
  call void @__softboundcets_allocate_shadow_stack_space(i32 2)
  call void @__softboundcets_store_base_shadow_stack(i8* %bitcast33, i32 1)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bitcast35, i32 1)
  %call8 = call i32 @check_legal(%struct.move_s* %arrayidx7, i32 %11, i32 1)
  call void @__softboundcets_deallocate_shadow_stack_space()
  %tobool9 = icmp ne i32 %call8, 0
  br i1 %tobool9, label %if.then10, label %if.end

if.then10:                                        ; preds = %for.body
  store i32 0, i32* %mate, align 4
  %arrayidx11 = getelementptr inbounds [512 x %struct.move_s]* %moves, i32 0, i64 0
  %12 = load i32* %i, align 4
  call void @__softboundcets_allocate_shadow_stack_space(i32 2)
  call void @__softboundcets_store_base_shadow_stack(i8* %bitcast33, i32 1)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bitcast35, i32 1)
  call void @unmake(%struct.move_s* %arrayidx11, i32 %12)
  call void @__softboundcets_deallocate_shadow_stack_space()
  br label %for.end

if.end:                                           ; preds = %for.body
  %arrayidx12 = getelementptr inbounds [512 x %struct.move_s]* %moves, i32 0, i64 0
  %13 = load i32* %i, align 4
  call void @__softboundcets_allocate_shadow_stack_space(i32 2)
  call void @__softboundcets_store_base_shadow_stack(i8* %bitcast33, i32 1)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bitcast35, i32 1)
  call void @unmake(%struct.move_s* %arrayidx12, i32 %13)
  call void @__softboundcets_deallocate_shadow_stack_space()
  br label %for.inc

for.inc:                                          ; preds = %if.end
  %14 = load i32* %i, align 4
  %inc = add nsw i32 %14, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %if.then10, %for.cond
  %15 = load i32* %mate, align 4
  %cmp13 = icmp eq i32 %15, 1
  br i1 %cmp13, label %if.then14, label %if.else20

if.then14:                                        ; preds = %for.end
  %16 = load i32* @white_to_move, align 4
  %tobool15 = icmp ne i32 %16, 0
  %cond = select i1 %tobool15, i32 0, i32 1
  %17 = load i32* @root_to_move, align 4
  %cmp16 = icmp eq i32 %cond, %17
  br i1 %cmp16, label %if.then17, label %if.else

if.then17:                                        ; preds = %if.then14
  %18 = load %struct.node** %this.addr, align 8
  %bitcast55 = bitcast %struct.node** %this.addr to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast55, i8** %base.alloca56, i8** %bound.alloca57)
  %base.load58 = load i8** %base.alloca56
  %bound.load59 = load i8** %bound.alloca57
  %value = getelementptr inbounds %struct.node* %18, i32 0, i32 0
  store i8 0, i8* %value, align 1
  br label %if.end19

if.else:                                          ; preds = %if.then14
  %19 = load %struct.node** %this.addr, align 8
  %bitcast60 = bitcast %struct.node** %this.addr to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast60, i8** %base.alloca61, i8** %bound.alloca62)
  %base.load63 = load i8** %base.alloca61
  %bound.load64 = load i8** %bound.alloca62
  %value18 = getelementptr inbounds %struct.node* %19, i32 0, i32 0
  store i8 1, i8* %value18, align 1
  br label %if.end19

if.end19:                                         ; preds = %if.else, %if.then17
  br label %if.end22

if.else20:                                        ; preds = %for.end
  %20 = load %struct.node** %this.addr, align 8
  %bitcast50 = bitcast %struct.node** %this.addr to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast50, i8** %base.alloca51, i8** %bound.alloca52)
  %base.load53 = load i8** %base.alloca51
  %bound.load54 = load i8** %bound.alloca52
  %value21 = getelementptr inbounds %struct.node* %20, i32 0, i32 0
  store i8 2, i8* %value21, align 1
  br label %if.end22

if.end22:                                         ; preds = %if.else20, %if.end19
  br label %if.end25

if.else23:                                        ; preds = %land.lhs.true3, %lor.lhs.false
  %21 = load %struct.node** %this.addr, align 8
  %bitcast45 = bitcast %struct.node** %this.addr to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast45, i8** %base.alloca46, i8** %bound.alloca47)
  %base.load48 = load i8** %base.alloca46
  %bound.load49 = load i8** %bound.alloca47
  %value24 = getelementptr inbounds %struct.node* %21, i32 0, i32 0
  store i8 2, i8* %value24, align 1
  br label %if.end25

if.end25:                                         ; preds = %if.else23, %if.end22
  ret void
}

; Function Attrs: nounwind uwtable
define internal %struct.node* @select_most_proving(%struct.node* %node) #0 {
entry:
  %base.alloca101 = alloca i8*
  %bound.alloca102 = alloca i8*
  %base.alloca96 = alloca i8*
  %bound.alloca97 = alloca i8*
  %base.alloca91 = alloca i8*
  %bound.alloca92 = alloca i8*
  %base.alloca86 = alloca i8*
  %bound.alloca87 = alloca i8*
  %base.alloca81 = alloca i8*
  %bound.alloca82 = alloca i8*
  %base.alloca76 = alloca i8*
  %bound.alloca77 = alloca i8*
  %base.alloca71 = alloca i8*
  %bound.alloca72 = alloca i8*
  %base.alloca66 = alloca i8*
  %bound.alloca67 = alloca i8*
  %base.alloca61 = alloca i8*
  %bound.alloca62 = alloca i8*
  %base.alloca56 = alloca i8*
  %bound.alloca57 = alloca i8*
  %base.alloca51 = alloca i8*
  %bound.alloca52 = alloca i8*
  %base.alloca46 = alloca i8*
  %bound.alloca47 = alloca i8*
  %base.alloca41 = alloca i8*
  %bound.alloca42 = alloca i8*
  %base.alloca36 = alloca i8*
  %bound.alloca37 = alloca i8*
  %base.alloca = alloca i8*
  %bound.alloca = alloca i8*
  %0 = call i8* @__softboundcets_load_base_shadow_stack(i32 1)
  %1 = call i8* @__softboundcets_load_bound_shadow_stack(i32 1)
  %node.addr = alloca %struct.node*, align 8
  %node.addr24 = bitcast %struct.node** %node.addr to %struct.node**
  %bitcast = bitcast %struct.node** %node.addr to i8*
  %mtmp = getelementptr %struct.node** %node.addr24, i32 1
  %bitcast25 = bitcast %struct.node** %mtmp to i8*
  %i = alloca i32, align 4
  %i26 = bitcast i32* %i to i32*
  %bitcast27 = bitcast i32* %i to i8*
  %mtmp28 = getelementptr i32* %i26, i32 1
  %bitcast29 = bitcast i32* %mtmp28 to i8*
  %tnode = alloca %struct.node*, align 8
  %tnode30 = bitcast %struct.node** %tnode to %struct.node**
  %bitcast31 = bitcast %struct.node** %tnode to i8*
  %mtmp32 = getelementptr %struct.node** %tnode30, i32 1
  %bitcast33 = bitcast %struct.node** %mtmp32 to i8*
  store %struct.node* %node, %struct.node** %node.addr, align 8
  %bitcast105 = bitcast %struct.node** %node.addr to i8*
  call void @__softboundcets_metadata_store(i8* %bitcast105, i8* %0, i8* %1)
  %2 = load %struct.node** %node.addr, align 8
  %bitcast34 = bitcast %struct.node** %node.addr to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast34, i8** %base.alloca, i8** %bound.alloca)
  %base.load = load i8** %base.alloca
  %bound.load = load i8** %bound.alloca
  store %struct.node* %2, %struct.node** %tnode, align 8
  %bitcast106 = bitcast %struct.node** %tnode to i8*
  call void @__softboundcets_metadata_store(i8* %bitcast106, i8* %base.load, i8* %bound.load)
  br label %while.cond

while.cond:                                       ; preds = %if.end22, %entry
  %3 = load %struct.node** %tnode, align 8
  %bitcast35 = bitcast %struct.node** %tnode to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast35, i8** %base.alloca36, i8** %bound.alloca37)
  %base.load38 = load i8** %base.alloca36
  %bound.load39 = load i8** %bound.alloca37
  %expanded = getelementptr inbounds %struct.node* %3, i32 0, i32 2
  %4 = load i8* %expanded, align 1
  %tobool = icmp ne i8 %4, 0
  br i1 %tobool, label %while.body, label %while.end23

while.body:                                       ; preds = %while.cond
  %5 = load i32* @white_to_move, align 4
  %tobool1 = icmp ne i32 %5, 0
  %cond = select i1 %tobool1, i32 0, i32 1
  %6 = load i32* @root_to_move, align 4
  %cmp = icmp eq i32 %cond, %6
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %while.body
  store i32 0, i32* %i, align 4
  br label %while.cond2

while.cond2:                                      ; preds = %while.body5, %if.then
  %7 = load i32* %i, align 4
  %idxprom = sext i32 %7 to i64
  %8 = load %struct.node** %tnode, align 8
  %bitcast45 = bitcast %struct.node** %tnode to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast45, i8** %base.alloca46, i8** %bound.alloca47)
  %base.load48 = load i8** %base.alloca46
  %bound.load49 = load i8** %bound.alloca47
  %children = getelementptr inbounds %struct.node* %8, i32 0, i32 6
  %9 = load %struct.node*** %children, align 8
  %bitcast50 = bitcast %struct.node*** %children to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast50, i8** %base.alloca51, i8** %bound.alloca52)
  %base.load53 = load i8** %base.alloca51
  %bound.load54 = load i8** %bound.alloca52
  %arrayidx = getelementptr inbounds %struct.node** %9, i64 %idxprom
  %10 = load %struct.node** %arrayidx, align 8
  %bitcast55 = bitcast %struct.node** %arrayidx to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast55, i8** %base.alloca56, i8** %bound.alloca57)
  %base.load58 = load i8** %base.alloca56
  %bound.load59 = load i8** %bound.alloca57
  %proof = getelementptr inbounds %struct.node* %10, i32 0, i32 4
  %11 = load i32* %proof, align 4
  %12 = load %struct.node** %tnode, align 8
  %bitcast60 = bitcast %struct.node** %tnode to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast60, i8** %base.alloca61, i8** %bound.alloca62)
  %base.load63 = load i8** %base.alloca61
  %bound.load64 = load i8** %bound.alloca62
  %proof3 = getelementptr inbounds %struct.node* %12, i32 0, i32 4
  %13 = load i32* %proof3, align 4
  %cmp4 = icmp ne i32 %11, %13
  br i1 %cmp4, label %while.body5, label %while.end

while.body5:                                      ; preds = %while.cond2
  %14 = load i32* %i, align 4
  %inc = add nsw i32 %14, 1
  store i32 %inc, i32* %i, align 4
  br label %while.cond2

while.end:                                        ; preds = %while.cond2
  br label %if.end

if.else:                                          ; preds = %while.body
  store i32 0, i32* %i, align 4
  br label %while.cond6

while.cond6:                                      ; preds = %while.body12, %if.else
  %15 = load i32* %i, align 4
  %idxprom7 = sext i32 %15 to i64
  %16 = load %struct.node** %tnode, align 8
  %bitcast65 = bitcast %struct.node** %tnode to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast65, i8** %base.alloca66, i8** %bound.alloca67)
  %base.load68 = load i8** %base.alloca66
  %bound.load69 = load i8** %bound.alloca67
  %children8 = getelementptr inbounds %struct.node* %16, i32 0, i32 6
  %17 = load %struct.node*** %children8, align 8
  %bitcast70 = bitcast %struct.node*** %children8 to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast70, i8** %base.alloca71, i8** %bound.alloca72)
  %base.load73 = load i8** %base.alloca71
  %bound.load74 = load i8** %bound.alloca72
  %arrayidx9 = getelementptr inbounds %struct.node** %17, i64 %idxprom7
  %18 = load %struct.node** %arrayidx9, align 8
  %bitcast75 = bitcast %struct.node** %arrayidx9 to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast75, i8** %base.alloca76, i8** %bound.alloca77)
  %base.load78 = load i8** %base.alloca76
  %bound.load79 = load i8** %bound.alloca77
  %disproof = getelementptr inbounds %struct.node* %18, i32 0, i32 5
  %19 = load i32* %disproof, align 4
  %20 = load %struct.node** %tnode, align 8
  %bitcast80 = bitcast %struct.node** %tnode to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast80, i8** %base.alloca81, i8** %bound.alloca82)
  %base.load83 = load i8** %base.alloca81
  %bound.load84 = load i8** %bound.alloca82
  %disproof10 = getelementptr inbounds %struct.node* %20, i32 0, i32 5
  %21 = load i32* %disproof10, align 4
  %cmp11 = icmp ne i32 %19, %21
  br i1 %cmp11, label %while.body12, label %while.end14

while.body12:                                     ; preds = %while.cond6
  %22 = load i32* %i, align 4
  %inc13 = add nsw i32 %22, 1
  store i32 %inc13, i32* %i, align 4
  br label %while.cond6

while.end14:                                      ; preds = %while.cond6
  br label %if.end

if.end:                                           ; preds = %while.end14, %while.end
  %23 = load i32* %i, align 4
  %idxprom15 = sext i32 %23 to i64
  %24 = load %struct.node** %tnode, align 8
  %bitcast85 = bitcast %struct.node** %tnode to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast85, i8** %base.alloca86, i8** %bound.alloca87)
  %base.load88 = load i8** %base.alloca86
  %bound.load89 = load i8** %bound.alloca87
  %children16 = getelementptr inbounds %struct.node* %24, i32 0, i32 6
  %25 = load %struct.node*** %children16, align 8
  %bitcast90 = bitcast %struct.node*** %children16 to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast90, i8** %base.alloca91, i8** %bound.alloca92)
  %base.load93 = load i8** %base.alloca91
  %bound.load94 = load i8** %bound.alloca92
  %arrayidx17 = getelementptr inbounds %struct.node** %25, i64 %idxprom15
  %26 = load %struct.node** %arrayidx17, align 8
  %bitcast95 = bitcast %struct.node** %arrayidx17 to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast95, i8** %base.alloca96, i8** %bound.alloca97)
  %base.load98 = load i8** %base.alloca96
  %bound.load99 = load i8** %bound.alloca97
  store %struct.node* %26, %struct.node** %tnode, align 8
  %bitcast107 = bitcast %struct.node** %tnode to i8*
  call void @__softboundcets_metadata_store(i8* %bitcast107, i8* %base.load98, i8* %bound.load99)
  %27 = load i32* @hash, align 4
  %28 = load i32* @move_number, align 4
  %29 = load i32* @ply, align 4
  %add = add nsw i32 %28, %29
  %sub = sub nsw i32 %add, 1
  %idxprom18 = sext i32 %sub to i64
  %arrayidx19 = getelementptr inbounds [600 x i32]* @hash_history, i32 0, i64 %idxprom18
  store i32 %27, i32* %arrayidx19, align 4
  %30 = load %struct.node** %tnode, align 8
  %bitcast100 = bitcast %struct.node** %tnode to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast100, i8** %base.alloca101, i8** %bound.alloca102)
  %base.load103 = load i8** %base.alloca101
  %bound.load104 = load i8** %bound.alloca102
  %move = getelementptr inbounds %struct.node* %30, i32 0, i32 8
  call void @__softboundcets_allocate_shadow_stack_space(i32 2)
  call void @__softboundcets_store_base_shadow_stack(i8* %base.load103, i32 1)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bound.load104, i32 1)
  call void @make(%struct.move_s* %move, i32 0)
  call void @__softboundcets_deallocate_shadow_stack_space()
  %31 = load i32* @ply, align 4
  %32 = load i32* @maxply, align 4
  %cmp20 = icmp sgt i32 %31, %32
  br i1 %cmp20, label %if.then21, label %if.end22

if.then21:                                        ; preds = %if.end
  %33 = load i32* @ply, align 4
  store i32 %33, i32* @maxply, align 4
  br label %if.end22

if.end22:                                         ; preds = %if.then21, %if.end
  br label %while.cond

while.end23:                                      ; preds = %while.cond
  %34 = load %struct.node** %tnode, align 8
  %bitcast40 = bitcast %struct.node** %tnode to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast40, i8** %base.alloca41, i8** %bound.alloca42)
  %base.load43 = load i8** %base.alloca41
  %bound.load44 = load i8** %bound.alloca42
  call void @__softboundcets_store_base_shadow_stack(i8* %base.load43, i32 0)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bound.load44, i32 0)
  ret %struct.node* %34
}

; Function Attrs: nounwind uwtable
define internal void @set_proof_and_disproof_numbers(%struct.node* %node) #0 {
entry:
  %base.alloca606 = alloca i8*
  %bound.alloca607 = alloca i8*
  %base.alloca601 = alloca i8*
  %bound.alloca602 = alloca i8*
  %base.alloca596 = alloca i8*
  %bound.alloca597 = alloca i8*
  %base.alloca591 = alloca i8*
  %bound.alloca592 = alloca i8*
  %base.alloca586 = alloca i8*
  %bound.alloca587 = alloca i8*
  %base.alloca581 = alloca i8*
  %bound.alloca582 = alloca i8*
  %base.alloca576 = alloca i8*
  %bound.alloca577 = alloca i8*
  %base.alloca571 = alloca i8*
  %bound.alloca572 = alloca i8*
  %base.alloca566 = alloca i8*
  %bound.alloca567 = alloca i8*
  %base.alloca561 = alloca i8*
  %bound.alloca562 = alloca i8*
  %base.alloca556 = alloca i8*
  %bound.alloca557 = alloca i8*
  %base.alloca551 = alloca i8*
  %bound.alloca552 = alloca i8*
  %base.alloca546 = alloca i8*
  %bound.alloca547 = alloca i8*
  %base.alloca541 = alloca i8*
  %bound.alloca542 = alloca i8*
  %base.alloca536 = alloca i8*
  %bound.alloca537 = alloca i8*
  %base.alloca531 = alloca i8*
  %bound.alloca532 = alloca i8*
  %base.alloca526 = alloca i8*
  %bound.alloca527 = alloca i8*
  %base.alloca521 = alloca i8*
  %bound.alloca522 = alloca i8*
  %base.alloca516 = alloca i8*
  %bound.alloca517 = alloca i8*
  %base.alloca511 = alloca i8*
  %bound.alloca512 = alloca i8*
  %base.alloca506 = alloca i8*
  %bound.alloca507 = alloca i8*
  %base.alloca501 = alloca i8*
  %bound.alloca502 = alloca i8*
  %base.alloca496 = alloca i8*
  %bound.alloca497 = alloca i8*
  %base.alloca491 = alloca i8*
  %bound.alloca492 = alloca i8*
  %base.alloca486 = alloca i8*
  %bound.alloca487 = alloca i8*
  %base.alloca481 = alloca i8*
  %bound.alloca482 = alloca i8*
  %base.alloca476 = alloca i8*
  %bound.alloca477 = alloca i8*
  %base.alloca471 = alloca i8*
  %bound.alloca472 = alloca i8*
  %base.alloca466 = alloca i8*
  %bound.alloca467 = alloca i8*
  %base.alloca461 = alloca i8*
  %bound.alloca462 = alloca i8*
  %base.alloca456 = alloca i8*
  %bound.alloca457 = alloca i8*
  %base.alloca451 = alloca i8*
  %bound.alloca452 = alloca i8*
  %base.alloca446 = alloca i8*
  %bound.alloca447 = alloca i8*
  %base.alloca441 = alloca i8*
  %bound.alloca442 = alloca i8*
  %base.alloca436 = alloca i8*
  %bound.alloca437 = alloca i8*
  %base.alloca431 = alloca i8*
  %bound.alloca432 = alloca i8*
  %base.alloca426 = alloca i8*
  %bound.alloca427 = alloca i8*
  %base.alloca421 = alloca i8*
  %bound.alloca422 = alloca i8*
  %base.alloca416 = alloca i8*
  %bound.alloca417 = alloca i8*
  %base.alloca411 = alloca i8*
  %bound.alloca412 = alloca i8*
  %base.alloca406 = alloca i8*
  %bound.alloca407 = alloca i8*
  %base.alloca401 = alloca i8*
  %bound.alloca402 = alloca i8*
  %base.alloca396 = alloca i8*
  %bound.alloca397 = alloca i8*
  %base.alloca391 = alloca i8*
  %bound.alloca392 = alloca i8*
  %base.alloca386 = alloca i8*
  %bound.alloca387 = alloca i8*
  %base.alloca381 = alloca i8*
  %bound.alloca382 = alloca i8*
  %base.alloca376 = alloca i8*
  %bound.alloca377 = alloca i8*
  %base.alloca371 = alloca i8*
  %bound.alloca372 = alloca i8*
  %base.alloca366 = alloca i8*
  %bound.alloca367 = alloca i8*
  %base.alloca361 = alloca i8*
  %bound.alloca362 = alloca i8*
  %base.alloca356 = alloca i8*
  %bound.alloca357 = alloca i8*
  %base.alloca351 = alloca i8*
  %bound.alloca352 = alloca i8*
  %base.alloca346 = alloca i8*
  %bound.alloca347 = alloca i8*
  %base.alloca341 = alloca i8*
  %bound.alloca342 = alloca i8*
  %base.alloca336 = alloca i8*
  %bound.alloca337 = alloca i8*
  %base.alloca = alloca i8*
  %bound.alloca = alloca i8*
  %0 = call i8* @__softboundcets_load_base_shadow_stack(i32 1)
  %1 = call i8* @__softboundcets_load_bound_shadow_stack(i32 1)
  %node.addr = alloca %struct.node*, align 8
  %node.addr304 = bitcast %struct.node** %node.addr to %struct.node**
  %bitcast = bitcast %struct.node** %node.addr to i8*
  %mtmp = getelementptr %struct.node** %node.addr304, i32 1
  %bitcast305 = bitcast %struct.node** %mtmp to i8*
  %proof = alloca i32, align 4
  %proof306 = bitcast i32* %proof to i32*
  %bitcast307 = bitcast i32* %proof to i8*
  %mtmp308 = getelementptr i32* %proof306, i32 1
  %bitcast309 = bitcast i32* %mtmp308 to i8*
  %disproof = alloca i32, align 4
  %disproof310 = bitcast i32* %disproof to i32*
  %bitcast311 = bitcast i32* %disproof to i8*
  %mtmp312 = getelementptr i32* %disproof310, i32 1
  %bitcast313 = bitcast i32* %mtmp312 to i8*
  %i = alloca i32, align 4
  %i314 = bitcast i32* %i to i32*
  %bitcast315 = bitcast i32* %i to i8*
  %mtmp316 = getelementptr i32* %i314, i32 1
  %bitcast317 = bitcast i32* %mtmp316 to i8*
  %moves = alloca [512 x %struct.move_s], align 16
  %moves318 = bitcast [512 x %struct.move_s]* %moves to [512 x %struct.move_s]*
  %bitcast319 = bitcast [512 x %struct.move_s]* %moves to i8*
  %mtmp320 = getelementptr [512 x %struct.move_s]* %moves318, i32 1
  %bitcast321 = bitcast [512 x %struct.move_s]* %mtmp320 to i8*
  %l = alloca i32, align 4
  %l322 = bitcast i32* %l to i32*
  %bitcast323 = bitcast i32* %l to i8*
  %mtmp324 = getelementptr i32* %l322, i32 1
  %bitcast325 = bitcast i32* %mtmp324 to i8*
  %num_moves = alloca i32, align 4
  %num_moves326 = bitcast i32* %num_moves to i32*
  %bitcast327 = bitcast i32* %num_moves to i8*
  %mtmp328 = getelementptr i32* %num_moves326, i32 1
  %bitcast329 = bitcast i32* %mtmp328 to i8*
  %ic = alloca i32, align 4
  %ic330 = bitcast i32* %ic to i32*
  %bitcast331 = bitcast i32* %ic to i8*
  %mtmp332 = getelementptr i32* %ic330, i32 1
  %bitcast333 = bitcast i32* %mtmp332 to i8*
  store %struct.node* %node, %struct.node** %node.addr, align 8
  %bitcast610 = bitcast %struct.node** %node.addr to i8*
  call void @__softboundcets_metadata_store(i8* %bitcast610, i8* %0, i8* %1)
  %2 = load %struct.node** %node.addr, align 8
  %bitcast334 = bitcast %struct.node** %node.addr to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast334, i8** %base.alloca, i8** %bound.alloca)
  %base.load = load i8** %base.alloca
  %bound.load = load i8** %bound.alloca
  %expanded = getelementptr inbounds %struct.node* %2, i32 0, i32 2
  %3 = load i8* %expanded, align 1
  %tobool = icmp ne i8 %3, 0
  br i1 %tobool, label %if.then, label %if.else90

if.then:                                          ; preds = %entry
  %4 = load i32* @white_to_move, align 4
  %tobool1 = icmp ne i32 %4, 0
  %cond = select i1 %tobool1, i32 0, i32 1
  %5 = load i32* @root_to_move, align 4
  %cmp = icmp ne i32 %cond, %5
  br i1 %cmp, label %if.then2, label %if.else36

if.then2:                                         ; preds = %if.then
  store i32 0, i32* %proof, align 4
  store i32 100000000, i32* %disproof, align 4
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.then2
  %6 = load i32* %i, align 4
  %7 = load %struct.node** %node.addr, align 8
  %bitcast355 = bitcast %struct.node** %node.addr to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast355, i8** %base.alloca356, i8** %bound.alloca357)
  %base.load358 = load i8** %base.alloca356
  %bound.load359 = load i8** %bound.alloca357
  %num_children = getelementptr inbounds %struct.node* %7, i32 0, i32 1
  %8 = load i8* %num_children, align 1
  %conv = zext i8 %8 to i32
  %cmp3 = icmp slt i32 %6, %conv
  br i1 %cmp3, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %9 = load i32* %i, align 4
  %idxprom = sext i32 %9 to i64
  %10 = load %struct.node** %node.addr, align 8
  %bitcast370 = bitcast %struct.node** %node.addr to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast370, i8** %base.alloca371, i8** %bound.alloca372)
  %base.load373 = load i8** %base.alloca371
  %bound.load374 = load i8** %bound.alloca372
  %children = getelementptr inbounds %struct.node* %10, i32 0, i32 6
  %11 = load %struct.node*** %children, align 8
  %bitcast375 = bitcast %struct.node*** %children to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast375, i8** %base.alloca376, i8** %bound.alloca377)
  %base.load378 = load i8** %base.alloca376
  %bound.load379 = load i8** %bound.alloca377
  %arrayidx = getelementptr inbounds %struct.node** %11, i64 %idxprom
  %12 = load %struct.node** %arrayidx, align 8
  %bitcast380 = bitcast %struct.node** %arrayidx to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast380, i8** %base.alloca381, i8** %bound.alloca382)
  %base.load383 = load i8** %base.alloca381
  %bound.load384 = load i8** %bound.alloca382
  %proof5 = getelementptr inbounds %struct.node* %12, i32 0, i32 4
  %13 = load i32* %proof5, align 4
  %14 = load i32* %proof, align 4
  %add = add nsw i32 %14, %13
  store i32 %add, i32* %proof, align 4
  %15 = load i32* %proof, align 4
  %cmp6 = icmp sgt i32 %15, 100000000
  br i1 %cmp6, label %if.then8, label %if.end

if.then8:                                         ; preds = %for.body
  store i32 100000000, i32* %proof, align 4
  br label %if.end

if.end:                                           ; preds = %if.then8, %for.body
  %16 = load i32* %i, align 4
  %idxprom9 = sext i32 %16 to i64
  %17 = load %struct.node** %node.addr, align 8
  %bitcast425 = bitcast %struct.node** %node.addr to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast425, i8** %base.alloca426, i8** %bound.alloca427)
  %base.load428 = load i8** %base.alloca426
  %bound.load429 = load i8** %bound.alloca427
  %children10 = getelementptr inbounds %struct.node* %17, i32 0, i32 6
  %18 = load %struct.node*** %children10, align 8
  %bitcast430 = bitcast %struct.node*** %children10 to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast430, i8** %base.alloca431, i8** %bound.alloca432)
  %base.load433 = load i8** %base.alloca431
  %bound.load434 = load i8** %bound.alloca432
  %arrayidx11 = getelementptr inbounds %struct.node** %18, i64 %idxprom9
  %19 = load %struct.node** %arrayidx11, align 8
  %bitcast435 = bitcast %struct.node** %arrayidx11 to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast435, i8** %base.alloca436, i8** %bound.alloca437)
  %base.load438 = load i8** %base.alloca436
  %bound.load439 = load i8** %bound.alloca437
  %disproof12 = getelementptr inbounds %struct.node* %19, i32 0, i32 5
  %20 = load i32* %disproof12, align 4
  %21 = load i32* %disproof, align 4
  %cmp13 = icmp slt i32 %20, %21
  br i1 %cmp13, label %if.then15, label %if.end20

if.then15:                                        ; preds = %if.end
  %22 = load i32* %i, align 4
  %idxprom16 = sext i32 %22 to i64
  %23 = load %struct.node** %node.addr, align 8
  %bitcast470 = bitcast %struct.node** %node.addr to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast470, i8** %base.alloca471, i8** %bound.alloca472)
  %base.load473 = load i8** %base.alloca471
  %bound.load474 = load i8** %bound.alloca472
  %children17 = getelementptr inbounds %struct.node* %23, i32 0, i32 6
  %24 = load %struct.node*** %children17, align 8
  %bitcast475 = bitcast %struct.node*** %children17 to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast475, i8** %base.alloca476, i8** %bound.alloca477)
  %base.load478 = load i8** %base.alloca476
  %bound.load479 = load i8** %bound.alloca477
  %arrayidx18 = getelementptr inbounds %struct.node** %24, i64 %idxprom16
  %25 = load %struct.node** %arrayidx18, align 8
  %bitcast480 = bitcast %struct.node** %arrayidx18 to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast480, i8** %base.alloca481, i8** %bound.alloca482)
  %base.load483 = load i8** %base.alloca481
  %bound.load484 = load i8** %bound.alloca482
  %disproof19 = getelementptr inbounds %struct.node* %25, i32 0, i32 5
  %26 = load i32* %disproof19, align 4
  store i32 %26, i32* %disproof, align 4
  br label %if.end20

if.end20:                                         ; preds = %if.then15, %if.end
  br label %for.inc

for.inc:                                          ; preds = %if.end20
  %27 = load i32* %i, align 4
  %inc = add nsw i32 %27, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %28 = load i32* %proof, align 4
  %cmp21 = icmp eq i32 %28, 0
  br i1 %cmp21, label %if.then25, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %for.end
  %29 = load i32* %disproof, align 4
  %cmp23 = icmp eq i32 %29, 100000000
  br i1 %cmp23, label %if.then25, label %if.else

if.then25:                                        ; preds = %lor.lhs.false, %for.end
  %30 = load i32* @forwards, align 4
  %inc26 = add nsw i32 %30, 1
  store i32 %inc26, i32* @forwards, align 4
  call void @StoreTT(i32 999500, i32 1000000, i32 -1000000, i32 -1, i32 0, i32 200)
  br label %if.end35

if.else:                                          ; preds = %lor.lhs.false
  %31 = load i32* %disproof, align 4
  %cmp27 = icmp eq i32 %31, 0
  br i1 %cmp27, label %if.then32, label %lor.lhs.false29

lor.lhs.false29:                                  ; preds = %if.else
  %32 = load i32* %proof, align 4
  %cmp30 = icmp eq i32 %32, 100000000
  br i1 %cmp30, label %if.then32, label %if.end34

if.then32:                                        ; preds = %lor.lhs.false29, %if.else
  %33 = load i32* @forwards, align 4
  %inc33 = add nsw i32 %33, 1
  store i32 %inc33, i32* @forwards, align 4
  call void @StoreTT(i32 -999500, i32 1000000, i32 -1000000, i32 -1, i32 0, i32 200)
  br label %if.end34

if.end34:                                         ; preds = %if.then32, %lor.lhs.false29
  br label %if.end35

if.end35:                                         ; preds = %if.end34, %if.then25
  br label %if.end84

if.else36:                                        ; preds = %if.then
  store i32 0, i32* %disproof, align 4
  store i32 100000000, i32* %proof, align 4
  store i32 0, i32* %i, align 4
  br label %for.cond37

for.cond37:                                       ; preds = %for.inc64, %if.else36
  %34 = load i32* %i, align 4
  %35 = load %struct.node** %node.addr, align 8
  %bitcast360 = bitcast %struct.node** %node.addr to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast360, i8** %base.alloca361, i8** %bound.alloca362)
  %base.load363 = load i8** %base.alloca361
  %bound.load364 = load i8** %bound.alloca362
  %num_children38 = getelementptr inbounds %struct.node* %35, i32 0, i32 1
  %36 = load i8* %num_children38, align 1
  %conv39 = zext i8 %36 to i32
  %cmp40 = icmp slt i32 %34, %conv39
  br i1 %cmp40, label %for.body42, label %for.end66

for.body42:                                       ; preds = %for.cond37
  %37 = load i32* %i, align 4
  %idxprom43 = sext i32 %37 to i64
  %38 = load %struct.node** %node.addr, align 8
  %bitcast385 = bitcast %struct.node** %node.addr to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast385, i8** %base.alloca386, i8** %bound.alloca387)
  %base.load388 = load i8** %base.alloca386
  %bound.load389 = load i8** %bound.alloca387
  %children44 = getelementptr inbounds %struct.node* %38, i32 0, i32 6
  %39 = load %struct.node*** %children44, align 8
  %bitcast390 = bitcast %struct.node*** %children44 to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast390, i8** %base.alloca391, i8** %bound.alloca392)
  %base.load393 = load i8** %base.alloca391
  %bound.load394 = load i8** %bound.alloca392
  %arrayidx45 = getelementptr inbounds %struct.node** %39, i64 %idxprom43
  %40 = load %struct.node** %arrayidx45, align 8
  %bitcast395 = bitcast %struct.node** %arrayidx45 to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast395, i8** %base.alloca396, i8** %bound.alloca397)
  %base.load398 = load i8** %base.alloca396
  %bound.load399 = load i8** %bound.alloca397
  %disproof46 = getelementptr inbounds %struct.node* %40, i32 0, i32 5
  %41 = load i32* %disproof46, align 4
  %42 = load i32* %disproof, align 4
  %add47 = add nsw i32 %42, %41
  store i32 %add47, i32* %disproof, align 4
  %43 = load i32* %disproof, align 4
  %cmp48 = icmp sgt i32 %43, 100000000
  br i1 %cmp48, label %if.then50, label %if.end51

if.then50:                                        ; preds = %for.body42
  store i32 100000000, i32* %disproof, align 4
  br label %if.end51

if.end51:                                         ; preds = %if.then50, %for.body42
  %44 = load i32* %i, align 4
  %idxprom52 = sext i32 %44 to i64
  %45 = load %struct.node** %node.addr, align 8
  %bitcast440 = bitcast %struct.node** %node.addr to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast440, i8** %base.alloca441, i8** %bound.alloca442)
  %base.load443 = load i8** %base.alloca441
  %bound.load444 = load i8** %bound.alloca442
  %children53 = getelementptr inbounds %struct.node* %45, i32 0, i32 6
  %46 = load %struct.node*** %children53, align 8
  %bitcast445 = bitcast %struct.node*** %children53 to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast445, i8** %base.alloca446, i8** %bound.alloca447)
  %base.load448 = load i8** %base.alloca446
  %bound.load449 = load i8** %bound.alloca447
  %arrayidx54 = getelementptr inbounds %struct.node** %46, i64 %idxprom52
  %47 = load %struct.node** %arrayidx54, align 8
  %bitcast450 = bitcast %struct.node** %arrayidx54 to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast450, i8** %base.alloca451, i8** %bound.alloca452)
  %base.load453 = load i8** %base.alloca451
  %bound.load454 = load i8** %bound.alloca452
  %proof55 = getelementptr inbounds %struct.node* %47, i32 0, i32 4
  %48 = load i32* %proof55, align 4
  %49 = load i32* %proof, align 4
  %cmp56 = icmp slt i32 %48, %49
  br i1 %cmp56, label %if.then58, label %if.end63

if.then58:                                        ; preds = %if.end51
  %50 = load i32* %i, align 4
  %idxprom59 = sext i32 %50 to i64
  %51 = load %struct.node** %node.addr, align 8
  %bitcast485 = bitcast %struct.node** %node.addr to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast485, i8** %base.alloca486, i8** %bound.alloca487)
  %base.load488 = load i8** %base.alloca486
  %bound.load489 = load i8** %bound.alloca487
  %children60 = getelementptr inbounds %struct.node* %51, i32 0, i32 6
  %52 = load %struct.node*** %children60, align 8
  %bitcast490 = bitcast %struct.node*** %children60 to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast490, i8** %base.alloca491, i8** %bound.alloca492)
  %base.load493 = load i8** %base.alloca491
  %bound.load494 = load i8** %bound.alloca492
  %arrayidx61 = getelementptr inbounds %struct.node** %52, i64 %idxprom59
  %53 = load %struct.node** %arrayidx61, align 8
  %bitcast495 = bitcast %struct.node** %arrayidx61 to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast495, i8** %base.alloca496, i8** %bound.alloca497)
  %base.load498 = load i8** %base.alloca496
  %bound.load499 = load i8** %bound.alloca497
  %proof62 = getelementptr inbounds %struct.node* %53, i32 0, i32 4
  %54 = load i32* %proof62, align 4
  store i32 %54, i32* %proof, align 4
  br label %if.end63

if.end63:                                         ; preds = %if.then58, %if.end51
  br label %for.inc64

for.inc64:                                        ; preds = %if.end63
  %55 = load i32* %i, align 4
  %inc65 = add nsw i32 %55, 1
  store i32 %inc65, i32* %i, align 4
  br label %for.cond37

for.end66:                                        ; preds = %for.cond37
  %56 = load i32* %proof, align 4
  %cmp67 = icmp eq i32 %56, 0
  br i1 %cmp67, label %if.then72, label %lor.lhs.false69

lor.lhs.false69:                                  ; preds = %for.end66
  %57 = load i32* %disproof, align 4
  %cmp70 = icmp eq i32 %57, 100000000
  br i1 %cmp70, label %if.then72, label %if.else74

if.then72:                                        ; preds = %lor.lhs.false69, %for.end66
  %58 = load i32* @forwards, align 4
  %inc73 = add nsw i32 %58, 1
  store i32 %inc73, i32* @forwards, align 4
  call void @StoreTT(i32 999500, i32 1000000, i32 -1000000, i32 -1, i32 0, i32 200)
  br label %if.end83

if.else74:                                        ; preds = %lor.lhs.false69
  %59 = load i32* %disproof, align 4
  %cmp75 = icmp eq i32 %59, 0
  br i1 %cmp75, label %if.then80, label %lor.lhs.false77

lor.lhs.false77:                                  ; preds = %if.else74
  %60 = load i32* %proof, align 4
  %cmp78 = icmp eq i32 %60, 100000000
  br i1 %cmp78, label %if.then80, label %if.end82

if.then80:                                        ; preds = %lor.lhs.false77, %if.else74
  %61 = load i32* @forwards, align 4
  %inc81 = add nsw i32 %61, 1
  store i32 %inc81, i32* @forwards, align 4
  call void @StoreTT(i32 -999500, i32 1000000, i32 -1000000, i32 -1, i32 0, i32 200)
  br label %if.end82

if.end82:                                         ; preds = %if.then80, %lor.lhs.false77
  br label %if.end83

if.end83:                                         ; preds = %if.end82, %if.then72
  br label %if.end84

if.end84:                                         ; preds = %if.end83, %if.end35
  %62 = load i32* @hash, align 4
  %63 = load i32* @move_number, align 4
  %64 = load i32* @ply, align 4
  %add85 = add nsw i32 %63, %64
  %sub = sub nsw i32 %add85, 1
  %idxprom86 = sext i32 %sub to i64
  %arrayidx87 = getelementptr inbounds [600 x i32]* @hash_history, i32 0, i64 %idxprom86
  store i32 %62, i32* %arrayidx87, align 4
  %65 = load i32* %proof, align 4
  %66 = load %struct.node** %node.addr, align 8
  %bitcast510 = bitcast %struct.node** %node.addr to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast510, i8** %base.alloca511, i8** %bound.alloca512)
  %base.load513 = load i8** %base.alloca511
  %bound.load514 = load i8** %bound.alloca512
  %proof88 = getelementptr inbounds %struct.node* %66, i32 0, i32 4
  store i32 %65, i32* %proof88, align 4
  %67 = load i32* %disproof, align 4
  %68 = load %struct.node** %node.addr, align 8
  %bitcast515 = bitcast %struct.node** %node.addr to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast515, i8** %base.alloca516, i8** %bound.alloca517)
  %base.load518 = load i8** %base.alloca516
  %bound.load519 = load i8** %bound.alloca517
  %disproof89 = getelementptr inbounds %struct.node* %68, i32 0, i32 5
  store i32 %67, i32* %disproof89, align 4
  br label %if.end303

if.else90:                                        ; preds = %entry
  %69 = load %struct.node** %node.addr, align 8
  %bitcast335 = bitcast %struct.node** %node.addr to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast335, i8** %base.alloca336, i8** %bound.alloca337)
  %base.load338 = load i8** %base.alloca336
  %bound.load339 = load i8** %bound.alloca337
  %evaluated = getelementptr inbounds %struct.node* %69, i32 0, i32 3
  %70 = load i8* %evaluated, align 1
  %tobool91 = icmp ne i8 %70, 0
  br i1 %tobool91, label %if.then92, label %if.else299

if.then92:                                        ; preds = %if.else90
  %71 = load %struct.node** %node.addr, align 8
  %bitcast340 = bitcast %struct.node** %node.addr to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast340, i8** %base.alloca341, i8** %bound.alloca342)
  %base.load343 = load i8** %base.alloca341
  %bound.load344 = load i8** %bound.alloca342
  %value = getelementptr inbounds %struct.node* %71, i32 0, i32 0
  %72 = load i8* %value, align 1
  %conv93 = zext i8 %72 to i32
  %cmp94 = icmp eq i32 %conv93, 2
  br i1 %cmp94, label %if.then96, label %if.else271

if.then96:                                        ; preds = %if.then92
  %73 = load i32* @hash, align 4
  %74 = load i32* @move_number, align 4
  %75 = load i32* @ply, align 4
  %add97 = add nsw i32 %74, %75
  %sub98 = sub nsw i32 %add97, 1
  %idxprom99 = sext i32 %sub98 to i64
  %arrayidx100 = getelementptr inbounds [600 x i32]* @hash_history, i32 0, i64 %idxprom99
  store i32 %73, i32* %arrayidx100, align 4
  %call = call i32 @is_draw()
  %tobool101 = icmp ne i32 %call, 0
  br i1 %tobool101, label %if.then105, label %lor.lhs.false102

lor.lhs.false102:                                 ; preds = %if.then96
  %76 = load i32* @ply, align 4
  %cmp103 = icmp sgt i32 %76, 200
  br i1 %cmp103, label %if.then105, label %if.end108

if.then105:                                       ; preds = %lor.lhs.false102, %if.then96
  %77 = load %struct.node** %node.addr, align 8
  %bitcast400 = bitcast %struct.node** %node.addr to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast400, i8** %base.alloca401, i8** %bound.alloca402)
  %base.load403 = load i8** %base.alloca401
  %bound.load404 = load i8** %bound.alloca402
  %proof106 = getelementptr inbounds %struct.node* %77, i32 0, i32 4
  store i32 50000, i32* %proof106, align 4
  %78 = load %struct.node** %node.addr, align 8
  %bitcast405 = bitcast %struct.node** %node.addr to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast405, i8** %base.alloca406, i8** %bound.alloca407)
  %base.load408 = load i8** %base.alloca406
  %bound.load409 = load i8** %bound.alloca407
  %disproof107 = getelementptr inbounds %struct.node* %78, i32 0, i32 5
  store i32 50000, i32* %disproof107, align 4
  br label %if.end303

if.end108:                                        ; preds = %lor.lhs.false102
  %79 = load i32* @Variant, align 4
  %cmp109 = icmp ne i32 %79, 4
  br i1 %cmp109, label %if.then111, label %if.else134

if.then111:                                       ; preds = %if.end108
  store i32 0, i32* %num_moves, align 4
  %arrayidx112 = getelementptr inbounds [512 x %struct.move_s]* %moves, i32 0, i64 0
  call void @__softboundcets_allocate_shadow_stack_space(i32 2)
  call void @__softboundcets_store_base_shadow_stack(i8* %bitcast319, i32 1)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bitcast321, i32 1)
  call void @gen(%struct.move_s* %arrayidx112)
  call void @__softboundcets_deallocate_shadow_stack_space()
  %80 = load i32* @numb_moves, align 4
  store i32 %80, i32* %num_moves, align 4
  %call113 = call i32 @in_check()
  store i32 %call113, i32* %ic, align 4
  %81 = load i32* @Variant, align 4
  %cmp114 = icmp ne i32 %81, 3
  br i1 %cmp114, label %if.then116, label %if.else132

if.then116:                                       ; preds = %if.then111
  store i32 0, i32* %l, align 4
  store i32 0, i32* %i, align 4
  br label %for.cond117

for.cond117:                                      ; preds = %for.inc129, %if.then116
  %82 = load i32* %i, align 4
  %83 = load i32* %num_moves, align 4
  %cmp118 = icmp slt i32 %82, %83
  br i1 %cmp118, label %for.body120, label %for.end131

for.body120:                                      ; preds = %for.cond117
  %arrayidx121 = getelementptr inbounds [512 x %struct.move_s]* %moves, i32 0, i64 0
  %84 = load i32* %i, align 4
  call void @__softboundcets_allocate_shadow_stack_space(i32 2)
  call void @__softboundcets_store_base_shadow_stack(i8* %bitcast319, i32 1)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bitcast321, i32 1)
  call void @make(%struct.move_s* %arrayidx121, i32 %84)
  call void @__softboundcets_deallocate_shadow_stack_space()
  %arrayidx122 = getelementptr inbounds [512 x %struct.move_s]* %moves, i32 0, i64 0
  %85 = load i32* %i, align 4
  %86 = load i32* %ic, align 4
  call void @__softboundcets_allocate_shadow_stack_space(i32 2)
  call void @__softboundcets_store_base_shadow_stack(i8* %bitcast319, i32 1)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bitcast321, i32 1)
  %call123 = call i32 @check_legal(%struct.move_s* %arrayidx122, i32 %85, i32 %86)
  call void @__softboundcets_deallocate_shadow_stack_space()
  %tobool124 = icmp ne i32 %call123, 0
  br i1 %tobool124, label %if.then125, label %if.end127

if.then125:                                       ; preds = %for.body120
  %87 = load i32* %l, align 4
  %inc126 = add nsw i32 %87, 1
  store i32 %inc126, i32* %l, align 4
  br label %if.end127

if.end127:                                        ; preds = %if.then125, %for.body120
  %arrayidx128 = getelementptr inbounds [512 x %struct.move_s]* %moves, i32 0, i64 0
  %88 = load i32* %i, align 4
  call void @__softboundcets_allocate_shadow_stack_space(i32 2)
  call void @__softboundcets_store_base_shadow_stack(i8* %bitcast319, i32 1)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bitcast321, i32 1)
  call void @unmake(%struct.move_s* %arrayidx128, i32 %88)
  call void @__softboundcets_deallocate_shadow_stack_space()
  br label %for.inc129

for.inc129:                                       ; preds = %if.end127
  %89 = load i32* %i, align 4
  %inc130 = add nsw i32 %89, 1
  store i32 %inc130, i32* %i, align 4
  br label %for.cond117

for.end131:                                       ; preds = %for.cond117
  br label %if.end133

if.else132:                                       ; preds = %if.then111
  %90 = load i32* @numb_moves, align 4
  store i32 %90, i32* %l, align 4
  br label %if.end133

if.end133:                                        ; preds = %if.else132, %for.end131
  br label %if.end174

if.else134:                                       ; preds = %if.end108
  store i32 0, i32* %l, align 4
  store i32 1, i32* @captures, align 4
  store i32 0, i32* %num_moves, align 4
  %arrayidx135 = getelementptr inbounds [512 x %struct.move_s]* %moves, i32 0, i64 0
  call void @__softboundcets_allocate_shadow_stack_space(i32 2)
  call void @__softboundcets_store_base_shadow_stack(i8* %bitcast319, i32 1)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bitcast321, i32 1)
  call void @gen(%struct.move_s* %arrayidx135)
  call void @__softboundcets_deallocate_shadow_stack_space()
  %91 = load i32* @numb_moves, align 4
  store i32 %91, i32* %num_moves, align 4
  store i32 0, i32* @captures, align 4
  %call136 = call i32 @in_check()
  store i32 %call136, i32* %ic, align 4
  %92 = load i32* %num_moves, align 4
  %tobool137 = icmp ne i32 %92, 0
  br i1 %tobool137, label %if.then138, label %if.end154

if.then138:                                       ; preds = %if.else134
  store i32 0, i32* %i, align 4
  br label %for.cond139

for.cond139:                                      ; preds = %for.inc151, %if.then138
  %93 = load i32* %i, align 4
  %94 = load i32* %num_moves, align 4
  %cmp140 = icmp slt i32 %93, %94
  br i1 %cmp140, label %for.body142, label %for.end153

for.body142:                                      ; preds = %for.cond139
  %arrayidx143 = getelementptr inbounds [512 x %struct.move_s]* %moves, i32 0, i64 0
  %95 = load i32* %i, align 4
  call void @__softboundcets_allocate_shadow_stack_space(i32 2)
  call void @__softboundcets_store_base_shadow_stack(i8* %bitcast319, i32 1)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bitcast321, i32 1)
  call void @make(%struct.move_s* %arrayidx143, i32 %95)
  call void @__softboundcets_deallocate_shadow_stack_space()
  %arrayidx144 = getelementptr inbounds [512 x %struct.move_s]* %moves, i32 0, i64 0
  %96 = load i32* %i, align 4
  %97 = load i32* %ic, align 4
  call void @__softboundcets_allocate_shadow_stack_space(i32 2)
  call void @__softboundcets_store_base_shadow_stack(i8* %bitcast319, i32 1)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bitcast321, i32 1)
  %call145 = call i32 @check_legal(%struct.move_s* %arrayidx144, i32 %96, i32 %97)
  call void @__softboundcets_deallocate_shadow_stack_space()
  %tobool146 = icmp ne i32 %call145, 0
  br i1 %tobool146, label %if.then147, label %if.end149

if.then147:                                       ; preds = %for.body142
  %98 = load i32* %l, align 4
  %inc148 = add nsw i32 %98, 1
  store i32 %inc148, i32* %l, align 4
  br label %if.end149

if.end149:                                        ; preds = %if.then147, %for.body142
  %arrayidx150 = getelementptr inbounds [512 x %struct.move_s]* %moves, i32 0, i64 0
  %99 = load i32* %i, align 4
  call void @__softboundcets_allocate_shadow_stack_space(i32 2)
  call void @__softboundcets_store_base_shadow_stack(i8* %bitcast319, i32 1)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bitcast321, i32 1)
  call void @unmake(%struct.move_s* %arrayidx150, i32 %99)
  call void @__softboundcets_deallocate_shadow_stack_space()
  br label %for.inc151

for.inc151:                                       ; preds = %if.end149
  %100 = load i32* %i, align 4
  %inc152 = add nsw i32 %100, 1
  store i32 %inc152, i32* %i, align 4
  br label %for.cond139

for.end153:                                       ; preds = %for.cond139
  br label %if.end154

if.end154:                                        ; preds = %for.end153, %if.else134
  %101 = load i32* %l, align 4
  %tobool155 = icmp ne i32 %101, 0
  br i1 %tobool155, label %if.end173, label %if.then156

if.then156:                                       ; preds = %if.end154
  store i32 0, i32* @captures, align 4
  store i32 0, i32* %num_moves, align 4
  %arrayidx157 = getelementptr inbounds [512 x %struct.move_s]* %moves, i32 0, i64 0
  call void @__softboundcets_allocate_shadow_stack_space(i32 2)
  call void @__softboundcets_store_base_shadow_stack(i8* %bitcast319, i32 1)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bitcast321, i32 1)
  call void @gen(%struct.move_s* %arrayidx157)
  call void @__softboundcets_deallocate_shadow_stack_space()
  %102 = load i32* @numb_moves, align 4
  store i32 %102, i32* %num_moves, align 4
  store i32 0, i32* %i, align 4
  br label %for.cond158

for.cond158:                                      ; preds = %for.inc170, %if.then156
  %103 = load i32* %i, align 4
  %104 = load i32* %num_moves, align 4
  %cmp159 = icmp slt i32 %103, %104
  br i1 %cmp159, label %for.body161, label %for.end172

for.body161:                                      ; preds = %for.cond158
  %arrayidx162 = getelementptr inbounds [512 x %struct.move_s]* %moves, i32 0, i64 0
  %105 = load i32* %i, align 4
  call void @__softboundcets_allocate_shadow_stack_space(i32 2)
  call void @__softboundcets_store_base_shadow_stack(i8* %bitcast319, i32 1)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bitcast321, i32 1)
  call void @make(%struct.move_s* %arrayidx162, i32 %105)
  call void @__softboundcets_deallocate_shadow_stack_space()
  %arrayidx163 = getelementptr inbounds [512 x %struct.move_s]* %moves, i32 0, i64 0
  %106 = load i32* %i, align 4
  %107 = load i32* %ic, align 4
  call void @__softboundcets_allocate_shadow_stack_space(i32 2)
  call void @__softboundcets_store_base_shadow_stack(i8* %bitcast319, i32 1)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bitcast321, i32 1)
  %call164 = call i32 @check_legal(%struct.move_s* %arrayidx163, i32 %106, i32 %107)
  call void @__softboundcets_deallocate_shadow_stack_space()
  %tobool165 = icmp ne i32 %call164, 0
  br i1 %tobool165, label %if.then166, label %if.end168

if.then166:                                       ; preds = %for.body161
  %108 = load i32* %l, align 4
  %inc167 = add nsw i32 %108, 1
  store i32 %inc167, i32* %l, align 4
  br label %if.end168

if.end168:                                        ; preds = %if.then166, %for.body161
  %arrayidx169 = getelementptr inbounds [512 x %struct.move_s]* %moves, i32 0, i64 0
  %109 = load i32* %i, align 4
  call void @__softboundcets_allocate_shadow_stack_space(i32 2)
  call void @__softboundcets_store_base_shadow_stack(i8* %bitcast319, i32 1)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bitcast321, i32 1)
  call void @unmake(%struct.move_s* %arrayidx169, i32 %109)
  call void @__softboundcets_deallocate_shadow_stack_space()
  br label %for.inc170

for.inc170:                                       ; preds = %if.end168
  %110 = load i32* %i, align 4
  %inc171 = add nsw i32 %110, 1
  store i32 %inc171, i32* %i, align 4
  br label %for.cond158

for.end172:                                       ; preds = %for.cond158
  br label %if.end173

if.end173:                                        ; preds = %for.end172, %if.end154
  br label %if.end174

if.end174:                                        ; preds = %if.end173, %if.end133
  %111 = load i32* %l, align 4
  %cmp175 = icmp eq i32 %111, 0
  br i1 %cmp175, label %if.then177, label %if.else180

if.then177:                                       ; preds = %if.end174
  %112 = load %struct.node** %node.addr, align 8
  %bitcast520 = bitcast %struct.node** %node.addr to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast520, i8** %base.alloca521, i8** %bound.alloca522)
  %base.load523 = load i8** %base.alloca521
  %bound.load524 = load i8** %bound.alloca522
  %proof178 = getelementptr inbounds %struct.node* %112, i32 0, i32 4
  store i32 1, i32* %proof178, align 4
  %113 = load %struct.node** %node.addr, align 8
  %bitcast525 = bitcast %struct.node** %node.addr to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast525, i8** %base.alloca526, i8** %bound.alloca527)
  %base.load528 = load i8** %base.alloca526
  %bound.load529 = load i8** %bound.alloca527
  %disproof179 = getelementptr inbounds %struct.node* %113, i32 0, i32 5
  store i32 1, i32* %disproof179, align 4
  br label %if.end270

if.else180:                                       ; preds = %if.end174
  %114 = load i32* @white_to_move, align 4
  %tobool181 = icmp ne i32 %114, 0
  %cond182 = select i1 %tobool181, i32 0, i32 1
  %115 = load i32* @root_to_move, align 4
  %cmp183 = icmp eq i32 %cond182, %115
  br i1 %cmp183, label %if.then185, label %if.else226

if.then185:                                       ; preds = %if.else180
  %116 = load i32* @Variant, align 4
  %cmp186 = icmp ne i32 %116, 3
  br i1 %cmp186, label %land.lhs.true, label %if.else196

land.lhs.true:                                    ; preds = %if.then185
  %117 = load i32* @Variant, align 4
  %cmp188 = icmp ne i32 %117, 4
  br i1 %cmp188, label %if.then190, label %if.else196

if.then190:                                       ; preds = %land.lhs.true
  %118 = load i32* @ply, align 4
  %div = sdiv i32 %118, 50
  %add191 = add nsw i32 1, %div
  %119 = load %struct.node** %node.addr, align 8
  %bitcast530 = bitcast %struct.node** %node.addr to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast530, i8** %base.alloca531, i8** %bound.alloca532)
  %base.load533 = load i8** %base.alloca531
  %bound.load534 = load i8** %bound.alloca532
  %proof192 = getelementptr inbounds %struct.node* %119, i32 0, i32 4
  store i32 %add191, i32* %proof192, align 4
  %120 = load i32* %l, align 4
  %121 = load i32* @ply, align 4
  %div193 = sdiv i32 %121, 50
  %add194 = add nsw i32 %120, %div193
  %122 = load %struct.node** %node.addr, align 8
  %bitcast535 = bitcast %struct.node** %node.addr to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast535, i8** %base.alloca536, i8** %bound.alloca537)
  %base.load538 = load i8** %base.alloca536
  %bound.load539 = load i8** %bound.alloca537
  %disproof195 = getelementptr inbounds %struct.node* %122, i32 0, i32 5
  store i32 %add194, i32* %disproof195, align 4
  br label %if.end225

if.else196:                                       ; preds = %land.lhs.true, %if.then185
  %123 = load i32* @Variant, align 4
  %cmp197 = icmp eq i32 %123, 4
  br i1 %cmp197, label %if.then199, label %if.else217

if.then199:                                       ; preds = %if.else196
  %124 = load i32* @phase, align 4
  %cmp200 = icmp eq i32 %124, 2
  br i1 %cmp200, label %if.then202, label %if.else209

if.then202:                                       ; preds = %if.then199
  %125 = load i32* @ply, align 4
  %div203 = sdiv i32 %125, 30
  %add204 = add nsw i32 1, %div203
  %126 = load %struct.node** %node.addr, align 8
  %bitcast570 = bitcast %struct.node** %node.addr to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast570, i8** %base.alloca571, i8** %bound.alloca572)
  %base.load573 = load i8** %base.alloca571
  %bound.load574 = load i8** %bound.alloca572
  %proof205 = getelementptr inbounds %struct.node* %126, i32 0, i32 4
  store i32 %add204, i32* %proof205, align 4
  %127 = load i32* %l, align 4
  %128 = load i32* @ply, align 4
  %div206 = sdiv i32 %128, 30
  %add207 = add nsw i32 %127, %div206
  %129 = load %struct.node** %node.addr, align 8
  %bitcast575 = bitcast %struct.node** %node.addr to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast575, i8** %base.alloca576, i8** %bound.alloca577)
  %base.load578 = load i8** %base.alloca576
  %bound.load579 = load i8** %bound.alloca577
  %disproof208 = getelementptr inbounds %struct.node* %129, i32 0, i32 5
  store i32 %add207, i32* %disproof208, align 4
  br label %if.end216

if.else209:                                       ; preds = %if.then199
  %130 = load i32* @ply, align 4
  %div210 = sdiv i32 %130, 80
  %add211 = add nsw i32 1, %div210
  %131 = load %struct.node** %node.addr, align 8
  %bitcast580 = bitcast %struct.node** %node.addr to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast580, i8** %base.alloca581, i8** %bound.alloca582)
  %base.load583 = load i8** %base.alloca581
  %bound.load584 = load i8** %bound.alloca582
  %proof212 = getelementptr inbounds %struct.node* %131, i32 0, i32 4
  store i32 %add211, i32* %proof212, align 4
  %132 = load i32* %l, align 4
  %133 = load i32* @ply, align 4
  %div213 = sdiv i32 %133, 80
  %add214 = add nsw i32 %132, %div213
  %134 = load %struct.node** %node.addr, align 8
  %bitcast585 = bitcast %struct.node** %node.addr to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast585, i8** %base.alloca586, i8** %bound.alloca587)
  %base.load588 = load i8** %base.alloca586
  %bound.load589 = load i8** %bound.alloca587
  %disproof215 = getelementptr inbounds %struct.node* %134, i32 0, i32 5
  store i32 %add214, i32* %disproof215, align 4
  br label %if.end216

if.end216:                                        ; preds = %if.else209, %if.then202
  br label %if.end224

if.else217:                                       ; preds = %if.else196
  %135 = load i32* @ply, align 4
  %div218 = sdiv i32 %135, 150
  %add219 = add nsw i32 1, %div218
  %136 = load %struct.node** %node.addr, align 8
  %bitcast540 = bitcast %struct.node** %node.addr to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast540, i8** %base.alloca541, i8** %bound.alloca542)
  %base.load543 = load i8** %base.alloca541
  %bound.load544 = load i8** %bound.alloca542
  %proof220 = getelementptr inbounds %struct.node* %136, i32 0, i32 4
  store i32 %add219, i32* %proof220, align 4
  %137 = load i32* %l, align 4
  %138 = load i32* @ply, align 4
  %div221 = sdiv i32 %138, 150
  %add222 = add nsw i32 %137, %div221
  %139 = load %struct.node** %node.addr, align 8
  %bitcast545 = bitcast %struct.node** %node.addr to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast545, i8** %base.alloca546, i8** %bound.alloca547)
  %base.load548 = load i8** %base.alloca546
  %bound.load549 = load i8** %bound.alloca547
  %disproof223 = getelementptr inbounds %struct.node* %139, i32 0, i32 5
  store i32 %add222, i32* %disproof223, align 4
  br label %if.end224

if.end224:                                        ; preds = %if.else217, %if.end216
  br label %if.end225

if.end225:                                        ; preds = %if.end224, %if.then190
  br label %if.end269

if.else226:                                       ; preds = %if.else180
  %140 = load i32* @Variant, align 4
  %cmp227 = icmp ne i32 %140, 3
  br i1 %cmp227, label %land.lhs.true229, label %if.else239

land.lhs.true229:                                 ; preds = %if.else226
  %141 = load i32* @Variant, align 4
  %cmp230 = icmp ne i32 %141, 4
  br i1 %cmp230, label %if.then232, label %if.else239

if.then232:                                       ; preds = %land.lhs.true229
  %142 = load i32* %l, align 4
  %143 = load i32* @ply, align 4
  %div233 = sdiv i32 %143, 50
  %add234 = add nsw i32 %142, %div233
  %144 = load %struct.node** %node.addr, align 8
  %bitcast550 = bitcast %struct.node** %node.addr to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast550, i8** %base.alloca551, i8** %bound.alloca552)
  %base.load553 = load i8** %base.alloca551
  %bound.load554 = load i8** %bound.alloca552
  %proof235 = getelementptr inbounds %struct.node* %144, i32 0, i32 4
  store i32 %add234, i32* %proof235, align 4
  %145 = load i32* @ply, align 4
  %div236 = sdiv i32 %145, 50
  %add237 = add nsw i32 1, %div236
  %146 = load %struct.node** %node.addr, align 8
  %bitcast555 = bitcast %struct.node** %node.addr to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast555, i8** %base.alloca556, i8** %bound.alloca557)
  %base.load558 = load i8** %base.alloca556
  %bound.load559 = load i8** %bound.alloca557
  %disproof238 = getelementptr inbounds %struct.node* %146, i32 0, i32 5
  store i32 %add237, i32* %disproof238, align 4
  br label %if.end268

if.else239:                                       ; preds = %land.lhs.true229, %if.else226
  %147 = load i32* @Variant, align 4
  %cmp240 = icmp eq i32 %147, 4
  br i1 %cmp240, label %if.then242, label %if.else260

if.then242:                                       ; preds = %if.else239
  %148 = load i32* @phase, align 4
  %cmp243 = icmp eq i32 %148, 2
  br i1 %cmp243, label %if.then245, label %if.else252

if.then245:                                       ; preds = %if.then242
  %149 = load i32* %l, align 4
  %150 = load i32* @ply, align 4
  %div246 = sdiv i32 %150, 30
  %add247 = add nsw i32 %149, %div246
  %151 = load %struct.node** %node.addr, align 8
  %bitcast590 = bitcast %struct.node** %node.addr to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast590, i8** %base.alloca591, i8** %bound.alloca592)
  %base.load593 = load i8** %base.alloca591
  %bound.load594 = load i8** %bound.alloca592
  %proof248 = getelementptr inbounds %struct.node* %151, i32 0, i32 4
  store i32 %add247, i32* %proof248, align 4
  %152 = load i32* @ply, align 4
  %div249 = sdiv i32 %152, 30
  %add250 = add nsw i32 1, %div249
  %153 = load %struct.node** %node.addr, align 8
  %bitcast595 = bitcast %struct.node** %node.addr to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast595, i8** %base.alloca596, i8** %bound.alloca597)
  %base.load598 = load i8** %base.alloca596
  %bound.load599 = load i8** %bound.alloca597
  %disproof251 = getelementptr inbounds %struct.node* %153, i32 0, i32 5
  store i32 %add250, i32* %disproof251, align 4
  br label %if.end259

if.else252:                                       ; preds = %if.then242
  %154 = load i32* %l, align 4
  %155 = load i32* @ply, align 4
  %div253 = sdiv i32 %155, 80
  %add254 = add nsw i32 %154, %div253
  %156 = load %struct.node** %node.addr, align 8
  %bitcast600 = bitcast %struct.node** %node.addr to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast600, i8** %base.alloca601, i8** %bound.alloca602)
  %base.load603 = load i8** %base.alloca601
  %bound.load604 = load i8** %bound.alloca602
  %proof255 = getelementptr inbounds %struct.node* %156, i32 0, i32 4
  store i32 %add254, i32* %proof255, align 4
  %157 = load i32* @ply, align 4
  %div256 = sdiv i32 %157, 80
  %add257 = add nsw i32 1, %div256
  %158 = load %struct.node** %node.addr, align 8
  %bitcast605 = bitcast %struct.node** %node.addr to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast605, i8** %base.alloca606, i8** %bound.alloca607)
  %base.load608 = load i8** %base.alloca606
  %bound.load609 = load i8** %bound.alloca607
  %disproof258 = getelementptr inbounds %struct.node* %158, i32 0, i32 5
  store i32 %add257, i32* %disproof258, align 4
  br label %if.end259

if.end259:                                        ; preds = %if.else252, %if.then245
  br label %if.end267

if.else260:                                       ; preds = %if.else239
  %159 = load i32* %l, align 4
  %160 = load i32* @ply, align 4
  %div261 = sdiv i32 %160, 150
  %add262 = add nsw i32 %159, %div261
  %161 = load %struct.node** %node.addr, align 8
  %bitcast560 = bitcast %struct.node** %node.addr to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast560, i8** %base.alloca561, i8** %bound.alloca562)
  %base.load563 = load i8** %base.alloca561
  %bound.load564 = load i8** %bound.alloca562
  %proof263 = getelementptr inbounds %struct.node* %161, i32 0, i32 4
  store i32 %add262, i32* %proof263, align 4
  %162 = load i32* @ply, align 4
  %div264 = sdiv i32 %162, 150
  %add265 = add nsw i32 1, %div264
  %163 = load %struct.node** %node.addr, align 8
  %bitcast565 = bitcast %struct.node** %node.addr to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast565, i8** %base.alloca566, i8** %bound.alloca567)
  %base.load568 = load i8** %base.alloca566
  %bound.load569 = load i8** %bound.alloca567
  %disproof266 = getelementptr inbounds %struct.node* %163, i32 0, i32 5
  store i32 %add265, i32* %disproof266, align 4
  br label %if.end267

if.end267:                                        ; preds = %if.else260, %if.end259
  br label %if.end268

if.end268:                                        ; preds = %if.end267, %if.then232
  br label %if.end269

if.end269:                                        ; preds = %if.end268, %if.end225
  br label %if.end270

if.end270:                                        ; preds = %if.end269, %if.then177
  br label %if.end298

if.else271:                                       ; preds = %if.then92
  %164 = load %struct.node** %node.addr, align 8
  %bitcast365 = bitcast %struct.node** %node.addr to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast365, i8** %base.alloca366, i8** %bound.alloca367)
  %base.load368 = load i8** %base.alloca366
  %bound.load369 = load i8** %bound.alloca367
  %value272 = getelementptr inbounds %struct.node* %164, i32 0, i32 0
  %165 = load i8* %value272, align 1
  %conv273 = zext i8 %165 to i32
  %cmp274 = icmp eq i32 %conv273, 0
  br i1 %cmp274, label %if.then276, label %if.else279

if.then276:                                       ; preds = %if.else271
  %166 = load %struct.node** %node.addr, align 8
  %bitcast410 = bitcast %struct.node** %node.addr to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast410, i8** %base.alloca411, i8** %bound.alloca412)
  %base.load413 = load i8** %base.alloca411
  %bound.load414 = load i8** %bound.alloca412
  %proof277 = getelementptr inbounds %struct.node* %166, i32 0, i32 4
  store i32 100000000, i32* %proof277, align 4
  %167 = load %struct.node** %node.addr, align 8
  %bitcast415 = bitcast %struct.node** %node.addr to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast415, i8** %base.alloca416, i8** %bound.alloca417)
  %base.load418 = load i8** %base.alloca416
  %bound.load419 = load i8** %bound.alloca417
  %disproof278 = getelementptr inbounds %struct.node* %167, i32 0, i32 5
  store i32 0, i32* %disproof278, align 4
  br label %if.end297

if.else279:                                       ; preds = %if.else271
  %168 = load %struct.node** %node.addr, align 8
  %bitcast420 = bitcast %struct.node** %node.addr to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast420, i8** %base.alloca421, i8** %bound.alloca422)
  %base.load423 = load i8** %base.alloca421
  %bound.load424 = load i8** %bound.alloca422
  %value280 = getelementptr inbounds %struct.node* %168, i32 0, i32 0
  %169 = load i8* %value280, align 1
  %conv281 = zext i8 %169 to i32
  %cmp282 = icmp eq i32 %conv281, 1
  br i1 %cmp282, label %if.then284, label %if.else287

if.then284:                                       ; preds = %if.else279
  %170 = load %struct.node** %node.addr, align 8
  %bitcast455 = bitcast %struct.node** %node.addr to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast455, i8** %base.alloca456, i8** %bound.alloca457)
  %base.load458 = load i8** %base.alloca456
  %bound.load459 = load i8** %bound.alloca457
  %proof285 = getelementptr inbounds %struct.node* %170, i32 0, i32 4
  store i32 0, i32* %proof285, align 4
  %171 = load %struct.node** %node.addr, align 8
  %bitcast460 = bitcast %struct.node** %node.addr to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast460, i8** %base.alloca461, i8** %bound.alloca462)
  %base.load463 = load i8** %base.alloca461
  %bound.load464 = load i8** %bound.alloca462
  %disproof286 = getelementptr inbounds %struct.node* %171, i32 0, i32 5
  store i32 100000000, i32* %disproof286, align 4
  br label %if.end296

if.else287:                                       ; preds = %if.else279
  %172 = load %struct.node** %node.addr, align 8
  %bitcast465 = bitcast %struct.node** %node.addr to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast465, i8** %base.alloca466, i8** %bound.alloca467)
  %base.load468 = load i8** %base.alloca466
  %bound.load469 = load i8** %bound.alloca467
  %value288 = getelementptr inbounds %struct.node* %172, i32 0, i32 0
  %173 = load i8* %value288, align 1
  %conv289 = zext i8 %173 to i32
  %cmp290 = icmp eq i32 %conv289, 3
  br i1 %cmp290, label %if.then292, label %if.end295

if.then292:                                       ; preds = %if.else287
  %174 = load %struct.node** %node.addr, align 8
  %bitcast500 = bitcast %struct.node** %node.addr to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast500, i8** %base.alloca501, i8** %bound.alloca502)
  %base.load503 = load i8** %base.alloca501
  %bound.load504 = load i8** %bound.alloca502
  %proof293 = getelementptr inbounds %struct.node* %174, i32 0, i32 4
  store i32 50000, i32* %proof293, align 4
  %175 = load %struct.node** %node.addr, align 8
  %bitcast505 = bitcast %struct.node** %node.addr to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast505, i8** %base.alloca506, i8** %bound.alloca507)
  %base.load508 = load i8** %base.alloca506
  %bound.load509 = load i8** %bound.alloca507
  %disproof294 = getelementptr inbounds %struct.node* %175, i32 0, i32 5
  store i32 50000, i32* %disproof294, align 4
  br label %if.end295

if.end295:                                        ; preds = %if.then292, %if.else287
  br label %if.end296

if.end296:                                        ; preds = %if.end295, %if.then284
  br label %if.end297

if.end297:                                        ; preds = %if.end296, %if.then276
  br label %if.end298

if.end298:                                        ; preds = %if.end297, %if.end270
  br label %if.end302

if.else299:                                       ; preds = %if.else90
  %176 = load %struct.node** %node.addr, align 8
  %bitcast345 = bitcast %struct.node** %node.addr to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast345, i8** %base.alloca346, i8** %bound.alloca347)
  %base.load348 = load i8** %base.alloca346
  %bound.load349 = load i8** %bound.alloca347
  %disproof300 = getelementptr inbounds %struct.node* %176, i32 0, i32 5
  store i32 1, i32* %disproof300, align 4
  %177 = load %struct.node** %node.addr, align 8
  %bitcast350 = bitcast %struct.node** %node.addr to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast350, i8** %base.alloca351, i8** %bound.alloca352)
  %base.load353 = load i8** %base.alloca351
  %bound.load354 = load i8** %bound.alloca352
  %proof301 = getelementptr inbounds %struct.node* %177, i32 0, i32 4
  store i32 1, i32* %proof301, align 4
  br label %if.end302

if.end302:                                        ; preds = %if.else299, %if.end298
  br label %if.end303

if.end303:                                        ; preds = %if.end302, %if.then105, %if.end84
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @develop_node(%struct.node* %node) #0 {
entry:
  %base.alloca206 = alloca i8*
  %bound.alloca207 = alloca i8*
  %base.alloca201 = alloca i8*
  %bound.alloca202 = alloca i8*
  %base.alloca196 = alloca i8*
  %bound.alloca197 = alloca i8*
  %base.alloca191 = alloca i8*
  %bound.alloca192 = alloca i8*
  %base.alloca186 = alloca i8*
  %bound.alloca187 = alloca i8*
  %base.alloca181 = alloca i8*
  %bound.alloca182 = alloca i8*
  %base.alloca176 = alloca i8*
  %bound.alloca177 = alloca i8*
  %base.alloca171 = alloca i8*
  %bound.alloca172 = alloca i8*
  %base.alloca166 = alloca i8*
  %bound.alloca167 = alloca i8*
  %base.alloca161 = alloca i8*
  %bound.alloca162 = alloca i8*
  %base.alloca156 = alloca i8*
  %bound.alloca157 = alloca i8*
  %base.alloca151 = alloca i8*
  %bound.alloca152 = alloca i8*
  %base.alloca146 = alloca i8*
  %bound.alloca147 = alloca i8*
  %base.alloca141 = alloca i8*
  %bound.alloca142 = alloca i8*
  %base.alloca136 = alloca i8*
  %bound.alloca137 = alloca i8*
  %base.alloca131 = alloca i8*
  %bound.alloca132 = alloca i8*
  %base.alloca126 = alloca i8*
  %bound.alloca127 = alloca i8*
  %base.alloca121 = alloca i8*
  %bound.alloca122 = alloca i8*
  %base.alloca116 = alloca i8*
  %bound.alloca117 = alloca i8*
  %base.alloca111 = alloca i8*
  %bound.alloca112 = alloca i8*
  %base.alloca106 = alloca i8*
  %bound.alloca107 = alloca i8*
  %base.alloca101 = alloca i8*
  %bound.alloca102 = alloca i8*
  %base.alloca = alloca i8*
  %bound.alloca = alloca i8*
  %0 = call i8* @__softboundcets_load_base_shadow_stack(i32 1)
  %1 = call i8* @__softboundcets_load_bound_shadow_stack(i32 1)
  %node.addr = alloca %struct.node*, align 8
  %node.addr69 = bitcast %struct.node** %node.addr to %struct.node**
  %bitcast = bitcast %struct.node** %node.addr to i8*
  %mtmp = getelementptr %struct.node** %node.addr69, i32 1
  %bitcast70 = bitcast %struct.node** %mtmp to i8*
  %num_moves = alloca i32, align 4
  %num_moves71 = bitcast i32* %num_moves to i32*
  %bitcast72 = bitcast i32* %num_moves to i8*
  %mtmp73 = getelementptr i32* %num_moves71, i32 1
  %bitcast74 = bitcast i32* %mtmp73 to i8*
  %moves = alloca [512 x %struct.move_s], align 16
  %moves75 = bitcast [512 x %struct.move_s]* %moves to [512 x %struct.move_s]*
  %bitcast76 = bitcast [512 x %struct.move_s]* %moves to i8*
  %mtmp77 = getelementptr [512 x %struct.move_s]* %moves75, i32 1
  %bitcast78 = bitcast [512 x %struct.move_s]* %mtmp77 to i8*
  %i = alloca i32, align 4
  %i79 = bitcast i32* %i to i32*
  %bitcast80 = bitcast i32* %i to i8*
  %mtmp81 = getelementptr i32* %i79, i32 1
  %bitcast82 = bitcast i32* %mtmp81 to i8*
  %l = alloca i32, align 4
  %l83 = bitcast i32* %l to i32*
  %bitcast84 = bitcast i32* %l to i8*
  %mtmp85 = getelementptr i32* %l83, i32 1
  %bitcast86 = bitcast i32* %mtmp85 to i8*
  %newnode = alloca %struct.node*, align 8
  %newnode87 = bitcast %struct.node** %newnode to %struct.node**
  %bitcast88 = bitcast %struct.node** %newnode to i8*
  %mtmp89 = getelementptr %struct.node** %newnode87, i32 1
  %bitcast90 = bitcast %struct.node** %mtmp89 to i8*
  %leg = alloca i32, align 4
  %leg91 = bitcast i32* %leg to i32*
  %bitcast92 = bitcast i32* %leg to i8*
  %mtmp93 = getelementptr i32* %leg91, i32 1
  %bitcast94 = bitcast i32* %mtmp93 to i8*
  %ic = alloca i32, align 4
  %ic95 = bitcast i32* %ic to i32*
  %bitcast96 = bitcast i32* %ic to i8*
  %mtmp97 = getelementptr i32* %ic95, i32 1
  %bitcast98 = bitcast i32* %mtmp97 to i8*
  store %struct.node* %node, %struct.node** %node.addr, align 8
  %bitcast210 = bitcast %struct.node** %node.addr to i8*
  call void @__softboundcets_metadata_store(i8* %bitcast210, i8* %0, i8* %1)
  %call = call i32 @in_check()
  store i32 %call, i32* %ic, align 4
  %2 = load i32* @Variant, align 4
  %cmp = icmp ne i32 %2, 4
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  store i32 0, i32* %num_moves, align 4
  %arrayidx = getelementptr inbounds [512 x %struct.move_s]* %moves, i32 0, i64 0
  call void @__softboundcets_allocate_shadow_stack_space(i32 2)
  call void @__softboundcets_store_base_shadow_stack(i8* %bitcast76, i32 1)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bitcast78, i32 1)
  call void @gen(%struct.move_s* %arrayidx)
  call void @__softboundcets_deallocate_shadow_stack_space()
  %3 = load i32* @numb_moves, align 4
  store i32 %3, i32* %num_moves, align 4
  br label %if.end13

if.else:                                          ; preds = %entry
  store i32 1, i32* @captures, align 4
  store i32 0, i32* %leg, align 4
  store i32 0, i32* %num_moves, align 4
  %arrayidx1 = getelementptr inbounds [512 x %struct.move_s]* %moves, i32 0, i64 0
  call void @__softboundcets_allocate_shadow_stack_space(i32 2)
  call void @__softboundcets_store_base_shadow_stack(i8* %bitcast76, i32 1)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bitcast78, i32 1)
  call void @gen(%struct.move_s* %arrayidx1)
  call void @__softboundcets_deallocate_shadow_stack_space()
  %4 = load i32* @numb_moves, align 4
  store i32 %4, i32* %num_moves, align 4
  store i32 0, i32* @captures, align 4
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.else
  %5 = load i32* %i, align 4
  %6 = load i32* %num_moves, align 4
  %cmp2 = icmp slt i32 %5, %6
  br i1 %cmp2, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %arrayidx3 = getelementptr inbounds [512 x %struct.move_s]* %moves, i32 0, i64 0
  %7 = load i32* %i, align 4
  call void @__softboundcets_allocate_shadow_stack_space(i32 2)
  call void @__softboundcets_store_base_shadow_stack(i8* %bitcast76, i32 1)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bitcast78, i32 1)
  call void @make(%struct.move_s* %arrayidx3, i32 %7)
  call void @__softboundcets_deallocate_shadow_stack_space()
  %arrayidx4 = getelementptr inbounds [512 x %struct.move_s]* %moves, i32 0, i64 0
  %8 = load i32* %i, align 4
  %9 = load i32* %ic, align 4
  call void @__softboundcets_allocate_shadow_stack_space(i32 2)
  call void @__softboundcets_store_base_shadow_stack(i8* %bitcast76, i32 1)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bitcast78, i32 1)
  %call5 = call i32 @check_legal(%struct.move_s* %arrayidx4, i32 %8, i32 %9)
  call void @__softboundcets_deallocate_shadow_stack_space()
  %tobool = icmp ne i32 %call5, 0
  br i1 %tobool, label %if.then6, label %if.end

if.then6:                                         ; preds = %for.body
  store i32 1, i32* %leg, align 4
  %arrayidx7 = getelementptr inbounds [512 x %struct.move_s]* %moves, i32 0, i64 0
  %10 = load i32* %i, align 4
  call void @__softboundcets_allocate_shadow_stack_space(i32 2)
  call void @__softboundcets_store_base_shadow_stack(i8* %bitcast76, i32 1)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bitcast78, i32 1)
  call void @unmake(%struct.move_s* %arrayidx7, i32 %10)
  call void @__softboundcets_deallocate_shadow_stack_space()
  br label %for.end

if.end:                                           ; preds = %for.body
  %arrayidx8 = getelementptr inbounds [512 x %struct.move_s]* %moves, i32 0, i64 0
  %11 = load i32* %i, align 4
  call void @__softboundcets_allocate_shadow_stack_space(i32 2)
  call void @__softboundcets_store_base_shadow_stack(i8* %bitcast76, i32 1)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bitcast78, i32 1)
  call void @unmake(%struct.move_s* %arrayidx8, i32 %11)
  call void @__softboundcets_deallocate_shadow_stack_space()
  br label %for.inc

for.inc:                                          ; preds = %if.end
  %12 = load i32* %i, align 4
  %inc = add nsw i32 %12, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %if.then6, %for.cond
  %13 = load i32* %leg, align 4
  %cmp9 = icmp eq i32 %13, 0
  br i1 %cmp9, label %if.then10, label %if.end12

if.then10:                                        ; preds = %for.end
  store i32 0, i32* @captures, align 4
  store i32 0, i32* %num_moves, align 4
  %arrayidx11 = getelementptr inbounds [512 x %struct.move_s]* %moves, i32 0, i64 0
  call void @__softboundcets_allocate_shadow_stack_space(i32 2)
  call void @__softboundcets_store_base_shadow_stack(i8* %bitcast76, i32 1)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bitcast78, i32 1)
  call void @gen(%struct.move_s* %arrayidx11)
  call void @__softboundcets_deallocate_shadow_stack_space()
  %14 = load i32* @numb_moves, align 4
  store i32 %14, i32* %num_moves, align 4
  br label %if.end12

if.end12:                                         ; preds = %if.then10, %for.end
  br label %if.end13

if.end13:                                         ; preds = %if.end12, %if.then
  %15 = load i32* %num_moves, align 4
  %conv = sext i32 %15 to i64
  %mul = mul i64 %conv, 8
  %conv14 = trunc i64 %mul to i32
  call void @__softboundcets_allocate_shadow_stack_space(i32 1)
  %call15 = call i8* @Xmalloc(i32 %conv14)
  %16 = call i8* @__softboundcets_load_base_shadow_stack(i32 0)
  %17 = call i8* @__softboundcets_load_bound_shadow_stack(i32 0)
  call void @__softboundcets_deallocate_shadow_stack_space()
  %18 = bitcast i8* %call15 to %struct.node**
  %19 = load %struct.node** %node.addr, align 8
  %bitcast99 = bitcast %struct.node** %node.addr to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast99, i8** %base.alloca, i8** %bound.alloca)
  %base.load = load i8** %base.alloca
  %bound.load = load i8** %bound.alloca
  %children = getelementptr inbounds %struct.node* %19, i32 0, i32 6
  store %struct.node** %18, %struct.node*** %children, align 8
  %bitcast211 = bitcast %struct.node*** %children to i8*
  call void @__softboundcets_metadata_store(i8* %bitcast211, i8* %16, i8* %17)
  store i32 0, i32* %l, align 4
  store i32 0, i32* %i, align 4
  br label %for.cond16

for.cond16:                                       ; preds = %for.inc37, %if.end13
  %20 = load i32* %i, align 4
  %21 = load i32* %num_moves, align 4
  %cmp17 = icmp slt i32 %20, %21
  br i1 %cmp17, label %for.body19, label %for.end39

for.body19:                                       ; preds = %for.cond16
  %22 = load i32* @hash, align 4
  %23 = load i32* @move_number, align 4
  %24 = load i32* @ply, align 4
  %add = add nsw i32 %23, %24
  %sub = sub nsw i32 %add, 1
  %idxprom = sext i32 %sub to i64
  %arrayidx20 = getelementptr inbounds [600 x i32]* @hash_history, i32 0, i64 %idxprom
  store i32 %22, i32* %arrayidx20, align 4
  %arrayidx21 = getelementptr inbounds [512 x %struct.move_s]* %moves, i32 0, i64 0
  %25 = load i32* %i, align 4
  call void @__softboundcets_allocate_shadow_stack_space(i32 2)
  call void @__softboundcets_store_base_shadow_stack(i8* %bitcast76, i32 1)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bitcast78, i32 1)
  call void @make(%struct.move_s* %arrayidx21, i32 %25)
  call void @__softboundcets_deallocate_shadow_stack_space()
  %arrayidx22 = getelementptr inbounds [512 x %struct.move_s]* %moves, i32 0, i64 0
  %26 = load i32* %i, align 4
  %27 = load i32* %ic, align 4
  call void @__softboundcets_allocate_shadow_stack_space(i32 2)
  call void @__softboundcets_store_base_shadow_stack(i8* %bitcast76, i32 1)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bitcast78, i32 1)
  %call23 = call i32 @check_legal(%struct.move_s* %arrayidx22, i32 %26, i32 %27)
  call void @__softboundcets_deallocate_shadow_stack_space()
  %tobool24 = icmp ne i32 %call23, 0
  br i1 %tobool24, label %if.then25, label %if.else34

if.then25:                                        ; preds = %for.body19
  call void @__softboundcets_allocate_shadow_stack_space(i32 1)
  %call26 = call i8* @Xmalloc(i32 56)
  %28 = call i8* @__softboundcets_load_base_shadow_stack(i32 0)
  %29 = call i8* @__softboundcets_load_bound_shadow_stack(i32 0)
  call void @__softboundcets_deallocate_shadow_stack_space()
  %30 = bitcast i8* %call26 to %struct.node*
  store %struct.node* %30, %struct.node** %newnode, align 8
  %bitcast212 = bitcast %struct.node** %newnode to i8*
  call void @__softboundcets_metadata_store(i8* %bitcast212, i8* %28, i8* %29)
  %31 = load %struct.node** %newnode, align 8
  %bitcast115 = bitcast %struct.node** %newnode to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast115, i8** %base.alloca116, i8** %bound.alloca117)
  %base.load118 = load i8** %base.alloca116
  %bound.load119 = load i8** %bound.alloca117
  %value = getelementptr inbounds %struct.node* %31, i32 0, i32 0
  store i8 0, i8* %value, align 1
  %32 = load %struct.node** %newnode, align 8
  %bitcast120 = bitcast %struct.node** %newnode to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast120, i8** %base.alloca121, i8** %bound.alloca122)
  %base.load123 = load i8** %base.alloca121
  %bound.load124 = load i8** %bound.alloca122
  %disproof = getelementptr inbounds %struct.node* %32, i32 0, i32 5
  store i32 1, i32* %disproof, align 4
  %33 = load %struct.node** %newnode, align 8
  %bitcast125 = bitcast %struct.node** %newnode to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast125, i8** %base.alloca126, i8** %bound.alloca127)
  %base.load128 = load i8** %base.alloca126
  %bound.load129 = load i8** %bound.alloca127
  %proof = getelementptr inbounds %struct.node* %33, i32 0, i32 4
  store i32 1, i32* %proof, align 4
  %34 = load %struct.node** %newnode, align 8
  %bitcast130 = bitcast %struct.node** %newnode to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast130, i8** %base.alloca131, i8** %bound.alloca132)
  %base.load133 = load i8** %base.alloca131
  %bound.load134 = load i8** %bound.alloca132
  %num_children = getelementptr inbounds %struct.node* %34, i32 0, i32 1
  store i8 0, i8* %num_children, align 1
  %35 = load %struct.node** %node.addr, align 8
  %bitcast135 = bitcast %struct.node** %node.addr to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast135, i8** %base.alloca136, i8** %bound.alloca137)
  %base.load138 = load i8** %base.alloca136
  %bound.load139 = load i8** %bound.alloca137
  %36 = load %struct.node** %newnode, align 8
  %bitcast140 = bitcast %struct.node** %newnode to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast140, i8** %base.alloca141, i8** %bound.alloca142)
  %base.load143 = load i8** %base.alloca141
  %bound.load144 = load i8** %bound.alloca142
  %parent = getelementptr inbounds %struct.node* %36, i32 0, i32 7
  store %struct.node* %35, %struct.node** %parent, align 8
  %bitcast213 = bitcast %struct.node** %parent to i8*
  call void @__softboundcets_metadata_store(i8* %bitcast213, i8* %base.load138, i8* %bound.load139)
  %37 = load %struct.node** %newnode, align 8
  %bitcast145 = bitcast %struct.node** %newnode to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast145, i8** %base.alloca146, i8** %bound.alloca147)
  %base.load148 = load i8** %base.alloca146
  %bound.load149 = load i8** %bound.alloca147
  %evaluated = getelementptr inbounds %struct.node* %37, i32 0, i32 3
  store i8 0, i8* %evaluated, align 1
  %38 = load %struct.node** %newnode, align 8
  %bitcast150 = bitcast %struct.node** %newnode to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast150, i8** %base.alloca151, i8** %bound.alloca152)
  %base.load153 = load i8** %base.alloca151
  %bound.load154 = load i8** %bound.alloca152
  %expanded = getelementptr inbounds %struct.node* %38, i32 0, i32 2
  store i8 0, i8* %expanded, align 1
  %39 = load %struct.node** %newnode, align 8
  %bitcast155 = bitcast %struct.node** %newnode to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast155, i8** %base.alloca156, i8** %bound.alloca157)
  %base.load158 = load i8** %base.alloca156
  %bound.load159 = load i8** %bound.alloca157
  %move = getelementptr inbounds %struct.node* %39, i32 0, i32 8
  %40 = load i32* %i, align 4
  %idxprom27 = sext i32 %40 to i64
  %arrayidx28 = getelementptr inbounds [512 x %struct.move_s]* %moves, i32 0, i64 %idxprom27
  %41 = bitcast %struct.move_s* %move to i8*
  %42 = bitcast %struct.move_s* %arrayidx28 to i8*
  call void @__softboundcets_memcopy_check(i8* %41, i8* %42, i64 24, i8* %base.load158, i8* %bound.load159, i8* %bitcast76, i8* %bitcast78)
  call void @__softboundcets_copy_metadata(i8* %41, i8* %42, i64 24)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %41, i8* %42, i64 24, i32 4, i1 false)
  %43 = load %struct.node** %newnode, align 8
  %bitcast160 = bitcast %struct.node** %newnode to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast160, i8** %base.alloca161, i8** %bound.alloca162)
  %base.load163 = load i8** %base.alloca161
  %bound.load164 = load i8** %bound.alloca162
  %44 = load i32* %l, align 4
  %idxprom29 = sext i32 %44 to i64
  %45 = load %struct.node** %node.addr, align 8
  %bitcast165 = bitcast %struct.node** %node.addr to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast165, i8** %base.alloca166, i8** %bound.alloca167)
  %base.load168 = load i8** %base.alloca166
  %bound.load169 = load i8** %bound.alloca167
  %children30 = getelementptr inbounds %struct.node* %45, i32 0, i32 6
  %46 = load %struct.node*** %children30, align 8
  %bitcast170 = bitcast %struct.node*** %children30 to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast170, i8** %base.alloca171, i8** %bound.alloca172)
  %base.load173 = load i8** %base.alloca171
  %bound.load174 = load i8** %bound.alloca172
  %arrayidx31 = getelementptr inbounds %struct.node** %46, i64 %idxprom29
  store %struct.node* %43, %struct.node** %arrayidx31, align 8
  %bitcast214 = bitcast %struct.node** %arrayidx31 to i8*
  call void @__softboundcets_metadata_store(i8* %bitcast214, i8* %base.load163, i8* %bound.load164)
  %47 = load i32* %l, align 4
  %inc32 = add nsw i32 %47, 1
  store i32 %inc32, i32* %l, align 4
  %48 = load %struct.node** %newnode, align 8
  %bitcast175 = bitcast %struct.node** %newnode to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast175, i8** %base.alloca176, i8** %bound.alloca177)
  %base.load178 = load i8** %base.alloca176
  %bound.load179 = load i8** %bound.alloca177
  call void @__softboundcets_allocate_shadow_stack_space(i32 2)
  call void @__softboundcets_store_base_shadow_stack(i8* %base.load178, i32 1)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bound.load179, i32 1)
  call void @pn_eval(%struct.node* %48)
  call void @__softboundcets_deallocate_shadow_stack_space()
  %49 = load %struct.node** %newnode, align 8
  %bitcast180 = bitcast %struct.node** %newnode to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast180, i8** %base.alloca181, i8** %bound.alloca182)
  %base.load183 = load i8** %base.alloca181
  %bound.load184 = load i8** %bound.alloca182
  call void @__softboundcets_allocate_shadow_stack_space(i32 2)
  call void @__softboundcets_store_base_shadow_stack(i8* %base.load183, i32 1)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bound.load184, i32 1)
  call void @set_proof_and_disproof_numbers(%struct.node* %49)
  call void @__softboundcets_deallocate_shadow_stack_space()
  %arrayidx33 = getelementptr inbounds [512 x %struct.move_s]* %moves, i32 0, i64 0
  %50 = load i32* %i, align 4
  call void @__softboundcets_allocate_shadow_stack_space(i32 2)
  call void @__softboundcets_store_base_shadow_stack(i8* %bitcast76, i32 1)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bitcast78, i32 1)
  call void @unmake(%struct.move_s* %arrayidx33, i32 %50)
  call void @__softboundcets_deallocate_shadow_stack_space()
  br label %if.end36

if.else34:                                        ; preds = %for.body19
  %arrayidx35 = getelementptr inbounds [512 x %struct.move_s]* %moves, i32 0, i64 0
  %51 = load i32* %i, align 4
  call void @__softboundcets_allocate_shadow_stack_space(i32 2)
  call void @__softboundcets_store_base_shadow_stack(i8* %bitcast76, i32 1)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bitcast78, i32 1)
  call void @unmake(%struct.move_s* %arrayidx35, i32 %51)
  call void @__softboundcets_deallocate_shadow_stack_space()
  br label %if.end36

if.end36:                                         ; preds = %if.else34, %if.then25
  br label %for.inc37

for.inc37:                                        ; preds = %if.end36
  %52 = load i32* %i, align 4
  %inc38 = add nsw i32 %52, 1
  store i32 %inc38, i32* %i, align 4
  br label %for.cond16

for.end39:                                        ; preds = %for.cond16
  %53 = load %struct.node** %node.addr, align 8
  %bitcast100 = bitcast %struct.node** %node.addr to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast100, i8** %base.alloca101, i8** %bound.alloca102)
  %base.load103 = load i8** %base.alloca101
  %bound.load104 = load i8** %bound.alloca102
  %expanded40 = getelementptr inbounds %struct.node* %53, i32 0, i32 2
  store i8 1, i8* %expanded40, align 1
  %54 = load i32* %l, align 4
  %conv41 = trunc i32 %54 to i8
  %55 = load %struct.node** %node.addr, align 8
  %bitcast105 = bitcast %struct.node** %node.addr to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast105, i8** %base.alloca106, i8** %bound.alloca107)
  %base.load108 = load i8** %base.alloca106
  %bound.load109 = load i8** %bound.alloca107
  %num_children42 = getelementptr inbounds %struct.node* %55, i32 0, i32 1
  store i8 %conv41, i8* %num_children42, align 1
  %56 = load %struct.node** %node.addr, align 8
  %bitcast110 = bitcast %struct.node** %node.addr to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast110, i8** %base.alloca111, i8** %bound.alloca112)
  %base.load113 = load i8** %base.alloca111
  %bound.load114 = load i8** %bound.alloca112
  %num_children43 = getelementptr inbounds %struct.node* %56, i32 0, i32 1
  %57 = load i8* %num_children43, align 1
  %conv44 = zext i8 %57 to i32
  %cmp45 = icmp eq i32 %conv44, 0
  br i1 %cmp45, label %if.then47, label %if.end66

if.then47:                                        ; preds = %for.end39
  %58 = load %struct.node** %node.addr, align 8
  %bitcast185 = bitcast %struct.node** %node.addr to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast185, i8** %base.alloca186, i8** %bound.alloca187)
  %base.load188 = load i8** %base.alloca186
  %bound.load189 = load i8** %bound.alloca187
  %expanded48 = getelementptr inbounds %struct.node* %58, i32 0, i32 2
  store i8 0, i8* %expanded48, align 1
  %59 = load %struct.node** %node.addr, align 8
  %bitcast190 = bitcast %struct.node** %node.addr to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast190, i8** %base.alloca191, i8** %bound.alloca192)
  %base.load193 = load i8** %base.alloca191
  %bound.load194 = load i8** %bound.alloca192
  %evaluated49 = getelementptr inbounds %struct.node* %59, i32 0, i32 3
  store i8 1, i8* %evaluated49, align 1
  %60 = load i32* @Variant, align 4
  %cmp50 = icmp ne i32 %60, 3
  br i1 %cmp50, label %land.lhs.true, label %if.else56

land.lhs.true:                                    ; preds = %if.then47
  %61 = load i32* @Variant, align 4
  %cmp52 = icmp ne i32 %61, 4
  br i1 %cmp52, label %if.then54, label %if.else56

if.then54:                                        ; preds = %land.lhs.true
  %62 = load %struct.node** %node.addr, align 8
  %bitcast195 = bitcast %struct.node** %node.addr to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast195, i8** %base.alloca196, i8** %bound.alloca197)
  %base.load198 = load i8** %base.alloca196
  %bound.load199 = load i8** %bound.alloca197
  %value55 = getelementptr inbounds %struct.node* %62, i32 0, i32 0
  store i8 3, i8* %value55, align 1
  br label %if.end65

if.else56:                                        ; preds = %land.lhs.true, %if.then47
  %63 = load i32* @white_to_move, align 4
  %tobool57 = icmp ne i32 %63, 0
  %cond = select i1 %tobool57, i32 0, i32 1
  %64 = load i32* @root_to_move, align 4
  %cmp58 = icmp eq i32 %cond, %64
  br i1 %cmp58, label %if.then60, label %if.else62

if.then60:                                        ; preds = %if.else56
  %65 = load %struct.node** %node.addr, align 8
  %bitcast200 = bitcast %struct.node** %node.addr to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast200, i8** %base.alloca201, i8** %bound.alloca202)
  %base.load203 = load i8** %base.alloca201
  %bound.load204 = load i8** %bound.alloca202
  %value61 = getelementptr inbounds %struct.node* %65, i32 0, i32 0
  store i8 1, i8* %value61, align 1
  br label %if.end64

if.else62:                                        ; preds = %if.else56
  %66 = load %struct.node** %node.addr, align 8
  %bitcast205 = bitcast %struct.node** %node.addr to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast205, i8** %base.alloca206, i8** %bound.alloca207)
  %base.load208 = load i8** %base.alloca206
  %bound.load209 = load i8** %bound.alloca207
  %value63 = getelementptr inbounds %struct.node* %66, i32 0, i32 0
  store i8 0, i8* %value63, align 1
  br label %if.end64

if.end64:                                         ; preds = %if.else62, %if.then60
  br label %if.end65

if.end65:                                         ; preds = %if.end64, %if.then54
  br label %if.end66

if.end66:                                         ; preds = %if.end65, %for.end39
  %67 = load i32* %num_moves, align 4
  %68 = load i32* @nodecount, align 4
  %add67 = add nsw i32 %68, %67
  store i32 %add67, i32* @nodecount, align 4
  %69 = load i32* %num_moves, align 4
  %70 = load i32* @frees, align 4
  %add68 = add nsw i32 %70, %69
  store i32 %add68, i32* @frees, align 4
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @update_ancestors(%struct.node* %node) #0 {
entry:
  %base.alloca66 = alloca i8*
  %bound.alloca67 = alloca i8*
  %base.alloca61 = alloca i8*
  %bound.alloca62 = alloca i8*
  %base.alloca56 = alloca i8*
  %bound.alloca57 = alloca i8*
  %base.alloca51 = alloca i8*
  %bound.alloca52 = alloca i8*
  %base.alloca46 = alloca i8*
  %bound.alloca47 = alloca i8*
  %base.alloca41 = alloca i8*
  %bound.alloca42 = alloca i8*
  %base.alloca36 = alloca i8*
  %bound.alloca37 = alloca i8*
  %base.alloca31 = alloca i8*
  %bound.alloca32 = alloca i8*
  %base.alloca26 = alloca i8*
  %bound.alloca27 = alloca i8*
  %base.alloca21 = alloca i8*
  %bound.alloca22 = alloca i8*
  %base.alloca = alloca i8*
  %bound.alloca = alloca i8*
  %0 = call i8* @__softboundcets_load_base_shadow_stack(i32 1)
  %1 = call i8* @__softboundcets_load_bound_shadow_stack(i32 1)
  %node.addr = alloca %struct.node*, align 8
  %node.addr9 = bitcast %struct.node** %node.addr to %struct.node**
  %bitcast = bitcast %struct.node** %node.addr to i8*
  %mtmp = getelementptr %struct.node** %node.addr9, i32 1
  %bitcast10 = bitcast %struct.node** %mtmp to i8*
  %tnode = alloca %struct.node*, align 8
  %tnode11 = bitcast %struct.node** %tnode to %struct.node**
  %bitcast12 = bitcast %struct.node** %tnode to i8*
  %mtmp13 = getelementptr %struct.node** %tnode11, i32 1
  %bitcast14 = bitcast %struct.node** %mtmp13 to i8*
  %prevnode = alloca %struct.node*, align 8
  %prevnode15 = bitcast %struct.node** %prevnode to %struct.node**
  %bitcast16 = bitcast %struct.node** %prevnode to i8*
  %mtmp17 = getelementptr %struct.node** %prevnode15, i32 1
  %bitcast18 = bitcast %struct.node** %mtmp17 to i8*
  store %struct.node* %node, %struct.node** %node.addr, align 8
  %bitcast70 = bitcast %struct.node** %node.addr to i8*
  call void @__softboundcets_metadata_store(i8* %bitcast70, i8* %0, i8* %1)
  %2 = load %struct.node** %node.addr, align 8
  %bitcast19 = bitcast %struct.node** %node.addr to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast19, i8** %base.alloca, i8** %bound.alloca)
  %base.load = load i8** %base.alloca
  %bound.load = load i8** %bound.alloca
  store %struct.node* %2, %struct.node** %tnode, align 8
  %bitcast71 = bitcast %struct.node** %tnode to i8*
  call void @__softboundcets_metadata_store(i8* %bitcast71, i8* %base.load, i8* %bound.load)
  %3 = load %struct.node** %node.addr, align 8
  %bitcast20 = bitcast %struct.node** %node.addr to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast20, i8** %base.alloca21, i8** %bound.alloca22)
  %base.load23 = load i8** %base.alloca21
  %bound.load24 = load i8** %bound.alloca22
  store %struct.node* %3, %struct.node** %prevnode, align 8
  %bitcast72 = bitcast %struct.node** %prevnode to i8*
  call void @__softboundcets_metadata_store(i8* %bitcast72, i8* %base.load23, i8* %bound.load24)
  br label %while.cond

while.cond:                                       ; preds = %if.end, %entry
  %4 = load %struct.node** %tnode, align 8
  %bitcast25 = bitcast %struct.node** %tnode to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast25, i8** %base.alloca26, i8** %bound.alloca27)
  %base.load28 = load i8** %base.alloca26
  %bound.load29 = load i8** %bound.alloca27
  %cmp = icmp ne %struct.node* %4, null
  br i1 %cmp, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  %5 = load %struct.node** %tnode, align 8
  %bitcast30 = bitcast %struct.node** %tnode to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast30, i8** %base.alloca31, i8** %bound.alloca32)
  %base.load33 = load i8** %base.alloca31
  %bound.load34 = load i8** %bound.alloca32
  call void @__softboundcets_allocate_shadow_stack_space(i32 2)
  call void @__softboundcets_store_base_shadow_stack(i8* %base.load33, i32 1)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bound.load34, i32 1)
  call void @set_proof_and_disproof_numbers(%struct.node* %5)
  call void @__softboundcets_deallocate_shadow_stack_space()
  %6 = load %struct.node** %tnode, align 8
  %bitcast35 = bitcast %struct.node** %tnode to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast35, i8** %base.alloca36, i8** %bound.alloca37)
  %base.load38 = load i8** %base.alloca36
  %bound.load39 = load i8** %bound.alloca37
  store %struct.node* %6, %struct.node** %prevnode, align 8
  %bitcast73 = bitcast %struct.node** %prevnode to i8*
  call void @__softboundcets_metadata_store(i8* %bitcast73, i8* %base.load38, i8* %bound.load39)
  %7 = load %struct.node** %tnode, align 8
  %bitcast40 = bitcast %struct.node** %tnode to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast40, i8** %base.alloca41, i8** %bound.alloca42)
  %base.load43 = load i8** %base.alloca41
  %bound.load44 = load i8** %bound.alloca42
  %move = getelementptr inbounds %struct.node* %7, i32 0, i32 8
  %target = getelementptr inbounds %struct.move_s* %move, i32 0, i32 1
  %8 = load i32* %target, align 4
  %cmp1 = icmp ne i32 %8, 0
  br i1 %cmp1, label %if.then, label %if.end

if.then:                                          ; preds = %while.body
  %9 = load %struct.node** %tnode, align 8
  %bitcast50 = bitcast %struct.node** %tnode to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast50, i8** %base.alloca51, i8** %bound.alloca52)
  %base.load53 = load i8** %base.alloca51
  %bound.load54 = load i8** %bound.alloca52
  %move2 = getelementptr inbounds %struct.node* %9, i32 0, i32 8
  call void @__softboundcets_allocate_shadow_stack_space(i32 2)
  call void @__softboundcets_store_base_shadow_stack(i8* %base.load53, i32 1)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bound.load54, i32 1)
  call void @unmake(%struct.move_s* %move2, i32 0)
  call void @__softboundcets_deallocate_shadow_stack_space()
  br label %if.end

if.end:                                           ; preds = %if.then, %while.body
  %10 = load %struct.node** %tnode, align 8
  %bitcast55 = bitcast %struct.node** %tnode to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast55, i8** %base.alloca56, i8** %bound.alloca57)
  %base.load58 = load i8** %base.alloca56
  %bound.load59 = load i8** %bound.alloca57
  %parent = getelementptr inbounds %struct.node* %10, i32 0, i32 7
  %11 = load %struct.node** %parent, align 8
  %bitcast60 = bitcast %struct.node** %parent to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast60, i8** %base.alloca61, i8** %bound.alloca62)
  %base.load63 = load i8** %base.alloca61
  %bound.load64 = load i8** %bound.alloca62
  store %struct.node* %11, %struct.node** %tnode, align 8
  %bitcast74 = bitcast %struct.node** %tnode to i8*
  call void @__softboundcets_metadata_store(i8* %bitcast74, i8* %base.load63, i8* %bound.load64)
  br label %while.cond

while.end:                                        ; preds = %while.cond
  %12 = load %struct.node** %prevnode, align 8
  %bitcast45 = bitcast %struct.node** %prevnode to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast45, i8** %base.alloca46, i8** %bound.alloca47)
  %base.load48 = load i8** %base.alloca46
  %bound.load49 = load i8** %bound.alloca47
  %move3 = getelementptr inbounds %struct.node* %12, i32 0, i32 8
  %target4 = getelementptr inbounds %struct.move_s* %move3, i32 0, i32 1
  %13 = load i32* %target4, align 4
  %cmp5 = icmp ne i32 %13, 0
  br i1 %cmp5, label %if.then6, label %if.end8

if.then6:                                         ; preds = %while.end
  %14 = load %struct.node** %prevnode, align 8
  %bitcast65 = bitcast %struct.node** %prevnode to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast65, i8** %base.alloca66, i8** %bound.alloca67)
  %base.load68 = load i8** %base.alloca66
  %bound.load69 = load i8** %bound.alloca67
  %move7 = getelementptr inbounds %struct.node* %14, i32 0, i32 8
  call void @__softboundcets_allocate_shadow_stack_space(i32 2)
  call void @__softboundcets_store_base_shadow_stack(i8* %base.load68, i32 1)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bound.load69, i32 1)
  call void @make(%struct.move_s* %move7, i32 0)
  call void @__softboundcets_deallocate_shadow_stack_space()
  br label %if.end8

if.end8:                                          ; preds = %if.then6, %while.end
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @pn2_eval(%struct.node* %root) #0 {
entry:
  %base.alloca86 = alloca i8*
  %bound.alloca87 = alloca i8*
  %base.alloca81 = alloca i8*
  %bound.alloca82 = alloca i8*
  %base.alloca76 = alloca i8*
  %bound.alloca77 = alloca i8*
  %base.alloca71 = alloca i8*
  %bound.alloca72 = alloca i8*
  %base.alloca66 = alloca i8*
  %bound.alloca67 = alloca i8*
  %base.alloca61 = alloca i8*
  %bound.alloca62 = alloca i8*
  %base.alloca56 = alloca i8*
  %bound.alloca57 = alloca i8*
  %base.alloca51 = alloca i8*
  %bound.alloca52 = alloca i8*
  %base.alloca46 = alloca i8*
  %bound.alloca47 = alloca i8*
  %base.alloca41 = alloca i8*
  %bound.alloca42 = alloca i8*
  %base.alloca36 = alloca i8*
  %bound.alloca37 = alloca i8*
  %base.alloca31 = alloca i8*
  %bound.alloca32 = alloca i8*
  %base.alloca26 = alloca i8*
  %bound.alloca27 = alloca i8*
  %base.alloca21 = alloca i8*
  %bound.alloca22 = alloca i8*
  %base.alloca = alloca i8*
  %bound.alloca = alloca i8*
  %0 = call i8* @__softboundcets_load_base_shadow_stack(i32 1)
  %1 = call i8* @__softboundcets_load_bound_shadow_stack(i32 1)
  %root.addr = alloca %struct.node*, align 8
  %root.addr5 = bitcast %struct.node** %root.addr to %struct.node**
  %bitcast = bitcast %struct.node** %root.addr to i8*
  %mtmp = getelementptr %struct.node** %root.addr5, i32 1
  %bitcast6 = bitcast %struct.node** %mtmp to i8*
  %mostproving = alloca %struct.node*, align 8
  %mostproving7 = bitcast %struct.node** %mostproving to %struct.node**
  %bitcast8 = bitcast %struct.node** %mostproving to i8*
  %mtmp9 = getelementptr %struct.node** %mostproving7, i32 1
  %bitcast10 = bitcast %struct.node** %mtmp9 to i8*
  %currentnode = alloca %struct.node*, align 8
  %currentnode11 = bitcast %struct.node** %currentnode to %struct.node**
  %bitcast12 = bitcast %struct.node** %currentnode to i8*
  %mtmp13 = getelementptr %struct.node** %currentnode11, i32 1
  %bitcast14 = bitcast %struct.node** %mtmp13 to i8*
  %oldparent = alloca %struct.node*, align 8
  %oldparent15 = bitcast %struct.node** %oldparent to %struct.node**
  %bitcast16 = bitcast %struct.node** %oldparent to i8*
  %mtmp17 = getelementptr %struct.node** %oldparent15, i32 1
  %bitcast18 = bitcast %struct.node** %mtmp17 to i8*
  store %struct.node* %root, %struct.node** %root.addr, align 8
  %bitcast90 = bitcast %struct.node** %root.addr to i8*
  call void @__softboundcets_metadata_store(i8* %bitcast90, i8* %0, i8* %1)
  store i32 0, i32* @nodecount2, align 4
  store i32 1, i32* @pn2, align 4
  %2 = load %struct.node** %root.addr, align 8
  %bitcast19 = bitcast %struct.node** %root.addr to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast19, i8** %base.alloca, i8** %bound.alloca)
  %base.load = load i8** %base.alloca
  %bound.load = load i8** %bound.alloca
  %parent = getelementptr inbounds %struct.node* %2, i32 0, i32 7
  %3 = load %struct.node** %parent, align 8
  %bitcast20 = bitcast %struct.node** %parent to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast20, i8** %base.alloca21, i8** %bound.alloca22)
  %base.load23 = load i8** %base.alloca21
  %bound.load24 = load i8** %bound.alloca22
  store %struct.node* %3, %struct.node** %oldparent, align 8
  %bitcast91 = bitcast %struct.node** %oldparent to i8*
  call void @__softboundcets_metadata_store(i8* %bitcast91, i8* %base.load23, i8* %bound.load24)
  %4 = load %struct.node** %root.addr, align 8
  %bitcast25 = bitcast %struct.node** %root.addr to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast25, i8** %base.alloca26, i8** %bound.alloca27)
  %base.load28 = load i8** %base.alloca26
  %bound.load29 = load i8** %bound.alloca27
  %parent1 = getelementptr inbounds %struct.node* %4, i32 0, i32 7
  store %struct.node* null, %struct.node** %parent1, align 8
  %bitcast92 = bitcast %struct.node** %parent1 to i8*
  call void @__softboundcets_metadata_store(i8* %bitcast92, i8* null, i8* null)
  %5 = load %struct.node** %root.addr, align 8
  %bitcast30 = bitcast %struct.node** %root.addr to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast30, i8** %base.alloca31, i8** %bound.alloca32)
  %base.load33 = load i8** %base.alloca31
  %bound.load34 = load i8** %bound.alloca32
  call void @__softboundcets_allocate_shadow_stack_space(i32 2)
  call void @__softboundcets_store_base_shadow_stack(i8* %base.load33, i32 1)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bound.load34, i32 1)
  call void @pn_eval(%struct.node* %5)
  call void @__softboundcets_deallocate_shadow_stack_space()
  %6 = load %struct.node** %root.addr, align 8
  %bitcast35 = bitcast %struct.node** %root.addr to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast35, i8** %base.alloca36, i8** %bound.alloca37)
  %base.load38 = load i8** %base.alloca36
  %bound.load39 = load i8** %bound.alloca37
  call void @__softboundcets_allocate_shadow_stack_space(i32 2)
  call void @__softboundcets_store_base_shadow_stack(i8* %base.load38, i32 1)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bound.load39, i32 1)
  call void @set_proof_and_disproof_numbers(%struct.node* %6)
  call void @__softboundcets_deallocate_shadow_stack_space()
  %7 = load %struct.node** %root.addr, align 8
  %bitcast40 = bitcast %struct.node** %root.addr to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast40, i8** %base.alloca41, i8** %bound.alloca42)
  %base.load43 = load i8** %base.alloca41
  %bound.load44 = load i8** %bound.alloca42
  store %struct.node* %7, %struct.node** %currentnode, align 8
  %bitcast93 = bitcast %struct.node** %currentnode to i8*
  call void @__softboundcets_metadata_store(i8* %bitcast93, i8* %base.load43, i8* %bound.load44)
  br label %while.cond

while.cond:                                       ; preds = %while.body, %entry
  %8 = load %struct.node** %root.addr, align 8
  %bitcast45 = bitcast %struct.node** %root.addr to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast45, i8** %base.alloca46, i8** %bound.alloca47)
  %base.load48 = load i8** %base.alloca46
  %bound.load49 = load i8** %bound.alloca47
  %proof = getelementptr inbounds %struct.node* %8, i32 0, i32 4
  %9 = load i32* %proof, align 4
  %cmp = icmp ne i32 %9, 0
  br i1 %cmp, label %land.lhs.true, label %land.end

land.lhs.true:                                    ; preds = %while.cond
  %10 = load %struct.node** %root.addr, align 8
  %bitcast50 = bitcast %struct.node** %root.addr to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast50, i8** %base.alloca51, i8** %bound.alloca52)
  %base.load53 = load i8** %base.alloca51
  %bound.load54 = load i8** %bound.alloca52
  %disproof = getelementptr inbounds %struct.node* %10, i32 0, i32 5
  %11 = load i32* %disproof, align 4
  %cmp2 = icmp ne i32 %11, 0
  br i1 %cmp2, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %land.lhs.true
  %12 = load i32* @nodecount2, align 4
  %13 = load i32* @nodecount, align 4
  %cmp3 = icmp slt i32 %12, %13
  br label %land.end

land.end:                                         ; preds = %land.rhs, %land.lhs.true, %while.cond
  %14 = phi i1 [ false, %land.lhs.true ], [ false, %while.cond ], [ %cmp3, %land.rhs ]
  br i1 %14, label %while.body, label %while.end

while.body:                                       ; preds = %land.end
  %15 = load %struct.node** %root.addr, align 8
  %bitcast55 = bitcast %struct.node** %root.addr to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast55, i8** %base.alloca56, i8** %bound.alloca57)
  %base.load58 = load i8** %base.alloca56
  %bound.load59 = load i8** %bound.alloca57
  call void @__softboundcets_allocate_shadow_stack_space(i32 2)
  call void @__softboundcets_store_base_shadow_stack(i8* %base.load58, i32 1)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bound.load59, i32 1)
  %call = call %struct.node* @select_most_proving(%struct.node* %15)
  %16 = call i8* @__softboundcets_load_base_shadow_stack(i32 0)
  %17 = call i8* @__softboundcets_load_bound_shadow_stack(i32 0)
  call void @__softboundcets_deallocate_shadow_stack_space()
  store %struct.node* %call, %struct.node** %mostproving, align 8
  %bitcast94 = bitcast %struct.node** %mostproving to i8*
  call void @__softboundcets_metadata_store(i8* %bitcast94, i8* %16, i8* %17)
  %18 = load %struct.node** %mostproving, align 8
  %bitcast60 = bitcast %struct.node** %mostproving to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast60, i8** %base.alloca61, i8** %bound.alloca62)
  %base.load63 = load i8** %base.alloca61
  %bound.load64 = load i8** %bound.alloca62
  call void @__softboundcets_allocate_shadow_stack_space(i32 2)
  call void @__softboundcets_store_base_shadow_stack(i8* %base.load63, i32 1)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bound.load64, i32 1)
  call void @develop_node(%struct.node* %18)
  call void @__softboundcets_deallocate_shadow_stack_space()
  %19 = load %struct.node** %mostproving, align 8
  %bitcast65 = bitcast %struct.node** %mostproving to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast65, i8** %base.alloca66, i8** %bound.alloca67)
  %base.load68 = load i8** %base.alloca66
  %bound.load69 = load i8** %bound.alloca67
  call void @__softboundcets_allocate_shadow_stack_space(i32 2)
  call void @__softboundcets_store_base_shadow_stack(i8* %base.load68, i32 1)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bound.load69, i32 1)
  call void @update_ancestors(%struct.node* %19)
  call void @__softboundcets_deallocate_shadow_stack_space()
  br label %while.cond

while.end:                                        ; preds = %land.end
  %20 = load %struct.node** %root.addr, align 8
  %bitcast70 = bitcast %struct.node** %root.addr to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast70, i8** %base.alloca71, i8** %bound.alloca72)
  %base.load73 = load i8** %base.alloca71
  %bound.load74 = load i8** %bound.alloca72
  %expanded = getelementptr inbounds %struct.node* %20, i32 0, i32 2
  store i8 0, i8* %expanded, align 1
  %21 = load %struct.node** %root.addr, align 8
  %bitcast75 = bitcast %struct.node** %root.addr to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast75, i8** %base.alloca76, i8** %bound.alloca77)
  %base.load78 = load i8** %base.alloca76
  %bound.load79 = load i8** %bound.alloca77
  %num_children = getelementptr inbounds %struct.node* %21, i32 0, i32 1
  store i8 0, i8* %num_children, align 1
  %22 = load %struct.node** %oldparent, align 8
  %bitcast80 = bitcast %struct.node** %oldparent to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast80, i8** %base.alloca81, i8** %bound.alloca82)
  %base.load83 = load i8** %base.alloca81
  %bound.load84 = load i8** %bound.alloca82
  %23 = load %struct.node** %root.addr, align 8
  %bitcast85 = bitcast %struct.node** %root.addr to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast85, i8** %base.alloca86, i8** %bound.alloca87)
  %base.load88 = load i8** %base.alloca86
  %bound.load89 = load i8** %bound.alloca87
  %parent4 = getelementptr inbounds %struct.node* %23, i32 0, i32 7
  store %struct.node* %22, %struct.node** %parent4, align 8
  %bitcast95 = bitcast %struct.node** %parent4 to i8*
  call void @__softboundcets_metadata_store(i8* %bitcast95, i8* %base.load83, i8* %bound.load84)
  store i32 0, i32* @pn2, align 4
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @proofnumberscan() #0 {
entry:
  %base.alloca772 = alloca i8*
  %bound.alloca773 = alloca i8*
  %base.alloca767 = alloca i8*
  %bound.alloca768 = alloca i8*
  %base.alloca762 = alloca i8*
  %bound.alloca763 = alloca i8*
  %base.alloca755 = alloca i8*
  %bound.alloca756 = alloca i8*
  %base.alloca750 = alloca i8*
  %bound.alloca751 = alloca i8*
  %base.alloca745 = alloca i8*
  %bound.alloca746 = alloca i8*
  %base.alloca740 = alloca i8*
  %bound.alloca741 = alloca i8*
  %base.alloca735 = alloca i8*
  %bound.alloca736 = alloca i8*
  %base.alloca730 = alloca i8*
  %bound.alloca731 = alloca i8*
  %base.alloca725 = alloca i8*
  %bound.alloca726 = alloca i8*
  %base.alloca720 = alloca i8*
  %bound.alloca721 = alloca i8*
  %base.alloca715 = alloca i8*
  %bound.alloca716 = alloca i8*
  %base.alloca710 = alloca i8*
  %bound.alloca711 = alloca i8*
  %base.alloca705 = alloca i8*
  %bound.alloca706 = alloca i8*
  %base.alloca700 = alloca i8*
  %bound.alloca701 = alloca i8*
  %base.alloca695 = alloca i8*
  %bound.alloca696 = alloca i8*
  %base.alloca690 = alloca i8*
  %bound.alloca691 = alloca i8*
  %base.alloca685 = alloca i8*
  %bound.alloca686 = alloca i8*
  %base.alloca680 = alloca i8*
  %bound.alloca681 = alloca i8*
  %base.alloca675 = alloca i8*
  %bound.alloca676 = alloca i8*
  %base.alloca670 = alloca i8*
  %bound.alloca671 = alloca i8*
  %base.alloca665 = alloca i8*
  %bound.alloca666 = alloca i8*
  %base.alloca660 = alloca i8*
  %bound.alloca661 = alloca i8*
  %base.alloca655 = alloca i8*
  %bound.alloca656 = alloca i8*
  %base.alloca648 = alloca i8*
  %bound.alloca649 = alloca i8*
  %base.alloca643 = alloca i8*
  %bound.alloca644 = alloca i8*
  %base.alloca638 = alloca i8*
  %bound.alloca639 = alloca i8*
  %base.alloca633 = alloca i8*
  %bound.alloca634 = alloca i8*
  %base.alloca628 = alloca i8*
  %bound.alloca629 = alloca i8*
  %base.alloca623 = alloca i8*
  %bound.alloca624 = alloca i8*
  %base.alloca618 = alloca i8*
  %bound.alloca619 = alloca i8*
  %base.alloca613 = alloca i8*
  %bound.alloca614 = alloca i8*
  %base.alloca608 = alloca i8*
  %bound.alloca609 = alloca i8*
  %base.alloca603 = alloca i8*
  %bound.alloca604 = alloca i8*
  %base.alloca598 = alloca i8*
  %bound.alloca599 = alloca i8*
  %base.alloca593 = alloca i8*
  %bound.alloca594 = alloca i8*
  %base.alloca588 = alloca i8*
  %bound.alloca589 = alloca i8*
  %base.alloca583 = alloca i8*
  %bound.alloca584 = alloca i8*
  %base.alloca578 = alloca i8*
  %bound.alloca579 = alloca i8*
  %base.alloca571 = alloca i8*
  %bound.alloca572 = alloca i8*
  %base.alloca566 = alloca i8*
  %bound.alloca567 = alloca i8*
  %base.alloca561 = alloca i8*
  %bound.alloca562 = alloca i8*
  %base.alloca556 = alloca i8*
  %bound.alloca557 = alloca i8*
  %base.alloca551 = alloca i8*
  %bound.alloca552 = alloca i8*
  %base.alloca546 = alloca i8*
  %bound.alloca547 = alloca i8*
  %base.alloca541 = alloca i8*
  %bound.alloca542 = alloca i8*
  %base.alloca536 = alloca i8*
  %bound.alloca537 = alloca i8*
  %base.alloca531 = alloca i8*
  %bound.alloca532 = alloca i8*
  %base.alloca526 = alloca i8*
  %bound.alloca527 = alloca i8*
  %base.alloca521 = alloca i8*
  %bound.alloca522 = alloca i8*
  %base.alloca516 = alloca i8*
  %bound.alloca517 = alloca i8*
  %base.alloca511 = alloca i8*
  %bound.alloca512 = alloca i8*
  %base.alloca506 = alloca i8*
  %bound.alloca507 = alloca i8*
  %base.alloca501 = alloca i8*
  %bound.alloca502 = alloca i8*
  %base.alloca496 = alloca i8*
  %bound.alloca497 = alloca i8*
  %base.alloca491 = alloca i8*
  %bound.alloca492 = alloca i8*
  %base.alloca486 = alloca i8*
  %bound.alloca487 = alloca i8*
  %base.alloca481 = alloca i8*
  %bound.alloca482 = alloca i8*
  %base.alloca476 = alloca i8*
  %bound.alloca477 = alloca i8*
  %base.alloca471 = alloca i8*
  %bound.alloca472 = alloca i8*
  %base.alloca466 = alloca i8*
  %bound.alloca467 = alloca i8*
  %base.alloca461 = alloca i8*
  %bound.alloca462 = alloca i8*
  %base.alloca456 = alloca i8*
  %bound.alloca457 = alloca i8*
  %base.alloca451 = alloca i8*
  %bound.alloca452 = alloca i8*
  %base.alloca446 = alloca i8*
  %bound.alloca447 = alloca i8*
  %base.alloca441 = alloca i8*
  %bound.alloca442 = alloca i8*
  %base.alloca436 = alloca i8*
  %bound.alloca437 = alloca i8*
  %base.alloca431 = alloca i8*
  %bound.alloca432 = alloca i8*
  %base.alloca426 = alloca i8*
  %bound.alloca427 = alloca i8*
  %base.alloca421 = alloca i8*
  %bound.alloca422 = alloca i8*
  %base.alloca416 = alloca i8*
  %bound.alloca417 = alloca i8*
  %base.alloca411 = alloca i8*
  %bound.alloca412 = alloca i8*
  %base.alloca406 = alloca i8*
  %bound.alloca407 = alloca i8*
  %base.alloca401 = alloca i8*
  %bound.alloca402 = alloca i8*
  %base.alloca396 = alloca i8*
  %bound.alloca397 = alloca i8*
  %base.alloca391 = alloca i8*
  %bound.alloca392 = alloca i8*
  %base.alloca386 = alloca i8*
  %bound.alloca387 = alloca i8*
  %base.alloca = alloca i8*
  %bound.alloca = alloca i8*
  %moves = alloca [512 x %struct.move_s], align 16
  %moves294 = bitcast [512 x %struct.move_s]* %moves to [512 x %struct.move_s]*
  %bitcast = bitcast [512 x %struct.move_s]* %moves to i8*
  %mtmp = getelementptr [512 x %struct.move_s]* %moves294, i32 1
  %bitcast295 = bitcast [512 x %struct.move_s]* %mtmp to i8*
  %islegal = alloca [512 x i32], align 16
  %islegal296 = bitcast [512 x i32]* %islegal to [512 x i32]*
  %bitcast297 = bitcast [512 x i32]* %islegal to i8*
  %mtmp298 = getelementptr [512 x i32]* %islegal296, i32 1
  %bitcast299 = bitcast [512 x i32]* %mtmp298 to i8*
  %nodesspent = alloca [512 x i32], align 16
  %nodesspent300 = bitcast [512 x i32]* %nodesspent to [512 x i32]*
  %bitcast301 = bitcast [512 x i32]* %nodesspent to i8*
  %mtmp302 = getelementptr [512 x i32]* %nodesspent300, i32 1
  %bitcast303 = bitcast [512 x i32]* %mtmp302 to i8*
  %i = alloca i32, align 4
  %i304 = bitcast i32* %i to i32*
  %bitcast305 = bitcast i32* %i to i8*
  %mtmp306 = getelementptr i32* %i304, i32 1
  %bitcast307 = bitcast i32* %mtmp306 to i8*
  %l = alloca i32, align 4
  %l308 = bitcast i32* %l to i32*
  %bitcast309 = bitcast i32* %l to i8*
  %mtmp310 = getelementptr i32* %l308, i32 1
  %bitcast311 = bitcast i32* %mtmp310 to i8*
  %legal = alloca i32, align 4
  %legal312 = bitcast i32* %legal to i32*
  %bitcast313 = bitcast i32* %legal to i8*
  %mtmp314 = getelementptr i32* %legal312, i32 1
  %bitcast315 = bitcast i32* %mtmp314 to i8*
  %num_moves = alloca i32, align 4
  %num_moves316 = bitcast i32* %num_moves to i32*
  %bitcast317 = bitcast i32* %num_moves to i8*
  %mtmp318 = getelementptr i32* %num_moves316, i32 1
  %bitcast319 = bitcast i32* %mtmp318 to i8*
  %xstart_time = alloca i64, align 8
  %xstart_time320 = bitcast i64* %xstart_time to i64*
  %bitcast321 = bitcast i64* %xstart_time to i8*
  %mtmp322 = getelementptr i64* %xstart_time320, i32 1
  %bitcast323 = bitcast i64* %mtmp322 to i8*
  %root = alloca %struct.node*, align 8
  %root324 = bitcast %struct.node** %root to %struct.node**
  %bitcast325 = bitcast %struct.node** %root to i8*
  %mtmp326 = getelementptr %struct.node** %root324, i32 1
  %bitcast327 = bitcast %struct.node** %mtmp326 to i8*
  %mostproving = alloca %struct.node*, align 8
  %mostproving328 = bitcast %struct.node** %mostproving to %struct.node**
  %bitcast329 = bitcast %struct.node** %mostproving to i8*
  %mtmp330 = getelementptr %struct.node** %mostproving328, i32 1
  %bitcast331 = bitcast %struct.node** %mtmp330 to i8*
  %currentnode = alloca %struct.node*, align 8
  %currentnode332 = bitcast %struct.node** %currentnode to %struct.node**
  %bitcast333 = bitcast %struct.node** %currentnode to i8*
  %mtmp334 = getelementptr %struct.node** %currentnode332, i32 1
  %bitcast335 = bitcast %struct.node** %mtmp334 to i8*
  %leastlooked = alloca i32, align 4
  %leastlooked336 = bitcast i32* %leastlooked to i32*
  %bitcast337 = bitcast i32* %leastlooked to i8*
  %mtmp338 = getelementptr i32* %leastlooked336, i32 1
  %bitcast339 = bitcast i32* %mtmp338 to i8*
  %leastlooked_l = alloca i32, align 4
  %leastlooked_l340 = bitcast i32* %leastlooked_l to i32*
  %bitcast341 = bitcast i32* %leastlooked_l to i8*
  %mtmp342 = getelementptr i32* %leastlooked_l340, i32 1
  %bitcast343 = bitcast i32* %mtmp342 to i8*
  %leastlooked_i = alloca i32, align 4
  %leastlooked_i344 = bitcast i32* %leastlooked_i to i32*
  %bitcast345 = bitcast i32* %leastlooked_i to i8*
  %mtmp346 = getelementptr i32* %leastlooked_i344, i32 1
  %bitcast347 = bitcast i32* %mtmp346 to i8*
  %losers = alloca i32, align 4
  %losers348 = bitcast i32* %losers to i32*
  %bitcast349 = bitcast i32* %losers to i8*
  %mtmp350 = getelementptr i32* %losers348, i32 1
  %bitcast351 = bitcast i32* %mtmp350 to i8*
  %xnodecount = alloca i32, align 4
  %xnodecount352 = bitcast i32* %xnodecount to i32*
  %bitcast353 = bitcast i32* %xnodecount to i8*
  %mtmp354 = getelementptr i32* %xnodecount352, i32 1
  %bitcast355 = bitcast i32* %mtmp354 to i8*
  %firsts = alloca i32, align 4
  %firsts356 = bitcast i32* %firsts to i32*
  %bitcast357 = bitcast i32* %firsts to i8*
  %mtmp358 = getelementptr i32* %firsts356, i32 1
  %bitcast359 = bitcast i32* %mtmp358 to i8*
  %alternates = alloca i32, align 4
  %alternates360 = bitcast i32* %alternates to i32*
  %bitcast361 = bitcast i32* %alternates to i8*
  %mtmp362 = getelementptr i32* %alternates360, i32 1
  %bitcast363 = bitcast i32* %mtmp362 to i8*
  %output = alloca [8 x i8], align 1
  %output364 = bitcast [8 x i8]* %output to [8 x i8]*
  %bitcast365 = bitcast [8 x i8]* %output to i8*
  %mtmp366 = getelementptr [8 x i8]* %output364, i32 1
  %bitcast367 = bitcast [8 x i8]* %mtmp366 to i8*
  %ic = alloca i32, align 4
  %ic368 = bitcast i32* %ic to i32*
  %bitcast369 = bitcast i32* %ic to i8*
  %mtmp370 = getelementptr i32* %ic368, i32 1
  %bitcast371 = bitcast i32* %mtmp370 to i8*
  %bdp = alloca float, align 4
  %bdp372 = bitcast float* %bdp to float*
  %bitcast373 = bitcast float* %bdp to i8*
  %mtmp374 = getelementptr float* %bdp372, i32 1
  %bitcast375 = bitcast float* %mtmp374 to i8*
  %altlosers = alloca i32, align 4
  %altlosers376 = bitcast i32* %altlosers to i32*
  %bitcast377 = bitcast i32* %altlosers to i8*
  %mtmp378 = getelementptr i32* %altlosers376, i32 1
  %bitcast379 = bitcast i32* %mtmp378 to i8*
  %tmp = alloca %struct.move_s, align 8
  %tmp380 = bitcast %struct.move_s* %tmp to %struct.move_s*
  %bitcast381 = bitcast %struct.move_s* %tmp to i8*
  %mtmp382 = getelementptr %struct.move_s* %tmp380, i32 1
  %bitcast383 = bitcast %struct.move_s* %mtmp382 to i8*
  store i32 0, i32* %leastlooked_l, align 4
  store i32 0, i32* %leastlooked_i, align 4
  %call = call i64 @rtime()
  store i64 %call, i64* %xstart_time, align 8
  %0 = load i32* @PBSize, align 4
  %conv = sext i32 %0 to i64
  call void @__softboundcets_allocate_shadow_stack_space(i32 1)
  %call1 = call noalias i8* @softboundcets_calloc(i64 %conv, i64 56) #1
  %1 = call i8* @__softboundcets_load_base_shadow_stack(i32 0)
  %2 = call i8* @__softboundcets_load_bound_shadow_stack(i32 0)
  call void @__softboundcets_deallocate_shadow_stack_space()
  store i8* %call1, i8** @membuff, align 8
  %bitcast776 = bitcast i8** @membuff to i8*
  call void @__softboundcets_metadata_store(i8* %bitcast776, i8* %1, i8* %2)
  call void @__softboundcets_allocate_shadow_stack_space(i32 1)
  %call2 = call noalias i8* @softboundcets_calloc(i64 1, i64 56) #1
  %3 = call i8* @__softboundcets_load_base_shadow_stack(i32 0)
  %4 = call i8* @__softboundcets_load_bound_shadow_stack(i32 0)
  call void @__softboundcets_deallocate_shadow_stack_space()
  %5 = bitcast i8* %call2 to %struct.node*
  store %struct.node* %5, %struct.node** %root, align 8
  %bitcast777 = bitcast %struct.node** %root to i8*
  call void @__softboundcets_metadata_store(i8* %bitcast777, i8* %3, i8* %4)
  %arrayidx = getelementptr inbounds [512 x %struct.move_s]* %moves, i32 0, i64 0
  call void @__softboundcets_allocate_shadow_stack_space(i32 2)
  call void @__softboundcets_store_base_shadow_stack(i8* %bitcast, i32 1)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bitcast295, i32 1)
  call void @gen(%struct.move_s* %arrayidx)
  call void @__softboundcets_deallocate_shadow_stack_space()
  %6 = load i32* @numb_moves, align 4
  store i32 %6, i32* %num_moves, align 4
  store i32 0, i32* @alllosers, align 4
  call void @__softboundcets_memset_check(i8* bitcast ([300 x i32]* @rootlosers to i8*), i64 1200, i8* bitcast ([300 x i32]* @rootlosers to i8*), i8* bitcast ([300 x i32]* getelementptr inbounds ([300 x i32]* @rootlosers, i32 1) to i8*))
  call void @llvm.memset.p0i8.i64(i8* bitcast ([300 x i32]* @rootlosers to i8*), i8 0, i64 1200, i32 16, i1 false)
  %7 = bitcast [512 x i32]* %nodesspent to i8*
  call void @__softboundcets_memset_check(i8* %7, i64 2048, i8* %bitcast301, i8* %bitcast303)
  call void @llvm.memset.p0i8.i64(i8* %7, i8 0, i64 2048, i32 16, i1 false)
  call void @__softboundcets_memcopy_check(i8* bitcast (%struct.move_s* @pn_move to i8*), i8* bitcast (%struct.move_s* @dummy to i8*), i64 24, i8* bitcast (%struct.move_s* @pn_move to i8*), i8* bitcast (%struct.move_s* getelementptr inbounds (%struct.move_s* @pn_move, i32 1) to i8*), i8* null, i8* inttoptr (i64 281474976710656 to i8*))
  call void @__softboundcets_copy_metadata(i8* bitcast (%struct.move_s* @pn_move to i8*), i8* bitcast (%struct.move_s* @dummy to i8*), i64 24)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* bitcast (%struct.move_s* @pn_move to i8*), i8* bitcast (%struct.move_s* @dummy to i8*), i64 24, i32 4, i1 false)
  store i32 0, i32* %legal, align 4
  %call3 = call i32 @in_check()
  store i32 %call3, i32* %ic, align 4
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %8 = load i32* %i, align 4
  %9 = load i32* %num_moves, align 4
  %cmp = icmp slt i32 %8, %9
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %arrayidx5 = getelementptr inbounds [512 x %struct.move_s]* %moves, i32 0, i64 0
  %10 = load i32* %i, align 4
  call void @__softboundcets_allocate_shadow_stack_space(i32 2)
  call void @__softboundcets_store_base_shadow_stack(i8* %bitcast, i32 1)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bitcast295, i32 1)
  call void @make(%struct.move_s* %arrayidx5, i32 %10)
  call void @__softboundcets_deallocate_shadow_stack_space()
  %arrayidx6 = getelementptr inbounds [512 x %struct.move_s]* %moves, i32 0, i64 0
  %11 = load i32* %i, align 4
  %12 = load i32* %ic, align 4
  call void @__softboundcets_allocate_shadow_stack_space(i32 2)
  call void @__softboundcets_store_base_shadow_stack(i8* %bitcast, i32 1)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bitcast295, i32 1)
  %call7 = call i32 @check_legal(%struct.move_s* %arrayidx6, i32 %11, i32 %12)
  call void @__softboundcets_deallocate_shadow_stack_space()
  %tobool = icmp ne i32 %call7, 0
  br i1 %tobool, label %if.then, label %if.else

if.then:                                          ; preds = %for.body
  %13 = load i32* %legal, align 4
  %inc = add nsw i32 %13, 1
  store i32 %inc, i32* %legal, align 4
  %14 = load i32* %i, align 4
  %idxprom = sext i32 %14 to i64
  %arrayidx8 = getelementptr inbounds [512 x i32]* %islegal, i32 0, i64 %idxprom
  store i32 1, i32* %arrayidx8, align 4
  br label %if.end

if.else:                                          ; preds = %for.body
  %15 = load i32* %i, align 4
  %idxprom9 = sext i32 %15 to i64
  %arrayidx10 = getelementptr inbounds [512 x i32]* %islegal, i32 0, i64 %idxprom9
  store i32 0, i32* %arrayidx10, align 4
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %arrayidx11 = getelementptr inbounds [512 x %struct.move_s]* %moves, i32 0, i64 0
  %16 = load i32* %i, align 4
  call void @__softboundcets_allocate_shadow_stack_space(i32 2)
  call void @__softboundcets_store_base_shadow_stack(i8* %bitcast, i32 1)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bitcast295, i32 1)
  call void @unmake(%struct.move_s* %arrayidx11, i32 %16)
  call void @__softboundcets_deallocate_shadow_stack_space()
  br label %for.inc

for.inc:                                          ; preds = %if.end
  %17 = load i32* %i, align 4
  %inc12 = add nsw i32 %17, 1
  store i32 %inc12, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %18 = load i32* %legal, align 4
  %cmp13 = icmp eq i32 %18, 0
  br i1 %cmp13, label %if.then15, label %if.end16

if.then15:                                        ; preds = %for.end
  call void @Xfree()
  %19 = load i8** @membuff, align 8
  %bitcast384 = bitcast i8** @membuff to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast384, i8** %base.alloca, i8** %bound.alloca)
  %base.load = load i8** %base.alloca
  %bound.load = load i8** %bound.alloca
  call void @__softboundcets_allocate_shadow_stack_space(i32 2)
  call void @__softboundcets_store_base_shadow_stack(i8* %base.load, i32 1)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bound.load, i32 1)
  call void @softboundcets_free(i8* %19) #1
  call void @__softboundcets_deallocate_shadow_stack_space()
  %20 = load %struct.node** %root, align 8
  %bitcast385 = bitcast %struct.node** %root to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast385, i8** %base.alloca386, i8** %bound.alloca387)
  %base.load388 = load i8** %base.alloca386
  %bound.load389 = load i8** %bound.alloca387
  %21 = bitcast %struct.node* %20 to i8*
  call void @__softboundcets_allocate_shadow_stack_space(i32 2)
  call void @__softboundcets_store_base_shadow_stack(i8* %base.load388, i32 1)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bound.load389, i32 1)
  call void @softboundcets_free(i8* %21) #1
  call void @__softboundcets_deallocate_shadow_stack_space()
  br label %return

if.end16:                                         ; preds = %for.end
  store i32 0, i32* %losers, align 4
  store i32 1, i32* @nodecount, align 4
  store i32 0, i32* @iters, align 4
  store i32 0, i32* @maxply, align 4
  store i32 0, i32* @forwards, align 4
  store i32 0, i32* %firsts, align 4
  store i32 0, i32* %alternates, align 4
  %22 = load i32* @hash, align 4
  %23 = load i32* @move_number, align 4
  %24 = load i32* @ply, align 4
  %add = add nsw i32 %23, %24
  %sub = sub nsw i32 %add, 1
  %idxprom17 = sext i32 %sub to i64
  %arrayidx18 = getelementptr inbounds [600 x i32]* @hash_history, i32 0, i64 %idxprom17
  store i32 %22, i32* %arrayidx18, align 4
  %25 = load i32* @white_to_move, align 4
  %tobool19 = icmp ne i32 %25, 0
  %cond = select i1 %tobool19, i32 0, i32 1
  store i32 %cond, i32* @root_to_move, align 4
  %26 = load %struct.node** %root, align 8
  %bitcast390 = bitcast %struct.node** %root to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast390, i8** %base.alloca391, i8** %bound.alloca392)
  %base.load393 = load i8** %base.alloca391
  %bound.load394 = load i8** %bound.alloca392
  call void @__softboundcets_allocate_shadow_stack_space(i32 2)
  call void @__softboundcets_store_base_shadow_stack(i8* %base.load393, i32 1)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bound.load394, i32 1)
  call void @pn_eval(%struct.node* %26)
  call void @__softboundcets_deallocate_shadow_stack_space()
  %27 = load %struct.node** %root, align 8
  %bitcast395 = bitcast %struct.node** %root to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast395, i8** %base.alloca396, i8** %bound.alloca397)
  %base.load398 = load i8** %base.alloca396
  %bound.load399 = load i8** %bound.alloca397
  %value = getelementptr inbounds %struct.node* %27, i32 0, i32 0
  %28 = load i8* %value, align 1
  %conv20 = zext i8 %28 to i32
  %cmp21 = icmp eq i32 %conv20, 1
  br i1 %cmp21, label %if.then27, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.end16
  %29 = load %struct.node** %root, align 8
  %bitcast410 = bitcast %struct.node** %root to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast410, i8** %base.alloca411, i8** %bound.alloca412)
  %base.load413 = load i8** %base.alloca411
  %bound.load414 = load i8** %bound.alloca412
  %value23 = getelementptr inbounds %struct.node* %29, i32 0, i32 0
  %30 = load i8* %value23, align 1
  %conv24 = zext i8 %30 to i32
  %cmp25 = icmp eq i32 %conv24, 0
  br i1 %cmp25, label %if.then27, label %if.end28

if.then27:                                        ; preds = %lor.lhs.false, %if.end16
  call void @Xfree()
  %31 = load i8** @membuff, align 8
  %bitcast400 = bitcast i8** @membuff to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast400, i8** %base.alloca401, i8** %bound.alloca402)
  %base.load403 = load i8** %base.alloca401
  %bound.load404 = load i8** %bound.alloca402
  call void @__softboundcets_allocate_shadow_stack_space(i32 2)
  call void @__softboundcets_store_base_shadow_stack(i8* %base.load403, i32 1)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bound.load404, i32 1)
  call void @softboundcets_free(i8* %31) #1
  call void @__softboundcets_deallocate_shadow_stack_space()
  %32 = load %struct.node** %root, align 8
  %bitcast405 = bitcast %struct.node** %root to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast405, i8** %base.alloca406, i8** %bound.alloca407)
  %base.load408 = load i8** %base.alloca406
  %bound.load409 = load i8** %bound.alloca407
  %33 = bitcast %struct.node* %32 to i8*
  call void @__softboundcets_allocate_shadow_stack_space(i32 2)
  call void @__softboundcets_store_base_shadow_stack(i8* %base.load408, i32 1)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bound.load409, i32 1)
  call void @softboundcets_free(i8* %33) #1
  call void @__softboundcets_deallocate_shadow_stack_space()
  call void @__softboundcets_memcopy_check(i8* bitcast (%struct.move_s* @pn_move to i8*), i8* bitcast (%struct.move_s* @dummy to i8*), i64 24, i8* bitcast (%struct.move_s* @pn_move to i8*), i8* bitcast (%struct.move_s* getelementptr inbounds (%struct.move_s* @pn_move, i32 1) to i8*), i8* null, i8* inttoptr (i64 281474976710656 to i8*))
  call void @__softboundcets_copy_metadata(i8* bitcast (%struct.move_s* @pn_move to i8*), i8* bitcast (%struct.move_s* @dummy to i8*), i64 24)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* bitcast (%struct.move_s* @pn_move to i8*), i8* bitcast (%struct.move_s* @dummy to i8*), i64 24, i32 4, i1 false)
  br label %return

if.end28:                                         ; preds = %lor.lhs.false
  %34 = load %struct.node** %root, align 8
  %bitcast415 = bitcast %struct.node** %root to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast415, i8** %base.alloca416, i8** %bound.alloca417)
  %base.load418 = load i8** %base.alloca416
  %bound.load419 = load i8** %bound.alloca417
  call void @__softboundcets_allocate_shadow_stack_space(i32 2)
  call void @__softboundcets_store_base_shadow_stack(i8* %base.load418, i32 1)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bound.load419, i32 1)
  call void @set_proof_and_disproof_numbers(%struct.node* %34)
  call void @__softboundcets_deallocate_shadow_stack_space()
  br label %while.cond

while.cond:                                       ; preds = %if.end179, %if.then125, %if.end28
  %call29 = call i64 @rtime()
  %35 = load i64* %xstart_time, align 8
  %call30 = call i32 @rdifftime(i64 %call29, i64 %35)
  %36 = load i32* @pn_time, align 4
  %cmp31 = icmp slt i32 %call30, %36
  br i1 %cmp31, label %land.lhs.true, label %land.end

land.lhs.true:                                    ; preds = %while.cond
  %call33 = call i32 @interrupt()
  %tobool34 = icmp ne i32 %call33, 0
  br i1 %tobool34, label %land.end, label %land.lhs.true35

land.lhs.true35:                                  ; preds = %land.lhs.true
  %37 = load i32* @bufftop, align 4
  %conv36 = zext i32 %37 to i64
  %38 = load i32* @PBSize, align 4
  %sub37 = sub nsw i32 %38, 10000
  %conv38 = sext i32 %sub37 to i64
  %mul = mul i64 %conv38, 56
  %cmp39 = icmp ult i64 %conv36, %mul
  br i1 %cmp39, label %land.lhs.true41, label %land.end

land.lhs.true41:                                  ; preds = %land.lhs.true35
  %39 = load %struct.node** %root, align 8
  %bitcast425 = bitcast %struct.node** %root to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast425, i8** %base.alloca426, i8** %bound.alloca427)
  %base.load428 = load i8** %base.alloca426
  %bound.load429 = load i8** %bound.alloca427
  %proof = getelementptr inbounds %struct.node* %39, i32 0, i32 4
  %40 = load i32* %proof, align 4
  %cmp42 = icmp ne i32 %40, 0
  br i1 %cmp42, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %land.lhs.true41
  %41 = load %struct.node** %root, align 8
  %bitcast450 = bitcast %struct.node** %root to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast450, i8** %base.alloca451, i8** %bound.alloca452)
  %base.load453 = load i8** %base.alloca451
  %bound.load454 = load i8** %bound.alloca452
  %disproof = getelementptr inbounds %struct.node* %41, i32 0, i32 5
  %42 = load i32* %disproof, align 4
  %cmp44 = icmp ne i32 %42, 0
  br label %land.end

land.end:                                         ; preds = %land.rhs, %land.lhs.true41, %land.lhs.true35, %land.lhs.true, %while.cond
  %43 = phi i1 [ false, %land.lhs.true41 ], [ false, %land.lhs.true35 ], [ false, %land.lhs.true ], [ false, %while.cond ], [ %cmp44, %land.rhs ]
  br i1 %43, label %while.body, label %while.end180

while.body:                                       ; preds = %land.end
  %44 = load i32* @iters, align 4
  %inc46 = add nsw i32 %44, 1
  store i32 %inc46, i32* @iters, align 4
  %45 = load i32* @nodecount, align 4
  store i32 %45, i32* %xnodecount, align 4
  %46 = load i32* @nodecount, align 4
  %rem = srem i32 %46, 100
  %cmp47 = icmp slt i32 %rem, 66
  br i1 %cmp47, label %if.then49, label %if.else92

if.then49:                                        ; preds = %while.body
  %47 = load i32* %firsts, align 4
  %inc50 = add nsw i32 %47, 1
  store i32 %inc50, i32* %firsts, align 4
  %48 = load %struct.node** %root, align 8
  %bitcast430 = bitcast %struct.node** %root to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast430, i8** %base.alloca431, i8** %bound.alloca432)
  %base.load433 = load i8** %base.alloca431
  %bound.load434 = load i8** %bound.alloca432
  store %struct.node* %48, %struct.node** %currentnode, align 8
  %bitcast778 = bitcast %struct.node** %currentnode to i8*
  call void @__softboundcets_metadata_store(i8* %bitcast778, i8* %base.load433, i8* %bound.load434)
  %49 = load %struct.node** %currentnode, align 8
  %bitcast435 = bitcast %struct.node** %currentnode to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast435, i8** %base.alloca436, i8** %bound.alloca437)
  %base.load438 = load i8** %base.alloca436
  %bound.load439 = load i8** %bound.alloca437
  call void @__softboundcets_allocate_shadow_stack_space(i32 2)
  call void @__softboundcets_store_base_shadow_stack(i8* %base.load438, i32 1)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bound.load439, i32 1)
  %call51 = call %struct.node* @select_most_proving(%struct.node* %49)
  %50 = call i8* @__softboundcets_load_base_shadow_stack(i32 0)
  %51 = call i8* @__softboundcets_load_bound_shadow_stack(i32 0)
  call void @__softboundcets_deallocate_shadow_stack_space()
  store %struct.node* %call51, %struct.node** %mostproving, align 8
  %bitcast779 = bitcast %struct.node** %mostproving to i8*
  call void @__softboundcets_metadata_store(i8* %bitcast779, i8* %50, i8* %51)
  %52 = load %struct.node** %mostproving, align 8
  %bitcast440 = bitcast %struct.node** %mostproving to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast440, i8** %base.alloca441, i8** %bound.alloca442)
  %base.load443 = load i8** %base.alloca441
  %bound.load444 = load i8** %bound.alloca442
  call void @__softboundcets_allocate_shadow_stack_space(i32 2)
  call void @__softboundcets_store_base_shadow_stack(i8* %base.load443, i32 1)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bound.load444, i32 1)
  call void @develop_node(%struct.node* %52)
  call void @__softboundcets_deallocate_shadow_stack_space()
  %53 = load %struct.node** %mostproving, align 8
  %bitcast445 = bitcast %struct.node** %mostproving to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast445, i8** %base.alloca446, i8** %bound.alloca447)
  %base.load448 = load i8** %base.alloca446
  %bound.load449 = load i8** %bound.alloca447
  call void @__softboundcets_allocate_shadow_stack_space(i32 2)
  call void @__softboundcets_store_base_shadow_stack(i8* %base.load448, i32 1)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bound.load449, i32 1)
  call void @update_ancestors(%struct.node* %53)
  call void @__softboundcets_deallocate_shadow_stack_space()
  store i32 0, i32* %i, align 4
  br label %while.cond52

while.cond52:                                     ; preds = %while.body59, %if.then49
  %54 = load i32* %i, align 4
  %idxprom53 = sext i32 %54 to i64
  %55 = load %struct.node** %root, align 8
  %bitcast455 = bitcast %struct.node** %root to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast455, i8** %base.alloca456, i8** %bound.alloca457)
  %base.load458 = load i8** %base.alloca456
  %bound.load459 = load i8** %bound.alloca457
  %children = getelementptr inbounds %struct.node* %55, i32 0, i32 6
  %56 = load %struct.node*** %children, align 8
  %bitcast460 = bitcast %struct.node*** %children to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast460, i8** %base.alloca461, i8** %bound.alloca462)
  %base.load463 = load i8** %base.alloca461
  %bound.load464 = load i8** %bound.alloca462
  %arrayidx54 = getelementptr inbounds %struct.node** %56, i64 %idxprom53
  %57 = load %struct.node** %arrayidx54, align 8
  %bitcast465 = bitcast %struct.node** %arrayidx54 to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast465, i8** %base.alloca466, i8** %bound.alloca467)
  %base.load468 = load i8** %base.alloca466
  %bound.load469 = load i8** %bound.alloca467
  %proof55 = getelementptr inbounds %struct.node* %57, i32 0, i32 4
  %58 = load i32* %proof55, align 4
  %59 = load %struct.node** %root, align 8
  %bitcast470 = bitcast %struct.node** %root to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast470, i8** %base.alloca471, i8** %bound.alloca472)
  %base.load473 = load i8** %base.alloca471
  %bound.load474 = load i8** %bound.alloca472
  %proof56 = getelementptr inbounds %struct.node* %59, i32 0, i32 4
  %60 = load i32* %proof56, align 4
  %cmp57 = icmp ne i32 %58, %60
  br i1 %cmp57, label %while.body59, label %while.end

while.body59:                                     ; preds = %while.cond52
  %61 = load i32* %i, align 4
  %inc60 = add nsw i32 %61, 1
  store i32 %inc60, i32* %i, align 4
  br label %while.cond52

while.end:                                        ; preds = %while.cond52
  %62 = load i32* @nodecount, align 4
  %63 = load i32* %xnodecount, align 4
  %sub61 = sub nsw i32 %62, %63
  %64 = load i32* %i, align 4
  %idxprom62 = sext i32 %64 to i64
  %arrayidx63 = getelementptr inbounds [512 x i32]* %nodesspent, i32 0, i64 %idxprom62
  %65 = load i32* %arrayidx63, align 4
  %add64 = add nsw i32 %65, %sub61
  store i32 %add64, i32* %arrayidx63, align 4
  %66 = load %struct.node** %root, align 8
  %bitcast475 = bitcast %struct.node** %root to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast475, i8** %base.alloca476, i8** %bound.alloca477)
  %base.load478 = load i8** %base.alloca476
  %bound.load479 = load i8** %bound.alloca477
  %proof65 = getelementptr inbounds %struct.node* %66, i32 0, i32 4
  %67 = load i32* %proof65, align 4
  %cmp66 = icmp eq i32 %67, 0
  br i1 %cmp66, label %land.lhs.true68, label %if.else80

land.lhs.true68:                                  ; preds = %while.end
  %68 = load %struct.node** %root, align 8
  %bitcast490 = bitcast %struct.node** %root to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast490, i8** %base.alloca491, i8** %bound.alloca492)
  %base.load493 = load i8** %base.alloca491
  %bound.load494 = load i8** %bound.alloca492
  %disproof69 = getelementptr inbounds %struct.node* %68, i32 0, i32 5
  %69 = load i32* %disproof69, align 4
  %cmp70 = icmp eq i32 %69, 100000000
  br i1 %cmp70, label %if.then72, label %if.else80

if.then72:                                        ; preds = %land.lhs.true68
  store i32 1, i32* @forcedwin, align 4
  %70 = load i32* @kibitzed, align 4
  %tobool73 = icmp ne i32 %70, 0
  br i1 %tobool73, label %if.end76, label %if.then74

if.then74:                                        ; preds = %if.then72
  store i32 1, i32* @kibitzed, align 4
  %call75 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([28 x i8]* @.str84, i32 0, i32 0))
  br label %if.end76

if.end76:                                         ; preds = %if.then74, %if.then72
  %71 = load i32* %i, align 4
  %idxprom77 = sext i32 %71 to i64
  %72 = load %struct.node** %root, align 8
  %bitcast654 = bitcast %struct.node** %root to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast654, i8** %base.alloca655, i8** %bound.alloca656)
  %base.load657 = load i8** %base.alloca655
  %bound.load658 = load i8** %bound.alloca656
  %children78 = getelementptr inbounds %struct.node* %72, i32 0, i32 6
  %73 = load %struct.node*** %children78, align 8
  %bitcast659 = bitcast %struct.node*** %children78 to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast659, i8** %base.alloca660, i8** %bound.alloca661)
  %base.load662 = load i8** %base.alloca660
  %bound.load663 = load i8** %bound.alloca661
  %arrayidx79 = getelementptr inbounds %struct.node** %73, i64 %idxprom77
  %74 = load %struct.node** %arrayidx79, align 8
  %bitcast664 = bitcast %struct.node** %arrayidx79 to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast664, i8** %base.alloca665, i8** %bound.alloca666)
  %base.load667 = load i8** %base.alloca665
  %bound.load668 = load i8** %bound.alloca666
  %move = getelementptr inbounds %struct.node* %74, i32 0, i32 8
  %75 = bitcast %struct.move_s* %move to i8*
  call void @__softboundcets_memcopy_check(i8* bitcast (%struct.move_s* @pn_move to i8*), i8* %75, i64 24, i8* bitcast (%struct.move_s* @pn_move to i8*), i8* bitcast (%struct.move_s* getelementptr inbounds (%struct.move_s* @pn_move, i32 1) to i8*), i8* %base.load667, i8* %bound.load668)
  call void @__softboundcets_copy_metadata(i8* bitcast (%struct.move_s* @pn_move to i8*), i8* %75, i64 24)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* bitcast (%struct.move_s* @pn_move to i8*), i8* %75, i64 24, i32 4, i1 false)
  br label %if.end91

if.else80:                                        ; preds = %land.lhs.true68, %while.end
  %76 = load %struct.node** %root, align 8
  %bitcast495 = bitcast %struct.node** %root to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast495, i8** %base.alloca496, i8** %bound.alloca497)
  %base.load498 = load i8** %base.alloca496
  %bound.load499 = load i8** %bound.alloca497
  %disproof81 = getelementptr inbounds %struct.node* %76, i32 0, i32 5
  %77 = load i32* %disproof81, align 4
  %cmp82 = icmp eq i32 %77, 0
  br i1 %cmp82, label %land.lhs.true84, label %if.end90

land.lhs.true84:                                  ; preds = %if.else80
  %78 = load %struct.node** %root, align 8
  %bitcast570 = bitcast %struct.node** %root to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast570, i8** %base.alloca571, i8** %bound.alloca572)
  %base.load573 = load i8** %base.alloca571
  %bound.load574 = load i8** %bound.alloca572
  %proof85 = getelementptr inbounds %struct.node* %78, i32 0, i32 4
  %79 = load i32* %proof85, align 4
  %cmp86 = icmp eq i32 %79, 100000000
  br i1 %cmp86, label %if.then88, label %if.end90

if.then88:                                        ; preds = %land.lhs.true84
  call void @__softboundcets_memcopy_check(i8* bitcast (%struct.move_s* @pn_move to i8*), i8* bitcast (%struct.move_s* @dummy to i8*), i64 24, i8* bitcast (%struct.move_s* @pn_move to i8*), i8* bitcast (%struct.move_s* getelementptr inbounds (%struct.move_s* @pn_move, i32 1) to i8*), i8* null, i8* inttoptr (i64 281474976710656 to i8*))
  call void @__softboundcets_copy_metadata(i8* bitcast (%struct.move_s* @pn_move to i8*), i8* bitcast (%struct.move_s* @dummy to i8*), i64 24)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* bitcast (%struct.move_s* @pn_move to i8*), i8* bitcast (%struct.move_s* @dummy to i8*), i64 24, i32 4, i1 false)
  %80 = load i32* %losers, align 4
  %inc89 = add nsw i32 %80, 1
  store i32 %inc89, i32* %losers, align 4
  br label %if.end90

if.end90:                                         ; preds = %if.then88, %land.lhs.true84, %if.else80
  br label %if.end91

if.end91:                                         ; preds = %if.end90, %if.end76
  br label %if.end179

if.else92:                                        ; preds = %while.body
  %81 = load i32* %alternates, align 4
  %inc93 = add nsw i32 %81, 1
  store i32 %inc93, i32* %alternates, align 4
  store i32 100000000, i32* %leastlooked, align 4
  store i32 0, i32* %l, align 4
  store i32 0, i32* %i, align 4
  br label %for.cond94

for.cond94:                                       ; preds = %for.inc120, %if.else92
  %82 = load i32* %i, align 4
  %83 = load i32* %num_moves, align 4
  %cmp95 = icmp slt i32 %82, %83
  br i1 %cmp95, label %for.body97, label %for.end122

for.body97:                                       ; preds = %for.cond94
  %84 = load i32* %i, align 4
  %idxprom98 = sext i32 %84 to i64
  %arrayidx99 = getelementptr inbounds [512 x i32]* %nodesspent, i32 0, i64 %idxprom98
  %85 = load i32* %arrayidx99, align 4
  %86 = load i32* %leastlooked, align 4
  %cmp100 = icmp slt i32 %85, %86
  br i1 %cmp100, label %land.lhs.true102, label %if.end113

land.lhs.true102:                                 ; preds = %for.body97
  %87 = load i32* %i, align 4
  %idxprom103 = sext i32 %87 to i64
  %arrayidx104 = getelementptr inbounds [512 x i32]* %islegal, i32 0, i64 %idxprom103
  %88 = load i32* %arrayidx104, align 4
  %tobool105 = icmp ne i32 %88, 0
  br i1 %tobool105, label %land.lhs.true106, label %if.end113

land.lhs.true106:                                 ; preds = %land.lhs.true102
  %89 = load i32* %i, align 4
  %idxprom107 = sext i32 %89 to i64
  %bitcast575 = bitcast [300 x i32]* @rootlosers to i8*
  %bitcast576 = bitcast [300 x i32]* getelementptr inbounds ([300 x i32]* @rootlosers, i32 1) to i8*
  %arrayidx108 = getelementptr inbounds [300 x i32]* @rootlosers, i32 0, i64 %idxprom107
  %90 = load i32* %arrayidx108, align 4
  %tobool109 = icmp ne i32 %90, 0
  br i1 %tobool109, label %if.end113, label %if.then110

if.then110:                                       ; preds = %land.lhs.true106
  %91 = load i32* %i, align 4
  %idxprom111 = sext i32 %91 to i64
  %arrayidx112 = getelementptr inbounds [512 x i32]* %nodesspent, i32 0, i64 %idxprom111
  %92 = load i32* %arrayidx112, align 4
  store i32 %92, i32* %leastlooked, align 4
  %93 = load i32* %i, align 4
  store i32 %93, i32* %leastlooked_i, align 4
  %94 = load i32* %l, align 4
  store i32 %94, i32* %leastlooked_l, align 4
  br label %if.end113

if.end113:                                        ; preds = %if.then110, %land.lhs.true106, %land.lhs.true102, %for.body97
  %95 = load i32* %i, align 4
  %idxprom114 = sext i32 %95 to i64
  %arrayidx115 = getelementptr inbounds [512 x i32]* %islegal, i32 0, i64 %idxprom114
  %96 = load i32* %arrayidx115, align 4
  %tobool116 = icmp ne i32 %96, 0
  br i1 %tobool116, label %if.then117, label %if.end119

if.then117:                                       ; preds = %if.end113
  %97 = load i32* %l, align 4
  %inc118 = add nsw i32 %97, 1
  store i32 %inc118, i32* %l, align 4
  br label %if.end119

if.end119:                                        ; preds = %if.then117, %if.end113
  br label %for.inc120

for.inc120:                                       ; preds = %if.end119
  %98 = load i32* %i, align 4
  %inc121 = add nsw i32 %98, 1
  store i32 %inc121, i32* %i, align 4
  br label %for.cond94

for.end122:                                       ; preds = %for.cond94
  %99 = load i32* %leastlooked, align 4
  %cmp123 = icmp eq i32 %99, 100000000
  br i1 %cmp123, label %if.then125, label %if.end127

if.then125:                                       ; preds = %for.end122
  %100 = load i32* @nodecount, align 4
  %add126 = add nsw i32 %100, 30
  store i32 %add126, i32* @nodecount, align 4
  br label %while.cond

if.end127:                                        ; preds = %for.end122
  %arrayidx128 = getelementptr inbounds [512 x %struct.move_s]* %moves, i32 0, i64 0
  %101 = load i32* %leastlooked_i, align 4
  call void @__softboundcets_allocate_shadow_stack_space(i32 2)
  call void @__softboundcets_store_base_shadow_stack(i8* %bitcast, i32 1)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bitcast295, i32 1)
  call void @make(%struct.move_s* %arrayidx128, i32 %101)
  call void @__softboundcets_deallocate_shadow_stack_space()
  %102 = load i32* %leastlooked_l, align 4
  %idxprom129 = sext i32 %102 to i64
  %103 = load %struct.node** %root, align 8
  %bitcast500 = bitcast %struct.node** %root to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast500, i8** %base.alloca501, i8** %bound.alloca502)
  %base.load503 = load i8** %base.alloca501
  %bound.load504 = load i8** %bound.alloca502
  %children130 = getelementptr inbounds %struct.node* %103, i32 0, i32 6
  %104 = load %struct.node*** %children130, align 8
  %bitcast505 = bitcast %struct.node*** %children130 to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast505, i8** %base.alloca506, i8** %bound.alloca507)
  %base.load508 = load i8** %base.alloca506
  %bound.load509 = load i8** %bound.alloca507
  %arrayidx131 = getelementptr inbounds %struct.node** %104, i64 %idxprom129
  %105 = load %struct.node** %arrayidx131, align 8
  %bitcast510 = bitcast %struct.node** %arrayidx131 to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast510, i8** %base.alloca511, i8** %bound.alloca512)
  %base.load513 = load i8** %base.alloca511
  %bound.load514 = load i8** %bound.alloca512
  store %struct.node* %105, %struct.node** %currentnode, align 8
  %bitcast780 = bitcast %struct.node** %currentnode to i8*
  call void @__softboundcets_metadata_store(i8* %bitcast780, i8* %base.load513, i8* %bound.load514)
  %106 = load %struct.node** %currentnode, align 8
  %bitcast515 = bitcast %struct.node** %currentnode to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast515, i8** %base.alloca516, i8** %bound.alloca517)
  %base.load518 = load i8** %base.alloca516
  %bound.load519 = load i8** %bound.alloca517
  call void @__softboundcets_allocate_shadow_stack_space(i32 2)
  call void @__softboundcets_store_base_shadow_stack(i8* %base.load518, i32 1)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bound.load519, i32 1)
  %call132 = call %struct.node* @select_most_proving(%struct.node* %106)
  %107 = call i8* @__softboundcets_load_base_shadow_stack(i32 0)
  %108 = call i8* @__softboundcets_load_bound_shadow_stack(i32 0)
  call void @__softboundcets_deallocate_shadow_stack_space()
  store %struct.node* %call132, %struct.node** %mostproving, align 8
  %bitcast781 = bitcast %struct.node** %mostproving to i8*
  call void @__softboundcets_metadata_store(i8* %bitcast781, i8* %107, i8* %108)
  %109 = load %struct.node** %mostproving, align 8
  %bitcast520 = bitcast %struct.node** %mostproving to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast520, i8** %base.alloca521, i8** %bound.alloca522)
  %base.load523 = load i8** %base.alloca521
  %bound.load524 = load i8** %bound.alloca522
  call void @__softboundcets_allocate_shadow_stack_space(i32 2)
  call void @__softboundcets_store_base_shadow_stack(i8* %base.load523, i32 1)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bound.load524, i32 1)
  call void @develop_node(%struct.node* %109)
  call void @__softboundcets_deallocate_shadow_stack_space()
  %110 = load %struct.node** %mostproving, align 8
  %bitcast525 = bitcast %struct.node** %mostproving to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast525, i8** %base.alloca526, i8** %bound.alloca527)
  %base.load528 = load i8** %base.alloca526
  %bound.load529 = load i8** %bound.alloca527
  call void @__softboundcets_allocate_shadow_stack_space(i32 2)
  call void @__softboundcets_store_base_shadow_stack(i8* %base.load528, i32 1)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bound.load529, i32 1)
  call void @update_ancestors(%struct.node* %110)
  call void @__softboundcets_deallocate_shadow_stack_space()
  %111 = load i32* @nodecount, align 4
  %112 = load i32* %xnodecount, align 4
  %sub133 = sub nsw i32 %111, %112
  %113 = load i32* %leastlooked_i, align 4
  %idxprom134 = sext i32 %113 to i64
  %arrayidx135 = getelementptr inbounds [512 x i32]* %nodesspent, i32 0, i64 %idxprom134
  %114 = load i32* %arrayidx135, align 4
  %add136 = add nsw i32 %114, %sub133
  store i32 %add136, i32* %arrayidx135, align 4
  %115 = load i32* %leastlooked_l, align 4
  %idxprom137 = sext i32 %115 to i64
  %116 = load %struct.node** %root, align 8
  %bitcast530 = bitcast %struct.node** %root to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast530, i8** %base.alloca531, i8** %bound.alloca532)
  %base.load533 = load i8** %base.alloca531
  %bound.load534 = load i8** %bound.alloca532
  %children138 = getelementptr inbounds %struct.node* %116, i32 0, i32 6
  %117 = load %struct.node*** %children138, align 8
  %bitcast535 = bitcast %struct.node*** %children138 to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast535, i8** %base.alloca536, i8** %bound.alloca537)
  %base.load538 = load i8** %base.alloca536
  %bound.load539 = load i8** %bound.alloca537
  %arrayidx139 = getelementptr inbounds %struct.node** %117, i64 %idxprom137
  %118 = load %struct.node** %arrayidx139, align 8
  %bitcast540 = bitcast %struct.node** %arrayidx139 to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast540, i8** %base.alloca541, i8** %bound.alloca542)
  %base.load543 = load i8** %base.alloca541
  %bound.load544 = load i8** %bound.alloca542
  %proof140 = getelementptr inbounds %struct.node* %118, i32 0, i32 4
  %119 = load i32* %proof140, align 4
  %cmp141 = icmp eq i32 %119, 0
  br i1 %cmp141, label %land.lhs.true143, label %if.else159

land.lhs.true143:                                 ; preds = %if.end127
  %120 = load i32* %leastlooked_l, align 4
  %idxprom144 = sext i32 %120 to i64
  %121 = load %struct.node** %root, align 8
  %bitcast577 = bitcast %struct.node** %root to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast577, i8** %base.alloca578, i8** %bound.alloca579)
  %base.load580 = load i8** %base.alloca578
  %bound.load581 = load i8** %bound.alloca579
  %children145 = getelementptr inbounds %struct.node* %121, i32 0, i32 6
  %122 = load %struct.node*** %children145, align 8
  %bitcast582 = bitcast %struct.node*** %children145 to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast582, i8** %base.alloca583, i8** %bound.alloca584)
  %base.load585 = load i8** %base.alloca583
  %bound.load586 = load i8** %bound.alloca584
  %arrayidx146 = getelementptr inbounds %struct.node** %122, i64 %idxprom144
  %123 = load %struct.node** %arrayidx146, align 8
  %bitcast587 = bitcast %struct.node** %arrayidx146 to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast587, i8** %base.alloca588, i8** %bound.alloca589)
  %base.load590 = load i8** %base.alloca588
  %bound.load591 = load i8** %bound.alloca589
  %disproof147 = getelementptr inbounds %struct.node* %123, i32 0, i32 5
  %124 = load i32* %disproof147, align 4
  %cmp148 = icmp eq i32 %124, 100000000
  br i1 %cmp148, label %if.then150, label %if.else159

if.then150:                                       ; preds = %land.lhs.true143
  store i32 1, i32* @forcedwin, align 4
  %125 = load i32* @kibitzed, align 4
  %tobool151 = icmp ne i32 %125, 0
  br i1 %tobool151, label %if.end154, label %if.then152

if.then152:                                       ; preds = %if.then150
  store i32 1, i32* @kibitzed, align 4
  %call153 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([34 x i8]* @.str185, i32 0, i32 0))
  br label %if.end154

if.end154:                                        ; preds = %if.then152, %if.then150
  %126 = load i32* %leastlooked_l, align 4
  %idxprom155 = sext i32 %126 to i64
  %127 = load %struct.node** %root, align 8
  %bitcast744 = bitcast %struct.node** %root to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast744, i8** %base.alloca745, i8** %bound.alloca746)
  %base.load747 = load i8** %base.alloca745
  %bound.load748 = load i8** %bound.alloca746
  %children156 = getelementptr inbounds %struct.node* %127, i32 0, i32 6
  %128 = load %struct.node*** %children156, align 8
  %bitcast749 = bitcast %struct.node*** %children156 to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast749, i8** %base.alloca750, i8** %bound.alloca751)
  %base.load752 = load i8** %base.alloca750
  %bound.load753 = load i8** %bound.alloca751
  %arrayidx157 = getelementptr inbounds %struct.node** %128, i64 %idxprom155
  %129 = load %struct.node** %arrayidx157, align 8
  %bitcast754 = bitcast %struct.node** %arrayidx157 to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast754, i8** %base.alloca755, i8** %bound.alloca756)
  %base.load757 = load i8** %base.alloca755
  %bound.load758 = load i8** %bound.alloca756
  %move158 = getelementptr inbounds %struct.node* %129, i32 0, i32 8
  %130 = bitcast %struct.move_s* %move158 to i8*
  call void @__softboundcets_memcopy_check(i8* bitcast (%struct.move_s* @pn_move to i8*), i8* %130, i64 24, i8* bitcast (%struct.move_s* @pn_move to i8*), i8* bitcast (%struct.move_s* getelementptr inbounds (%struct.move_s* @pn_move, i32 1) to i8*), i8* %base.load757, i8* %bound.load758)
  call void @__softboundcets_copy_metadata(i8* bitcast (%struct.move_s* @pn_move to i8*), i8* %130, i64 24)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* bitcast (%struct.move_s* @pn_move to i8*), i8* %130, i64 24, i32 4, i1 false)
  br label %if.end178

if.else159:                                       ; preds = %land.lhs.true143, %if.end127
  %131 = load i32* %leastlooked_l, align 4
  %idxprom160 = sext i32 %131 to i64
  %132 = load %struct.node** %root, align 8
  %bitcast592 = bitcast %struct.node** %root to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast592, i8** %base.alloca593, i8** %bound.alloca594)
  %base.load595 = load i8** %base.alloca593
  %bound.load596 = load i8** %bound.alloca594
  %children161 = getelementptr inbounds %struct.node* %132, i32 0, i32 6
  %133 = load %struct.node*** %children161, align 8
  %bitcast597 = bitcast %struct.node*** %children161 to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast597, i8** %base.alloca598, i8** %bound.alloca599)
  %base.load600 = load i8** %base.alloca598
  %bound.load601 = load i8** %bound.alloca599
  %arrayidx162 = getelementptr inbounds %struct.node** %133, i64 %idxprom160
  %134 = load %struct.node** %arrayidx162, align 8
  %bitcast602 = bitcast %struct.node** %arrayidx162 to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast602, i8** %base.alloca603, i8** %bound.alloca604)
  %base.load605 = load i8** %base.alloca603
  %bound.load606 = load i8** %bound.alloca604
  %disproof163 = getelementptr inbounds %struct.node* %134, i32 0, i32 5
  %135 = load i32* %disproof163, align 4
  %cmp164 = icmp eq i32 %135, 0
  br i1 %cmp164, label %land.lhs.true166, label %if.end177

land.lhs.true166:                                 ; preds = %if.else159
  %136 = load i32* %leastlooked_l, align 4
  %idxprom167 = sext i32 %136 to i64
  %137 = load %struct.node** %root, align 8
  %bitcast669 = bitcast %struct.node** %root to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast669, i8** %base.alloca670, i8** %bound.alloca671)
  %base.load672 = load i8** %base.alloca670
  %bound.load673 = load i8** %bound.alloca671
  %children168 = getelementptr inbounds %struct.node* %137, i32 0, i32 6
  %138 = load %struct.node*** %children168, align 8
  %bitcast674 = bitcast %struct.node*** %children168 to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast674, i8** %base.alloca675, i8** %bound.alloca676)
  %base.load677 = load i8** %base.alloca675
  %bound.load678 = load i8** %bound.alloca676
  %arrayidx169 = getelementptr inbounds %struct.node** %138, i64 %idxprom167
  %139 = load %struct.node** %arrayidx169, align 8
  %bitcast679 = bitcast %struct.node** %arrayidx169 to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast679, i8** %base.alloca680, i8** %bound.alloca681)
  %base.load682 = load i8** %base.alloca680
  %bound.load683 = load i8** %bound.alloca681
  %proof170 = getelementptr inbounds %struct.node* %139, i32 0, i32 4
  %140 = load i32* %proof170, align 4
  %cmp171 = icmp eq i32 %140, 100000000
  br i1 %cmp171, label %if.then173, label %if.end177

if.then173:                                       ; preds = %land.lhs.true166
  %141 = load i32* %leastlooked_i, align 4
  %idxprom174 = sext i32 %141 to i64
  %bitcast759 = bitcast [300 x i32]* @rootlosers to i8*
  %bitcast760 = bitcast [300 x i32]* getelementptr inbounds ([300 x i32]* @rootlosers, i32 1) to i8*
  %arrayidx175 = getelementptr inbounds [300 x i32]* @rootlosers, i32 0, i64 %idxprom174
  store i32 1, i32* %arrayidx175, align 4
  %142 = load i32* %losers, align 4
  %inc176 = add nsw i32 %142, 1
  store i32 %inc176, i32* %losers, align 4
  br label %if.end177

if.end177:                                        ; preds = %if.then173, %land.lhs.true166, %if.else159
  br label %if.end178

if.end178:                                        ; preds = %if.end177, %if.end154
  br label %if.end179

if.end179:                                        ; preds = %if.end178, %if.end91
  br label %while.cond

while.end180:                                     ; preds = %land.end
  store i32 0, i32* %l, align 4
  store float -1.000000e+00, float* %bdp, align 4
  store i32 0, i32* %altlosers, align 4
  %143 = load %struct.node** %root, align 8
  %bitcast420 = bitcast %struct.node** %root to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast420, i8** %base.alloca421, i8** %bound.alloca422)
  %base.load423 = load i8** %base.alloca421
  %bound.load424 = load i8** %bound.alloca422
  %expanded = getelementptr inbounds %struct.node* %143, i32 0, i32 2
  %144 = load i8* %expanded, align 1
  %tobool181 = icmp ne i8 %144, 0
  br i1 %tobool181, label %if.then182, label %if.end256

if.then182:                                       ; preds = %while.end180
  store i32 0, i32* %i, align 4
  br label %for.cond183

for.cond183:                                      ; preds = %for.inc253, %if.then182
  %145 = load i32* %i, align 4
  %146 = load i32* %num_moves, align 4
  %cmp184 = icmp slt i32 %145, %146
  br i1 %cmp184, label %for.body186, label %for.end255

for.body186:                                      ; preds = %for.cond183
  %147 = load i32* %i, align 4
  %idxprom187 = sext i32 %147 to i64
  %arrayidx188 = getelementptr inbounds [512 x i32]* %islegal, i32 0, i64 %idxprom187
  %148 = load i32* %arrayidx188, align 4
  %tobool189 = icmp ne i32 %148, 0
  br i1 %tobool189, label %if.then190, label %if.end252

if.then190:                                       ; preds = %for.body186
  %149 = load i32* %i, align 4
  %idxprom191 = sext i32 %149 to i64
  %arrayidx192 = getelementptr inbounds [512 x %struct.move_s]* %moves, i32 0, i64 %idxprom191
  %arraydecay = getelementptr inbounds [8 x i8]* %output, i32 0, i32 0
  call void @__softboundcets_allocate_shadow_stack_space(i32 3)
  call void @__softboundcets_store_base_shadow_stack(i8* %bitcast, i32 1)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bitcast295, i32 1)
  call void @__softboundcets_store_base_shadow_stack(i8* %bitcast365, i32 2)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bitcast367, i32 2)
  call void @comp_to_san(%struct.move_s* byval align 8 %arrayidx192, i8* %arraydecay)
  call void @__softboundcets_deallocate_shadow_stack_space()
  %150 = load i32* %l, align 4
  %idxprom193 = sext i32 %150 to i64
  %151 = load %struct.node** %root, align 8
  %bitcast545 = bitcast %struct.node** %root to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast545, i8** %base.alloca546, i8** %bound.alloca547)
  %base.load548 = load i8** %base.alloca546
  %bound.load549 = load i8** %bound.alloca547
  %children194 = getelementptr inbounds %struct.node* %151, i32 0, i32 6
  %152 = load %struct.node*** %children194, align 8
  %bitcast550 = bitcast %struct.node*** %children194 to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast550, i8** %base.alloca551, i8** %bound.alloca552)
  %base.load553 = load i8** %base.alloca551
  %bound.load554 = load i8** %bound.alloca552
  %arrayidx195 = getelementptr inbounds %struct.node** %152, i64 %idxprom193
  %153 = load %struct.node** %arrayidx195, align 8
  %bitcast555 = bitcast %struct.node** %arrayidx195 to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast555, i8** %base.alloca556, i8** %bound.alloca557)
  %base.load558 = load i8** %base.alloca556
  %bound.load559 = load i8** %bound.alloca557
  %proof196 = getelementptr inbounds %struct.node* %153, i32 0, i32 4
  %154 = load i32* %proof196, align 4
  %cmp197 = icmp ne i32 %154, 0
  br i1 %cmp197, label %if.then199, label %if.else245

if.then199:                                       ; preds = %if.then190
  %155 = load i32* %l, align 4
  %idxprom200 = sext i32 %155 to i64
  %156 = load %struct.node** %root, align 8
  %bitcast607 = bitcast %struct.node** %root to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast607, i8** %base.alloca608, i8** %bound.alloca609)
  %base.load610 = load i8** %base.alloca608
  %bound.load611 = load i8** %bound.alloca609
  %children201 = getelementptr inbounds %struct.node* %156, i32 0, i32 6
  %157 = load %struct.node*** %children201, align 8
  %bitcast612 = bitcast %struct.node*** %children201 to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast612, i8** %base.alloca613, i8** %bound.alloca614)
  %base.load615 = load i8** %base.alloca613
  %bound.load616 = load i8** %bound.alloca614
  %arrayidx202 = getelementptr inbounds %struct.node** %157, i64 %idxprom200
  %158 = load %struct.node** %arrayidx202, align 8
  %bitcast617 = bitcast %struct.node** %arrayidx202 to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast617, i8** %base.alloca618, i8** %bound.alloca619)
  %base.load620 = load i8** %base.alloca618
  %bound.load621 = load i8** %bound.alloca619
  %disproof203 = getelementptr inbounds %struct.node* %158, i32 0, i32 5
  %159 = load i32* %disproof203, align 4
  %conv204 = sitofp i32 %159 to float
  %160 = load i32* %l, align 4
  %idxprom205 = sext i32 %160 to i64
  %161 = load %struct.node** %root, align 8
  %bitcast622 = bitcast %struct.node** %root to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast622, i8** %base.alloca623, i8** %bound.alloca624)
  %base.load625 = load i8** %base.alloca623
  %bound.load626 = load i8** %bound.alloca624
  %children206 = getelementptr inbounds %struct.node* %161, i32 0, i32 6
  %162 = load %struct.node*** %children206, align 8
  %bitcast627 = bitcast %struct.node*** %children206 to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast627, i8** %base.alloca628, i8** %bound.alloca629)
  %base.load630 = load i8** %base.alloca628
  %bound.load631 = load i8** %bound.alloca629
  %arrayidx207 = getelementptr inbounds %struct.node** %162, i64 %idxprom205
  %163 = load %struct.node** %arrayidx207, align 8
  %bitcast632 = bitcast %struct.node** %arrayidx207 to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast632, i8** %base.alloca633, i8** %bound.alloca634)
  %base.load635 = load i8** %base.alloca633
  %bound.load636 = load i8** %bound.alloca634
  %proof208 = getelementptr inbounds %struct.node* %163, i32 0, i32 4
  %164 = load i32* %proof208, align 4
  %conv209 = sitofp i32 %164 to float
  %div = fdiv float %conv204, %conv209
  %165 = load float* %bdp, align 4
  %cmp210 = fcmp ogt float %div, %165
  br i1 %cmp210, label %if.then212, label %if.end228

if.then212:                                       ; preds = %if.then199
  %166 = load i32* %l, align 4
  %idxprom213 = sext i32 %166 to i64
  %167 = load %struct.node** %root, align 8
  %bitcast684 = bitcast %struct.node** %root to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast684, i8** %base.alloca685, i8** %bound.alloca686)
  %base.load687 = load i8** %base.alloca685
  %bound.load688 = load i8** %bound.alloca686
  %children214 = getelementptr inbounds %struct.node* %167, i32 0, i32 6
  %168 = load %struct.node*** %children214, align 8
  %bitcast689 = bitcast %struct.node*** %children214 to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast689, i8** %base.alloca690, i8** %bound.alloca691)
  %base.load692 = load i8** %base.alloca690
  %bound.load693 = load i8** %bound.alloca691
  %arrayidx215 = getelementptr inbounds %struct.node** %168, i64 %idxprom213
  %169 = load %struct.node** %arrayidx215, align 8
  %bitcast694 = bitcast %struct.node** %arrayidx215 to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast694, i8** %base.alloca695, i8** %bound.alloca696)
  %base.load697 = load i8** %base.alloca695
  %bound.load698 = load i8** %bound.alloca696
  %disproof216 = getelementptr inbounds %struct.node* %169, i32 0, i32 5
  %170 = load i32* %disproof216, align 4
  %conv217 = sitofp i32 %170 to float
  %171 = load i32* %l, align 4
  %idxprom218 = sext i32 %171 to i64
  %172 = load %struct.node** %root, align 8
  %bitcast699 = bitcast %struct.node** %root to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast699, i8** %base.alloca700, i8** %bound.alloca701)
  %base.load702 = load i8** %base.alloca700
  %bound.load703 = load i8** %bound.alloca701
  %children219 = getelementptr inbounds %struct.node* %172, i32 0, i32 6
  %173 = load %struct.node*** %children219, align 8
  %bitcast704 = bitcast %struct.node*** %children219 to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast704, i8** %base.alloca705, i8** %bound.alloca706)
  %base.load707 = load i8** %base.alloca705
  %bound.load708 = load i8** %bound.alloca706
  %arrayidx220 = getelementptr inbounds %struct.node** %173, i64 %idxprom218
  %174 = load %struct.node** %arrayidx220, align 8
  %bitcast709 = bitcast %struct.node** %arrayidx220 to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast709, i8** %base.alloca710, i8** %bound.alloca711)
  %base.load712 = load i8** %base.alloca710
  %bound.load713 = load i8** %bound.alloca711
  %proof221 = getelementptr inbounds %struct.node* %174, i32 0, i32 4
  %175 = load i32* %proof221, align 4
  %conv222 = sitofp i32 %175 to float
  %div223 = fdiv float %conv217, %conv222
  store float %div223, float* %bdp, align 4
  %176 = load i32* %l, align 4
  %idxprom224 = sext i32 %176 to i64
  %177 = load %struct.node** %root, align 8
  %bitcast714 = bitcast %struct.node** %root to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast714, i8** %base.alloca715, i8** %bound.alloca716)
  %base.load717 = load i8** %base.alloca715
  %bound.load718 = load i8** %bound.alloca716
  %children225 = getelementptr inbounds %struct.node* %177, i32 0, i32 6
  %178 = load %struct.node*** %children225, align 8
  %bitcast719 = bitcast %struct.node*** %children225 to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast719, i8** %base.alloca720, i8** %bound.alloca721)
  %base.load722 = load i8** %base.alloca720
  %bound.load723 = load i8** %bound.alloca721
  %arrayidx226 = getelementptr inbounds %struct.node** %178, i64 %idxprom224
  %179 = load %struct.node** %arrayidx226, align 8
  %bitcast724 = bitcast %struct.node** %arrayidx226 to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast724, i8** %base.alloca725, i8** %bound.alloca726)
  %base.load727 = load i8** %base.alloca725
  %bound.load728 = load i8** %bound.alloca726
  %move227 = getelementptr inbounds %struct.node* %179, i32 0, i32 8
  %180 = bitcast %struct.move_s* %move227 to i8*
  call void @__softboundcets_memcopy_check(i8* bitcast (%struct.move_s* @pn_move to i8*), i8* %180, i64 24, i8* bitcast (%struct.move_s* @pn_move to i8*), i8* bitcast (%struct.move_s* getelementptr inbounds (%struct.move_s* @pn_move, i32 1) to i8*), i8* %base.load727, i8* %bound.load728)
  call void @__softboundcets_copy_metadata(i8* bitcast (%struct.move_s* @pn_move to i8*), i8* %180, i64 24)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* bitcast (%struct.move_s* @pn_move to i8*), i8* %180, i64 24, i32 4, i1 false)
  br label %if.end228

if.end228:                                        ; preds = %if.then212, %if.then199
  %181 = load i32* %l, align 4
  %idxprom229 = sext i32 %181 to i64
  %182 = load %struct.node** %root, align 8
  %bitcast729 = bitcast %struct.node** %root to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast729, i8** %base.alloca730, i8** %bound.alloca731)
  %base.load732 = load i8** %base.alloca730
  %bound.load733 = load i8** %bound.alloca731
  %children230 = getelementptr inbounds %struct.node* %182, i32 0, i32 6
  %183 = load %struct.node*** %children230, align 8
  %bitcast734 = bitcast %struct.node*** %children230 to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast734, i8** %base.alloca735, i8** %bound.alloca736)
  %base.load737 = load i8** %base.alloca735
  %bound.load738 = load i8** %bound.alloca736
  %arrayidx231 = getelementptr inbounds %struct.node** %183, i64 %idxprom229
  %184 = load %struct.node** %arrayidx231, align 8
  %bitcast739 = bitcast %struct.node** %arrayidx231 to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast739, i8** %base.alloca740, i8** %bound.alloca741)
  %base.load742 = load i8** %base.alloca740
  %bound.load743 = load i8** %bound.alloca741
  %disproof232 = getelementptr inbounds %struct.node* %184, i32 0, i32 5
  %185 = load i32* %disproof232, align 4
  %cmp233 = icmp eq i32 %185, 0
  br i1 %cmp233, label %land.lhs.true235, label %if.end244

land.lhs.true235:                                 ; preds = %if.end228
  %186 = load i32* %l, align 4
  %idxprom236 = sext i32 %186 to i64
  %187 = load %struct.node** %root, align 8
  %bitcast761 = bitcast %struct.node** %root to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast761, i8** %base.alloca762, i8** %bound.alloca763)
  %base.load764 = load i8** %base.alloca762
  %bound.load765 = load i8** %bound.alloca763
  %children237 = getelementptr inbounds %struct.node* %187, i32 0, i32 6
  %188 = load %struct.node*** %children237, align 8
  %bitcast766 = bitcast %struct.node*** %children237 to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast766, i8** %base.alloca767, i8** %bound.alloca768)
  %base.load769 = load i8** %base.alloca767
  %bound.load770 = load i8** %bound.alloca768
  %arrayidx238 = getelementptr inbounds %struct.node** %188, i64 %idxprom236
  %189 = load %struct.node** %arrayidx238, align 8
  %bitcast771 = bitcast %struct.node** %arrayidx238 to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast771, i8** %base.alloca772, i8** %bound.alloca773)
  %base.load774 = load i8** %base.alloca772
  %bound.load775 = load i8** %bound.alloca773
  %proof239 = getelementptr inbounds %struct.node* %189, i32 0, i32 4
  %190 = load i32* %proof239, align 4
  %cmp240 = icmp eq i32 %190, 100000000
  br i1 %cmp240, label %if.then242, label %if.end244

if.then242:                                       ; preds = %land.lhs.true235
  %191 = load i32* %altlosers, align 4
  %inc243 = add nsw i32 %191, 1
  store i32 %inc243, i32* %altlosers, align 4
  br label %if.end244

if.end244:                                        ; preds = %if.then242, %land.lhs.true235, %if.end228
  br label %if.end250

if.else245:                                       ; preds = %if.then190
  store i32 1, i32* @forcedwin, align 4
  %192 = load i32* %l, align 4
  %idxprom246 = sext i32 %192 to i64
  %193 = load %struct.node** %root, align 8
  %bitcast637 = bitcast %struct.node** %root to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast637, i8** %base.alloca638, i8** %bound.alloca639)
  %base.load640 = load i8** %base.alloca638
  %bound.load641 = load i8** %bound.alloca639
  %children247 = getelementptr inbounds %struct.node* %193, i32 0, i32 6
  %194 = load %struct.node*** %children247, align 8
  %bitcast642 = bitcast %struct.node*** %children247 to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast642, i8** %base.alloca643, i8** %bound.alloca644)
  %base.load645 = load i8** %base.alloca643
  %bound.load646 = load i8** %bound.alloca644
  %arrayidx248 = getelementptr inbounds %struct.node** %194, i64 %idxprom246
  %195 = load %struct.node** %arrayidx248, align 8
  %bitcast647 = bitcast %struct.node** %arrayidx248 to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast647, i8** %base.alloca648, i8** %bound.alloca649)
  %base.load650 = load i8** %base.alloca648
  %bound.load651 = load i8** %bound.alloca649
  %move249 = getelementptr inbounds %struct.node* %195, i32 0, i32 8
  %196 = bitcast %struct.move_s* %move249 to i8*
  call void @__softboundcets_memcopy_check(i8* bitcast (%struct.move_s* @pn_move to i8*), i8* %196, i64 24, i8* bitcast (%struct.move_s* @pn_move to i8*), i8* bitcast (%struct.move_s* getelementptr inbounds (%struct.move_s* @pn_move, i32 1) to i8*), i8* %base.load650, i8* %bound.load651)
  call void @__softboundcets_copy_metadata(i8* bitcast (%struct.move_s* @pn_move to i8*), i8* %196, i64 24)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* bitcast (%struct.move_s* @pn_move to i8*), i8* %196, i64 24, i32 4, i1 false)
  store float 1.000000e+08, float* %bdp, align 4
  br label %if.end250

if.end250:                                        ; preds = %if.else245, %if.end244
  %197 = load i32* %l, align 4
  %inc251 = add nsw i32 %197, 1
  store i32 %inc251, i32* %l, align 4
  br label %if.end252

if.end252:                                        ; preds = %if.end250, %for.body186
  br label %for.inc253

for.inc253:                                       ; preds = %if.end252
  %198 = load i32* %i, align 4
  %inc254 = add nsw i32 %198, 1
  store i32 %inc254, i32* %i, align 4
  br label %for.cond183

for.end255:                                       ; preds = %for.cond183
  br label %if.end256

if.end256:                                        ; preds = %for.end255, %while.end180
  %arraydecay257 = getelementptr inbounds [8 x i8]* %output, i32 0, i32 0
  %199 = bitcast %struct.move_s* %tmp to i8*
  call void @__softboundcets_memcopy_check(i8* %199, i8* bitcast (%struct.move_s* @pn_move to i8*), i64 24, i8* %bitcast381, i8* %bitcast383, i8* bitcast (%struct.move_s* @pn_move to i8*), i8* bitcast (%struct.move_s* getelementptr inbounds (%struct.move_s* @pn_move, i32 1) to i8*))
  call void @__softboundcets_copy_metadata(i8* %199, i8* bitcast (%struct.move_s* @pn_move to i8*), i64 24)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %199, i8* bitcast (%struct.move_s* @pn_move to i8*), i64 24, i32 4, i1 false)
  call void @__softboundcets_allocate_shadow_stack_space(i32 3)
  call void @__softboundcets_store_base_shadow_stack(i8* %bitcast381, i32 1)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bitcast383, i32 1)
  call void @__softboundcets_store_base_shadow_stack(i8* %bitcast365, i32 2)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bitcast367, i32 2)
  call void @comp_to_san(%struct.move_s* byval align 8 %tmp, i8* %arraydecay257)
  call void @__softboundcets_deallocate_shadow_stack_space()
  %200 = load i32* @xb_mode, align 4
  %tobool258 = icmp ne i32 %200, 0
  br i1 %tobool258, label %land.lhs.true259, label %if.end265

land.lhs.true259:                                 ; preds = %if.end256
  %201 = load i32* @post, align 4
  %tobool260 = icmp ne i32 %201, 0
  br i1 %tobool260, label %if.then261, label %if.end265

if.then261:                                       ; preds = %land.lhs.true259
  %202 = load %struct.node** %root, align 8
  %bitcast480 = bitcast %struct.node** %root to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast480, i8** %base.alloca481, i8** %bound.alloca482)
  %base.load483 = load i8** %base.alloca481
  %bound.load484 = load i8** %bound.alloca482
  %proof262 = getelementptr inbounds %struct.node* %202, i32 0, i32 4
  %203 = load i32* %proof262, align 4
  %204 = load %struct.node** %root, align 8
  %bitcast485 = bitcast %struct.node** %root to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast485, i8** %base.alloca486, i8** %bound.alloca487)
  %base.load488 = load i8** %base.alloca486
  %bound.load489 = load i8** %bound.alloca487
  %disproof263 = getelementptr inbounds %struct.node* %204, i32 0, i32 5
  %205 = load i32* %disproof263, align 4
  %206 = load i32* %altlosers, align 4
  %207 = load i32* @maxply, align 4
  %208 = load i32* %firsts, align 4
  %209 = load i32* %alternates, align 4
  %call264 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([94 x i8]* @.str286, i32 0, i32 0), i32 %203, i32 %205, i32 %206, i32 %207, i32 %208, i32 %209)
  br label %if.end265

if.end265:                                        ; preds = %if.then261, %land.lhs.true259, %if.end256
  %210 = load i32* %altlosers, align 4
  %211 = load i32* %legal, align 4
  %sub266 = sub nsw i32 %211, 1
  %cmp267 = icmp eq i32 %210, %sub266
  br i1 %cmp267, label %if.then269, label %if.end289

if.then269:                                       ; preds = %if.end265
  %call270 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([30 x i8]* @.str387, i32 0, i32 0))
  store i32 0, i32* %i, align 4
  br label %for.cond271

for.cond271:                                      ; preds = %for.inc286, %if.then269
  %212 = load i32* %i, align 4
  %213 = load i32* %num_moves, align 4
  %cmp272 = icmp slt i32 %212, %213
  br i1 %cmp272, label %for.body274, label %for.end288

for.body274:                                      ; preds = %for.cond271
  %214 = load i32* %i, align 4
  %idxprom275 = sext i32 %214 to i64
  %bitcast652 = bitcast [300 x i32]* @rootlosers to i8*
  %bitcast653 = bitcast [300 x i32]* getelementptr inbounds ([300 x i32]* @rootlosers, i32 1) to i8*
  %arrayidx276 = getelementptr inbounds [300 x i32]* @rootlosers, i32 0, i64 %idxprom275
  %215 = load i32* %arrayidx276, align 4
  %tobool277 = icmp ne i32 %215, 0
  br i1 %tobool277, label %if.end285, label %land.lhs.true278

land.lhs.true278:                                 ; preds = %for.body274
  %216 = load i32* %i, align 4
  %idxprom279 = sext i32 %216 to i64
  %arrayidx280 = getelementptr inbounds [512 x i32]* %islegal, i32 0, i64 %idxprom279
  %217 = load i32* %arrayidx280, align 4
  %tobool281 = icmp ne i32 %217, 0
  br i1 %tobool281, label %if.then282, label %if.end285

if.then282:                                       ; preds = %land.lhs.true278
  store i32 1, i32* @forcedwin, align 4
  %218 = load i32* %i, align 4
  %idxprom283 = sext i32 %218 to i64
  %arrayidx284 = getelementptr inbounds [512 x %struct.move_s]* %moves, i32 0, i64 %idxprom283
  %219 = bitcast %struct.move_s* %arrayidx284 to i8*
  call void @__softboundcets_memcopy_check(i8* bitcast (%struct.move_s* @pn_move to i8*), i8* %219, i64 24, i8* bitcast (%struct.move_s* @pn_move to i8*), i8* bitcast (%struct.move_s* getelementptr inbounds (%struct.move_s* @pn_move, i32 1) to i8*), i8* %bitcast, i8* %bitcast295)
  call void @__softboundcets_copy_metadata(i8* bitcast (%struct.move_s* @pn_move to i8*), i8* %219, i64 24)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* bitcast (%struct.move_s* @pn_move to i8*), i8* %219, i64 24, i32 4, i1 false)
  br label %for.end288

if.end285:                                        ; preds = %land.lhs.true278, %for.body274
  br label %for.inc286

for.inc286:                                       ; preds = %if.end285
  %220 = load i32* %i, align 4
  %inc287 = add nsw i32 %220, 1
  store i32 %inc287, i32* %i, align 4
  br label %for.cond271

for.end288:                                       ; preds = %if.then282, %for.cond271
  br label %if.end289

if.end289:                                        ; preds = %for.end288, %if.end265
  %221 = load i32* %altlosers, align 4
  %222 = load i32* %legal, align 4
  %cmp290 = icmp eq i32 %221, %222
  br i1 %cmp290, label %if.then292, label %if.end293

if.then292:                                       ; preds = %if.end289
  store i32 1, i32* @alllosers, align 4
  br label %if.end293

if.end293:                                        ; preds = %if.then292, %if.end289
  call void @Xfree()
  %223 = load i8** @membuff, align 8
  %bitcast560 = bitcast i8** @membuff to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast560, i8** %base.alloca561, i8** %bound.alloca562)
  %base.load563 = load i8** %base.alloca561
  %bound.load564 = load i8** %bound.alloca562
  call void @__softboundcets_allocate_shadow_stack_space(i32 2)
  call void @__softboundcets_store_base_shadow_stack(i8* %base.load563, i32 1)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bound.load564, i32 1)
  call void @softboundcets_free(i8* %223) #1
  call void @__softboundcets_deallocate_shadow_stack_space()
  %224 = load %struct.node** %root, align 8
  %bitcast565 = bitcast %struct.node** %root to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast565, i8** %base.alloca566, i8** %bound.alloca567)
  %base.load568 = load i8** %base.alloca566
  %bound.load569 = load i8** %bound.alloca567
  %225 = bitcast %struct.node* %224 to i8*
  call void @__softboundcets_allocate_shadow_stack_space(i32 2)
  call void @__softboundcets_store_base_shadow_stack(i8* %base.load568, i32 1)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bound.load569, i32 1)
  call void @softboundcets_free(i8* %225) #1
  call void @__softboundcets_deallocate_shadow_stack_space()
  br label %return

return:                                           ; preds = %if.end293, %if.then27, %if.then15
  ret void
}

declare i8* @softboundcets_calloc(i64, i64)

; Function Attrs: nounwind uwtable
define internal void @proofnumbersearch() #0 {
entry:
  %base.alloca591 = alloca i8*
  %bound.alloca592 = alloca i8*
  %base.alloca586 = alloca i8*
  %bound.alloca587 = alloca i8*
  %base.alloca581 = alloca i8*
  %bound.alloca582 = alloca i8*
  %base.alloca576 = alloca i8*
  %bound.alloca577 = alloca i8*
  %base.alloca571 = alloca i8*
  %bound.alloca572 = alloca i8*
  %base.alloca566 = alloca i8*
  %bound.alloca567 = alloca i8*
  %base.alloca561 = alloca i8*
  %bound.alloca562 = alloca i8*
  %base.alloca556 = alloca i8*
  %bound.alloca557 = alloca i8*
  %base.alloca551 = alloca i8*
  %bound.alloca552 = alloca i8*
  %base.alloca546 = alloca i8*
  %bound.alloca547 = alloca i8*
  %base.alloca541 = alloca i8*
  %bound.alloca542 = alloca i8*
  %base.alloca536 = alloca i8*
  %bound.alloca537 = alloca i8*
  %base.alloca531 = alloca i8*
  %bound.alloca532 = alloca i8*
  %base.alloca526 = alloca i8*
  %bound.alloca527 = alloca i8*
  %base.alloca521 = alloca i8*
  %bound.alloca522 = alloca i8*
  %base.alloca516 = alloca i8*
  %bound.alloca517 = alloca i8*
  %base.alloca511 = alloca i8*
  %bound.alloca512 = alloca i8*
  %base.alloca506 = alloca i8*
  %bound.alloca507 = alloca i8*
  %base.alloca501 = alloca i8*
  %bound.alloca502 = alloca i8*
  %base.alloca496 = alloca i8*
  %bound.alloca497 = alloca i8*
  %base.alloca491 = alloca i8*
  %bound.alloca492 = alloca i8*
  %base.alloca486 = alloca i8*
  %bound.alloca487 = alloca i8*
  %base.alloca481 = alloca i8*
  %bound.alloca482 = alloca i8*
  %base.alloca476 = alloca i8*
  %bound.alloca477 = alloca i8*
  %base.alloca471 = alloca i8*
  %bound.alloca472 = alloca i8*
  %base.alloca466 = alloca i8*
  %bound.alloca467 = alloca i8*
  %base.alloca461 = alloca i8*
  %bound.alloca462 = alloca i8*
  %base.alloca456 = alloca i8*
  %bound.alloca457 = alloca i8*
  %base.alloca451 = alloca i8*
  %bound.alloca452 = alloca i8*
  %base.alloca446 = alloca i8*
  %bound.alloca447 = alloca i8*
  %base.alloca441 = alloca i8*
  %bound.alloca442 = alloca i8*
  %base.alloca436 = alloca i8*
  %bound.alloca437 = alloca i8*
  %base.alloca431 = alloca i8*
  %bound.alloca432 = alloca i8*
  %base.alloca426 = alloca i8*
  %bound.alloca427 = alloca i8*
  %base.alloca421 = alloca i8*
  %bound.alloca422 = alloca i8*
  %base.alloca416 = alloca i8*
  %bound.alloca417 = alloca i8*
  %base.alloca411 = alloca i8*
  %bound.alloca412 = alloca i8*
  %base.alloca406 = alloca i8*
  %bound.alloca407 = alloca i8*
  %base.alloca401 = alloca i8*
  %bound.alloca402 = alloca i8*
  %base.alloca396 = alloca i8*
  %bound.alloca397 = alloca i8*
  %base.alloca391 = alloca i8*
  %bound.alloca392 = alloca i8*
  %base.alloca386 = alloca i8*
  %bound.alloca387 = alloca i8*
  %base.alloca381 = alloca i8*
  %bound.alloca382 = alloca i8*
  %base.alloca376 = alloca i8*
  %bound.alloca377 = alloca i8*
  %base.alloca371 = alloca i8*
  %bound.alloca372 = alloca i8*
  %base.alloca366 = alloca i8*
  %bound.alloca367 = alloca i8*
  %base.alloca361 = alloca i8*
  %bound.alloca362 = alloca i8*
  %base.alloca356 = alloca i8*
  %bound.alloca357 = alloca i8*
  %base.alloca351 = alloca i8*
  %bound.alloca352 = alloca i8*
  %base.alloca346 = alloca i8*
  %bound.alloca347 = alloca i8*
  %base.alloca341 = alloca i8*
  %bound.alloca342 = alloca i8*
  %base.alloca336 = alloca i8*
  %bound.alloca337 = alloca i8*
  %base.alloca331 = alloca i8*
  %bound.alloca332 = alloca i8*
  %base.alloca326 = alloca i8*
  %bound.alloca327 = alloca i8*
  %base.alloca321 = alloca i8*
  %bound.alloca322 = alloca i8*
  %base.alloca316 = alloca i8*
  %bound.alloca317 = alloca i8*
  %base.alloca311 = alloca i8*
  %bound.alloca312 = alloca i8*
  %base.alloca306 = alloca i8*
  %bound.alloca307 = alloca i8*
  %base.alloca301 = alloca i8*
  %bound.alloca302 = alloca i8*
  %base.alloca296 = alloca i8*
  %bound.alloca297 = alloca i8*
  %base.alloca291 = alloca i8*
  %bound.alloca292 = alloca i8*
  %base.alloca286 = alloca i8*
  %bound.alloca287 = alloca i8*
  %base.alloca281 = alloca i8*
  %bound.alloca282 = alloca i8*
  %base.alloca276 = alloca i8*
  %bound.alloca277 = alloca i8*
  %base.alloca271 = alloca i8*
  %bound.alloca272 = alloca i8*
  %base.alloca266 = alloca i8*
  %bound.alloca267 = alloca i8*
  %base.alloca261 = alloca i8*
  %bound.alloca262 = alloca i8*
  %base.alloca256 = alloca i8*
  %bound.alloca257 = alloca i8*
  %base.alloca251 = alloca i8*
  %bound.alloca252 = alloca i8*
  %base.alloca246 = alloca i8*
  %bound.alloca247 = alloca i8*
  %base.alloca = alloca i8*
  %bound.alloca = alloca i8*
  %root = alloca %struct.node*, align 8
  %root206 = bitcast %struct.node** %root to %struct.node**
  %bitcast = bitcast %struct.node** %root to i8*
  %mtmp = getelementptr %struct.node** %root206, i32 1
  %bitcast207 = bitcast %struct.node** %mtmp to i8*
  %mostproving = alloca %struct.node*, align 8
  %mostproving208 = bitcast %struct.node** %mostproving to %struct.node**
  %bitcast209 = bitcast %struct.node** %mostproving to i8*
  %mtmp210 = getelementptr %struct.node** %mostproving208, i32 1
  %bitcast211 = bitcast %struct.node** %mtmp210 to i8*
  %currentnode = alloca %struct.node*, align 8
  %currentnode212 = bitcast %struct.node** %currentnode to %struct.node**
  %bitcast213 = bitcast %struct.node** %currentnode to i8*
  %mtmp214 = getelementptr %struct.node** %currentnode212, i32 1
  %bitcast215 = bitcast %struct.node** %mtmp214 to i8*
  %xstart_time = alloca i64, align 8
  %xstart_time216 = bitcast i64* %xstart_time to i64*
  %bitcast217 = bitcast i64* %xstart_time to i8*
  %mtmp218 = getelementptr i64* %xstart_time216, i32 1
  %bitcast219 = bitcast i64* %mtmp218 to i8*
  %output = alloca [8192 x i8], align 16
  %output220 = bitcast [8192 x i8]* %output to [8192 x i8]*
  %bitcast221 = bitcast [8192 x i8]* %output to i8*
  %mtmp222 = getelementptr [8192 x i8]* %output220, i32 1
  %bitcast223 = bitcast [8192 x i8]* %mtmp222 to i8*
  %PV = alloca [8192 x i8], align 16
  %PV224 = bitcast [8192 x i8]* %PV to [8192 x i8]*
  %bitcast225 = bitcast [8192 x i8]* %PV to i8*
  %mtmp226 = getelementptr [8192 x i8]* %PV224, i32 1
  %bitcast227 = bitcast [8192 x i8]* %mtmp226 to i8*
  %i = alloca i32, align 4
  %i228 = bitcast i32* %i to i32*
  %bitcast229 = bitcast i32* %i to i8*
  %mtmp230 = getelementptr i32* %i228, i32 1
  %bitcast231 = bitcast i32* %mtmp230 to i8*
  %bdp = alloca float, align 4
  %bdp232 = bitcast float* %bdp to float*
  %bitcast233 = bitcast float* %bdp to i8*
  %mtmp234 = getelementptr float* %bdp232, i32 1
  %bitcast235 = bitcast float* %mtmp234 to i8*
  %oldply = alloca i32, align 4
  %oldply236 = bitcast i32* %oldply to i32*
  %bitcast237 = bitcast i32* %oldply to i8*
  %mtmp238 = getelementptr i32* %oldply236, i32 1
  %bitcast239 = bitcast i32* %mtmp238 to i8*
  %tmp = alloca %struct.move_s, align 8
  %tmp240 = bitcast %struct.move_s* %tmp to %struct.move_s*
  %bitcast241 = bitcast %struct.move_s* %tmp to i8*
  %mtmp242 = getelementptr %struct.move_s* %tmp240, i32 1
  %bitcast243 = bitcast %struct.move_s* %mtmp242 to i8*
  store i32 1, i32* @nodecount, align 4
  store i32 0, i32* @iters, align 4
  store i32 0, i32* @frees, align 4
  store i32 1, i32* @ply, align 4
  store i32 0, i32* @maxply, align 4
  store i32 0, i32* @forwards, align 4
  %0 = load i32* @hash, align 4
  %1 = load i32* @move_number, align 4
  %2 = load i32* @ply, align 4
  %add = add nsw i32 %1, %2
  %sub = sub nsw i32 %add, 1
  %idxprom = sext i32 %sub to i64
  %arrayidx = getelementptr inbounds [600 x i32]* @hash_history, i32 0, i64 %idxprom
  store i32 %0, i32* %arrayidx, align 4
  %3 = load i32* @white_to_move, align 4
  %tobool = icmp ne i32 %3, 0
  %cond = select i1 %tobool, i32 0, i32 1
  store i32 %cond, i32* @root_to_move, align 4
  %call = call i64 @rtime()
  store i64 %call, i64* %xstart_time, align 8
  call void @__softboundcets_allocate_shadow_stack_space(i32 1)
  %call1 = call noalias i8* @softboundcets_calloc(i64 1, i64 56) #1
  %4 = call i8* @__softboundcets_load_base_shadow_stack(i32 0)
  %5 = call i8* @__softboundcets_load_bound_shadow_stack(i32 0)
  call void @__softboundcets_deallocate_shadow_stack_space()
  %6 = bitcast i8* %call1 to %struct.node*
  store %struct.node* %6, %struct.node** %root, align 8
  %bitcast595 = bitcast %struct.node** %root to i8*
  call void @__softboundcets_metadata_store(i8* %bitcast595, i8* %4, i8* %5)
  %7 = load i32* @PBSize, align 4
  %conv = sext i32 %7 to i64
  call void @__softboundcets_allocate_shadow_stack_space(i32 1)
  %call2 = call noalias i8* @softboundcets_calloc(i64 %conv, i64 56) #1
  %8 = call i8* @__softboundcets_load_base_shadow_stack(i32 0)
  %9 = call i8* @__softboundcets_load_bound_shadow_stack(i32 0)
  call void @__softboundcets_deallocate_shadow_stack_space()
  store i8* %call2, i8** @membuff, align 8
  %bitcast596 = bitcast i8** @membuff to i8*
  call void @__softboundcets_metadata_store(i8* %bitcast596, i8* %8, i8* %9)
  %10 = load %struct.node** %root, align 8
  %bitcast244 = bitcast %struct.node** %root to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast244, i8** %base.alloca, i8** %bound.alloca)
  %base.load = load i8** %base.alloca
  %bound.load = load i8** %bound.alloca
  call void @__softboundcets_allocate_shadow_stack_space(i32 2)
  call void @__softboundcets_store_base_shadow_stack(i8* %base.load, i32 1)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bound.load, i32 1)
  call void @pn_eval(%struct.node* %10)
  call void @__softboundcets_deallocate_shadow_stack_space()
  %11 = load %struct.node** %root, align 8
  %bitcast245 = bitcast %struct.node** %root to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast245, i8** %base.alloca246, i8** %bound.alloca247)
  %base.load248 = load i8** %base.alloca246
  %bound.load249 = load i8** %bound.alloca247
  %value = getelementptr inbounds %struct.node* %11, i32 0, i32 0
  %12 = load i8* %value, align 1
  %conv3 = zext i8 %12 to i32
  %cmp = icmp eq i32 %conv3, 0
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  call void @__softboundcets_memcopy_check(i8* bitcast (%struct.move_s* @pn_move to i8*), i8* bitcast (%struct.move_s* @dummy to i8*), i64 24, i8* bitcast (%struct.move_s* @pn_move to i8*), i8* bitcast (%struct.move_s* getelementptr inbounds (%struct.move_s* @pn_move, i32 1) to i8*), i8* null, i8* inttoptr (i64 281474976710656 to i8*))
  call void @__softboundcets_copy_metadata(i8* bitcast (%struct.move_s* @pn_move to i8*), i8* bitcast (%struct.move_s* @dummy to i8*), i64 24)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* bitcast (%struct.move_s* @pn_move to i8*), i8* bitcast (%struct.move_s* @dummy to i8*), i64 24, i32 4, i1 false)
  call void @Xfree()
  %13 = load %struct.node** %root, align 8
  %bitcast250 = bitcast %struct.node** %root to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast250, i8** %base.alloca251, i8** %bound.alloca252)
  %base.load253 = load i8** %base.alloca251
  %bound.load254 = load i8** %bound.alloca252
  %14 = bitcast %struct.node* %13 to i8*
  call void @__softboundcets_allocate_shadow_stack_space(i32 2)
  call void @__softboundcets_store_base_shadow_stack(i8* %base.load253, i32 1)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bound.load254, i32 1)
  call void @softboundcets_free(i8* %14) #1
  call void @__softboundcets_deallocate_shadow_stack_space()
  %15 = load i8** @membuff, align 8
  %bitcast255 = bitcast i8** @membuff to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast255, i8** %base.alloca256, i8** %bound.alloca257)
  %base.load258 = load i8** %base.alloca256
  %bound.load259 = load i8** %bound.alloca257
  call void @__softboundcets_allocate_shadow_stack_space(i32 2)
  call void @__softboundcets_store_base_shadow_stack(i8* %base.load258, i32 1)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bound.load259, i32 1)
  call void @softboundcets_free(i8* %15) #1
  call void @__softboundcets_deallocate_shadow_stack_space()
  br label %return

if.end:                                           ; preds = %entry
  %16 = load %struct.node** %root, align 8
  %bitcast260 = bitcast %struct.node** %root to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast260, i8** %base.alloca261, i8** %bound.alloca262)
  %base.load263 = load i8** %base.alloca261
  %bound.load264 = load i8** %bound.alloca262
  call void @__softboundcets_allocate_shadow_stack_space(i32 2)
  call void @__softboundcets_store_base_shadow_stack(i8* %base.load263, i32 1)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bound.load264, i32 1)
  call void @set_proof_and_disproof_numbers(%struct.node* %16)
  call void @__softboundcets_deallocate_shadow_stack_space()
  %17 = load %struct.node** %root, align 8
  %bitcast265 = bitcast %struct.node** %root to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast265, i8** %base.alloca266, i8** %bound.alloca267)
  %base.load268 = load i8** %base.alloca266
  %bound.load269 = load i8** %bound.alloca267
  store %struct.node* %17, %struct.node** %currentnode, align 8
  %bitcast597 = bitcast %struct.node** %currentnode to i8*
  call void @__softboundcets_metadata_store(i8* %bitcast597, i8* %base.load268, i8* %bound.load269)
  br label %while.cond

while.cond:                                       ; preds = %if.end27, %if.end
  %18 = load %struct.node** %root, align 8
  %bitcast270 = bitcast %struct.node** %root to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast270, i8** %base.alloca271, i8** %bound.alloca272)
  %base.load273 = load i8** %base.alloca271
  %bound.load274 = load i8** %bound.alloca272
  %proof = getelementptr inbounds %struct.node* %18, i32 0, i32 4
  %19 = load i32* %proof, align 4
  %cmp5 = icmp ne i32 %19, 0
  br i1 %cmp5, label %land.lhs.true, label %land.end

land.lhs.true:                                    ; preds = %while.cond
  %20 = load %struct.node** %root, align 8
  %bitcast275 = bitcast %struct.node** %root to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast275, i8** %base.alloca276, i8** %bound.alloca277)
  %base.load278 = load i8** %base.alloca276
  %bound.load279 = load i8** %bound.alloca277
  %disproof = getelementptr inbounds %struct.node* %20, i32 0, i32 5
  %21 = load i32* %disproof, align 4
  %cmp7 = icmp ne i32 %21, 0
  br i1 %cmp7, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %land.lhs.true
  %22 = load i32* @bufftop, align 4
  %conv9 = zext i32 %22 to i64
  %23 = load i32* @PBSize, align 4
  %sub10 = sub nsw i32 %23, 10000
  %conv11 = sext i32 %sub10 to i64
  %mul = mul i64 %conv11, 56
  %cmp12 = icmp ult i64 %conv9, %mul
  br label %land.end

land.end:                                         ; preds = %land.rhs, %land.lhs.true, %while.cond
  %24 = phi i1 [ false, %land.lhs.true ], [ false, %while.cond ], [ %cmp12, %land.rhs ]
  br i1 %24, label %while.body, label %while.end

while.body:                                       ; preds = %land.end
  %25 = load %struct.node** %currentnode, align 8
  %bitcast280 = bitcast %struct.node** %currentnode to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast280, i8** %base.alloca281, i8** %bound.alloca282)
  %base.load283 = load i8** %base.alloca281
  %bound.load284 = load i8** %bound.alloca282
  call void @__softboundcets_allocate_shadow_stack_space(i32 2)
  call void @__softboundcets_store_base_shadow_stack(i8* %base.load283, i32 1)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bound.load284, i32 1)
  %call14 = call %struct.node* @select_most_proving(%struct.node* %25)
  %26 = call i8* @__softboundcets_load_base_shadow_stack(i32 0)
  %27 = call i8* @__softboundcets_load_bound_shadow_stack(i32 0)
  call void @__softboundcets_deallocate_shadow_stack_space()
  store %struct.node* %call14, %struct.node** %mostproving, align 8
  %bitcast598 = bitcast %struct.node** %mostproving to i8*
  call void @__softboundcets_metadata_store(i8* %bitcast598, i8* %26, i8* %27)
  %28 = load %struct.node** %mostproving, align 8
  %bitcast285 = bitcast %struct.node** %mostproving to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast285, i8** %base.alloca286, i8** %bound.alloca287)
  %base.load288 = load i8** %base.alloca286
  %bound.load289 = load i8** %bound.alloca287
  call void @__softboundcets_allocate_shadow_stack_space(i32 2)
  call void @__softboundcets_store_base_shadow_stack(i8* %base.load288, i32 1)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bound.load289, i32 1)
  call void @develop_node(%struct.node* %28)
  call void @__softboundcets_deallocate_shadow_stack_space()
  %29 = load %struct.node** %mostproving, align 8
  %bitcast290 = bitcast %struct.node** %mostproving to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast290, i8** %base.alloca291, i8** %bound.alloca292)
  %base.load293 = load i8** %base.alloca291
  %bound.load294 = load i8** %bound.alloca292
  call void @__softboundcets_allocate_shadow_stack_space(i32 2)
  call void @__softboundcets_store_base_shadow_stack(i8* %base.load293, i32 1)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bound.load294, i32 1)
  call void @update_ancestors(%struct.node* %29)
  call void @__softboundcets_deallocate_shadow_stack_space()
  %30 = load i32* @iters, align 4
  %inc = add nsw i32 %30, 1
  store i32 %inc, i32* @iters, align 4
  %31 = load i32* @iters, align 4
  %rem = srem i32 %31, 32
  %cmp15 = icmp eq i32 %rem, 0
  br i1 %cmp15, label %if.then17, label %if.end27

if.then17:                                        ; preds = %while.body
  %call18 = call i64 @rtime()
  %32 = load i64* %xstart_time, align 8
  %call19 = call i32 @rdifftime(i64 %call18, i64 %32)
  %33 = load i32* @pn_time, align 4
  %cmp20 = icmp sgt i32 %call19, %33
  br i1 %cmp20, label %land.lhs.true22, label %if.end26

land.lhs.true22:                                  ; preds = %if.then17
  %call23 = call i32 @interrupt()
  %tobool24 = icmp ne i32 %call23, 0
  br i1 %tobool24, label %if.end26, label %if.then25

if.then25:                                        ; preds = %land.lhs.true22
  br label %while.end

if.end26:                                         ; preds = %land.lhs.true22, %if.then17
  br label %if.end27

if.end27:                                         ; preds = %if.end26, %while.body
  br label %while.cond

while.end:                                        ; preds = %if.then25, %land.end
  %34 = load %struct.node** %root, align 8
  %bitcast295 = bitcast %struct.node** %root to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast295, i8** %base.alloca296, i8** %bound.alloca297)
  %base.load298 = load i8** %base.alloca296
  %bound.load299 = load i8** %bound.alloca297
  %proof28 = getelementptr inbounds %struct.node* %34, i32 0, i32 4
  %35 = load i32* %proof28, align 4
  %36 = load %struct.node** %root, align 8
  %bitcast300 = bitcast %struct.node** %root to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast300, i8** %base.alloca301, i8** %bound.alloca302)
  %base.load303 = load i8** %base.alloca301
  %bound.load304 = load i8** %bound.alloca302
  %disproof29 = getelementptr inbounds %struct.node* %36, i32 0, i32 5
  %37 = load i32* %disproof29, align 4
  %38 = load i32* @nodecount, align 4
  %39 = load i32* @frees, align 4
  %40 = load i32* @nodecount, align 4
  %conv30 = sext i32 %40 to i64
  %mul31 = mul i64 %conv30, 56
  %conv32 = uitofp i64 %mul31 to float
  %div = fdiv float %conv32, 1.048576e+06
  %conv33 = fpext float %div to double
  %41 = load i32* @iters, align 4
  %42 = load i32* @maxply, align 4
  %call34 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([60 x i8]* @.str488, i32 0, i32 0), i32 %35, i32 %37, i32 %38, i32 %39, double %conv33, i32 %41, i32 %42)
  %43 = load i32* @xb_mode, align 4
  %tobool35 = icmp ne i32 %43, 0
  br i1 %tobool35, label %land.lhs.true36, label %if.end42

land.lhs.true36:                                  ; preds = %while.end
  %44 = load i32* @post, align 4
  %tobool37 = icmp ne i32 %44, 0
  br i1 %tobool37, label %if.then38, label %if.end42

if.then38:                                        ; preds = %land.lhs.true36
  %45 = load %struct.node** %root, align 8
  %bitcast305 = bitcast %struct.node** %root to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast305, i8** %base.alloca306, i8** %bound.alloca307)
  %base.load308 = load i8** %base.alloca306
  %bound.load309 = load i8** %bound.alloca307
  %proof39 = getelementptr inbounds %struct.node* %45, i32 0, i32 4
  %46 = load i32* %proof39, align 4
  %47 = load %struct.node** %root, align 8
  %bitcast310 = bitcast %struct.node** %root to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast310, i8** %base.alloca311, i8** %bound.alloca312)
  %base.load313 = load i8** %base.alloca311
  %bound.load314 = load i8** %bound.alloca312
  %disproof40 = getelementptr inbounds %struct.node* %47, i32 0, i32 5
  %48 = load i32* %disproof40, align 4
  %49 = load i32* @nodecount, align 4
  %50 = load i32* @forwards, align 4
  %51 = load i32* @iters, align 4
  %52 = load i32* @maxply, align 4
  %call41 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([90 x i8]* @.str589, i32 0, i32 0), i32 %46, i32 %48, i32 %49, i32 %50, i32 %51, i32 %52)
  br label %if.end42

if.end42:                                         ; preds = %if.then38, %land.lhs.true36, %while.end
  %53 = load i32* @xb_mode, align 4
  %tobool43 = icmp ne i32 %53, 0
  br i1 %tobool43, label %if.end51, label %if.then44

if.then44:                                        ; preds = %if.end42
  %call45 = call i64 @rtime()
  %54 = load i64* %xstart_time, align 8
  %call46 = call i32 @rdifftime(i64 %call45, i64 %54)
  %conv47 = sitofp i32 %call46 to float
  %conv48 = fpext float %conv47 to double
  %div49 = fdiv double %conv48, 1.000000e+02
  %call50 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([11 x i8]* @.str690, i32 0, i32 0), double %div49)
  br label %if.end51

if.end51:                                         ; preds = %if.then44, %if.end42
  br label %while.cond52

while.cond52:                                     ; preds = %while.body55, %if.end51
  %55 = load %struct.node** %currentnode, align 8
  %bitcast315 = bitcast %struct.node** %currentnode to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast315, i8** %base.alloca316, i8** %bound.alloca317)
  %base.load318 = load i8** %base.alloca316
  %bound.load319 = load i8** %bound.alloca317
  %56 = load %struct.node** %root, align 8
  %bitcast320 = bitcast %struct.node** %root to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast320, i8** %base.alloca321, i8** %bound.alloca322)
  %base.load323 = load i8** %base.alloca321
  %bound.load324 = load i8** %bound.alloca322
  %cmp53 = icmp ne %struct.node* %55, %56
  br i1 %cmp53, label %while.body55, label %while.end56

while.body55:                                     ; preds = %while.cond52
  %57 = load %struct.node** %currentnode, align 8
  %bitcast325 = bitcast %struct.node** %currentnode to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast325, i8** %base.alloca326, i8** %bound.alloca327)
  %base.load328 = load i8** %base.alloca326
  %bound.load329 = load i8** %bound.alloca327
  %move = getelementptr inbounds %struct.node* %57, i32 0, i32 8
  call void @__softboundcets_allocate_shadow_stack_space(i32 2)
  call void @__softboundcets_store_base_shadow_stack(i8* %base.load328, i32 1)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bound.load329, i32 1)
  call void @unmake(%struct.move_s* %move, i32 0)
  call void @__softboundcets_deallocate_shadow_stack_space()
  %58 = load %struct.node** %currentnode, align 8
  %bitcast330 = bitcast %struct.node** %currentnode to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast330, i8** %base.alloca331, i8** %bound.alloca332)
  %base.load333 = load i8** %base.alloca331
  %bound.load334 = load i8** %bound.alloca332
  %parent = getelementptr inbounds %struct.node* %58, i32 0, i32 7
  %59 = load %struct.node** %parent, align 8
  %bitcast335 = bitcast %struct.node** %parent to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast335, i8** %base.alloca336, i8** %bound.alloca337)
  %base.load338 = load i8** %base.alloca336
  %bound.load339 = load i8** %bound.alloca337
  store %struct.node* %59, %struct.node** %currentnode, align 8
  %bitcast599 = bitcast %struct.node** %currentnode to i8*
  call void @__softboundcets_metadata_store(i8* %bitcast599, i8* %base.load338, i8* %bound.load339)
  br label %while.cond52

while.end56:                                      ; preds = %while.cond52
  %60 = load %struct.node** %root, align 8
  %bitcast340 = bitcast %struct.node** %root to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast340, i8** %base.alloca341, i8** %bound.alloca342)
  %base.load343 = load i8** %base.alloca341
  %bound.load344 = load i8** %bound.alloca342
  %proof57 = getelementptr inbounds %struct.node* %60, i32 0, i32 4
  %61 = load i32* %proof57, align 4
  %cmp58 = icmp eq i32 %61, 0
  br i1 %cmp58, label %if.then60, label %if.else147

if.then60:                                        ; preds = %while.end56
  %62 = load %struct.node** %root, align 8
  %bitcast345 = bitcast %struct.node** %root to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast345, i8** %base.alloca346, i8** %bound.alloca347)
  %base.load348 = load i8** %base.alloca346
  %bound.load349 = load i8** %bound.alloca347
  %value61 = getelementptr inbounds %struct.node* %62, i32 0, i32 0
  store i8 1, i8* %value61, align 1
  %call62 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([23 x i8]* @.str791, i32 0, i32 0))
  %call63 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([5 x i8]* @.str892, i32 0, i32 0))
  %63 = bitcast [8192 x i8]* %output to i8*
  call void @__softboundcets_memset_check(i8* %63, i64 8192, i8* %bitcast221, i8* %bitcast223)
  call void @llvm.memset.p0i8.i64(i8* %63, i8 0, i64 8192, i32 16, i1 false)
  %64 = bitcast [8192 x i8]* %PV to i8*
  call void @__softboundcets_memset_check(i8* %64, i64 8192, i8* %bitcast225, i8* %bitcast227)
  call void @llvm.memset.p0i8.i64(i8* %64, i8 0, i64 8192, i32 16, i1 false)
  store i32 1, i32* @ply, align 4
  br label %while.cond64

while.cond64:                                     ; preds = %if.end110, %if.then60
  %65 = load %struct.node** %currentnode, align 8
  %bitcast355 = bitcast %struct.node** %currentnode to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast355, i8** %base.alloca356, i8** %bound.alloca357)
  %base.load358 = load i8** %base.alloca356
  %bound.load359 = load i8** %bound.alloca357
  %expanded = getelementptr inbounds %struct.node* %65, i32 0, i32 2
  %66 = load i8* %expanded, align 1
  %tobool65 = icmp ne i8 %66, 0
  br i1 %tobool65, label %while.body66, label %while.end111

while.body66:                                     ; preds = %while.cond64
  %67 = load i32* @white_to_move, align 4
  %tobool67 = icmp ne i32 %67, 0
  %cond68 = select i1 %tobool67, i32 0, i32 1
  %68 = load i32* @root_to_move, align 4
  %cmp69 = icmp eq i32 %cond68, %68
  br i1 %cmp69, label %if.then71, label %if.else

if.then71:                                        ; preds = %while.body66
  store i32 0, i32* %i, align 4
  br label %while.cond72

while.cond72:                                     ; preds = %while.body79, %if.then71
  %69 = load i32* %i, align 4
  %idxprom73 = sext i32 %69 to i64
  %70 = load %struct.node** %currentnode, align 8
  %bitcast380 = bitcast %struct.node** %currentnode to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast380, i8** %base.alloca381, i8** %bound.alloca382)
  %base.load383 = load i8** %base.alloca381
  %bound.load384 = load i8** %bound.alloca382
  %children = getelementptr inbounds %struct.node* %70, i32 0, i32 6
  %71 = load %struct.node*** %children, align 8
  %bitcast385 = bitcast %struct.node*** %children to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast385, i8** %base.alloca386, i8** %bound.alloca387)
  %base.load388 = load i8** %base.alloca386
  %bound.load389 = load i8** %bound.alloca387
  %arrayidx74 = getelementptr inbounds %struct.node** %71, i64 %idxprom73
  %72 = load %struct.node** %arrayidx74, align 8
  %bitcast390 = bitcast %struct.node** %arrayidx74 to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast390, i8** %base.alloca391, i8** %bound.alloca392)
  %base.load393 = load i8** %base.alloca391
  %bound.load394 = load i8** %bound.alloca392
  %proof75 = getelementptr inbounds %struct.node* %72, i32 0, i32 4
  %73 = load i32* %proof75, align 4
  %74 = load %struct.node** %currentnode, align 8
  %bitcast395 = bitcast %struct.node** %currentnode to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast395, i8** %base.alloca396, i8** %bound.alloca397)
  %base.load398 = load i8** %base.alloca396
  %bound.load399 = load i8** %bound.alloca397
  %proof76 = getelementptr inbounds %struct.node* %74, i32 0, i32 4
  %75 = load i32* %proof76, align 4
  %cmp77 = icmp ne i32 %73, %75
  br i1 %cmp77, label %while.body79, label %while.end81

while.body79:                                     ; preds = %while.cond72
  %76 = load i32* %i, align 4
  %inc80 = add nsw i32 %76, 1
  store i32 %inc80, i32* %i, align 4
  br label %while.cond72

while.end81:                                      ; preds = %while.cond72
  br label %if.end93

if.else:                                          ; preds = %while.body66
  store i32 0, i32* %i, align 4
  br label %while.cond82

while.cond82:                                     ; preds = %while.body90, %if.else
  %77 = load i32* %i, align 4
  %idxprom83 = sext i32 %77 to i64
  %78 = load %struct.node** %currentnode, align 8
  %bitcast400 = bitcast %struct.node** %currentnode to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast400, i8** %base.alloca401, i8** %bound.alloca402)
  %base.load403 = load i8** %base.alloca401
  %bound.load404 = load i8** %bound.alloca402
  %children84 = getelementptr inbounds %struct.node* %78, i32 0, i32 6
  %79 = load %struct.node*** %children84, align 8
  %bitcast405 = bitcast %struct.node*** %children84 to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast405, i8** %base.alloca406, i8** %bound.alloca407)
  %base.load408 = load i8** %base.alloca406
  %bound.load409 = load i8** %bound.alloca407
  %arrayidx85 = getelementptr inbounds %struct.node** %79, i64 %idxprom83
  %80 = load %struct.node** %arrayidx85, align 8
  %bitcast410 = bitcast %struct.node** %arrayidx85 to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast410, i8** %base.alloca411, i8** %bound.alloca412)
  %base.load413 = load i8** %base.alloca411
  %bound.load414 = load i8** %bound.alloca412
  %disproof86 = getelementptr inbounds %struct.node* %80, i32 0, i32 5
  %81 = load i32* %disproof86, align 4
  %82 = load %struct.node** %currentnode, align 8
  %bitcast415 = bitcast %struct.node** %currentnode to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast415, i8** %base.alloca416, i8** %bound.alloca417)
  %base.load418 = load i8** %base.alloca416
  %bound.load419 = load i8** %bound.alloca417
  %disproof87 = getelementptr inbounds %struct.node* %82, i32 0, i32 5
  %83 = load i32* %disproof87, align 4
  %cmp88 = icmp ne i32 %81, %83
  br i1 %cmp88, label %while.body90, label %while.end92

while.body90:                                     ; preds = %while.cond82
  %84 = load i32* %i, align 4
  %inc91 = add nsw i32 %84, 1
  store i32 %inc91, i32* %i, align 4
  br label %while.cond82

while.end92:                                      ; preds = %while.cond82
  br label %if.end93

if.end93:                                         ; preds = %while.end92, %while.end81
  %85 = load i32* %i, align 4
  %idxprom94 = sext i32 %85 to i64
  %86 = load %struct.node** %currentnode, align 8
  %bitcast465 = bitcast %struct.node** %currentnode to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast465, i8** %base.alloca466, i8** %bound.alloca467)
  %base.load468 = load i8** %base.alloca466
  %bound.load469 = load i8** %bound.alloca467
  %children95 = getelementptr inbounds %struct.node* %86, i32 0, i32 6
  %87 = load %struct.node*** %children95, align 8
  %bitcast470 = bitcast %struct.node*** %children95 to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast470, i8** %base.alloca471, i8** %bound.alloca472)
  %base.load473 = load i8** %base.alloca471
  %bound.load474 = load i8** %bound.alloca472
  %arrayidx96 = getelementptr inbounds %struct.node** %87, i64 %idxprom94
  %88 = load %struct.node** %arrayidx96, align 8
  %bitcast475 = bitcast %struct.node** %arrayidx96 to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast475, i8** %base.alloca476, i8** %bound.alloca477)
  %base.load478 = load i8** %base.alloca476
  %bound.load479 = load i8** %bound.alloca477
  store %struct.node* %88, %struct.node** %currentnode, align 8
  %bitcast601 = bitcast %struct.node** %currentnode to i8*
  call void @__softboundcets_metadata_store(i8* %bitcast601, i8* %base.load478, i8* %bound.load479)
  %89 = load %struct.node** %currentnode, align 8
  %bitcast480 = bitcast %struct.node** %currentnode to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast480, i8** %base.alloca481, i8** %bound.alloca482)
  %base.load483 = load i8** %base.alloca481
  %bound.load484 = load i8** %bound.alloca482
  %move97 = getelementptr inbounds %struct.node* %89, i32 0, i32 8
  %arraydecay = getelementptr inbounds [8192 x i8]* %output, i32 0, i32 0
  %90 = bitcast %struct.move_s* %tmp to i8*
  %91 = bitcast %struct.move_s* %move97 to i8*
  call void @__softboundcets_memcopy_check(i8* %90, i8* %91, i64 24, i8* %bitcast241, i8* %bitcast243, i8* %base.load483, i8* %bound.load484)
  call void @__softboundcets_copy_metadata(i8* %90, i8* %91, i64 24)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %90, i8* %91, i64 24, i32 4, i1 false)
  call void @__softboundcets_allocate_shadow_stack_space(i32 3)
  call void @__softboundcets_store_base_shadow_stack(i8* %bitcast241, i32 1)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bitcast243, i32 1)
  call void @__softboundcets_store_base_shadow_stack(i8* %bitcast221, i32 2)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bitcast223, i32 2)
  call void @comp_to_coord(%struct.move_s* byval align 8 %tmp, i8* %arraydecay)
  call void @__softboundcets_deallocate_shadow_stack_space()
  %arraydecay98 = getelementptr inbounds [8192 x i8]* %output, i32 0, i32 0
  %call99 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([4 x i8]* @.str993, i32 0, i32 0), i8* %arraydecay98)
  %arraydecay100 = getelementptr inbounds [8192 x i8]* %PV, i32 0, i32 0
  %arraydecay101 = getelementptr inbounds [8192 x i8]* %output, i32 0, i32 0
  call void @__softboundcets_allocate_shadow_stack_space(i32 3)
  call void @__softboundcets_store_base_shadow_stack(i8* %bitcast225, i32 1)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bitcast227, i32 1)
  call void @__softboundcets_store_base_shadow_stack(i8* %bitcast221, i32 2)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bitcast223, i32 2)
  %call102 = call i8* @softboundcets_strcat(i8* %arraydecay100, i8* %arraydecay101) #1
  %92 = call i8* @__softboundcets_load_base_shadow_stack(i32 0)
  %93 = call i8* @__softboundcets_load_bound_shadow_stack(i32 0)
  call void @__softboundcets_deallocate_shadow_stack_space()
  %arraydecay103 = getelementptr inbounds [8192 x i8]* %PV, i32 0, i32 0
  call void @__softboundcets_allocate_shadow_stack_space(i32 3)
  call void @__softboundcets_store_base_shadow_stack(i8* %bitcast225, i32 1)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bitcast227, i32 1)
  call void @__softboundcets_store_base_shadow_stack(i8* getelementptr inbounds ([2 x i8]* @.str1094, i32 0, i32 0), i32 2)
  call void @__softboundcets_store_bound_shadow_stack(i8* getelementptr inbounds ([2 x i8]* @.str1094, i32 1, i32 0), i32 2)
  %call104 = call i8* @softboundcets_strcat(i8* %arraydecay103, i8* getelementptr inbounds ([2 x i8]* @.str1094, i32 0, i32 0)) #1
  %94 = call i8* @__softboundcets_load_base_shadow_stack(i32 0)
  %95 = call i8* @__softboundcets_load_bound_shadow_stack(i32 0)
  call void @__softboundcets_deallocate_shadow_stack_space()
  %96 = load %struct.node** %currentnode, align 8
  %bitcast485 = bitcast %struct.node** %currentnode to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast485, i8** %base.alloca486, i8** %bound.alloca487)
  %base.load488 = load i8** %base.alloca486
  %bound.load489 = load i8** %bound.alloca487
  %move105 = getelementptr inbounds %struct.node* %96, i32 0, i32 8
  call void @__softboundcets_allocate_shadow_stack_space(i32 2)
  call void @__softboundcets_store_base_shadow_stack(i8* %base.load488, i32 1)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bound.load489, i32 1)
  call void @make(%struct.move_s* %move105, i32 0)
  call void @__softboundcets_deallocate_shadow_stack_space()
  %97 = load i32* @ply, align 4
  %cmp106 = icmp eq i32 %97, 1
  br i1 %cmp106, label %if.then108, label %if.end110

if.then108:                                       ; preds = %if.end93
  %98 = load %struct.node** %currentnode, align 8
  %bitcast540 = bitcast %struct.node** %currentnode to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast540, i8** %base.alloca541, i8** %bound.alloca542)
  %base.load543 = load i8** %base.alloca541
  %bound.load544 = load i8** %bound.alloca542
  %move109 = getelementptr inbounds %struct.node* %98, i32 0, i32 8
  %99 = bitcast %struct.move_s* %move109 to i8*
  call void @__softboundcets_memcopy_check(i8* bitcast (%struct.move_s* @pn_move to i8*), i8* %99, i64 24, i8* bitcast (%struct.move_s* @pn_move to i8*), i8* bitcast (%struct.move_s* getelementptr inbounds (%struct.move_s* @pn_move, i32 1) to i8*), i8* %base.load543, i8* %bound.load544)
  call void @__softboundcets_copy_metadata(i8* bitcast (%struct.move_s* @pn_move to i8*), i8* %99, i64 24)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* bitcast (%struct.move_s* @pn_move to i8*), i8* %99, i64 24, i32 4, i1 false)
  br label %if.end110

if.end110:                                        ; preds = %if.then108, %if.end93
  store i32 1, i32* @forcedwin, align 4
  br label %while.cond64

while.end111:                                     ; preds = %while.cond64
  %100 = load i32* @ply, align 4
  store i32 %100, i32* %oldply, align 4
  br label %while.cond112

while.cond112:                                    ; preds = %while.body115, %while.end111
  %101 = load %struct.node** %currentnode, align 8
  %bitcast370 = bitcast %struct.node** %currentnode to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast370, i8** %base.alloca371, i8** %bound.alloca372)
  %base.load373 = load i8** %base.alloca371
  %bound.load374 = load i8** %bound.alloca372
  %102 = load %struct.node** %root, align 8
  %bitcast375 = bitcast %struct.node** %root to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast375, i8** %base.alloca376, i8** %bound.alloca377)
  %base.load378 = load i8** %base.alloca376
  %bound.load379 = load i8** %bound.alloca377
  %cmp113 = icmp ne %struct.node* %101, %102
  br i1 %cmp113, label %while.body115, label %while.end118

while.body115:                                    ; preds = %while.cond112
  %103 = load %struct.node** %currentnode, align 8
  %bitcast420 = bitcast %struct.node** %currentnode to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast420, i8** %base.alloca421, i8** %bound.alloca422)
  %base.load423 = load i8** %base.alloca421
  %bound.load424 = load i8** %bound.alloca422
  %move116 = getelementptr inbounds %struct.node* %103, i32 0, i32 8
  call void @__softboundcets_allocate_shadow_stack_space(i32 2)
  call void @__softboundcets_store_base_shadow_stack(i8* %base.load423, i32 1)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bound.load424, i32 1)
  call void @unmake(%struct.move_s* %move116, i32 0)
  call void @__softboundcets_deallocate_shadow_stack_space()
  %104 = load %struct.node** %currentnode, align 8
  %bitcast425 = bitcast %struct.node** %currentnode to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast425, i8** %base.alloca426, i8** %bound.alloca427)
  %base.load428 = load i8** %base.alloca426
  %bound.load429 = load i8** %bound.alloca427
  %parent117 = getelementptr inbounds %struct.node* %104, i32 0, i32 7
  %105 = load %struct.node** %parent117, align 8
  %bitcast430 = bitcast %struct.node** %parent117 to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast430, i8** %base.alloca431, i8** %bound.alloca432)
  %base.load433 = load i8** %base.alloca431
  %bound.load434 = load i8** %bound.alloca432
  store %struct.node* %105, %struct.node** %currentnode, align 8
  %bitcast600 = bitcast %struct.node** %currentnode to i8*
  call void @__softboundcets_metadata_store(i8* %bitcast600, i8* %base.load433, i8* %bound.load434)
  br label %while.cond112

while.end118:                                     ; preds = %while.cond112
  %106 = load i32* @kibitzed, align 4
  %tobool119 = icmp ne i32 %106, 0
  br i1 %tobool119, label %if.end127, label %land.lhs.true120

land.lhs.true120:                                 ; preds = %while.end118
  %107 = load i32* @xb_mode, align 4
  %tobool121 = icmp ne i32 %107, 0
  br i1 %tobool121, label %land.lhs.true122, label %if.end127

land.lhs.true122:                                 ; preds = %land.lhs.true120
  %108 = load i32* @post, align 4
  %tobool123 = icmp ne i32 %108, 0
  br i1 %tobool123, label %if.then124, label %if.end127

if.then124:                                       ; preds = %land.lhs.true122
  store i32 1, i32* @kibitzed, align 4
  %109 = load i32* %oldply, align 4
  %div125 = sdiv i32 %109, 2
  %call126 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([41 x i8]* @.str1195, i32 0, i32 0), i32 %div125)
  br label %if.end127

if.end127:                                        ; preds = %if.then124, %land.lhs.true122, %land.lhs.true120, %while.end118
  %110 = load i32* %oldply, align 4
  %cmp128 = icmp eq i32 %110, 1
  br i1 %cmp128, label %land.lhs.true130, label %if.end145

land.lhs.true130:                                 ; preds = %if.end127
  %111 = load %struct.node** %root, align 8
  %bitcast490 = bitcast %struct.node** %root to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast490, i8** %base.alloca491, i8** %bound.alloca492)
  %base.load493 = load i8** %base.alloca491
  %bound.load494 = load i8** %bound.alloca492
  %proof131 = getelementptr inbounds %struct.node* %111, i32 0, i32 4
  %112 = load i32* %proof131, align 4
  %cmp132 = icmp eq i32 %112, 0
  br i1 %cmp132, label %if.then137, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %land.lhs.true130
  %113 = load %struct.node** %root, align 8
  %bitcast545 = bitcast %struct.node** %root to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast545, i8** %base.alloca546, i8** %bound.alloca547)
  %base.load548 = load i8** %base.alloca546
  %bound.load549 = load i8** %bound.alloca547
  %disproof134 = getelementptr inbounds %struct.node* %113, i32 0, i32 5
  %114 = load i32* %disproof134, align 4
  %cmp135 = icmp eq i32 %114, 0
  br i1 %cmp135, label %if.then137, label %if.end145

if.then137:                                       ; preds = %lor.lhs.false, %land.lhs.true130
  %115 = load i32* @root_to_move, align 4
  %cmp138 = icmp eq i32 %115, 0
  br i1 %cmp138, label %if.then140, label %if.else142

if.then140:                                       ; preds = %if.then137
  %call141 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([20 x i8]* @.str1296, i32 0, i32 0))
  store i32 3, i32* @result, align 4
  br label %if.end144

if.else142:                                       ; preds = %if.then137
  %call143 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([20 x i8]* @.str1397, i32 0, i32 0))
  store i32 2, i32* @result, align 4
  br label %if.end144

if.end144:                                        ; preds = %if.else142, %if.then140
  br label %if.end145

if.end145:                                        ; preds = %if.end144, %lor.lhs.false, %if.end127
  %call146 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([2 x i8]* @.str1498, i32 0, i32 0))
  br label %if.end158

if.else147:                                       ; preds = %while.end56
  %116 = load %struct.node** %root, align 8
  %bitcast350 = bitcast %struct.node** %root to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast350, i8** %base.alloca351, i8** %bound.alloca352)
  %base.load353 = load i8** %base.alloca351
  %bound.load354 = load i8** %bound.alloca352
  %disproof148 = getelementptr inbounds %struct.node* %116, i32 0, i32 5
  %117 = load i32* %disproof148, align 4
  %cmp149 = icmp eq i32 %117, 0
  br i1 %cmp149, label %if.then151, label %if.else154

if.then151:                                       ; preds = %if.else147
  %118 = load %struct.node** %root, align 8
  %bitcast360 = bitcast %struct.node** %root to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast360, i8** %base.alloca361, i8** %bound.alloca362)
  %base.load363 = load i8** %base.alloca361
  %bound.load364 = load i8** %bound.alloca362
  %value152 = getelementptr inbounds %struct.node* %118, i32 0, i32 0
  store i8 0, i8* %value152, align 1
  %call153 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([24 x i8]* @.str1599, i32 0, i32 0))
  call void @__softboundcets_memcopy_check(i8* bitcast (%struct.move_s* @pn_move to i8*), i8* bitcast (%struct.move_s* @dummy to i8*), i64 24, i8* bitcast (%struct.move_s* @pn_move to i8*), i8* bitcast (%struct.move_s* getelementptr inbounds (%struct.move_s* @pn_move, i32 1) to i8*), i8* null, i8* inttoptr (i64 281474976710656 to i8*))
  call void @__softboundcets_copy_metadata(i8* bitcast (%struct.move_s* @pn_move to i8*), i8* bitcast (%struct.move_s* @dummy to i8*), i64 24)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* bitcast (%struct.move_s* @pn_move to i8*), i8* bitcast (%struct.move_s* @dummy to i8*), i64 24, i32 4, i1 false)
  br label %if.end157

if.else154:                                       ; preds = %if.else147
  %119 = load %struct.node** %root, align 8
  %bitcast365 = bitcast %struct.node** %root to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast365, i8** %base.alloca366, i8** %bound.alloca367)
  %base.load368 = load i8** %base.alloca366
  %bound.load369 = load i8** %bound.alloca367
  %value155 = getelementptr inbounds %struct.node* %119, i32 0, i32 0
  store i8 2, i8* %value155, align 1
  %call156 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([27 x i8]* @.str16100, i32 0, i32 0))
  call void @__softboundcets_memcopy_check(i8* bitcast (%struct.move_s* @pn_move to i8*), i8* bitcast (%struct.move_s* @dummy to i8*), i64 24, i8* bitcast (%struct.move_s* @pn_move to i8*), i8* bitcast (%struct.move_s* getelementptr inbounds (%struct.move_s* @pn_move, i32 1) to i8*), i8* null, i8* inttoptr (i64 281474976710656 to i8*))
  call void @__softboundcets_copy_metadata(i8* bitcast (%struct.move_s* @pn_move to i8*), i8* bitcast (%struct.move_s* @dummy to i8*), i64 24)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* bitcast (%struct.move_s* @pn_move to i8*), i8* bitcast (%struct.move_s* @dummy to i8*), i64 24, i32 4, i1 false)
  br label %if.end157

if.end157:                                        ; preds = %if.else154, %if.then151
  br label %if.end158

if.end158:                                        ; preds = %if.end157, %if.end145
  store float -1.000000e+00, float* %bdp, align 4
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.end158
  %120 = load i32* %i, align 4
  %121 = load %struct.node** %root, align 8
  %bitcast435 = bitcast %struct.node** %root to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast435, i8** %base.alloca436, i8** %bound.alloca437)
  %base.load438 = load i8** %base.alloca436
  %bound.load439 = load i8** %bound.alloca437
  %num_children = getelementptr inbounds %struct.node* %121, i32 0, i32 1
  %122 = load i8* %num_children, align 1
  %conv159 = zext i8 %122 to i32
  %cmp160 = icmp slt i32 %120, %conv159
  br i1 %cmp160, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %123 = load i32* %i, align 4
  %idxprom162 = sext i32 %123 to i64
  %124 = load %struct.node** %root, align 8
  %bitcast440 = bitcast %struct.node** %root to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast440, i8** %base.alloca441, i8** %bound.alloca442)
  %base.load443 = load i8** %base.alloca441
  %bound.load444 = load i8** %bound.alloca442
  %children163 = getelementptr inbounds %struct.node* %124, i32 0, i32 6
  %125 = load %struct.node*** %children163, align 8
  %bitcast445 = bitcast %struct.node*** %children163 to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast445, i8** %base.alloca446, i8** %bound.alloca447)
  %base.load448 = load i8** %base.alloca446
  %bound.load449 = load i8** %bound.alloca447
  %arrayidx164 = getelementptr inbounds %struct.node** %125, i64 %idxprom162
  %126 = load %struct.node** %arrayidx164, align 8
  %bitcast450 = bitcast %struct.node** %arrayidx164 to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast450, i8** %base.alloca451, i8** %bound.alloca452)
  %base.load453 = load i8** %base.alloca451
  %bound.load454 = load i8** %bound.alloca452
  %proof165 = getelementptr inbounds %struct.node* %126, i32 0, i32 4
  %127 = load i32* %proof165, align 4
  %cmp166 = icmp ne i32 %127, 0
  br i1 %cmp166, label %if.then168, label %if.else199

if.then168:                                       ; preds = %for.body
  %128 = load i32* %i, align 4
  %idxprom169 = sext i32 %128 to i64
  %129 = load %struct.node** %root, align 8
  %bitcast495 = bitcast %struct.node** %root to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast495, i8** %base.alloca496, i8** %bound.alloca497)
  %base.load498 = load i8** %base.alloca496
  %bound.load499 = load i8** %bound.alloca497
  %children170 = getelementptr inbounds %struct.node* %129, i32 0, i32 6
  %130 = load %struct.node*** %children170, align 8
  %bitcast500 = bitcast %struct.node*** %children170 to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast500, i8** %base.alloca501, i8** %bound.alloca502)
  %base.load503 = load i8** %base.alloca501
  %bound.load504 = load i8** %bound.alloca502
  %arrayidx171 = getelementptr inbounds %struct.node** %130, i64 %idxprom169
  %131 = load %struct.node** %arrayidx171, align 8
  %bitcast505 = bitcast %struct.node** %arrayidx171 to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast505, i8** %base.alloca506, i8** %bound.alloca507)
  %base.load508 = load i8** %base.alloca506
  %bound.load509 = load i8** %bound.alloca507
  %disproof172 = getelementptr inbounds %struct.node* %131, i32 0, i32 5
  %132 = load i32* %disproof172, align 4
  %conv173 = sitofp i32 %132 to float
  %133 = load i32* %i, align 4
  %idxprom174 = sext i32 %133 to i64
  %134 = load %struct.node** %root, align 8
  %bitcast510 = bitcast %struct.node** %root to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast510, i8** %base.alloca511, i8** %bound.alloca512)
  %base.load513 = load i8** %base.alloca511
  %bound.load514 = load i8** %bound.alloca512
  %children175 = getelementptr inbounds %struct.node* %134, i32 0, i32 6
  %135 = load %struct.node*** %children175, align 8
  %bitcast515 = bitcast %struct.node*** %children175 to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast515, i8** %base.alloca516, i8** %bound.alloca517)
  %base.load518 = load i8** %base.alloca516
  %bound.load519 = load i8** %bound.alloca517
  %arrayidx176 = getelementptr inbounds %struct.node** %135, i64 %idxprom174
  %136 = load %struct.node** %arrayidx176, align 8
  %bitcast520 = bitcast %struct.node** %arrayidx176 to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast520, i8** %base.alloca521, i8** %bound.alloca522)
  %base.load523 = load i8** %base.alloca521
  %bound.load524 = load i8** %bound.alloca522
  %proof177 = getelementptr inbounds %struct.node* %136, i32 0, i32 4
  %137 = load i32* %proof177, align 4
  %conv178 = sitofp i32 %137 to float
  %div179 = fdiv float %conv173, %conv178
  %138 = load float* %bdp, align 4
  %cmp180 = fcmp ogt float %div179, %138
  br i1 %cmp180, label %if.then182, label %if.end198

if.then182:                                       ; preds = %if.then168
  %139 = load i32* %i, align 4
  %idxprom183 = sext i32 %139 to i64
  %140 = load %struct.node** %root, align 8
  %bitcast550 = bitcast %struct.node** %root to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast550, i8** %base.alloca551, i8** %bound.alloca552)
  %base.load553 = load i8** %base.alloca551
  %bound.load554 = load i8** %bound.alloca552
  %children184 = getelementptr inbounds %struct.node* %140, i32 0, i32 6
  %141 = load %struct.node*** %children184, align 8
  %bitcast555 = bitcast %struct.node*** %children184 to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast555, i8** %base.alloca556, i8** %bound.alloca557)
  %base.load558 = load i8** %base.alloca556
  %bound.load559 = load i8** %bound.alloca557
  %arrayidx185 = getelementptr inbounds %struct.node** %141, i64 %idxprom183
  %142 = load %struct.node** %arrayidx185, align 8
  %bitcast560 = bitcast %struct.node** %arrayidx185 to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast560, i8** %base.alloca561, i8** %bound.alloca562)
  %base.load563 = load i8** %base.alloca561
  %bound.load564 = load i8** %bound.alloca562
  %disproof186 = getelementptr inbounds %struct.node* %142, i32 0, i32 5
  %143 = load i32* %disproof186, align 4
  %conv187 = sitofp i32 %143 to float
  %144 = load i32* %i, align 4
  %idxprom188 = sext i32 %144 to i64
  %145 = load %struct.node** %root, align 8
  %bitcast565 = bitcast %struct.node** %root to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast565, i8** %base.alloca566, i8** %bound.alloca567)
  %base.load568 = load i8** %base.alloca566
  %bound.load569 = load i8** %bound.alloca567
  %children189 = getelementptr inbounds %struct.node* %145, i32 0, i32 6
  %146 = load %struct.node*** %children189, align 8
  %bitcast570 = bitcast %struct.node*** %children189 to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast570, i8** %base.alloca571, i8** %bound.alloca572)
  %base.load573 = load i8** %base.alloca571
  %bound.load574 = load i8** %bound.alloca572
  %arrayidx190 = getelementptr inbounds %struct.node** %146, i64 %idxprom188
  %147 = load %struct.node** %arrayidx190, align 8
  %bitcast575 = bitcast %struct.node** %arrayidx190 to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast575, i8** %base.alloca576, i8** %bound.alloca577)
  %base.load578 = load i8** %base.alloca576
  %bound.load579 = load i8** %bound.alloca577
  %proof191 = getelementptr inbounds %struct.node* %147, i32 0, i32 4
  %148 = load i32* %proof191, align 4
  %conv192 = sitofp i32 %148 to float
  %div193 = fdiv float %conv187, %conv192
  store float %div193, float* %bdp, align 4
  %149 = load i32* %i, align 4
  %idxprom194 = sext i32 %149 to i64
  %150 = load %struct.node** %root, align 8
  %bitcast580 = bitcast %struct.node** %root to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast580, i8** %base.alloca581, i8** %bound.alloca582)
  %base.load583 = load i8** %base.alloca581
  %bound.load584 = load i8** %bound.alloca582
  %children195 = getelementptr inbounds %struct.node* %150, i32 0, i32 6
  %151 = load %struct.node*** %children195, align 8
  %bitcast585 = bitcast %struct.node*** %children195 to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast585, i8** %base.alloca586, i8** %bound.alloca587)
  %base.load588 = load i8** %base.alloca586
  %bound.load589 = load i8** %bound.alloca587
  %arrayidx196 = getelementptr inbounds %struct.node** %151, i64 %idxprom194
  %152 = load %struct.node** %arrayidx196, align 8
  %bitcast590 = bitcast %struct.node** %arrayidx196 to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast590, i8** %base.alloca591, i8** %bound.alloca592)
  %base.load593 = load i8** %base.alloca591
  %bound.load594 = load i8** %bound.alloca592
  %move197 = getelementptr inbounds %struct.node* %152, i32 0, i32 8
  %153 = bitcast %struct.move_s* %move197 to i8*
  call void @__softboundcets_memcopy_check(i8* bitcast (%struct.move_s* @pn_move to i8*), i8* %153, i64 24, i8* bitcast (%struct.move_s* @pn_move to i8*), i8* bitcast (%struct.move_s* getelementptr inbounds (%struct.move_s* @pn_move, i32 1) to i8*), i8* %base.load593, i8* %bound.load594)
  call void @__softboundcets_copy_metadata(i8* bitcast (%struct.move_s* @pn_move to i8*), i8* %153, i64 24)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* bitcast (%struct.move_s* @pn_move to i8*), i8* %153, i64 24, i32 4, i1 false)
  br label %if.end198

if.end198:                                        ; preds = %if.then182, %if.then168
  br label %if.end204

if.else199:                                       ; preds = %for.body
  %154 = load i32* %i, align 4
  %idxprom200 = sext i32 %154 to i64
  %155 = load %struct.node** %root, align 8
  %bitcast525 = bitcast %struct.node** %root to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast525, i8** %base.alloca526, i8** %bound.alloca527)
  %base.load528 = load i8** %base.alloca526
  %bound.load529 = load i8** %bound.alloca527
  %children201 = getelementptr inbounds %struct.node* %155, i32 0, i32 6
  %156 = load %struct.node*** %children201, align 8
  %bitcast530 = bitcast %struct.node*** %children201 to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast530, i8** %base.alloca531, i8** %bound.alloca532)
  %base.load533 = load i8** %base.alloca531
  %bound.load534 = load i8** %bound.alloca532
  %arrayidx202 = getelementptr inbounds %struct.node** %156, i64 %idxprom200
  %157 = load %struct.node** %arrayidx202, align 8
  %bitcast535 = bitcast %struct.node** %arrayidx202 to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast535, i8** %base.alloca536, i8** %bound.alloca537)
  %base.load538 = load i8** %base.alloca536
  %bound.load539 = load i8** %bound.alloca537
  %move203 = getelementptr inbounds %struct.node* %157, i32 0, i32 8
  %158 = bitcast %struct.move_s* %move203 to i8*
  call void @__softboundcets_memcopy_check(i8* bitcast (%struct.move_s* @pn_move to i8*), i8* %158, i64 24, i8* bitcast (%struct.move_s* @pn_move to i8*), i8* bitcast (%struct.move_s* getelementptr inbounds (%struct.move_s* @pn_move, i32 1) to i8*), i8* %base.load538, i8* %bound.load539)
  call void @__softboundcets_copy_metadata(i8* bitcast (%struct.move_s* @pn_move to i8*), i8* %158, i64 24)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* bitcast (%struct.move_s* @pn_move to i8*), i8* %158, i64 24, i32 4, i1 false)
  br label %for.end

if.end204:                                        ; preds = %if.end198
  br label %for.inc

for.inc:                                          ; preds = %if.end204
  %159 = load i32* %i, align 4
  %inc205 = add nsw i32 %159, 1
  store i32 %inc205, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %if.else199, %for.cond
  call void @__softboundcets_memcopy_check(i8* bitcast (%struct.move_s* @pn_saver to i8*), i8* bitcast (%struct.move_s* @pn_move to i8*), i64 24, i8* bitcast (%struct.move_s* @pn_saver to i8*), i8* bitcast (%struct.move_s* getelementptr inbounds (%struct.move_s* @pn_saver, i32 1) to i8*), i8* bitcast (%struct.move_s* @pn_move to i8*), i8* bitcast (%struct.move_s* getelementptr inbounds (%struct.move_s* @pn_move, i32 1) to i8*))
  call void @__softboundcets_copy_metadata(i8* bitcast (%struct.move_s* @pn_saver to i8*), i8* bitcast (%struct.move_s* @pn_move to i8*), i64 24)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* bitcast (%struct.move_s* @pn_saver to i8*), i8* bitcast (%struct.move_s* @pn_move to i8*), i64 24, i32 4, i1 false)
  %160 = load %struct.node** %root, align 8
  %bitcast455 = bitcast %struct.node** %root to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast455, i8** %base.alloca456, i8** %bound.alloca457)
  %base.load458 = load i8** %base.alloca456
  %bound.load459 = load i8** %bound.alloca457
  %161 = bitcast %struct.node* %160 to i8*
  call void @__softboundcets_allocate_shadow_stack_space(i32 2)
  call void @__softboundcets_store_base_shadow_stack(i8* %base.load458, i32 1)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bound.load459, i32 1)
  call void @softboundcets_free(i8* %161) #1
  call void @__softboundcets_deallocate_shadow_stack_space()
  call void @Xfree()
  %162 = load i8** @membuff, align 8
  %bitcast460 = bitcast i8** @membuff to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast460, i8** %base.alloca461, i8** %bound.alloca462)
  %base.load463 = load i8** %base.alloca461
  %bound.load464 = load i8** %bound.alloca462
  call void @__softboundcets_allocate_shadow_stack_space(i32 2)
  call void @__softboundcets_store_base_shadow_stack(i8* %base.load463, i32 1)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bound.load464, i32 1)
  call void @softboundcets_free(i8* %162) #1
  call void @__softboundcets_deallocate_shadow_stack_space()
  br label %return

return:                                           ; preds = %for.end, %if.then
  ret void
}

declare i8* @softboundcets_strcat(i8*, i8*)

; Function Attrs: nounwind uwtable
define internal void @proofnumbercheck(%struct.move_s* noalias sret %agg.result, %struct.move_s* byval align 8 %compmove) #0 {
entry:
  %base.alloca170 = alloca i8*
  %bound.alloca171 = alloca i8*
  %base.alloca165 = alloca i8*
  %bound.alloca166 = alloca i8*
  %base.alloca160 = alloca i8*
  %bound.alloca161 = alloca i8*
  %base.alloca155 = alloca i8*
  %bound.alloca156 = alloca i8*
  %base.alloca150 = alloca i8*
  %bound.alloca151 = alloca i8*
  %base.alloca145 = alloca i8*
  %bound.alloca146 = alloca i8*
  %base.alloca140 = alloca i8*
  %bound.alloca141 = alloca i8*
  %base.alloca135 = alloca i8*
  %bound.alloca136 = alloca i8*
  %base.alloca130 = alloca i8*
  %bound.alloca131 = alloca i8*
  %base.alloca125 = alloca i8*
  %bound.alloca126 = alloca i8*
  %base.alloca120 = alloca i8*
  %bound.alloca121 = alloca i8*
  %base.alloca115 = alloca i8*
  %bound.alloca116 = alloca i8*
  %base.alloca110 = alloca i8*
  %bound.alloca111 = alloca i8*
  %base.alloca105 = alloca i8*
  %bound.alloca106 = alloca i8*
  %base.alloca100 = alloca i8*
  %bound.alloca101 = alloca i8*
  %base.alloca95 = alloca i8*
  %bound.alloca96 = alloca i8*
  %base.alloca90 = alloca i8*
  %bound.alloca91 = alloca i8*
  %base.alloca85 = alloca i8*
  %bound.alloca86 = alloca i8*
  %base.alloca80 = alloca i8*
  %bound.alloca81 = alloca i8*
  %base.alloca75 = alloca i8*
  %bound.alloca76 = alloca i8*
  %base.alloca70 = alloca i8*
  %bound.alloca71 = alloca i8*
  %base.alloca = alloca i8*
  %bound.alloca = alloca i8*
  %0 = call i8* @__softboundcets_load_base_shadow_stack(i32 1)
  %1 = call i8* @__softboundcets_load_bound_shadow_stack(i32 1)
  %root = alloca %struct.node*, align 8
  %root50 = bitcast %struct.node** %root to %struct.node**
  %bitcast = bitcast %struct.node** %root to i8*
  %mtmp = getelementptr %struct.node** %root50, i32 1
  %bitcast51 = bitcast %struct.node** %mtmp to i8*
  %mostproving = alloca %struct.node*, align 8
  %mostproving52 = bitcast %struct.node** %mostproving to %struct.node**
  %bitcast53 = bitcast %struct.node** %mostproving to i8*
  %mtmp54 = getelementptr %struct.node** %mostproving52, i32 1
  %bitcast55 = bitcast %struct.node** %mtmp54 to i8*
  %currentnode = alloca %struct.node*, align 8
  %currentnode56 = bitcast %struct.node** %currentnode to %struct.node**
  %bitcast57 = bitcast %struct.node** %currentnode to i8*
  %mtmp58 = getelementptr %struct.node** %currentnode56, i32 1
  %bitcast59 = bitcast %struct.node** %mtmp58 to i8*
  %xstart_time = alloca i64, align 8
  %xstart_time60 = bitcast i64* %xstart_time to i64*
  %bitcast61 = bitcast i64* %xstart_time to i8*
  %mtmp62 = getelementptr i64* %xstart_time60, i32 1
  %bitcast63 = bitcast i64* %mtmp62 to i8*
  %resmove = alloca %struct.move_s, align 4
  %resmove64 = bitcast %struct.move_s* %resmove to %struct.move_s*
  %bitcast65 = bitcast %struct.move_s* %resmove to i8*
  %mtmp66 = getelementptr %struct.move_s* %resmove64, i32 1
  %bitcast67 = bitcast %struct.move_s* %mtmp66 to i8*
  %2 = load i32* @piece_count, align 4
  %cmp = icmp sle i32 %2, 3
  br i1 %cmp, label %land.lhs.true, label %if.end

land.lhs.true:                                    ; preds = %entry
  %3 = load i32* @Variant, align 4
  %cmp1 = icmp eq i32 %3, 3
  br i1 %cmp1, label %if.then, label %if.end

if.then:                                          ; preds = %land.lhs.true
  %4 = bitcast %struct.move_s* %agg.result to i8*
  %5 = bitcast %struct.move_s* %compmove to i8*
  call void @__softboundcets_memcopy_check(i8* %4, i8* %5, i64 24, i8* %0, i8* %1, i8* null, i8* inttoptr (i64 281474976710656 to i8*))
  call void @__softboundcets_copy_metadata(i8* %4, i8* %5, i64 24)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %4, i8* %5, i64 24, i32 4, i1 false)
  br label %return

if.end:                                           ; preds = %land.lhs.true, %entry
  store i32 0, i32* @nodecount, align 4
  store i32 0, i32* @iters, align 4
  store i32 0, i32* @frees, align 4
  store i32 1, i32* @ply, align 4
  store i32 0, i32* @maxply, align 4
  call void @__softboundcets_allocate_shadow_stack_space(i32 2)
  call void @__softboundcets_store_base_shadow_stack(i8* null, i32 1)
  call void @__softboundcets_store_bound_shadow_stack(i8* inttoptr (i64 281474976710656 to i8*), i32 1)
  call void @make(%struct.move_s* %compmove, i32 0)
  call void @__softboundcets_deallocate_shadow_stack_space()
  %6 = load i32* @hash, align 4
  %7 = load i32* @move_number, align 4
  %8 = load i32* @ply, align 4
  %add = add nsw i32 %7, %8
  %sub = sub nsw i32 %add, 1
  %idxprom = sext i32 %sub to i64
  %arrayidx = getelementptr inbounds [600 x i32]* @hash_history, i32 0, i64 %idxprom
  store i32 %6, i32* %arrayidx, align 4
  %9 = load i32* @white_to_move, align 4
  %tobool = icmp ne i32 %9, 0
  %cond = select i1 %tobool, i32 0, i32 1
  store i32 %cond, i32* @root_to_move, align 4
  %call = call i64 @rtime()
  store i64 %call, i64* %xstart_time, align 8
  call void @__softboundcets_allocate_shadow_stack_space(i32 1)
  %call2 = call noalias i8* @softboundcets_calloc(i64 1, i64 56) #1
  %10 = call i8* @__softboundcets_load_base_shadow_stack(i32 0)
  %11 = call i8* @__softboundcets_load_bound_shadow_stack(i32 0)
  call void @__softboundcets_deallocate_shadow_stack_space()
  %12 = bitcast i8* %call2 to %struct.node*
  store %struct.node* %12, %struct.node** %root, align 8
  %bitcast174 = bitcast %struct.node** %root to i8*
  call void @__softboundcets_metadata_store(i8* %bitcast174, i8* %10, i8* %11)
  %13 = load i32* @PBSize, align 4
  %conv = sext i32 %13 to i64
  call void @__softboundcets_allocate_shadow_stack_space(i32 1)
  %call3 = call noalias i8* @softboundcets_calloc(i64 %conv, i64 56) #1
  %14 = call i8* @__softboundcets_load_base_shadow_stack(i32 0)
  %15 = call i8* @__softboundcets_load_bound_shadow_stack(i32 0)
  call void @__softboundcets_deallocate_shadow_stack_space()
  store i8* %call3, i8** @membuff, align 8
  %bitcast175 = bitcast i8** @membuff to i8*
  call void @__softboundcets_metadata_store(i8* %bitcast175, i8* %14, i8* %15)
  %16 = load %struct.node** %root, align 8
  %bitcast68 = bitcast %struct.node** %root to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast68, i8** %base.alloca, i8** %bound.alloca)
  %base.load = load i8** %base.alloca
  %bound.load = load i8** %bound.alloca
  call void @__softboundcets_allocate_shadow_stack_space(i32 2)
  call void @__softboundcets_store_base_shadow_stack(i8* %base.load, i32 1)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bound.load, i32 1)
  call void @pn_eval(%struct.node* %16)
  call void @__softboundcets_deallocate_shadow_stack_space()
  %17 = load %struct.node** %root, align 8
  %bitcast69 = bitcast %struct.node** %root to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast69, i8** %base.alloca70, i8** %bound.alloca71)
  %base.load72 = load i8** %base.alloca70
  %bound.load73 = load i8** %bound.alloca71
  call void @__softboundcets_allocate_shadow_stack_space(i32 2)
  call void @__softboundcets_store_base_shadow_stack(i8* %base.load72, i32 1)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bound.load73, i32 1)
  call void @set_proof_and_disproof_numbers(%struct.node* %17)
  call void @__softboundcets_deallocate_shadow_stack_space()
  %18 = load %struct.node** %root, align 8
  %bitcast74 = bitcast %struct.node** %root to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast74, i8** %base.alloca75, i8** %bound.alloca76)
  %base.load77 = load i8** %base.alloca75
  %bound.load78 = load i8** %bound.alloca76
  store %struct.node* %18, %struct.node** %currentnode, align 8
  %bitcast176 = bitcast %struct.node** %currentnode to i8*
  call void @__softboundcets_metadata_store(i8* %bitcast176, i8* %base.load77, i8* %bound.load78)
  br label %while.cond

while.cond:                                       ; preds = %if.end24, %if.end
  %19 = load %struct.node** %root, align 8
  %bitcast79 = bitcast %struct.node** %root to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast79, i8** %base.alloca80, i8** %bound.alloca81)
  %base.load82 = load i8** %base.alloca80
  %bound.load83 = load i8** %bound.alloca81
  %proof = getelementptr inbounds %struct.node* %19, i32 0, i32 4
  %20 = load i32* %proof, align 4
  %cmp4 = icmp ne i32 %20, 0
  br i1 %cmp4, label %land.lhs.true6, label %land.end

land.lhs.true6:                                   ; preds = %while.cond
  %21 = load %struct.node** %root, align 8
  %bitcast84 = bitcast %struct.node** %root to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast84, i8** %base.alloca85, i8** %bound.alloca86)
  %base.load87 = load i8** %base.alloca85
  %bound.load88 = load i8** %bound.alloca86
  %disproof = getelementptr inbounds %struct.node* %21, i32 0, i32 5
  %22 = load i32* %disproof, align 4
  %cmp7 = icmp ne i32 %22, 0
  br i1 %cmp7, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %land.lhs.true6
  %23 = load i32* @bufftop, align 4
  %conv9 = zext i32 %23 to i64
  %24 = load i32* @PBSize, align 4
  %sub10 = sub nsw i32 %24, 10000
  %conv11 = sext i32 %sub10 to i64
  %mul = mul i64 %conv11, 56
  %cmp12 = icmp ult i64 %conv9, %mul
  br label %land.end

land.end:                                         ; preds = %land.rhs, %land.lhs.true6, %while.cond
  %25 = phi i1 [ false, %land.lhs.true6 ], [ false, %while.cond ], [ %cmp12, %land.rhs ]
  br i1 %25, label %while.body, label %while.end

while.body:                                       ; preds = %land.end
  %26 = load %struct.node** %currentnode, align 8
  %bitcast89 = bitcast %struct.node** %currentnode to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast89, i8** %base.alloca90, i8** %bound.alloca91)
  %base.load92 = load i8** %base.alloca90
  %bound.load93 = load i8** %bound.alloca91
  call void @__softboundcets_allocate_shadow_stack_space(i32 2)
  call void @__softboundcets_store_base_shadow_stack(i8* %base.load92, i32 1)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bound.load93, i32 1)
  %call14 = call %struct.node* @select_most_proving(%struct.node* %26)
  %27 = call i8* @__softboundcets_load_base_shadow_stack(i32 0)
  %28 = call i8* @__softboundcets_load_bound_shadow_stack(i32 0)
  call void @__softboundcets_deallocate_shadow_stack_space()
  store %struct.node* %call14, %struct.node** %mostproving, align 8
  %bitcast177 = bitcast %struct.node** %mostproving to i8*
  call void @__softboundcets_metadata_store(i8* %bitcast177, i8* %27, i8* %28)
  %29 = load %struct.node** %mostproving, align 8
  %bitcast94 = bitcast %struct.node** %mostproving to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast94, i8** %base.alloca95, i8** %bound.alloca96)
  %base.load97 = load i8** %base.alloca95
  %bound.load98 = load i8** %bound.alloca96
  call void @__softboundcets_allocate_shadow_stack_space(i32 2)
  call void @__softboundcets_store_base_shadow_stack(i8* %base.load97, i32 1)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bound.load98, i32 1)
  call void @develop_node(%struct.node* %29)
  call void @__softboundcets_deallocate_shadow_stack_space()
  %30 = load %struct.node** %mostproving, align 8
  %bitcast99 = bitcast %struct.node** %mostproving to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast99, i8** %base.alloca100, i8** %bound.alloca101)
  %base.load102 = load i8** %base.alloca100
  %bound.load103 = load i8** %bound.alloca101
  call void @__softboundcets_allocate_shadow_stack_space(i32 2)
  call void @__softboundcets_store_base_shadow_stack(i8* %base.load102, i32 1)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bound.load103, i32 1)
  call void @update_ancestors(%struct.node* %30)
  call void @__softboundcets_deallocate_shadow_stack_space()
  %31 = load i32* @iters, align 4
  %inc = add nsw i32 %31, 1
  store i32 %inc, i32* @iters, align 4
  %32 = load i32* @iters, align 4
  %rem = srem i32 %32, 32
  %cmp15 = icmp eq i32 %rem, 0
  br i1 %cmp15, label %if.then17, label %if.end24

if.then17:                                        ; preds = %while.body
  %call18 = call i64 @rtime()
  %33 = load i64* %xstart_time, align 8
  %call19 = call i32 @rdifftime(i64 %call18, i64 %33)
  %34 = load i32* @pn_time, align 4
  %cmp20 = icmp sgt i32 %call19, %34
  br i1 %cmp20, label %if.then22, label %if.end23

if.then22:                                        ; preds = %if.then17
  br label %while.end

if.end23:                                         ; preds = %if.then17
  br label %if.end24

if.end24:                                         ; preds = %if.end23, %while.body
  br label %while.cond

while.end:                                        ; preds = %if.then22, %land.end
  %35 = load %struct.node** %root, align 8
  %bitcast104 = bitcast %struct.node** %root to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast104, i8** %base.alloca105, i8** %bound.alloca106)
  %base.load107 = load i8** %base.alloca105
  %bound.load108 = load i8** %bound.alloca106
  %proof25 = getelementptr inbounds %struct.node* %35, i32 0, i32 4
  %36 = load i32* %proof25, align 4
  %37 = load %struct.node** %root, align 8
  %bitcast109 = bitcast %struct.node** %root to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast109, i8** %base.alloca110, i8** %bound.alloca111)
  %base.load112 = load i8** %base.alloca110
  %bound.load113 = load i8** %bound.alloca111
  %disproof26 = getelementptr inbounds %struct.node* %37, i32 0, i32 5
  %38 = load i32* %disproof26, align 4
  %39 = load i32* @nodecount, align 4
  %40 = load i32* @frees, align 4
  %41 = load i32* @nodecount, align 4
  %conv27 = sext i32 %41 to i64
  %mul28 = mul i64 %conv27, 56
  %conv29 = uitofp i64 %mul28 to float
  %div = fdiv float %conv29, 1.048576e+06
  %conv30 = fpext float %div to double
  %42 = load i32* @iters, align 4
  %call31 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([47 x i8]* @.str17101, i32 0, i32 0), i32 %36, i32 %38, i32 %39, i32 %40, double %conv30, i32 %42)
  br label %while.cond32

while.cond32:                                     ; preds = %while.body35, %while.end
  %43 = load %struct.node** %currentnode, align 8
  %bitcast114 = bitcast %struct.node** %currentnode to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast114, i8** %base.alloca115, i8** %bound.alloca116)
  %base.load117 = load i8** %base.alloca115
  %bound.load118 = load i8** %bound.alloca116
  %44 = load %struct.node** %root, align 8
  %bitcast119 = bitcast %struct.node** %root to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast119, i8** %base.alloca120, i8** %bound.alloca121)
  %base.load122 = load i8** %base.alloca120
  %bound.load123 = load i8** %bound.alloca121
  %cmp33 = icmp ne %struct.node* %43, %44
  br i1 %cmp33, label %while.body35, label %while.end36

while.body35:                                     ; preds = %while.cond32
  %45 = load %struct.node** %currentnode, align 8
  %bitcast124 = bitcast %struct.node** %currentnode to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast124, i8** %base.alloca125, i8** %bound.alloca126)
  %base.load127 = load i8** %base.alloca125
  %bound.load128 = load i8** %bound.alloca126
  %move = getelementptr inbounds %struct.node* %45, i32 0, i32 8
  call void @__softboundcets_allocate_shadow_stack_space(i32 2)
  call void @__softboundcets_store_base_shadow_stack(i8* %base.load127, i32 1)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bound.load128, i32 1)
  call void @unmake(%struct.move_s* %move, i32 0)
  call void @__softboundcets_deallocate_shadow_stack_space()
  %46 = load %struct.node** %currentnode, align 8
  %bitcast129 = bitcast %struct.node** %currentnode to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast129, i8** %base.alloca130, i8** %bound.alloca131)
  %base.load132 = load i8** %base.alloca130
  %bound.load133 = load i8** %bound.alloca131
  %parent = getelementptr inbounds %struct.node* %46, i32 0, i32 7
  %47 = load %struct.node** %parent, align 8
  %bitcast134 = bitcast %struct.node** %parent to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast134, i8** %base.alloca135, i8** %bound.alloca136)
  %base.load137 = load i8** %base.alloca135
  %bound.load138 = load i8** %bound.alloca136
  store %struct.node* %47, %struct.node** %currentnode, align 8
  %bitcast178 = bitcast %struct.node** %currentnode to i8*
  call void @__softboundcets_metadata_store(i8* %bitcast178, i8* %base.load137, i8* %bound.load138)
  br label %while.cond32

while.end36:                                      ; preds = %while.cond32
  call void @__softboundcets_allocate_shadow_stack_space(i32 2)
  call void @__softboundcets_store_base_shadow_stack(i8* null, i32 1)
  call void @__softboundcets_store_bound_shadow_stack(i8* inttoptr (i64 281474976710656 to i8*), i32 1)
  call void @unmake(%struct.move_s* %compmove, i32 0)
  call void @__softboundcets_deallocate_shadow_stack_space()
  %48 = load %struct.node** %root, align 8
  %bitcast139 = bitcast %struct.node** %root to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast139, i8** %base.alloca140, i8** %bound.alloca141)
  %base.load142 = load i8** %base.alloca140
  %bound.load143 = load i8** %bound.alloca141
  %proof37 = getelementptr inbounds %struct.node* %48, i32 0, i32 4
  %49 = load i32* %proof37, align 4
  %cmp38 = icmp eq i32 %49, 0
  br i1 %cmp38, label %if.then40, label %if.else

if.then40:                                        ; preds = %while.end36
  %50 = load %struct.node** %root, align 8
  %bitcast144 = bitcast %struct.node** %root to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast144, i8** %base.alloca145, i8** %bound.alloca146)
  %base.load147 = load i8** %base.alloca145
  %bound.load148 = load i8** %bound.alloca146
  %value = getelementptr inbounds %struct.node* %50, i32 0, i32 0
  store i8 1, i8* %value, align 1
  %51 = bitcast %struct.move_s* %resmove to i8*
  call void @__softboundcets_memcopy_check(i8* %51, i8* bitcast (%struct.move_s* @pn_move to i8*), i64 24, i8* %bitcast65, i8* %bitcast67, i8* bitcast (%struct.move_s* @pn_move to i8*), i8* bitcast (%struct.move_s* getelementptr inbounds (%struct.move_s* @pn_move, i32 1) to i8*))
  call void @__softboundcets_copy_metadata(i8* %51, i8* bitcast (%struct.move_s* @pn_move to i8*), i64 24)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %51, i8* bitcast (%struct.move_s* @pn_move to i8*), i64 24, i32 4, i1 false)
  store i32 1, i32* @s_threat, align 4
  br label %if.end49

if.else:                                          ; preds = %while.end36
  %52 = load %struct.node** %root, align 8
  %bitcast149 = bitcast %struct.node** %root to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast149, i8** %base.alloca150, i8** %bound.alloca151)
  %base.load152 = load i8** %base.alloca150
  %bound.load153 = load i8** %bound.alloca151
  %disproof41 = getelementptr inbounds %struct.node* %52, i32 0, i32 5
  %53 = load i32* %disproof41, align 4
  %cmp42 = icmp eq i32 %53, 0
  br i1 %cmp42, label %if.then44, label %if.else46

if.then44:                                        ; preds = %if.else
  %54 = load %struct.node** %root, align 8
  %bitcast164 = bitcast %struct.node** %root to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast164, i8** %base.alloca165, i8** %bound.alloca166)
  %base.load167 = load i8** %base.alloca165
  %bound.load168 = load i8** %bound.alloca166
  %value45 = getelementptr inbounds %struct.node* %54, i32 0, i32 0
  store i8 0, i8* %value45, align 1
  %55 = bitcast %struct.move_s* %resmove to i8*
  %56 = bitcast %struct.move_s* %compmove to i8*
  call void @__softboundcets_memcopy_check(i8* %55, i8* %56, i64 24, i8* %bitcast65, i8* %bitcast67, i8* null, i8* inttoptr (i64 281474976710656 to i8*))
  call void @__softboundcets_copy_metadata(i8* %55, i8* %56, i64 24)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %55, i8* %56, i64 24, i32 4, i1 false)
  br label %if.end48

if.else46:                                        ; preds = %if.else
  %57 = load %struct.node** %root, align 8
  %bitcast169 = bitcast %struct.node** %root to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast169, i8** %base.alloca170, i8** %bound.alloca171)
  %base.load172 = load i8** %base.alloca170
  %bound.load173 = load i8** %bound.alloca171
  %value47 = getelementptr inbounds %struct.node* %57, i32 0, i32 0
  store i8 2, i8* %value47, align 1
  %58 = bitcast %struct.move_s* %resmove to i8*
  %59 = bitcast %struct.move_s* %compmove to i8*
  call void @__softboundcets_memcopy_check(i8* %58, i8* %59, i64 24, i8* %bitcast65, i8* %bitcast67, i8* null, i8* inttoptr (i64 281474976710656 to i8*))
  call void @__softboundcets_copy_metadata(i8* %58, i8* %59, i64 24)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %58, i8* %59, i64 24, i32 4, i1 false)
  br label %if.end48

if.end48:                                         ; preds = %if.else46, %if.then44
  br label %if.end49

if.end49:                                         ; preds = %if.end48, %if.then40
  call void @Xfree()
  %60 = load %struct.node** %root, align 8
  %bitcast154 = bitcast %struct.node** %root to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast154, i8** %base.alloca155, i8** %bound.alloca156)
  %base.load157 = load i8** %base.alloca155
  %bound.load158 = load i8** %bound.alloca156
  %61 = bitcast %struct.node* %60 to i8*
  call void @__softboundcets_allocate_shadow_stack_space(i32 2)
  call void @__softboundcets_store_base_shadow_stack(i8* %base.load157, i32 1)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bound.load158, i32 1)
  call void @softboundcets_free(i8* %61) #1
  call void @__softboundcets_deallocate_shadow_stack_space()
  %62 = load i8** @membuff, align 8
  %bitcast159 = bitcast i8** @membuff to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast159, i8** %base.alloca160, i8** %bound.alloca161)
  %base.load162 = load i8** %base.alloca160
  %bound.load163 = load i8** %bound.alloca161
  call void @__softboundcets_allocate_shadow_stack_space(i32 2)
  call void @__softboundcets_store_base_shadow_stack(i8* %base.load162, i32 1)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bound.load163, i32 1)
  call void @softboundcets_free(i8* %62) #1
  call void @__softboundcets_deallocate_shadow_stack_space()
  %63 = bitcast %struct.move_s* %agg.result to i8*
  %64 = bitcast %struct.move_s* %resmove to i8*
  call void @__softboundcets_memcopy_check(i8* %63, i8* %64, i64 24, i8* %0, i8* %1, i8* %bitcast65, i8* %bitcast67)
  call void @__softboundcets_copy_metadata(i8* %63, i8* %64, i64 24)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %63, i8* %64, i64 24, i32 4, i1 false)
  br label %return

return:                                           ; preds = %if.end49, %if.then
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @read_rcfile() #0 {
entry:
  %setc = alloca i32, align 4
  %setc12 = bitcast i32* %setc to i32*
  %bitcast = bitcast i32* %setc to i8*
  %mtmp = getelementptr i32* %setc12, i32 1
  %bitcast13 = bitcast i32* %mtmp to i8*
  store i32 3000000, i32* @TTSize, align 4
  store i32 1000000, i32* @ECacheSize, align 4
  store i32 200000, i32* @PBSize, align 4
  store i32 1, i32* @cfg_devscale, align 4
  store float 1.000000e+00, float* @cfg_scalefac, align 4
  store i32 1, i32* @cfg_razordrop, align 4
  store i32 0, i32* @cfg_cutdrop, align 4
  store i32 1, i32* @cfg_futprune, align 4
  store i32 1, i32* @cfg_smarteval, align 4
  store i32 0, i32* @cfg_attackeval, align 4
  store i32 1, i32* @cfg_onerep, align 4
  store i32 0, i32* @cfg_recap, align 4
  store i32 0, i32* @havercfile, align 4
  %0 = load i32* @havercfile, align 4
  %1 = load i32* @cfg_devscale, align 4
  %shl = shl i32 %1, 1
  %add = add nsw i32 %0, %shl
  %add1 = add nsw i32 %add, 4
  %2 = load i32* @cfg_razordrop, align 4
  %shl2 = shl i32 %2, 3
  %add3 = add nsw i32 %add1, %shl2
  %3 = load i32* @cfg_cutdrop, align 4
  %shl4 = shl i32 %3, 4
  %add5 = add nsw i32 %add3, %shl4
  %4 = load i32* @cfg_futprune, align 4
  %shl6 = shl i32 %4, 5
  %add7 = add nsw i32 %add5, %shl6
  %5 = load i32* @cfg_smarteval, align 4
  %shl8 = shl i32 %5, 6
  %add9 = add nsw i32 %add7, %shl8
  %6 = load i32* @cfg_attackeval, align 4
  %shl10 = shl i32 %6, 7
  %add11 = add nsw i32 %add9, %shl10
  store i32 %add11, i32* %setc, align 4
  %7 = load i32* %setc, align 4
  %call = call i32 (i8*, i8*, ...)* @sprintf(i8* getelementptr inbounds ([30 x i8]* @setcode, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8]* @.str112, i32 0, i32 0), i32 %7) #1
  call void @initialize_eval()
  call void @alloc_hash()
  call void @alloc_ecache()
  ret void
}

; Function Attrs: nounwind
declare i32 @sprintf(i8*, i8*, ...) #3

; Function Attrs: nounwind uwtable
define internal void @order_moves(%struct.move_s* %moves, i32* %move_ordering, i32* %see_values, i32 %num_moves, i32 %best) #0 {
entry:
  %base.alloca817 = alloca i8*
  %bound.alloca818 = alloca i8*
  %base.alloca812 = alloca i8*
  %bound.alloca813 = alloca i8*
  %base.alloca807 = alloca i8*
  %bound.alloca808 = alloca i8*
  %base.alloca802 = alloca i8*
  %bound.alloca803 = alloca i8*
  %base.alloca797 = alloca i8*
  %bound.alloca798 = alloca i8*
  %base.alloca792 = alloca i8*
  %bound.alloca793 = alloca i8*
  %base.alloca787 = alloca i8*
  %bound.alloca788 = alloca i8*
  %base.alloca782 = alloca i8*
  %bound.alloca783 = alloca i8*
  %base.alloca775 = alloca i8*
  %bound.alloca776 = alloca i8*
  %base.alloca768 = alloca i8*
  %bound.alloca769 = alloca i8*
  %base.alloca763 = alloca i8*
  %bound.alloca764 = alloca i8*
  %base.alloca758 = alloca i8*
  %bound.alloca759 = alloca i8*
  %base.alloca753 = alloca i8*
  %bound.alloca754 = alloca i8*
  %base.alloca748 = alloca i8*
  %bound.alloca749 = alloca i8*
  %base.alloca743 = alloca i8*
  %bound.alloca744 = alloca i8*
  %base.alloca738 = alloca i8*
  %bound.alloca739 = alloca i8*
  %base.alloca733 = alloca i8*
  %bound.alloca734 = alloca i8*
  %base.alloca728 = alloca i8*
  %bound.alloca729 = alloca i8*
  %base.alloca723 = alloca i8*
  %bound.alloca724 = alloca i8*
  %base.alloca718 = alloca i8*
  %bound.alloca719 = alloca i8*
  %base.alloca713 = alloca i8*
  %bound.alloca714 = alloca i8*
  %base.alloca708 = alloca i8*
  %bound.alloca709 = alloca i8*
  %base.alloca703 = alloca i8*
  %bound.alloca704 = alloca i8*
  %base.alloca698 = alloca i8*
  %bound.alloca699 = alloca i8*
  %base.alloca693 = alloca i8*
  %bound.alloca694 = alloca i8*
  %base.alloca688 = alloca i8*
  %bound.alloca689 = alloca i8*
  %base.alloca683 = alloca i8*
  %bound.alloca684 = alloca i8*
  %base.alloca678 = alloca i8*
  %bound.alloca679 = alloca i8*
  %base.alloca673 = alloca i8*
  %bound.alloca674 = alloca i8*
  %base.alloca668 = alloca i8*
  %bound.alloca669 = alloca i8*
  %base.alloca663 = alloca i8*
  %bound.alloca664 = alloca i8*
  %base.alloca658 = alloca i8*
  %bound.alloca659 = alloca i8*
  %base.alloca653 = alloca i8*
  %bound.alloca654 = alloca i8*
  %base.alloca648 = alloca i8*
  %bound.alloca649 = alloca i8*
  %base.alloca643 = alloca i8*
  %bound.alloca644 = alloca i8*
  %base.alloca638 = alloca i8*
  %bound.alloca639 = alloca i8*
  %base.alloca633 = alloca i8*
  %bound.alloca634 = alloca i8*
  %base.alloca628 = alloca i8*
  %bound.alloca629 = alloca i8*
  %base.alloca623 = alloca i8*
  %bound.alloca624 = alloca i8*
  %base.alloca618 = alloca i8*
  %bound.alloca619 = alloca i8*
  %base.alloca613 = alloca i8*
  %bound.alloca614 = alloca i8*
  %base.alloca608 = alloca i8*
  %bound.alloca609 = alloca i8*
  %base.alloca603 = alloca i8*
  %bound.alloca604 = alloca i8*
  %base.alloca598 = alloca i8*
  %bound.alloca599 = alloca i8*
  %base.alloca593 = alloca i8*
  %bound.alloca594 = alloca i8*
  %base.alloca588 = alloca i8*
  %bound.alloca589 = alloca i8*
  %base.alloca = alloca i8*
  %bound.alloca = alloca i8*
  %0 = call i8* @__softboundcets_load_base_shadow_stack(i32 3)
  %1 = call i8* @__softboundcets_load_bound_shadow_stack(i32 3)
  %2 = call i8* @__softboundcets_load_base_shadow_stack(i32 2)
  %3 = call i8* @__softboundcets_load_bound_shadow_stack(i32 2)
  %4 = call i8* @__softboundcets_load_base_shadow_stack(i32 1)
  %5 = call i8* @__softboundcets_load_bound_shadow_stack(i32 1)
  %moves.addr = alloca %struct.move_s*, align 8
  %moves.addr544 = bitcast %struct.move_s** %moves.addr to %struct.move_s**
  %bitcast = bitcast %struct.move_s** %moves.addr to i8*
  %mtmp = getelementptr %struct.move_s** %moves.addr544, i32 1
  %bitcast545 = bitcast %struct.move_s** %mtmp to i8*
  %move_ordering.addr = alloca i32*, align 8
  %move_ordering.addr546 = bitcast i32** %move_ordering.addr to i32**
  %bitcast547 = bitcast i32** %move_ordering.addr to i8*
  %mtmp548 = getelementptr i32** %move_ordering.addr546, i32 1
  %bitcast549 = bitcast i32** %mtmp548 to i8*
  %see_values.addr = alloca i32*, align 8
  %see_values.addr550 = bitcast i32** %see_values.addr to i32**
  %bitcast551 = bitcast i32** %see_values.addr to i8*
  %mtmp552 = getelementptr i32** %see_values.addr550, i32 1
  %bitcast553 = bitcast i32** %mtmp552 to i8*
  %num_moves.addr = alloca i32, align 4
  %num_moves.addr554 = bitcast i32* %num_moves.addr to i32*
  %bitcast555 = bitcast i32* %num_moves.addr to i8*
  %mtmp556 = getelementptr i32* %num_moves.addr554, i32 1
  %bitcast557 = bitcast i32* %mtmp556 to i8*
  %best.addr = alloca i32, align 4
  %best.addr558 = bitcast i32* %best.addr to i32*
  %bitcast559 = bitcast i32* %best.addr to i8*
  %mtmp560 = getelementptr i32* %best.addr558, i32 1
  %bitcast561 = bitcast i32* %mtmp560 to i8*
  %promoted = alloca i32, align 4
  %promoted562 = bitcast i32* %promoted to i32*
  %bitcast563 = bitcast i32* %promoted to i8*
  %mtmp564 = getelementptr i32* %promoted562, i32 1
  %bitcast565 = bitcast i32* %mtmp564 to i8*
  %captured = alloca i32, align 4
  %captured566 = bitcast i32* %captured to i32*
  %bitcast567 = bitcast i32* %captured to i8*
  %mtmp568 = getelementptr i32* %captured566, i32 1
  %bitcast569 = bitcast i32* %mtmp568 to i8*
  %i = alloca i32, align 4
  %i570 = bitcast i32* %i to i32*
  %bitcast571 = bitcast i32* %i to i8*
  %mtmp572 = getelementptr i32* %i570, i32 1
  %bitcast573 = bitcast i32* %mtmp572 to i8*
  %from = alloca i32, align 4
  %from574 = bitcast i32* %from to i32*
  %bitcast575 = bitcast i32* %from to i8*
  %mtmp576 = getelementptr i32* %from574, i32 1
  %bitcast577 = bitcast i32* %mtmp576 to i8*
  %target = alloca i32, align 4
  %target578 = bitcast i32* %target to i32*
  %bitcast579 = bitcast i32* %target to i8*
  %mtmp580 = getelementptr i32* %target578, i32 1
  %bitcast581 = bitcast i32* %mtmp580 to i8*
  %seev = alloca i32, align 4
  %seev582 = bitcast i32* %seev to i32*
  %bitcast583 = bitcast i32* %seev to i8*
  %mtmp584 = getelementptr i32* %seev582, i32 1
  %bitcast585 = bitcast i32* %mtmp584 to i8*
  store %struct.move_s* %moves, %struct.move_s** %moves.addr, align 8
  %bitcast821 = bitcast %struct.move_s** %moves.addr to i8*
  call void @__softboundcets_metadata_store(i8* %bitcast821, i8* %4, i8* %5)
  store i32* %move_ordering, i32** %move_ordering.addr, align 8
  %bitcast822 = bitcast i32** %move_ordering.addr to i8*
  call void @__softboundcets_metadata_store(i8* %bitcast822, i8* %2, i8* %3)
  store i32* %see_values, i32** %see_values.addr, align 8
  %bitcast823 = bitcast i32** %see_values.addr to i8*
  call void @__softboundcets_metadata_store(i8* %bitcast823, i8* %0, i8* %1)
  store i32 %num_moves, i32* %num_moves.addr, align 4
  store i32 %best, i32* %best.addr, align 4
  %6 = load i32* @searching_pv, align 4
  %tobool = icmp ne i32 %6, 0
  br i1 %tobool, label %if.then, label %if.else300

if.then:                                          ; preds = %entry
  store i32 0, i32* @searching_pv, align 4
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.then
  %7 = load i32* %i, align 4
  %8 = load i32* %num_moves.addr, align 4
  %cmp = icmp slt i32 %7, %8
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %9 = load i32* %i, align 4
  %idxprom = sext i32 %9 to i64
  %10 = load %struct.move_s** %moves.addr, align 8
  %bitcast586 = bitcast %struct.move_s** %moves.addr to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast586, i8** %base.alloca, i8** %bound.alloca)
  %base.load = load i8** %base.alloca
  %bound.load = load i8** %bound.alloca
  %arrayidx = getelementptr inbounds %struct.move_s* %10, i64 %idxprom
  %from1 = getelementptr inbounds %struct.move_s* %arrayidx, i32 0, i32 0
  %11 = load i32* %from1, align 4
  store i32 %11, i32* %from, align 4
  %12 = load i32* %i, align 4
  %idxprom2 = sext i32 %12 to i64
  %13 = load %struct.move_s** %moves.addr, align 8
  %bitcast587 = bitcast %struct.move_s** %moves.addr to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast587, i8** %base.alloca588, i8** %bound.alloca589)
  %base.load590 = load i8** %base.alloca588
  %bound.load591 = load i8** %bound.alloca589
  %arrayidx3 = getelementptr inbounds %struct.move_s* %13, i64 %idxprom2
  %target4 = getelementptr inbounds %struct.move_s* %arrayidx3, i32 0, i32 1
  %14 = load i32* %target4, align 4
  store i32 %14, i32* %target, align 4
  %15 = load i32* %i, align 4
  %idxprom5 = sext i32 %15 to i64
  %16 = load %struct.move_s** %moves.addr, align 8
  %bitcast592 = bitcast %struct.move_s** %moves.addr to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast592, i8** %base.alloca593, i8** %bound.alloca594)
  %base.load595 = load i8** %base.alloca593
  %bound.load596 = load i8** %bound.alloca594
  %arrayidx6 = getelementptr inbounds %struct.move_s* %16, i64 %idxprom5
  %promoted7 = getelementptr inbounds %struct.move_s* %arrayidx6, i32 0, i32 3
  %17 = load i32* %promoted7, align 4
  store i32 %17, i32* %promoted, align 4
  %18 = load i32* %i, align 4
  %idxprom8 = sext i32 %18 to i64
  %19 = load %struct.move_s** %moves.addr, align 8
  %bitcast597 = bitcast %struct.move_s** %moves.addr to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast597, i8** %base.alloca598, i8** %bound.alloca599)
  %base.load600 = load i8** %base.alloca598
  %bound.load601 = load i8** %bound.alloca599
  %arrayidx9 = getelementptr inbounds %struct.move_s* %19, i64 %idxprom8
  %captured10 = getelementptr inbounds %struct.move_s* %arrayidx9, i32 0, i32 2
  %20 = load i32* %captured10, align 4
  store i32 %20, i32* %captured, align 4
  %21 = load i32* %captured, align 4
  %cmp11 = icmp ne i32 %21, 13
  br i1 %cmp11, label %if.then12, label %if.else50

if.then12:                                        ; preds = %for.body
  %22 = load i32* %captured, align 4
  %idxprom13 = sext i32 %22 to i64
  %arrayidx14 = getelementptr inbounds [14 x i32]* @material, i32 0, i64 %idxprom13
  %23 = load i32* %arrayidx14, align 4
  %call = call i32 @softboundcets_abs(i32 %23) #5
  %add = add nsw i32 %call, 15
  %24 = load i32* %from, align 4
  %idxprom15 = sext i32 %24 to i64
  %arrayidx16 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom15
  %25 = load i32* %arrayidx16, align 4
  %idxprom17 = sext i32 %25 to i64
  %arrayidx18 = getelementptr inbounds [14 x i32]* @material, i32 0, i64 %idxprom17
  %26 = load i32* %arrayidx18, align 4
  %call19 = call i32 @softboundcets_abs(i32 %26) #5
  %cmp20 = icmp sge i32 %add, %call19
  br i1 %cmp20, label %if.then21, label %if.else

if.then21:                                        ; preds = %if.then12
  %27 = load i32* %captured, align 4
  %idxprom22 = sext i32 %27 to i64
  %arrayidx23 = getelementptr inbounds [14 x i32]* @material, i32 0, i64 %idxprom22
  %28 = load i32* %arrayidx23, align 4
  %call24 = call i32 @softboundcets_abs(i32 %28) #5
  %29 = load i32* %from, align 4
  %idxprom25 = sext i32 %29 to i64
  %arrayidx26 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom25
  %30 = load i32* %arrayidx26, align 4
  %idxprom27 = sext i32 %30 to i64
  %arrayidx28 = getelementptr inbounds [14 x i32]* @material, i32 0, i64 %idxprom27
  %31 = load i32* %arrayidx28, align 4
  %call29 = call i32 @softboundcets_abs(i32 %31) #5
  %shr = ashr i32 %call29, 4
  %sub = sub nsw i32 %call24, %shr
  %32 = load i32* %i, align 4
  %idxprom30 = sext i32 %32 to i64
  %33 = load i32** %see_values.addr, align 8
  %bitcast627 = bitcast i32** %see_values.addr to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast627, i8** %base.alloca628, i8** %bound.alloca629)
  %base.load630 = load i8** %base.alloca628
  %bound.load631 = load i8** %bound.alloca629
  %arrayidx31 = getelementptr inbounds i32* %33, i64 %idxprom30
  store i32 %sub, i32* %arrayidx31, align 4
  %34 = load i32* %i, align 4
  %idxprom32 = sext i32 %34 to i64
  %35 = load i32** %see_values.addr, align 8
  %bitcast632 = bitcast i32** %see_values.addr to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast632, i8** %base.alloca633, i8** %bound.alloca634)
  %base.load635 = load i8** %base.alloca633
  %bound.load636 = load i8** %bound.alloca634
  %arrayidx33 = getelementptr inbounds i32* %35, i64 %idxprom32
  %36 = load i32* %arrayidx33, align 4
  %add34 = add nsw i32 50000000, %36
  %37 = load i32* %i, align 4
  %idxprom35 = sext i32 %37 to i64
  %38 = load i32** %move_ordering.addr, align 8
  %bitcast637 = bitcast i32** %move_ordering.addr to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast637, i8** %base.alloca638, i8** %bound.alloca639)
  %base.load640 = load i8** %base.alloca638
  %bound.load641 = load i8** %bound.alloca639
  %arrayidx36 = getelementptr inbounds i32* %38, i64 %idxprom35
  store i32 %add34, i32* %arrayidx36, align 4
  br label %if.end49

if.else:                                          ; preds = %if.then12
  %39 = load i32* @white_to_move, align 4
  %tobool37 = icmp ne i32 %39, 0
  %cond = select i1 %tobool37, i32 0, i32 1
  %40 = load i32* %target, align 4
  %41 = load i32* %from, align 4
  %call38 = call i32 @see(i32 %cond, i32 %40, i32 %41)
  store i32 %call38, i32* %seev, align 4
  %42 = load i32* %seev, align 4
  %cmp39 = icmp sge i32 %42, -50
  br i1 %cmp39, label %if.then40, label %if.else44

if.then40:                                        ; preds = %if.else
  %43 = load i32* %seev, align 4
  %add41 = add nsw i32 50000000, %43
  %44 = load i32* %i, align 4
  %idxprom42 = sext i32 %44 to i64
  %45 = load i32** %move_ordering.addr, align 8
  %bitcast647 = bitcast i32** %move_ordering.addr to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast647, i8** %base.alloca648, i8** %bound.alloca649)
  %base.load650 = load i8** %base.alloca648
  %bound.load651 = load i8** %bound.alloca649
  %arrayidx43 = getelementptr inbounds i32* %45, i64 %idxprom42
  store i32 %add41, i32* %arrayidx43, align 4
  br label %if.end

if.else44:                                        ; preds = %if.else
  %46 = load i32* %seev, align 4
  %47 = load i32* %i, align 4
  %idxprom45 = sext i32 %47 to i64
  %48 = load i32** %move_ordering.addr, align 8
  %bitcast652 = bitcast i32** %move_ordering.addr to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast652, i8** %base.alloca653, i8** %bound.alloca654)
  %base.load655 = load i8** %base.alloca653
  %bound.load656 = load i8** %bound.alloca654
  %arrayidx46 = getelementptr inbounds i32* %48, i64 %idxprom45
  store i32 %46, i32* %arrayidx46, align 4
  br label %if.end

if.end:                                           ; preds = %if.else44, %if.then40
  %49 = load i32* %seev, align 4
  %50 = load i32* %i, align 4
  %idxprom47 = sext i32 %50 to i64
  %51 = load i32** %see_values.addr, align 8
  %bitcast662 = bitcast i32** %see_values.addr to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast662, i8** %base.alloca663, i8** %bound.alloca664)
  %base.load665 = load i8** %base.alloca663
  %bound.load666 = load i8** %bound.alloca664
  %arrayidx48 = getelementptr inbounds i32* %51, i64 %idxprom47
  store i32 %49, i32* %arrayidx48, align 4
  br label %if.end49

if.end49:                                         ; preds = %if.end, %if.then21
  br label %if.end53

if.else50:                                        ; preds = %for.body
  %52 = load i32* %i, align 4
  %idxprom51 = sext i32 %52 to i64
  %53 = load i32** %move_ordering.addr, align 8
  %bitcast622 = bitcast i32** %move_ordering.addr to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast622, i8** %base.alloca623, i8** %bound.alloca624)
  %base.load625 = load i8** %base.alloca623
  %bound.load626 = load i8** %bound.alloca624
  %arrayidx52 = getelementptr inbounds i32* %53, i64 %idxprom51
  store i32 0, i32* %arrayidx52, align 4
  br label %if.end53

if.end53:                                         ; preds = %if.else50, %if.end49
  %54 = load i32* %from, align 4
  %55 = load i32* @ply, align 4
  %idxprom54 = sext i32 %55 to i64
  %arrayidx55 = getelementptr inbounds [300 x %struct.move_s]* getelementptr inbounds ([300 x [300 x %struct.move_s]]* @pv, i32 0, i64 1), i32 0, i64 %idxprom54
  %from56 = getelementptr inbounds %struct.move_s* %arrayidx55, i32 0, i32 0
  %56 = load i32* %from56, align 4
  %cmp57 = icmp eq i32 %54, %56
  br i1 %cmp57, label %land.lhs.true, label %if.else103

land.lhs.true:                                    ; preds = %if.end53
  %57 = load i32* %target, align 4
  %58 = load i32* @ply, align 4
  %idxprom58 = sext i32 %58 to i64
  %arrayidx59 = getelementptr inbounds [300 x %struct.move_s]* getelementptr inbounds ([300 x [300 x %struct.move_s]]* @pv, i32 0, i64 1), i32 0, i64 %idxprom58
  %target60 = getelementptr inbounds %struct.move_s* %arrayidx59, i32 0, i32 1
  %59 = load i32* %target60, align 4
  %cmp61 = icmp eq i32 %57, %59
  br i1 %cmp61, label %land.lhs.true62, label %if.else103

land.lhs.true62:                                  ; preds = %land.lhs.true
  %60 = load i32* %promoted, align 4
  %61 = load i32* @ply, align 4
  %idxprom63 = sext i32 %61 to i64
  %arrayidx64 = getelementptr inbounds [300 x %struct.move_s]* getelementptr inbounds ([300 x [300 x %struct.move_s]]* @pv, i32 0, i64 1), i32 0, i64 %idxprom63
  %promoted65 = getelementptr inbounds %struct.move_s* %arrayidx64, i32 0, i32 3
  %62 = load i32* %promoted65, align 4
  %cmp66 = icmp eq i32 %60, %62
  br i1 %cmp66, label %if.then67, label %if.else103

if.then67:                                        ; preds = %land.lhs.true62
  store i32 1, i32* @searching_pv, align 4
  %63 = load i32* %i, align 4
  %idxprom68 = sext i32 %63 to i64
  %64 = load i32** %move_ordering.addr, align 8
  %bitcast697 = bitcast i32** %move_ordering.addr to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast697, i8** %base.alloca698, i8** %bound.alloca699)
  %base.load700 = load i8** %base.alloca698
  %bound.load701 = load i8** %bound.alloca699
  %arrayidx69 = getelementptr inbounds i32* %64, i64 %idxprom68
  store i32 100000000, i32* %arrayidx69, align 4
  %65 = load i32* %captured, align 4
  %cmp70 = icmp ne i32 %65, 13
  br i1 %cmp70, label %if.then71, label %if.end102

if.then71:                                        ; preds = %if.then67
  %66 = load i32* %captured, align 4
  %idxprom72 = sext i32 %66 to i64
  %arrayidx73 = getelementptr inbounds [14 x i32]* @material, i32 0, i64 %idxprom72
  %67 = load i32* %arrayidx73, align 4
  %call74 = call i32 @softboundcets_abs(i32 %67) #5
  %add75 = add nsw i32 %call74, 15
  %68 = load i32* %from, align 4
  %idxprom76 = sext i32 %68 to i64
  %arrayidx77 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom76
  %69 = load i32* %arrayidx77, align 4
  %idxprom78 = sext i32 %69 to i64
  %arrayidx79 = getelementptr inbounds [14 x i32]* @material, i32 0, i64 %idxprom78
  %70 = load i32* %arrayidx79, align 4
  %call80 = call i32 @softboundcets_abs(i32 %70) #5
  %cmp81 = icmp sge i32 %add75, %call80
  br i1 %cmp81, label %if.then82, label %if.else95

if.then82:                                        ; preds = %if.then71
  %71 = load i32* %captured, align 4
  %idxprom83 = sext i32 %71 to i64
  %arrayidx84 = getelementptr inbounds [14 x i32]* @material, i32 0, i64 %idxprom83
  %72 = load i32* %arrayidx84, align 4
  %call85 = call i32 @softboundcets_abs(i32 %72) #5
  %73 = load i32* %from, align 4
  %idxprom86 = sext i32 %73 to i64
  %arrayidx87 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom86
  %74 = load i32* %arrayidx87, align 4
  %idxprom88 = sext i32 %74 to i64
  %arrayidx89 = getelementptr inbounds [14 x i32]* @material, i32 0, i64 %idxprom88
  %75 = load i32* %arrayidx89, align 4
  %call90 = call i32 @softboundcets_abs(i32 %75) #5
  %shr91 = ashr i32 %call90, 4
  %sub92 = sub nsw i32 %call85, %shr91
  %76 = load i32* %i, align 4
  %idxprom93 = sext i32 %76 to i64
  %77 = load i32** %see_values.addr, align 8
  %bitcast732 = bitcast i32** %see_values.addr to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast732, i8** %base.alloca733, i8** %bound.alloca734)
  %base.load735 = load i8** %base.alloca733
  %bound.load736 = load i8** %bound.alloca734
  %arrayidx94 = getelementptr inbounds i32* %77, i64 %idxprom93
  store i32 %sub92, i32* %arrayidx94, align 4
  br label %if.end101

if.else95:                                        ; preds = %if.then71
  %78 = load i32* @white_to_move, align 4
  %tobool96 = icmp ne i32 %78, 0
  %cond97 = select i1 %tobool96, i32 0, i32 1
  %79 = load i32* %target, align 4
  %80 = load i32* %from, align 4
  %call98 = call i32 @see(i32 %cond97, i32 %79, i32 %80)
  store i32 %call98, i32* %seev, align 4
  %81 = load i32* %seev, align 4
  %82 = load i32* %i, align 4
  %idxprom99 = sext i32 %82 to i64
  %83 = load i32** %see_values.addr, align 8
  %bitcast737 = bitcast i32** %see_values.addr to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast737, i8** %base.alloca738, i8** %bound.alloca739)
  %base.load740 = load i8** %base.alloca738
  %bound.load741 = load i8** %bound.alloca739
  %arrayidx100 = getelementptr inbounds i32* %83, i64 %idxprom99
  store i32 %81, i32* %arrayidx100, align 4
  br label %if.end101

if.end101:                                        ; preds = %if.else95, %if.then82
  br label %if.end102

if.end102:                                        ; preds = %if.end101, %if.then67
  br label %if.end299

if.else103:                                       ; preds = %land.lhs.true62, %land.lhs.true, %if.end53
  %84 = load i32* %best.addr, align 4
  %cmp104 = icmp ne i32 %84, -1
  br i1 %cmp104, label %land.lhs.true105, label %if.else145

land.lhs.true105:                                 ; preds = %if.else103
  %85 = load i32* %best.addr, align 4
  %cmp106 = icmp ne i32 %85, -2
  br i1 %cmp106, label %land.lhs.true107, label %if.else145

land.lhs.true107:                                 ; preds = %land.lhs.true105
  %86 = load i32* %i, align 4
  %87 = load i32* %best.addr, align 4
  %cmp108 = icmp eq i32 %86, %87
  br i1 %cmp108, label %if.then109, label %if.else145

if.then109:                                       ; preds = %land.lhs.true107
  %88 = load i32* %i, align 4
  %idxprom110 = sext i32 %88 to i64
  %89 = load i32** %move_ordering.addr, align 8
  %bitcast717 = bitcast i32** %move_ordering.addr to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast717, i8** %base.alloca718, i8** %bound.alloca719)
  %base.load720 = load i8** %base.alloca718
  %bound.load721 = load i8** %bound.alloca719
  %arrayidx111 = getelementptr inbounds i32* %89, i64 %idxprom110
  store i32 100000000, i32* %arrayidx111, align 4
  %90 = load i32* %captured, align 4
  %cmp112 = icmp ne i32 %90, 13
  br i1 %cmp112, label %if.then113, label %if.end144

if.then113:                                       ; preds = %if.then109
  %91 = load i32* %captured, align 4
  %idxprom114 = sext i32 %91 to i64
  %arrayidx115 = getelementptr inbounds [14 x i32]* @material, i32 0, i64 %idxprom114
  %92 = load i32* %arrayidx115, align 4
  %call116 = call i32 @softboundcets_abs(i32 %92) #5
  %add117 = add nsw i32 %call116, 15
  %93 = load i32* %from, align 4
  %idxprom118 = sext i32 %93 to i64
  %arrayidx119 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom118
  %94 = load i32* %arrayidx119, align 4
  %idxprom120 = sext i32 %94 to i64
  %arrayidx121 = getelementptr inbounds [14 x i32]* @material, i32 0, i64 %idxprom120
  %95 = load i32* %arrayidx121, align 4
  %call122 = call i32 @softboundcets_abs(i32 %95) #5
  %cmp123 = icmp sge i32 %add117, %call122
  br i1 %cmp123, label %if.then124, label %if.else137

if.then124:                                       ; preds = %if.then113
  %96 = load i32* %captured, align 4
  %idxprom125 = sext i32 %96 to i64
  %arrayidx126 = getelementptr inbounds [14 x i32]* @material, i32 0, i64 %idxprom125
  %97 = load i32* %arrayidx126, align 4
  %call127 = call i32 @softboundcets_abs(i32 %97) #5
  %98 = load i32* %from, align 4
  %idxprom128 = sext i32 %98 to i64
  %arrayidx129 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom128
  %99 = load i32* %arrayidx129, align 4
  %idxprom130 = sext i32 %99 to i64
  %arrayidx131 = getelementptr inbounds [14 x i32]* @material, i32 0, i64 %idxprom130
  %100 = load i32* %arrayidx131, align 4
  %call132 = call i32 @softboundcets_abs(i32 %100) #5
  %shr133 = ashr i32 %call132, 4
  %sub134 = sub nsw i32 %call127, %shr133
  %101 = load i32* %i, align 4
  %idxprom135 = sext i32 %101 to i64
  %102 = load i32** %see_values.addr, align 8
  %bitcast757 = bitcast i32** %see_values.addr to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast757, i8** %base.alloca758, i8** %bound.alloca759)
  %base.load760 = load i8** %base.alloca758
  %bound.load761 = load i8** %bound.alloca759
  %arrayidx136 = getelementptr inbounds i32* %102, i64 %idxprom135
  store i32 %sub134, i32* %arrayidx136, align 4
  br label %if.end143

if.else137:                                       ; preds = %if.then113
  %103 = load i32* @white_to_move, align 4
  %tobool138 = icmp ne i32 %103, 0
  %cond139 = select i1 %tobool138, i32 0, i32 1
  %104 = load i32* %target, align 4
  %105 = load i32* %from, align 4
  %call140 = call i32 @see(i32 %cond139, i32 %104, i32 %105)
  store i32 %call140, i32* %seev, align 4
  %106 = load i32* %seev, align 4
  %107 = load i32* %i, align 4
  %idxprom141 = sext i32 %107 to i64
  %108 = load i32** %see_values.addr, align 8
  %bitcast762 = bitcast i32** %see_values.addr to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast762, i8** %base.alloca763, i8** %bound.alloca764)
  %base.load765 = load i8** %base.alloca763
  %bound.load766 = load i8** %bound.alloca764
  %arrayidx142 = getelementptr inbounds i32* %108, i64 %idxprom141
  store i32 %106, i32* %arrayidx142, align 4
  br label %if.end143

if.end143:                                        ; preds = %if.else137, %if.then124
  br label %if.end144

if.end144:                                        ; preds = %if.end143, %if.then109
  br label %if.end298

if.else145:                                       ; preds = %land.lhs.true107, %land.lhs.true105, %if.else103
  %109 = load i32* %best.addr, align 4
  %cmp146 = icmp eq i32 %109, -2
  br i1 %cmp146, label %if.then147, label %if.else211

if.then147:                                       ; preds = %if.else145
  %110 = load i32* %from, align 4
  %111 = load i32* @ply, align 4
  %add148 = add nsw i32 %111, 1
  %idxprom149 = sext i32 %add148 to i64
  %112 = load i32* @ply, align 4
  %add150 = add nsw i32 %112, 1
  %idxprom151 = sext i32 %add150 to i64
  %arrayidx152 = getelementptr inbounds [300 x [300 x %struct.move_s]]* @pv, i32 0, i64 %idxprom151
  %arrayidx153 = getelementptr inbounds [300 x %struct.move_s]* %arrayidx152, i32 0, i64 %idxprom149
  %from154 = getelementptr inbounds %struct.move_s* %arrayidx153, i32 0, i32 0
  %113 = load i32* %from154, align 4
  %cmp155 = icmp eq i32 %110, %113
  br i1 %cmp155, label %land.lhs.true156, label %if.end210

land.lhs.true156:                                 ; preds = %if.then147
  %114 = load i32* %target, align 4
  %115 = load i32* @ply, align 4
  %add157 = add nsw i32 %115, 1
  %idxprom158 = sext i32 %add157 to i64
  %116 = load i32* @ply, align 4
  %add159 = add nsw i32 %116, 1
  %idxprom160 = sext i32 %add159 to i64
  %arrayidx161 = getelementptr inbounds [300 x [300 x %struct.move_s]]* @pv, i32 0, i64 %idxprom160
  %arrayidx162 = getelementptr inbounds [300 x %struct.move_s]* %arrayidx161, i32 0, i64 %idxprom158
  %target163 = getelementptr inbounds %struct.move_s* %arrayidx162, i32 0, i32 1
  %117 = load i32* %target163, align 4
  %cmp164 = icmp eq i32 %114, %117
  br i1 %cmp164, label %land.lhs.true165, label %if.end210

land.lhs.true165:                                 ; preds = %land.lhs.true156
  %118 = load i32* %promoted, align 4
  %119 = load i32* @ply, align 4
  %add166 = add nsw i32 %119, 1
  %idxprom167 = sext i32 %add166 to i64
  %120 = load i32* @ply, align 4
  %add168 = add nsw i32 %120, 1
  %idxprom169 = sext i32 %add168 to i64
  %arrayidx170 = getelementptr inbounds [300 x [300 x %struct.move_s]]* @pv, i32 0, i64 %idxprom169
  %arrayidx171 = getelementptr inbounds [300 x %struct.move_s]* %arrayidx170, i32 0, i64 %idxprom167
  %promoted172 = getelementptr inbounds %struct.move_s* %arrayidx171, i32 0, i32 3
  %121 = load i32* %promoted172, align 4
  %cmp173 = icmp eq i32 %118, %121
  br i1 %cmp173, label %if.then174, label %if.end210

if.then174:                                       ; preds = %land.lhs.true165
  %122 = load i32* %i, align 4
  %idxprom175 = sext i32 %122 to i64
  %123 = load i32** %move_ordering.addr, align 8
  %bitcast767 = bitcast i32** %move_ordering.addr to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast767, i8** %base.alloca768, i8** %bound.alloca769)
  %base.load770 = load i8** %base.alloca768
  %bound.load771 = load i8** %bound.alloca769
  %arrayidx176 = getelementptr inbounds i32* %123, i64 %idxprom175
  store i32 100000000, i32* %arrayidx176, align 4
  %124 = load i32* %captured, align 4
  %cmp177 = icmp ne i32 %124, 13
  br i1 %cmp177, label %if.then178, label %if.end209

if.then178:                                       ; preds = %if.then174
  %125 = load i32* %captured, align 4
  %idxprom179 = sext i32 %125 to i64
  %arrayidx180 = getelementptr inbounds [14 x i32]* @material, i32 0, i64 %idxprom179
  %126 = load i32* %arrayidx180, align 4
  %call181 = call i32 @softboundcets_abs(i32 %126) #5
  %add182 = add nsw i32 %call181, 15
  %127 = load i32* %from, align 4
  %idxprom183 = sext i32 %127 to i64
  %arrayidx184 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom183
  %128 = load i32* %arrayidx184, align 4
  %idxprom185 = sext i32 %128 to i64
  %arrayidx186 = getelementptr inbounds [14 x i32]* @material, i32 0, i64 %idxprom185
  %129 = load i32* %arrayidx186, align 4
  %call187 = call i32 @softboundcets_abs(i32 %129) #5
  %cmp188 = icmp sge i32 %add182, %call187
  br i1 %cmp188, label %if.then189, label %if.else202

if.then189:                                       ; preds = %if.then178
  %130 = load i32* %captured, align 4
  %idxprom190 = sext i32 %130 to i64
  %arrayidx191 = getelementptr inbounds [14 x i32]* @material, i32 0, i64 %idxprom190
  %131 = load i32* %arrayidx191, align 4
  %call192 = call i32 @softboundcets_abs(i32 %131) #5
  %132 = load i32* %from, align 4
  %idxprom193 = sext i32 %132 to i64
  %arrayidx194 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom193
  %133 = load i32* %arrayidx194, align 4
  %idxprom195 = sext i32 %133 to i64
  %arrayidx196 = getelementptr inbounds [14 x i32]* @material, i32 0, i64 %idxprom195
  %134 = load i32* %arrayidx196, align 4
  %call197 = call i32 @softboundcets_abs(i32 %134) #5
  %shr198 = ashr i32 %call197, 4
  %sub199 = sub nsw i32 %call192, %shr198
  %135 = load i32* %i, align 4
  %idxprom200 = sext i32 %135 to i64
  %136 = load i32** %see_values.addr, align 8
  %bitcast801 = bitcast i32** %see_values.addr to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast801, i8** %base.alloca802, i8** %bound.alloca803)
  %base.load804 = load i8** %base.alloca802
  %bound.load805 = load i8** %bound.alloca803
  %arrayidx201 = getelementptr inbounds i32* %136, i64 %idxprom200
  store i32 %sub199, i32* %arrayidx201, align 4
  br label %if.end208

if.else202:                                       ; preds = %if.then178
  %137 = load i32* @white_to_move, align 4
  %tobool203 = icmp ne i32 %137, 0
  %cond204 = select i1 %tobool203, i32 0, i32 1
  %138 = load i32* %target, align 4
  %139 = load i32* %from, align 4
  %call205 = call i32 @see(i32 %cond204, i32 %138, i32 %139)
  store i32 %call205, i32* %seev, align 4
  %140 = load i32* %seev, align 4
  %141 = load i32* %i, align 4
  %idxprom206 = sext i32 %141 to i64
  %142 = load i32** %see_values.addr, align 8
  %bitcast806 = bitcast i32** %see_values.addr to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast806, i8** %base.alloca807, i8** %bound.alloca808)
  %base.load809 = load i8** %base.alloca807
  %bound.load810 = load i8** %bound.alloca808
  %arrayidx207 = getelementptr inbounds i32* %142, i64 %idxprom206
  store i32 %140, i32* %arrayidx207, align 4
  br label %if.end208

if.end208:                                        ; preds = %if.else202, %if.then189
  br label %if.end209

if.end209:                                        ; preds = %if.end208, %if.then174
  br label %if.end210

if.end210:                                        ; preds = %if.end209, %land.lhs.true165, %land.lhs.true156, %if.then147
  br label %if.end297

if.else211:                                       ; preds = %if.else145
  %143 = load i32* @ply, align 4
  %cmp212 = icmp ne i32 %143, 1
  br i1 %cmp212, label %if.then214, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.else211
  %144 = load i32* @i_depth, align 4
  %cmp213 = icmp slt i32 %144, 2
  br i1 %cmp213, label %if.then214, label %if.else281

if.then214:                                       ; preds = %lor.lhs.false, %if.else211
  %145 = load i32* %target, align 4
  %idxprom215 = sext i32 %145 to i64
  %146 = load i32* %from, align 4
  %idxprom216 = sext i32 %146 to i64
  %arrayidx217 = getelementptr inbounds [144 x [144 x i32]]* @history_h, i32 0, i64 %idxprom216
  %arrayidx218 = getelementptr inbounds [144 x i32]* %arrayidx217, i32 0, i64 %idxprom215
  %147 = load i32* %arrayidx218, align 4
  %148 = load i32* %i, align 4
  %idxprom219 = sext i32 %148 to i64
  %149 = load i32** %move_ordering.addr, align 8
  %bitcast722 = bitcast i32** %move_ordering.addr to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast722, i8** %base.alloca723, i8** %bound.alloca724)
  %base.load725 = load i8** %base.alloca723
  %bound.load726 = load i8** %bound.alloca724
  %arrayidx220 = getelementptr inbounds i32* %149, i64 %idxprom219
  %150 = load i32* %arrayidx220, align 4
  %add221 = add i32 %150, %147
  store i32 %add221, i32* %arrayidx220, align 4
  %151 = load i32* %from, align 4
  %152 = load i32* @ply, align 4
  %idxprom222 = sext i32 %152 to i64
  %arrayidx223 = getelementptr inbounds [300 x %struct.move_s]* @killer1, i32 0, i64 %idxprom222
  %from224 = getelementptr inbounds %struct.move_s* %arrayidx223, i32 0, i32 0
  %153 = load i32* %from224, align 4
  %cmp225 = icmp eq i32 %151, %153
  br i1 %cmp225, label %land.lhs.true226, label %if.else240

land.lhs.true226:                                 ; preds = %if.then214
  %154 = load i32* %target, align 4
  %155 = load i32* @ply, align 4
  %idxprom227 = sext i32 %155 to i64
  %arrayidx228 = getelementptr inbounds [300 x %struct.move_s]* @killer1, i32 0, i64 %idxprom227
  %target229 = getelementptr inbounds %struct.move_s* %arrayidx228, i32 0, i32 1
  %156 = load i32* %target229, align 4
  %cmp230 = icmp eq i32 %154, %156
  br i1 %cmp230, label %land.lhs.true231, label %if.else240

land.lhs.true231:                                 ; preds = %land.lhs.true226
  %157 = load i32* %promoted, align 4
  %158 = load i32* @ply, align 4
  %idxprom232 = sext i32 %158 to i64
  %arrayidx233 = getelementptr inbounds [300 x %struct.move_s]* @killer1, i32 0, i64 %idxprom232
  %promoted234 = getelementptr inbounds %struct.move_s* %arrayidx233, i32 0, i32 3
  %159 = load i32* %promoted234, align 4
  %cmp235 = icmp eq i32 %157, %159
  br i1 %cmp235, label %if.then236, label %if.else240

if.then236:                                       ; preds = %land.lhs.true231
  %160 = load i32* %i, align 4
  %idxprom237 = sext i32 %160 to i64
  %161 = load i32** %move_ordering.addr, align 8
  %bitcast791 = bitcast i32** %move_ordering.addr to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast791, i8** %base.alloca792, i8** %bound.alloca793)
  %base.load794 = load i8** %base.alloca792
  %bound.load795 = load i8** %bound.alloca793
  %arrayidx238 = getelementptr inbounds i32* %161, i64 %idxprom237
  %162 = load i32* %arrayidx238, align 4
  %add239 = add nsw i32 %162, 25000000
  store i32 %add239, i32* %arrayidx238, align 4
  br label %if.end280

if.else240:                                       ; preds = %land.lhs.true231, %land.lhs.true226, %if.then214
  %163 = load i32* %from, align 4
  %164 = load i32* @ply, align 4
  %idxprom241 = sext i32 %164 to i64
  %arrayidx242 = getelementptr inbounds [300 x %struct.move_s]* @killer2, i32 0, i64 %idxprom241
  %from243 = getelementptr inbounds %struct.move_s* %arrayidx242, i32 0, i32 0
  %165 = load i32* %from243, align 4
  %cmp244 = icmp eq i32 %163, %165
  br i1 %cmp244, label %land.lhs.true245, label %if.else259

land.lhs.true245:                                 ; preds = %if.else240
  %166 = load i32* %target, align 4
  %167 = load i32* @ply, align 4
  %idxprom246 = sext i32 %167 to i64
  %arrayidx247 = getelementptr inbounds [300 x %struct.move_s]* @killer2, i32 0, i64 %idxprom246
  %target248 = getelementptr inbounds %struct.move_s* %arrayidx247, i32 0, i32 1
  %168 = load i32* %target248, align 4
  %cmp249 = icmp eq i32 %166, %168
  br i1 %cmp249, label %land.lhs.true250, label %if.else259

land.lhs.true250:                                 ; preds = %land.lhs.true245
  %169 = load i32* %promoted, align 4
  %170 = load i32* @ply, align 4
  %idxprom251 = sext i32 %170 to i64
  %arrayidx252 = getelementptr inbounds [300 x %struct.move_s]* @killer2, i32 0, i64 %idxprom251
  %promoted253 = getelementptr inbounds %struct.move_s* %arrayidx252, i32 0, i32 3
  %171 = load i32* %promoted253, align 4
  %cmp254 = icmp eq i32 %169, %171
  br i1 %cmp254, label %if.then255, label %if.else259

if.then255:                                       ; preds = %land.lhs.true250
  %172 = load i32* %i, align 4
  %idxprom256 = sext i32 %172 to i64
  %173 = load i32** %move_ordering.addr, align 8
  %bitcast811 = bitcast i32** %move_ordering.addr to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast811, i8** %base.alloca812, i8** %bound.alloca813)
  %base.load814 = load i8** %base.alloca812
  %bound.load815 = load i8** %bound.alloca813
  %arrayidx257 = getelementptr inbounds i32* %173, i64 %idxprom256
  %174 = load i32* %arrayidx257, align 4
  %add258 = add nsw i32 %174, 20000000
  store i32 %add258, i32* %arrayidx257, align 4
  br label %if.end279

if.else259:                                       ; preds = %land.lhs.true250, %land.lhs.true245, %if.else240
  %175 = load i32* %from, align 4
  %176 = load i32* @ply, align 4
  %idxprom260 = sext i32 %176 to i64
  %arrayidx261 = getelementptr inbounds [300 x %struct.move_s]* @killer3, i32 0, i64 %idxprom260
  %from262 = getelementptr inbounds %struct.move_s* %arrayidx261, i32 0, i32 0
  %177 = load i32* %from262, align 4
  %cmp263 = icmp eq i32 %175, %177
  br i1 %cmp263, label %land.lhs.true264, label %if.end278

land.lhs.true264:                                 ; preds = %if.else259
  %178 = load i32* %target, align 4
  %179 = load i32* @ply, align 4
  %idxprom265 = sext i32 %179 to i64
  %arrayidx266 = getelementptr inbounds [300 x %struct.move_s]* @killer3, i32 0, i64 %idxprom265
  %target267 = getelementptr inbounds %struct.move_s* %arrayidx266, i32 0, i32 1
  %180 = load i32* %target267, align 4
  %cmp268 = icmp eq i32 %178, %180
  br i1 %cmp268, label %land.lhs.true269, label %if.end278

land.lhs.true269:                                 ; preds = %land.lhs.true264
  %181 = load i32* %promoted, align 4
  %182 = load i32* @ply, align 4
  %idxprom270 = sext i32 %182 to i64
  %arrayidx271 = getelementptr inbounds [300 x %struct.move_s]* @killer3, i32 0, i64 %idxprom270
  %promoted272 = getelementptr inbounds %struct.move_s* %arrayidx271, i32 0, i32 3
  %183 = load i32* %promoted272, align 4
  %cmp273 = icmp eq i32 %181, %183
  br i1 %cmp273, label %if.then274, label %if.end278

if.then274:                                       ; preds = %land.lhs.true269
  %184 = load i32* %i, align 4
  %idxprom275 = sext i32 %184 to i64
  %185 = load i32** %move_ordering.addr, align 8
  %bitcast816 = bitcast i32** %move_ordering.addr to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast816, i8** %base.alloca817, i8** %bound.alloca818)
  %base.load819 = load i8** %base.alloca817
  %bound.load820 = load i8** %bound.alloca818
  %arrayidx276 = getelementptr inbounds i32* %185, i64 %idxprom275
  %186 = load i32* %arrayidx276, align 4
  %add277 = add nsw i32 %186, 15000000
  store i32 %add277, i32* %arrayidx276, align 4
  br label %if.end278

if.end278:                                        ; preds = %if.then274, %land.lhs.true269, %land.lhs.true264, %if.else259
  br label %if.end279

if.end279:                                        ; preds = %if.end278, %if.then255
  br label %if.end280

if.end280:                                        ; preds = %if.end279, %if.then236
  br label %if.end296

if.else281:                                       ; preds = %lor.lhs.false
  %187 = load i32* @nodes, align 4
  %div = sdiv i32 %187, 100
  %cmp282 = icmp sgt i32 %div, 100000000
  br i1 %cmp282, label %if.then283, label %if.else289

if.then283:                                       ; preds = %if.else281
  %188 = load i32* %i, align 4
  %idxprom284 = sext i32 %188 to i64
  %bitcast772 = bitcast [512 x i32]* @rootnodecount to i8*
  %bitcast773 = bitcast [512 x i32]* getelementptr inbounds ([512 x i32]* @rootnodecount, i32 1) to i8*
  %arrayidx285 = getelementptr inbounds [512 x i32]* @rootnodecount, i32 0, i64 %idxprom284
  %189 = load i32* %arrayidx285, align 4
  %div286 = udiv i32 %189, 1000
  %190 = load i32* %i, align 4
  %idxprom287 = sext i32 %190 to i64
  %191 = load i32** %move_ordering.addr, align 8
  %bitcast774 = bitcast i32** %move_ordering.addr to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast774, i8** %base.alloca775, i8** %bound.alloca776)
  %base.load777 = load i8** %base.alloca775
  %bound.load778 = load i8** %bound.alloca776
  %arrayidx288 = getelementptr inbounds i32* %191, i64 %idxprom287
  store i32 %div286, i32* %arrayidx288, align 4
  br label %if.end295

if.else289:                                       ; preds = %if.else281
  %192 = load i32* %i, align 4
  %idxprom290 = sext i32 %192 to i64
  %bitcast779 = bitcast [512 x i32]* @rootnodecount to i8*
  %bitcast780 = bitcast [512 x i32]* getelementptr inbounds ([512 x i32]* @rootnodecount, i32 1) to i8*
  %arrayidx291 = getelementptr inbounds [512 x i32]* @rootnodecount, i32 0, i64 %idxprom290
  %193 = load i32* %arrayidx291, align 4
  %div292 = udiv i32 %193, 100
  %194 = load i32* %i, align 4
  %idxprom293 = sext i32 %194 to i64
  %195 = load i32** %move_ordering.addr, align 8
  %bitcast781 = bitcast i32** %move_ordering.addr to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast781, i8** %base.alloca782, i8** %bound.alloca783)
  %base.load784 = load i8** %base.alloca782
  %bound.load785 = load i8** %bound.alloca783
  %arrayidx294 = getelementptr inbounds i32* %195, i64 %idxprom293
  store i32 %div292, i32* %arrayidx294, align 4
  br label %if.end295

if.end295:                                        ; preds = %if.else289, %if.then283
  br label %if.end296

if.end296:                                        ; preds = %if.end295, %if.end280
  br label %if.end297

if.end297:                                        ; preds = %if.end296, %if.end210
  br label %if.end298

if.end298:                                        ; preds = %if.end297, %if.end144
  br label %if.end299

if.end299:                                        ; preds = %if.end298, %if.end102
  br label %for.inc

for.inc:                                          ; preds = %if.end299
  %196 = load i32* %i, align 4
  %inc = add nsw i32 %196, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  br label %if.end543

if.else300:                                       ; preds = %entry
  store i32 0, i32* %i, align 4
  br label %for.cond301

for.cond301:                                      ; preds = %for.inc540, %if.else300
  %197 = load i32* %i, align 4
  %198 = load i32* %num_moves.addr, align 4
  %cmp302 = icmp slt i32 %197, %198
  br i1 %cmp302, label %for.body303, label %for.end542

for.body303:                                      ; preds = %for.cond301
  %199 = load i32* %i, align 4
  %idxprom304 = sext i32 %199 to i64
  %200 = load %struct.move_s** %moves.addr, align 8
  %bitcast602 = bitcast %struct.move_s** %moves.addr to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast602, i8** %base.alloca603, i8** %bound.alloca604)
  %base.load605 = load i8** %base.alloca603
  %bound.load606 = load i8** %bound.alloca604
  %arrayidx305 = getelementptr inbounds %struct.move_s* %200, i64 %idxprom304
  %from306 = getelementptr inbounds %struct.move_s* %arrayidx305, i32 0, i32 0
  %201 = load i32* %from306, align 4
  store i32 %201, i32* %from, align 4
  %202 = load i32* %i, align 4
  %idxprom307 = sext i32 %202 to i64
  %203 = load %struct.move_s** %moves.addr, align 8
  %bitcast607 = bitcast %struct.move_s** %moves.addr to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast607, i8** %base.alloca608, i8** %bound.alloca609)
  %base.load610 = load i8** %base.alloca608
  %bound.load611 = load i8** %bound.alloca609
  %arrayidx308 = getelementptr inbounds %struct.move_s* %203, i64 %idxprom307
  %target309 = getelementptr inbounds %struct.move_s* %arrayidx308, i32 0, i32 1
  %204 = load i32* %target309, align 4
  store i32 %204, i32* %target, align 4
  %205 = load i32* %i, align 4
  %idxprom310 = sext i32 %205 to i64
  %206 = load %struct.move_s** %moves.addr, align 8
  %bitcast612 = bitcast %struct.move_s** %moves.addr to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast612, i8** %base.alloca613, i8** %bound.alloca614)
  %base.load615 = load i8** %base.alloca613
  %bound.load616 = load i8** %bound.alloca614
  %arrayidx311 = getelementptr inbounds %struct.move_s* %206, i64 %idxprom310
  %promoted312 = getelementptr inbounds %struct.move_s* %arrayidx311, i32 0, i32 3
  %207 = load i32* %promoted312, align 4
  store i32 %207, i32* %promoted, align 4
  %208 = load i32* %i, align 4
  %idxprom313 = sext i32 %208 to i64
  %209 = load %struct.move_s** %moves.addr, align 8
  %bitcast617 = bitcast %struct.move_s** %moves.addr to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast617, i8** %base.alloca618, i8** %bound.alloca619)
  %base.load620 = load i8** %base.alloca618
  %bound.load621 = load i8** %bound.alloca619
  %arrayidx314 = getelementptr inbounds %struct.move_s* %209, i64 %idxprom313
  %captured315 = getelementptr inbounds %struct.move_s* %arrayidx314, i32 0, i32 2
  %210 = load i32* %captured315, align 4
  store i32 %210, i32* %captured, align 4
  %211 = load i32* %best.addr, align 4
  %cmp316 = icmp ne i32 %211, -1
  br i1 %cmp316, label %land.lhs.true317, label %if.else355

land.lhs.true317:                                 ; preds = %for.body303
  %212 = load i32* %i, align 4
  %213 = load i32* %best.addr, align 4
  %cmp318 = icmp eq i32 %212, %213
  br i1 %cmp318, label %if.then319, label %if.else355

if.then319:                                       ; preds = %land.lhs.true317
  %214 = load i32* %i, align 4
  %idxprom320 = sext i32 %214 to i64
  %215 = load i32** %move_ordering.addr, align 8
  %bitcast642 = bitcast i32** %move_ordering.addr to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast642, i8** %base.alloca643, i8** %bound.alloca644)
  %base.load645 = load i8** %base.alloca643
  %bound.load646 = load i8** %bound.alloca644
  %arrayidx321 = getelementptr inbounds i32* %215, i64 %idxprom320
  store i32 100000000, i32* %arrayidx321, align 4
  %216 = load i32* %captured, align 4
  %cmp322 = icmp ne i32 %216, 13
  br i1 %cmp322, label %if.then323, label %if.end354

if.then323:                                       ; preds = %if.then319
  %217 = load i32* %captured, align 4
  %idxprom324 = sext i32 %217 to i64
  %arrayidx325 = getelementptr inbounds [14 x i32]* @material, i32 0, i64 %idxprom324
  %218 = load i32* %arrayidx325, align 4
  %call326 = call i32 @softboundcets_abs(i32 %218) #5
  %add327 = add nsw i32 %call326, 15
  %219 = load i32* %from, align 4
  %idxprom328 = sext i32 %219 to i64
  %arrayidx329 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom328
  %220 = load i32* %arrayidx329, align 4
  %idxprom330 = sext i32 %220 to i64
  %arrayidx331 = getelementptr inbounds [14 x i32]* @material, i32 0, i64 %idxprom330
  %221 = load i32* %arrayidx331, align 4
  %call332 = call i32 @softboundcets_abs(i32 %221) #5
  %cmp333 = icmp sge i32 %add327, %call332
  br i1 %cmp333, label %if.then334, label %if.else347

if.then334:                                       ; preds = %if.then323
  %222 = load i32* %captured, align 4
  %idxprom335 = sext i32 %222 to i64
  %arrayidx336 = getelementptr inbounds [14 x i32]* @material, i32 0, i64 %idxprom335
  %223 = load i32* %arrayidx336, align 4
  %call337 = call i32 @softboundcets_abs(i32 %223) #5
  %224 = load i32* %from, align 4
  %idxprom338 = sext i32 %224 to i64
  %arrayidx339 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom338
  %225 = load i32* %arrayidx339, align 4
  %idxprom340 = sext i32 %225 to i64
  %arrayidx341 = getelementptr inbounds [14 x i32]* @material, i32 0, i64 %idxprom340
  %226 = load i32* %arrayidx341, align 4
  %call342 = call i32 @softboundcets_abs(i32 %226) #5
  %shr343 = ashr i32 %call342, 4
  %sub344 = sub nsw i32 %call337, %shr343
  %227 = load i32* %i, align 4
  %idxprom345 = sext i32 %227 to i64
  %228 = load i32** %see_values.addr, align 8
  %bitcast667 = bitcast i32** %see_values.addr to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast667, i8** %base.alloca668, i8** %bound.alloca669)
  %base.load670 = load i8** %base.alloca668
  %bound.load671 = load i8** %bound.alloca669
  %arrayidx346 = getelementptr inbounds i32* %228, i64 %idxprom345
  store i32 %sub344, i32* %arrayidx346, align 4
  br label %if.end353

if.else347:                                       ; preds = %if.then323
  %229 = load i32* @white_to_move, align 4
  %tobool348 = icmp ne i32 %229, 0
  %cond349 = select i1 %tobool348, i32 0, i32 1
  %230 = load i32* %target, align 4
  %231 = load i32* %from, align 4
  %call350 = call i32 @see(i32 %cond349, i32 %230, i32 %231)
  store i32 %call350, i32* %seev, align 4
  %232 = load i32* %seev, align 4
  %233 = load i32* %i, align 4
  %idxprom351 = sext i32 %233 to i64
  %234 = load i32** %see_values.addr, align 8
  %bitcast672 = bitcast i32** %see_values.addr to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast672, i8** %base.alloca673, i8** %bound.alloca674)
  %base.load675 = load i8** %base.alloca673
  %bound.load676 = load i8** %bound.alloca674
  %arrayidx352 = getelementptr inbounds i32* %234, i64 %idxprom351
  store i32 %232, i32* %arrayidx352, align 4
  br label %if.end353

if.end353:                                        ; preds = %if.else347, %if.then334
  br label %if.end354

if.end354:                                        ; preds = %if.end353, %if.then319
  br label %if.end473

if.else355:                                       ; preds = %land.lhs.true317, %for.body303
  %235 = load i32* %best.addr, align 4
  %cmp356 = icmp eq i32 %235, -2
  br i1 %cmp356, label %if.then357, label %if.else421

if.then357:                                       ; preds = %if.else355
  %236 = load i32* %from, align 4
  %237 = load i32* @ply, align 4
  %add358 = add nsw i32 %237, 1
  %idxprom359 = sext i32 %add358 to i64
  %238 = load i32* @ply, align 4
  %add360 = add nsw i32 %238, 1
  %idxprom361 = sext i32 %add360 to i64
  %arrayidx362 = getelementptr inbounds [300 x [300 x %struct.move_s]]* @pv, i32 0, i64 %idxprom361
  %arrayidx363 = getelementptr inbounds [300 x %struct.move_s]* %arrayidx362, i32 0, i64 %idxprom359
  %from364 = getelementptr inbounds %struct.move_s* %arrayidx363, i32 0, i32 0
  %239 = load i32* %from364, align 4
  %cmp365 = icmp eq i32 %236, %239
  br i1 %cmp365, label %land.lhs.true366, label %if.end420

land.lhs.true366:                                 ; preds = %if.then357
  %240 = load i32* %target, align 4
  %241 = load i32* @ply, align 4
  %add367 = add nsw i32 %241, 1
  %idxprom368 = sext i32 %add367 to i64
  %242 = load i32* @ply, align 4
  %add369 = add nsw i32 %242, 1
  %idxprom370 = sext i32 %add369 to i64
  %arrayidx371 = getelementptr inbounds [300 x [300 x %struct.move_s]]* @pv, i32 0, i64 %idxprom370
  %arrayidx372 = getelementptr inbounds [300 x %struct.move_s]* %arrayidx371, i32 0, i64 %idxprom368
  %target373 = getelementptr inbounds %struct.move_s* %arrayidx372, i32 0, i32 1
  %243 = load i32* %target373, align 4
  %cmp374 = icmp eq i32 %240, %243
  br i1 %cmp374, label %land.lhs.true375, label %if.end420

land.lhs.true375:                                 ; preds = %land.lhs.true366
  %244 = load i32* %promoted, align 4
  %245 = load i32* @ply, align 4
  %add376 = add nsw i32 %245, 1
  %idxprom377 = sext i32 %add376 to i64
  %246 = load i32* @ply, align 4
  %add378 = add nsw i32 %246, 1
  %idxprom379 = sext i32 %add378 to i64
  %arrayidx380 = getelementptr inbounds [300 x [300 x %struct.move_s]]* @pv, i32 0, i64 %idxprom379
  %arrayidx381 = getelementptr inbounds [300 x %struct.move_s]* %arrayidx380, i32 0, i64 %idxprom377
  %promoted382 = getelementptr inbounds %struct.move_s* %arrayidx381, i32 0, i32 3
  %247 = load i32* %promoted382, align 4
  %cmp383 = icmp eq i32 %244, %247
  br i1 %cmp383, label %if.then384, label %if.end420

if.then384:                                       ; preds = %land.lhs.true375
  %248 = load i32* %i, align 4
  %idxprom385 = sext i32 %248 to i64
  %249 = load i32** %move_ordering.addr, align 8
  %bitcast702 = bitcast i32** %move_ordering.addr to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast702, i8** %base.alloca703, i8** %bound.alloca704)
  %base.load705 = load i8** %base.alloca703
  %bound.load706 = load i8** %bound.alloca704
  %arrayidx386 = getelementptr inbounds i32* %249, i64 %idxprom385
  store i32 100000000, i32* %arrayidx386, align 4
  %250 = load i32* %captured, align 4
  %cmp387 = icmp ne i32 %250, 13
  br i1 %cmp387, label %if.then388, label %if.end419

if.then388:                                       ; preds = %if.then384
  %251 = load i32* %captured, align 4
  %idxprom389 = sext i32 %251 to i64
  %arrayidx390 = getelementptr inbounds [14 x i32]* @material, i32 0, i64 %idxprom389
  %252 = load i32* %arrayidx390, align 4
  %call391 = call i32 @softboundcets_abs(i32 %252) #5
  %add392 = add nsw i32 %call391, 15
  %253 = load i32* %from, align 4
  %idxprom393 = sext i32 %253 to i64
  %arrayidx394 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom393
  %254 = load i32* %arrayidx394, align 4
  %idxprom395 = sext i32 %254 to i64
  %arrayidx396 = getelementptr inbounds [14 x i32]* @material, i32 0, i64 %idxprom395
  %255 = load i32* %arrayidx396, align 4
  %call397 = call i32 @softboundcets_abs(i32 %255) #5
  %cmp398 = icmp sge i32 %add392, %call397
  br i1 %cmp398, label %if.then399, label %if.else412

if.then399:                                       ; preds = %if.then388
  %256 = load i32* %captured, align 4
  %idxprom400 = sext i32 %256 to i64
  %arrayidx401 = getelementptr inbounds [14 x i32]* @material, i32 0, i64 %idxprom400
  %257 = load i32* %arrayidx401, align 4
  %call402 = call i32 @softboundcets_abs(i32 %257) #5
  %258 = load i32* %from, align 4
  %idxprom403 = sext i32 %258 to i64
  %arrayidx404 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom403
  %259 = load i32* %arrayidx404, align 4
  %idxprom405 = sext i32 %259 to i64
  %arrayidx406 = getelementptr inbounds [14 x i32]* @material, i32 0, i64 %idxprom405
  %260 = load i32* %arrayidx406, align 4
  %call407 = call i32 @softboundcets_abs(i32 %260) #5
  %shr408 = ashr i32 %call407, 4
  %sub409 = sub nsw i32 %call402, %shr408
  %261 = load i32* %i, align 4
  %idxprom410 = sext i32 %261 to i64
  %262 = load i32** %see_values.addr, align 8
  %bitcast747 = bitcast i32** %see_values.addr to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast747, i8** %base.alloca748, i8** %bound.alloca749)
  %base.load750 = load i8** %base.alloca748
  %bound.load751 = load i8** %bound.alloca749
  %arrayidx411 = getelementptr inbounds i32* %262, i64 %idxprom410
  store i32 %sub409, i32* %arrayidx411, align 4
  br label %if.end418

if.else412:                                       ; preds = %if.then388
  %263 = load i32* @white_to_move, align 4
  %tobool413 = icmp ne i32 %263, 0
  %cond414 = select i1 %tobool413, i32 0, i32 1
  %264 = load i32* %target, align 4
  %265 = load i32* %from, align 4
  %call415 = call i32 @see(i32 %cond414, i32 %264, i32 %265)
  store i32 %call415, i32* %seev, align 4
  %266 = load i32* %seev, align 4
  %267 = load i32* %i, align 4
  %idxprom416 = sext i32 %267 to i64
  %268 = load i32** %see_values.addr, align 8
  %bitcast752 = bitcast i32** %see_values.addr to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast752, i8** %base.alloca753, i8** %bound.alloca754)
  %base.load755 = load i8** %base.alloca753
  %bound.load756 = load i8** %bound.alloca754
  %arrayidx417 = getelementptr inbounds i32* %268, i64 %idxprom416
  store i32 %266, i32* %arrayidx417, align 4
  br label %if.end418

if.end418:                                        ; preds = %if.else412, %if.then399
  br label %if.end419

if.end419:                                        ; preds = %if.end418, %if.then384
  br label %if.end420

if.end420:                                        ; preds = %if.end419, %land.lhs.true375, %land.lhs.true366, %if.then357
  br label %if.end472

if.else421:                                       ; preds = %if.else355
  %269 = load i32* %captured, align 4
  %cmp422 = icmp ne i32 %269, 13
  br i1 %cmp422, label %if.then423, label %if.else468

if.then423:                                       ; preds = %if.else421
  %270 = load i32* %captured, align 4
  %idxprom424 = sext i32 %270 to i64
  %arrayidx425 = getelementptr inbounds [14 x i32]* @material, i32 0, i64 %idxprom424
  %271 = load i32* %arrayidx425, align 4
  %call426 = call i32 @softboundcets_abs(i32 %271) #5
  %add427 = add nsw i32 %call426, 15
  %272 = load i32* %from, align 4
  %idxprom428 = sext i32 %272 to i64
  %arrayidx429 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom428
  %273 = load i32* %arrayidx429, align 4
  %idxprom430 = sext i32 %273 to i64
  %arrayidx431 = getelementptr inbounds [14 x i32]* @material, i32 0, i64 %idxprom430
  %274 = load i32* %arrayidx431, align 4
  %call432 = call i32 @softboundcets_abs(i32 %274) #5
  %cmp433 = icmp sge i32 %add427, %call432
  br i1 %cmp433, label %if.then434, label %if.else452

if.then434:                                       ; preds = %if.then423
  %275 = load i32* %captured, align 4
  %idxprom435 = sext i32 %275 to i64
  %arrayidx436 = getelementptr inbounds [14 x i32]* @material, i32 0, i64 %idxprom435
  %276 = load i32* %arrayidx436, align 4
  %call437 = call i32 @softboundcets_abs(i32 %276) #5
  %277 = load i32* %from, align 4
  %idxprom438 = sext i32 %277 to i64
  %arrayidx439 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom438
  %278 = load i32* %arrayidx439, align 4
  %idxprom440 = sext i32 %278 to i64
  %arrayidx441 = getelementptr inbounds [14 x i32]* @material, i32 0, i64 %idxprom440
  %279 = load i32* %arrayidx441, align 4
  %call442 = call i32 @softboundcets_abs(i32 %279) #5
  %shr443 = ashr i32 %call442, 4
  %sub444 = sub nsw i32 %call437, %shr443
  %280 = load i32* %i, align 4
  %idxprom445 = sext i32 %280 to i64
  %281 = load i32** %see_values.addr, align 8
  %bitcast682 = bitcast i32** %see_values.addr to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast682, i8** %base.alloca683, i8** %bound.alloca684)
  %base.load685 = load i8** %base.alloca683
  %bound.load686 = load i8** %bound.alloca684
  %arrayidx446 = getelementptr inbounds i32* %281, i64 %idxprom445
  store i32 %sub444, i32* %arrayidx446, align 4
  %282 = load i32* %i, align 4
  %idxprom447 = sext i32 %282 to i64
  %283 = load i32** %see_values.addr, align 8
  %bitcast687 = bitcast i32** %see_values.addr to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast687, i8** %base.alloca688, i8** %bound.alloca689)
  %base.load690 = load i8** %base.alloca688
  %bound.load691 = load i8** %bound.alloca689
  %arrayidx448 = getelementptr inbounds i32* %283, i64 %idxprom447
  %284 = load i32* %arrayidx448, align 4
  %add449 = add nsw i32 50000000, %284
  %285 = load i32* %i, align 4
  %idxprom450 = sext i32 %285 to i64
  %286 = load i32** %move_ordering.addr, align 8
  %bitcast692 = bitcast i32** %move_ordering.addr to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast692, i8** %base.alloca693, i8** %bound.alloca694)
  %base.load695 = load i8** %base.alloca693
  %bound.load696 = load i8** %bound.alloca694
  %arrayidx451 = getelementptr inbounds i32* %286, i64 %idxprom450
  store i32 %add449, i32* %arrayidx451, align 4
  br label %if.end467

if.else452:                                       ; preds = %if.then423
  %287 = load i32* @white_to_move, align 4
  %tobool453 = icmp ne i32 %287, 0
  %cond454 = select i1 %tobool453, i32 0, i32 1
  %288 = load i32* %target, align 4
  %289 = load i32* %from, align 4
  %call455 = call i32 @see(i32 %cond454, i32 %288, i32 %289)
  store i32 %call455, i32* %seev, align 4
  %290 = load i32* %seev, align 4
  %cmp456 = icmp sge i32 %290, -50
  br i1 %cmp456, label %if.then457, label %if.else461

if.then457:                                       ; preds = %if.else452
  %291 = load i32* %seev, align 4
  %add458 = add nsw i32 50000000, %291
  %292 = load i32* %i, align 4
  %idxprom459 = sext i32 %292 to i64
  %293 = load i32** %move_ordering.addr, align 8
  %bitcast707 = bitcast i32** %move_ordering.addr to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast707, i8** %base.alloca708, i8** %bound.alloca709)
  %base.load710 = load i8** %base.alloca708
  %bound.load711 = load i8** %bound.alloca709
  %arrayidx460 = getelementptr inbounds i32* %293, i64 %idxprom459
  store i32 %add458, i32* %arrayidx460, align 4
  br label %if.end464

if.else461:                                       ; preds = %if.else452
  %294 = load i32* %seev, align 4
  %295 = load i32* %i, align 4
  %idxprom462 = sext i32 %295 to i64
  %296 = load i32** %move_ordering.addr, align 8
  %bitcast712 = bitcast i32** %move_ordering.addr to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast712, i8** %base.alloca713, i8** %bound.alloca714)
  %base.load715 = load i8** %base.alloca713
  %bound.load716 = load i8** %bound.alloca714
  %arrayidx463 = getelementptr inbounds i32* %296, i64 %idxprom462
  store i32 %294, i32* %arrayidx463, align 4
  br label %if.end464

if.end464:                                        ; preds = %if.else461, %if.then457
  %297 = load i32* %seev, align 4
  %298 = load i32* %i, align 4
  %idxprom465 = sext i32 %298 to i64
  %299 = load i32** %see_values.addr, align 8
  %bitcast727 = bitcast i32** %see_values.addr to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast727, i8** %base.alloca728, i8** %bound.alloca729)
  %base.load730 = load i8** %base.alloca728
  %bound.load731 = load i8** %bound.alloca729
  %arrayidx466 = getelementptr inbounds i32* %299, i64 %idxprom465
  store i32 %297, i32* %arrayidx466, align 4
  br label %if.end467

if.end467:                                        ; preds = %if.end464, %if.then434
  br label %if.end471

if.else468:                                       ; preds = %if.else421
  %300 = load i32* %i, align 4
  %idxprom469 = sext i32 %300 to i64
  %301 = load i32** %move_ordering.addr, align 8
  %bitcast657 = bitcast i32** %move_ordering.addr to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast657, i8** %base.alloca658, i8** %bound.alloca659)
  %base.load660 = load i8** %base.alloca658
  %bound.load661 = load i8** %bound.alloca659
  %arrayidx470 = getelementptr inbounds i32* %301, i64 %idxprom469
  store i32 0, i32* %arrayidx470, align 4
  br label %if.end471

if.end471:                                        ; preds = %if.else468, %if.end467
  br label %if.end472

if.end472:                                        ; preds = %if.end471, %if.end420
  br label %if.end473

if.end473:                                        ; preds = %if.end472, %if.end354
  %302 = load i32* %target, align 4
  %idxprom474 = sext i32 %302 to i64
  %303 = load i32* %from, align 4
  %idxprom475 = sext i32 %303 to i64
  %arrayidx476 = getelementptr inbounds [144 x [144 x i32]]* @history_h, i32 0, i64 %idxprom475
  %arrayidx477 = getelementptr inbounds [144 x i32]* %arrayidx476, i32 0, i64 %idxprom474
  %304 = load i32* %arrayidx477, align 4
  %305 = load i32* %i, align 4
  %idxprom478 = sext i32 %305 to i64
  %306 = load i32** %move_ordering.addr, align 8
  %bitcast677 = bitcast i32** %move_ordering.addr to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast677, i8** %base.alloca678, i8** %bound.alloca679)
  %base.load680 = load i8** %base.alloca678
  %bound.load681 = load i8** %bound.alloca679
  %arrayidx479 = getelementptr inbounds i32* %306, i64 %idxprom478
  %307 = load i32* %arrayidx479, align 4
  %add480 = add i32 %307, %304
  store i32 %add480, i32* %arrayidx479, align 4
  %308 = load i32* %from, align 4
  %309 = load i32* @ply, align 4
  %idxprom481 = sext i32 %309 to i64
  %arrayidx482 = getelementptr inbounds [300 x %struct.move_s]* @killer1, i32 0, i64 %idxprom481
  %from483 = getelementptr inbounds %struct.move_s* %arrayidx482, i32 0, i32 0
  %310 = load i32* %from483, align 4
  %cmp484 = icmp eq i32 %308, %310
  br i1 %cmp484, label %land.lhs.true485, label %if.else499

land.lhs.true485:                                 ; preds = %if.end473
  %311 = load i32* %target, align 4
  %312 = load i32* @ply, align 4
  %idxprom486 = sext i32 %312 to i64
  %arrayidx487 = getelementptr inbounds [300 x %struct.move_s]* @killer1, i32 0, i64 %idxprom486
  %target488 = getelementptr inbounds %struct.move_s* %arrayidx487, i32 0, i32 1
  %313 = load i32* %target488, align 4
  %cmp489 = icmp eq i32 %311, %313
  br i1 %cmp489, label %land.lhs.true490, label %if.else499

land.lhs.true490:                                 ; preds = %land.lhs.true485
  %314 = load i32* %promoted, align 4
  %315 = load i32* @ply, align 4
  %idxprom491 = sext i32 %315 to i64
  %arrayidx492 = getelementptr inbounds [300 x %struct.move_s]* @killer1, i32 0, i64 %idxprom491
  %promoted493 = getelementptr inbounds %struct.move_s* %arrayidx492, i32 0, i32 3
  %316 = load i32* %promoted493, align 4
  %cmp494 = icmp eq i32 %314, %316
  br i1 %cmp494, label %if.then495, label %if.else499

if.then495:                                       ; preds = %land.lhs.true490
  %317 = load i32* %i, align 4
  %idxprom496 = sext i32 %317 to i64
  %318 = load i32** %move_ordering.addr, align 8
  %bitcast742 = bitcast i32** %move_ordering.addr to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast742, i8** %base.alloca743, i8** %bound.alloca744)
  %base.load745 = load i8** %base.alloca743
  %bound.load746 = load i8** %bound.alloca744
  %arrayidx497 = getelementptr inbounds i32* %318, i64 %idxprom496
  %319 = load i32* %arrayidx497, align 4
  %add498 = add nsw i32 %319, 25000000
  store i32 %add498, i32* %arrayidx497, align 4
  br label %if.end539

if.else499:                                       ; preds = %land.lhs.true490, %land.lhs.true485, %if.end473
  %320 = load i32* %from, align 4
  %321 = load i32* @ply, align 4
  %idxprom500 = sext i32 %321 to i64
  %arrayidx501 = getelementptr inbounds [300 x %struct.move_s]* @killer2, i32 0, i64 %idxprom500
  %from502 = getelementptr inbounds %struct.move_s* %arrayidx501, i32 0, i32 0
  %322 = load i32* %from502, align 4
  %cmp503 = icmp eq i32 %320, %322
  br i1 %cmp503, label %land.lhs.true504, label %if.else518

land.lhs.true504:                                 ; preds = %if.else499
  %323 = load i32* %target, align 4
  %324 = load i32* @ply, align 4
  %idxprom505 = sext i32 %324 to i64
  %arrayidx506 = getelementptr inbounds [300 x %struct.move_s]* @killer2, i32 0, i64 %idxprom505
  %target507 = getelementptr inbounds %struct.move_s* %arrayidx506, i32 0, i32 1
  %325 = load i32* %target507, align 4
  %cmp508 = icmp eq i32 %323, %325
  br i1 %cmp508, label %land.lhs.true509, label %if.else518

land.lhs.true509:                                 ; preds = %land.lhs.true504
  %326 = load i32* %promoted, align 4
  %327 = load i32* @ply, align 4
  %idxprom510 = sext i32 %327 to i64
  %arrayidx511 = getelementptr inbounds [300 x %struct.move_s]* @killer2, i32 0, i64 %idxprom510
  %promoted512 = getelementptr inbounds %struct.move_s* %arrayidx511, i32 0, i32 3
  %328 = load i32* %promoted512, align 4
  %cmp513 = icmp eq i32 %326, %328
  br i1 %cmp513, label %if.then514, label %if.else518

if.then514:                                       ; preds = %land.lhs.true509
  %329 = load i32* %i, align 4
  %idxprom515 = sext i32 %329 to i64
  %330 = load i32** %move_ordering.addr, align 8
  %bitcast786 = bitcast i32** %move_ordering.addr to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast786, i8** %base.alloca787, i8** %bound.alloca788)
  %base.load789 = load i8** %base.alloca787
  %bound.load790 = load i8** %bound.alloca788
  %arrayidx516 = getelementptr inbounds i32* %330, i64 %idxprom515
  %331 = load i32* %arrayidx516, align 4
  %add517 = add nsw i32 %331, 20000000
  store i32 %add517, i32* %arrayidx516, align 4
  br label %if.end538

if.else518:                                       ; preds = %land.lhs.true509, %land.lhs.true504, %if.else499
  %332 = load i32* %from, align 4
  %333 = load i32* @ply, align 4
  %idxprom519 = sext i32 %333 to i64
  %arrayidx520 = getelementptr inbounds [300 x %struct.move_s]* @killer3, i32 0, i64 %idxprom519
  %from521 = getelementptr inbounds %struct.move_s* %arrayidx520, i32 0, i32 0
  %334 = load i32* %from521, align 4
  %cmp522 = icmp eq i32 %332, %334
  br i1 %cmp522, label %land.lhs.true523, label %if.end537

land.lhs.true523:                                 ; preds = %if.else518
  %335 = load i32* %target, align 4
  %336 = load i32* @ply, align 4
  %idxprom524 = sext i32 %336 to i64
  %arrayidx525 = getelementptr inbounds [300 x %struct.move_s]* @killer3, i32 0, i64 %idxprom524
  %target526 = getelementptr inbounds %struct.move_s* %arrayidx525, i32 0, i32 1
  %337 = load i32* %target526, align 4
  %cmp527 = icmp eq i32 %335, %337
  br i1 %cmp527, label %land.lhs.true528, label %if.end537

land.lhs.true528:                                 ; preds = %land.lhs.true523
  %338 = load i32* %promoted, align 4
  %339 = load i32* @ply, align 4
  %idxprom529 = sext i32 %339 to i64
  %arrayidx530 = getelementptr inbounds [300 x %struct.move_s]* @killer3, i32 0, i64 %idxprom529
  %promoted531 = getelementptr inbounds %struct.move_s* %arrayidx530, i32 0, i32 3
  %340 = load i32* %promoted531, align 4
  %cmp532 = icmp eq i32 %338, %340
  br i1 %cmp532, label %if.then533, label %if.end537

if.then533:                                       ; preds = %land.lhs.true528
  %341 = load i32* %i, align 4
  %idxprom534 = sext i32 %341 to i64
  %342 = load i32** %move_ordering.addr, align 8
  %bitcast796 = bitcast i32** %move_ordering.addr to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast796, i8** %base.alloca797, i8** %bound.alloca798)
  %base.load799 = load i8** %base.alloca797
  %bound.load800 = load i8** %bound.alloca798
  %arrayidx535 = getelementptr inbounds i32* %342, i64 %idxprom534
  %343 = load i32* %arrayidx535, align 4
  %add536 = add nsw i32 %343, 15000000
  store i32 %add536, i32* %arrayidx535, align 4
  br label %if.end537

if.end537:                                        ; preds = %if.then533, %land.lhs.true528, %land.lhs.true523, %if.else518
  br label %if.end538

if.end538:                                        ; preds = %if.end537, %if.then514
  br label %if.end539

if.end539:                                        ; preds = %if.end538, %if.then495
  br label %for.inc540

for.inc540:                                       ; preds = %if.end539
  %344 = load i32* %i, align 4
  %inc541 = add nsw i32 %344, 1
  store i32 %inc541, i32* %i, align 4
  br label %for.cond301

for.end542:                                       ; preds = %for.cond301
  br label %if.end543

if.end543:                                        ; preds = %for.end542, %for.end
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @perft(i32 %depth) #0 {
entry:
  %depth.addr = alloca i32, align 4
  %depth.addr9 = bitcast i32* %depth.addr to i32*
  %bitcast = bitcast i32* %depth.addr to i8*
  %mtmp = getelementptr i32* %depth.addr9, i32 1
  %bitcast10 = bitcast i32* %mtmp to i8*
  %moves = alloca [512 x %struct.move_s], align 16
  %moves11 = bitcast [512 x %struct.move_s]* %moves to [512 x %struct.move_s]*
  %bitcast12 = bitcast [512 x %struct.move_s]* %moves to i8*
  %mtmp13 = getelementptr [512 x %struct.move_s]* %moves11, i32 1
  %bitcast14 = bitcast [512 x %struct.move_s]* %mtmp13 to i8*
  %num_moves = alloca i32, align 4
  %num_moves15 = bitcast i32* %num_moves to i32*
  %bitcast16 = bitcast i32* %num_moves to i8*
  %mtmp17 = getelementptr i32* %num_moves15, i32 1
  %bitcast18 = bitcast i32* %mtmp17 to i8*
  %i = alloca i32, align 4
  %i19 = bitcast i32* %i to i32*
  %bitcast20 = bitcast i32* %i to i8*
  %mtmp21 = getelementptr i32* %i19, i32 1
  %bitcast22 = bitcast i32* %mtmp21 to i8*
  %ic = alloca i32, align 4
  %ic23 = bitcast i32* %ic to i32*
  %bitcast24 = bitcast i32* %ic to i8*
  %mtmp25 = getelementptr i32* %ic23, i32 1
  %bitcast26 = bitcast i32* %mtmp25 to i8*
  store i32 %depth, i32* %depth.addr, align 4
  store i32 0, i32* %num_moves, align 4
  %0 = load i32* %depth.addr, align 4
  %tobool = icmp ne i32 %0, 0
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  %1 = load i32* @raw_nodes, align 4
  %inc = add nsw i32 %1, 1
  store i32 %inc, i32* @raw_nodes, align 4
  br label %for.end

if.end:                                           ; preds = %entry
  %arrayidx = getelementptr inbounds [512 x %struct.move_s]* %moves, i32 0, i64 0
  call void @__softboundcets_allocate_shadow_stack_space(i32 2)
  call void @__softboundcets_store_base_shadow_stack(i8* %bitcast12, i32 1)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bitcast14, i32 1)
  call void @gen(%struct.move_s* %arrayidx)
  call void @__softboundcets_deallocate_shadow_stack_space()
  %2 = load i32* @numb_moves, align 4
  store i32 %2, i32* %num_moves, align 4
  %call = call i32 @in_check()
  store i32 %call, i32* %ic, align 4
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.end
  %3 = load i32* %i, align 4
  %4 = load i32* %num_moves, align 4
  %cmp = icmp slt i32 %3, %4
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %arrayidx1 = getelementptr inbounds [512 x %struct.move_s]* %moves, i32 0, i64 0
  %5 = load i32* %i, align 4
  call void @__softboundcets_allocate_shadow_stack_space(i32 2)
  call void @__softboundcets_store_base_shadow_stack(i8* %bitcast12, i32 1)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bitcast14, i32 1)
  call void @make(%struct.move_s* %arrayidx1, i32 %5)
  call void @__softboundcets_deallocate_shadow_stack_space()
  %arrayidx2 = getelementptr inbounds [512 x %struct.move_s]* %moves, i32 0, i64 0
  %6 = load i32* %i, align 4
  %7 = load i32* %ic, align 4
  call void @__softboundcets_allocate_shadow_stack_space(i32 2)
  call void @__softboundcets_store_base_shadow_stack(i8* %bitcast12, i32 1)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bitcast14, i32 1)
  %call3 = call i32 @check_legal(%struct.move_s* %arrayidx2, i32 %6, i32 %7)
  call void @__softboundcets_deallocate_shadow_stack_space()
  %tobool4 = icmp ne i32 %call3, 0
  br i1 %tobool4, label %if.then5, label %if.end6

if.then5:                                         ; preds = %for.body
  %8 = load i32* %depth.addr, align 4
  %sub = sub nsw i32 %8, 1
  call void @perft(i32 %sub)
  br label %if.end6

if.end6:                                          ; preds = %if.then5, %for.body
  %arrayidx7 = getelementptr inbounds [512 x %struct.move_s]* %moves, i32 0, i64 0
  %9 = load i32* %i, align 4
  call void @__softboundcets_allocate_shadow_stack_space(i32 2)
  call void @__softboundcets_store_base_shadow_stack(i8* %bitcast12, i32 1)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bitcast14, i32 1)
  call void @unmake(%struct.move_s* %arrayidx7, i32 %9)
  call void @__softboundcets_deallocate_shadow_stack_space()
  br label %for.inc

for.inc:                                          ; preds = %if.end6
  %10 = load i32* %i, align 4
  %inc8 = add nsw i32 %10, 1
  store i32 %inc8, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond, %if.then
  ret void
}

; Function Attrs: nounwind uwtable
define internal i32 @qsearch(i32 %alpha, i32 %beta, i32 %depth) #0 {
entry:
  %retval = alloca i32, align 4
  %retval124 = bitcast i32* %retval to i32*
  %bitcast = bitcast i32* %retval to i8*
  %mtmp = getelementptr i32* %retval124, i32 1
  %bitcast125 = bitcast i32* %mtmp to i8*
  %alpha.addr = alloca i32, align 4
  %alpha.addr126 = bitcast i32* %alpha.addr to i32*
  %bitcast127 = bitcast i32* %alpha.addr to i8*
  %mtmp128 = getelementptr i32* %alpha.addr126, i32 1
  %bitcast129 = bitcast i32* %mtmp128 to i8*
  %beta.addr = alloca i32, align 4
  %beta.addr130 = bitcast i32* %beta.addr to i32*
  %bitcast131 = bitcast i32* %beta.addr to i8*
  %mtmp132 = getelementptr i32* %beta.addr130, i32 1
  %bitcast133 = bitcast i32* %mtmp132 to i8*
  %depth.addr = alloca i32, align 4
  %depth.addr134 = bitcast i32* %depth.addr to i32*
  %bitcast135 = bitcast i32* %depth.addr to i8*
  %mtmp136 = getelementptr i32* %depth.addr134, i32 1
  %bitcast137 = bitcast i32* %mtmp136 to i8*
  %moves = alloca [512 x %struct.move_s], align 16
  %moves138 = bitcast [512 x %struct.move_s]* %moves to [512 x %struct.move_s]*
  %bitcast139 = bitcast [512 x %struct.move_s]* %moves to i8*
  %mtmp140 = getelementptr [512 x %struct.move_s]* %moves138, i32 1
  %bitcast141 = bitcast [512 x %struct.move_s]* %mtmp140 to i8*
  %num_moves = alloca i32, align 4
  %num_moves142 = bitcast i32* %num_moves to i32*
  %bitcast143 = bitcast i32* %num_moves to i8*
  %mtmp144 = getelementptr i32* %num_moves142, i32 1
  %bitcast145 = bitcast i32* %mtmp144 to i8*
  %i = alloca i32, align 4
  %i146 = bitcast i32* %i to i32*
  %bitcast147 = bitcast i32* %i to i8*
  %mtmp148 = getelementptr i32* %i146, i32 1
  %bitcast149 = bitcast i32* %mtmp148 to i8*
  %j = alloca i32, align 4
  %j150 = bitcast i32* %j to i32*
  %bitcast151 = bitcast i32* %j to i8*
  %mtmp152 = getelementptr i32* %j150, i32 1
  %bitcast153 = bitcast i32* %mtmp152 to i8*
  %score = alloca i32, align 4
  %score154 = bitcast i32* %score to i32*
  %bitcast155 = bitcast i32* %score to i8*
  %mtmp156 = getelementptr i32* %score154, i32 1
  %bitcast157 = bitcast i32* %mtmp156 to i8*
  %standpat = alloca i32, align 4
  %standpat158 = bitcast i32* %standpat to i32*
  %bitcast159 = bitcast i32* %standpat to i8*
  %mtmp160 = getelementptr i32* %standpat158, i32 1
  %bitcast161 = bitcast i32* %mtmp160 to i8*
  %move_ordering = alloca [512 x i32], align 16
  %move_ordering162 = bitcast [512 x i32]* %move_ordering to [512 x i32]*
  %bitcast163 = bitcast [512 x i32]* %move_ordering to i8*
  %mtmp164 = getelementptr [512 x i32]* %move_ordering162, i32 1
  %bitcast165 = bitcast [512 x i32]* %mtmp164 to i8*
  %see_values = alloca [512 x i32], align 16
  %see_values166 = bitcast [512 x i32]* %see_values to [512 x i32]*
  %bitcast167 = bitcast [512 x i32]* %see_values to i8*
  %mtmp168 = getelementptr [512 x i32]* %see_values166, i32 1
  %bitcast169 = bitcast [512 x i32]* %mtmp168 to i8*
  %legal_move = alloca i32, align 4
  %legal_move170 = bitcast i32* %legal_move to i32*
  %bitcast171 = bitcast i32* %legal_move to i8*
  %mtmp172 = getelementptr i32* %legal_move170, i32 1
  %bitcast173 = bitcast i32* %mtmp172 to i8*
  %no_moves = alloca i32, align 4
  %no_moves174 = bitcast i32* %no_moves to i32*
  %bitcast175 = bitcast i32* %no_moves to i8*
  %mtmp176 = getelementptr i32* %no_moves174, i32 1
  %bitcast177 = bitcast i32* %mtmp176 to i8*
  %sbest = alloca i32, align 4
  %sbest178 = bitcast i32* %sbest to i32*
  %bitcast179 = bitcast i32* %sbest to i8*
  %mtmp180 = getelementptr i32* %sbest178, i32 1
  %bitcast181 = bitcast i32* %mtmp180 to i8*
  %best_score = alloca i32, align 4
  %best_score182 = bitcast i32* %best_score to i32*
  %bitcast183 = bitcast i32* %best_score to i8*
  %mtmp184 = getelementptr i32* %best_score182, i32 1
  %bitcast185 = bitcast i32* %mtmp184 to i8*
  %best = alloca i32, align 4
  %best186 = bitcast i32* %best to i32*
  %bitcast187 = bitcast i32* %best to i8*
  %mtmp188 = getelementptr i32* %best186, i32 1
  %bitcast189 = bitcast i32* %mtmp188 to i8*
  %delta = alloca i32, align 4
  %delta190 = bitcast i32* %delta to i32*
  %bitcast191 = bitcast i32* %delta to i8*
  %mtmp192 = getelementptr i32* %delta190, i32 1
  %bitcast193 = bitcast i32* %mtmp192 to i8*
  %bound = alloca i32, align 4
  %bound194 = bitcast i32* %bound to i32*
  %bitcast195 = bitcast i32* %bound to i8*
  %mtmp196 = getelementptr i32* %bound194, i32 1
  %bitcast197 = bitcast i32* %mtmp196 to i8*
  %originalalpha = alloca i32, align 4
  %originalalpha198 = bitcast i32* %originalalpha to i32*
  %bitcast199 = bitcast i32* %originalalpha to i8*
  %mtmp200 = getelementptr i32* %originalalpha198, i32 1
  %bitcast201 = bitcast i32* %mtmp200 to i8*
  %oldtime = alloca i32, align 4
  %oldtime202 = bitcast i32* %oldtime to i32*
  %bitcast203 = bitcast i32* %oldtime to i8*
  %mtmp204 = getelementptr i32* %oldtime202, i32 1
  %bitcast205 = bitcast i32* %mtmp204 to i8*
  %seev = alloca i32, align 4
  %seev206 = bitcast i32* %seev to i32*
  %bitcast207 = bitcast i32* %seev to i8*
  %mtmp208 = getelementptr i32* %seev206, i32 1
  %bitcast209 = bitcast i32* %mtmp208 to i8*
  store i32 %alpha, i32* %alpha.addr, align 4
  store i32 %beta, i32* %beta.addr, align 4
  store i32 %depth, i32* %depth.addr, align 4
  store i32 -1000000, i32* %score, align 4
  store i32 1, i32* %no_moves, align 4
  %0 = load i32* @ply, align 4
  %1 = load i32* @ply, align 4
  %idxprom = sext i32 %1 to i64
  %arrayidx = getelementptr inbounds [300 x i32]* @pv_length, i32 0, i64 %idxprom
  store i32 %0, i32* %arrayidx, align 4
  %2 = load i32* @nodes, align 4
  %and = and i32 %2, 65535
  %tobool = icmp ne i32 %and, 0
  br i1 %tobool, label %if.end26, label %if.then

if.then:                                          ; preds = %entry
  %call = call i32 @interrupt()
  %tobool1 = icmp ne i32 %call, 0
  br i1 %tobool1, label %if.then2, label %if.else

if.then2:                                         ; preds = %if.then
  store i32 1, i32* @time_exit, align 4
  store i32 0, i32* %retval
  br label %return

if.else:                                          ; preds = %if.then
  %call3 = call i64 @rtime()
  %3 = load i64* @start_time, align 8
  %call4 = call i32 @rdifftime(i64 %call3, i64 %3)
  %4 = load i32* @time_for_move, align 4
  %cmp = icmp sge i32 %call4, %4
  br i1 %cmp, label %land.lhs.true, label %if.end24

land.lhs.true:                                    ; preds = %if.else
  %5 = load i32* @i_depth, align 4
  %cmp5 = icmp sgt i32 %5, 1
  br i1 %cmp5, label %if.then6, label %if.end24

if.then6:                                         ; preds = %land.lhs.true
  %6 = load i32* @failed, align 4
  %cmp7 = icmp eq i32 %6, 1
  br i1 %cmp7, label %land.lhs.true8, label %if.else23

land.lhs.true8:                                   ; preds = %if.then6
  %7 = load i32* @extendedtime, align 4
  %tobool9 = icmp ne i32 %7, 0
  br i1 %tobool9, label %if.else23, label %land.lhs.true10

land.lhs.true10:                                  ; preds = %land.lhs.true8
  %8 = load i32* @fixed_time, align 4
  %tobool11 = icmp ne i32 %8, 0
  br i1 %tobool11, label %if.else23, label %land.lhs.true12

land.lhs.true12:                                  ; preds = %land.lhs.true10
  %9 = load i32* @go_fast, align 4
  %tobool13 = icmp ne i32 %9, 0
  br i1 %tobool13, label %if.else23, label %land.lhs.true14

land.lhs.true14:                                  ; preds = %land.lhs.true12
  %10 = load i32* @Variant, align 4
  %cmp15 = icmp ne i32 %10, 1
  br i1 %cmp15, label %land.lhs.true16, label %if.else23

land.lhs.true16:                                  ; preds = %land.lhs.true14
  %11 = load i32* @time_left, align 4
  %12 = load i32* @time_for_move, align 4
  %mul = mul nsw i32 %12, 4
  %cmp17 = icmp sgt i32 %mul, 1000
  br i1 %cmp17, label %cond.true, label %cond.false

cond.true:                                        ; preds = %land.lhs.true16
  %13 = load i32* @time_for_move, align 4
  %mul18 = mul nsw i32 %13, 4
  br label %cond.end

cond.false:                                       ; preds = %land.lhs.true16
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %mul18, %cond.true ], [ 1000, %cond.false ]
  %cmp19 = icmp sgt i32 %11, %cond
  br i1 %cmp19, label %if.then20, label %if.else23

if.then20:                                        ; preds = %cond.end
  store i32 1, i32* @extendedtime, align 4
  %14 = load i32* @time_for_move, align 4
  store i32 %14, i32* %oldtime, align 4
  %call21 = call i32 @allocate_time()
  %15 = load i32* @time_for_move, align 4
  %add = add nsw i32 %15, %call21
  store i32 %add, i32* @time_for_move, align 4
  %16 = load i32* %oldtime, align 4
  %17 = load i32* @time_for_move, align 4
  %18 = load i32* @time_left, align 4
  %call22 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([38 x i8]* @.str113, i32 0, i32 0), i32 %16, i32 %17, i32 %18)
  br label %if.end

if.else23:                                        ; preds = %cond.end, %land.lhs.true14, %land.lhs.true12, %land.lhs.true10, %land.lhs.true8, %if.then6
  store i32 1, i32* @time_exit, align 4
  store i32 0, i32* %retval
  br label %return

if.end:                                           ; preds = %if.then20
  br label %if.end24

if.end24:                                         ; preds = %if.end, %land.lhs.true, %if.else
  br label %if.end25

if.end25:                                         ; preds = %if.end24
  br label %if.end26

if.end26:                                         ; preds = %if.end25, %entry
  %19 = load i32* %depth.addr, align 4
  %cmp27 = icmp sle i32 %19, 0
  br i1 %cmp27, label %if.then29, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.end26
  %20 = load i32* @ply, align 4
  %cmp28 = icmp sge i32 %20, 300
  br i1 %cmp28, label %if.then29, label %if.end31

if.then29:                                        ; preds = %lor.lhs.false, %if.end26
  %21 = load i32* %alpha.addr, align 4
  %22 = load i32* %beta.addr, align 4
  %call30 = call i32 @eval(i32 %21, i32 %22)
  store i32 %call30, i32* %score, align 4
  %23 = load i32* %score, align 4
  store i32 %23, i32* %retval
  br label %return

if.end31:                                         ; preds = %lor.lhs.false
  %24 = load i32* @qnodes, align 4
  %inc = add nsw i32 %24, 1
  store i32 %inc, i32* @qnodes, align 4
  %25 = load i32* @nodes, align 4
  %inc32 = add nsw i32 %25, 1
  store i32 %inc32, i32* @nodes, align 4
  %26 = load i32* %alpha.addr, align 4
  store i32 %26, i32* %originalalpha, align 4
  call void @__softboundcets_allocate_shadow_stack_space(i32 3)
  call void @__softboundcets_store_base_shadow_stack(i8* %bitcast195, i32 1)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bitcast197, i32 1)
  call void @__softboundcets_store_base_shadow_stack(i8* %bitcast187, i32 2)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bitcast189, i32 2)
  %call33 = call i32 @QProbeTT(i32* %bound, i32* %best)
  call void @__softboundcets_deallocate_shadow_stack_space()
  switch i32 %call33, label %sw.epilog [
    i32 3, label %sw.bb
    i32 1, label %sw.bb34
    i32 2, label %sw.bb38
    i32 0, label %sw.bb42
    i32 4, label %sw.bb43
  ]

sw.bb:                                            ; preds = %if.end31
  %27 = load i32* %bound, align 4
  store i32 %27, i32* %retval
  br label %return

sw.bb34:                                          ; preds = %if.end31
  %28 = load i32* %bound, align 4
  %29 = load i32* %alpha.addr, align 4
  %cmp35 = icmp sle i32 %28, %29
  br i1 %cmp35, label %if.then36, label %if.end37

if.then36:                                        ; preds = %sw.bb34
  %30 = load i32* %bound, align 4
  store i32 %30, i32* %retval
  br label %return

if.end37:                                         ; preds = %sw.bb34
  br label %sw.epilog

sw.bb38:                                          ; preds = %if.end31
  %31 = load i32* %bound, align 4
  %32 = load i32* %beta.addr, align 4
  %cmp39 = icmp sge i32 %31, %32
  br i1 %cmp39, label %if.then40, label %if.end41

if.then40:                                        ; preds = %sw.bb38
  %33 = load i32* %bound, align 4
  store i32 %33, i32* %retval
  br label %return

if.end41:                                         ; preds = %sw.bb38
  br label %sw.epilog

sw.bb42:                                          ; preds = %if.end31
  br label %sw.epilog

sw.bb43:                                          ; preds = %if.end31
  store i32 -1, i32* %best, align 4
  br label %sw.epilog

sw.epilog:                                        ; preds = %sw.bb43, %sw.bb42, %if.end41, %if.end37, %if.end31
  %34 = load i32* %alpha.addr, align 4
  %35 = load i32* %beta.addr, align 4
  %call44 = call i32 @eval(i32 %34, i32 %35)
  store i32 %call44, i32* %standpat, align 4
  %36 = load i32* %standpat, align 4
  %37 = load i32* %beta.addr, align 4
  %cmp45 = icmp sge i32 %36, %37
  br i1 %cmp45, label %if.then46, label %if.else47

if.then46:                                        ; preds = %sw.epilog
  %38 = load i32* %standpat, align 4
  %39 = load i32* %originalalpha, align 4
  %40 = load i32* %beta.addr, align 4
  call void @QStoreTT(i32 %38, i32 %39, i32 %40, i32 500)
  %41 = load i32* %standpat, align 4
  store i32 %41, i32* %retval
  br label %return

if.else47:                                        ; preds = %sw.epilog
  %42 = load i32* %standpat, align 4
  %43 = load i32* %alpha.addr, align 4
  %cmp48 = icmp sgt i32 %42, %43
  br i1 %cmp48, label %if.then49, label %if.end50

if.then49:                                        ; preds = %if.else47
  %44 = load i32* %standpat, align 4
  store i32 %44, i32* %alpha.addr, align 4
  br label %if.end50

if.end50:                                         ; preds = %if.then49, %if.else47
  br label %if.end51

if.end51:                                         ; preds = %if.end50
  store i32 -1, i32* %sbest, align 4
  store i32 -1000000, i32* %best_score, align 4
  store i32 0, i32* %num_moves, align 4
  %arrayidx52 = getelementptr inbounds [512 x %struct.move_s]* %moves, i32 0, i64 0
  call void @__softboundcets_allocate_shadow_stack_space(i32 2)
  call void @__softboundcets_store_base_shadow_stack(i8* %bitcast139, i32 1)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bitcast141, i32 1)
  call void @gen(%struct.move_s* %arrayidx52)
  call void @__softboundcets_deallocate_shadow_stack_space()
  %45 = load i32* @numb_moves, align 4
  store i32 %45, i32* %num_moves, align 4
  %46 = load i32* @kingcap, align 4
  %tobool53 = icmp ne i32 %46, 0
  br i1 %tobool53, label %if.then54, label %if.end55

if.then54:                                        ; preds = %if.end51
  store i32 50000, i32* %retval
  br label %return

if.end55:                                         ; preds = %if.end51
  %47 = load i32* %alpha.addr, align 4
  %sub = sub nsw i32 %47, 150
  %48 = load i32* %standpat, align 4
  %sub56 = sub nsw i32 %sub, %48
  store i32 %sub56, i32* %delta, align 4
  %arrayidx57 = getelementptr inbounds [512 x %struct.move_s]* %moves, i32 0, i64 0
  %arrayidx58 = getelementptr inbounds [512 x i32]* %move_ordering, i32 0, i64 0
  %arrayidx59 = getelementptr inbounds [512 x i32]* %see_values, i32 0, i64 0
  %49 = load i32* %num_moves, align 4
  %50 = load i32* %best, align 4
  call void @__softboundcets_allocate_shadow_stack_space(i32 4)
  call void @__softboundcets_store_base_shadow_stack(i8* %bitcast139, i32 1)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bitcast141, i32 1)
  call void @__softboundcets_store_base_shadow_stack(i8* %bitcast163, i32 2)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bitcast165, i32 2)
  call void @__softboundcets_store_base_shadow_stack(i8* %bitcast167, i32 3)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bitcast169, i32 3)
  call void @order_moves(%struct.move_s* %arrayidx57, i32* %arrayidx58, i32* %arrayidx59, i32 %49, i32 %50)
  call void @__softboundcets_deallocate_shadow_stack_space()
  br label %while.cond

while.cond:                                       ; preds = %if.end123, %if.then72, %if.end55
  %arrayidx60 = getelementptr inbounds [512 x i32]* %move_ordering, i32 0, i64 0
  %51 = load i32* %num_moves, align 4
  call void @__softboundcets_allocate_shadow_stack_space(i32 3)
  call void @__softboundcets_store_base_shadow_stack(i8* %bitcast147, i32 1)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bitcast149, i32 1)
  call void @__softboundcets_store_base_shadow_stack(i8* %bitcast163, i32 2)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bitcast165, i32 2)
  %call61 = call i32 @remove_one(i32* %i, i32* %arrayidx60, i32 %51)
  call void @__softboundcets_deallocate_shadow_stack_space()
  %tobool62 = icmp ne i32 %call61, 0
  br i1 %tobool62, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  store i32 0, i32* %legal_move, align 4
  %52 = load i32* %i, align 4
  %idxprom63 = sext i32 %52 to i64
  %arrayidx64 = getelementptr inbounds [512 x %struct.move_s]* %moves, i32 0, i64 %idxprom63
  %promoted = getelementptr inbounds %struct.move_s* %arrayidx64, i32 0, i32 3
  %53 = load i32* %promoted, align 4
  %tobool65 = icmp ne i32 %53, 0
  br i1 %tobool65, label %if.end74, label %if.then66

if.then66:                                        ; preds = %while.body
  %54 = load i32* %i, align 4
  %idxprom67 = sext i32 %54 to i64
  %arrayidx68 = getelementptr inbounds [512 x i32]* %see_values, i32 0, i64 %idxprom67
  %55 = load i32* %arrayidx68, align 4
  store i32 %55, i32* %seev, align 4
  %56 = load i32* %seev, align 4
  %57 = load i32* %delta, align 4
  %cmp69 = icmp slt i32 %56, %57
  br i1 %cmp69, label %if.then72, label %lor.lhs.false70

lor.lhs.false70:                                  ; preds = %if.then66
  %58 = load i32* %seev, align 4
  %cmp71 = icmp slt i32 %58, 0
  br i1 %cmp71, label %if.then72, label %if.end73

if.then72:                                        ; preds = %lor.lhs.false70, %if.then66
  br label %while.cond

if.end73:                                         ; preds = %lor.lhs.false70
  br label %if.end74

if.end74:                                         ; preds = %if.end73, %while.body
  %arrayidx75 = getelementptr inbounds [512 x %struct.move_s]* %moves, i32 0, i64 0
  %59 = load i32* %i, align 4
  call void @__softboundcets_allocate_shadow_stack_space(i32 2)
  call void @__softboundcets_store_base_shadow_stack(i8* %bitcast139, i32 1)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bitcast141, i32 1)
  call void @make(%struct.move_s* %arrayidx75, i32 %59)
  call void @__softboundcets_deallocate_shadow_stack_space()
  %60 = load i32* %beta.addr, align 4
  %sub76 = sub nsw i32 0, %60
  %61 = load i32* %alpha.addr, align 4
  %sub77 = sub nsw i32 0, %61
  %62 = load i32* %depth.addr, align 4
  %sub78 = sub nsw i32 %62, 1
  %call79 = call i32 @qsearch(i32 %sub76, i32 %sub77, i32 %sub78)
  %sub80 = sub nsw i32 0, %call79
  store i32 %sub80, i32* %score, align 4
  %63 = load i32* %score, align 4
  %cmp81 = icmp ne i32 %63, -50000
  br i1 %cmp81, label %if.then82, label %if.end83

if.then82:                                        ; preds = %if.end74
  store i32 1, i32* %legal_move, align 4
  store i32 0, i32* %no_moves, align 4
  br label %if.end83

if.end83:                                         ; preds = %if.then82, %if.end74
  %arrayidx84 = getelementptr inbounds [512 x %struct.move_s]* %moves, i32 0, i64 0
  %64 = load i32* %i, align 4
  call void @__softboundcets_allocate_shadow_stack_space(i32 2)
  call void @__softboundcets_store_base_shadow_stack(i8* %bitcast139, i32 1)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bitcast141, i32 1)
  call void @unmake(%struct.move_s* %arrayidx84, i32 %64)
  call void @__softboundcets_deallocate_shadow_stack_space()
  %65 = load i32* %score, align 4
  %66 = load i32* %best_score, align 4
  %cmp85 = icmp sgt i32 %65, %66
  br i1 %cmp85, label %land.lhs.true86, label %if.end89

land.lhs.true86:                                  ; preds = %if.end83
  %67 = load i32* %legal_move, align 4
  %tobool87 = icmp ne i32 %67, 0
  br i1 %tobool87, label %if.then88, label %if.end89

if.then88:                                        ; preds = %land.lhs.true86
  %68 = load i32* %score, align 4
  store i32 %68, i32* %best_score, align 4
  br label %if.end89

if.end89:                                         ; preds = %if.then88, %land.lhs.true86, %if.end83
  %69 = load i32* %score, align 4
  %70 = load i32* %alpha.addr, align 4
  %cmp90 = icmp sgt i32 %69, %70
  br i1 %cmp90, label %land.lhs.true91, label %if.end123

land.lhs.true91:                                  ; preds = %if.end89
  %71 = load i32* %legal_move, align 4
  %tobool92 = icmp ne i32 %71, 0
  br i1 %tobool92, label %if.then93, label %if.end123

if.then93:                                        ; preds = %land.lhs.true91
  %72 = load i32* %i, align 4
  store i32 %72, i32* %best, align 4
  %73 = load i32* %score, align 4
  %74 = load i32* %beta.addr, align 4
  %cmp94 = icmp sge i32 %73, %74
  br i1 %cmp94, label %if.then95, label %if.end96

if.then95:                                        ; preds = %if.then93
  %75 = load i32* %score, align 4
  %76 = load i32* %originalalpha, align 4
  %77 = load i32* %beta.addr, align 4
  %78 = load i32* %i, align 4
  call void @QStoreTT(i32 %75, i32 %76, i32 %77, i32 %78)
  %79 = load i32* %score, align 4
  store i32 %79, i32* %retval
  br label %return

if.end96:                                         ; preds = %if.then93
  %80 = load i32* %score, align 4
  store i32 %80, i32* %alpha.addr, align 4
  %81 = load i32* @ply, align 4
  %idxprom97 = sext i32 %81 to i64
  %82 = load i32* @ply, align 4
  %idxprom98 = sext i32 %82 to i64
  %arrayidx99 = getelementptr inbounds [300 x [300 x %struct.move_s]]* @pv, i32 0, i64 %idxprom98
  %arrayidx100 = getelementptr inbounds [300 x %struct.move_s]* %arrayidx99, i32 0, i64 %idxprom97
  %83 = load i32* %i, align 4
  %idxprom101 = sext i32 %83 to i64
  %arrayidx102 = getelementptr inbounds [512 x %struct.move_s]* %moves, i32 0, i64 %idxprom101
  %84 = bitcast %struct.move_s* %arrayidx100 to i8*
  %85 = bitcast %struct.move_s* %arrayidx102 to i8*
  call void @__softboundcets_memcopy_check(i8* %84, i8* %85, i64 24, i8* null, i8* inttoptr (i64 281474976710656 to i8*), i8* %bitcast139, i8* %bitcast141)
  call void @__softboundcets_copy_metadata(i8* %84, i8* %85, i64 24)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %84, i8* %85, i64 24, i32 4, i1 false)
  %86 = load i32* @ply, align 4
  %add103 = add nsw i32 %86, 1
  store i32 %add103, i32* %j, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.end96
  %87 = load i32* %j, align 4
  %88 = load i32* @ply, align 4
  %add104 = add nsw i32 %88, 1
  %idxprom105 = sext i32 %add104 to i64
  %arrayidx106 = getelementptr inbounds [300 x i32]* @pv_length, i32 0, i64 %idxprom105
  %89 = load i32* %arrayidx106, align 4
  %cmp107 = icmp slt i32 %87, %89
  br i1 %cmp107, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %90 = load i32* %j, align 4
  %idxprom108 = sext i32 %90 to i64
  %91 = load i32* @ply, align 4
  %idxprom109 = sext i32 %91 to i64
  %arrayidx110 = getelementptr inbounds [300 x [300 x %struct.move_s]]* @pv, i32 0, i64 %idxprom109
  %arrayidx111 = getelementptr inbounds [300 x %struct.move_s]* %arrayidx110, i32 0, i64 %idxprom108
  %92 = load i32* %j, align 4
  %idxprom112 = sext i32 %92 to i64
  %93 = load i32* @ply, align 4
  %add113 = add nsw i32 %93, 1
  %idxprom114 = sext i32 %add113 to i64
  %arrayidx115 = getelementptr inbounds [300 x [300 x %struct.move_s]]* @pv, i32 0, i64 %idxprom114
  %arrayidx116 = getelementptr inbounds [300 x %struct.move_s]* %arrayidx115, i32 0, i64 %idxprom112
  %94 = bitcast %struct.move_s* %arrayidx111 to i8*
  %95 = bitcast %struct.move_s* %arrayidx116 to i8*
  call void @__softboundcets_memcopy_check(i8* %94, i8* %95, i64 24, i8* null, i8* inttoptr (i64 281474976710656 to i8*), i8* null, i8* inttoptr (i64 281474976710656 to i8*))
  call void @__softboundcets_copy_metadata(i8* %94, i8* %95, i64 24)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %94, i8* %95, i64 24, i32 4, i1 false)
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %96 = load i32* %j, align 4
  %inc117 = add nsw i32 %96, 1
  store i32 %inc117, i32* %j, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %97 = load i32* @ply, align 4
  %add118 = add nsw i32 %97, 1
  %idxprom119 = sext i32 %add118 to i64
  %arrayidx120 = getelementptr inbounds [300 x i32]* @pv_length, i32 0, i64 %idxprom119
  %98 = load i32* %arrayidx120, align 4
  %99 = load i32* @ply, align 4
  %idxprom121 = sext i32 %99 to i64
  %arrayidx122 = getelementptr inbounds [300 x i32]* @pv_length, i32 0, i64 %idxprom121
  store i32 %98, i32* %arrayidx122, align 4
  br label %if.end123

if.end123:                                        ; preds = %for.end, %land.lhs.true91, %if.end89
  br label %while.cond

while.end:                                        ; preds = %while.cond
  %100 = load i32* %alpha.addr, align 4
  %101 = load i32* %originalalpha, align 4
  %102 = load i32* %beta.addr, align 4
  %103 = load i32* %best, align 4
  call void @QStoreTT(i32 %100, i32 %101, i32 %102, i32 %103)
  %104 = load i32* %alpha.addr, align 4
  store i32 %104, i32* %retval
  br label %return

return:                                           ; preds = %while.end, %if.then95, %if.then54, %if.then46, %if.then40, %if.then36, %sw.bb, %if.then29, %if.else23, %if.then2
  %105 = load i32* %retval
  ret i32 %105
}

; Function Attrs: nounwind uwtable
define internal i32 @remove_one(i32* %marker, i32* %move_ordering, i32 %num_moves) #0 {
entry:
  %base.alloca57 = alloca i8*
  %bound.alloca58 = alloca i8*
  %base.alloca52 = alloca i8*
  %bound.alloca53 = alloca i8*
  %base.alloca47 = alloca i8*
  %bound.alloca48 = alloca i8*
  %base.alloca42 = alloca i8*
  %bound.alloca43 = alloca i8*
  %base.alloca37 = alloca i8*
  %bound.alloca38 = alloca i8*
  %base.alloca32 = alloca i8*
  %bound.alloca33 = alloca i8*
  %base.alloca = alloca i8*
  %bound.alloca = alloca i8*
  %0 = call i8* @__softboundcets_load_base_shadow_stack(i32 2)
  %1 = call i8* @__softboundcets_load_bound_shadow_stack(i32 2)
  %2 = call i8* @__softboundcets_load_base_shadow_stack(i32 1)
  %3 = call i8* @__softboundcets_load_bound_shadow_stack(i32 1)
  %retval = alloca i32, align 4
  %retval8 = bitcast i32* %retval to i32*
  %bitcast = bitcast i32* %retval to i8*
  %mtmp = getelementptr i32* %retval8, i32 1
  %bitcast9 = bitcast i32* %mtmp to i8*
  %marker.addr = alloca i32*, align 8
  %marker.addr10 = bitcast i32** %marker.addr to i32**
  %bitcast11 = bitcast i32** %marker.addr to i8*
  %mtmp12 = getelementptr i32** %marker.addr10, i32 1
  %bitcast13 = bitcast i32** %mtmp12 to i8*
  %move_ordering.addr = alloca i32*, align 8
  %move_ordering.addr14 = bitcast i32** %move_ordering.addr to i32**
  %bitcast15 = bitcast i32** %move_ordering.addr to i8*
  %mtmp16 = getelementptr i32** %move_ordering.addr14, i32 1
  %bitcast17 = bitcast i32** %mtmp16 to i8*
  %num_moves.addr = alloca i32, align 4
  %num_moves.addr18 = bitcast i32* %num_moves.addr to i32*
  %bitcast19 = bitcast i32* %num_moves.addr to i8*
  %mtmp20 = getelementptr i32* %num_moves.addr18, i32 1
  %bitcast21 = bitcast i32* %mtmp20 to i8*
  %i = alloca i32, align 4
  %i22 = bitcast i32* %i to i32*
  %bitcast23 = bitcast i32* %i to i8*
  %mtmp24 = getelementptr i32* %i22, i32 1
  %bitcast25 = bitcast i32* %mtmp24 to i8*
  %best = alloca i32, align 4
  %best26 = bitcast i32* %best to i32*
  %bitcast27 = bitcast i32* %best to i8*
  %mtmp28 = getelementptr i32* %best26, i32 1
  %bitcast29 = bitcast i32* %mtmp28 to i8*
  store i32* %marker, i32** %marker.addr, align 8
  %bitcast61 = bitcast i32** %marker.addr to i8*
  call void @__softboundcets_metadata_store(i8* %bitcast61, i8* %2, i8* %3)
  store i32* %move_ordering, i32** %move_ordering.addr, align 8
  %bitcast62 = bitcast i32** %move_ordering.addr to i8*
  call void @__softboundcets_metadata_store(i8* %bitcast62, i8* %0, i8* %1)
  store i32 %num_moves, i32* %num_moves.addr, align 4
  store i32 -1000000, i32* %best, align 4
  %4 = load i32** %marker.addr, align 8
  %bitcast30 = bitcast i32** %marker.addr to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast30, i8** %base.alloca, i8** %bound.alloca)
  %base.load = load i8** %base.alloca
  %bound.load = load i8** %bound.alloca
  store i32 -1000000, i32* %4, align 4
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %5 = load i32* %i, align 4
  %6 = load i32* %num_moves.addr, align 4
  %cmp = icmp slt i32 %5, %6
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %7 = load i32* %i, align 4
  %idxprom = sext i32 %7 to i64
  %8 = load i32** %move_ordering.addr, align 8
  %bitcast31 = bitcast i32** %move_ordering.addr to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast31, i8** %base.alloca32, i8** %bound.alloca33)
  %base.load34 = load i8** %base.alloca32
  %bound.load35 = load i8** %bound.alloca33
  %arrayidx = getelementptr inbounds i32* %8, i64 %idxprom
  %9 = load i32* %arrayidx, align 4
  %10 = load i32* %best, align 4
  %cmp1 = icmp sgt i32 %9, %10
  br i1 %cmp1, label %if.then, label %if.end

if.then:                                          ; preds = %for.body
  %11 = load i32* %i, align 4
  %12 = load i32** %marker.addr, align 8
  %bitcast41 = bitcast i32** %marker.addr to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast41, i8** %base.alloca42, i8** %bound.alloca43)
  %base.load44 = load i8** %base.alloca42
  %bound.load45 = load i8** %bound.alloca43
  store i32 %11, i32* %12, align 4
  %13 = load i32* %i, align 4
  %idxprom2 = sext i32 %13 to i64
  %14 = load i32** %move_ordering.addr, align 8
  %bitcast46 = bitcast i32** %move_ordering.addr to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast46, i8** %base.alloca47, i8** %bound.alloca48)
  %base.load49 = load i8** %base.alloca47
  %bound.load50 = load i8** %bound.alloca48
  %arrayidx3 = getelementptr inbounds i32* %14, i64 %idxprom2
  %15 = load i32* %arrayidx3, align 4
  store i32 %15, i32* %best, align 4
  br label %if.end

if.end:                                           ; preds = %if.then, %for.body
  br label %for.inc

for.inc:                                          ; preds = %if.end
  %16 = load i32* %i, align 4
  %inc = add nsw i32 %16, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %17 = load i32** %marker.addr, align 8
  %bitcast36 = bitcast i32** %marker.addr to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast36, i8** %base.alloca37, i8** %bound.alloca38)
  %base.load39 = load i8** %base.alloca37
  %bound.load40 = load i8** %bound.alloca38
  %18 = load i32* %17, align 4
  %cmp4 = icmp sgt i32 %18, -1000000
  br i1 %cmp4, label %if.then5, label %if.else

if.then5:                                         ; preds = %for.end
  %19 = load i32** %marker.addr, align 8
  %bitcast51 = bitcast i32** %marker.addr to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast51, i8** %base.alloca52, i8** %bound.alloca53)
  %base.load54 = load i8** %base.alloca52
  %bound.load55 = load i8** %bound.alloca53
  %20 = load i32* %19, align 4
  %idxprom6 = sext i32 %20 to i64
  %21 = load i32** %move_ordering.addr, align 8
  %bitcast56 = bitcast i32** %move_ordering.addr to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast56, i8** %base.alloca57, i8** %bound.alloca58)
  %base.load59 = load i8** %base.alloca57
  %bound.load60 = load i8** %bound.alloca58
  %arrayidx7 = getelementptr inbounds i32* %21, i64 %idxprom6
  store i32 -1000000, i32* %arrayidx7, align 4
  store i32 1, i32* %retval
  br label %return

if.else:                                          ; preds = %for.end
  store i32 0, i32* %retval
  br label %return

return:                                           ; preds = %if.else, %if.then5
  %22 = load i32* %retval
  ret i32 %22
}

; Function Attrs: nounwind uwtable
define internal i32 @search(i32 %alpha, i32 %beta, i32 %depth, i32 %is_null) #0 {
entry:
  %retval = alloca i32, align 4
  %retval834 = bitcast i32* %retval to i32*
  %bitcast = bitcast i32* %retval to i8*
  %mtmp = getelementptr i32* %retval834, i32 1
  %bitcast835 = bitcast i32* %mtmp to i8*
  %alpha.addr = alloca i32, align 4
  %alpha.addr836 = bitcast i32* %alpha.addr to i32*
  %bitcast837 = bitcast i32* %alpha.addr to i8*
  %mtmp838 = getelementptr i32* %alpha.addr836, i32 1
  %bitcast839 = bitcast i32* %mtmp838 to i8*
  %beta.addr = alloca i32, align 4
  %beta.addr840 = bitcast i32* %beta.addr to i32*
  %bitcast841 = bitcast i32* %beta.addr to i8*
  %mtmp842 = getelementptr i32* %beta.addr840, i32 1
  %bitcast843 = bitcast i32* %mtmp842 to i8*
  %depth.addr = alloca i32, align 4
  %depth.addr844 = bitcast i32* %depth.addr to i32*
  %bitcast845 = bitcast i32* %depth.addr to i8*
  %mtmp846 = getelementptr i32* %depth.addr844, i32 1
  %bitcast847 = bitcast i32* %mtmp846 to i8*
  %is_null.addr = alloca i32, align 4
  %is_null.addr848 = bitcast i32* %is_null.addr to i32*
  %bitcast849 = bitcast i32* %is_null.addr to i8*
  %mtmp850 = getelementptr i32* %is_null.addr848, i32 1
  %bitcast851 = bitcast i32* %mtmp850 to i8*
  %moves = alloca [512 x %struct.move_s], align 16
  %moves852 = bitcast [512 x %struct.move_s]* %moves to [512 x %struct.move_s]*
  %bitcast853 = bitcast [512 x %struct.move_s]* %moves to i8*
  %mtmp854 = getelementptr [512 x %struct.move_s]* %moves852, i32 1
  %bitcast855 = bitcast [512 x %struct.move_s]* %mtmp854 to i8*
  %num_moves = alloca i32, align 4
  %num_moves856 = bitcast i32* %num_moves to i32*
  %bitcast857 = bitcast i32* %num_moves to i8*
  %mtmp858 = getelementptr i32* %num_moves856, i32 1
  %bitcast859 = bitcast i32* %mtmp858 to i8*
  %i = alloca i32, align 4
  %i860 = bitcast i32* %i to i32*
  %bitcast861 = bitcast i32* %i to i8*
  %mtmp862 = getelementptr i32* %i860, i32 1
  %bitcast863 = bitcast i32* %mtmp862 to i8*
  %j = alloca i32, align 4
  %j864 = bitcast i32* %j to i32*
  %bitcast865 = bitcast i32* %j to i8*
  %mtmp866 = getelementptr i32* %j864, i32 1
  %bitcast867 = bitcast i32* %mtmp866 to i8*
  %score = alloca i32, align 4
  %score868 = bitcast i32* %score to i32*
  %bitcast869 = bitcast i32* %score to i8*
  %mtmp870 = getelementptr i32* %score868, i32 1
  %bitcast871 = bitcast i32* %mtmp870 to i8*
  %move_ordering = alloca [512 x i32], align 16
  %move_ordering872 = bitcast [512 x i32]* %move_ordering to [512 x i32]*
  %bitcast873 = bitcast [512 x i32]* %move_ordering to i8*
  %mtmp874 = getelementptr [512 x i32]* %move_ordering872, i32 1
  %bitcast875 = bitcast [512 x i32]* %mtmp874 to i8*
  %see_values = alloca [512 x i32], align 16
  %see_values876 = bitcast [512 x i32]* %see_values to [512 x i32]*
  %bitcast877 = bitcast [512 x i32]* %see_values to i8*
  %mtmp878 = getelementptr [512 x i32]* %see_values876, i32 1
  %bitcast879 = bitcast [512 x i32]* %mtmp878 to i8*
  %no_moves = alloca i32, align 4
  %no_moves880 = bitcast i32* %no_moves to i32*
  %bitcast881 = bitcast i32* %no_moves to i8*
  %mtmp882 = getelementptr i32* %no_moves880, i32 1
  %bitcast883 = bitcast i32* %mtmp882 to i8*
  %legal_move = alloca i32, align 4
  %legal_move884 = bitcast i32* %legal_move to i32*
  %bitcast885 = bitcast i32* %legal_move to i8*
  %mtmp886 = getelementptr i32* %legal_move884, i32 1
  %bitcast887 = bitcast i32* %mtmp886 to i8*
  %bound = alloca i32, align 4
  %bound888 = bitcast i32* %bound to i32*
  %bitcast889 = bitcast i32* %bound to i8*
  %mtmp890 = getelementptr i32* %bound888, i32 1
  %bitcast891 = bitcast i32* %mtmp890 to i8*
  %threat = alloca i32, align 4
  %threat892 = bitcast i32* %threat to i32*
  %bitcast893 = bitcast i32* %threat to i8*
  %mtmp894 = getelementptr i32* %threat892, i32 1
  %bitcast895 = bitcast i32* %mtmp894 to i8*
  %donull = alloca i32, align 4
  %donull896 = bitcast i32* %donull to i32*
  %bitcast897 = bitcast i32* %donull to i8*
  %mtmp898 = getelementptr i32* %donull896, i32 1
  %bitcast899 = bitcast i32* %mtmp898 to i8*
  %best = alloca i32, align 4
  %best900 = bitcast i32* %best to i32*
  %bitcast901 = bitcast i32* %best to i8*
  %mtmp902 = getelementptr i32* %best900, i32 1
  %bitcast903 = bitcast i32* %mtmp902 to i8*
  %sbest = alloca i32, align 4
  %sbest904 = bitcast i32* %sbest to i32*
  %bitcast905 = bitcast i32* %sbest to i8*
  %mtmp906 = getelementptr i32* %sbest904, i32 1
  %bitcast907 = bitcast i32* %mtmp906 to i8*
  %best_score = alloca i32, align 4
  %best_score908 = bitcast i32* %best_score to i32*
  %bitcast909 = bitcast i32* %best_score to i8*
  %mtmp910 = getelementptr i32* %best_score908, i32 1
  %bitcast911 = bitcast i32* %mtmp910 to i8*
  %old_ep = alloca i32, align 4
  %old_ep912 = bitcast i32* %old_ep to i32*
  %bitcast913 = bitcast i32* %old_ep to i8*
  %mtmp914 = getelementptr i32* %old_ep912, i32 1
  %bitcast915 = bitcast i32* %mtmp914 to i8*
  %incheck = alloca i32, align 4
  %incheck916 = bitcast i32* %incheck to i32*
  %bitcast917 = bitcast i32* %incheck to i8*
  %mtmp918 = getelementptr i32* %incheck916, i32 1
  %bitcast919 = bitcast i32* %mtmp918 to i8*
  %first = alloca i32, align 4
  %first920 = bitcast i32* %first to i32*
  %bitcast921 = bitcast i32* %first to i8*
  %mtmp922 = getelementptr i32* %first920, i32 1
  %bitcast923 = bitcast i32* %mtmp922 to i8*
  %extend = alloca i32, align 4
  %extend924 = bitcast i32* %extend to i32*
  %bitcast925 = bitcast i32* %extend to i8*
  %mtmp926 = getelementptr i32* %extend924, i32 1
  %bitcast927 = bitcast i32* %mtmp926 to i8*
  %fscore = alloca i32, align 4
  %fscore928 = bitcast i32* %fscore to i32*
  %bitcast929 = bitcast i32* %fscore to i8*
  %mtmp930 = getelementptr i32* %fscore928, i32 1
  %bitcast931 = bitcast i32* %mtmp930 to i8*
  %fmax = alloca i32, align 4
  %fmax932 = bitcast i32* %fmax to i32*
  %bitcast933 = bitcast i32* %fmax to i8*
  %mtmp934 = getelementptr i32* %fmax932, i32 1
  %bitcast935 = bitcast i32* %mtmp934 to i8*
  %selective = alloca i32, align 4
  %selective936 = bitcast i32* %selective to i32*
  %bitcast937 = bitcast i32* %selective to i8*
  %mtmp938 = getelementptr i32* %selective936, i32 1
  %bitcast939 = bitcast i32* %mtmp938 to i8*
  %kswap = alloca %struct.move_s, align 4
  %kswap940 = bitcast %struct.move_s* %kswap to %struct.move_s*
  %bitcast941 = bitcast %struct.move_s* %kswap to i8*
  %mtmp942 = getelementptr %struct.move_s* %kswap940, i32 1
  %bitcast943 = bitcast %struct.move_s* %mtmp942 to i8*
  %ksswap = alloca i32, align 4
  %ksswap944 = bitcast i32* %ksswap to i32*
  %bitcast945 = bitcast i32* %ksswap to i8*
  %mtmp946 = getelementptr i32* %ksswap944, i32 1
  %bitcast947 = bitcast i32* %mtmp946 to i8*
  %originalalpha = alloca i32, align 4
  %originalalpha948 = bitcast i32* %originalalpha to i32*
  %bitcast949 = bitcast i32* %originalalpha to i8*
  %mtmp950 = getelementptr i32* %originalalpha948, i32 1
  %bitcast951 = bitcast i32* %mtmp950 to i8*
  %afterincheck = alloca i32, align 4
  %afterincheck952 = bitcast i32* %afterincheck to i32*
  %bitcast953 = bitcast i32* %afterincheck to i8*
  %mtmp954 = getelementptr i32* %afterincheck952, i32 1
  %bitcast955 = bitcast i32* %mtmp954 to i8*
  %legalmoves = alloca i32, align 4
  %legalmoves956 = bitcast i32* %legalmoves to i32*
  %bitcast957 = bitcast i32* %legalmoves to i8*
  %mtmp958 = getelementptr i32* %legalmoves956, i32 1
  %bitcast959 = bitcast i32* %mtmp958 to i8*
  %dropcut = alloca i32, align 4
  %dropcut960 = bitcast i32* %dropcut to i32*
  %bitcast961 = bitcast i32* %dropcut to i8*
  %mtmp962 = getelementptr i32* %dropcut960, i32 1
  %bitcast963 = bitcast i32* %mtmp962 to i8*
  %oldtime = alloca i32, align 4
  %oldtime964 = bitcast i32* %oldtime to i32*
  %bitcast965 = bitcast i32* %oldtime to i8*
  %mtmp966 = getelementptr i32* %oldtime964, i32 1
  %bitcast967 = bitcast i32* %mtmp966 to i8*
  store i32 %alpha, i32* %alpha.addr, align 4
  store i32 %beta, i32* %beta.addr, align 4
  store i32 %depth, i32* %depth.addr, align 4
  store i32 %is_null, i32* %is_null.addr, align 4
  store i32 -1000000, i32* %score, align 4
  %0 = load i32* @nodes, align 4
  %inc = add nsw i32 %0, 1
  store i32 %inc, i32* @nodes, align 4
  %1 = load i32* @nodes, align 4
  %and = and i32 %1, 65535
  %tobool = icmp ne i32 %and, 0
  br i1 %tobool, label %if.end26, label %if.then

if.then:                                          ; preds = %entry
  %call = call i32 @interrupt()
  %tobool1 = icmp ne i32 %call, 0
  br i1 %tobool1, label %if.then2, label %if.else

if.then2:                                         ; preds = %if.then
  store i32 1, i32* @time_exit, align 4
  store i32 0, i32* %retval
  br label %return

if.else:                                          ; preds = %if.then
  %call3 = call i64 @rtime()
  %2 = load i64* @start_time, align 8
  %call4 = call i32 @rdifftime(i64 %call3, i64 %2)
  %3 = load i32* @time_for_move, align 4
  %cmp = icmp sge i32 %call4, %3
  br i1 %cmp, label %land.lhs.true, label %if.end24

land.lhs.true:                                    ; preds = %if.else
  %4 = load i32* @i_depth, align 4
  %cmp5 = icmp sgt i32 %4, 1
  br i1 %cmp5, label %if.then6, label %if.end24

if.then6:                                         ; preds = %land.lhs.true
  %5 = load i32* @failed, align 4
  %cmp7 = icmp eq i32 %5, 1
  br i1 %cmp7, label %land.lhs.true8, label %if.else23

land.lhs.true8:                                   ; preds = %if.then6
  %6 = load i32* @extendedtime, align 4
  %tobool9 = icmp ne i32 %6, 0
  br i1 %tobool9, label %if.else23, label %land.lhs.true10

land.lhs.true10:                                  ; preds = %land.lhs.true8
  %7 = load i32* @fixed_time, align 4
  %tobool11 = icmp ne i32 %7, 0
  br i1 %tobool11, label %if.else23, label %land.lhs.true12

land.lhs.true12:                                  ; preds = %land.lhs.true10
  %8 = load i32* @go_fast, align 4
  %tobool13 = icmp ne i32 %8, 0
  br i1 %tobool13, label %if.else23, label %land.lhs.true14

land.lhs.true14:                                  ; preds = %land.lhs.true12
  %9 = load i32* @Variant, align 4
  %cmp15 = icmp ne i32 %9, 1
  br i1 %cmp15, label %land.lhs.true16, label %if.else23

land.lhs.true16:                                  ; preds = %land.lhs.true14
  %10 = load i32* @time_left, align 4
  %11 = load i32* @time_for_move, align 4
  %mul = mul nsw i32 %11, 4
  %cmp17 = icmp sgt i32 %mul, 1000
  br i1 %cmp17, label %cond.true, label %cond.false

cond.true:                                        ; preds = %land.lhs.true16
  %12 = load i32* @time_for_move, align 4
  %mul18 = mul nsw i32 %12, 4
  br label %cond.end

cond.false:                                       ; preds = %land.lhs.true16
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %mul18, %cond.true ], [ 1000, %cond.false ]
  %cmp19 = icmp sgt i32 %10, %cond
  br i1 %cmp19, label %if.then20, label %if.else23

if.then20:                                        ; preds = %cond.end
  store i32 1, i32* @extendedtime, align 4
  %13 = load i32* @time_for_move, align 4
  store i32 %13, i32* %oldtime, align 4
  %call21 = call i32 @allocate_time()
  %14 = load i32* @time_for_move, align 4
  %add = add nsw i32 %14, %call21
  store i32 %add, i32* @time_for_move, align 4
  %15 = load i32* %oldtime, align 4
  %16 = load i32* @time_for_move, align 4
  %17 = load i32* @time_left, align 4
  %call22 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([38 x i8]* @.str113, i32 0, i32 0), i32 %15, i32 %16, i32 %17)
  br label %if.end

if.else23:                                        ; preds = %cond.end, %land.lhs.true14, %land.lhs.true12, %land.lhs.true10, %land.lhs.true8, %if.then6
  store i32 1, i32* @time_exit, align 4
  store i32 0, i32* %retval
  br label %return

if.end:                                           ; preds = %if.then20
  br label %if.end24

if.end24:                                         ; preds = %if.end, %land.lhs.true, %if.else
  br label %if.end25

if.end25:                                         ; preds = %if.end24
  br label %if.end26

if.end26:                                         ; preds = %if.end25, %entry
  %18 = load i32* %alpha.addr, align 4
  store i32 %18, i32* %originalalpha, align 4
  store i32 -1000000, i32* %fmax, align 4
  store i32 0, i32* %threat, align 4
  store i32 0, i32* %extend, align 4
  %19 = load i32* @ply, align 4
  %20 = load i32* @ply, align 4
  %idxprom = sext i32 %20 to i64
  %arrayidx = getelementptr inbounds [300 x i32]* @pv_length, i32 0, i64 %idxprom
  store i32 %19, i32* %arrayidx, align 4
  %call27 = call i32 @is_draw()
  %tobool28 = icmp ne i32 %call27, 0
  br i1 %tobool28, label %if.then29, label %if.end30

if.then29:                                        ; preds = %if.end26
  store i32 0, i32* %retval
  br label %return

if.end30:                                         ; preds = %if.end26
  %21 = load i32* @ply, align 4
  %idxprom31 = sext i32 %21 to i64
  %bitcast968 = bitcast [300 x i32]* @checks to i8*
  %bitcast969 = bitcast [300 x i32]* getelementptr inbounds ([300 x i32]* @checks, i32 1) to i8*
  %arrayidx32 = getelementptr inbounds [300 x i32]* @checks, i32 0, i64 %idxprom31
  %22 = load i32* %arrayidx32, align 4
  store i32 %22, i32* %incheck, align 4
  %23 = load i32* @ply, align 4
  %idxprom33 = sext i32 %23 to i64
  %bitcast970 = bitcast [300 x i32]* @singular to i8*
  %bitcast971 = bitcast [300 x i32]* getelementptr inbounds ([300 x i32]* @singular, i32 1) to i8*
  %arrayidx34 = getelementptr inbounds [300 x i32]* @singular, i32 0, i64 %idxprom33
  store i32 0, i32* %arrayidx34, align 4
  %24 = load i32* @ply, align 4
  %idxprom35 = sext i32 %24 to i64
  %bitcast972 = bitcast [300 x i32]* @recaps to i8*
  %bitcast973 = bitcast [300 x i32]* getelementptr inbounds ([300 x i32]* @recaps, i32 1) to i8*
  %arrayidx36 = getelementptr inbounds [300 x i32]* @recaps, i32 0, i64 %idxprom35
  store i32 0, i32* %arrayidx36, align 4
  %25 = load i32* @ply, align 4
  %cmp37 = icmp slt i32 %25, 300
  br i1 %cmp37, label %land.lhs.true38, label %if.else48

land.lhs.true38:                                  ; preds = %if.end30
  %26 = load i32* %incheck, align 4
  %tobool39 = icmp ne i32 %26, 0
  br i1 %tobool39, label %land.lhs.true40, label %if.else48

land.lhs.true40:                                  ; preds = %land.lhs.true38
  %27 = load i32* @ply, align 4
  %28 = load i32* @i_depth, align 4
  %mul41 = mul nsw i32 %28, 2
  %cmp42 = icmp sle i32 %27, %mul41
  br i1 %cmp42, label %if.then44, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %land.lhs.true40
  %29 = load i32* %depth.addr, align 4
  %cmp43 = icmp eq i32 %29, 0
  br i1 %cmp43, label %if.then44, label %if.else48

if.then44:                                        ; preds = %lor.lhs.false, %land.lhs.true40
  %30 = load i32* %depth.addr, align 4
  %inc45 = add nsw i32 %30, 1
  store i32 %inc45, i32* %depth.addr, align 4
  %31 = load i32* @ext_check, align 4
  %inc46 = add i32 %31, 1
  store i32 %inc46, i32* @ext_check, align 4
  %32 = load i32* %extend, align 4
  %inc47 = add nsw i32 %32, 1
  store i32 %inc47, i32* %extend, align 4
  br label %if.end87

if.else48:                                        ; preds = %lor.lhs.false, %land.lhs.true38, %if.end30
  %33 = load i32* @ply, align 4
  %cmp49 = icmp slt i32 %33, 300
  br i1 %cmp49, label %land.lhs.true50, label %if.end86

land.lhs.true50:                                  ; preds = %if.else48
  %34 = load i32* @ply, align 4
  %cmp51 = icmp sgt i32 %34, 2
  br i1 %cmp51, label %land.lhs.true52, label %if.end86

land.lhs.true52:                                  ; preds = %land.lhs.true50
  %35 = load i32* @ply, align 4
  %36 = load i32* @i_depth, align 4
  %mul53 = mul nsw i32 %36, 2
  %cmp54 = icmp sle i32 %35, %mul53
  br i1 %cmp54, label %land.lhs.true55, label %if.end86

land.lhs.true55:                                  ; preds = %land.lhs.true52
  %37 = load i32* @ply, align 4
  %sub = sub nsw i32 %37, 2
  %idxprom56 = sext i32 %sub to i64
  %bitcast974 = bitcast [300 x i32]* @recaps to i8*
  %bitcast975 = bitcast [300 x i32]* getelementptr inbounds ([300 x i32]* @recaps, i32 1) to i8*
  %arrayidx57 = getelementptr inbounds [300 x i32]* @recaps, i32 0, i64 %idxprom56
  %38 = load i32* %arrayidx57, align 4
  %tobool58 = icmp ne i32 %38, 0
  br i1 %tobool58, label %if.end86, label %land.lhs.true59

land.lhs.true59:                                  ; preds = %land.lhs.true55
  %39 = load i32* @cfg_recap, align 4
  %tobool60 = icmp ne i32 %39, 0
  br i1 %tobool60, label %land.lhs.true61, label %if.end86

land.lhs.true61:                                  ; preds = %land.lhs.true59
  %40 = load i32* @ply, align 4
  %sub62 = sub nsw i32 %40, 1
  %idxprom63 = sext i32 %sub62 to i64
  %arrayidx64 = getelementptr inbounds [300 x %struct.move_s]* @path, i32 0, i64 %idxprom63
  %captured = getelementptr inbounds %struct.move_s* %arrayidx64, i32 0, i32 2
  %41 = load i32* %captured, align 4
  %cmp65 = icmp ne i32 %41, 13
  br i1 %cmp65, label %land.lhs.true66, label %if.end86

land.lhs.true66:                                  ; preds = %land.lhs.true61
  %42 = load i32* @ply, align 4
  %sub67 = sub nsw i32 %42, 1
  %idxprom68 = sext i32 %sub67 to i64
  %arrayidx69 = getelementptr inbounds [300 x %struct.move_s]* @path, i32 0, i64 %idxprom68
  %captured70 = getelementptr inbounds %struct.move_s* %arrayidx69, i32 0, i32 2
  %43 = load i32* %captured70, align 4
  %idxprom71 = sext i32 %43 to i64
  %bitcast976 = bitcast [14 x i32]* @search.rc_index to i8*
  %bitcast977 = bitcast [14 x i32]* getelementptr inbounds ([14 x i32]* @search.rc_index, i32 1) to i8*
  %arrayidx72 = getelementptr inbounds [14 x i32]* @search.rc_index, i32 0, i64 %idxprom71
  %44 = load i32* %arrayidx72, align 4
  %45 = load i32* @ply, align 4
  %sub73 = sub nsw i32 %45, 2
  %idxprom74 = sext i32 %sub73 to i64
  %arrayidx75 = getelementptr inbounds [300 x %struct.move_s]* @path, i32 0, i64 %idxprom74
  %captured76 = getelementptr inbounds %struct.move_s* %arrayidx75, i32 0, i32 2
  %46 = load i32* %captured76, align 4
  %idxprom77 = sext i32 %46 to i64
  %bitcast978 = bitcast [14 x i32]* @search.rc_index to i8*
  %bitcast979 = bitcast [14 x i32]* getelementptr inbounds ([14 x i32]* @search.rc_index, i32 1) to i8*
  %arrayidx78 = getelementptr inbounds [14 x i32]* @search.rc_index, i32 0, i64 %idxprom77
  %47 = load i32* %arrayidx78, align 4
  %cmp79 = icmp eq i32 %44, %47
  br i1 %cmp79, label %if.then80, label %if.end86

if.then80:                                        ; preds = %land.lhs.true66
  %48 = load i32* %depth.addr, align 4
  %inc81 = add nsw i32 %48, 1
  store i32 %inc81, i32* %depth.addr, align 4
  %49 = load i32* @ext_recap, align 4
  %inc82 = add i32 %49, 1
  store i32 %inc82, i32* @ext_recap, align 4
  %50 = load i32* %extend, align 4
  %inc83 = add nsw i32 %50, 1
  store i32 %inc83, i32* %extend, align 4
  %51 = load i32* @ply, align 4
  %idxprom84 = sext i32 %51 to i64
  %bitcast980 = bitcast [300 x i32]* @recaps to i8*
  %bitcast981 = bitcast [300 x i32]* getelementptr inbounds ([300 x i32]* @recaps, i32 1) to i8*
  %arrayidx85 = getelementptr inbounds [300 x i32]* @recaps, i32 0, i64 %idxprom84
  store i32 1, i32* %arrayidx85, align 4
  br label %if.end86

if.end86:                                         ; preds = %if.then80, %land.lhs.true66, %land.lhs.true61, %land.lhs.true59, %land.lhs.true55, %land.lhs.true52, %land.lhs.true50, %if.else48
  br label %if.end87

if.end87:                                         ; preds = %if.end86, %if.then44
  %52 = load i32* %depth.addr, align 4
  %cmp88 = icmp sle i32 %52, 0
  br i1 %cmp88, label %if.then91, label %lor.lhs.false89

lor.lhs.false89:                                  ; preds = %if.end87
  %53 = load i32* @ply, align 4
  %cmp90 = icmp sge i32 %53, 300
  br i1 %cmp90, label %if.then91, label %if.end120

if.then91:                                        ; preds = %lor.lhs.false89, %if.end87
  %54 = load i32* @Variant, align 4
  %cmp92 = icmp ne i32 %54, 3
  br i1 %cmp92, label %land.lhs.true93, label %if.else98

land.lhs.true93:                                  ; preds = %if.then91
  %55 = load i32* @Variant, align 4
  %cmp94 = icmp ne i32 %55, 4
  br i1 %cmp94, label %if.then95, label %if.else98

if.then95:                                        ; preds = %land.lhs.true93
  store i32 1, i32* @captures, align 4
  %56 = load i32* %alpha.addr, align 4
  %57 = load i32* %beta.addr, align 4
  %58 = load i32* @ply, align 4
  %sub96 = sub nsw i32 300, %58
  %call97 = call i32 @qsearch(i32 %56, i32 %57, i32 %sub96)
  store i32 %call97, i32* %score, align 4
  store i32 0, i32* @captures, align 4
  %59 = load i32* %score, align 4
  store i32 %59, i32* %retval
  br label %return

if.else98:                                        ; preds = %land.lhs.true93, %if.then91
  %60 = load i32* @Variant, align 4
  %cmp99 = icmp eq i32 %60, 3
  br i1 %cmp99, label %if.then100, label %if.else102

if.then100:                                       ; preds = %if.else98
  %call101 = call i32 @suicide_eval()
  store i32 %call101, i32* %retval
  br label %return

if.else102:                                       ; preds = %if.else98
  %61 = load i32* @Variant, align 4
  %cmp103 = icmp eq i32 %61, 4
  br i1 %cmp103, label %if.then104, label %if.end117

if.then104:                                       ; preds = %if.else102
  %call105 = call i32 @losers_eval()
  store i32 %call105, i32* %i, align 4
  %62 = load i32* %i, align 4
  %call106 = call i32 @softboundcets_abs(i32 %62) #5
  %cmp107 = icmp eq i32 %call106, 1000000
  br i1 %cmp107, label %if.then108, label %if.else116

if.then108:                                       ; preds = %if.then104
  %63 = load i32* %i, align 4
  %cmp109 = icmp sgt i32 %63, 0
  br i1 %cmp109, label %cond.true110, label %cond.false112

cond.true110:                                     ; preds = %if.then108
  %64 = load i32* @ply, align 4
  %sub111 = sub nsw i32 1000000, %64
  br label %cond.end114

cond.false112:                                    ; preds = %if.then108
  %65 = load i32* @ply, align 4
  %add113 = add nsw i32 -1000000, %65
  br label %cond.end114

cond.end114:                                      ; preds = %cond.false112, %cond.true110
  %cond115 = phi i32 [ %sub111, %cond.true110 ], [ %add113, %cond.false112 ]
  store i32 %cond115, i32* %retval
  br label %return

if.else116:                                       ; preds = %if.then104
  %66 = load i32* %i, align 4
  store i32 %66, i32* %retval
  br label %return

if.end117:                                        ; preds = %if.else102
  br label %if.end118

if.end118:                                        ; preds = %if.end117
  br label %if.end119

if.end119:                                        ; preds = %if.end118
  br label %if.end120

if.end120:                                        ; preds = %if.end119, %lor.lhs.false89
  store i32 0, i32* %num_moves, align 4
  store i32 1, i32* %no_moves, align 4
  %67 = load i32* %beta.addr, align 4
  %68 = load i32* %depth.addr, align 4
  call void @__softboundcets_allocate_shadow_stack_space(i32 5)
  call void @__softboundcets_store_base_shadow_stack(i8* %bitcast889, i32 1)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bitcast891, i32 1)
  call void @__softboundcets_store_base_shadow_stack(i8* %bitcast901, i32 2)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bitcast903, i32 2)
  call void @__softboundcets_store_base_shadow_stack(i8* %bitcast893, i32 3)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bitcast895, i32 3)
  call void @__softboundcets_store_base_shadow_stack(i8* %bitcast897, i32 4)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bitcast899, i32 4)
  %call121 = call i32 @ProbeTT(i32* %bound, i32 %67, i32* %best, i32* %threat, i32* %donull, i32 %68)
  call void @__softboundcets_deallocate_shadow_stack_space()
  switch i32 %call121, label %sw.epilog [
    i32 3, label %sw.bb
    i32 1, label %sw.bb122
    i32 2, label %sw.bb126
    i32 0, label %sw.bb130
    i32 4, label %sw.bb131
  ]

sw.bb:                                            ; preds = %if.end120
  %69 = load i32* %bound, align 4
  store i32 %69, i32* %retval
  br label %return

sw.bb122:                                         ; preds = %if.end120
  %70 = load i32* %bound, align 4
  %71 = load i32* %alpha.addr, align 4
  %cmp123 = icmp sle i32 %70, %71
  br i1 %cmp123, label %if.then124, label %if.end125

if.then124:                                       ; preds = %sw.bb122
  %72 = load i32* %bound, align 4
  store i32 %72, i32* %retval
  br label %return

if.end125:                                        ; preds = %sw.bb122
  br label %sw.epilog

sw.bb126:                                         ; preds = %if.end120
  %73 = load i32* %bound, align 4
  %74 = load i32* %beta.addr, align 4
  %cmp127 = icmp sge i32 %73, %74
  br i1 %cmp127, label %if.then128, label %if.end129

if.then128:                                       ; preds = %sw.bb126
  %75 = load i32* %bound, align 4
  store i32 %75, i32* %retval
  br label %return

if.end129:                                        ; preds = %sw.bb126
  br label %sw.epilog

sw.bb130:                                         ; preds = %if.end120
  br label %sw.epilog

sw.bb131:                                         ; preds = %if.end120
  store i32 -1, i32* %best, align 4
  store i32 0, i32* %threat, align 4
  br label %sw.epilog

sw.epilog:                                        ; preds = %sw.bb131, %sw.bb130, %if.end129, %if.end125, %if.end120
  %76 = load i32* %best, align 4
  %cmp132 = icmp eq i32 %76, 500
  br i1 %cmp132, label %if.then133, label %if.end134

if.then133:                                       ; preds = %sw.epilog
  store i32 -1, i32* %best, align 4
  br label %if.end134

if.end134:                                        ; preds = %if.then133, %sw.epilog
  store i32 -1, i32* %sbest, align 4
  store i32 -1000000, i32* %best_score, align 4
  %77 = load i32* @ep_square, align 4
  store i32 %77, i32* %old_ep, align 4
  store i32 0, i32* %legalmoves, align 4
  %78 = load i32* @Variant, align 4
  %cmp135 = icmp eq i32 %78, 4
  br i1 %cmp135, label %if.then136, label %if.end167

if.then136:                                       ; preds = %if.end134
  %call137 = call i32 @losers_eval()
  store i32 %call137, i32* %i, align 4
  %79 = load i32* %i, align 4
  %call138 = call i32 @softboundcets_abs(i32 %79) #5
  %cmp139 = icmp eq i32 %call138, 1000000
  br i1 %cmp139, label %if.then140, label %if.end148

if.then140:                                       ; preds = %if.then136
  %80 = load i32* %i, align 4
  %cmp141 = icmp sgt i32 %80, 0
  br i1 %cmp141, label %cond.true142, label %cond.false144

cond.true142:                                     ; preds = %if.then140
  %81 = load i32* %i, align 4
  %82 = load i32* @ply, align 4
  %sub143 = sub nsw i32 %81, %82
  br label %cond.end146

cond.false144:                                    ; preds = %if.then140
  %83 = load i32* %i, align 4
  %84 = load i32* @ply, align 4
  %add145 = add nsw i32 %83, %84
  br label %cond.end146

cond.end146:                                      ; preds = %cond.false144, %cond.true142
  %cond147 = phi i32 [ %sub143, %cond.true142 ], [ %add145, %cond.false144 ]
  store i32 %cond147, i32* %retval
  br label %return

if.end148:                                        ; preds = %if.then136
  store i32 1, i32* @captures, align 4
  %arrayidx149 = getelementptr inbounds [512 x %struct.move_s]* %moves, i32 0, i64 0
  call void @__softboundcets_allocate_shadow_stack_space(i32 2)
  call void @__softboundcets_store_base_shadow_stack(i8* %bitcast853, i32 1)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bitcast855, i32 1)
  call void @gen(%struct.move_s* %arrayidx149)
  call void @__softboundcets_deallocate_shadow_stack_space()
  %85 = load i32* @numb_moves, align 4
  store i32 %85, i32* %num_moves, align 4
  store i32 0, i32* @captures, align 4
  %86 = load i32* %num_moves, align 4
  %tobool150 = icmp ne i32 %86, 0
  br i1 %tobool150, label %if.then151, label %if.end162

if.then151:                                       ; preds = %if.end148
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.then151
  %87 = load i32* %i, align 4
  %88 = load i32* %num_moves, align 4
  %cmp152 = icmp slt i32 %87, %88
  br i1 %cmp152, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %arrayidx153 = getelementptr inbounds [512 x %struct.move_s]* %moves, i32 0, i64 0
  %89 = load i32* %i, align 4
  call void @__softboundcets_allocate_shadow_stack_space(i32 2)
  call void @__softboundcets_store_base_shadow_stack(i8* %bitcast853, i32 1)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bitcast855, i32 1)
  call void @make(%struct.move_s* %arrayidx153, i32 %89)
  call void @__softboundcets_deallocate_shadow_stack_space()
  %arrayidx154 = getelementptr inbounds [512 x %struct.move_s]* %moves, i32 0, i64 0
  %90 = load i32* %i, align 4
  %91 = load i32* %incheck, align 4
  call void @__softboundcets_allocate_shadow_stack_space(i32 2)
  call void @__softboundcets_store_base_shadow_stack(i8* %bitcast853, i32 1)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bitcast855, i32 1)
  %call155 = call i32 @check_legal(%struct.move_s* %arrayidx154, i32 %90, i32 %91)
  call void @__softboundcets_deallocate_shadow_stack_space()
  %tobool156 = icmp ne i32 %call155, 0
  br i1 %tobool156, label %if.then157, label %if.end159

if.then157:                                       ; preds = %for.body
  %92 = load i32* %legalmoves, align 4
  %inc158 = add nsw i32 %92, 1
  store i32 %inc158, i32* %legalmoves, align 4
  br label %if.end159

if.end159:                                        ; preds = %if.then157, %for.body
  %arrayidx160 = getelementptr inbounds [512 x %struct.move_s]* %moves, i32 0, i64 0
  %93 = load i32* %i, align 4
  call void @__softboundcets_allocate_shadow_stack_space(i32 2)
  call void @__softboundcets_store_base_shadow_stack(i8* %bitcast853, i32 1)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bitcast855, i32 1)
  call void @unmake(%struct.move_s* %arrayidx160, i32 %93)
  call void @__softboundcets_deallocate_shadow_stack_space()
  br label %for.inc

for.inc:                                          ; preds = %if.end159
  %94 = load i32* %i, align 4
  %inc161 = add nsw i32 %94, 1
  store i32 %inc161, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  br label %if.end162

if.end162:                                        ; preds = %for.end, %if.end148
  %95 = load i32* %legalmoves, align 4
  %tobool163 = icmp ne i32 %95, 0
  br i1 %tobool163, label %if.end166, label %if.then164

if.then164:                                       ; preds = %if.end162
  store i32 0, i32* @captures, align 4
  %arrayidx165 = getelementptr inbounds [512 x %struct.move_s]* %moves, i32 0, i64 0
  call void @__softboundcets_allocate_shadow_stack_space(i32 2)
  call void @__softboundcets_store_base_shadow_stack(i8* %bitcast853, i32 1)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bitcast855, i32 1)
  call void @gen(%struct.move_s* %arrayidx165)
  call void @__softboundcets_deallocate_shadow_stack_space()
  %96 = load i32* @numb_moves, align 4
  store i32 %96, i32* %num_moves, align 4
  br label %if.end166

if.end166:                                        ; preds = %if.then164, %if.end162
  store i32 0, i32* %legalmoves, align 4
  br label %if.end167

if.end167:                                        ; preds = %if.end166, %if.end134
  %97 = load i32* %is_null.addr, align 4
  %cmp168 = icmp eq i32 %97, 0
  br i1 %cmp168, label %land.lhs.true169, label %if.else243

land.lhs.true169:                                 ; preds = %if.end167
  %98 = load i32* @phase, align 4
  %cmp170 = icmp ne i32 %98, 2
  br i1 %cmp170, label %land.lhs.true175, label %lor.lhs.false171

lor.lhs.false171:                                 ; preds = %land.lhs.true169
  %99 = load i32* @phase, align 4
  %cmp172 = icmp eq i32 %99, 2
  br i1 %cmp172, label %land.lhs.true173, label %if.else243

land.lhs.true173:                                 ; preds = %lor.lhs.false171
  %100 = load i32* %depth.addr, align 4
  %cmp174 = icmp sle i32 %100, 6
  br i1 %cmp174, label %land.lhs.true175, label %if.else243

land.lhs.true175:                                 ; preds = %land.lhs.true173, %land.lhs.true169
  %101 = load i32* %incheck, align 4
  %tobool176 = icmp ne i32 %101, 0
  br i1 %tobool176, label %if.else243, label %land.lhs.true177

land.lhs.true177:                                 ; preds = %land.lhs.true175
  %102 = load i32* %donull, align 4
  %tobool178 = icmp ne i32 %102, 0
  br i1 %tobool178, label %land.lhs.true179, label %if.else243

land.lhs.true179:                                 ; preds = %land.lhs.true177
  %103 = load i32* @searching_pv, align 4
  %tobool180 = icmp ne i32 %103, 0
  br i1 %tobool180, label %if.else243, label %land.lhs.true181

land.lhs.true181:                                 ; preds = %land.lhs.true179
  %104 = load i32* %threat, align 4
  %cmp182 = icmp eq i32 %104, 0
  br i1 %cmp182, label %land.lhs.true183, label %if.else243

land.lhs.true183:                                 ; preds = %land.lhs.true181
  %105 = load i32* @Variant, align 4
  %cmp184 = icmp ne i32 %105, 3
  br i1 %cmp184, label %land.lhs.true185, label %lor.lhs.false187

land.lhs.true185:                                 ; preds = %land.lhs.true183
  %106 = load i32* @Variant, align 4
  %cmp186 = icmp ne i32 %106, 4
  br i1 %cmp186, label %if.then193, label %lor.lhs.false187

lor.lhs.false187:                                 ; preds = %land.lhs.true185, %land.lhs.true183
  %107 = load i32* @Variant, align 4
  %cmp188 = icmp eq i32 %107, 4
  br i1 %cmp188, label %land.lhs.true189, label %if.else243

land.lhs.true189:                                 ; preds = %lor.lhs.false187
  %arrayidx190 = getelementptr inbounds [512 x %struct.move_s]* %moves, i32 0, i64 0
  %captured191 = getelementptr inbounds %struct.move_s* %arrayidx190, i32 0, i32 2
  %108 = load i32* %captured191, align 4
  %cmp192 = icmp eq i32 %108, 13
  br i1 %cmp192, label %if.then193, label %if.else243

if.then193:                                       ; preds = %land.lhs.true189, %land.lhs.true185
  store i32 0, i32* @ep_square, align 4
  %109 = load i32* @white_to_move, align 4
  %xor = xor i32 %109, 1
  store i32 %xor, i32* @white_to_move, align 4
  %110 = load i32* @ply, align 4
  %inc194 = add nsw i32 %110, 1
  store i32 %inc194, i32* @ply, align 4
  %111 = load i32* @fifty, align 4
  %inc195 = add nsw i32 %111, 1
  store i32 %inc195, i32* @fifty, align 4
  %112 = load i32* @hash, align 4
  %xor196 = xor i32 %112, -559038737
  store i32 %xor196, i32* @hash, align 4
  %113 = load i32* @Variant, align 4
  %cmp197 = icmp ne i32 %113, 2
  br i1 %cmp197, label %land.lhs.true198, label %if.else215

land.lhs.true198:                                 ; preds = %if.then193
  %114 = load i32* @Variant, align 4
  %cmp199 = icmp ne i32 %114, 4
  br i1 %cmp199, label %if.then200, label %if.else215

if.then200:                                       ; preds = %land.lhs.true198
  %115 = load i32* %beta.addr, align 4
  %sub201 = sub nsw i32 0, %115
  %116 = load i32* %beta.addr, align 4
  %sub202 = sub nsw i32 0, %116
  %add203 = add nsw i32 %sub202, 1
  %117 = load i32* %depth.addr, align 4
  %cmp204 = icmp sgt i32 %117, 3
  br i1 %cmp204, label %cond.true205, label %cond.false208

cond.true205:                                     ; preds = %if.then200
  %118 = load i32* %depth.addr, align 4
  %sub206 = sub nsw i32 %118, 2
  %sub207 = sub nsw i32 %sub206, 1
  br label %cond.end211

cond.false208:                                    ; preds = %if.then200
  %119 = load i32* %depth.addr, align 4
  %sub209 = sub nsw i32 %119, 1
  %sub210 = sub nsw i32 %sub209, 1
  br label %cond.end211

cond.end211:                                      ; preds = %cond.false208, %cond.true205
  %cond212 = phi i32 [ %sub207, %cond.true205 ], [ %sub210, %cond.false208 ]
  %call213 = call i32 @search(i32 %sub201, i32 %add203, i32 %cond212, i32 1)
  %sub214 = sub nsw i32 0, %call213
  store i32 %sub214, i32* %score, align 4
  br label %if.end223

if.else215:                                       ; preds = %land.lhs.true198, %if.then193
  %120 = load i32* %beta.addr, align 4
  %sub216 = sub nsw i32 0, %120
  %121 = load i32* %beta.addr, align 4
  %sub217 = sub nsw i32 0, %121
  %add218 = add nsw i32 %sub217, 1
  %122 = load i32* %depth.addr, align 4
  %sub219 = sub nsw i32 %122, 3
  %sub220 = sub nsw i32 %sub219, 1
  %call221 = call i32 @search(i32 %sub216, i32 %add218, i32 %sub220, i32 1)
  %sub222 = sub nsw i32 0, %call221
  store i32 %sub222, i32* %score, align 4
  br label %if.end223

if.end223:                                        ; preds = %if.else215, %cond.end211
  %123 = load i32* @hash, align 4
  %xor224 = xor i32 %123, -559038737
  store i32 %xor224, i32* @hash, align 4
  %124 = load i32* @fifty, align 4
  %dec = add nsw i32 %124, -1
  store i32 %dec, i32* @fifty, align 4
  %125 = load i32* @ply, align 4
  %dec225 = add nsw i32 %125, -1
  store i32 %dec225, i32* @ply, align 4
  %126 = load i32* @white_to_move, align 4
  %xor226 = xor i32 %126, 1
  store i32 %xor226, i32* @white_to_move, align 4
  %127 = load i32* %old_ep, align 4
  store i32 %127, i32* @ep_square, align 4
  %128 = load i32* @time_exit, align 4
  %tobool227 = icmp ne i32 %128, 0
  br i1 %tobool227, label %if.then228, label %if.end229

if.then228:                                       ; preds = %if.end223
  store i32 0, i32* %retval
  br label %return

if.end229:                                        ; preds = %if.end223
  %129 = load i32* @NTries, align 4
  %inc230 = add i32 %129, 1
  store i32 %inc230, i32* @NTries, align 4
  %130 = load i32* %score, align 4
  %131 = load i32* %beta.addr, align 4
  %cmp231 = icmp sge i32 %130, %131
  br i1 %cmp231, label %if.then232, label %if.else234

if.then232:                                       ; preds = %if.end229
  %132 = load i32* @NCuts, align 4
  %inc233 = add i32 %132, 1
  store i32 %inc233, i32* @NCuts, align 4
  %133 = load i32* %score, align 4
  %134 = load i32* %alpha.addr, align 4
  %135 = load i32* %beta.addr, align 4
  %136 = load i32* %depth.addr, align 4
  call void @StoreTT(i32 %133, i32 %134, i32 %135, i32 500, i32 0, i32 %136)
  %137 = load i32* %score, align 4
  store i32 %137, i32* %retval
  br label %return

if.else234:                                       ; preds = %if.end229
  %138 = load i32* %score, align 4
  %cmp235 = icmp slt i32 %138, -999900
  br i1 %cmp235, label %if.then236, label %if.end241

if.then236:                                       ; preds = %if.else234
  store i32 1, i32* %threat, align 4
  %139 = load i32* @TExt, align 4
  %inc237 = add i32 %139, 1
  store i32 %inc237, i32* @TExt, align 4
  %140 = load i32* %depth.addr, align 4
  %inc238 = add nsw i32 %140, 1
  store i32 %inc238, i32* %depth.addr, align 4
  %141 = load i32* %extend, align 4
  %inc239 = add nsw i32 %141, 1
  store i32 %inc239, i32* %extend, align 4
  %142 = load i32* @ext_onerep, align 4
  %inc240 = add i32 %142, 1
  store i32 %inc240, i32* @ext_onerep, align 4
  br label %if.end241

if.end241:                                        ; preds = %if.then236, %if.else234
  br label %if.end242

if.end242:                                        ; preds = %if.end241
  br label %if.end251

if.else243:                                       ; preds = %land.lhs.true189, %lor.lhs.false187, %land.lhs.true181, %land.lhs.true179, %land.lhs.true177, %land.lhs.true175, %land.lhs.true173, %lor.lhs.false171, %if.end167
  %143 = load i32* %threat, align 4
  %cmp244 = icmp eq i32 %143, 1
  br i1 %cmp244, label %if.then245, label %if.end250

if.then245:                                       ; preds = %if.else243
  %144 = load i32* @TExt, align 4
  %inc246 = add i32 %144, 1
  store i32 %inc246, i32* @TExt, align 4
  %145 = load i32* %depth.addr, align 4
  %inc247 = add nsw i32 %145, 1
  store i32 %inc247, i32* %depth.addr, align 4
  %146 = load i32* %extend, align 4
  %inc248 = add nsw i32 %146, 1
  store i32 %inc248, i32* %extend, align 4
  %147 = load i32* @ext_onerep, align 4
  %inc249 = add i32 %147, 1
  store i32 %inc249, i32* @ext_onerep, align 4
  br label %if.end250

if.end250:                                        ; preds = %if.then245, %if.else243
  br label %if.end251

if.end251:                                        ; preds = %if.end250, %if.end242
  store i32 -1000000, i32* %score, align 4
  %148 = load i32* @Variant, align 4
  %cmp252 = icmp ne i32 %148, 4
  br i1 %cmp252, label %if.then253, label %if.end255

if.then253:                                       ; preds = %if.end251
  %arrayidx254 = getelementptr inbounds [512 x %struct.move_s]* %moves, i32 0, i64 0
  call void @__softboundcets_allocate_shadow_stack_space(i32 2)
  call void @__softboundcets_store_base_shadow_stack(i8* %bitcast853, i32 1)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bitcast855, i32 1)
  call void @gen(%struct.move_s* %arrayidx254)
  call void @__softboundcets_deallocate_shadow_stack_space()
  %149 = load i32* @numb_moves, align 4
  store i32 %149, i32* %num_moves, align 4
  br label %if.end255

if.end255:                                        ; preds = %if.then253, %if.end251
  %150 = load i32* @cfg_onerep, align 4
  %tobool256 = icmp ne i32 %150, 0
  br i1 %tobool256, label %land.lhs.true257, label %if.end278

land.lhs.true257:                                 ; preds = %if.end255
  %151 = load i32* %incheck, align 4
  %tobool258 = icmp ne i32 %151, 0
  br i1 %tobool258, label %if.then259, label %if.end278

if.then259:                                       ; preds = %land.lhs.true257
  %152 = load i32* %num_moves, align 4
  %tobool260 = icmp ne i32 %152, 0
  br i1 %tobool260, label %if.then261, label %if.end277

if.then261:                                       ; preds = %if.then259
  store i32 0, i32* %i, align 4
  br label %for.cond262

for.cond262:                                      ; preds = %for.inc274, %if.then261
  %153 = load i32* %i, align 4
  %154 = load i32* %num_moves, align 4
  %cmp263 = icmp slt i32 %153, %154
  br i1 %cmp263, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %for.cond262
  %155 = load i32* %legalmoves, align 4
  %cmp264 = icmp slt i32 %155, 2
  br label %land.end

land.end:                                         ; preds = %land.rhs, %for.cond262
  %156 = phi i1 [ false, %for.cond262 ], [ %cmp264, %land.rhs ]
  br i1 %156, label %for.body265, label %for.end276

for.body265:                                      ; preds = %land.end
  %arrayidx266 = getelementptr inbounds [512 x %struct.move_s]* %moves, i32 0, i64 0
  %157 = load i32* %i, align 4
  call void @__softboundcets_allocate_shadow_stack_space(i32 2)
  call void @__softboundcets_store_base_shadow_stack(i8* %bitcast853, i32 1)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bitcast855, i32 1)
  call void @make(%struct.move_s* %arrayidx266, i32 %157)
  call void @__softboundcets_deallocate_shadow_stack_space()
  %arrayidx267 = getelementptr inbounds [512 x %struct.move_s]* %moves, i32 0, i64 0
  %158 = load i32* %i, align 4
  %159 = load i32* %incheck, align 4
  call void @__softboundcets_allocate_shadow_stack_space(i32 2)
  call void @__softboundcets_store_base_shadow_stack(i8* %bitcast853, i32 1)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bitcast855, i32 1)
  %call268 = call i32 @check_legal(%struct.move_s* %arrayidx267, i32 %158, i32 %159)
  call void @__softboundcets_deallocate_shadow_stack_space()
  %tobool269 = icmp ne i32 %call268, 0
  br i1 %tobool269, label %if.then270, label %if.end272

if.then270:                                       ; preds = %for.body265
  %160 = load i32* %legalmoves, align 4
  %inc271 = add nsw i32 %160, 1
  store i32 %inc271, i32* %legalmoves, align 4
  br label %if.end272

if.end272:                                        ; preds = %if.then270, %for.body265
  %arrayidx273 = getelementptr inbounds [512 x %struct.move_s]* %moves, i32 0, i64 0
  %161 = load i32* %i, align 4
  call void @__softboundcets_allocate_shadow_stack_space(i32 2)
  call void @__softboundcets_store_base_shadow_stack(i8* %bitcast853, i32 1)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bitcast855, i32 1)
  call void @unmake(%struct.move_s* %arrayidx273, i32 %161)
  call void @__softboundcets_deallocate_shadow_stack_space()
  br label %for.inc274

for.inc274:                                       ; preds = %if.end272
  %162 = load i32* %i, align 4
  %inc275 = add nsw i32 %162, 1
  store i32 %inc275, i32* %i, align 4
  br label %for.cond262

for.end276:                                       ; preds = %land.end
  br label %if.end277

if.end277:                                        ; preds = %for.end276, %if.then259
  br label %if.end278

if.end278:                                        ; preds = %if.end277, %land.lhs.true257, %if.end255
  %163 = load i32* @ply, align 4
  %cmp279 = icmp slt i32 %163, 300
  br i1 %cmp279, label %if.then280, label %if.end303

if.then280:                                       ; preds = %if.end278
  %164 = load i32* @Variant, align 4
  %cmp281 = icmp eq i32 %164, 3
  br i1 %cmp281, label %land.lhs.true282, label %if.else289

land.lhs.true282:                                 ; preds = %if.then280
  %165 = load i32* %num_moves, align 4
  %cmp283 = icmp eq i32 %165, 1
  br i1 %cmp283, label %if.then284, label %if.else289

if.then284:                                       ; preds = %land.lhs.true282
  %166 = load i32* %depth.addr, align 4
  %inc285 = add nsw i32 %166, 1
  store i32 %inc285, i32* %depth.addr, align 4
  %167 = load i32* @ext_onerep, align 4
  %inc286 = add i32 %167, 1
  store i32 %inc286, i32* @ext_onerep, align 4
  %168 = load i32* @ply, align 4
  %idxprom287 = sext i32 %168 to i64
  %bitcast982 = bitcast [300 x i32]* @singular to i8*
  %bitcast983 = bitcast [300 x i32]* getelementptr inbounds ([300 x i32]* @singular, i32 1) to i8*
  %arrayidx288 = getelementptr inbounds [300 x i32]* @singular, i32 0, i64 %idxprom287
  store i32 1, i32* %arrayidx288, align 4
  br label %if.end302

if.else289:                                       ; preds = %land.lhs.true282, %if.then280
  %169 = load i32* %legalmoves, align 4
  %cmp290 = icmp eq i32 %169, 1
  br i1 %cmp290, label %land.lhs.true291, label %if.end301

land.lhs.true291:                                 ; preds = %if.else289
  %170 = load i32* @ply, align 4
  %sub292 = sub nsw i32 %170, 2
  %idxprom293 = sext i32 %sub292 to i64
  %bitcast984 = bitcast [300 x i32]* @singular to i8*
  %bitcast985 = bitcast [300 x i32]* getelementptr inbounds ([300 x i32]* @singular, i32 1) to i8*
  %arrayidx294 = getelementptr inbounds [300 x i32]* @singular, i32 0, i64 %idxprom293
  %171 = load i32* %arrayidx294, align 4
  %tobool295 = icmp ne i32 %171, 0
  br i1 %tobool295, label %if.end301, label %if.then296

if.then296:                                       ; preds = %land.lhs.true291
  %172 = load i32* %depth.addr, align 4
  %inc297 = add nsw i32 %172, 1
  store i32 %inc297, i32* %depth.addr, align 4
  %173 = load i32* @ext_onerep, align 4
  %inc298 = add i32 %173, 1
  store i32 %inc298, i32* @ext_onerep, align 4
  %174 = load i32* @ply, align 4
  %idxprom299 = sext i32 %174 to i64
  %bitcast986 = bitcast [300 x i32]* @singular to i8*
  %bitcast987 = bitcast [300 x i32]* getelementptr inbounds ([300 x i32]* @singular, i32 1) to i8*
  %arrayidx300 = getelementptr inbounds [300 x i32]* @singular, i32 0, i64 %idxprom299
  store i32 1, i32* %arrayidx300, align 4
  br label %if.end301

if.end301:                                        ; preds = %if.then296, %land.lhs.true291, %if.else289
  br label %if.end302

if.end302:                                        ; preds = %if.end301, %if.then284
  br label %if.end303

if.end303:                                        ; preds = %if.end302, %if.end278
  store i32 1, i32* %first, align 4
  store i32 0, i32* %selective, align 4
  %175 = load i32* @phase, align 4
  %cmp304 = icmp ne i32 %175, 2
  br i1 %cmp304, label %land.lhs.true305, label %if.end354

land.lhs.true305:                                 ; preds = %if.end303
  %176 = load i32* @Variant, align 4
  %cmp306 = icmp ne i32 %176, 3
  br i1 %cmp306, label %land.lhs.true307, label %if.end354

land.lhs.true307:                                 ; preds = %land.lhs.true305
  %177 = load i32* @cfg_futprune, align 4
  %tobool308 = icmp ne i32 %177, 0
  br i1 %tobool308, label %if.then309, label %if.end354

if.then309:                                       ; preds = %land.lhs.true307
  %178 = load i32* @white_to_move, align 4
  %tobool310 = icmp ne i32 %178, 0
  br i1 %tobool310, label %cond.true311, label %cond.false312

cond.true311:                                     ; preds = %if.then309
  %179 = load i32* @Material, align 4
  br label %cond.end314

cond.false312:                                    ; preds = %if.then309
  %180 = load i32* @Material, align 4
  %sub313 = sub nsw i32 0, %180
  br label %cond.end314

cond.end314:                                      ; preds = %cond.false312, %cond.true311
  %cond315 = phi i32 [ %179, %cond.true311 ], [ %sub313, %cond.false312 ]
  %add316 = add nsw i32 %cond315, 900
  store i32 %add316, i32* %fscore, align 4
  %181 = load i32* %extend, align 4
  %tobool317 = icmp ne i32 %181, 0
  br i1 %tobool317, label %if.end323, label %land.lhs.true318

land.lhs.true318:                                 ; preds = %cond.end314
  %182 = load i32* %depth.addr, align 4
  %cmp319 = icmp eq i32 %182, 3
  br i1 %cmp319, label %land.lhs.true320, label %if.end323

land.lhs.true320:                                 ; preds = %land.lhs.true318
  %183 = load i32* %fscore, align 4
  %184 = load i32* %alpha.addr, align 4
  %cmp321 = icmp sle i32 %183, %184
  br i1 %cmp321, label %if.then322, label %if.end323

if.then322:                                       ; preds = %land.lhs.true320
  store i32 2, i32* %depth.addr, align 4
  br label %if.end323

if.end323:                                        ; preds = %if.then322, %land.lhs.true320, %land.lhs.true318, %cond.end314
  %185 = load i32* @white_to_move, align 4
  %tobool324 = icmp ne i32 %185, 0
  br i1 %tobool324, label %cond.true325, label %cond.false326

cond.true325:                                     ; preds = %if.end323
  %186 = load i32* @Material, align 4
  br label %cond.end328

cond.false326:                                    ; preds = %if.end323
  %187 = load i32* @Material, align 4
  %sub327 = sub nsw i32 0, %187
  br label %cond.end328

cond.end328:                                      ; preds = %cond.false326, %cond.true325
  %cond329 = phi i32 [ %186, %cond.true325 ], [ %sub327, %cond.false326 ]
  %add330 = add nsw i32 %cond329, 500
  store i32 %add330, i32* %fscore, align 4
  %188 = load i32* %extend, align 4
  %tobool331 = icmp ne i32 %188, 0
  br i1 %tobool331, label %if.end337, label %land.lhs.true332

land.lhs.true332:                                 ; preds = %cond.end328
  %189 = load i32* %depth.addr, align 4
  %cmp333 = icmp eq i32 %189, 2
  br i1 %cmp333, label %land.lhs.true334, label %if.end337

land.lhs.true334:                                 ; preds = %land.lhs.true332
  %190 = load i32* %fscore, align 4
  %191 = load i32* %alpha.addr, align 4
  %cmp335 = icmp sle i32 %190, %191
  br i1 %cmp335, label %if.then336, label %if.end337

if.then336:                                       ; preds = %land.lhs.true334
  store i32 1, i32* %selective, align 4
  %192 = load i32* %fscore, align 4
  store i32 %192, i32* %fmax, align 4
  store i32 %192, i32* %best_score, align 4
  br label %if.end337

if.end337:                                        ; preds = %if.then336, %land.lhs.true334, %land.lhs.true332, %cond.end328
  %193 = load i32* @white_to_move, align 4
  %tobool338 = icmp ne i32 %193, 0
  br i1 %tobool338, label %cond.true339, label %cond.false340

cond.true339:                                     ; preds = %if.end337
  %194 = load i32* @Material, align 4
  br label %cond.end342

cond.false340:                                    ; preds = %if.end337
  %195 = load i32* @Material, align 4
  %sub341 = sub nsw i32 0, %195
  br label %cond.end342

cond.end342:                                      ; preds = %cond.false340, %cond.true339
  %cond343 = phi i32 [ %194, %cond.true339 ], [ %sub341, %cond.false340 ]
  %196 = load i32* @Variant, align 4
  %cmp344 = icmp eq i32 %196, 2
  %cond345 = select i1 %cmp344, i32 150, i32 200
  %add346 = add nsw i32 %cond343, %cond345
  store i32 %add346, i32* %fscore, align 4
  %197 = load i32* %extend, align 4
  %tobool347 = icmp ne i32 %197, 0
  br i1 %tobool347, label %if.end353, label %land.lhs.true348

land.lhs.true348:                                 ; preds = %cond.end342
  %198 = load i32* %depth.addr, align 4
  %cmp349 = icmp eq i32 %198, 1
  br i1 %cmp349, label %land.lhs.true350, label %if.end353

land.lhs.true350:                                 ; preds = %land.lhs.true348
  %199 = load i32* %fscore, align 4
  %200 = load i32* %alpha.addr, align 4
  %cmp351 = icmp sle i32 %199, %200
  br i1 %cmp351, label %if.then352, label %if.end353

if.then352:                                       ; preds = %land.lhs.true350
  store i32 1, i32* %selective, align 4
  %201 = load i32* %fscore, align 4
  store i32 %201, i32* %fmax, align 4
  store i32 %201, i32* %best_score, align 4
  br label %if.end353

if.end353:                                        ; preds = %if.then352, %land.lhs.true350, %land.lhs.true348, %cond.end342
  br label %if.end354

if.end354:                                        ; preds = %if.end353, %land.lhs.true307, %land.lhs.true305, %if.end303
  %202 = load i32* %num_moves, align 4
  %cmp355 = icmp sgt i32 %202, 0
  br i1 %cmp355, label %if.then356, label %if.else791

if.then356:                                       ; preds = %if.end354
  %arrayidx357 = getelementptr inbounds [512 x %struct.move_s]* %moves, i32 0, i64 0
  %arrayidx358 = getelementptr inbounds [512 x i32]* %move_ordering, i32 0, i64 0
  %arrayidx359 = getelementptr inbounds [512 x i32]* %see_values, i32 0, i64 0
  %203 = load i32* %num_moves, align 4
  %204 = load i32* %best, align 4
  call void @__softboundcets_allocate_shadow_stack_space(i32 4)
  call void @__softboundcets_store_base_shadow_stack(i8* %bitcast853, i32 1)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bitcast855, i32 1)
  call void @__softboundcets_store_base_shadow_stack(i8* %bitcast873, i32 2)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bitcast875, i32 2)
  call void @__softboundcets_store_base_shadow_stack(i8* %bitcast877, i32 3)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bitcast879, i32 3)
  call void @order_moves(%struct.move_s* %arrayidx357, i32* %arrayidx358, i32* %arrayidx359, i32 %203, i32 %204)
  call void @__softboundcets_deallocate_shadow_stack_space()
  br label %while.cond

while.cond:                                       ; preds = %if.end790, %if.then356
  %arrayidx360 = getelementptr inbounds [512 x i32]* %move_ordering, i32 0, i64 0
  %205 = load i32* %num_moves, align 4
  call void @__softboundcets_allocate_shadow_stack_space(i32 3)
  call void @__softboundcets_store_base_shadow_stack(i8* %bitcast861, i32 1)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bitcast863, i32 1)
  call void @__softboundcets_store_base_shadow_stack(i8* %bitcast873, i32 2)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bitcast875, i32 2)
  %call361 = call i32 @remove_one(i32* %i, i32* %arrayidx360, i32 %205)
  call void @__softboundcets_deallocate_shadow_stack_space()
  %tobool362 = icmp ne i32 %call361, 0
  br i1 %tobool362, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  %arrayidx363 = getelementptr inbounds [512 x %struct.move_s]* %moves, i32 0, i64 0
  %206 = load i32* %i, align 4
  call void @__softboundcets_allocate_shadow_stack_space(i32 2)
  call void @__softboundcets_store_base_shadow_stack(i8* %bitcast853, i32 1)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bitcast855, i32 1)
  call void @make(%struct.move_s* %arrayidx363, i32 %206)
  call void @__softboundcets_deallocate_shadow_stack_space()
  store i32 0, i32* %legal_move, align 4
  %207 = load i32* @hash, align 4
  %208 = load i32* @move_number, align 4
  %209 = load i32* @ply, align 4
  %add364 = add nsw i32 %208, %209
  %sub365 = sub nsw i32 %add364, 1
  %idxprom366 = sext i32 %sub365 to i64
  %arrayidx367 = getelementptr inbounds [600 x i32]* @hash_history, i32 0, i64 %idxprom366
  store i32 %207, i32* %arrayidx367, align 4
  %210 = load i32* @ply, align 4
  %sub368 = sub nsw i32 %210, 1
  %idxprom369 = sext i32 %sub368 to i64
  %arrayidx370 = getelementptr inbounds [300 x %struct.move_s]* @path, i32 0, i64 %idxprom369
  %211 = load i32* %i, align 4
  %idxprom371 = sext i32 %211 to i64
  %arrayidx372 = getelementptr inbounds [512 x %struct.move_s]* %moves, i32 0, i64 %idxprom371
  %212 = bitcast %struct.move_s* %arrayidx370 to i8*
  %213 = bitcast %struct.move_s* %arrayidx372 to i8*
  call void @__softboundcets_memcopy_check(i8* %212, i8* %213, i64 24, i8* null, i8* inttoptr (i64 281474976710656 to i8*), i8* %bitcast853, i8* %bitcast855)
  call void @__softboundcets_copy_metadata(i8* %212, i8* %213, i64 24)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %212, i8* %213, i64 24, i32 4, i1 false)
  store i32 0, i32* %extend, align 4
  %arrayidx373 = getelementptr inbounds [512 x %struct.move_s]* %moves, i32 0, i64 0
  %214 = load i32* %i, align 4
  %215 = load i32* %incheck, align 4
  call void @__softboundcets_allocate_shadow_stack_space(i32 2)
  call void @__softboundcets_store_base_shadow_stack(i8* %bitcast853, i32 1)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bitcast855, i32 1)
  %call374 = call i32 @check_legal(%struct.move_s* %arrayidx373, i32 %214, i32 %215)
  call void @__softboundcets_deallocate_shadow_stack_space()
  %tobool375 = icmp ne i32 %call374, 0
  br i1 %tobool375, label %if.then376, label %if.end562

if.then376:                                       ; preds = %while.body
  %arrayidx377 = getelementptr inbounds [512 x %struct.move_s]* %moves, i32 0, i64 0
  %216 = load i32* %i, align 4
  call void @__softboundcets_allocate_shadow_stack_space(i32 2)
  call void @__softboundcets_store_base_shadow_stack(i8* %bitcast853, i32 1)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bitcast855, i32 1)
  %call378 = call i32 @f_in_check(%struct.move_s* %arrayidx377, i32 %216)
  call void @__softboundcets_deallocate_shadow_stack_space()
  store i32 %call378, i32* %afterincheck, align 4
  %217 = load i32* %afterincheck, align 4
  %218 = load i32* @ply, align 4
  %idxprom379 = sext i32 %218 to i64
  %bitcast988 = bitcast [300 x i32]* @checks to i8*
  %bitcast989 = bitcast [300 x i32]* getelementptr inbounds ([300 x i32]* @checks, i32 1) to i8*
  %arrayidx380 = getelementptr inbounds [300 x i32]* @checks, i32 0, i64 %idxprom379
  store i32 %217, i32* %arrayidx380, align 4
  %219 = load i32* %afterincheck, align 4
  %tobool381 = icmp ne i32 %219, 0
  br i1 %tobool381, label %if.end419, label %land.lhs.true382

land.lhs.true382:                                 ; preds = %if.then376
  %220 = load i32* @Variant, align 4
  %cmp383 = icmp eq i32 %220, 2
  br i1 %cmp383, label %land.lhs.true388, label %lor.lhs.false384

lor.lhs.false384:                                 ; preds = %land.lhs.true382
  %221 = load i32* @Variant, align 4
  %cmp385 = icmp eq i32 %221, 3
  br i1 %cmp385, label %land.lhs.true388, label %lor.lhs.false386

lor.lhs.false386:                                 ; preds = %lor.lhs.false384
  %222 = load i32* @Variant, align 4
  %cmp387 = icmp eq i32 %222, 4
  br i1 %cmp387, label %land.lhs.true388, label %if.end419

land.lhs.true388:                                 ; preds = %lor.lhs.false386, %lor.lhs.false384, %land.lhs.true382
  %223 = load i32* %depth.addr, align 4
  %cmp389 = icmp slt i32 %223, 3
  br i1 %cmp389, label %land.lhs.true390, label %if.end419

land.lhs.true390:                                 ; preds = %land.lhs.true388
  %224 = load i32* %i, align 4
  %idxprom391 = sext i32 %224 to i64
  %arrayidx392 = getelementptr inbounds [512 x %struct.move_s]* %moves, i32 0, i64 %idxprom391
  %target = getelementptr inbounds %struct.move_s* %arrayidx392, i32 0, i32 1
  %225 = load i32* %target, align 4
  %idxprom393 = sext i32 %225 to i64
  %arrayidx394 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom393
  %226 = load i32* %arrayidx394, align 4
  %cmp395 = icmp eq i32 %226, 1
  br i1 %cmp395, label %land.lhs.true396, label %lor.lhs.false403

land.lhs.true396:                                 ; preds = %land.lhs.true390
  %227 = load i32* %i, align 4
  %idxprom397 = sext i32 %227 to i64
  %arrayidx398 = getelementptr inbounds [512 x %struct.move_s]* %moves, i32 0, i64 %idxprom397
  %target399 = getelementptr inbounds %struct.move_s* %arrayidx398, i32 0, i32 1
  %228 = load i32* %target399, align 4
  %idxprom400 = sext i32 %228 to i64
  %arrayidx401 = getelementptr inbounds [144 x i32]* @Xrank, i32 0, i64 %idxprom400
  %229 = load i32* %arrayidx401, align 4
  %cmp402 = icmp sge i32 %229, 6
  br i1 %cmp402, label %if.then417, label %lor.lhs.false403

lor.lhs.false403:                                 ; preds = %land.lhs.true396, %land.lhs.true390
  %230 = load i32* %i, align 4
  %idxprom404 = sext i32 %230 to i64
  %arrayidx405 = getelementptr inbounds [512 x %struct.move_s]* %moves, i32 0, i64 %idxprom404
  %target406 = getelementptr inbounds %struct.move_s* %arrayidx405, i32 0, i32 1
  %231 = load i32* %target406, align 4
  %idxprom407 = sext i32 %231 to i64
  %arrayidx408 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom407
  %232 = load i32* %arrayidx408, align 4
  %cmp409 = icmp eq i32 %232, 2
  br i1 %cmp409, label %land.lhs.true410, label %if.end419

land.lhs.true410:                                 ; preds = %lor.lhs.false403
  %233 = load i32* %i, align 4
  %idxprom411 = sext i32 %233 to i64
  %arrayidx412 = getelementptr inbounds [512 x %struct.move_s]* %moves, i32 0, i64 %idxprom411
  %target413 = getelementptr inbounds %struct.move_s* %arrayidx412, i32 0, i32 1
  %234 = load i32* %target413, align 4
  %idxprom414 = sext i32 %234 to i64
  %arrayidx415 = getelementptr inbounds [144 x i32]* @Xrank, i32 0, i64 %idxprom414
  %235 = load i32* %arrayidx415, align 4
  %cmp416 = icmp sle i32 %235, 3
  br i1 %cmp416, label %if.then417, label %if.end419

if.then417:                                       ; preds = %land.lhs.true410, %land.lhs.true396
  %236 = load i32* %extend, align 4
  %inc418 = add nsw i32 %236, 1
  store i32 %inc418, i32* %extend, align 4
  br label %if.end419

if.end419:                                        ; preds = %if.then417, %land.lhs.true410, %lor.lhs.false403, %land.lhs.true388, %lor.lhs.false386, %if.then376
  store i32 0, i32* %dropcut, align 4
  %237 = load i32* %i, align 4
  %idxprom420 = sext i32 %237 to i64
  %arrayidx421 = getelementptr inbounds [512 x %struct.move_s]* %moves, i32 0, i64 %idxprom420
  %from = getelementptr inbounds %struct.move_s* %arrayidx421, i32 0, i32 0
  %238 = load i32* %from, align 4
  %cmp422 = icmp eq i32 %238, 0
  br i1 %cmp422, label %land.lhs.true423, label %if.else436

land.lhs.true423:                                 ; preds = %if.end419
  %239 = load i32* %depth.addr, align 4
  %cmp424 = icmp sgt i32 %239, 1
  br i1 %cmp424, label %land.lhs.true425, label %if.else436

land.lhs.true425:                                 ; preds = %land.lhs.true423
  %240 = load i32* %afterincheck, align 4
  %cmp426 = icmp eq i32 %240, 0
  br i1 %cmp426, label %land.lhs.true427, label %if.else436

land.lhs.true427:                                 ; preds = %land.lhs.true425
  %241 = load i32* %incheck, align 4
  %cmp428 = icmp eq i32 %241, 0
  br i1 %cmp428, label %land.lhs.true429, label %if.else436

land.lhs.true429:                                 ; preds = %land.lhs.true427
  %242 = load i32* @searching_pv, align 4
  %tobool430 = icmp ne i32 %242, 0
  br i1 %tobool430, label %if.else436, label %land.lhs.true431

land.lhs.true431:                                 ; preds = %land.lhs.true429
  %243 = load i32* @cfg_razordrop, align 4
  %tobool432 = icmp ne i32 %243, 0
  br i1 %tobool432, label %if.then433, label %if.else436

if.then433:                                       ; preds = %land.lhs.true431
  %244 = load i32* @razor_drop, align 4
  %inc434 = add i32 %244, 1
  store i32 %inc434, i32* @razor_drop, align 4
  %245 = load i32* %extend, align 4
  %dec435 = add nsw i32 %245, -1
  store i32 %dec435, i32* %extend, align 4
  br label %if.end482

if.else436:                                       ; preds = %land.lhs.true431, %land.lhs.true429, %land.lhs.true427, %land.lhs.true425, %land.lhs.true423, %if.end419
  %246 = load i32* %i, align 4
  %idxprom437 = sext i32 %246 to i64
  %arrayidx438 = getelementptr inbounds [512 x %struct.move_s]* %moves, i32 0, i64 %idxprom437
  %from439 = getelementptr inbounds %struct.move_s* %arrayidx438, i32 0, i32 0
  %247 = load i32* %from439, align 4
  %cmp440 = icmp eq i32 %247, 0
  br i1 %cmp440, label %land.lhs.true441, label %if.end481

land.lhs.true441:                                 ; preds = %if.else436
  %248 = load i32* %depth.addr, align 4
  %cmp442 = icmp eq i32 %248, 1
  br i1 %cmp442, label %land.lhs.true443, label %if.end481

land.lhs.true443:                                 ; preds = %land.lhs.true441
  %249 = load i32* %incheck, align 4
  %cmp444 = icmp eq i32 %249, 0
  br i1 %cmp444, label %land.lhs.true445, label %if.end481

land.lhs.true445:                                 ; preds = %land.lhs.true443
  %250 = load i32* @cfg_cutdrop, align 4
  %tobool446 = icmp ne i32 %250, 0
  br i1 %tobool446, label %if.then447, label %if.end481

if.then447:                                       ; preds = %land.lhs.true445
  %251 = load i32* @white_to_move, align 4
  %tobool448 = icmp ne i32 %251, 0
  br i1 %tobool448, label %if.then449, label %if.else464

if.then449:                                       ; preds = %if.then447
  %252 = load i32* %i, align 4
  %idxprom450 = sext i32 %252 to i64
  %arrayidx451 = getelementptr inbounds [512 x %struct.move_s]* %moves, i32 0, i64 %idxprom450
  %target452 = getelementptr inbounds %struct.move_s* %arrayidx451, i32 0, i32 1
  %253 = load i32* %target452, align 4
  %call453 = call i32 @calc_attackers(i32 %253, i32 1)
  %254 = load i32* %i, align 4
  %idxprom454 = sext i32 %254 to i64
  %arrayidx455 = getelementptr inbounds [512 x %struct.move_s]* %moves, i32 0, i64 %idxprom454
  %target456 = getelementptr inbounds %struct.move_s* %arrayidx455, i32 0, i32 1
  %255 = load i32* %target456, align 4
  %call457 = call i32 @calc_attackers(i32 %255, i32 0)
  %sub458 = sub nsw i32 %call453, %call457
  %cmp459 = icmp sgt i32 %sub458, 0
  %conv = zext i1 %cmp459 to i32
  store i32 %conv, i32* %dropcut, align 4
  %256 = load i32* %dropcut, align 4
  %tobool460 = icmp ne i32 %256, 0
  br i1 %tobool460, label %if.then461, label %if.end463

if.then461:                                       ; preds = %if.then449
  %257 = load i32* @drop_cuts, align 4
  %inc462 = add i32 %257, 1
  store i32 %inc462, i32* @drop_cuts, align 4
  br label %if.end463

if.end463:                                        ; preds = %if.then461, %if.then449
  br label %if.end480

if.else464:                                       ; preds = %if.then447
  %258 = load i32* %i, align 4
  %idxprom465 = sext i32 %258 to i64
  %arrayidx466 = getelementptr inbounds [512 x %struct.move_s]* %moves, i32 0, i64 %idxprom465
  %target467 = getelementptr inbounds %struct.move_s* %arrayidx466, i32 0, i32 1
  %259 = load i32* %target467, align 4
  %call468 = call i32 @calc_attackers(i32 %259, i32 0)
  %260 = load i32* %i, align 4
  %idxprom469 = sext i32 %260 to i64
  %arrayidx470 = getelementptr inbounds [512 x %struct.move_s]* %moves, i32 0, i64 %idxprom469
  %target471 = getelementptr inbounds %struct.move_s* %arrayidx470, i32 0, i32 1
  %261 = load i32* %target471, align 4
  %call472 = call i32 @calc_attackers(i32 %261, i32 1)
  %sub473 = sub nsw i32 %call468, %call472
  %cmp474 = icmp sgt i32 %sub473, 0
  %conv475 = zext i1 %cmp474 to i32
  store i32 %conv475, i32* %dropcut, align 4
  %262 = load i32* %dropcut, align 4
  %tobool476 = icmp ne i32 %262, 0
  br i1 %tobool476, label %if.then477, label %if.end479

if.then477:                                       ; preds = %if.else464
  %263 = load i32* @drop_cuts, align 4
  %inc478 = add i32 %263, 1
  store i32 %inc478, i32* @drop_cuts, align 4
  br label %if.end479

if.end479:                                        ; preds = %if.then477, %if.else464
  br label %if.end480

if.end480:                                        ; preds = %if.end479, %if.end463
  br label %if.end481

if.end481:                                        ; preds = %if.end480, %land.lhs.true445, %land.lhs.true443, %land.lhs.true441, %if.else436
  br label %if.end482

if.end482:                                        ; preds = %if.end481, %if.then433
  %264 = load i32* %dropcut, align 4
  %tobool483 = icmp ne i32 %264, 0
  br i1 %tobool483, label %if.else558, label %land.lhs.true484

land.lhs.true484:                                 ; preds = %if.end482
  %265 = load i32* %selective, align 4
  %tobool485 = icmp ne i32 %265, 0
  br i1 %tobool485, label %lor.lhs.false486, label %if.then509

lor.lhs.false486:                                 ; preds = %land.lhs.true484
  %266 = load i32* %afterincheck, align 4
  %cmp487 = icmp ne i32 %266, 0
  br i1 %cmp487, label %if.then509, label %lor.lhs.false489

lor.lhs.false489:                                 ; preds = %lor.lhs.false486
  %267 = load i32* %fmax, align 4
  %268 = load i32* %i, align 4
  %idxprom490 = sext i32 %268 to i64
  %arrayidx491 = getelementptr inbounds [512 x %struct.move_s]* %moves, i32 0, i64 %idxprom490
  %captured492 = getelementptr inbounds %struct.move_s* %arrayidx491, i32 0, i32 2
  %269 = load i32* %captured492, align 4
  %idxprom493 = sext i32 %269 to i64
  %arrayidx494 = getelementptr inbounds [14 x i32]* @material, i32 0, i64 %idxprom493
  %270 = load i32* %arrayidx494, align 4
  %call495 = call i32 @softboundcets_abs(i32 %270) #5
  %271 = load i32* @Variant, align 4
  %cmp496 = icmp eq i32 %271, 2
  br i1 %cmp496, label %lor.end, label %lor.rhs

lor.rhs:                                          ; preds = %lor.lhs.false489
  %272 = load i32* @Variant, align 4
  %cmp498 = icmp eq i32 %272, 4
  br label %lor.end

lor.end:                                          ; preds = %lor.rhs, %lor.lhs.false489
  %273 = phi i1 [ true, %lor.lhs.false489 ], [ %cmp498, %lor.rhs ]
  %cond500 = select i1 %273, i32 1, i32 2
  %mul501 = mul nsw i32 %call495, %cond500
  %add502 = add nsw i32 %267, %mul501
  %274 = load i32* %alpha.addr, align 4
  %cmp503 = icmp sgt i32 %add502, %274
  br i1 %cmp503, label %if.then509, label %lor.lhs.false505

lor.lhs.false505:                                 ; preds = %lor.end
  %275 = load i32* %i, align 4
  %idxprom506 = sext i32 %275 to i64
  %arrayidx507 = getelementptr inbounds [512 x %struct.move_s]* %moves, i32 0, i64 %idxprom506
  %promoted = getelementptr inbounds %struct.move_s* %arrayidx507, i32 0, i32 3
  %276 = load i32* %promoted, align 4
  %tobool508 = icmp ne i32 %276, 0
  br i1 %tobool508, label %if.then509, label %if.else558

if.then509:                                       ; preds = %lor.lhs.false505, %lor.end, %lor.lhs.false486, %land.lhs.true484
  %277 = load i32* %first, align 4
  %cmp510 = icmp eq i32 %277, 1
  br i1 %cmp510, label %if.then512, label %if.else520

if.then512:                                       ; preds = %if.then509
  %278 = load i32* %beta.addr, align 4
  %sub513 = sub nsw i32 0, %278
  %279 = load i32* %alpha.addr, align 4
  %sub514 = sub nsw i32 0, %279
  %280 = load i32* %depth.addr, align 4
  %281 = load i32* %extend, align 4
  %add515 = add nsw i32 %280, %281
  %sub516 = sub nsw i32 %add515, 1
  %call517 = call i32 @search(i32 %sub513, i32 %sub514, i32 %sub516, i32 0)
  %sub518 = sub nsw i32 0, %call517
  store i32 %sub518, i32* %score, align 4
  %282 = load i32* @FULL, align 4
  %inc519 = add i32 %282, 1
  store i32 %inc519, i32* @FULL, align 4
  br label %if.end557

if.else520:                                       ; preds = %if.then509
  %283 = load i32* %alpha.addr, align 4
  %sub521 = sub nsw i32 0, %283
  %sub522 = sub nsw i32 %sub521, 1
  %284 = load i32* %alpha.addr, align 4
  %sub523 = sub nsw i32 0, %284
  %285 = load i32* %depth.addr, align 4
  %286 = load i32* %extend, align 4
  %add524 = add nsw i32 %285, %286
  %sub525 = sub nsw i32 %add524, 1
  %call526 = call i32 @search(i32 %sub522, i32 %sub523, i32 %sub525, i32 0)
  %sub527 = sub nsw i32 0, %call526
  store i32 %sub527, i32* %score, align 4
  %287 = load i32* @PVS, align 4
  %inc528 = add i32 %287, 1
  store i32 %inc528, i32* @PVS, align 4
  %288 = load i32* %score, align 4
  %289 = load i32* %best_score, align 4
  %cmp529 = icmp sgt i32 %288, %289
  br i1 %cmp529, label %land.lhs.true531, label %if.end556

land.lhs.true531:                                 ; preds = %if.else520
  %290 = load i32* @time_exit, align 4
  %tobool532 = icmp ne i32 %290, 0
  br i1 %tobool532, label %if.end556, label %land.lhs.true533

land.lhs.true533:                                 ; preds = %land.lhs.true531
  %291 = load i32* %score, align 4
  %cmp534 = icmp ne i32 %291, -50000
  br i1 %cmp534, label %if.then536, label %if.end556

if.then536:                                       ; preds = %land.lhs.true533
  %292 = load i32* %score, align 4
  %293 = load i32* %alpha.addr, align 4
  %cmp537 = icmp sgt i32 %292, %293
  br i1 %cmp537, label %land.lhs.true539, label %if.else554

land.lhs.true539:                                 ; preds = %if.then536
  %294 = load i32* %score, align 4
  %295 = load i32* %beta.addr, align 4
  %cmp540 = icmp slt i32 %294, %295
  br i1 %cmp540, label %if.then542, label %if.else554

if.then542:                                       ; preds = %land.lhs.true539
  %296 = load i32* %beta.addr, align 4
  %sub543 = sub nsw i32 0, %296
  %297 = load i32* %alpha.addr, align 4
  %sub544 = sub nsw i32 0, %297
  %298 = load i32* %depth.addr, align 4
  %299 = load i32* %extend, align 4
  %add545 = add nsw i32 %298, %299
  %sub546 = sub nsw i32 %add545, 1
  %call547 = call i32 @search(i32 %sub543, i32 %sub544, i32 %sub546, i32 0)
  %sub548 = sub nsw i32 0, %call547
  store i32 %sub548, i32* %score, align 4
  %300 = load i32* @PVSF, align 4
  %inc549 = add i32 %300, 1
  store i32 %inc549, i32* @PVSF, align 4
  %301 = load i32* %score, align 4
  %302 = load i32* %best_score, align 4
  %cmp550 = icmp sgt i32 %301, %302
  br i1 %cmp550, label %if.then552, label %if.end553

if.then552:                                       ; preds = %if.then542
  %303 = load i32* %score, align 4
  store i32 %303, i32* %best_score, align 4
  br label %if.end553

if.end553:                                        ; preds = %if.then552, %if.then542
  br label %if.end555

if.else554:                                       ; preds = %land.lhs.true539, %if.then536
  %304 = load i32* %score, align 4
  store i32 %304, i32* %best_score, align 4
  br label %if.end555

if.end555:                                        ; preds = %if.else554, %if.end553
  br label %if.end556

if.end556:                                        ; preds = %if.end555, %land.lhs.true533, %land.lhs.true531, %if.else520
  br label %if.end557

if.end557:                                        ; preds = %if.end556, %if.then512
  store i32 1, i32* %legal_move, align 4
  br label %if.end560

if.else558:                                       ; preds = %lor.lhs.false505, %if.end482
  %305 = load i32* @razor_material, align 4
  %inc559 = add i32 %305, 1
  store i32 %inc559, i32* @razor_material, align 4
  br label %if.end560

if.end560:                                        ; preds = %if.else558, %if.end557
  %306 = load i32* %legalmoves, align 4
  %inc561 = add nsw i32 %306, 1
  store i32 %inc561, i32* %legalmoves, align 4
  store i32 0, i32* %no_moves, align 4
  br label %if.end562

if.end562:                                        ; preds = %if.end560, %while.body
  %307 = load i32* %score, align 4
  %308 = load i32* %best_score, align 4
  %cmp563 = icmp sgt i32 %307, %308
  br i1 %cmp563, label %land.lhs.true565, label %if.end568

land.lhs.true565:                                 ; preds = %if.end562
  %309 = load i32* %legal_move, align 4
  %tobool566 = icmp ne i32 %309, 0
  br i1 %tobool566, label %if.then567, label %if.end568

if.then567:                                       ; preds = %land.lhs.true565
  %310 = load i32* %score, align 4
  store i32 %310, i32* %best_score, align 4
  br label %if.end568

if.end568:                                        ; preds = %if.then567, %land.lhs.true565, %if.end562
  %arrayidx569 = getelementptr inbounds [512 x %struct.move_s]* %moves, i32 0, i64 0
  %311 = load i32* %i, align 4
  call void @__softboundcets_allocate_shadow_stack_space(i32 2)
  call void @__softboundcets_store_base_shadow_stack(i8* %bitcast853, i32 1)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bitcast855, i32 1)
  call void @unmake(%struct.move_s* %arrayidx569, i32 %311)
  call void @__softboundcets_deallocate_shadow_stack_space()
  %312 = load i32* @time_exit, align 4
  %tobool570 = icmp ne i32 %312, 0
  br i1 %tobool570, label %if.then571, label %if.end572

if.then571:                                       ; preds = %if.end568
  store i32 0, i32* %retval
  br label %return

if.end572:                                        ; preds = %if.end568
  %313 = load i32* %score, align 4
  %314 = load i32* %alpha.addr, align 4
  %cmp573 = icmp sgt i32 %313, %314
  br i1 %cmp573, label %land.lhs.true575, label %if.end787

land.lhs.true575:                                 ; preds = %if.end572
  %315 = load i32* %legal_move, align 4
  %tobool576 = icmp ne i32 %315, 0
  br i1 %tobool576, label %if.then577, label %if.end787

if.then577:                                       ; preds = %land.lhs.true575
  %316 = load i32* %score, align 4
  %317 = load i32* %beta.addr, align 4
  %cmp578 = icmp sge i32 %316, %317
  br i1 %cmp578, label %if.then580, label %if.end755

if.then580:                                       ; preds = %if.then577
  %318 = load i32* %i, align 4
  %idxprom581 = sext i32 %318 to i64
  %arrayidx582 = getelementptr inbounds [512 x %struct.move_s]* %moves, i32 0, i64 %idxprom581
  %target583 = getelementptr inbounds %struct.move_s* %arrayidx582, i32 0, i32 1
  %319 = load i32* %target583, align 4
  %idxprom584 = sext i32 %319 to i64
  %320 = load i32* %i, align 4
  %idxprom585 = sext i32 %320 to i64
  %arrayidx586 = getelementptr inbounds [512 x %struct.move_s]* %moves, i32 0, i64 %idxprom585
  %from587 = getelementptr inbounds %struct.move_s* %arrayidx586, i32 0, i32 0
  %321 = load i32* %from587, align 4
  %idxprom588 = sext i32 %321 to i64
  %arrayidx589 = getelementptr inbounds [144 x [144 x i32]]* @history_h, i32 0, i64 %idxprom588
  %arrayidx590 = getelementptr inbounds [144 x i32]* %arrayidx589, i32 0, i64 %idxprom584
  %322 = load i32* %arrayidx590, align 4
  %inc591 = add i32 %322, 1
  store i32 %inc591, i32* %arrayidx590, align 4
  %323 = load i32* %i, align 4
  %idxprom592 = sext i32 %323 to i64
  %arrayidx593 = getelementptr inbounds [512 x %struct.move_s]* %moves, i32 0, i64 %idxprom592
  %captured594 = getelementptr inbounds %struct.move_s* %arrayidx593, i32 0, i32 2
  %324 = load i32* %captured594, align 4
  %cmp595 = icmp eq i32 %324, 13
  br i1 %cmp595, label %if.then597, label %if.end748

if.then597:                                       ; preds = %if.then580
  %325 = load i32* %i, align 4
  %idxprom598 = sext i32 %325 to i64
  %arrayidx599 = getelementptr inbounds [512 x %struct.move_s]* %moves, i32 0, i64 %idxprom598
  %from600 = getelementptr inbounds %struct.move_s* %arrayidx599, i32 0, i32 0
  %326 = load i32* %from600, align 4
  %327 = load i32* @ply, align 4
  %idxprom601 = sext i32 %327 to i64
  %arrayidx602 = getelementptr inbounds [300 x %struct.move_s]* @killer1, i32 0, i64 %idxprom601
  %from603 = getelementptr inbounds %struct.move_s* %arrayidx602, i32 0, i32 0
  %328 = load i32* %from603, align 4
  %cmp604 = icmp eq i32 %326, %328
  br i1 %cmp604, label %land.lhs.true606, label %if.else628

land.lhs.true606:                                 ; preds = %if.then597
  %329 = load i32* %i, align 4
  %idxprom607 = sext i32 %329 to i64
  %arrayidx608 = getelementptr inbounds [512 x %struct.move_s]* %moves, i32 0, i64 %idxprom607
  %target609 = getelementptr inbounds %struct.move_s* %arrayidx608, i32 0, i32 1
  %330 = load i32* %target609, align 4
  %331 = load i32* @ply, align 4
  %idxprom610 = sext i32 %331 to i64
  %arrayidx611 = getelementptr inbounds [300 x %struct.move_s]* @killer1, i32 0, i64 %idxprom610
  %target612 = getelementptr inbounds %struct.move_s* %arrayidx611, i32 0, i32 1
  %332 = load i32* %target612, align 4
  %cmp613 = icmp eq i32 %330, %332
  br i1 %cmp613, label %land.lhs.true615, label %if.else628

land.lhs.true615:                                 ; preds = %land.lhs.true606
  %333 = load i32* %i, align 4
  %idxprom616 = sext i32 %333 to i64
  %arrayidx617 = getelementptr inbounds [512 x %struct.move_s]* %moves, i32 0, i64 %idxprom616
  %promoted618 = getelementptr inbounds %struct.move_s* %arrayidx617, i32 0, i32 3
  %334 = load i32* %promoted618, align 4
  %335 = load i32* @ply, align 4
  %idxprom619 = sext i32 %335 to i64
  %arrayidx620 = getelementptr inbounds [300 x %struct.move_s]* @killer1, i32 0, i64 %idxprom619
  %promoted621 = getelementptr inbounds %struct.move_s* %arrayidx620, i32 0, i32 3
  %336 = load i32* %promoted621, align 4
  %cmp622 = icmp eq i32 %334, %336
  br i1 %cmp622, label %if.then624, label %if.else628

if.then624:                                       ; preds = %land.lhs.true615
  %337 = load i32* @ply, align 4
  %idxprom625 = sext i32 %337 to i64
  %arrayidx626 = getelementptr inbounds [300 x i32]* @killer_scores, i32 0, i64 %idxprom625
  %338 = load i32* %arrayidx626, align 4
  %inc627 = add nsw i32 %338, 1
  store i32 %inc627, i32* %arrayidx626, align 4
  br label %if.end747

if.else628:                                       ; preds = %land.lhs.true615, %land.lhs.true606, %if.then597
  %339 = load i32* %i, align 4
  %idxprom629 = sext i32 %339 to i64
  %arrayidx630 = getelementptr inbounds [512 x %struct.move_s]* %moves, i32 0, i64 %idxprom629
  %from631 = getelementptr inbounds %struct.move_s* %arrayidx630, i32 0, i32 0
  %340 = load i32* %from631, align 4
  %341 = load i32* @ply, align 4
  %idxprom632 = sext i32 %341 to i64
  %arrayidx633 = getelementptr inbounds [300 x %struct.move_s]* @killer2, i32 0, i64 %idxprom632
  %from634 = getelementptr inbounds %struct.move_s* %arrayidx633, i32 0, i32 0
  %342 = load i32* %from634, align 4
  %cmp635 = icmp eq i32 %340, %342
  br i1 %cmp635, label %land.lhs.true637, label %if.else683

land.lhs.true637:                                 ; preds = %if.else628
  %343 = load i32* %i, align 4
  %idxprom638 = sext i32 %343 to i64
  %arrayidx639 = getelementptr inbounds [512 x %struct.move_s]* %moves, i32 0, i64 %idxprom638
  %target640 = getelementptr inbounds %struct.move_s* %arrayidx639, i32 0, i32 1
  %344 = load i32* %target640, align 4
  %345 = load i32* @ply, align 4
  %idxprom641 = sext i32 %345 to i64
  %arrayidx642 = getelementptr inbounds [300 x %struct.move_s]* @killer2, i32 0, i64 %idxprom641
  %target643 = getelementptr inbounds %struct.move_s* %arrayidx642, i32 0, i32 1
  %346 = load i32* %target643, align 4
  %cmp644 = icmp eq i32 %344, %346
  br i1 %cmp644, label %land.lhs.true646, label %if.else683

land.lhs.true646:                                 ; preds = %land.lhs.true637
  %347 = load i32* %i, align 4
  %idxprom647 = sext i32 %347 to i64
  %arrayidx648 = getelementptr inbounds [512 x %struct.move_s]* %moves, i32 0, i64 %idxprom647
  %promoted649 = getelementptr inbounds %struct.move_s* %arrayidx648, i32 0, i32 3
  %348 = load i32* %promoted649, align 4
  %349 = load i32* @ply, align 4
  %idxprom650 = sext i32 %349 to i64
  %arrayidx651 = getelementptr inbounds [300 x %struct.move_s]* @killer2, i32 0, i64 %idxprom650
  %promoted652 = getelementptr inbounds %struct.move_s* %arrayidx651, i32 0, i32 3
  %350 = load i32* %promoted652, align 4
  %cmp653 = icmp eq i32 %348, %350
  br i1 %cmp653, label %if.then655, label %if.else683

if.then655:                                       ; preds = %land.lhs.true646
  %351 = load i32* @ply, align 4
  %idxprom656 = sext i32 %351 to i64
  %arrayidx657 = getelementptr inbounds [300 x i32]* @killer_scores2, i32 0, i64 %idxprom656
  %352 = load i32* %arrayidx657, align 4
  %inc658 = add nsw i32 %352, 1
  store i32 %inc658, i32* %arrayidx657, align 4
  %353 = load i32* @ply, align 4
  %idxprom659 = sext i32 %353 to i64
  %arrayidx660 = getelementptr inbounds [300 x i32]* @killer_scores2, i32 0, i64 %idxprom659
  %354 = load i32* %arrayidx660, align 4
  %355 = load i32* @ply, align 4
  %idxprom661 = sext i32 %355 to i64
  %arrayidx662 = getelementptr inbounds [300 x i32]* @killer_scores, i32 0, i64 %idxprom661
  %356 = load i32* %arrayidx662, align 4
  %cmp663 = icmp sgt i32 %354, %356
  br i1 %cmp663, label %if.then665, label %if.end682

if.then665:                                       ; preds = %if.then655
  %357 = load i32* @ply, align 4
  %idxprom666 = sext i32 %357 to i64
  %arrayidx667 = getelementptr inbounds [300 x %struct.move_s]* @killer1, i32 0, i64 %idxprom666
  %358 = bitcast %struct.move_s* %kswap to i8*
  %359 = bitcast %struct.move_s* %arrayidx667 to i8*
  call void @__softboundcets_memcopy_check(i8* %358, i8* %359, i64 24, i8* %bitcast941, i8* %bitcast943, i8* null, i8* inttoptr (i64 281474976710656 to i8*))
  call void @__softboundcets_copy_metadata(i8* %358, i8* %359, i64 24)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %358, i8* %359, i64 24, i32 4, i1 false)
  %360 = load i32* @ply, align 4
  %idxprom668 = sext i32 %360 to i64
  %arrayidx669 = getelementptr inbounds [300 x %struct.move_s]* @killer1, i32 0, i64 %idxprom668
  %361 = load i32* @ply, align 4
  %idxprom670 = sext i32 %361 to i64
  %arrayidx671 = getelementptr inbounds [300 x %struct.move_s]* @killer2, i32 0, i64 %idxprom670
  %362 = bitcast %struct.move_s* %arrayidx669 to i8*
  %363 = bitcast %struct.move_s* %arrayidx671 to i8*
  call void @__softboundcets_memcopy_check(i8* %362, i8* %363, i64 24, i8* null, i8* inttoptr (i64 281474976710656 to i8*), i8* null, i8* inttoptr (i64 281474976710656 to i8*))
  call void @__softboundcets_copy_metadata(i8* %362, i8* %363, i64 24)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %362, i8* %363, i64 24, i32 4, i1 false)
  %364 = load i32* @ply, align 4
  %idxprom672 = sext i32 %364 to i64
  %arrayidx673 = getelementptr inbounds [300 x %struct.move_s]* @killer2, i32 0, i64 %idxprom672
  %365 = bitcast %struct.move_s* %arrayidx673 to i8*
  %366 = bitcast %struct.move_s* %kswap to i8*
  call void @__softboundcets_memcopy_check(i8* %365, i8* %366, i64 24, i8* null, i8* inttoptr (i64 281474976710656 to i8*), i8* %bitcast941, i8* %bitcast943)
  call void @__softboundcets_copy_metadata(i8* %365, i8* %366, i64 24)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %365, i8* %366, i64 24, i32 4, i1 false)
  %367 = load i32* @ply, align 4
  %idxprom674 = sext i32 %367 to i64
  %arrayidx675 = getelementptr inbounds [300 x i32]* @killer_scores, i32 0, i64 %idxprom674
  %368 = load i32* %arrayidx675, align 4
  store i32 %368, i32* %ksswap, align 4
  %369 = load i32* @ply, align 4
  %idxprom676 = sext i32 %369 to i64
  %arrayidx677 = getelementptr inbounds [300 x i32]* @killer_scores2, i32 0, i64 %idxprom676
  %370 = load i32* %arrayidx677, align 4
  %371 = load i32* @ply, align 4
  %idxprom678 = sext i32 %371 to i64
  %arrayidx679 = getelementptr inbounds [300 x i32]* @killer_scores, i32 0, i64 %idxprom678
  store i32 %370, i32* %arrayidx679, align 4
  %372 = load i32* %ksswap, align 4
  %373 = load i32* @ply, align 4
  %idxprom680 = sext i32 %373 to i64
  %arrayidx681 = getelementptr inbounds [300 x i32]* @killer_scores2, i32 0, i64 %idxprom680
  store i32 %372, i32* %arrayidx681, align 4
  br label %if.end682

if.end682:                                        ; preds = %if.then665, %if.then655
  br label %if.end746

if.else683:                                       ; preds = %land.lhs.true646, %land.lhs.true637, %if.else628
  %374 = load i32* %i, align 4
  %idxprom684 = sext i32 %374 to i64
  %arrayidx685 = getelementptr inbounds [512 x %struct.move_s]* %moves, i32 0, i64 %idxprom684
  %from686 = getelementptr inbounds %struct.move_s* %arrayidx685, i32 0, i32 0
  %375 = load i32* %from686, align 4
  %376 = load i32* @ply, align 4
  %idxprom687 = sext i32 %376 to i64
  %arrayidx688 = getelementptr inbounds [300 x %struct.move_s]* @killer3, i32 0, i64 %idxprom687
  %from689 = getelementptr inbounds %struct.move_s* %arrayidx688, i32 0, i32 0
  %377 = load i32* %from689, align 4
  %cmp690 = icmp eq i32 %375, %377
  br i1 %cmp690, label %land.lhs.true692, label %if.else738

land.lhs.true692:                                 ; preds = %if.else683
  %378 = load i32* %i, align 4
  %idxprom693 = sext i32 %378 to i64
  %arrayidx694 = getelementptr inbounds [512 x %struct.move_s]* %moves, i32 0, i64 %idxprom693
  %target695 = getelementptr inbounds %struct.move_s* %arrayidx694, i32 0, i32 1
  %379 = load i32* %target695, align 4
  %380 = load i32* @ply, align 4
  %idxprom696 = sext i32 %380 to i64
  %arrayidx697 = getelementptr inbounds [300 x %struct.move_s]* @killer3, i32 0, i64 %idxprom696
  %target698 = getelementptr inbounds %struct.move_s* %arrayidx697, i32 0, i32 1
  %381 = load i32* %target698, align 4
  %cmp699 = icmp eq i32 %379, %381
  br i1 %cmp699, label %land.lhs.true701, label %if.else738

land.lhs.true701:                                 ; preds = %land.lhs.true692
  %382 = load i32* %i, align 4
  %idxprom702 = sext i32 %382 to i64
  %arrayidx703 = getelementptr inbounds [512 x %struct.move_s]* %moves, i32 0, i64 %idxprom702
  %promoted704 = getelementptr inbounds %struct.move_s* %arrayidx703, i32 0, i32 3
  %383 = load i32* %promoted704, align 4
  %384 = load i32* @ply, align 4
  %idxprom705 = sext i32 %384 to i64
  %arrayidx706 = getelementptr inbounds [300 x %struct.move_s]* @killer3, i32 0, i64 %idxprom705
  %promoted707 = getelementptr inbounds %struct.move_s* %arrayidx706, i32 0, i32 3
  %385 = load i32* %promoted707, align 4
  %cmp708 = icmp eq i32 %383, %385
  br i1 %cmp708, label %if.then710, label %if.else738

if.then710:                                       ; preds = %land.lhs.true701
  %386 = load i32* @ply, align 4
  %idxprom711 = sext i32 %386 to i64
  %arrayidx712 = getelementptr inbounds [300 x i32]* @killer_scores3, i32 0, i64 %idxprom711
  %387 = load i32* %arrayidx712, align 4
  %inc713 = add nsw i32 %387, 1
  store i32 %inc713, i32* %arrayidx712, align 4
  %388 = load i32* @ply, align 4
  %idxprom714 = sext i32 %388 to i64
  %arrayidx715 = getelementptr inbounds [300 x i32]* @killer_scores3, i32 0, i64 %idxprom714
  %389 = load i32* %arrayidx715, align 4
  %390 = load i32* @ply, align 4
  %idxprom716 = sext i32 %390 to i64
  %arrayidx717 = getelementptr inbounds [300 x i32]* @killer_scores2, i32 0, i64 %idxprom716
  %391 = load i32* %arrayidx717, align 4
  %cmp718 = icmp sgt i32 %389, %391
  br i1 %cmp718, label %if.then720, label %if.end737

if.then720:                                       ; preds = %if.then710
  %392 = load i32* @ply, align 4
  %idxprom721 = sext i32 %392 to i64
  %arrayidx722 = getelementptr inbounds [300 x %struct.move_s]* @killer2, i32 0, i64 %idxprom721
  %393 = bitcast %struct.move_s* %kswap to i8*
  %394 = bitcast %struct.move_s* %arrayidx722 to i8*
  call void @__softboundcets_memcopy_check(i8* %393, i8* %394, i64 24, i8* %bitcast941, i8* %bitcast943, i8* null, i8* inttoptr (i64 281474976710656 to i8*))
  call void @__softboundcets_copy_metadata(i8* %393, i8* %394, i64 24)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %393, i8* %394, i64 24, i32 4, i1 false)
  %395 = load i32* @ply, align 4
  %idxprom723 = sext i32 %395 to i64
  %arrayidx724 = getelementptr inbounds [300 x %struct.move_s]* @killer2, i32 0, i64 %idxprom723
  %396 = load i32* @ply, align 4
  %idxprom725 = sext i32 %396 to i64
  %arrayidx726 = getelementptr inbounds [300 x %struct.move_s]* @killer3, i32 0, i64 %idxprom725
  %397 = bitcast %struct.move_s* %arrayidx724 to i8*
  %398 = bitcast %struct.move_s* %arrayidx726 to i8*
  call void @__softboundcets_memcopy_check(i8* %397, i8* %398, i64 24, i8* null, i8* inttoptr (i64 281474976710656 to i8*), i8* null, i8* inttoptr (i64 281474976710656 to i8*))
  call void @__softboundcets_copy_metadata(i8* %397, i8* %398, i64 24)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %397, i8* %398, i64 24, i32 4, i1 false)
  %399 = load i32* @ply, align 4
  %idxprom727 = sext i32 %399 to i64
  %arrayidx728 = getelementptr inbounds [300 x %struct.move_s]* @killer3, i32 0, i64 %idxprom727
  %400 = bitcast %struct.move_s* %arrayidx728 to i8*
  %401 = bitcast %struct.move_s* %kswap to i8*
  call void @__softboundcets_memcopy_check(i8* %400, i8* %401, i64 24, i8* null, i8* inttoptr (i64 281474976710656 to i8*), i8* %bitcast941, i8* %bitcast943)
  call void @__softboundcets_copy_metadata(i8* %400, i8* %401, i64 24)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %400, i8* %401, i64 24, i32 4, i1 false)
  %402 = load i32* @ply, align 4
  %idxprom729 = sext i32 %402 to i64
  %arrayidx730 = getelementptr inbounds [300 x i32]* @killer_scores2, i32 0, i64 %idxprom729
  %403 = load i32* %arrayidx730, align 4
  store i32 %403, i32* %ksswap, align 4
  %404 = load i32* @ply, align 4
  %idxprom731 = sext i32 %404 to i64
  %arrayidx732 = getelementptr inbounds [300 x i32]* @killer_scores3, i32 0, i64 %idxprom731
  %405 = load i32* %arrayidx732, align 4
  %406 = load i32* @ply, align 4
  %idxprom733 = sext i32 %406 to i64
  %arrayidx734 = getelementptr inbounds [300 x i32]* @killer_scores2, i32 0, i64 %idxprom733
  store i32 %405, i32* %arrayidx734, align 4
  %407 = load i32* %ksswap, align 4
  %408 = load i32* @ply, align 4
  %idxprom735 = sext i32 %408 to i64
  %arrayidx736 = getelementptr inbounds [300 x i32]* @killer_scores3, i32 0, i64 %idxprom735
  store i32 %407, i32* %arrayidx736, align 4
  br label %if.end737

if.end737:                                        ; preds = %if.then720, %if.then710
  br label %if.end745

if.else738:                                       ; preds = %land.lhs.true701, %land.lhs.true692, %if.else683
  %409 = load i32* @ply, align 4
  %idxprom739 = sext i32 %409 to i64
  %arrayidx740 = getelementptr inbounds [300 x i32]* @killer_scores3, i32 0, i64 %idxprom739
  store i32 1, i32* %arrayidx740, align 4
  %410 = load i32* @ply, align 4
  %idxprom741 = sext i32 %410 to i64
  %arrayidx742 = getelementptr inbounds [300 x %struct.move_s]* @killer3, i32 0, i64 %idxprom741
  %411 = load i32* %i, align 4
  %idxprom743 = sext i32 %411 to i64
  %arrayidx744 = getelementptr inbounds [512 x %struct.move_s]* %moves, i32 0, i64 %idxprom743
  %412 = bitcast %struct.move_s* %arrayidx742 to i8*
  %413 = bitcast %struct.move_s* %arrayidx744 to i8*
  call void @__softboundcets_memcopy_check(i8* %412, i8* %413, i64 24, i8* null, i8* inttoptr (i64 281474976710656 to i8*), i8* %bitcast853, i8* %bitcast855)
  call void @__softboundcets_copy_metadata(i8* %412, i8* %413, i64 24)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %412, i8* %413, i64 24, i32 4, i1 false)
  br label %if.end745

if.end745:                                        ; preds = %if.else738, %if.end737
  br label %if.end746

if.end746:                                        ; preds = %if.end745, %if.end682
  br label %if.end747

if.end747:                                        ; preds = %if.end746, %if.then624
  br label %if.end748

if.end748:                                        ; preds = %if.end747, %if.then580
  %414 = load i32* %first, align 4
  %cmp749 = icmp eq i32 %414, 1
  br i1 %cmp749, label %if.then751, label %if.end753

if.then751:                                       ; preds = %if.end748
  %415 = load i32* @FHF, align 4
  %inc752 = add i32 %415, 1
  store i32 %inc752, i32* @FHF, align 4
  br label %if.end753

if.end753:                                        ; preds = %if.then751, %if.end748
  %416 = load i32* @FH, align 4
  %inc754 = add i32 %416, 1
  store i32 %inc754, i32* @FH, align 4
  %417 = load i32* %score, align 4
  %418 = load i32* %originalalpha, align 4
  %419 = load i32* %beta.addr, align 4
  %420 = load i32* %i, align 4
  %421 = load i32* %threat, align 4
  %422 = load i32* %depth.addr, align 4
  call void @StoreTT(i32 %417, i32 %418, i32 %419, i32 %420, i32 %421, i32 %422)
  %423 = load i32* %score, align 4
  store i32 %423, i32* %retval
  br label %return

if.end755:                                        ; preds = %if.then577
  %424 = load i32* %score, align 4
  store i32 %424, i32* %alpha.addr, align 4
  %425 = load i32* %i, align 4
  store i32 %425, i32* %sbest, align 4
  %426 = load i32* @ply, align 4
  %idxprom756 = sext i32 %426 to i64
  %427 = load i32* @ply, align 4
  %idxprom757 = sext i32 %427 to i64
  %arrayidx758 = getelementptr inbounds [300 x [300 x %struct.move_s]]* @pv, i32 0, i64 %idxprom757
  %arrayidx759 = getelementptr inbounds [300 x %struct.move_s]* %arrayidx758, i32 0, i64 %idxprom756
  %428 = load i32* %i, align 4
  %idxprom760 = sext i32 %428 to i64
  %arrayidx761 = getelementptr inbounds [512 x %struct.move_s]* %moves, i32 0, i64 %idxprom760
  %429 = bitcast %struct.move_s* %arrayidx759 to i8*
  %430 = bitcast %struct.move_s* %arrayidx761 to i8*
  call void @__softboundcets_memcopy_check(i8* %429, i8* %430, i64 24, i8* null, i8* inttoptr (i64 281474976710656 to i8*), i8* %bitcast853, i8* %bitcast855)
  call void @__softboundcets_copy_metadata(i8* %429, i8* %430, i64 24)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %429, i8* %430, i64 24, i32 4, i1 false)
  %431 = load i32* @ply, align 4
  %add762 = add nsw i32 %431, 1
  store i32 %add762, i32* %j, align 4
  br label %for.cond763

for.cond763:                                      ; preds = %for.inc779, %if.end755
  %432 = load i32* %j, align 4
  %433 = load i32* @ply, align 4
  %add764 = add nsw i32 %433, 1
  %idxprom765 = sext i32 %add764 to i64
  %arrayidx766 = getelementptr inbounds [300 x i32]* @pv_length, i32 0, i64 %idxprom765
  %434 = load i32* %arrayidx766, align 4
  %cmp767 = icmp slt i32 %432, %434
  br i1 %cmp767, label %for.body769, label %for.end781

for.body769:                                      ; preds = %for.cond763
  %435 = load i32* %j, align 4
  %idxprom770 = sext i32 %435 to i64
  %436 = load i32* @ply, align 4
  %idxprom771 = sext i32 %436 to i64
  %arrayidx772 = getelementptr inbounds [300 x [300 x %struct.move_s]]* @pv, i32 0, i64 %idxprom771
  %arrayidx773 = getelementptr inbounds [300 x %struct.move_s]* %arrayidx772, i32 0, i64 %idxprom770
  %437 = load i32* %j, align 4
  %idxprom774 = sext i32 %437 to i64
  %438 = load i32* @ply, align 4
  %add775 = add nsw i32 %438, 1
  %idxprom776 = sext i32 %add775 to i64
  %arrayidx777 = getelementptr inbounds [300 x [300 x %struct.move_s]]* @pv, i32 0, i64 %idxprom776
  %arrayidx778 = getelementptr inbounds [300 x %struct.move_s]* %arrayidx777, i32 0, i64 %idxprom774
  %439 = bitcast %struct.move_s* %arrayidx773 to i8*
  %440 = bitcast %struct.move_s* %arrayidx778 to i8*
  call void @__softboundcets_memcopy_check(i8* %439, i8* %440, i64 24, i8* null, i8* inttoptr (i64 281474976710656 to i8*), i8* null, i8* inttoptr (i64 281474976710656 to i8*))
  call void @__softboundcets_copy_metadata(i8* %439, i8* %440, i64 24)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %439, i8* %440, i64 24, i32 4, i1 false)
  br label %for.inc779

for.inc779:                                       ; preds = %for.body769
  %441 = load i32* %j, align 4
  %inc780 = add nsw i32 %441, 1
  store i32 %inc780, i32* %j, align 4
  br label %for.cond763

for.end781:                                       ; preds = %for.cond763
  %442 = load i32* @ply, align 4
  %add782 = add nsw i32 %442, 1
  %idxprom783 = sext i32 %add782 to i64
  %arrayidx784 = getelementptr inbounds [300 x i32]* @pv_length, i32 0, i64 %idxprom783
  %443 = load i32* %arrayidx784, align 4
  %444 = load i32* @ply, align 4
  %idxprom785 = sext i32 %444 to i64
  %arrayidx786 = getelementptr inbounds [300 x i32]* @pv_length, i32 0, i64 %idxprom785
  store i32 %443, i32* %arrayidx786, align 4
  br label %if.end787

if.end787:                                        ; preds = %for.end781, %land.lhs.true575, %if.end572
  %445 = load i32* %legal_move, align 4
  %tobool788 = icmp ne i32 %445, 0
  br i1 %tobool788, label %if.then789, label %if.end790

if.then789:                                       ; preds = %if.end787
  store i32 0, i32* %first, align 4
  br label %if.end790

if.end790:                                        ; preds = %if.then789, %if.end787
  br label %while.cond

while.end:                                        ; preds = %while.cond
  br label %if.end794

if.else791:                                       ; preds = %if.end354
  %446 = load i32* @ply, align 4
  %sub792 = sub nsw i32 1000000, %446
  %447 = load i32* %originalalpha, align 4
  %448 = load i32* %beta.addr, align 4
  %449 = load i32* %threat, align 4
  %450 = load i32* %depth.addr, align 4
  call void @StoreTT(i32 %sub792, i32 %447, i32 %448, i32 0, i32 %449, i32 %450)
  %451 = load i32* @ply, align 4
  %sub793 = sub nsw i32 1000000, %451
  store i32 %sub793, i32* %retval
  br label %return

if.end794:                                        ; preds = %while.end
  %452 = load i32* %no_moves, align 4
  %tobool795 = icmp ne i32 %452, 0
  br i1 %tobool795, label %if.then796, label %if.else812

if.then796:                                       ; preds = %if.end794
  %453 = load i32* @Variant, align 4
  %cmp797 = icmp ne i32 %453, 4
  br i1 %cmp797, label %land.lhs.true799, label %if.else809

land.lhs.true799:                                 ; preds = %if.then796
  %454 = load i32* @Variant, align 4
  %cmp800 = icmp ne i32 %454, 3
  br i1 %cmp800, label %if.then802, label %if.else809

if.then802:                                       ; preds = %land.lhs.true799
  %call803 = call i32 @in_check()
  %tobool804 = icmp ne i32 %call803, 0
  br i1 %tobool804, label %if.then805, label %if.else808

if.then805:                                       ; preds = %if.then802
  %455 = load i32* @ply, align 4
  %add806 = add nsw i32 -1000000, %455
  %456 = load i32* %originalalpha, align 4
  %457 = load i32* %beta.addr, align 4
  %458 = load i32* %threat, align 4
  %459 = load i32* %depth.addr, align 4
  call void @StoreTT(i32 %add806, i32 %456, i32 %457, i32 0, i32 %458, i32 %459)
  %460 = load i32* @ply, align 4
  %add807 = add nsw i32 -1000000, %460
  store i32 %add807, i32* %retval
  br label %return

if.else808:                                       ; preds = %if.then802
  %461 = load i32* %originalalpha, align 4
  %462 = load i32* %beta.addr, align 4
  %463 = load i32* %threat, align 4
  %464 = load i32* %depth.addr, align 4
  call void @StoreTT(i32 0, i32 %461, i32 %462, i32 0, i32 %463, i32 %464)
  store i32 0, i32* %retval
  br label %return

if.else809:                                       ; preds = %land.lhs.true799, %if.then796
  %465 = load i32* @ply, align 4
  %sub810 = sub nsw i32 1000000, %465
  %466 = load i32* %originalalpha, align 4
  %467 = load i32* %beta.addr, align 4
  %468 = load i32* %threat, align 4
  %469 = load i32* %depth.addr, align 4
  call void @StoreTT(i32 %sub810, i32 %466, i32 %467, i32 0, i32 %468, i32 %469)
  %470 = load i32* @ply, align 4
  %sub811 = sub nsw i32 1000000, %470
  store i32 %sub811, i32* %retval
  br label %return

if.else812:                                       ; preds = %if.end794
  %471 = load i32* @fifty, align 4
  %cmp813 = icmp sgt i32 %471, 100
  br i1 %cmp813, label %if.then815, label %if.end816

if.then815:                                       ; preds = %if.else812
  store i32 0, i32* %retval
  br label %return

if.end816:                                        ; preds = %if.else812
  br label %if.end817

if.end817:                                        ; preds = %if.end816
  %472 = load i32* %sbest, align 4
  %cmp818 = icmp eq i32 %472, -1
  br i1 %cmp818, label %if.then820, label %if.end821

if.then820:                                       ; preds = %if.end817
  store i32 500, i32* %sbest, align 4
  br label %if.end821

if.end821:                                        ; preds = %if.then820, %if.end817
  %473 = load i32* %best_score, align 4
  %474 = load i32* %originalalpha, align 4
  %cmp822 = icmp sle i32 %473, %474
  br i1 %cmp822, label %if.then824, label %if.else828

if.then824:                                       ; preds = %if.end821
  %475 = load i32* %selective, align 4
  %tobool825 = icmp ne i32 %475, 0
  br i1 %tobool825, label %if.end827, label %if.then826

if.then826:                                       ; preds = %if.then824
  %476 = load i32* %best_score, align 4
  %477 = load i32* %originalalpha, align 4
  %478 = load i32* %beta.addr, align 4
  %479 = load i32* %sbest, align 4
  %480 = load i32* %threat, align 4
  %481 = load i32* %depth.addr, align 4
  call void @StoreTT(i32 %476, i32 %477, i32 %478, i32 %479, i32 %480, i32 %481)
  br label %if.end827

if.end827:                                        ; preds = %if.then826, %if.then824
  br label %if.end833

if.else828:                                       ; preds = %if.end821
  %482 = load i32* %selective, align 4
  %tobool829 = icmp ne i32 %482, 0
  br i1 %tobool829, label %if.else831, label %if.then830

if.then830:                                       ; preds = %if.else828
  %483 = load i32* %best_score, align 4
  %484 = load i32* %originalalpha, align 4
  %485 = load i32* %beta.addr, align 4
  %486 = load i32* %sbest, align 4
  %487 = load i32* %threat, align 4
  %488 = load i32* %depth.addr, align 4
  call void @StoreTT(i32 %483, i32 %484, i32 %485, i32 %486, i32 %487, i32 %488)
  br label %if.end832

if.else831:                                       ; preds = %if.else828
  %489 = load i32* %best_score, align 4
  %490 = load i32* %sbest, align 4
  %491 = load i32* %threat, align 4
  %492 = load i32* %depth.addr, align 4
  call void @StoreTT(i32 %489, i32 -1000000, i32 -1000000, i32 %490, i32 %491, i32 %492)
  br label %if.end832

if.end832:                                        ; preds = %if.else831, %if.then830
  br label %if.end833

if.end833:                                        ; preds = %if.end832, %if.end827
  %493 = load i32* %best_score, align 4
  store i32 %493, i32* %retval
  br label %return

return:                                           ; preds = %if.end833, %if.then815, %if.else809, %if.else808, %if.then805, %if.else791, %if.end753, %if.then571, %if.then232, %if.then228, %cond.end146, %if.then128, %if.then124, %sw.bb, %if.else116, %cond.end114, %if.then100, %if.then95, %if.then29, %if.else23, %if.then2
  %494 = load i32* %retval
  ret i32 %494
}

; Function Attrs: nounwind uwtable
define internal void @search_root(%struct.move_s* noalias sret %agg.result, i32 %originalalpha, i32 %originalbeta, i32 %depth) #0 {
entry:
  %0 = call i8* @__softboundcets_load_base_shadow_stack(i32 1)
  %1 = call i8* @__softboundcets_load_bound_shadow_stack(i32 1)
  %originalalpha.addr = alloca i32, align 4
  %originalalpha.addr484 = bitcast i32* %originalalpha.addr to i32*
  %bitcast = bitcast i32* %originalalpha.addr to i8*
  %mtmp = getelementptr i32* %originalalpha.addr484, i32 1
  %bitcast485 = bitcast i32* %mtmp to i8*
  %originalbeta.addr = alloca i32, align 4
  %originalbeta.addr486 = bitcast i32* %originalbeta.addr to i32*
  %bitcast487 = bitcast i32* %originalbeta.addr to i8*
  %mtmp488 = getelementptr i32* %originalbeta.addr486, i32 1
  %bitcast489 = bitcast i32* %mtmp488 to i8*
  %depth.addr = alloca i32, align 4
  %depth.addr490 = bitcast i32* %depth.addr to i32*
  %bitcast491 = bitcast i32* %depth.addr to i8*
  %mtmp492 = getelementptr i32* %depth.addr490, i32 1
  %bitcast493 = bitcast i32* %mtmp492 to i8*
  %moves = alloca [512 x %struct.move_s], align 16
  %moves494 = bitcast [512 x %struct.move_s]* %moves to [512 x %struct.move_s]*
  %bitcast495 = bitcast [512 x %struct.move_s]* %moves to i8*
  %mtmp496 = getelementptr [512 x %struct.move_s]* %moves494, i32 1
  %bitcast497 = bitcast [512 x %struct.move_s]* %mtmp496 to i8*
  %best_move = alloca %struct.move_s, align 4
  %best_move498 = bitcast %struct.move_s* %best_move to %struct.move_s*
  %bitcast499 = bitcast %struct.move_s* %best_move to i8*
  %mtmp500 = getelementptr %struct.move_s* %best_move498, i32 1
  %bitcast501 = bitcast %struct.move_s* %mtmp500 to i8*
  %num_moves = alloca i32, align 4
  %num_moves502 = bitcast i32* %num_moves to i32*
  %bitcast503 = bitcast i32* %num_moves to i8*
  %mtmp504 = getelementptr i32* %num_moves502, i32 1
  %bitcast505 = bitcast i32* %mtmp504 to i8*
  %i = alloca i32, align 4
  %i506 = bitcast i32* %i to i32*
  %bitcast507 = bitcast i32* %i to i8*
  %mtmp508 = getelementptr i32* %i506, i32 1
  %bitcast509 = bitcast i32* %mtmp508 to i8*
  %j = alloca i32, align 4
  %j510 = bitcast i32* %j to i32*
  %bitcast511 = bitcast i32* %j to i8*
  %mtmp512 = getelementptr i32* %j510, i32 1
  %bitcast513 = bitcast i32* %mtmp512 to i8*
  %root_score = alloca i32, align 4
  %root_score514 = bitcast i32* %root_score to i32*
  %bitcast515 = bitcast i32* %root_score to i8*
  %mtmp516 = getelementptr i32* %root_score514, i32 1
  %bitcast517 = bitcast i32* %mtmp516 to i8*
  %move_ordering = alloca [512 x i32], align 16
  %move_ordering518 = bitcast [512 x i32]* %move_ordering to [512 x i32]*
  %bitcast519 = bitcast [512 x i32]* %move_ordering to i8*
  %mtmp520 = getelementptr [512 x i32]* %move_ordering518, i32 1
  %bitcast521 = bitcast [512 x i32]* %mtmp520 to i8*
  %see_values = alloca [512 x i32], align 16
  %see_values522 = bitcast [512 x i32]* %see_values to [512 x i32]*
  %bitcast523 = bitcast [512 x i32]* %see_values to i8*
  %mtmp524 = getelementptr [512 x i32]* %see_values522, i32 1
  %bitcast525 = bitcast [512 x i32]* %mtmp524 to i8*
  %no_moves = alloca i32, align 4
  %no_moves526 = bitcast i32* %no_moves to i32*
  %bitcast527 = bitcast i32* %no_moves to i8*
  %mtmp528 = getelementptr i32* %no_moves526, i32 1
  %bitcast529 = bitcast i32* %mtmp528 to i8*
  %legal_move = alloca i32, align 4
  %legal_move530 = bitcast i32* %legal_move to i32*
  %bitcast531 = bitcast i32* %legal_move to i8*
  %mtmp532 = getelementptr i32* %legal_move530, i32 1
  %bitcast533 = bitcast i32* %mtmp532 to i8*
  %first = alloca i32, align 4
  %first534 = bitcast i32* %first to i32*
  %bitcast535 = bitcast i32* %first to i8*
  %mtmp536 = getelementptr i32* %first534, i32 1
  %bitcast537 = bitcast i32* %mtmp536 to i8*
  %alpha = alloca i32, align 4
  %alpha538 = bitcast i32* %alpha to i32*
  %bitcast539 = bitcast i32* %alpha to i8*
  %mtmp540 = getelementptr i32* %alpha538, i32 1
  %bitcast541 = bitcast i32* %mtmp540 to i8*
  %beta = alloca i32, align 4
  %beta542 = bitcast i32* %beta to i32*
  %bitcast543 = bitcast i32* %beta to i8*
  %mtmp544 = getelementptr i32* %beta542, i32 1
  %bitcast545 = bitcast i32* %mtmp544 to i8*
  %kswap = alloca %struct.move_s, align 4
  %kswap546 = bitcast %struct.move_s* %kswap to %struct.move_s*
  %bitcast547 = bitcast %struct.move_s* %kswap to i8*
  %mtmp548 = getelementptr %struct.move_s* %kswap546, i32 1
  %bitcast549 = bitcast %struct.move_s* %mtmp548 to i8*
  %ksswap = alloca i32, align 4
  %ksswap550 = bitcast i32* %ksswap to i32*
  %bitcast551 = bitcast i32* %ksswap to i8*
  %mtmp552 = getelementptr i32* %ksswap550, i32 1
  %bitcast553 = bitcast i32* %mtmp552 to i8*
  %incheck = alloca i32, align 4
  %incheck554 = bitcast i32* %incheck to i32*
  %bitcast555 = bitcast i32* %incheck to i8*
  %mtmp556 = getelementptr i32* %incheck554, i32 1
  %bitcast557 = bitcast i32* %mtmp556 to i8*
  %mc = alloca i32, align 4
  %mc558 = bitcast i32* %mc to i32*
  %bitcast559 = bitcast i32* %mc to i8*
  %mtmp560 = getelementptr i32* %mc558, i32 1
  %bitcast561 = bitcast i32* %mtmp560 to i8*
  %oldnodecount = alloca i32, align 4
  %oldnodecount562 = bitcast i32* %oldnodecount to i32*
  %bitcast563 = bitcast i32* %oldnodecount to i8*
  %mtmp564 = getelementptr i32* %oldnodecount562, i32 1
  %bitcast565 = bitcast i32* %mtmp564 to i8*
  store i32 %originalalpha, i32* %originalalpha.addr, align 4
  store i32 %originalbeta, i32* %originalbeta.addr, align 4
  store i32 %depth, i32* %depth.addr, align 4
  %2 = bitcast %struct.move_s* %best_move to i8*
  call void @__softboundcets_memcopy_check(i8* %2, i8* bitcast (%struct.move_s* @dummy to i8*), i64 24, i8* %bitcast499, i8* %bitcast501, i8* null, i8* inttoptr (i64 281474976710656 to i8*))
  call void @__softboundcets_copy_metadata(i8* %2, i8* bitcast (%struct.move_s* @dummy to i8*), i64 24)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %2, i8* bitcast (%struct.move_s* @dummy to i8*), i64 24, i32 4, i1 false)
  store i32 -1000000, i32* %root_score, align 4
  store i32 0, i32* %mc, align 4
  %3 = load i32* %originalalpha.addr, align 4
  store i32 %3, i32* %alpha, align 4
  %4 = load i32* %originalbeta.addr, align 4
  store i32 %4, i32* %beta, align 4
  store i32 0, i32* %num_moves, align 4
  store i32 1, i32* %no_moves, align 4
  store i32 1, i32* @ply, align 4
  store i32 1, i32* @searching_pv, align 4
  store i32 0, i32* @time_exit, align 4
  store i32 0, i32* @time_failure, align 4
  store i32 1, i32* %first, align 4
  store i32 -1000000, i32* @cur_score, align 4
  %5 = load i32* @nodes, align 4
  %inc = add nsw i32 %5, 1
  store i32 %inc, i32* @nodes, align 4
  %call = call i32 @is_draw()
  %tobool = icmp ne i32 %call, 0
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  store i32 5, i32* @result, align 4
  store i32 0, i32* @cur_score, align 4
  %6 = load i32* @ply, align 4
  %idxprom = sext i32 %6 to i64
  %arrayidx = getelementptr inbounds [300 x i32]* @pv_length, i32 0, i64 %idxprom
  store i32 0, i32* %arrayidx, align 4
  %7 = bitcast %struct.move_s* %agg.result to i8*
  call void @__softboundcets_memcopy_check(i8* %7, i8* bitcast (%struct.move_s* @dummy to i8*), i64 24, i8* %0, i8* %1, i8* null, i8* inttoptr (i64 281474976710656 to i8*))
  call void @__softboundcets_copy_metadata(i8* %7, i8* bitcast (%struct.move_s* @dummy to i8*), i64 24)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %7, i8* bitcast (%struct.move_s* @dummy to i8*), i64 24, i32 4, i1 false)
  br label %return

if.end:                                           ; preds = %entry
  %8 = load i32* @ply, align 4
  %9 = load i32* @ply, align 4
  %idxprom1 = sext i32 %9 to i64
  %arrayidx2 = getelementptr inbounds [300 x i32]* @pv_length, i32 0, i64 %idxprom1
  store i32 %8, i32* %arrayidx2, align 4
  %10 = load i32* @hash, align 4
  %11 = load i32* @move_number, align 4
  %12 = load i32* @ply, align 4
  %add = add nsw i32 %11, %12
  %sub = sub nsw i32 %add, 1
  %idxprom3 = sext i32 %sub to i64
  %arrayidx4 = getelementptr inbounds [600 x i32]* @hash_history, i32 0, i64 %idxprom3
  store i32 %10, i32* %arrayidx4, align 4
  %call5 = call i32 @in_check()
  store i32 %call5, i32* %incheck, align 4
  %13 = load i32* %incheck, align 4
  %tobool6 = icmp ne i32 %13, 0
  br i1 %tobool6, label %if.then7, label %if.end10

if.then7:                                         ; preds = %if.end
  %14 = load i32* @ext_check, align 4
  %inc8 = add i32 %14, 1
  store i32 %inc8, i32* @ext_check, align 4
  %15 = load i32* %depth.addr, align 4
  %inc9 = add nsw i32 %15, 1
  store i32 %inc9, i32* %depth.addr, align 4
  br label %if.end10

if.end10:                                         ; preds = %if.then7, %if.end
  %16 = load i32* %incheck, align 4
  %17 = load i32* @ply, align 4
  %idxprom11 = sext i32 %17 to i64
  %bitcast566 = bitcast [300 x i32]* @checks to i8*
  %bitcast567 = bitcast [300 x i32]* getelementptr inbounds ([300 x i32]* @checks, i32 1) to i8*
  %arrayidx12 = getelementptr inbounds [300 x i32]* @checks, i32 0, i64 %idxprom11
  store i32 %16, i32* %arrayidx12, align 4
  %18 = load i32* @ply, align 4
  %idxprom13 = sext i32 %18 to i64
  %bitcast568 = bitcast [300 x i32]* @recaps to i8*
  %bitcast569 = bitcast [300 x i32]* getelementptr inbounds ([300 x i32]* @recaps, i32 1) to i8*
  %arrayidx14 = getelementptr inbounds [300 x i32]* @recaps, i32 0, i64 %idxprom13
  store i32 0, i32* %arrayidx14, align 4
  %19 = load i32* @ply, align 4
  %idxprom15 = sext i32 %19 to i64
  %bitcast570 = bitcast [300 x i32]* @singular to i8*
  %bitcast571 = bitcast [300 x i32]* getelementptr inbounds ([300 x i32]* @singular, i32 1) to i8*
  %arrayidx16 = getelementptr inbounds [300 x i32]* @singular, i32 0, i64 %idxprom15
  store i32 0, i32* %arrayidx16, align 4
  %20 = load i32* @Variant, align 4
  %cmp = icmp eq i32 %20, 4
  br i1 %cmp, label %if.then17, label %if.else

if.then17:                                        ; preds = %if.end10
  store i32 0, i32* @legals, align 4
  store i32 1, i32* @captures, align 4
  %arrayidx18 = getelementptr inbounds [512 x %struct.move_s]* %moves, i32 0, i64 0
  call void @__softboundcets_allocate_shadow_stack_space(i32 2)
  call void @__softboundcets_store_base_shadow_stack(i8* %bitcast495, i32 1)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bitcast497, i32 1)
  call void @gen(%struct.move_s* %arrayidx18)
  call void @__softboundcets_deallocate_shadow_stack_space()
  %21 = load i32* @numb_moves, align 4
  store i32 %21, i32* %num_moves, align 4
  store i32 0, i32* @captures, align 4
  %22 = load i32* %num_moves, align 4
  %tobool19 = icmp ne i32 %22, 0
  br i1 %tobool19, label %if.then20, label %if.end31

if.then20:                                        ; preds = %if.then17
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.then20
  %23 = load i32* %i, align 4
  %24 = load i32* %num_moves, align 4
  %cmp21 = icmp slt i32 %23, %24
  br i1 %cmp21, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %arrayidx22 = getelementptr inbounds [512 x %struct.move_s]* %moves, i32 0, i64 0
  %25 = load i32* %i, align 4
  call void @__softboundcets_allocate_shadow_stack_space(i32 2)
  call void @__softboundcets_store_base_shadow_stack(i8* %bitcast495, i32 1)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bitcast497, i32 1)
  call void @make(%struct.move_s* %arrayidx22, i32 %25)
  call void @__softboundcets_deallocate_shadow_stack_space()
  %arrayidx23 = getelementptr inbounds [512 x %struct.move_s]* %moves, i32 0, i64 0
  %26 = load i32* %i, align 4
  %27 = load i32* %incheck, align 4
  call void @__softboundcets_allocate_shadow_stack_space(i32 2)
  call void @__softboundcets_store_base_shadow_stack(i8* %bitcast495, i32 1)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bitcast497, i32 1)
  %call24 = call i32 @check_legal(%struct.move_s* %arrayidx23, i32 %26, i32 %27)
  call void @__softboundcets_deallocate_shadow_stack_space()
  %tobool25 = icmp ne i32 %call24, 0
  br i1 %tobool25, label %if.then26, label %if.end28

if.then26:                                        ; preds = %for.body
  %28 = load i32* @legals, align 4
  %inc27 = add nsw i32 %28, 1
  store i32 %inc27, i32* @legals, align 4
  br label %if.end28

if.end28:                                         ; preds = %if.then26, %for.body
  %arrayidx29 = getelementptr inbounds [512 x %struct.move_s]* %moves, i32 0, i64 0
  %29 = load i32* %i, align 4
  call void @__softboundcets_allocate_shadow_stack_space(i32 2)
  call void @__softboundcets_store_base_shadow_stack(i8* %bitcast495, i32 1)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bitcast497, i32 1)
  call void @unmake(%struct.move_s* %arrayidx29, i32 %29)
  call void @__softboundcets_deallocate_shadow_stack_space()
  br label %for.inc

for.inc:                                          ; preds = %if.end28
  %30 = load i32* %i, align 4
  %inc30 = add nsw i32 %30, 1
  store i32 %inc30, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  br label %if.end31

if.end31:                                         ; preds = %for.end, %if.then17
  %31 = load i32* @legals, align 4
  %tobool32 = icmp ne i32 %31, 0
  br i1 %tobool32, label %if.end49, label %if.then33

if.then33:                                        ; preds = %if.end31
  store i32 0, i32* @captures, align 4
  %arrayidx34 = getelementptr inbounds [512 x %struct.move_s]* %moves, i32 0, i64 0
  call void @__softboundcets_allocate_shadow_stack_space(i32 2)
  call void @__softboundcets_store_base_shadow_stack(i8* %bitcast495, i32 1)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bitcast497, i32 1)
  call void @gen(%struct.move_s* %arrayidx34)
  call void @__softboundcets_deallocate_shadow_stack_space()
  %32 = load i32* @numb_moves, align 4
  store i32 %32, i32* %num_moves, align 4
  store i32 0, i32* %i, align 4
  br label %for.cond35

for.cond35:                                       ; preds = %for.inc46, %if.then33
  %33 = load i32* %i, align 4
  %34 = load i32* %num_moves, align 4
  %cmp36 = icmp slt i32 %33, %34
  br i1 %cmp36, label %for.body37, label %for.end48

for.body37:                                       ; preds = %for.cond35
  %arrayidx38 = getelementptr inbounds [512 x %struct.move_s]* %moves, i32 0, i64 0
  %35 = load i32* %i, align 4
  call void @__softboundcets_allocate_shadow_stack_space(i32 2)
  call void @__softboundcets_store_base_shadow_stack(i8* %bitcast495, i32 1)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bitcast497, i32 1)
  call void @make(%struct.move_s* %arrayidx38, i32 %35)
  call void @__softboundcets_deallocate_shadow_stack_space()
  %arrayidx39 = getelementptr inbounds [512 x %struct.move_s]* %moves, i32 0, i64 0
  %36 = load i32* %i, align 4
  %37 = load i32* %incheck, align 4
  call void @__softboundcets_allocate_shadow_stack_space(i32 2)
  call void @__softboundcets_store_base_shadow_stack(i8* %bitcast495, i32 1)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bitcast497, i32 1)
  %call40 = call i32 @check_legal(%struct.move_s* %arrayidx39, i32 %36, i32 %37)
  call void @__softboundcets_deallocate_shadow_stack_space()
  %tobool41 = icmp ne i32 %call40, 0
  br i1 %tobool41, label %if.then42, label %if.end44

if.then42:                                        ; preds = %for.body37
  %38 = load i32* @legals, align 4
  %inc43 = add nsw i32 %38, 1
  store i32 %inc43, i32* @legals, align 4
  br label %if.end44

if.end44:                                         ; preds = %if.then42, %for.body37
  %arrayidx45 = getelementptr inbounds [512 x %struct.move_s]* %moves, i32 0, i64 0
  %39 = load i32* %i, align 4
  call void @__softboundcets_allocate_shadow_stack_space(i32 2)
  call void @__softboundcets_store_base_shadow_stack(i8* %bitcast495, i32 1)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bitcast497, i32 1)
  call void @unmake(%struct.move_s* %arrayidx45, i32 %39)
  call void @__softboundcets_deallocate_shadow_stack_space()
  br label %for.inc46

for.inc46:                                        ; preds = %if.end44
  %40 = load i32* %i, align 4
  %inc47 = add nsw i32 %40, 1
  store i32 %inc47, i32* %i, align 4
  br label %for.cond35

for.end48:                                        ; preds = %for.cond35
  br label %if.end49

if.end49:                                         ; preds = %for.end48, %if.end31
  br label %if.end51

if.else:                                          ; preds = %if.end10
  %arrayidx50 = getelementptr inbounds [512 x %struct.move_s]* %moves, i32 0, i64 0
  call void @__softboundcets_allocate_shadow_stack_space(i32 2)
  call void @__softboundcets_store_base_shadow_stack(i8* %bitcast495, i32 1)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bitcast497, i32 1)
  call void @gen(%struct.move_s* %arrayidx50)
  call void @__softboundcets_deallocate_shadow_stack_space()
  %41 = load i32* @numb_moves, align 4
  store i32 %41, i32* %num_moves, align 4
  br label %if.end51

if.end51:                                         ; preds = %if.else, %if.end49
  %42 = load i32* @legals, align 4
  store i32 %42, i32* @movetotal, align 4
  %arrayidx52 = getelementptr inbounds [512 x %struct.move_s]* %moves, i32 0, i64 0
  %arrayidx53 = getelementptr inbounds [512 x i32]* %move_ordering, i32 0, i64 0
  %arrayidx54 = getelementptr inbounds [512 x i32]* %see_values, i32 0, i64 0
  %43 = load i32* %num_moves, align 4
  call void @__softboundcets_allocate_shadow_stack_space(i32 4)
  call void @__softboundcets_store_base_shadow_stack(i8* %bitcast495, i32 1)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bitcast497, i32 1)
  call void @__softboundcets_store_base_shadow_stack(i8* %bitcast519, i32 2)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bitcast521, i32 2)
  call void @__softboundcets_store_base_shadow_stack(i8* %bitcast523, i32 3)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bitcast525, i32 3)
  call void @order_moves(%struct.move_s* %arrayidx52, i32* %arrayidx53, i32* %arrayidx54, i32 %43, i32 -1)
  call void @__softboundcets_deallocate_shadow_stack_space()
  br label %while.cond

while.cond:                                       ; preds = %if.end447, %if.then65, %if.end51
  %arrayidx55 = getelementptr inbounds [512 x i32]* %move_ordering, i32 0, i64 0
  %44 = load i32* %num_moves, align 4
  call void @__softboundcets_allocate_shadow_stack_space(i32 3)
  call void @__softboundcets_store_base_shadow_stack(i8* %bitcast507, i32 1)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bitcast509, i32 1)
  call void @__softboundcets_store_base_shadow_stack(i8* %bitcast519, i32 2)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bitcast521, i32 2)
  %call56 = call i32 @remove_one(i32* %i, i32* %arrayidx55, i32 %44)
  call void @__softboundcets_deallocate_shadow_stack_space()
  %tobool57 = icmp ne i32 %call56, 0
  br i1 %tobool57, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  %45 = load i32* @alllosers, align 4
  %tobool58 = icmp ne i32 %45, 0
  br i1 %tobool58, label %if.end66, label %land.lhs.true

land.lhs.true:                                    ; preds = %while.body
  %46 = load i32* %i, align 4
  %idxprom59 = sext i32 %46 to i64
  %arrayidx60 = getelementptr inbounds [300 x i32]* @rootlosers, i32 0, i64 %idxprom59
  %47 = load i32* %arrayidx60, align 4
  %tobool61 = icmp ne i32 %47, 0
  br i1 %tobool61, label %land.lhs.true62, label %if.end66

land.lhs.true62:                                  ; preds = %land.lhs.true
  %48 = load i32* @Variant, align 4
  %cmp63 = icmp eq i32 %48, 4
  br i1 %cmp63, label %if.then65, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %land.lhs.true62
  %49 = load i32* @Variant, align 4
  %cmp64 = icmp eq i32 %49, 3
  br i1 %cmp64, label %if.then65, label %if.end66

if.then65:                                        ; preds = %lor.lhs.false, %land.lhs.true62
  br label %while.cond

if.end66:                                         ; preds = %lor.lhs.false, %land.lhs.true, %while.body
  %arrayidx67 = getelementptr inbounds [512 x %struct.move_s]* %moves, i32 0, i64 0
  %50 = load i32* %i, align 4
  call void @__softboundcets_allocate_shadow_stack_space(i32 2)
  call void @__softboundcets_store_base_shadow_stack(i8* %bitcast495, i32 1)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bitcast497, i32 1)
  call void @make(%struct.move_s* %arrayidx67, i32 %50)
  call void @__softboundcets_deallocate_shadow_stack_space()
  store i32 0, i32* %legal_move, align 4
  %51 = load i32* @hash, align 4
  %52 = load i32* @move_number, align 4
  %53 = load i32* @ply, align 4
  %add68 = add nsw i32 %52, %53
  %sub69 = sub nsw i32 %add68, 1
  %idxprom70 = sext i32 %sub69 to i64
  %arrayidx71 = getelementptr inbounds [600 x i32]* @hash_history, i32 0, i64 %idxprom70
  store i32 %51, i32* %arrayidx71, align 4
  %54 = load i32* @ply, align 4
  %sub72 = sub nsw i32 %54, 1
  %idxprom73 = sext i32 %sub72 to i64
  %arrayidx74 = getelementptr inbounds [300 x %struct.move_s]* @path, i32 0, i64 %idxprom73
  %55 = load i32* %i, align 4
  %idxprom75 = sext i32 %55 to i64
  %arrayidx76 = getelementptr inbounds [512 x %struct.move_s]* %moves, i32 0, i64 %idxprom75
  %56 = bitcast %struct.move_s* %arrayidx74 to i8*
  %57 = bitcast %struct.move_s* %arrayidx76 to i8*
  call void @__softboundcets_memcopy_check(i8* %56, i8* %57, i64 24, i8* null, i8* inttoptr (i64 281474976710656 to i8*), i8* %bitcast495, i8* %bitcast497)
  call void @__softboundcets_copy_metadata(i8* %56, i8* %57, i64 24)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %56, i8* %57, i64 24, i32 4, i1 false)
  %58 = load i32* @nodes, align 4
  store i32 %58, i32* %oldnodecount, align 4
  %arrayidx77 = getelementptr inbounds [512 x %struct.move_s]* %moves, i32 0, i64 0
  %59 = load i32* %i, align 4
  %60 = load i32* %incheck, align 4
  call void @__softboundcets_allocate_shadow_stack_space(i32 2)
  call void @__softboundcets_store_base_shadow_stack(i8* %bitcast495, i32 1)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bitcast497, i32 1)
  %call78 = call i32 @check_legal(%struct.move_s* %arrayidx77, i32 %59, i32 %60)
  call void @__softboundcets_deallocate_shadow_stack_space()
  %tobool79 = icmp ne i32 %call78, 0
  br i1 %tobool79, label %if.then80, label %if.end248

if.then80:                                        ; preds = %if.end66
  %arrayidx81 = getelementptr inbounds [512 x %struct.move_s]* %moves, i32 0, i64 0
  %61 = load i32* %i, align 4
  call void @__softboundcets_allocate_shadow_stack_space(i32 2)
  call void @__softboundcets_store_base_shadow_stack(i8* %bitcast495, i32 1)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bitcast497, i32 1)
  call void @unmake(%struct.move_s* %arrayidx81, i32 %61)
  call void @__softboundcets_deallocate_shadow_stack_space()
  %62 = load i32* %mc, align 4
  %inc82 = add nsw i32 %62, 1
  store i32 %inc82, i32* %mc, align 4
  %63 = load i32* @movetotal, align 4
  %64 = load i32* %mc, align 4
  %sub83 = sub nsw i32 %63, %64
  store i32 %sub83, i32* @moveleft, align 4
  %65 = load i32* %i, align 4
  %idxprom84 = sext i32 %65 to i64
  %arrayidx85 = getelementptr inbounds [512 x %struct.move_s]* %moves, i32 0, i64 %idxprom84
  call void @__softboundcets_allocate_shadow_stack_space(i32 3)
  call void @__softboundcets_store_base_shadow_stack(i8* %bitcast495, i32 1)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bitcast497, i32 1)
  call void @__softboundcets_store_base_shadow_stack(i8* getelementptr inbounds ([20 x i8]* @searching_move, i32 0, i32 0), i32 2)
  call void @__softboundcets_store_bound_shadow_stack(i8* getelementptr inbounds ([20 x i8]* @searching_move, i32 1, i32 0), i32 2)
  call void @comp_to_san(%struct.move_s* byval align 8 %arrayidx85, i8* getelementptr inbounds ([20 x i8]* @searching_move, i32 0, i32 0))
  call void @__softboundcets_deallocate_shadow_stack_space()
  %arrayidx86 = getelementptr inbounds [512 x %struct.move_s]* %moves, i32 0, i64 0
  %66 = load i32* %i, align 4
  call void @__softboundcets_allocate_shadow_stack_space(i32 2)
  call void @__softboundcets_store_base_shadow_stack(i8* %bitcast495, i32 1)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bitcast497, i32 1)
  call void @make(%struct.move_s* %arrayidx86, i32 %66)
  call void @__softboundcets_deallocate_shadow_stack_space()
  %arrayidx87 = getelementptr inbounds [512 x %struct.move_s]* %moves, i32 0, i64 0
  %67 = load i32* %i, align 4
  call void @__softboundcets_allocate_shadow_stack_space(i32 2)
  call void @__softboundcets_store_base_shadow_stack(i8* %bitcast495, i32 1)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bitcast497, i32 1)
  %call88 = call i32 @f_in_check(%struct.move_s* %arrayidx87, i32 %67)
  call void @__softboundcets_deallocate_shadow_stack_space()
  %68 = load i32* @ply, align 4
  %idxprom89 = sext i32 %68 to i64
  %bitcast572 = bitcast [300 x i32]* @checks to i8*
  %bitcast573 = bitcast [300 x i32]* getelementptr inbounds ([300 x i32]* @checks, i32 1) to i8*
  %arrayidx90 = getelementptr inbounds [300 x i32]* @checks, i32 0, i64 %idxprom89
  store i32 %call88, i32* %arrayidx90, align 4
  %69 = load i32* @ply, align 4
  %idxprom91 = sext i32 %69 to i64
  %bitcast574 = bitcast [300 x i32]* @recaps to i8*
  %bitcast575 = bitcast [300 x i32]* getelementptr inbounds ([300 x i32]* @recaps, i32 1) to i8*
  %arrayidx92 = getelementptr inbounds [300 x i32]* @recaps, i32 0, i64 %idxprom91
  store i32 0, i32* %arrayidx92, align 4
  %70 = load i32* @ply, align 4
  %idxprom93 = sext i32 %70 to i64
  %bitcast576 = bitcast [300 x i32]* @singular to i8*
  %bitcast577 = bitcast [300 x i32]* getelementptr inbounds ([300 x i32]* @singular, i32 1) to i8*
  %arrayidx94 = getelementptr inbounds [300 x i32]* @singular, i32 0, i64 %idxprom93
  store i32 0, i32* %arrayidx94, align 4
  %71 = load i32* %first, align 4
  %cmp95 = icmp eq i32 %71, 1
  br i1 %cmp95, label %if.then98, label %lor.lhs.false96

lor.lhs.false96:                                  ; preds = %if.then80
  %72 = load i32* @i_depth, align 4
  %cmp97 = icmp slt i32 %72, 2
  br i1 %cmp97, label %if.then98, label %if.else162

if.then98:                                        ; preds = %lor.lhs.false96, %if.then80
  %73 = load i32* %beta, align 4
  %sub99 = sub nsw i32 0, %73
  %74 = load i32* %alpha, align 4
  %sub100 = sub nsw i32 0, %74
  %75 = load i32* %depth.addr, align 4
  %sub101 = sub nsw i32 %75, 1
  %call102 = call i32 @search(i32 %sub99, i32 %sub100, i32 %sub101, i32 0)
  %sub103 = sub nsw i32 0, %call102
  store i32 %sub103, i32* %root_score, align 4
  %76 = load i32* @time_exit, align 4
  %tobool104 = icmp ne i32 %76, 0
  br i1 %tobool104, label %if.end161, label %land.lhs.true105

land.lhs.true105:                                 ; preds = %if.then98
  %77 = load i32* @post, align 4
  %tobool106 = icmp ne i32 %77, 0
  br i1 %tobool106, label %land.lhs.true109, label %lor.lhs.false107

lor.lhs.false107:                                 ; preds = %land.lhs.true105
  %78 = load i32* @xb_mode, align 4
  %tobool108 = icmp ne i32 %78, 0
  br i1 %tobool108, label %if.end161, label %land.lhs.true109

land.lhs.true109:                                 ; preds = %lor.lhs.false107, %land.lhs.true105
  %79 = load i32* @i_depth, align 4
  %cmp110 = icmp sge i32 %79, 2
  br i1 %cmp110, label %if.then111, label %if.end161

if.then111:                                       ; preds = %land.lhs.true109
  %80 = load i32* %root_score, align 4
  %81 = load i32* %beta, align 4
  %cmp112 = icmp sge i32 %80, %81
  br i1 %cmp112, label %if.then113, label %if.else116

if.then113:                                       ; preds = %if.then111
  %82 = load i32* %root_score, align 4
  %83 = load i32* %i, align 4
  %idxprom114 = sext i32 %83 to i64
  %arrayidx115 = getelementptr inbounds [512 x %struct.move_s]* %moves, i32 0, i64 %idxprom114
  call void @__softboundcets_allocate_shadow_stack_space(i32 2)
  call void @__softboundcets_store_base_shadow_stack(i8* %bitcast495, i32 1)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bitcast497, i32 1)
  call void @post_fh_thinking(i32 %82, %struct.move_s* %arrayidx115)
  call void @__softboundcets_deallocate_shadow_stack_space()
  br label %if.end153

if.else116:                                       ; preds = %if.then111
  %84 = load i32* %root_score, align 4
  %85 = load i32* %alpha, align 4
  %cmp117 = icmp sle i32 %84, %85
  br i1 %cmp117, label %if.then118, label %if.else121

if.then118:                                       ; preds = %if.else116
  store i32 1, i32* @failed, align 4
  %86 = load i32* %root_score, align 4
  %87 = load i32* %i, align 4
  %idxprom119 = sext i32 %87 to i64
  %arrayidx120 = getelementptr inbounds [512 x %struct.move_s]* %moves, i32 0, i64 %idxprom119
  call void @__softboundcets_allocate_shadow_stack_space(i32 2)
  call void @__softboundcets_store_base_shadow_stack(i8* %bitcast495, i32 1)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bitcast497, i32 1)
  call void @post_fl_thinking(i32 %86, %struct.move_s* %arrayidx120)
  call void @__softboundcets_deallocate_shadow_stack_space()
  br label %if.end152

if.else121:                                       ; preds = %if.else116
  %88 = load i32* @ply, align 4
  %sub122 = sub nsw i32 %88, 1
  %idxprom123 = sext i32 %sub122 to i64
  %89 = load i32* @ply, align 4
  %sub124 = sub nsw i32 %89, 1
  %idxprom125 = sext i32 %sub124 to i64
  %arrayidx126 = getelementptr inbounds [300 x [300 x %struct.move_s]]* @pv, i32 0, i64 %idxprom125
  %arrayidx127 = getelementptr inbounds [300 x %struct.move_s]* %arrayidx126, i32 0, i64 %idxprom123
  %90 = load i32* %i, align 4
  %idxprom128 = sext i32 %90 to i64
  %arrayidx129 = getelementptr inbounds [512 x %struct.move_s]* %moves, i32 0, i64 %idxprom128
  %91 = bitcast %struct.move_s* %arrayidx127 to i8*
  %92 = bitcast %struct.move_s* %arrayidx129 to i8*
  call void @__softboundcets_memcopy_check(i8* %91, i8* %92, i64 24, i8* null, i8* inttoptr (i64 281474976710656 to i8*), i8* %bitcast495, i8* %bitcast497)
  call void @__softboundcets_copy_metadata(i8* %91, i8* %92, i64 24)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %91, i8* %92, i64 24, i32 4, i1 false)
  %93 = load i32* @ply, align 4
  store i32 %93, i32* %j, align 4
  br label %for.cond130

for.cond130:                                      ; preds = %for.inc144, %if.else121
  %94 = load i32* %j, align 4
  %95 = load i32* @ply, align 4
  %idxprom131 = sext i32 %95 to i64
  %arrayidx132 = getelementptr inbounds [300 x i32]* @pv_length, i32 0, i64 %idxprom131
  %96 = load i32* %arrayidx132, align 4
  %cmp133 = icmp slt i32 %94, %96
  br i1 %cmp133, label %for.body134, label %for.end146

for.body134:                                      ; preds = %for.cond130
  %97 = load i32* %j, align 4
  %idxprom135 = sext i32 %97 to i64
  %98 = load i32* @ply, align 4
  %sub136 = sub nsw i32 %98, 1
  %idxprom137 = sext i32 %sub136 to i64
  %arrayidx138 = getelementptr inbounds [300 x [300 x %struct.move_s]]* @pv, i32 0, i64 %idxprom137
  %arrayidx139 = getelementptr inbounds [300 x %struct.move_s]* %arrayidx138, i32 0, i64 %idxprom135
  %99 = load i32* %j, align 4
  %idxprom140 = sext i32 %99 to i64
  %100 = load i32* @ply, align 4
  %idxprom141 = sext i32 %100 to i64
  %arrayidx142 = getelementptr inbounds [300 x [300 x %struct.move_s]]* @pv, i32 0, i64 %idxprom141
  %arrayidx143 = getelementptr inbounds [300 x %struct.move_s]* %arrayidx142, i32 0, i64 %idxprom140
  %101 = bitcast %struct.move_s* %arrayidx139 to i8*
  %102 = bitcast %struct.move_s* %arrayidx143 to i8*
  call void @__softboundcets_memcopy_check(i8* %101, i8* %102, i64 24, i8* null, i8* inttoptr (i64 281474976710656 to i8*), i8* null, i8* inttoptr (i64 281474976710656 to i8*))
  call void @__softboundcets_copy_metadata(i8* %101, i8* %102, i64 24)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %101, i8* %102, i64 24, i32 4, i1 false)
  br label %for.inc144

for.inc144:                                       ; preds = %for.body134
  %103 = load i32* %j, align 4
  %inc145 = add nsw i32 %103, 1
  store i32 %inc145, i32* %j, align 4
  br label %for.cond130

for.end146:                                       ; preds = %for.cond130
  %104 = load i32* @ply, align 4
  %idxprom147 = sext i32 %104 to i64
  %arrayidx148 = getelementptr inbounds [300 x i32]* @pv_length, i32 0, i64 %idxprom147
  %105 = load i32* %arrayidx148, align 4
  %106 = load i32* @ply, align 4
  %sub149 = sub nsw i32 %106, 1
  %idxprom150 = sext i32 %sub149 to i64
  %arrayidx151 = getelementptr inbounds [300 x i32]* @pv_length, i32 0, i64 %idxprom150
  store i32 %105, i32* %arrayidx151, align 4
  %107 = load i32* %root_score, align 4
  call void @post_thinking(i32 %107)
  br label %if.end152

if.end152:                                        ; preds = %for.end146, %if.then118
  br label %if.end153

if.end153:                                        ; preds = %if.end152, %if.then113
  %108 = load i32* %root_score, align 4
  %109 = load i32* @cur_score, align 4
  %cmp154 = icmp sgt i32 %108, %109
  br i1 %cmp154, label %land.lhs.true155, label %if.end160

land.lhs.true155:                                 ; preds = %if.end153
  %110 = load i32* @time_exit, align 4
  %tobool156 = icmp ne i32 %110, 0
  br i1 %tobool156, label %if.end160, label %if.then157

if.then157:                                       ; preds = %land.lhs.true155
  %111 = load i32* %root_score, align 4
  store i32 %111, i32* @cur_score, align 4
  %112 = load i32* %i, align 4
  store i32 %112, i32* @bestmovenum, align 4
  %113 = load i32* %i, align 4
  %idxprom158 = sext i32 %113 to i64
  %arrayidx159 = getelementptr inbounds [512 x %struct.move_s]* %moves, i32 0, i64 %idxprom158
  %114 = bitcast %struct.move_s* %best_move to i8*
  %115 = bitcast %struct.move_s* %arrayidx159 to i8*
  call void @__softboundcets_memcopy_check(i8* %114, i8* %115, i64 24, i8* %bitcast499, i8* %bitcast501, i8* %bitcast495, i8* %bitcast497)
  call void @__softboundcets_copy_metadata(i8* %114, i8* %115, i64 24)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %114, i8* %115, i64 24, i32 4, i1 false)
  br label %if.end160

if.end160:                                        ; preds = %if.then157, %land.lhs.true155, %if.end153
  br label %if.end161

if.end161:                                        ; preds = %if.end160, %land.lhs.true109, %lor.lhs.false107, %if.then98
  br label %if.end232

if.else162:                                       ; preds = %lor.lhs.false96
  %116 = load i32* %alpha, align 4
  %sub163 = sub nsw i32 0, %116
  %sub164 = sub nsw i32 %sub163, 1
  %117 = load i32* %alpha, align 4
  %sub165 = sub nsw i32 0, %117
  %118 = load i32* %depth.addr, align 4
  %sub166 = sub nsw i32 %118, 1
  %call167 = call i32 @search(i32 %sub164, i32 %sub165, i32 %sub166, i32 0)
  %sub168 = sub nsw i32 0, %call167
  store i32 %sub168, i32* %root_score, align 4
  %119 = load i32* %root_score, align 4
  %120 = load i32* %alpha, align 4
  %cmp169 = icmp sgt i32 %119, %120
  br i1 %cmp169, label %land.lhs.true170, label %if.end224

land.lhs.true170:                                 ; preds = %if.else162
  %121 = load i32* %root_score, align 4
  %122 = load i32* %beta, align 4
  %cmp171 = icmp slt i32 %121, %122
  br i1 %cmp171, label %land.lhs.true172, label %if.end224

land.lhs.true172:                                 ; preds = %land.lhs.true170
  %123 = load i32* @time_exit, align 4
  %tobool173 = icmp ne i32 %123, 0
  br i1 %tobool173, label %if.end224, label %if.then174

if.then174:                                       ; preds = %land.lhs.true172
  %124 = load i32* %root_score, align 4
  %125 = load i32* %i, align 4
  %idxprom175 = sext i32 %125 to i64
  %arrayidx176 = getelementptr inbounds [512 x %struct.move_s]* %moves, i32 0, i64 %idxprom175
  call void @__softboundcets_allocate_shadow_stack_space(i32 2)
  call void @__softboundcets_store_base_shadow_stack(i8* %bitcast495, i32 1)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bitcast497, i32 1)
  call void @post_fail_thinking(i32 %124, %struct.move_s* %arrayidx176)
  call void @__softboundcets_deallocate_shadow_stack_space()
  %126 = load i32* %beta, align 4
  %sub177 = sub nsw i32 0, %126
  %127 = load i32* %alpha, align 4
  %sub178 = sub nsw i32 0, %127
  %128 = load i32* %depth.addr, align 4
  %sub179 = sub nsw i32 %128, 1
  %call180 = call i32 @search(i32 %sub177, i32 %sub178, i32 %sub179, i32 0)
  %sub181 = sub nsw i32 0, %call180
  store i32 %sub181, i32* %root_score, align 4
  %129 = load i32* %root_score, align 4
  %130 = load i32* %alpha, align 4
  %cmp182 = icmp sgt i32 %129, %130
  br i1 %cmp182, label %land.lhs.true183, label %if.end223

land.lhs.true183:                                 ; preds = %if.then174
  %131 = load i32* @time_exit, align 4
  %tobool184 = icmp ne i32 %131, 0
  br i1 %tobool184, label %if.end223, label %if.then185

if.then185:                                       ; preds = %land.lhs.true183
  store i32 0, i32* @failed, align 4
  %132 = load i32* %root_score, align 4
  store i32 %132, i32* @cur_score, align 4
  %133 = load i32* %i, align 4
  store i32 %133, i32* @bestmovenum, align 4
  %134 = load i32* %i, align 4
  %idxprom186 = sext i32 %134 to i64
  %arrayidx187 = getelementptr inbounds [512 x %struct.move_s]* %moves, i32 0, i64 %idxprom186
  %135 = bitcast %struct.move_s* %best_move to i8*
  %136 = bitcast %struct.move_s* %arrayidx187 to i8*
  call void @__softboundcets_memcopy_check(i8* %135, i8* %136, i64 24, i8* %bitcast499, i8* %bitcast501, i8* %bitcast495, i8* %bitcast497)
  call void @__softboundcets_copy_metadata(i8* %135, i8* %136, i64 24)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %135, i8* %136, i64 24, i32 4, i1 false)
  %137 = load i32* %root_score, align 4
  %138 = load i32* %beta, align 4
  %cmp188 = icmp slt i32 %137, %138
  br i1 %cmp188, label %land.lhs.true189, label %if.end222

land.lhs.true189:                                 ; preds = %if.then185
  %139 = load i32* @i_depth, align 4
  %cmp190 = icmp sge i32 %139, 2
  br i1 %cmp190, label %if.then191, label %if.end222

if.then191:                                       ; preds = %land.lhs.true189
  %140 = load i32* @ply, align 4
  %sub192 = sub nsw i32 %140, 1
  %idxprom193 = sext i32 %sub192 to i64
  %141 = load i32* @ply, align 4
  %sub194 = sub nsw i32 %141, 1
  %idxprom195 = sext i32 %sub194 to i64
  %arrayidx196 = getelementptr inbounds [300 x [300 x %struct.move_s]]* @pv, i32 0, i64 %idxprom195
  %arrayidx197 = getelementptr inbounds [300 x %struct.move_s]* %arrayidx196, i32 0, i64 %idxprom193
  %142 = load i32* %i, align 4
  %idxprom198 = sext i32 %142 to i64
  %arrayidx199 = getelementptr inbounds [512 x %struct.move_s]* %moves, i32 0, i64 %idxprom198
  %143 = bitcast %struct.move_s* %arrayidx197 to i8*
  %144 = bitcast %struct.move_s* %arrayidx199 to i8*
  call void @__softboundcets_memcopy_check(i8* %143, i8* %144, i64 24, i8* null, i8* inttoptr (i64 281474976710656 to i8*), i8* %bitcast495, i8* %bitcast497)
  call void @__softboundcets_copy_metadata(i8* %143, i8* %144, i64 24)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %143, i8* %144, i64 24, i32 4, i1 false)
  %145 = load i32* @ply, align 4
  store i32 %145, i32* %j, align 4
  br label %for.cond200

for.cond200:                                      ; preds = %for.inc214, %if.then191
  %146 = load i32* %j, align 4
  %147 = load i32* @ply, align 4
  %idxprom201 = sext i32 %147 to i64
  %arrayidx202 = getelementptr inbounds [300 x i32]* @pv_length, i32 0, i64 %idxprom201
  %148 = load i32* %arrayidx202, align 4
  %cmp203 = icmp slt i32 %146, %148
  br i1 %cmp203, label %for.body204, label %for.end216

for.body204:                                      ; preds = %for.cond200
  %149 = load i32* %j, align 4
  %idxprom205 = sext i32 %149 to i64
  %150 = load i32* @ply, align 4
  %sub206 = sub nsw i32 %150, 1
  %idxprom207 = sext i32 %sub206 to i64
  %arrayidx208 = getelementptr inbounds [300 x [300 x %struct.move_s]]* @pv, i32 0, i64 %idxprom207
  %arrayidx209 = getelementptr inbounds [300 x %struct.move_s]* %arrayidx208, i32 0, i64 %idxprom205
  %151 = load i32* %j, align 4
  %idxprom210 = sext i32 %151 to i64
  %152 = load i32* @ply, align 4
  %idxprom211 = sext i32 %152 to i64
  %arrayidx212 = getelementptr inbounds [300 x [300 x %struct.move_s]]* @pv, i32 0, i64 %idxprom211
  %arrayidx213 = getelementptr inbounds [300 x %struct.move_s]* %arrayidx212, i32 0, i64 %idxprom210
  %153 = bitcast %struct.move_s* %arrayidx209 to i8*
  %154 = bitcast %struct.move_s* %arrayidx213 to i8*
  call void @__softboundcets_memcopy_check(i8* %153, i8* %154, i64 24, i8* null, i8* inttoptr (i64 281474976710656 to i8*), i8* null, i8* inttoptr (i64 281474976710656 to i8*))
  call void @__softboundcets_copy_metadata(i8* %153, i8* %154, i64 24)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %153, i8* %154, i64 24, i32 4, i1 false)
  br label %for.inc214

for.inc214:                                       ; preds = %for.body204
  %155 = load i32* %j, align 4
  %inc215 = add nsw i32 %155, 1
  store i32 %inc215, i32* %j, align 4
  br label %for.cond200

for.end216:                                       ; preds = %for.cond200
  %156 = load i32* @ply, align 4
  %idxprom217 = sext i32 %156 to i64
  %arrayidx218 = getelementptr inbounds [300 x i32]* @pv_length, i32 0, i64 %idxprom217
  %157 = load i32* %arrayidx218, align 4
  %158 = load i32* @ply, align 4
  %sub219 = sub nsw i32 %158, 1
  %idxprom220 = sext i32 %sub219 to i64
  %arrayidx221 = getelementptr inbounds [300 x i32]* @pv_length, i32 0, i64 %idxprom220
  store i32 %157, i32* %arrayidx221, align 4
  br label %if.end222

if.end222:                                        ; preds = %for.end216, %land.lhs.true189, %if.then185
  br label %if.end223

if.end223:                                        ; preds = %if.end222, %land.lhs.true183, %if.then174
  br label %if.end224

if.end224:                                        ; preds = %if.end223, %land.lhs.true172, %land.lhs.true170, %if.else162
  %159 = load i32* %root_score, align 4
  %160 = load i32* %beta, align 4
  %cmp225 = icmp sge i32 %159, %160
  br i1 %cmp225, label %land.lhs.true226, label %if.end231

land.lhs.true226:                                 ; preds = %if.end224
  %161 = load i32* @time_exit, align 4
  %tobool227 = icmp ne i32 %161, 0
  br i1 %tobool227, label %if.end231, label %if.then228

if.then228:                                       ; preds = %land.lhs.true226
  %162 = load i32* %root_score, align 4
  %163 = load i32* %i, align 4
  %idxprom229 = sext i32 %163 to i64
  %arrayidx230 = getelementptr inbounds [512 x %struct.move_s]* %moves, i32 0, i64 %idxprom229
  call void @__softboundcets_allocate_shadow_stack_space(i32 2)
  call void @__softboundcets_store_base_shadow_stack(i8* %bitcast495, i32 1)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bitcast497, i32 1)
  call void @post_fh_thinking(i32 %162, %struct.move_s* %arrayidx230)
  call void @__softboundcets_deallocate_shadow_stack_space()
  br label %if.end231

if.end231:                                        ; preds = %if.then228, %land.lhs.true226, %if.end224
  br label %if.end232

if.end232:                                        ; preds = %if.end231, %if.end161
  %164 = load i32* %root_score, align 4
  %165 = load i32* @cur_score, align 4
  %cmp233 = icmp sgt i32 %164, %165
  br i1 %cmp233, label %land.lhs.true234, label %if.end239

land.lhs.true234:                                 ; preds = %if.end232
  %166 = load i32* @time_exit, align 4
  %tobool235 = icmp ne i32 %166, 0
  br i1 %tobool235, label %if.end239, label %if.then236

if.then236:                                       ; preds = %land.lhs.true234
  %167 = load i32* %root_score, align 4
  store i32 %167, i32* @cur_score, align 4
  %168 = load i32* %i, align 4
  store i32 %168, i32* @bestmovenum, align 4
  %169 = load i32* %i, align 4
  %idxprom237 = sext i32 %169 to i64
  %arrayidx238 = getelementptr inbounds [512 x %struct.move_s]* %moves, i32 0, i64 %idxprom237
  %170 = bitcast %struct.move_s* %best_move to i8*
  %171 = bitcast %struct.move_s* %arrayidx238 to i8*
  call void @__softboundcets_memcopy_check(i8* %170, i8* %171, i64 24, i8* %bitcast499, i8* %bitcast501, i8* %bitcast495, i8* %bitcast497)
  call void @__softboundcets_copy_metadata(i8* %170, i8* %171, i64 24)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %170, i8* %171, i64 24, i32 4, i1 false)
  br label %if.end239

if.end239:                                        ; preds = %if.then236, %land.lhs.true234, %if.end232
  %172 = load i32* @time_exit, align 4
  %tobool240 = icmp ne i32 %172, 0
  br i1 %tobool240, label %land.lhs.true241, label %if.end247

land.lhs.true241:                                 ; preds = %if.end239
  %173 = load i32* @cur_score, align 4
  %cmp242 = icmp eq i32 %173, -1000000
  br i1 %cmp242, label %if.then243, label %if.end247

if.then243:                                       ; preds = %land.lhs.true241
  %174 = load i32* %no_moves, align 4
  %tobool244 = icmp ne i32 %174, 0
  br i1 %tobool244, label %if.then245, label %if.end246

if.then245:                                       ; preds = %if.then243
  store i32 1, i32* @time_failure, align 4
  br label %if.end246

if.end246:                                        ; preds = %if.then245, %if.then243
  br label %if.end247

if.end247:                                        ; preds = %if.end246, %land.lhs.true241, %if.end239
  store i32 0, i32* %no_moves, align 4
  store i32 1, i32* %legal_move, align 4
  br label %if.end248

if.end248:                                        ; preds = %if.end247, %if.end66
  %arrayidx249 = getelementptr inbounds [512 x %struct.move_s]* %moves, i32 0, i64 0
  %175 = load i32* %i, align 4
  call void @__softboundcets_allocate_shadow_stack_space(i32 2)
  call void @__softboundcets_store_base_shadow_stack(i8* %bitcast495, i32 1)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bitcast497, i32 1)
  call void @unmake(%struct.move_s* %arrayidx249, i32 %175)
  call void @__softboundcets_deallocate_shadow_stack_space()
  %176 = load i32* @time_exit, align 4
  %tobool250 = icmp ne i32 %176, 0
  br i1 %tobool250, label %if.then251, label %if.end252

if.then251:                                       ; preds = %if.end248
  %177 = bitcast %struct.move_s* %agg.result to i8*
  %178 = bitcast %struct.move_s* %best_move to i8*
  call void @__softboundcets_memcopy_check(i8* %177, i8* %178, i64 24, i8* %0, i8* %1, i8* %bitcast499, i8* %bitcast501)
  call void @__softboundcets_copy_metadata(i8* %177, i8* %178, i64 24)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %177, i8* %178, i64 24, i32 4, i1 false)
  br label %return

if.end252:                                        ; preds = %if.end248
  %179 = load i32* %root_score, align 4
  %180 = load i32* %alpha, align 4
  %cmp253 = icmp sgt i32 %179, %180
  br i1 %cmp253, label %land.lhs.true254, label %if.end444

land.lhs.true254:                                 ; preds = %if.end252
  %181 = load i32* %legal_move, align 4
  %tobool255 = icmp ne i32 %181, 0
  br i1 %tobool255, label %if.then256, label %if.end444

if.then256:                                       ; preds = %land.lhs.true254
  %182 = load i32* %i, align 4
  %idxprom257 = sext i32 %182 to i64
  %arrayidx258 = getelementptr inbounds [512 x %struct.move_s]* %moves, i32 0, i64 %idxprom257
  %from = getelementptr inbounds %struct.move_s* %arrayidx258, i32 0, i32 0
  %183 = load i32* %from, align 4
  %184 = load i32* @ply, align 4
  %idxprom259 = sext i32 %184 to i64
  %arrayidx260 = getelementptr inbounds [300 x %struct.move_s]* @killer1, i32 0, i64 %idxprom259
  %from261 = getelementptr inbounds %struct.move_s* %arrayidx260, i32 0, i32 0
  %185 = load i32* %from261, align 4
  %cmp262 = icmp eq i32 %183, %185
  br i1 %cmp262, label %land.lhs.true263, label %if.else281

land.lhs.true263:                                 ; preds = %if.then256
  %186 = load i32* %i, align 4
  %idxprom264 = sext i32 %186 to i64
  %arrayidx265 = getelementptr inbounds [512 x %struct.move_s]* %moves, i32 0, i64 %idxprom264
  %target = getelementptr inbounds %struct.move_s* %arrayidx265, i32 0, i32 1
  %187 = load i32* %target, align 4
  %188 = load i32* @ply, align 4
  %idxprom266 = sext i32 %188 to i64
  %arrayidx267 = getelementptr inbounds [300 x %struct.move_s]* @killer1, i32 0, i64 %idxprom266
  %target268 = getelementptr inbounds %struct.move_s* %arrayidx267, i32 0, i32 1
  %189 = load i32* %target268, align 4
  %cmp269 = icmp eq i32 %187, %189
  br i1 %cmp269, label %land.lhs.true270, label %if.else281

land.lhs.true270:                                 ; preds = %land.lhs.true263
  %190 = load i32* %i, align 4
  %idxprom271 = sext i32 %190 to i64
  %arrayidx272 = getelementptr inbounds [512 x %struct.move_s]* %moves, i32 0, i64 %idxprom271
  %promoted = getelementptr inbounds %struct.move_s* %arrayidx272, i32 0, i32 3
  %191 = load i32* %promoted, align 4
  %192 = load i32* @ply, align 4
  %idxprom273 = sext i32 %192 to i64
  %arrayidx274 = getelementptr inbounds [300 x %struct.move_s]* @killer1, i32 0, i64 %idxprom273
  %promoted275 = getelementptr inbounds %struct.move_s* %arrayidx274, i32 0, i32 3
  %193 = load i32* %promoted275, align 4
  %cmp276 = icmp eq i32 %191, %193
  br i1 %cmp276, label %if.then277, label %if.else281

if.then277:                                       ; preds = %land.lhs.true270
  %194 = load i32* @ply, align 4
  %idxprom278 = sext i32 %194 to i64
  %arrayidx279 = getelementptr inbounds [300 x i32]* @killer_scores, i32 0, i64 %idxprom278
  %195 = load i32* %arrayidx279, align 4
  %inc280 = add nsw i32 %195, 1
  store i32 %inc280, i32* %arrayidx279, align 4
  br label %if.end392

if.else281:                                       ; preds = %land.lhs.true270, %land.lhs.true263, %if.then256
  %196 = load i32* %i, align 4
  %idxprom282 = sext i32 %196 to i64
  %arrayidx283 = getelementptr inbounds [512 x %struct.move_s]* %moves, i32 0, i64 %idxprom282
  %from284 = getelementptr inbounds %struct.move_s* %arrayidx283, i32 0, i32 0
  %197 = load i32* %from284, align 4
  %198 = load i32* @ply, align 4
  %idxprom285 = sext i32 %198 to i64
  %arrayidx286 = getelementptr inbounds [300 x %struct.move_s]* @killer2, i32 0, i64 %idxprom285
  %from287 = getelementptr inbounds %struct.move_s* %arrayidx286, i32 0, i32 0
  %199 = load i32* %from287, align 4
  %cmp288 = icmp eq i32 %197, %199
  br i1 %cmp288, label %land.lhs.true289, label %if.else332

land.lhs.true289:                                 ; preds = %if.else281
  %200 = load i32* %i, align 4
  %idxprom290 = sext i32 %200 to i64
  %arrayidx291 = getelementptr inbounds [512 x %struct.move_s]* %moves, i32 0, i64 %idxprom290
  %target292 = getelementptr inbounds %struct.move_s* %arrayidx291, i32 0, i32 1
  %201 = load i32* %target292, align 4
  %202 = load i32* @ply, align 4
  %idxprom293 = sext i32 %202 to i64
  %arrayidx294 = getelementptr inbounds [300 x %struct.move_s]* @killer2, i32 0, i64 %idxprom293
  %target295 = getelementptr inbounds %struct.move_s* %arrayidx294, i32 0, i32 1
  %203 = load i32* %target295, align 4
  %cmp296 = icmp eq i32 %201, %203
  br i1 %cmp296, label %land.lhs.true297, label %if.else332

land.lhs.true297:                                 ; preds = %land.lhs.true289
  %204 = load i32* %i, align 4
  %idxprom298 = sext i32 %204 to i64
  %arrayidx299 = getelementptr inbounds [512 x %struct.move_s]* %moves, i32 0, i64 %idxprom298
  %promoted300 = getelementptr inbounds %struct.move_s* %arrayidx299, i32 0, i32 3
  %205 = load i32* %promoted300, align 4
  %206 = load i32* @ply, align 4
  %idxprom301 = sext i32 %206 to i64
  %arrayidx302 = getelementptr inbounds [300 x %struct.move_s]* @killer2, i32 0, i64 %idxprom301
  %promoted303 = getelementptr inbounds %struct.move_s* %arrayidx302, i32 0, i32 3
  %207 = load i32* %promoted303, align 4
  %cmp304 = icmp eq i32 %205, %207
  br i1 %cmp304, label %if.then305, label %if.else332

if.then305:                                       ; preds = %land.lhs.true297
  %208 = load i32* @ply, align 4
  %idxprom306 = sext i32 %208 to i64
  %arrayidx307 = getelementptr inbounds [300 x i32]* @killer_scores2, i32 0, i64 %idxprom306
  %209 = load i32* %arrayidx307, align 4
  %inc308 = add nsw i32 %209, 1
  store i32 %inc308, i32* %arrayidx307, align 4
  %210 = load i32* @ply, align 4
  %idxprom309 = sext i32 %210 to i64
  %arrayidx310 = getelementptr inbounds [300 x i32]* @killer_scores2, i32 0, i64 %idxprom309
  %211 = load i32* %arrayidx310, align 4
  %212 = load i32* @ply, align 4
  %idxprom311 = sext i32 %212 to i64
  %arrayidx312 = getelementptr inbounds [300 x i32]* @killer_scores, i32 0, i64 %idxprom311
  %213 = load i32* %arrayidx312, align 4
  %cmp313 = icmp sgt i32 %211, %213
  br i1 %cmp313, label %if.then314, label %if.end331

if.then314:                                       ; preds = %if.then305
  %214 = load i32* @ply, align 4
  %idxprom315 = sext i32 %214 to i64
  %arrayidx316 = getelementptr inbounds [300 x %struct.move_s]* @killer1, i32 0, i64 %idxprom315
  %215 = bitcast %struct.move_s* %kswap to i8*
  %216 = bitcast %struct.move_s* %arrayidx316 to i8*
  call void @__softboundcets_memcopy_check(i8* %215, i8* %216, i64 24, i8* %bitcast547, i8* %bitcast549, i8* null, i8* inttoptr (i64 281474976710656 to i8*))
  call void @__softboundcets_copy_metadata(i8* %215, i8* %216, i64 24)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %215, i8* %216, i64 24, i32 4, i1 false)
  %217 = load i32* @ply, align 4
  %idxprom317 = sext i32 %217 to i64
  %arrayidx318 = getelementptr inbounds [300 x %struct.move_s]* @killer1, i32 0, i64 %idxprom317
  %218 = load i32* @ply, align 4
  %idxprom319 = sext i32 %218 to i64
  %arrayidx320 = getelementptr inbounds [300 x %struct.move_s]* @killer2, i32 0, i64 %idxprom319
  %219 = bitcast %struct.move_s* %arrayidx318 to i8*
  %220 = bitcast %struct.move_s* %arrayidx320 to i8*
  call void @__softboundcets_memcopy_check(i8* %219, i8* %220, i64 24, i8* null, i8* inttoptr (i64 281474976710656 to i8*), i8* null, i8* inttoptr (i64 281474976710656 to i8*))
  call void @__softboundcets_copy_metadata(i8* %219, i8* %220, i64 24)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %219, i8* %220, i64 24, i32 4, i1 false)
  %221 = load i32* @ply, align 4
  %idxprom321 = sext i32 %221 to i64
  %arrayidx322 = getelementptr inbounds [300 x %struct.move_s]* @killer2, i32 0, i64 %idxprom321
  %222 = bitcast %struct.move_s* %arrayidx322 to i8*
  %223 = bitcast %struct.move_s* %kswap to i8*
  call void @__softboundcets_memcopy_check(i8* %222, i8* %223, i64 24, i8* null, i8* inttoptr (i64 281474976710656 to i8*), i8* %bitcast547, i8* %bitcast549)
  call void @__softboundcets_copy_metadata(i8* %222, i8* %223, i64 24)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %222, i8* %223, i64 24, i32 4, i1 false)
  %224 = load i32* @ply, align 4
  %idxprom323 = sext i32 %224 to i64
  %arrayidx324 = getelementptr inbounds [300 x i32]* @killer_scores, i32 0, i64 %idxprom323
  %225 = load i32* %arrayidx324, align 4
  store i32 %225, i32* %ksswap, align 4
  %226 = load i32* @ply, align 4
  %idxprom325 = sext i32 %226 to i64
  %arrayidx326 = getelementptr inbounds [300 x i32]* @killer_scores2, i32 0, i64 %idxprom325
  %227 = load i32* %arrayidx326, align 4
  %228 = load i32* @ply, align 4
  %idxprom327 = sext i32 %228 to i64
  %arrayidx328 = getelementptr inbounds [300 x i32]* @killer_scores, i32 0, i64 %idxprom327
  store i32 %227, i32* %arrayidx328, align 4
  %229 = load i32* %ksswap, align 4
  %230 = load i32* @ply, align 4
  %idxprom329 = sext i32 %230 to i64
  %arrayidx330 = getelementptr inbounds [300 x i32]* @killer_scores2, i32 0, i64 %idxprom329
  store i32 %229, i32* %arrayidx330, align 4
  br label %if.end331

if.end331:                                        ; preds = %if.then314, %if.then305
  br label %if.end391

if.else332:                                       ; preds = %land.lhs.true297, %land.lhs.true289, %if.else281
  %231 = load i32* %i, align 4
  %idxprom333 = sext i32 %231 to i64
  %arrayidx334 = getelementptr inbounds [512 x %struct.move_s]* %moves, i32 0, i64 %idxprom333
  %from335 = getelementptr inbounds %struct.move_s* %arrayidx334, i32 0, i32 0
  %232 = load i32* %from335, align 4
  %233 = load i32* @ply, align 4
  %idxprom336 = sext i32 %233 to i64
  %arrayidx337 = getelementptr inbounds [300 x %struct.move_s]* @killer3, i32 0, i64 %idxprom336
  %from338 = getelementptr inbounds %struct.move_s* %arrayidx337, i32 0, i32 0
  %234 = load i32* %from338, align 4
  %cmp339 = icmp eq i32 %232, %234
  br i1 %cmp339, label %land.lhs.true340, label %if.else383

land.lhs.true340:                                 ; preds = %if.else332
  %235 = load i32* %i, align 4
  %idxprom341 = sext i32 %235 to i64
  %arrayidx342 = getelementptr inbounds [512 x %struct.move_s]* %moves, i32 0, i64 %idxprom341
  %target343 = getelementptr inbounds %struct.move_s* %arrayidx342, i32 0, i32 1
  %236 = load i32* %target343, align 4
  %237 = load i32* @ply, align 4
  %idxprom344 = sext i32 %237 to i64
  %arrayidx345 = getelementptr inbounds [300 x %struct.move_s]* @killer3, i32 0, i64 %idxprom344
  %target346 = getelementptr inbounds %struct.move_s* %arrayidx345, i32 0, i32 1
  %238 = load i32* %target346, align 4
  %cmp347 = icmp eq i32 %236, %238
  br i1 %cmp347, label %land.lhs.true348, label %if.else383

land.lhs.true348:                                 ; preds = %land.lhs.true340
  %239 = load i32* %i, align 4
  %idxprom349 = sext i32 %239 to i64
  %arrayidx350 = getelementptr inbounds [512 x %struct.move_s]* %moves, i32 0, i64 %idxprom349
  %promoted351 = getelementptr inbounds %struct.move_s* %arrayidx350, i32 0, i32 3
  %240 = load i32* %promoted351, align 4
  %241 = load i32* @ply, align 4
  %idxprom352 = sext i32 %241 to i64
  %arrayidx353 = getelementptr inbounds [300 x %struct.move_s]* @killer3, i32 0, i64 %idxprom352
  %promoted354 = getelementptr inbounds %struct.move_s* %arrayidx353, i32 0, i32 3
  %242 = load i32* %promoted354, align 4
  %cmp355 = icmp eq i32 %240, %242
  br i1 %cmp355, label %if.then356, label %if.else383

if.then356:                                       ; preds = %land.lhs.true348
  %243 = load i32* @ply, align 4
  %idxprom357 = sext i32 %243 to i64
  %arrayidx358 = getelementptr inbounds [300 x i32]* @killer_scores3, i32 0, i64 %idxprom357
  %244 = load i32* %arrayidx358, align 4
  %inc359 = add nsw i32 %244, 1
  store i32 %inc359, i32* %arrayidx358, align 4
  %245 = load i32* @ply, align 4
  %idxprom360 = sext i32 %245 to i64
  %arrayidx361 = getelementptr inbounds [300 x i32]* @killer_scores3, i32 0, i64 %idxprom360
  %246 = load i32* %arrayidx361, align 4
  %247 = load i32* @ply, align 4
  %idxprom362 = sext i32 %247 to i64
  %arrayidx363 = getelementptr inbounds [300 x i32]* @killer_scores2, i32 0, i64 %idxprom362
  %248 = load i32* %arrayidx363, align 4
  %cmp364 = icmp sgt i32 %246, %248
  br i1 %cmp364, label %if.then365, label %if.end382

if.then365:                                       ; preds = %if.then356
  %249 = load i32* @ply, align 4
  %idxprom366 = sext i32 %249 to i64
  %arrayidx367 = getelementptr inbounds [300 x %struct.move_s]* @killer2, i32 0, i64 %idxprom366
  %250 = bitcast %struct.move_s* %kswap to i8*
  %251 = bitcast %struct.move_s* %arrayidx367 to i8*
  call void @__softboundcets_memcopy_check(i8* %250, i8* %251, i64 24, i8* %bitcast547, i8* %bitcast549, i8* null, i8* inttoptr (i64 281474976710656 to i8*))
  call void @__softboundcets_copy_metadata(i8* %250, i8* %251, i64 24)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %250, i8* %251, i64 24, i32 4, i1 false)
  %252 = load i32* @ply, align 4
  %idxprom368 = sext i32 %252 to i64
  %arrayidx369 = getelementptr inbounds [300 x %struct.move_s]* @killer2, i32 0, i64 %idxprom368
  %253 = load i32* @ply, align 4
  %idxprom370 = sext i32 %253 to i64
  %arrayidx371 = getelementptr inbounds [300 x %struct.move_s]* @killer3, i32 0, i64 %idxprom370
  %254 = bitcast %struct.move_s* %arrayidx369 to i8*
  %255 = bitcast %struct.move_s* %arrayidx371 to i8*
  call void @__softboundcets_memcopy_check(i8* %254, i8* %255, i64 24, i8* null, i8* inttoptr (i64 281474976710656 to i8*), i8* null, i8* inttoptr (i64 281474976710656 to i8*))
  call void @__softboundcets_copy_metadata(i8* %254, i8* %255, i64 24)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %254, i8* %255, i64 24, i32 4, i1 false)
  %256 = load i32* @ply, align 4
  %idxprom372 = sext i32 %256 to i64
  %arrayidx373 = getelementptr inbounds [300 x %struct.move_s]* @killer3, i32 0, i64 %idxprom372
  %257 = bitcast %struct.move_s* %arrayidx373 to i8*
  %258 = bitcast %struct.move_s* %kswap to i8*
  call void @__softboundcets_memcopy_check(i8* %257, i8* %258, i64 24, i8* null, i8* inttoptr (i64 281474976710656 to i8*), i8* %bitcast547, i8* %bitcast549)
  call void @__softboundcets_copy_metadata(i8* %257, i8* %258, i64 24)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %257, i8* %258, i64 24, i32 4, i1 false)
  %259 = load i32* @ply, align 4
  %idxprom374 = sext i32 %259 to i64
  %arrayidx375 = getelementptr inbounds [300 x i32]* @killer_scores2, i32 0, i64 %idxprom374
  %260 = load i32* %arrayidx375, align 4
  store i32 %260, i32* %ksswap, align 4
  %261 = load i32* @ply, align 4
  %idxprom376 = sext i32 %261 to i64
  %arrayidx377 = getelementptr inbounds [300 x i32]* @killer_scores3, i32 0, i64 %idxprom376
  %262 = load i32* %arrayidx377, align 4
  %263 = load i32* @ply, align 4
  %idxprom378 = sext i32 %263 to i64
  %arrayidx379 = getelementptr inbounds [300 x i32]* @killer_scores2, i32 0, i64 %idxprom378
  store i32 %262, i32* %arrayidx379, align 4
  %264 = load i32* %ksswap, align 4
  %265 = load i32* @ply, align 4
  %idxprom380 = sext i32 %265 to i64
  %arrayidx381 = getelementptr inbounds [300 x i32]* @killer_scores3, i32 0, i64 %idxprom380
  store i32 %264, i32* %arrayidx381, align 4
  br label %if.end382

if.end382:                                        ; preds = %if.then365, %if.then356
  br label %if.end390

if.else383:                                       ; preds = %land.lhs.true348, %land.lhs.true340, %if.else332
  %266 = load i32* @ply, align 4
  %idxprom384 = sext i32 %266 to i64
  %arrayidx385 = getelementptr inbounds [300 x i32]* @killer_scores3, i32 0, i64 %idxprom384
  store i32 1, i32* %arrayidx385, align 4
  %267 = load i32* @ply, align 4
  %idxprom386 = sext i32 %267 to i64
  %arrayidx387 = getelementptr inbounds [300 x %struct.move_s]* @killer3, i32 0, i64 %idxprom386
  %268 = load i32* %i, align 4
  %idxprom388 = sext i32 %268 to i64
  %arrayidx389 = getelementptr inbounds [512 x %struct.move_s]* %moves, i32 0, i64 %idxprom388
  %269 = bitcast %struct.move_s* %arrayidx387 to i8*
  %270 = bitcast %struct.move_s* %arrayidx389 to i8*
  call void @__softboundcets_memcopy_check(i8* %269, i8* %270, i64 24, i8* null, i8* inttoptr (i64 281474976710656 to i8*), i8* %bitcast495, i8* %bitcast497)
  call void @__softboundcets_copy_metadata(i8* %269, i8* %270, i64 24)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %269, i8* %270, i64 24, i32 4, i1 false)
  br label %if.end390

if.end390:                                        ; preds = %if.else383, %if.end382
  br label %if.end391

if.end391:                                        ; preds = %if.end390, %if.end331
  br label %if.end392

if.end392:                                        ; preds = %if.end391, %if.then277
  %271 = load i32* %i, align 4
  %idxprom393 = sext i32 %271 to i64
  %arrayidx394 = getelementptr inbounds [512 x %struct.move_s]* %moves, i32 0, i64 %idxprom393
  %target395 = getelementptr inbounds %struct.move_s* %arrayidx394, i32 0, i32 1
  %272 = load i32* %target395, align 4
  %idxprom396 = sext i32 %272 to i64
  %273 = load i32* %i, align 4
  %idxprom397 = sext i32 %273 to i64
  %arrayidx398 = getelementptr inbounds [512 x %struct.move_s]* %moves, i32 0, i64 %idxprom397
  %from399 = getelementptr inbounds %struct.move_s* %arrayidx398, i32 0, i32 0
  %274 = load i32* %from399, align 4
  %idxprom400 = sext i32 %274 to i64
  %arrayidx401 = getelementptr inbounds [144 x [144 x i32]]* @history_h, i32 0, i64 %idxprom400
  %arrayidx402 = getelementptr inbounds [144 x i32]* %arrayidx401, i32 0, i64 %idxprom396
  %275 = load i32* %arrayidx402, align 4
  %inc403 = add i32 %275, 1
  store i32 %inc403, i32* %arrayidx402, align 4
  %276 = load i32* %root_score, align 4
  store i32 %276, i32* %alpha, align 4
  %277 = load i32* %i, align 4
  %idxprom404 = sext i32 %277 to i64
  %arrayidx405 = getelementptr inbounds [512 x %struct.move_s]* %moves, i32 0, i64 %idxprom404
  %278 = bitcast %struct.move_s* %best_move to i8*
  %279 = bitcast %struct.move_s* %arrayidx405 to i8*
  call void @__softboundcets_memcopy_check(i8* %278, i8* %279, i64 24, i8* %bitcast499, i8* %bitcast501, i8* %bitcast495, i8* %bitcast497)
  call void @__softboundcets_copy_metadata(i8* %278, i8* %279, i64 24)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %278, i8* %279, i64 24, i32 4, i1 false)
  %280 = load i32* %i, align 4
  store i32 %280, i32* @bestmovenum, align 4
  %281 = load i32* %alpha, align 4
  store i32 %281, i32* @cur_score, align 4
  %282 = load i32* @ply, align 4
  %idxprom406 = sext i32 %282 to i64
  %283 = load i32* @ply, align 4
  %idxprom407 = sext i32 %283 to i64
  %arrayidx408 = getelementptr inbounds [300 x [300 x %struct.move_s]]* @pv, i32 0, i64 %idxprom407
  %arrayidx409 = getelementptr inbounds [300 x %struct.move_s]* %arrayidx408, i32 0, i64 %idxprom406
  %284 = load i32* %i, align 4
  %idxprom410 = sext i32 %284 to i64
  %arrayidx411 = getelementptr inbounds [512 x %struct.move_s]* %moves, i32 0, i64 %idxprom410
  %285 = bitcast %struct.move_s* %arrayidx409 to i8*
  %286 = bitcast %struct.move_s* %arrayidx411 to i8*
  call void @__softboundcets_memcopy_check(i8* %285, i8* %286, i64 24, i8* null, i8* inttoptr (i64 281474976710656 to i8*), i8* %bitcast495, i8* %bitcast497)
  call void @__softboundcets_copy_metadata(i8* %285, i8* %286, i64 24)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %285, i8* %286, i64 24, i32 4, i1 false)
  %287 = load i32* @ply, align 4
  %add412 = add nsw i32 %287, 1
  store i32 %add412, i32* %j, align 4
  br label %for.cond413

for.cond413:                                      ; preds = %for.inc428, %if.end392
  %288 = load i32* %j, align 4
  %289 = load i32* @ply, align 4
  %add414 = add nsw i32 %289, 1
  %idxprom415 = sext i32 %add414 to i64
  %arrayidx416 = getelementptr inbounds [300 x i32]* @pv_length, i32 0, i64 %idxprom415
  %290 = load i32* %arrayidx416, align 4
  %cmp417 = icmp slt i32 %288, %290
  br i1 %cmp417, label %for.body418, label %for.end430

for.body418:                                      ; preds = %for.cond413
  %291 = load i32* %j, align 4
  %idxprom419 = sext i32 %291 to i64
  %292 = load i32* @ply, align 4
  %idxprom420 = sext i32 %292 to i64
  %arrayidx421 = getelementptr inbounds [300 x [300 x %struct.move_s]]* @pv, i32 0, i64 %idxprom420
  %arrayidx422 = getelementptr inbounds [300 x %struct.move_s]* %arrayidx421, i32 0, i64 %idxprom419
  %293 = load i32* %j, align 4
  %idxprom423 = sext i32 %293 to i64
  %294 = load i32* @ply, align 4
  %add424 = add nsw i32 %294, 1
  %idxprom425 = sext i32 %add424 to i64
  %arrayidx426 = getelementptr inbounds [300 x [300 x %struct.move_s]]* @pv, i32 0, i64 %idxprom425
  %arrayidx427 = getelementptr inbounds [300 x %struct.move_s]* %arrayidx426, i32 0, i64 %idxprom423
  %295 = bitcast %struct.move_s* %arrayidx422 to i8*
  %296 = bitcast %struct.move_s* %arrayidx427 to i8*
  call void @__softboundcets_memcopy_check(i8* %295, i8* %296, i64 24, i8* null, i8* inttoptr (i64 281474976710656 to i8*), i8* null, i8* inttoptr (i64 281474976710656 to i8*))
  call void @__softboundcets_copy_metadata(i8* %295, i8* %296, i64 24)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %295, i8* %296, i64 24, i32 4, i1 false)
  br label %for.inc428

for.inc428:                                       ; preds = %for.body418
  %297 = load i32* %j, align 4
  %inc429 = add nsw i32 %297, 1
  store i32 %inc429, i32* %j, align 4
  br label %for.cond413

for.end430:                                       ; preds = %for.cond413
  %298 = load i32* @ply, align 4
  %add431 = add nsw i32 %298, 1
  %idxprom432 = sext i32 %add431 to i64
  %arrayidx433 = getelementptr inbounds [300 x i32]* @pv_length, i32 0, i64 %idxprom432
  %299 = load i32* %arrayidx433, align 4
  %300 = load i32* @ply, align 4
  %idxprom434 = sext i32 %300 to i64
  %arrayidx435 = getelementptr inbounds [300 x i32]* @pv_length, i32 0, i64 %idxprom434
  store i32 %299, i32* %arrayidx435, align 4
  %301 = load i32* @cur_score, align 4
  %302 = load i32* %beta, align 4
  %cmp436 = icmp sge i32 %301, %302
  br i1 %cmp436, label %if.then437, label %if.end438

if.then437:                                       ; preds = %for.end430
  %303 = bitcast %struct.move_s* %agg.result to i8*
  %304 = bitcast %struct.move_s* %best_move to i8*
  call void @__softboundcets_memcopy_check(i8* %303, i8* %304, i64 24, i8* %0, i8* %1, i8* %bitcast499, i8* %bitcast501)
  call void @__softboundcets_copy_metadata(i8* %303, i8* %304, i64 24)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %303, i8* %304, i64 24, i32 4, i1 false)
  br label %return

if.end438:                                        ; preds = %for.end430
  %305 = load i32* @post, align 4
  %tobool439 = icmp ne i32 %305, 0
  br i1 %tobool439, label %land.lhs.true440, label %if.end443

land.lhs.true440:                                 ; preds = %if.end438
  %306 = load i32* @i_depth, align 4
  %cmp441 = icmp sge i32 %306, 2
  br i1 %cmp441, label %if.then442, label %if.end443

if.then442:                                       ; preds = %land.lhs.true440
  %307 = load i32* %alpha, align 4
  call void @post_thinking(i32 %307)
  br label %if.end443

if.end443:                                        ; preds = %if.then442, %land.lhs.true440, %if.end438
  br label %if.end444

if.end444:                                        ; preds = %if.end443, %land.lhs.true254, %if.end252
  %308 = load i32* %legal_move, align 4
  %tobool445 = icmp ne i32 %308, 0
  br i1 %tobool445, label %if.then446, label %if.end447

if.then446:                                       ; preds = %if.end444
  store i32 0, i32* %first, align 4
  br label %if.end447

if.end447:                                        ; preds = %if.then446, %if.end444
  %309 = load i32* @nodes, align 4
  %310 = load i32* %oldnodecount, align 4
  %sub448 = sub nsw i32 %309, %310
  %311 = load i32* %i, align 4
  %idxprom449 = sext i32 %311 to i64
  %bitcast578 = bitcast [512 x i32]* @rootnodecount to i8*
  %bitcast579 = bitcast [512 x i32]* getelementptr inbounds ([512 x i32]* @rootnodecount, i32 1) to i8*
  %arrayidx450 = getelementptr inbounds [512 x i32]* @rootnodecount, i32 0, i64 %idxprom449
  store i32 %sub448, i32* %arrayidx450, align 4
  br label %while.cond

while.end:                                        ; preds = %while.cond
  %312 = load i32* %no_moves, align 4
  %tobool451 = icmp ne i32 %312, 0
  br i1 %tobool451, label %land.lhs.true452, label %if.else474

land.lhs.true452:                                 ; preds = %while.end
  %313 = load i32* @is_pondering, align 4
  %tobool453 = icmp ne i32 %313, 0
  br i1 %tobool453, label %if.else474, label %if.then454

if.then454:                                       ; preds = %land.lhs.true452
  %314 = load i32* @Variant, align 4
  %cmp455 = icmp ne i32 %314, 3
  br i1 %cmp455, label %land.lhs.true456, label %if.else468

land.lhs.true456:                                 ; preds = %if.then454
  %315 = load i32* @Variant, align 4
  %cmp457 = icmp ne i32 %315, 4
  br i1 %cmp457, label %if.then458, label %if.else468

if.then458:                                       ; preds = %land.lhs.true456
  %call459 = call i32 @in_check()
  %tobool460 = icmp ne i32 %call459, 0
  br i1 %tobool460, label %if.then461, label %if.else466

if.then461:                                       ; preds = %if.then458
  %316 = load i32* @white_to_move, align 4
  %cmp462 = icmp eq i32 %316, 1
  br i1 %cmp462, label %if.then463, label %if.else464

if.then463:                                       ; preds = %if.then461
  store i32 2, i32* @result, align 4
  br label %if.end465

if.else464:                                       ; preds = %if.then461
  store i32 3, i32* @result, align 4
  br label %if.end465

if.end465:                                        ; preds = %if.else464, %if.then463
  br label %if.end467

if.else466:                                       ; preds = %if.then458
  store i32 1, i32* @result, align 4
  br label %if.end467

if.end467:                                        ; preds = %if.else466, %if.end465
  br label %if.end473

if.else468:                                       ; preds = %land.lhs.true456, %if.then454
  %317 = load i32* @white_to_move, align 4
  %cmp469 = icmp eq i32 %317, 1
  br i1 %cmp469, label %if.then470, label %if.else471

if.then470:                                       ; preds = %if.else468
  store i32 3, i32* @result, align 4
  br label %if.end472

if.else471:                                       ; preds = %if.else468
  store i32 2, i32* @result, align 4
  br label %if.end472

if.end472:                                        ; preds = %if.else471, %if.then470
  br label %if.end473

if.end473:                                        ; preds = %if.end472, %if.end467
  br label %if.end483

if.else474:                                       ; preds = %land.lhs.true452, %while.end
  %318 = load i32* @is_pondering, align 4
  %tobool475 = icmp ne i32 %318, 0
  br i1 %tobool475, label %if.end482, label %if.then476

if.then476:                                       ; preds = %if.else474
  %319 = load i32* @fifty, align 4
  %cmp477 = icmp sgt i32 %319, 100
  br i1 %cmp477, label %if.then478, label %if.end481

if.then478:                                       ; preds = %if.then476
  store i32 4, i32* @result, align 4
  store i32 0, i32* @cur_score, align 4
  %320 = load i32* @ply, align 4
  %idxprom479 = sext i32 %320 to i64
  %arrayidx480 = getelementptr inbounds [300 x i32]* @pv_length, i32 0, i64 %idxprom479
  store i32 0, i32* %arrayidx480, align 4
  %321 = bitcast %struct.move_s* %agg.result to i8*
  call void @__softboundcets_memcopy_check(i8* %321, i8* bitcast (%struct.move_s* @dummy to i8*), i64 24, i8* %0, i8* %1, i8* null, i8* inttoptr (i64 281474976710656 to i8*))
  call void @__softboundcets_copy_metadata(i8* %321, i8* bitcast (%struct.move_s* @dummy to i8*), i64 24)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %321, i8* bitcast (%struct.move_s* @dummy to i8*), i64 24, i32 4, i1 false)
  br label %return

if.end481:                                        ; preds = %if.then476
  br label %if.end482

if.end482:                                        ; preds = %if.end481, %if.else474
  br label %if.end483

if.end483:                                        ; preds = %if.end482, %if.end473
  %322 = bitcast %struct.move_s* %agg.result to i8*
  %323 = bitcast %struct.move_s* %best_move to i8*
  call void @__softboundcets_memcopy_check(i8* %322, i8* %323, i64 24, i8* %0, i8* %1, i8* %bitcast499, i8* %bitcast501)
  call void @__softboundcets_copy_metadata(i8* %322, i8* %323, i64 24)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %322, i8* %323, i64 24, i32 4, i1 false)
  br label %return

return:                                           ; preds = %if.end483, %if.then478, %if.then437, %if.then251, %if.then
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @think(%struct.move_s* noalias sret %agg.result) #0 {
entry:
  %0 = call i8* @__softboundcets_load_base_shadow_stack(i32 1)
  %1 = call i8* @__softboundcets_load_bound_shadow_stack(i32 1)
  %comp_move = alloca %struct.move_s, align 8
  %comp_move516 = bitcast %struct.move_s* %comp_move to %struct.move_s*
  %bitcast = bitcast %struct.move_s* %comp_move to i8*
  %mtmp = getelementptr %struct.move_s* %comp_move516, i32 1
  %bitcast517 = bitcast %struct.move_s* %mtmp to i8*
  %temp_move = alloca %struct.move_s, align 4
  %temp_move518 = bitcast %struct.move_s* %temp_move to %struct.move_s*
  %bitcast519 = bitcast %struct.move_s* %temp_move to i8*
  %mtmp520 = getelementptr %struct.move_s* %temp_move518, i32 1
  %bitcast521 = bitcast %struct.move_s* %mtmp520 to i8*
  %old_move = alloca %struct.move_s, align 4
  %old_move522 = bitcast %struct.move_s* %old_move to %struct.move_s*
  %bitcast523 = bitcast %struct.move_s* %old_move to i8*
  %mtmp524 = getelementptr %struct.move_s* %old_move522, i32 1
  %bitcast525 = bitcast %struct.move_s* %mtmp524 to i8*
  %i = alloca i32, align 4
  %i526 = bitcast i32* %i to i32*
  %bitcast527 = bitcast i32* %i to i8*
  %mtmp528 = getelementptr i32* %i526, i32 1
  %bitcast529 = bitcast i32* %mtmp528 to i8*
  %j = alloca i32, align 4
  %j530 = bitcast i32* %j to i32*
  %bitcast531 = bitcast i32* %j to i8*
  %mtmp532 = getelementptr i32* %j530, i32 1
  %bitcast533 = bitcast i32* %mtmp532 to i8*
  %k = alloca i32, align 4
  %k534 = bitcast i32* %k to i32*
  %bitcast535 = bitcast i32* %k to i8*
  %mtmp536 = getelementptr i32* %k534, i32 1
  %bitcast537 = bitcast i32* %mtmp536 to i8*
  %elapsed = alloca i32, align 4
  %elapsed538 = bitcast i32* %elapsed to i32*
  %bitcast539 = bitcast i32* %elapsed to i8*
  %mtmp540 = getelementptr i32* %elapsed538, i32 1
  %bitcast541 = bitcast i32* %mtmp540 to i8*
  %temp_score = alloca i32, align 4
  %temp_score542 = bitcast i32* %temp_score to i32*
  %bitcast543 = bitcast i32* %temp_score to i8*
  %mtmp544 = getelementptr i32* %temp_score542, i32 1
  %bitcast545 = bitcast i32* %mtmp544 to i8*
  %true_score = alloca i32, align 4
  %true_score546 = bitcast i32* %true_score to i32*
  %bitcast547 = bitcast i32* %true_score to i8*
  %mtmp548 = getelementptr i32* %true_score546, i32 1
  %bitcast549 = bitcast i32* %mtmp548 to i8*
  %alpha = alloca i32, align 4
  %alpha550 = bitcast i32* %alpha to i32*
  %bitcast551 = bitcast i32* %alpha to i8*
  %mtmp552 = getelementptr i32* %alpha550, i32 1
  %bitcast553 = bitcast i32* %mtmp552 to i8*
  %beta = alloca i32, align 4
  %beta554 = bitcast i32* %beta to i32*
  %bitcast555 = bitcast i32* %beta to i8*
  %mtmp556 = getelementptr i32* %beta554, i32 1
  %bitcast557 = bitcast i32* %mtmp556 to i8*
  %tmptmp = alloca i32, align 4
  %tmptmp558 = bitcast i32* %tmptmp to i32*
  %bitcast559 = bitcast i32* %tmptmp to i8*
  %mtmp560 = getelementptr i32* %tmptmp558, i32 1
  %bitcast561 = bitcast i32* %mtmp560 to i8*
  %rs = alloca i32, align 4
  %rs562 = bitcast i32* %rs to i32*
  %bitcast563 = bitcast i32* %rs to i8*
  %mtmp564 = getelementptr i32* %rs562, i32 1
  %bitcast565 = bitcast i32* %mtmp564 to i8*
  %moves = alloca [512 x %struct.move_s], align 16
  %moves566 = bitcast [512 x %struct.move_s]* %moves to [512 x %struct.move_s]*
  %bitcast567 = bitcast [512 x %struct.move_s]* %moves to i8*
  %mtmp568 = getelementptr [512 x %struct.move_s]* %moves566, i32 1
  %bitcast569 = bitcast [512 x %struct.move_s]* %mtmp568 to i8*
  %l = alloca i32, align 4
  %l570 = bitcast i32* %l to i32*
  %bitcast571 = bitcast i32* %l to i8*
  %mtmp572 = getelementptr i32* %l570, i32 1
  %bitcast573 = bitcast i32* %mtmp572 to i8*
  %lastlegal = alloca i32, align 4
  %lastlegal574 = bitcast i32* %lastlegal to i32*
  %bitcast575 = bitcast i32* %lastlegal to i8*
  %mtmp576 = getelementptr i32* %lastlegal574, i32 1
  %bitcast577 = bitcast i32* %mtmp576 to i8*
  %ic = alloca i32, align 4
  %ic578 = bitcast i32* %ic to i32*
  %bitcast579 = bitcast i32* %ic to i8*
  %mtmp580 = getelementptr i32* %ic578, i32 1
  %bitcast581 = bitcast i32* %mtmp580 to i8*
  %pn_restart = alloca i32, align 4
  %pn_restart582 = bitcast i32* %pn_restart to i32*
  %bitcast583 = bitcast i32* %pn_restart to i8*
  %mtmp584 = getelementptr i32* %pn_restart582, i32 1
  %bitcast585 = bitcast i32* %mtmp584 to i8*
  %num_moves = alloca i32, align 4
  %num_moves586 = bitcast i32* %num_moves to i32*
  %bitcast587 = bitcast i32* %num_moves to i8*
  %mtmp588 = getelementptr i32* %num_moves586, i32 1
  %bitcast589 = bitcast i32* %mtmp588 to i8*
  %output = alloca [8 x i8], align 1
  %output590 = bitcast [8 x i8]* %output to [8 x i8]*
  %bitcast591 = bitcast [8 x i8]* %output to i8*
  %mtmp592 = getelementptr [8 x i8]* %output590, i32 1
  %bitcast593 = bitcast [8 x i8]* %mtmp592 to i8*
  %tmp = alloca %struct.move_s, align 4
  %tmp594 = bitcast %struct.move_s* %tmp to %struct.move_s*
  %bitcast595 = bitcast %struct.move_s* %tmp to i8*
  %mtmp596 = getelementptr %struct.move_s* %tmp594, i32 1
  %bitcast597 = bitcast %struct.move_s* %mtmp596 to i8*
  %tmp197 = alloca %struct.move_s, align 4
  %tmp197598 = bitcast %struct.move_s* %tmp197 to %struct.move_s*
  %bitcast599 = bitcast %struct.move_s* %tmp197 to i8*
  %mtmp600 = getelementptr %struct.move_s* %tmp197598, i32 1
  %bitcast601 = bitcast %struct.move_s* %mtmp600 to i8*
  %tmp208 = alloca %struct.move_s, align 4
  %tmp208602 = bitcast %struct.move_s* %tmp208 to %struct.move_s*
  %bitcast603 = bitcast %struct.move_s* %tmp208 to i8*
  %mtmp604 = getelementptr %struct.move_s* %tmp208602, i32 1
  %bitcast605 = bitcast %struct.move_s* %mtmp604 to i8*
  %tmp287 = alloca %struct.move_s, align 4
  %tmp287606 = bitcast %struct.move_s* %tmp287 to %struct.move_s*
  %bitcast607 = bitcast %struct.move_s* %tmp287 to i8*
  %mtmp608 = getelementptr %struct.move_s* %tmp287606, i32 1
  %bitcast609 = bitcast %struct.move_s* %mtmp608 to i8*
  store i32 0, i32* %k, align 4
  store i32 0, i32* %temp_score, align 4
  store i32 0, i32* %lastlegal, align 4
  store i32 0, i32* @userealholdings, align 4
  store i32 0, i32* %pn_restart, align 4
  br label %restart

restart:                                          ; preds = %if.else483, %if.end338, %entry
  store i32 0, i32* @nodes, align 4
  store i32 0, i32* @qnodes, align 4
  store i32 1, i32* @ply, align 4
  store i32 0, i32* @ECacheProbes, align 4
  store i32 0, i32* @ECacheHits, align 4
  store i32 0, i32* @TTProbes, align 4
  store i32 0, i32* @TTHits, align 4
  store i32 0, i32* @TTStores, align 4
  store i32 0, i32* @NCuts, align 4
  store i32 0, i32* @NTries, align 4
  store i32 0, i32* @TExt, align 4
  store i32 0, i32* @FH, align 4
  store i32 0, i32* @FHF, align 4
  store i32 0, i32* @PVS, align 4
  store i32 0, i32* @FULL, align 4
  store i32 0, i32* @PVSF, align 4
  store i32 0, i32* @ext_check, align 4
  store i32 0, i32* @ext_recap, align 4
  store i32 0, i32* @ext_onerep, align 4
  store i32 0, i32* @razor_drop, align 4
  store i32 0, i32* @razor_material, align 4
  store i32 0, i32* @drop_cuts, align 4
  store i32 0, i32* %rs, align 4
  store i32 0, i32* @extendedtime, align 4
  store i32 0, i32* @forcedwin, align 4
  store i32 200, i32* @maxposdiff, align 4
  store i8 0, i8* @true_i_depth, align 1
  store i32 -1, i32* @bestmovenum, align 4
  %call = call i32 @interrupt()
  %tobool = icmp ne i32 %call, 0
  br i1 %tobool, label %land.lhs.true, label %if.end

land.lhs.true:                                    ; preds = %restart
  %2 = load i32* @is_analyzing, align 4
  %tobool1 = icmp ne i32 %2, 0
  br i1 %tobool1, label %if.then, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %land.lhs.true
  %3 = load i32* @is_pondering, align 4
  %tobool2 = icmp ne i32 %3, 0
  br i1 %tobool2, label %if.then, label %if.end

if.then:                                          ; preds = %lor.lhs.false, %land.lhs.true
  %4 = bitcast %struct.move_s* %agg.result to i8*
  call void @__softboundcets_memcopy_check(i8* %4, i8* bitcast (%struct.move_s* @dummy to i8*), i64 24, i8* %0, i8* %1, i8* null, i8* inttoptr (i64 281474976710656 to i8*))
  call void @__softboundcets_copy_metadata(i8* %4, i8* bitcast (%struct.move_s* @dummy to i8*), i64 24)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %4, i8* bitcast (%struct.move_s* @dummy to i8*), i64 24, i32 4, i1 false)
  br label %return

if.end:                                           ; preds = %lor.lhs.false, %restart
  %call3 = call i64 @rtime()
  store i64 %call3, i64* @start_time, align 8
  store i32 0, i32* @legals, align 4
  %5 = load i32* @Variant, align 4
  %cmp = icmp eq i32 %5, 4
  br i1 %cmp, label %if.then4, label %if.else

if.then4:                                         ; preds = %if.end
  store i32 1, i32* @captures, align 4
  br label %if.end5

if.else:                                          ; preds = %if.end
  store i32 0, i32* @captures, align 4
  br label %if.end5

if.end5:                                          ; preds = %if.else, %if.then4
  %arrayidx = getelementptr inbounds [512 x %struct.move_s]* %moves, i32 0, i64 0
  call void @__softboundcets_allocate_shadow_stack_space(i32 2)
  call void @__softboundcets_store_base_shadow_stack(i8* %bitcast567, i32 1)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bitcast569, i32 1)
  call void @gen(%struct.move_s* %arrayidx)
  call void @__softboundcets_deallocate_shadow_stack_space()
  %6 = load i32* @numb_moves, align 4
  store i32 %6, i32* %num_moves, align 4
  %call6 = call i32 @in_check()
  store i32 %call6, i32* %ic, align 4
  store i32 0, i32* %l, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.end5
  %7 = load i32* %l, align 4
  %8 = load i32* @numb_moves, align 4
  %cmp7 = icmp slt i32 %7, %8
  br i1 %cmp7, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %arrayidx8 = getelementptr inbounds [512 x %struct.move_s]* %moves, i32 0, i64 0
  %9 = load i32* %l, align 4
  call void @__softboundcets_allocate_shadow_stack_space(i32 2)
  call void @__softboundcets_store_base_shadow_stack(i8* %bitcast567, i32 1)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bitcast569, i32 1)
  call void @make(%struct.move_s* %arrayidx8, i32 %9)
  call void @__softboundcets_deallocate_shadow_stack_space()
  %arrayidx9 = getelementptr inbounds [512 x %struct.move_s]* %moves, i32 0, i64 0
  %10 = load i32* %l, align 4
  %11 = load i32* %ic, align 4
  call void @__softboundcets_allocate_shadow_stack_space(i32 2)
  call void @__softboundcets_store_base_shadow_stack(i8* %bitcast567, i32 1)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bitcast569, i32 1)
  %call10 = call i32 @check_legal(%struct.move_s* %arrayidx9, i32 %10, i32 %11)
  call void @__softboundcets_deallocate_shadow_stack_space()
  %tobool11 = icmp ne i32 %call10, 0
  br i1 %tobool11, label %if.then12, label %if.end13

if.then12:                                        ; preds = %for.body
  %12 = load i32* @legals, align 4
  %inc = add nsw i32 %12, 1
  store i32 %inc, i32* @legals, align 4
  %13 = load i32* %l, align 4
  store i32 %13, i32* %lastlegal, align 4
  br label %if.end13

if.end13:                                         ; preds = %if.then12, %for.body
  %arrayidx14 = getelementptr inbounds [512 x %struct.move_s]* %moves, i32 0, i64 0
  %14 = load i32* %l, align 4
  call void @__softboundcets_allocate_shadow_stack_space(i32 2)
  call void @__softboundcets_store_base_shadow_stack(i8* %bitcast567, i32 1)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bitcast569, i32 1)
  call void @unmake(%struct.move_s* %arrayidx14, i32 %14)
  call void @__softboundcets_deallocate_shadow_stack_space()
  br label %for.inc

for.inc:                                          ; preds = %if.end13
  %15 = load i32* %l, align 4
  %inc15 = add nsw i32 %15, 1
  store i32 %inc15, i32* %l, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %16 = load i32* @Variant, align 4
  %cmp16 = icmp eq i32 %16, 4
  br i1 %cmp16, label %land.lhs.true17, label %if.end35

land.lhs.true17:                                  ; preds = %for.end
  %17 = load i32* @legals, align 4
  %cmp18 = icmp eq i32 %17, 0
  br i1 %cmp18, label %if.then19, label %if.end35

if.then19:                                        ; preds = %land.lhs.true17
  store i32 0, i32* @captures, align 4
  store i32 0, i32* %num_moves, align 4
  %arrayidx20 = getelementptr inbounds [512 x %struct.move_s]* %moves, i32 0, i64 0
  call void @__softboundcets_allocate_shadow_stack_space(i32 2)
  call void @__softboundcets_store_base_shadow_stack(i8* %bitcast567, i32 1)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bitcast569, i32 1)
  call void @gen(%struct.move_s* %arrayidx20)
  call void @__softboundcets_deallocate_shadow_stack_space()
  %18 = load i32* @numb_moves, align 4
  store i32 %18, i32* %num_moves, align 4
  store i32 0, i32* %l, align 4
  br label %for.cond21

for.cond21:                                       ; preds = %for.inc32, %if.then19
  %19 = load i32* %l, align 4
  %20 = load i32* @numb_moves, align 4
  %cmp22 = icmp slt i32 %19, %20
  br i1 %cmp22, label %for.body23, label %for.end34

for.body23:                                       ; preds = %for.cond21
  %arrayidx24 = getelementptr inbounds [512 x %struct.move_s]* %moves, i32 0, i64 0
  %21 = load i32* %l, align 4
  call void @__softboundcets_allocate_shadow_stack_space(i32 2)
  call void @__softboundcets_store_base_shadow_stack(i8* %bitcast567, i32 1)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bitcast569, i32 1)
  call void @make(%struct.move_s* %arrayidx24, i32 %21)
  call void @__softboundcets_deallocate_shadow_stack_space()
  %arrayidx25 = getelementptr inbounds [512 x %struct.move_s]* %moves, i32 0, i64 0
  %22 = load i32* %l, align 4
  %23 = load i32* %ic, align 4
  call void @__softboundcets_allocate_shadow_stack_space(i32 2)
  call void @__softboundcets_store_base_shadow_stack(i8* %bitcast567, i32 1)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bitcast569, i32 1)
  %call26 = call i32 @check_legal(%struct.move_s* %arrayidx25, i32 %22, i32 %23)
  call void @__softboundcets_deallocate_shadow_stack_space()
  %tobool27 = icmp ne i32 %call26, 0
  br i1 %tobool27, label %if.then28, label %if.end30

if.then28:                                        ; preds = %for.body23
  %24 = load i32* @legals, align 4
  %inc29 = add nsw i32 %24, 1
  store i32 %inc29, i32* @legals, align 4
  %25 = load i32* %l, align 4
  store i32 %25, i32* %lastlegal, align 4
  br label %if.end30

if.end30:                                         ; preds = %if.then28, %for.body23
  %arrayidx31 = getelementptr inbounds [512 x %struct.move_s]* %moves, i32 0, i64 0
  %26 = load i32* %l, align 4
  call void @__softboundcets_allocate_shadow_stack_space(i32 2)
  call void @__softboundcets_store_base_shadow_stack(i8* %bitcast567, i32 1)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bitcast569, i32 1)
  call void @unmake(%struct.move_s* %arrayidx31, i32 %26)
  call void @__softboundcets_deallocate_shadow_stack_space()
  br label %for.inc32

for.inc32:                                        ; preds = %if.end30
  %27 = load i32* %l, align 4
  %inc33 = add nsw i32 %27, 1
  store i32 %inc33, i32* %l, align 4
  br label %for.cond21

for.end34:                                        ; preds = %for.cond21
  br label %if.end35

if.end35:                                         ; preds = %for.end34, %land.lhs.true17, %for.end
  %28 = load i32* @Variant, align 4
  %cmp36 = icmp ne i32 %28, 1
  br i1 %cmp36, label %land.lhs.true37, label %if.end44

land.lhs.true37:                                  ; preds = %if.end35
  %29 = load i32* @is_pondering, align 4
  %tobool38 = icmp ne i32 %29, 0
  br i1 %tobool38, label %if.end44, label %if.then39

if.then39:                                        ; preds = %land.lhs.true37
  %30 = load i32* @legals, align 4
  %cmp40 = icmp eq i32 %30, 1
  br i1 %cmp40, label %if.then41, label %if.end43

if.then41:                                        ; preds = %if.then39
  %31 = load i32* @inc, align 4
  %mul = mul nsw i32 %31, 100
  %32 = load i32* @time_cushion, align 4
  %add = add nsw i32 %32, %mul
  store i32 %add, i32* @time_cushion, align 4
  %33 = load i32* %lastlegal, align 4
  %idxprom = sext i32 %33 to i64
  %arrayidx42 = getelementptr inbounds [512 x %struct.move_s]* %moves, i32 0, i64 %idxprom
  %34 = bitcast %struct.move_s* %agg.result to i8*
  %35 = bitcast %struct.move_s* %arrayidx42 to i8*
  call void @__softboundcets_memcopy_check(i8* %34, i8* %35, i64 24, i8* %0, i8* %1, i8* %bitcast567, i8* %bitcast569)
  call void @__softboundcets_copy_metadata(i8* %34, i8* %35, i64 24)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %34, i8* %35, i64 24, i32 4, i1 false)
  br label %return

if.end43:                                         ; preds = %if.then39
  br label %if.end44

if.end44:                                         ; preds = %if.end43, %land.lhs.true37, %if.end35
  call void @check_phase()
  %36 = load i32* @phase, align 4
  switch i32 %36, label %sw.epilog [
    i32 0, label %sw.bb
    i32 1, label %sw.bb46
    i32 2, label %sw.bb48
  ]

sw.bb:                                            ; preds = %if.end44
  %call45 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([16 x i8]* @.str1122, i32 0, i32 0))
  br label %sw.epilog

sw.bb46:                                          ; preds = %if.end44
  %call47 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([19 x i8]* @.str2123, i32 0, i32 0))
  br label %sw.epilog

sw.bb48:                                          ; preds = %if.end44
  %call49 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([16 x i8]* @.str3124, i32 0, i32 0))
  br label %sw.epilog

sw.epilog:                                        ; preds = %sw.bb48, %sw.bb46, %sw.bb, %if.end44
  %37 = load i32* @is_pondering, align 4
  %tobool50 = icmp ne i32 %37, 0
  br i1 %tobool50, label %if.else66, label %if.then51

if.then51:                                        ; preds = %sw.epilog
  %38 = load i32* @fixed_time, align 4
  %tobool52 = icmp ne i32 %38, 0
  br i1 %tobool52, label %if.else64, label %if.then53

if.then53:                                        ; preds = %if.then51
  %39 = load i32* @go_fast, align 4
  %tobool54 = icmp ne i32 %39, 0
  br i1 %tobool54, label %if.then55, label %if.else61

if.then55:                                        ; preds = %if.then53
  %call56 = call i32 @allocate_time()
  store i32 %call56, i32* %tmptmp, align 4
  %40 = load i32* %tmptmp, align 4
  %cmp57 = icmp sgt i32 %40, 40
  br i1 %cmp57, label %if.then58, label %if.else59

if.then58:                                        ; preds = %if.then55
  store i32 40, i32* @time_for_move, align 4
  br label %if.end60

if.else59:                                        ; preds = %if.then55
  %41 = load i32* %tmptmp, align 4
  store i32 %41, i32* @time_for_move, align 4
  br label %if.end60

if.end60:                                         ; preds = %if.else59, %if.then58
  br label %if.end63

if.else61:                                        ; preds = %if.then53
  %call62 = call i32 @allocate_time()
  store i32 %call62, i32* @time_for_move, align 4
  br label %if.end63

if.end63:                                         ; preds = %if.else61, %if.end60
  br label %if.end65

if.else64:                                        ; preds = %if.then51
  %42 = load i32* @fixed_time, align 4
  store i32 %42, i32* @time_for_move, align 4
  br label %if.end65

if.end65:                                         ; preds = %if.else64, %if.end63
  br label %if.end67

if.else66:                                        ; preds = %sw.epilog
  store i32 999999, i32* @time_for_move, align 4
  br label %if.end67

if.end67:                                         ; preds = %if.else66, %if.end65
  %43 = load i32* %pn_restart, align 4
  %tobool68 = icmp ne i32 %43, 0
  br i1 %tobool68, label %if.then69, label %if.end76

if.then69:                                        ; preds = %if.end67
  %44 = load i32* @time_for_move, align 4
  %conv = sitofp i32 %44 to float
  %mul70 = fmul float %conv, 2.000000e+00
  %conv71 = fpext float %mul70 to double
  %45 = load i32* %pn_restart, align 4
  %conv72 = sitofp i32 %45 to float
  %conv73 = fpext float %conv72 to double
  %add74 = fadd double %conv73, 1.000000e+00
  %div = fdiv double %conv71, %add74
  %conv75 = fptosi double %div to i32
  store i32 %conv75, i32* @time_for_move, align 4
  br label %if.end76

if.end76:                                         ; preds = %if.then69, %if.end67
  %46 = load i32* @time_for_move, align 4
  %call77 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([20 x i8]* @.str4125, i32 0, i32 0), i32 %46)
  %47 = load i32* %pn_restart, align 4
  %tobool78 = icmp ne i32 %47, 0
  br i1 %tobool78, label %if.end80, label %if.then79

if.then79:                                        ; preds = %if.end76
  call void @clear_tt()
  call void @reset_ecache()
  call void @__softboundcets_memset_check(i8* bitcast ([300 x i32]* @rootlosers to i8*), i64 1200, i8* null, i8* inttoptr (i64 281474976710656 to i8*))
  call void @llvm.memset.p0i8.i64(i8* bitcast ([300 x i32]* @rootlosers to i8*), i8 0, i64 1200, i32 16, i1 false)
  br label %if.end80

if.end80:                                         ; preds = %if.then79, %if.end76
  %48 = load i32* %pn_restart, align 4
  %tobool81 = icmp ne i32 %48, 0
  br i1 %tobool81, label %if.else102, label %land.lhs.true82

land.lhs.true82:                                  ; preds = %if.end80
  %49 = load i32* @is_pondering, align 4
  %tobool83 = icmp ne i32 %49, 0
  br i1 %tobool83, label %if.else102, label %land.lhs.true84

land.lhs.true84:                                  ; preds = %land.lhs.true82
  %50 = load i32* @Variant, align 4
  %cmp85 = icmp eq i32 %50, 3
  br i1 %cmp85, label %land.lhs.true90, label %lor.lhs.false87

lor.lhs.false87:                                  ; preds = %land.lhs.true84
  %51 = load i32* @Variant, align 4
  %cmp88 = icmp eq i32 %51, 4
  br i1 %cmp88, label %land.lhs.true90, label %if.else102

land.lhs.true90:                                  ; preds = %lor.lhs.false87, %land.lhs.true84
  %52 = load i32* @piece_count, align 4
  %cmp91 = icmp sgt i32 %52, 3
  br i1 %cmp91, label %if.then96, label %lor.lhs.false93

lor.lhs.false93:                                  ; preds = %land.lhs.true90
  %53 = load i32* @Variant, align 4
  %cmp94 = icmp ne i32 %53, 3
  br i1 %cmp94, label %if.then96, label %if.else102

if.then96:                                        ; preds = %lor.lhs.false93, %land.lhs.true90
  %54 = load i32* @time_for_move, align 4
  %conv97 = sitofp i32 %54 to float
  %conv98 = fpext float %conv97 to double
  %mul99 = fmul double %conv98, 1.000000e+00
  %div100 = fdiv double %mul99, 3.000000e+00
  %conv101 = fptosi double %div100 to i32
  store i32 %conv101, i32* @pn_time, align 4
  call void @proofnumberscan()
  br label %if.end106

if.else102:                                       ; preds = %lor.lhs.false93, %lor.lhs.false87, %land.lhs.true82, %if.end80
  %55 = load i32* %pn_restart, align 4
  %tobool103 = icmp ne i32 %55, 0
  br i1 %tobool103, label %if.end105, label %if.then104

if.then104:                                       ; preds = %if.else102
  call void @__softboundcets_memcopy_check(i8* bitcast (%struct.move_s* @pn_move to i8*), i8* bitcast (%struct.move_s* @dummy to i8*), i64 24, i8* null, i8* inttoptr (i64 281474976710656 to i8*), i8* null, i8* inttoptr (i64 281474976710656 to i8*))
  call void @__softboundcets_copy_metadata(i8* bitcast (%struct.move_s* @pn_move to i8*), i8* bitcast (%struct.move_s* @dummy to i8*), i64 24)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* bitcast (%struct.move_s* @pn_move to i8*), i8* bitcast (%struct.move_s* @dummy to i8*), i64 24, i32 4, i1 false)
  br label %if.end105

if.end105:                                        ; preds = %if.then104, %if.else102
  br label %if.end106

if.end106:                                        ; preds = %if.end105, %if.then96
  %56 = load i32* @result, align 4
  %tobool107 = icmp ne i32 %56, 0
  br i1 %tobool107, label %land.lhs.true108, label %if.end112

land.lhs.true108:                                 ; preds = %if.end106
  %57 = load i32* getelementptr inbounds (%struct.move_s* @pn_move, i32 0, i32 1), align 4
  %58 = load i32* getelementptr inbounds (%struct.move_s* @dummy, i32 0, i32 1), align 4
  %cmp109 = icmp eq i32 %57, %58
  br i1 %cmp109, label %if.then111, label %if.end112

if.then111:                                       ; preds = %land.lhs.true108
  %59 = bitcast %struct.move_s* %agg.result to i8*
  call void @__softboundcets_memcopy_check(i8* %59, i8* bitcast (%struct.move_s* @pn_move to i8*), i64 24, i8* %0, i8* %1, i8* null, i8* inttoptr (i64 281474976710656 to i8*))
  call void @__softboundcets_copy_metadata(i8* %59, i8* bitcast (%struct.move_s* @pn_move to i8*), i64 24)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %59, i8* bitcast (%struct.move_s* @pn_move to i8*), i64 24, i32 4, i1 false)
  br label %return

if.end112:                                        ; preds = %land.lhs.true108, %if.end106
  %60 = load i32* @forcedwin, align 4
  %tobool113 = icmp ne i32 %60, 0
  br i1 %tobool113, label %land.lhs.true116, label %lor.lhs.false114

lor.lhs.false114:                                 ; preds = %if.end112
  %61 = load i32* @result, align 4
  %tobool115 = icmp ne i32 %61, 0
  br i1 %tobool115, label %land.lhs.true116, label %if.else122

land.lhs.true116:                                 ; preds = %lor.lhs.false114, %if.end112
  %62 = load i32* getelementptr inbounds (%struct.move_s* @pn_move, i32 0, i32 1), align 4
  %63 = load i32* getelementptr inbounds (%struct.move_s* @dummy, i32 0, i32 1), align 4
  %cmp117 = icmp ne i32 %62, %63
  br i1 %cmp117, label %land.lhs.true119, label %if.else122

land.lhs.true119:                                 ; preds = %land.lhs.true116
  %64 = load i32* @is_analyzing, align 4
  %tobool120 = icmp ne i32 %64, 0
  br i1 %tobool120, label %if.else122, label %if.then121

if.then121:                                       ; preds = %land.lhs.true119
  %65 = bitcast %struct.move_s* %comp_move to i8*
  call void @__softboundcets_memcopy_check(i8* %65, i8* bitcast (%struct.move_s* @pn_move to i8*), i64 24, i8* %bitcast, i8* %bitcast517, i8* null, i8* inttoptr (i64 281474976710656 to i8*))
  call void @__softboundcets_copy_metadata(i8* %65, i8* bitcast (%struct.move_s* @pn_move to i8*), i64 24)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %65, i8* bitcast (%struct.move_s* @pn_move to i8*), i64 24, i32 4, i1 false)
  br label %if.end272

if.else122:                                       ; preds = %land.lhs.true119, %land.lhs.true116, %lor.lhs.false114
  store i32 0, i32* %i, align 4
  br label %for.cond123

for.cond123:                                      ; preds = %for.inc138, %if.else122
  %66 = load i32* %i, align 4
  %cmp124 = icmp slt i32 %66, 300
  br i1 %cmp124, label %for.body126, label %for.end140

for.body126:                                      ; preds = %for.cond123
  store i32 0, i32* %j, align 4
  br label %for.cond127

for.cond127:                                      ; preds = %for.inc135, %for.body126
  %67 = load i32* %j, align 4
  %cmp128 = icmp slt i32 %67, 300
  br i1 %cmp128, label %for.body130, label %for.end137

for.body130:                                      ; preds = %for.cond127
  %68 = load i32* %j, align 4
  %idxprom131 = sext i32 %68 to i64
  %69 = load i32* %i, align 4
  %idxprom132 = sext i32 %69 to i64
  %arrayidx133 = getelementptr inbounds [300 x [300 x %struct.move_s]]* @pv, i32 0, i64 %idxprom132
  %arrayidx134 = getelementptr inbounds [300 x %struct.move_s]* %arrayidx133, i32 0, i64 %idxprom131
  %70 = bitcast %struct.move_s* %arrayidx134 to i8*
  call void @__softboundcets_memcopy_check(i8* %70, i8* bitcast (%struct.move_s* @dummy to i8*), i64 24, i8* null, i8* inttoptr (i64 281474976710656 to i8*), i8* null, i8* inttoptr (i64 281474976710656 to i8*))
  call void @__softboundcets_copy_metadata(i8* %70, i8* bitcast (%struct.move_s* @dummy to i8*), i64 24)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %70, i8* bitcast (%struct.move_s* @dummy to i8*), i64 24, i32 4, i1 false)
  br label %for.inc135

for.inc135:                                       ; preds = %for.body130
  %71 = load i32* %j, align 4
  %inc136 = add nsw i32 %71, 1
  store i32 %inc136, i32* %j, align 4
  br label %for.cond127

for.end137:                                       ; preds = %for.cond127
  br label %for.inc138

for.inc138:                                       ; preds = %for.end137
  %72 = load i32* %i, align 4
  %inc139 = add nsw i32 %72, 1
  store i32 %inc139, i32* %i, align 4
  br label %for.cond123

for.end140:                                       ; preds = %for.cond123
  call void @__softboundcets_memset_check(i8* bitcast ([144 x [144 x i32]]* @history_h to i8*), i64 82944, i8* null, i8* inttoptr (i64 281474976710656 to i8*))
  call void @llvm.memset.p0i8.i64(i8* bitcast ([144 x [144 x i32]]* @history_h to i8*), i8 0, i64 82944, i32 16, i1 false)
  store i32 0, i32* %i, align 4
  br label %for.cond141

for.cond141:                                      ; preds = %for.inc157, %for.end140
  %73 = load i32* %i, align 4
  %cmp142 = icmp slt i32 %73, 300
  br i1 %cmp142, label %for.body144, label %for.end159

for.body144:                                      ; preds = %for.cond141
  %74 = load i32* %i, align 4
  %idxprom145 = sext i32 %74 to i64
  %arrayidx146 = getelementptr inbounds [300 x i32]* @killer_scores, i32 0, i64 %idxprom145
  store i32 0, i32* %arrayidx146, align 4
  %75 = load i32* %i, align 4
  %idxprom147 = sext i32 %75 to i64
  %arrayidx148 = getelementptr inbounds [300 x i32]* @killer_scores2, i32 0, i64 %idxprom147
  store i32 0, i32* %arrayidx148, align 4
  %76 = load i32* %i, align 4
  %idxprom149 = sext i32 %76 to i64
  %arrayidx150 = getelementptr inbounds [300 x i32]* @killer_scores3, i32 0, i64 %idxprom149
  store i32 0, i32* %arrayidx150, align 4
  %77 = load i32* %i, align 4
  %idxprom151 = sext i32 %77 to i64
  %arrayidx152 = getelementptr inbounds [300 x %struct.move_s]* @killer1, i32 0, i64 %idxprom151
  %78 = bitcast %struct.move_s* %arrayidx152 to i8*
  call void @__softboundcets_memcopy_check(i8* %78, i8* bitcast (%struct.move_s* @dummy to i8*), i64 24, i8* null, i8* inttoptr (i64 281474976710656 to i8*), i8* null, i8* inttoptr (i64 281474976710656 to i8*))
  call void @__softboundcets_copy_metadata(i8* %78, i8* bitcast (%struct.move_s* @dummy to i8*), i64 24)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %78, i8* bitcast (%struct.move_s* @dummy to i8*), i64 24, i32 4, i1 false)
  %79 = load i32* %i, align 4
  %idxprom153 = sext i32 %79 to i64
  %arrayidx154 = getelementptr inbounds [300 x %struct.move_s]* @killer2, i32 0, i64 %idxprom153
  %80 = bitcast %struct.move_s* %arrayidx154 to i8*
  call void @__softboundcets_memcopy_check(i8* %80, i8* bitcast (%struct.move_s* @dummy to i8*), i64 24, i8* null, i8* inttoptr (i64 281474976710656 to i8*), i8* null, i8* inttoptr (i64 281474976710656 to i8*))
  call void @__softboundcets_copy_metadata(i8* %80, i8* bitcast (%struct.move_s* @dummy to i8*), i64 24)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %80, i8* bitcast (%struct.move_s* @dummy to i8*), i64 24, i32 4, i1 false)
  %81 = load i32* %i, align 4
  %idxprom155 = sext i32 %81 to i64
  %arrayidx156 = getelementptr inbounds [300 x %struct.move_s]* @killer3, i32 0, i64 %idxprom155
  %82 = bitcast %struct.move_s* %arrayidx156 to i8*
  call void @__softboundcets_memcopy_check(i8* %82, i8* bitcast (%struct.move_s* @dummy to i8*), i64 24, i8* null, i8* inttoptr (i64 281474976710656 to i8*), i8* null, i8* inttoptr (i64 281474976710656 to i8*))
  call void @__softboundcets_copy_metadata(i8* %82, i8* bitcast (%struct.move_s* @dummy to i8*), i64 24)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %82, i8* bitcast (%struct.move_s* @dummy to i8*), i64 24, i32 4, i1 false)
  br label %for.inc157

for.inc157:                                       ; preds = %for.body144
  %83 = load i32* %i, align 4
  %inc158 = add nsw i32 %83, 1
  store i32 %inc158, i32* %i, align 4
  br label %for.cond141

for.end159:                                       ; preds = %for.cond141
  call void @__softboundcets_memset_check(i8* bitcast ([512 x i32]* @rootnodecount to i8*), i64 2048, i8* bitcast ([512 x i32]* @rootnodecount to i8*), i8* bitcast ([512 x i32]* getelementptr inbounds ([512 x i32]* @rootnodecount, i32 1) to i8*))
  call void @llvm.memset.p0i8.i64(i8* bitcast ([512 x i32]* @rootnodecount to i8*), i8 0, i64 2048, i32 16, i1 false)
  store i32 0, i32* %temp_score, align 4
  store i32 0, i32* @cur_score, align 4
  store i32 0, i32* %true_score, align 4
  store i32 1, i32* @i_depth, align 4
  br label %for.cond160

for.cond160:                                      ; preds = %for.inc269, %for.end159
  %84 = load i32* @i_depth, align 4
  %85 = load i32* @maxdepth, align 4
  %cmp161 = icmp sle i32 %84, %85
  br i1 %cmp161, label %for.body163, label %for.end271

for.body163:                                      ; preds = %for.cond160
  %call164 = call i64 @rtime()
  %86 = load i64* @start_time, align 8
  %call165 = call i32 @rdifftime(i64 %call164, i64 %86)
  store i32 %call165, i32* %elapsed, align 4
  %87 = load i32* %elapsed, align 4
  %conv166 = sitofp i32 %87 to double
  %88 = load i32* @time_for_move, align 4
  %conv167 = sitofp i32 %88 to double
  %mul168 = fmul double %conv167, 2.100000e+00
  %div169 = fdiv double %mul168, 3.000000e+00
  %cmp170 = fcmp ogt double %conv166, %div169
  br i1 %cmp170, label %land.lhs.true172, label %if.end176

land.lhs.true172:                                 ; preds = %for.body163
  %89 = load i32* @i_depth, align 4
  %cmp173 = icmp sgt i32 %89, 2
  br i1 %cmp173, label %if.then175, label %if.end176

if.then175:                                       ; preds = %land.lhs.true172
  br label %for.end271

if.end176:                                        ; preds = %land.lhs.true172, %for.body163
  store i32 0, i32* @failed, align 4
  %90 = load i32* %temp_score, align 4
  %91 = load i32* @Variant, align 4
  %cmp177 = icmp eq i32 %91, 2
  %cond = select i1 %cmp177, i32 35, i32 100
  %sub = sub nsw i32 %90, %cond
  store i32 %sub, i32* %alpha, align 4
  %92 = load i32* %temp_score, align 4
  %93 = load i32* @Variant, align 4
  %cmp179 = icmp eq i32 %93, 2
  %cond181 = select i1 %cmp179, i32 35, i32 100
  %add182 = add nsw i32 %92, %cond181
  store i32 %add182, i32* %beta, align 4
  %94 = load i32* %alpha, align 4
  %95 = load i32* %beta, align 4
  %96 = load i32* @i_depth, align 4
  call void @__softboundcets_allocate_shadow_stack_space(i32 2)
  call void @__softboundcets_store_base_shadow_stack(i8* %bitcast595, i32 1)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bitcast597, i32 1)
  call void @search_root(%struct.move_s* sret %tmp, i32 %94, i32 %95, i32 %96)
  call void @__softboundcets_deallocate_shadow_stack_space()
  %97 = bitcast %struct.move_s* %temp_move to i8*
  %98 = bitcast %struct.move_s* %tmp to i8*
  call void @__softboundcets_memcopy_check(i8* %97, i8* %98, i64 24, i8* %bitcast519, i8* %bitcast521, i8* %bitcast595, i8* %bitcast597)
  call void @__softboundcets_copy_metadata(i8* %97, i8* %98, i64 24)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %97, i8* %98, i64 24, i32 4, i1 false)
  %99 = load i32* @result, align 4
  %tobool183 = icmp ne i32 %99, 0
  br i1 %tobool183, label %if.then184, label %if.end185

if.then184:                                       ; preds = %if.end176
  br label %for.end271

if.end185:                                        ; preds = %if.end176
  %100 = load i32* @cur_score, align 4
  %101 = load i32* %alpha, align 4
  %cmp186 = icmp sle i32 %100, %101
  br i1 %cmp186, label %if.then188, label %if.else189

if.then188:                                       ; preds = %if.end185
  store i32 1, i32* @failed, align 4
  br label %if.end190

if.else189:                                       ; preds = %if.end185
  store i32 0, i32* @failed, align 4
  br label %if.end190

if.end190:                                        ; preds = %if.else189, %if.then188
  %102 = load i32* @cur_score, align 4
  %103 = load i32* %alpha, align 4
  %cmp191 = icmp sle i32 %102, %103
  br i1 %cmp191, label %land.lhs.true193, label %if.else201

land.lhs.true193:                                 ; preds = %if.end190
  %104 = load i32* @time_exit, align 4
  %tobool194 = icmp ne i32 %104, 0
  br i1 %tobool194, label %if.else201, label %if.then195

if.then195:                                       ; preds = %land.lhs.true193
  %105 = load i32* %rs, align 4
  %inc196 = add nsw i32 %105, 1
  store i32 %inc196, i32* %rs, align 4
  %106 = load i32* @i_depth, align 4
  call void @__softboundcets_allocate_shadow_stack_space(i32 2)
  call void @__softboundcets_store_base_shadow_stack(i8* %bitcast599, i32 1)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bitcast601, i32 1)
  call void @search_root(%struct.move_s* sret %tmp197, i32 -1000000, i32 1000000, i32 %106)
  call void @__softboundcets_deallocate_shadow_stack_space()
  %107 = bitcast %struct.move_s* %temp_move to i8*
  %108 = bitcast %struct.move_s* %tmp197 to i8*
  call void @__softboundcets_memcopy_check(i8* %107, i8* %108, i64 24, i8* %bitcast519, i8* %bitcast521, i8* %bitcast599, i8* %bitcast601)
  call void @__softboundcets_copy_metadata(i8* %107, i8* %108, i64 24)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %107, i8* %108, i64 24, i32 4, i1 false)
  %109 = load i32* @time_exit, align 4
  %tobool198 = icmp ne i32 %109, 0
  br i1 %tobool198, label %if.end200, label %if.then199

if.then199:                                       ; preds = %if.then195
  store i32 0, i32* @failed, align 4
  br label %if.end200

if.end200:                                        ; preds = %if.then199, %if.then195
  br label %if.end213

if.else201:                                       ; preds = %land.lhs.true193, %if.end190
  %110 = load i32* @cur_score, align 4
  %111 = load i32* %beta, align 4
  %cmp202 = icmp sge i32 %110, %111
  br i1 %cmp202, label %land.lhs.true204, label %if.end212

land.lhs.true204:                                 ; preds = %if.else201
  %112 = load i32* @time_exit, align 4
  %tobool205 = icmp ne i32 %112, 0
  br i1 %tobool205, label %if.end212, label %if.then206

if.then206:                                       ; preds = %land.lhs.true204
  %113 = bitcast %struct.move_s* %comp_move to i8*
  %114 = bitcast %struct.move_s* %temp_move to i8*
  call void @__softboundcets_memcopy_check(i8* %113, i8* %114, i64 24, i8* %bitcast, i8* %bitcast517, i8* %bitcast519, i8* %bitcast521)
  call void @__softboundcets_copy_metadata(i8* %113, i8* %114, i64 24)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %113, i8* %114, i64 24, i32 4, i1 false)
  %115 = load i32* @cur_score, align 4
  store i32 %115, i32* %temp_score, align 4
  %116 = load i32* %rs, align 4
  %inc207 = add nsw i32 %116, 1
  store i32 %inc207, i32* %rs, align 4
  %117 = load i32* @i_depth, align 4
  call void @__softboundcets_allocate_shadow_stack_space(i32 2)
  call void @__softboundcets_store_base_shadow_stack(i8* %bitcast603, i32 1)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bitcast605, i32 1)
  call void @search_root(%struct.move_s* sret %tmp208, i32 -1000000, i32 1000000, i32 %117)
  call void @__softboundcets_deallocate_shadow_stack_space()
  %118 = bitcast %struct.move_s* %temp_move to i8*
  %119 = bitcast %struct.move_s* %tmp208 to i8*
  call void @__softboundcets_memcopy_check(i8* %118, i8* %119, i64 24, i8* %bitcast519, i8* %bitcast521, i8* %bitcast603, i8* %bitcast605)
  call void @__softboundcets_copy_metadata(i8* %118, i8* %119, i64 24)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %118, i8* %119, i64 24, i32 4, i1 false)
  %120 = load i32* @time_exit, align 4
  %tobool209 = icmp ne i32 %120, 0
  br i1 %tobool209, label %if.end211, label %if.then210

if.then210:                                       ; preds = %if.then206
  store i32 0, i32* @failed, align 4
  br label %if.end211

if.end211:                                        ; preds = %if.then210, %if.then206
  br label %if.end212

if.end212:                                        ; preds = %if.end211, %land.lhs.true204, %if.else201
  br label %if.end213

if.end213:                                        ; preds = %if.end212, %if.end200
  %call214 = call i32 @interrupt()
  %tobool215 = icmp ne i32 %call214, 0
  br i1 %tobool215, label %land.lhs.true216, label %if.end227

land.lhs.true216:                                 ; preds = %if.end213
  %121 = load i32* @i_depth, align 4
  %cmp217 = icmp sgt i32 %121, 1
  br i1 %cmp217, label %if.then219, label %if.end227

if.then219:                                       ; preds = %land.lhs.true216
  %122 = load i32* @is_pondering, align 4
  %tobool220 = icmp ne i32 %122, 0
  br i1 %tobool220, label %if.then221, label %if.else222

if.then221:                                       ; preds = %if.then219
  %123 = bitcast %struct.move_s* %agg.result to i8*
  call void @__softboundcets_memcopy_check(i8* %123, i8* bitcast (%struct.move_s* @dummy to i8*), i64 24, i8* %0, i8* %1, i8* null, i8* inttoptr (i64 281474976710656 to i8*))
  call void @__softboundcets_copy_metadata(i8* %123, i8* bitcast (%struct.move_s* @dummy to i8*), i64 24)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %123, i8* bitcast (%struct.move_s* @dummy to i8*), i64 24, i32 4, i1 false)
  br label %return

if.else222:                                       ; preds = %if.then219
  %124 = load i32* @go_fast, align 4
  %tobool223 = icmp ne i32 %124, 0
  br i1 %tobool223, label %if.end225, label %if.then224

if.then224:                                       ; preds = %if.else222
  br label %for.end271

if.end225:                                        ; preds = %if.else222
  br label %if.end226

if.end226:                                        ; preds = %if.end225
  br label %if.end227

if.end227:                                        ; preds = %if.end226, %land.lhs.true216, %if.end213
  %125 = load i32* @time_failure, align 4
  %tobool228 = icmp ne i32 %125, 0
  br i1 %tobool228, label %if.end252, label %land.lhs.true229

land.lhs.true229:                                 ; preds = %if.end227
  %126 = load i32* @failed, align 4
  %tobool230 = icmp ne i32 %126, 0
  br i1 %tobool230, label %if.end252, label %if.then231

if.then231:                                       ; preds = %land.lhs.true229
  %127 = load i32* @cur_score, align 4
  %cmp232 = icmp eq i32 %127, -1000000
  br i1 %cmp232, label %if.then234, label %if.end235

if.then234:                                       ; preds = %if.then231
  %128 = bitcast %struct.move_s* %agg.result to i8*
  call void @__softboundcets_memcopy_check(i8* %128, i8* bitcast (%struct.move_s* @dummy to i8*), i64 24, i8* %0, i8* %1, i8* null, i8* inttoptr (i64 281474976710656 to i8*))
  call void @__softboundcets_copy_metadata(i8* %128, i8* bitcast (%struct.move_s* @dummy to i8*), i64 24)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %128, i8* bitcast (%struct.move_s* @dummy to i8*), i64 24, i32 4, i1 false)
  br label %return

if.end235:                                        ; preds = %if.then231
  %129 = bitcast %struct.move_s* %comp_move to i8*
  %130 = bitcast %struct.move_s* %temp_move to i8*
  call void @__softboundcets_memcopy_check(i8* %129, i8* %130, i64 24, i8* %bitcast, i8* %bitcast517, i8* %bitcast519, i8* %bitcast521)
  call void @__softboundcets_copy_metadata(i8* %129, i8* %130, i64 24)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %129, i8* %130, i64 24, i32 4, i1 false)
  %131 = load i32* @cur_score, align 4
  store i32 %131, i32* %temp_score, align 4
  call void @__softboundcets_allocate_shadow_stack_space(i32 2)
  call void @__softboundcets_store_base_shadow_stack(i8* getelementptr inbounds ([256 x i8]* @postpv, i32 0, i32 0), i32 1)
  call void @__softboundcets_store_bound_shadow_stack(i8* getelementptr inbounds ([256 x i8]* @postpv, i32 1, i32 0), i32 1)
  call void @stringize_pv(i8* getelementptr inbounds ([256 x i8]* @postpv, i32 0, i32 0))
  call void @__softboundcets_deallocate_shadow_stack_space()
  %132 = load i32* @time_exit, align 4
  %tobool236 = icmp ne i32 %132, 0
  br i1 %tobool236, label %if.end239, label %if.then237

if.then237:                                       ; preds = %if.end235
  %133 = load i32* @i_depth, align 4
  %conv238 = trunc i32 %133 to i8
  store i8 %conv238, i8* @true_i_depth, align 1
  br label %if.end239

if.end239:                                        ; preds = %if.then237, %if.end235
  %134 = load i32* @i_depth, align 4
  %cmp240 = icmp sge i32 %134, 2
  br i1 %cmp240, label %if.then242, label %if.end243

if.then242:                                       ; preds = %if.end239
  %135 = load i32* @cur_score, align 4
  call void @post_thinking(i32 %135)
  br label %if.end243

if.end243:                                        ; preds = %if.then242, %if.end239
  %136 = load i32* %temp_score, align 4
  %cmp244 = icmp sgt i32 %136, 900000
  br i1 %cmp244, label %land.lhs.true246, label %if.end251

land.lhs.true246:                                 ; preds = %if.end243
  %137 = load i32* @cur_score, align 4
  %sub247 = sub nsw i32 1000000, %137
  %138 = load i32* @i_depth, align 4
  %cmp248 = icmp slt i32 %sub247, %138
  br i1 %cmp248, label %if.then250, label %if.end251

if.then250:                                       ; preds = %land.lhs.true246
  br label %for.end271

if.end251:                                        ; preds = %land.lhs.true246, %if.end243
  br label %if.end252

if.end252:                                        ; preds = %if.end251, %land.lhs.true229, %if.end227
  %139 = load i32* @time_exit, align 4
  %tobool253 = icmp ne i32 %139, 0
  br i1 %tobool253, label %if.then254, label %if.end255

if.then254:                                       ; preds = %if.end252
  br label %for.end271

if.end255:                                        ; preds = %if.end252
  store i32 0, i32* %j, align 4
  br label %for.cond256

for.cond256:                                      ; preds = %for.inc266, %if.end255
  %140 = load i32* %j, align 4
  %cmp257 = icmp slt i32 %140, 300
  br i1 %cmp257, label %for.body259, label %for.end268

for.body259:                                      ; preds = %for.cond256
  %141 = load i32* %j, align 4
  %idxprom260 = sext i32 %141 to i64
  %arrayidx261 = getelementptr inbounds [300 x i32]* @killer_scores, i32 0, i64 %idxprom260
  store i32 0, i32* %arrayidx261, align 4
  %142 = load i32* %j, align 4
  %idxprom262 = sext i32 %142 to i64
  %arrayidx263 = getelementptr inbounds [300 x i32]* @killer_scores2, i32 0, i64 %idxprom262
  store i32 0, i32* %arrayidx263, align 4
  %143 = load i32* %j, align 4
  %idxprom264 = sext i32 %143 to i64
  %arrayidx265 = getelementptr inbounds [300 x i32]* @killer_scores3, i32 0, i64 %idxprom264
  store i32 0, i32* %arrayidx265, align 4
  br label %for.inc266

for.inc266:                                       ; preds = %for.body259
  %144 = load i32* %j, align 4
  %inc267 = add nsw i32 %144, 1
  store i32 %inc267, i32* %j, align 4
  br label %for.cond256

for.end268:                                       ; preds = %for.cond256
  br label %for.inc269

for.inc269:                                       ; preds = %for.end268
  %145 = load i32* @i_depth, align 4
  %inc270 = add nsw i32 %145, 1
  store i32 %inc270, i32* @i_depth, align 4
  br label %for.cond160

for.end271:                                       ; preds = %if.then254, %if.then250, %if.then224, %if.then184, %if.then175, %for.cond160
  br label %if.end272

if.end272:                                        ; preds = %for.end271, %if.then121
  %146 = load i32* @forcedwin, align 4
  %tobool273 = icmp ne i32 %146, 0
  br i1 %tobool273, label %if.end341, label %if.then274

if.then274:                                       ; preds = %if.end272
  %147 = bitcast %struct.move_s* %old_move to i8*
  %148 = bitcast %struct.move_s* %comp_move to i8*
  call void @__softboundcets_memcopy_check(i8* %147, i8* %148, i64 24, i8* %bitcast523, i8* %bitcast525, i8* %bitcast, i8* %bitcast517)
  call void @__softboundcets_copy_metadata(i8* %147, i8* %148, i64 24)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %147, i8* %148, i64 24, i32 4, i1 false)
  %149 = load i32* @Variant, align 4
  %cmp275 = icmp eq i32 %149, 4
  br i1 %cmp275, label %land.lhs.true280, label %lor.lhs.false277

lor.lhs.false277:                                 ; preds = %if.then274
  %150 = load i32* @Variant, align 4
  %cmp278 = icmp eq i32 %150, 3
  br i1 %cmp278, label %land.lhs.true280, label %if.end340

land.lhs.true280:                                 ; preds = %lor.lhs.false277, %if.then274
  %151 = load i32* @result, align 4
  %tobool281 = icmp ne i32 %151, 0
  br i1 %tobool281, label %if.end340, label %land.lhs.true282

land.lhs.true282:                                 ; preds = %land.lhs.true280
  %152 = load i32* @alllosers, align 4
  %tobool283 = icmp ne i32 %152, 0
  br i1 %tobool283, label %if.end340, label %land.lhs.true284

land.lhs.true284:                                 ; preds = %land.lhs.true282
  %153 = load i32* @is_pondering, align 4
  %tobool285 = icmp ne i32 %153, 0
  br i1 %tobool285, label %if.end340, label %if.then286

if.then286:                                       ; preds = %land.lhs.true284
  store i32 0, i32* @s_threat, align 4
  call void @__softboundcets_allocate_shadow_stack_space(i32 3)
  call void @__softboundcets_store_base_shadow_stack(i8* %bitcast607, i32 1)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bitcast609, i32 1)
  call void @__softboundcets_store_base_shadow_stack(i8* %bitcast, i32 2)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bitcast517, i32 2)
  call void @proofnumbercheck(%struct.move_s* sret %tmp287, %struct.move_s* byval align 8 %comp_move)
  call void @__softboundcets_deallocate_shadow_stack_space()
  %154 = bitcast %struct.move_s* %comp_move to i8*
  %155 = bitcast %struct.move_s* %tmp287 to i8*
  call void @__softboundcets_memcopy_check(i8* %154, i8* %155, i64 24, i8* %bitcast, i8* %bitcast517, i8* %bitcast607, i8* %bitcast609)
  call void @__softboundcets_copy_metadata(i8* %154, i8* %155, i64 24)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %154, i8* %155, i64 24, i32 4, i1 false)
  %156 = load i32* %pn_restart, align 4
  %cmp288 = icmp slt i32 %156, 10
  br i1 %cmp288, label %land.lhs.true290, label %if.end339

land.lhs.true290:                                 ; preds = %if.then286
  %157 = load i32* @s_threat, align 4
  %tobool291 = icmp ne i32 %157, 0
  br i1 %tobool291, label %if.then292, label %if.end339

if.then292:                                       ; preds = %land.lhs.true290
  %158 = load i32* %pn_restart, align 4
  %inc293 = add nsw i32 %158, 1
  store i32 %inc293, i32* %pn_restart, align 4
  store i32 0, i32* %i, align 4
  br label %for.cond294

for.cond294:                                      ; preds = %for.inc319, %if.then292
  %159 = load i32* %i, align 4
  %160 = load i32* %num_moves, align 4
  %cmp295 = icmp slt i32 %159, %160
  br i1 %cmp295, label %for.body297, label %for.end321

for.body297:                                      ; preds = %for.cond294
  %161 = load i32* %i, align 4
  %idxprom298 = sext i32 %161 to i64
  %arrayidx299 = getelementptr inbounds [512 x %struct.move_s]* %moves, i32 0, i64 %idxprom298
  %from = getelementptr inbounds %struct.move_s* %arrayidx299, i32 0, i32 0
  %162 = load i32* %from, align 4
  %from300 = getelementptr inbounds %struct.move_s* %old_move, i32 0, i32 0
  %163 = load i32* %from300, align 4
  %cmp301 = icmp eq i32 %162, %163
  br i1 %cmp301, label %land.lhs.true303, label %if.end318

land.lhs.true303:                                 ; preds = %for.body297
  %164 = load i32* %i, align 4
  %idxprom304 = sext i32 %164 to i64
  %arrayidx305 = getelementptr inbounds [512 x %struct.move_s]* %moves, i32 0, i64 %idxprom304
  %target = getelementptr inbounds %struct.move_s* %arrayidx305, i32 0, i32 1
  %165 = load i32* %target, align 4
  %target306 = getelementptr inbounds %struct.move_s* %old_move, i32 0, i32 1
  %166 = load i32* %target306, align 4
  %cmp307 = icmp eq i32 %165, %166
  br i1 %cmp307, label %land.lhs.true309, label %if.end318

land.lhs.true309:                                 ; preds = %land.lhs.true303
  %167 = load i32* %i, align 4
  %idxprom310 = sext i32 %167 to i64
  %arrayidx311 = getelementptr inbounds [512 x %struct.move_s]* %moves, i32 0, i64 %idxprom310
  %promoted = getelementptr inbounds %struct.move_s* %arrayidx311, i32 0, i32 3
  %168 = load i32* %promoted, align 4
  %promoted312 = getelementptr inbounds %struct.move_s* %old_move, i32 0, i32 3
  %169 = load i32* %promoted312, align 4
  %cmp313 = icmp eq i32 %168, %169
  br i1 %cmp313, label %if.then315, label %if.end318

if.then315:                                       ; preds = %land.lhs.true309
  %170 = load i32* %i, align 4
  %idxprom316 = sext i32 %170 to i64
  %arrayidx317 = getelementptr inbounds [300 x i32]* @rootlosers, i32 0, i64 %idxprom316
  store i32 1, i32* %arrayidx317, align 4
  br label %for.end321

if.end318:                                        ; preds = %land.lhs.true309, %land.lhs.true303, %for.body297
  br label %for.inc319

for.inc319:                                       ; preds = %if.end318
  %171 = load i32* %i, align 4
  %inc320 = add nsw i32 %171, 1
  store i32 %inc320, i32* %i, align 4
  br label %for.cond294

for.end321:                                       ; preds = %if.then315, %for.cond294
  store i32 0, i32* %j, align 4
  br label %for.cond322

for.cond322:                                      ; preds = %for.inc332, %for.end321
  %172 = load i32* %j, align 4
  %173 = load i32* %num_moves, align 4
  %cmp323 = icmp slt i32 %172, %173
  br i1 %cmp323, label %for.body325, label %for.end334

for.body325:                                      ; preds = %for.cond322
  %174 = load i32* %j, align 4
  %idxprom326 = sext i32 %174 to i64
  %arrayidx327 = getelementptr inbounds [300 x i32]* @rootlosers, i32 0, i64 %idxprom326
  %175 = load i32* %arrayidx327, align 4
  %tobool328 = icmp ne i32 %175, 0
  br i1 %tobool328, label %if.then329, label %if.end331

if.then329:                                       ; preds = %for.body325
  %176 = load i32* %k, align 4
  %inc330 = add nsw i32 %176, 1
  store i32 %inc330, i32* %k, align 4
  br label %if.end331

if.end331:                                        ; preds = %if.then329, %for.body325
  br label %for.inc332

for.inc332:                                       ; preds = %if.end331
  %177 = load i32* %j, align 4
  %inc333 = add nsw i32 %177, 1
  store i32 %inc333, i32* %j, align 4
  br label %for.cond322

for.end334:                                       ; preds = %for.cond322
  %178 = load i32* %k, align 4
  %179 = load i32* @legals, align 4
  %cmp335 = icmp eq i32 %178, %179
  br i1 %cmp335, label %if.then337, label %if.end338

if.then337:                                       ; preds = %for.end334
  store i32 1, i32* @alllosers, align 4
  br label %if.end338

if.end338:                                        ; preds = %if.then337, %for.end334
  br label %restart

if.end339:                                        ; preds = %land.lhs.true290, %if.then286
  br label %if.end340

if.end340:                                        ; preds = %if.end339, %land.lhs.true284, %land.lhs.true282, %land.lhs.true280, %lor.lhs.false277
  br label %if.end341

if.end341:                                        ; preds = %if.end340, %if.end272
  %180 = load i32* @alllosers, align 4
  %tobool342 = icmp ne i32 %180, 0
  br i1 %tobool342, label %if.then343, label %if.end344

if.then343:                                       ; preds = %if.end341
  %181 = bitcast %struct.move_s* %comp_move to i8*
  %182 = bitcast %struct.move_s* %old_move to i8*
  call void @__softboundcets_memcopy_check(i8* %181, i8* %182, i64 24, i8* %bitcast, i8* %bitcast517, i8* %bitcast523, i8* %bitcast525)
  call void @__softboundcets_copy_metadata(i8* %181, i8* %182, i64 24)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %181, i8* %182, i64 24, i32 4, i1 false)
  br label %if.end344

if.end344:                                        ; preds = %if.then343, %if.end341
  %183 = load i32* %pn_restart, align 4
  %cmp345 = icmp ne i32 %183, 0
  br i1 %cmp345, label %land.lhs.true347, label %if.end352

land.lhs.true347:                                 ; preds = %if.end344
  %184 = load i32* @xb_mode, align 4
  %tobool348 = icmp ne i32 %184, 0
  br i1 %tobool348, label %if.then349, label %if.end352

if.then349:                                       ; preds = %land.lhs.true347
  %arraydecay = getelementptr inbounds [8 x i8]* %output, i32 0, i32 0
  call void @__softboundcets_allocate_shadow_stack_space(i32 3)
  call void @__softboundcets_store_base_shadow_stack(i8* %bitcast, i32 1)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bitcast517, i32 1)
  call void @__softboundcets_store_base_shadow_stack(i8* %bitcast591, i32 2)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bitcast593, i32 2)
  call void @comp_to_san(%struct.move_s* byval align 8 %comp_move, i8* %arraydecay)
  call void @__softboundcets_deallocate_shadow_stack_space()
  %185 = load i32* %pn_restart, align 4
  %arraydecay350 = getelementptr inbounds [8 x i8]* %output, i32 0, i32 0
  %call351 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([49 x i8]* @.str5128, i32 0, i32 0), i32 %185, i8* %arraydecay350)
  store i32 0, i32* @result, align 4
  br label %if.end352

if.end352:                                        ; preds = %if.then349, %land.lhs.true347, %if.end344
  %call353 = call i64 @rtime()
  %186 = load i64* @start_time, align 8
  %call354 = call i32 @rdifftime(i64 %call353, i64 %186)
  store i32 %call354, i32* %elapsed, align 4
  %187 = load i32* %elapsed, align 4
  %188 = load i32* @time_left, align 4
  %sub355 = sub nsw i32 %188, %187
  store i32 %sub355, i32* @time_left, align 4
  %189 = load i32* @moves_to_tc, align 4
  %tobool356 = icmp ne i32 %189, 0
  br i1 %tobool356, label %land.lhs.true357, label %if.end363

land.lhs.true357:                                 ; preds = %if.end352
  %190 = load i32* @is_pondering, align 4
  %tobool358 = icmp ne i32 %190, 0
  br i1 %tobool358, label %if.end363, label %if.then359

if.then359:                                       ; preds = %land.lhs.true357
  %191 = load i32* @time_for_move, align 4
  %192 = load i32* %elapsed, align 4
  %sub360 = sub nsw i32 %191, %192
  %193 = load i32* @inc, align 4
  %add361 = add nsw i32 %sub360, %193
  %194 = load i32* @time_cushion, align 4
  %add362 = add nsw i32 %194, %add361
  store i32 %add362, i32* @time_cushion, align 4
  br label %if.end363

if.end363:                                        ; preds = %if.then359, %land.lhs.true357, %if.end352
  %195 = load i32* %temp_score, align 4
  %cmp364 = icmp eq i32 %195, 999998
  br i1 %cmp364, label %land.lhs.true366, label %if.else374

land.lhs.true366:                                 ; preds = %if.end363
  %196 = load i32* @is_pondering, align 4
  %tobool367 = icmp ne i32 %196, 0
  br i1 %tobool367, label %if.else374, label %if.then368

if.then368:                                       ; preds = %land.lhs.true366
  %197 = load i32* @white_to_move, align 4
  %cmp369 = icmp eq i32 %197, 1
  br i1 %cmp369, label %if.then371, label %if.else372

if.then371:                                       ; preds = %if.then368
  store i32 3, i32* @result, align 4
  br label %if.end373

if.else372:                                       ; preds = %if.then368
  store i32 2, i32* @result, align 4
  br label %if.end373

if.end373:                                        ; preds = %if.else372, %if.then371
  br label %if.end386

if.else374:                                       ; preds = %land.lhs.true366, %if.end363
  %198 = load i32* %temp_score, align 4
  %cmp375 = icmp eq i32 %198, -999998
  br i1 %cmp375, label %land.lhs.true377, label %if.end385

land.lhs.true377:                                 ; preds = %if.else374
  %199 = load i32* @is_pondering, align 4
  %tobool378 = icmp ne i32 %199, 0
  br i1 %tobool378, label %if.end385, label %if.then379

if.then379:                                       ; preds = %land.lhs.true377
  %200 = load i32* @white_to_move, align 4
  %cmp380 = icmp eq i32 %200, 1
  br i1 %cmp380, label %if.then382, label %if.else383

if.then382:                                       ; preds = %if.then379
  store i32 2, i32* @result, align 4
  br label %if.end384

if.else383:                                       ; preds = %if.then379
  store i32 3, i32* @result, align 4
  br label %if.end384

if.end384:                                        ; preds = %if.else383, %if.then382
  br label %if.end385

if.end385:                                        ; preds = %if.end384, %land.lhs.true377, %if.else374
  br label %if.end386

if.end386:                                        ; preds = %if.end385, %if.end373
  %201 = load i32* @post, align 4
  %tobool387 = icmp ne i32 %201, 0
  br i1 %tobool387, label %land.lhs.true388, label %if.end425

land.lhs.true388:                                 ; preds = %if.end386
  %202 = load i32* @xb_mode, align 4
  %tobool389 = icmp ne i32 %202, 0
  br i1 %tobool389, label %land.lhs.true390, label %if.end425

land.lhs.true390:                                 ; preds = %land.lhs.true388
  %203 = load i32* @is_pondering, align 4
  %tobool391 = icmp ne i32 %203, 0
  br i1 %tobool391, label %if.end425, label %land.lhs.true392

land.lhs.true392:                                 ; preds = %land.lhs.true390
  %204 = load i32* @result, align 4
  %cmp393 = icmp ne i32 %204, 3
  br i1 %cmp393, label %land.lhs.true395, label %if.end425

land.lhs.true395:                                 ; preds = %land.lhs.true392
  %205 = load i32* @result, align 4
  %cmp396 = icmp ne i32 %205, 2
  br i1 %cmp396, label %land.lhs.true398, label %if.end425

land.lhs.true398:                                 ; preds = %land.lhs.true395
  %206 = load i32* @result, align 4
  %cmp399 = icmp ne i32 %206, 4
  br i1 %cmp399, label %land.lhs.true401, label %if.end425

land.lhs.true401:                                 ; preds = %land.lhs.true398
  %207 = load i32* @result, align 4
  %cmp402 = icmp ne i32 %207, 5
  br i1 %cmp402, label %land.lhs.true404, label %if.end425

land.lhs.true404:                                 ; preds = %land.lhs.true401
  %208 = load i32* @result, align 4
  %cmp405 = icmp ne i32 %208, 1
  br i1 %cmp405, label %land.lhs.true407, label %if.end425

land.lhs.true407:                                 ; preds = %land.lhs.true404
  %209 = load i32* @forcedwin, align 4
  %tobool408 = icmp ne i32 %209, 0
  br i1 %tobool408, label %if.end425, label %if.then409

if.then409:                                       ; preds = %land.lhs.true407
  %210 = load i32* %temp_score, align 4
  %cmp410 = icmp sgt i32 %210, 999600
  br i1 %cmp410, label %if.then412, label %if.end424

if.then412:                                       ; preds = %if.then409
  %211 = load i32* @Variant, align 4
  %cmp413 = icmp ne i32 %211, 1
  br i1 %cmp413, label %if.then415, label %if.else419

if.then415:                                       ; preds = %if.then412
  %212 = load i32* %temp_score, align 4
  %sub416 = sub nsw i32 1000000, %212
  %div417 = sdiv i32 %sub416, 2
  %call418 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([27 x i8]* @.str6129, i32 0, i32 0), i32 %div417)
  br label %if.end423

if.else419:                                       ; preds = %if.then412
  %213 = load i32* %temp_score, align 4
  %sub420 = sub nsw i32 1000000, %213
  %div421 = sdiv i32 %sub420, 2
  %call422 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([52 x i8]* @.str7130, i32 0, i32 0), i32 %div421)
  br label %if.end423

if.end423:                                        ; preds = %if.else419, %if.then415
  br label %if.end424

if.end424:                                        ; preds = %if.end423, %if.then409
  br label %if.end425

if.end425:                                        ; preds = %if.end424, %land.lhs.true407, %land.lhs.true404, %land.lhs.true401, %land.lhs.true398, %land.lhs.true395, %land.lhs.true392, %land.lhs.true390, %land.lhs.true388, %if.end386
  %214 = load i32* @result, align 4
  %cmp426 = icmp ne i32 %214, 2
  br i1 %cmp426, label %land.lhs.true428, label %if.end457

land.lhs.true428:                                 ; preds = %if.end425
  %215 = load i32* @result, align 4
  %cmp429 = icmp ne i32 %215, 3
  br i1 %cmp429, label %land.lhs.true431, label %if.end457

land.lhs.true431:                                 ; preds = %land.lhs.true428
  %216 = load i32* @result, align 4
  %cmp432 = icmp ne i32 %216, 1
  br i1 %cmp432, label %land.lhs.true434, label %if.end457

land.lhs.true434:                                 ; preds = %land.lhs.true431
  %217 = load i32* @result, align 4
  %cmp435 = icmp ne i32 %217, 4
  br i1 %cmp435, label %land.lhs.true437, label %if.end457

land.lhs.true437:                                 ; preds = %land.lhs.true434
  %218 = load i32* @result, align 4
  %cmp438 = icmp ne i32 %218, 5
  br i1 %cmp438, label %land.lhs.true440, label %if.end457

land.lhs.true440:                                 ; preds = %land.lhs.true437
  %219 = load i8* @true_i_depth, align 1
  %conv441 = sext i8 %219 to i32
  %cmp442 = icmp sge i32 %conv441, 3
  br i1 %cmp442, label %land.lhs.true444, label %if.end457

land.lhs.true444:                                 ; preds = %land.lhs.true440
  %220 = load i32* getelementptr inbounds (%struct.move_s* @pn_move, i32 0, i32 1), align 4
  %221 = load i32* getelementptr inbounds (%struct.move_s* @dummy, i32 0, i32 1), align 4
  %cmp445 = icmp eq i32 %220, %221
  br i1 %cmp445, label %land.lhs.true447, label %if.end457

land.lhs.true447:                                 ; preds = %land.lhs.true444
  %222 = load i32* @is_pondering, align 4
  %tobool448 = icmp ne i32 %222, 0
  br i1 %tobool448, label %if.end457, label %land.lhs.true449

land.lhs.true449:                                 ; preds = %land.lhs.true447
  %223 = load i32* @Variant, align 4
  %cmp450 = icmp ne i32 %223, 1
  br i1 %cmp450, label %if.then452, label %if.end457

if.then452:                                       ; preds = %land.lhs.true449
  %224 = load i32* @bestmovenum, align 4
  %cmp453 = icmp eq i32 %224, -1
  br i1 %cmp453, label %if.then455, label %if.end456

if.then455:                                       ; preds = %if.then452
  store i32 0, i32* null, align 4
  br label %if.end456

if.end456:                                        ; preds = %if.then455, %if.then452
  br label %if.end457

if.end457:                                        ; preds = %if.end456, %land.lhs.true449, %land.lhs.true447, %land.lhs.true444, %land.lhs.true440, %land.lhs.true437, %land.lhs.true434, %land.lhs.true431, %land.lhs.true428, %if.end425
  %225 = load i32* @Variant, align 4
  %cmp458 = icmp eq i32 %225, 1
  br i1 %cmp458, label %land.lhs.true460, label %if.else471

land.lhs.true460:                                 ; preds = %if.end457
  %226 = load i32* %temp_score, align 4
  %cmp461 = icmp sgt i32 %226, -999900
  br i1 %cmp461, label %if.then463, label %if.else471

if.then463:                                       ; preds = %land.lhs.true460
  %227 = load i32* @tradefreely, align 4
  %cmp464 = icmp eq i32 %227, 0
  br i1 %cmp464, label %land.lhs.true466, label %if.end470

land.lhs.true466:                                 ; preds = %if.then463
  %228 = load i32* @userealholdings, align 4
  %tobool467 = icmp ne i32 %228, 0
  br i1 %tobool467, label %if.end470, label %if.then468

if.then468:                                       ; preds = %land.lhs.true466
  store i32 1, i32* @tradefreely, align 4
  %call469 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([37 x i8]* @.str8131, i32 0, i32 0))
  br label %if.end470

if.end470:                                        ; preds = %if.then468, %land.lhs.true466, %if.then463
  br label %if.end515

if.else471:                                       ; preds = %land.lhs.true460, %if.end457
  %229 = load i32* %temp_score, align 4
  %cmp472 = icmp slt i32 %229, -999900
  br i1 %cmp472, label %land.lhs.true474, label %if.else497

land.lhs.true474:                                 ; preds = %if.else471
  %230 = load i32* @Variant, align 4
  %cmp475 = icmp eq i32 %230, 1
  br i1 %cmp475, label %land.lhs.true477, label %if.else497

land.lhs.true477:                                 ; preds = %land.lhs.true474
  %231 = load i32* getelementptr inbounds (%struct.move_s* @pn_move, i32 0, i32 1), align 4
  %232 = load i32* getelementptr inbounds (%struct.move_s* @dummy, i32 0, i32 1), align 4
  %cmp478 = icmp eq i32 %231, %232
  br i1 %cmp478, label %if.then480, label %if.else497

if.then480:                                       ; preds = %land.lhs.true477
  %233 = load i32* @userealholdings, align 4
  %tobool481 = icmp ne i32 %233, 0
  br i1 %tobool481, label %if.then482, label %if.else483

if.then482:                                       ; preds = %if.then480
  store i32 1, i32* @must_sit, align 4
  br label %if.end485

if.else483:                                       ; preds = %if.then480
  store i32 1, i32* @userealholdings, align 4
  call void @__softboundcets_allocate_shadow_stack_space(i32 2)
  call void @__softboundcets_store_base_shadow_stack(i8* null, i32 1)
  call void @__softboundcets_store_bound_shadow_stack(i8* inttoptr (i64 281474976710656 to i8*), i32 1)
  call void @ProcessHoldings(i8* getelementptr inbounds ([255 x i8]* @realholdings, i32 0, i32 0))
  call void @__softboundcets_deallocate_shadow_stack_space()
  store i32 0, i32* @tradefreely, align 4
  %call484 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([25 x i8]* @.str9132, i32 0, i32 0))
  br label %restart

if.end485:                                        ; preds = %if.then482
  %234 = load i32* %temp_score, align 4
  %cmp486 = icmp sgt i32 %234, -1000000
  br i1 %cmp486, label %if.then488, label %if.end496

if.then488:                                       ; preds = %if.end485
  %235 = load i32* @partnerdead, align 4
  %tobool489 = icmp ne i32 %235, 0
  br i1 %tobool489, label %if.then490, label %if.else493

if.then490:                                       ; preds = %if.then488
  %call491 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([49 x i8]* @.str10133, i32 0, i32 0))
  %call492 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([16 x i8]* @.str11134, i32 0, i32 0))
  br label %if.end495

if.else493:                                       ; preds = %if.then488
  %call494 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([81 x i8]* @.str12135, i32 0, i32 0))
  br label %if.end495

if.end495:                                        ; preds = %if.else493, %if.then490
  br label %if.end496

if.end496:                                        ; preds = %if.end495, %if.end485
  br label %if.end514

if.else497:                                       ; preds = %land.lhs.true477, %land.lhs.true474, %if.else471
  %236 = load i32* %temp_score, align 4
  %cmp498 = icmp sgt i32 %236, -60000
  br i1 %cmp498, label %land.lhs.true500, label %if.end513

land.lhs.true500:                                 ; preds = %if.else497
  %237 = load i32* %temp_score, align 4
  %cmp501 = icmp slt i32 %237, -40000
  br i1 %cmp501, label %land.lhs.true503, label %if.end513

land.lhs.true503:                                 ; preds = %land.lhs.true500
  %238 = load i32* @Variant, align 4
  %cmp504 = icmp eq i32 %238, 1
  br i1 %cmp504, label %land.lhs.true506, label %if.end513

land.lhs.true506:                                 ; preds = %land.lhs.true503
  %239 = load i32* @partnerdead, align 4
  %tobool507 = icmp ne i32 %239, 0
  br i1 %tobool507, label %if.end513, label %land.lhs.true508

land.lhs.true508:                                 ; preds = %land.lhs.true506
  %240 = load i32* getelementptr inbounds (%struct.move_s* @pn_move, i32 0, i32 1), align 4
  %241 = load i32* getelementptr inbounds (%struct.move_s* @dummy, i32 0, i32 1), align 4
  %cmp509 = icmp eq i32 %240, %241
  br i1 %cmp509, label %if.then511, label %if.end513

if.then511:                                       ; preds = %land.lhs.true508
  store i32 1, i32* @must_sit, align 4
  %call512 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([62 x i8]* @.str13136, i32 0, i32 0))
  br label %if.end513

if.end513:                                        ; preds = %if.then511, %land.lhs.true508, %land.lhs.true506, %land.lhs.true503, %land.lhs.true500, %if.else497
  br label %if.end514

if.end514:                                        ; preds = %if.end513, %if.end496
  br label %if.end515

if.end515:                                        ; preds = %if.end514, %if.end470
  %242 = bitcast %struct.move_s* %agg.result to i8*
  %243 = bitcast %struct.move_s* %comp_move to i8*
  call void @__softboundcets_memcopy_check(i8* %242, i8* %243, i64 24, i8* %0, i8* %1, i8* %bitcast, i8* %bitcast517)
  call void @__softboundcets_copy_metadata(i8* %242, i8* %243, i64 24)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %242, i8* %243, i64 24, i32 4, i1 false)
  br label %return

return:                                           ; preds = %if.end515, %if.then234, %if.then221, %if.then111, %if.then41, %if.then
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @tree(i32 %depth, i32 %indent, %struct._IO_FILE* %output, i8* %disp_b) #0 {
entry:
  %base.alloca83 = alloca i8*
  %bound.alloca84 = alloca i8*
  %base.alloca78 = alloca i8*
  %bound.alloca79 = alloca i8*
  %base.alloca73 = alloca i8*
  %bound.alloca74 = alloca i8*
  %base.alloca68 = alloca i8*
  %bound.alloca69 = alloca i8*
  %base.alloca63 = alloca i8*
  %bound.alloca64 = alloca i8*
  %base.alloca58 = alloca i8*
  %bound.alloca59 = alloca i8*
  %base.alloca = alloca i8*
  %bound.alloca = alloca i8*
  %0 = call i8* @__softboundcets_load_base_shadow_stack(i32 2)
  %1 = call i8* @__softboundcets_load_bound_shadow_stack(i32 2)
  %2 = call i8* @__softboundcets_load_base_shadow_stack(i32 1)
  %3 = call i8* @__softboundcets_load_bound_shadow_stack(i32 1)
  %depth.addr = alloca i32, align 4
  %depth.addr22 = bitcast i32* %depth.addr to i32*
  %bitcast = bitcast i32* %depth.addr to i8*
  %mtmp = getelementptr i32* %depth.addr22, i32 1
  %bitcast23 = bitcast i32* %mtmp to i8*
  %indent.addr = alloca i32, align 4
  %indent.addr24 = bitcast i32* %indent.addr to i32*
  %bitcast25 = bitcast i32* %indent.addr to i8*
  %mtmp26 = getelementptr i32* %indent.addr24, i32 1
  %bitcast27 = bitcast i32* %mtmp26 to i8*
  %output.addr = alloca %struct._IO_FILE*, align 8
  %output.addr28 = bitcast %struct._IO_FILE** %output.addr to %struct._IO_FILE**
  %bitcast29 = bitcast %struct._IO_FILE** %output.addr to i8*
  %mtmp30 = getelementptr %struct._IO_FILE** %output.addr28, i32 1
  %bitcast31 = bitcast %struct._IO_FILE** %mtmp30 to i8*
  %disp_b.addr = alloca i8*, align 8
  %disp_b.addr32 = bitcast i8** %disp_b.addr to i8**
  %bitcast33 = bitcast i8** %disp_b.addr to i8*
  %mtmp34 = getelementptr i8** %disp_b.addr32, i32 1
  %bitcast35 = bitcast i8** %mtmp34 to i8*
  %moves = alloca [512 x %struct.move_s], align 16
  %moves36 = bitcast [512 x %struct.move_s]* %moves to [512 x %struct.move_s]*
  %bitcast37 = bitcast [512 x %struct.move_s]* %moves to i8*
  %mtmp38 = getelementptr [512 x %struct.move_s]* %moves36, i32 1
  %bitcast39 = bitcast [512 x %struct.move_s]* %mtmp38 to i8*
  %num_moves = alloca i32, align 4
  %num_moves40 = bitcast i32* %num_moves to i32*
  %bitcast41 = bitcast i32* %num_moves to i8*
  %mtmp42 = getelementptr i32* %num_moves40, i32 1
  %bitcast43 = bitcast i32* %mtmp42 to i8*
  %i = alloca i32, align 4
  %i44 = bitcast i32* %i to i32*
  %bitcast45 = bitcast i32* %i to i8*
  %mtmp46 = getelementptr i32* %i44, i32 1
  %bitcast47 = bitcast i32* %mtmp46 to i8*
  %j = alloca i32, align 4
  %j48 = bitcast i32* %j to i32*
  %bitcast49 = bitcast i32* %j to i8*
  %mtmp50 = getelementptr i32* %j48, i32 1
  %bitcast51 = bitcast i32* %mtmp50 to i8*
  %ic = alloca i32, align 4
  %ic52 = bitcast i32* %ic to i32*
  %bitcast53 = bitcast i32* %ic to i8*
  %mtmp54 = getelementptr i32* %ic52, i32 1
  %bitcast55 = bitcast i32* %mtmp54 to i8*
  store i32 %depth, i32* %depth.addr, align 4
  store i32 %indent, i32* %indent.addr, align 4
  store %struct._IO_FILE* %output, %struct._IO_FILE** %output.addr, align 8
  %bitcast87 = bitcast %struct._IO_FILE** %output.addr to i8*
  call void @__softboundcets_metadata_store(i8* %bitcast87, i8* %2, i8* %3)
  store i8* %disp_b, i8** %disp_b.addr, align 8
  %bitcast88 = bitcast i8** %disp_b.addr to i8*
  call void @__softboundcets_metadata_store(i8* %bitcast88, i8* %0, i8* %1)
  store i32 0, i32* %num_moves, align 4
  %4 = load i32* %depth.addr, align 4
  %tobool = icmp ne i32 %4, 0
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  br label %for.end21

if.end:                                           ; preds = %entry
  %arrayidx = getelementptr inbounds [512 x %struct.move_s]* %moves, i32 0, i64 0
  call void @__softboundcets_allocate_shadow_stack_space(i32 2)
  call void @__softboundcets_store_base_shadow_stack(i8* %bitcast37, i32 1)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bitcast39, i32 1)
  call void @gen(%struct.move_s* %arrayidx)
  call void @__softboundcets_deallocate_shadow_stack_space()
  %5 = load i32* @numb_moves, align 4
  store i32 %5, i32* %num_moves, align 4
  %call = call i32 @in_check()
  store i32 %call, i32* %ic, align 4
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc19, %if.end
  %6 = load i32* %i, align 4
  %7 = load i32* %num_moves, align 4
  %cmp = icmp slt i32 %6, %7
  br i1 %cmp, label %for.body, label %for.end21

for.body:                                         ; preds = %for.cond
  %arrayidx1 = getelementptr inbounds [512 x %struct.move_s]* %moves, i32 0, i64 0
  %8 = load i32* %i, align 4
  call void @__softboundcets_allocate_shadow_stack_space(i32 2)
  call void @__softboundcets_store_base_shadow_stack(i8* %bitcast37, i32 1)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bitcast39, i32 1)
  call void @make(%struct.move_s* %arrayidx1, i32 %8)
  call void @__softboundcets_deallocate_shadow_stack_space()
  %arrayidx2 = getelementptr inbounds [512 x %struct.move_s]* %moves, i32 0, i64 0
  %9 = load i32* %i, align 4
  %10 = load i32* %ic, align 4
  call void @__softboundcets_allocate_shadow_stack_space(i32 2)
  call void @__softboundcets_store_base_shadow_stack(i8* %bitcast37, i32 1)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bitcast39, i32 1)
  %call3 = call i32 @check_legal(%struct.move_s* %arrayidx2, i32 %9, i32 %10)
  call void @__softboundcets_deallocate_shadow_stack_space()
  %tobool4 = icmp ne i32 %call3, 0
  br i1 %tobool4, label %if.then5, label %if.end17

if.then5:                                         ; preds = %for.body
  store i32 0, i32* %j, align 4
  br label %for.cond6

for.cond6:                                        ; preds = %for.inc, %if.then5
  %11 = load i32* %j, align 4
  %12 = load i32* %indent.addr, align 4
  %cmp7 = icmp slt i32 %11, %12
  br i1 %cmp7, label %for.body8, label %for.end

for.body8:                                        ; preds = %for.cond6
  %13 = load %struct._IO_FILE** %output.addr, align 8
  %bitcast56 = bitcast %struct._IO_FILE** %output.addr to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast56, i8** %base.alloca, i8** %bound.alloca)
  %base.load = load i8** %base.alloca
  %bound.load = load i8** %bound.alloca
  call void @__softboundcets_allocate_shadow_stack_space(i32 2)
  call void @__softboundcets_store_base_shadow_stack(i8* %base.load, i32 1)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bound.load, i32 1)
  %call9 = call i32 @softboundcets_fputc(i32 32, %struct._IO_FILE* %13)
  call void @__softboundcets_deallocate_shadow_stack_space()
  br label %for.inc

for.inc:                                          ; preds = %for.body8
  %14 = load i32* %j, align 4
  %inc = add nsw i32 %14, 1
  store i32 %inc, i32* %j, align 4
  br label %for.cond6

for.end:                                          ; preds = %for.cond6
  %arrayidx10 = getelementptr inbounds [512 x %struct.move_s]* %moves, i32 0, i64 0
  %15 = load i32* %i, align 4
  %16 = load %struct._IO_FILE** %output.addr, align 8
  %bitcast57 = bitcast %struct._IO_FILE** %output.addr to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast57, i8** %base.alloca58, i8** %bound.alloca59)
  %base.load60 = load i8** %base.alloca58
  %bound.load61 = load i8** %bound.alloca59
  call void @__softboundcets_allocate_shadow_stack_space(i32 3)
  call void @__softboundcets_store_base_shadow_stack(i8* %bitcast37, i32 1)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bitcast39, i32 1)
  call void @__softboundcets_store_base_shadow_stack(i8* %base.load60, i32 2)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bound.load61, i32 2)
  call void @print_move(%struct.move_s* %arrayidx10, i32 %15, %struct._IO_FILE* %16)
  call void @__softboundcets_deallocate_shadow_stack_space()
  %17 = load %struct._IO_FILE** %output.addr, align 8
  %bitcast62 = bitcast %struct._IO_FILE** %output.addr to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast62, i8** %base.alloca63, i8** %bound.alloca64)
  %base.load65 = load i8** %base.alloca63
  %bound.load66 = load i8** %bound.alloca64
  %call11 = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %17, i8* getelementptr inbounds ([2 x i8]* @.str14137, i32 0, i32 0))
  %18 = load i8** %disp_b.addr, align 8
  %bitcast67 = bitcast i8** %disp_b.addr to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast67, i8** %base.alloca68, i8** %bound.alloca69)
  %base.load70 = load i8** %base.alloca68
  %bound.load71 = load i8** %bound.alloca69
  %arrayidx12 = getelementptr inbounds i8* %18, i64 0
  %19 = load i8* %arrayidx12, align 1
  %conv = sext i8 %19 to i32
  %cmp13 = icmp eq i32 %conv, 121
  br i1 %cmp13, label %if.then15, label %if.end16

if.then15:                                        ; preds = %for.end
  %20 = load %struct._IO_FILE** %output.addr, align 8
  %bitcast72 = bitcast %struct._IO_FILE** %output.addr to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast72, i8** %base.alloca73, i8** %bound.alloca74)
  %base.load75 = load i8** %base.alloca73
  %bound.load76 = load i8** %bound.alloca74
  call void @__softboundcets_allocate_shadow_stack_space(i32 2)
  call void @__softboundcets_store_base_shadow_stack(i8* %base.load75, i32 1)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bound.load76, i32 1)
  call void @display_board(%struct._IO_FILE* %20, i32 1)
  call void @__softboundcets_deallocate_shadow_stack_space()
  br label %if.end16

if.end16:                                         ; preds = %if.then15, %for.end
  %21 = load i32* %depth.addr, align 4
  %sub = sub nsw i32 %21, 1
  %22 = load i32* %indent.addr, align 4
  %add = add nsw i32 %22, 2
  %23 = load %struct._IO_FILE** %output.addr, align 8
  %bitcast77 = bitcast %struct._IO_FILE** %output.addr to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast77, i8** %base.alloca78, i8** %bound.alloca79)
  %base.load80 = load i8** %base.alloca78
  %bound.load81 = load i8** %bound.alloca79
  %24 = load i8** %disp_b.addr, align 8
  %bitcast82 = bitcast i8** %disp_b.addr to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast82, i8** %base.alloca83, i8** %bound.alloca84)
  %base.load85 = load i8** %base.alloca83
  %bound.load86 = load i8** %bound.alloca84
  call void @__softboundcets_allocate_shadow_stack_space(i32 3)
  call void @__softboundcets_store_base_shadow_stack(i8* %base.load80, i32 1)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bound.load81, i32 1)
  call void @__softboundcets_store_base_shadow_stack(i8* %base.load85, i32 2)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bound.load86, i32 2)
  call void @tree(i32 %sub, i32 %add, %struct._IO_FILE* %23, i8* %24)
  call void @__softboundcets_deallocate_shadow_stack_space()
  br label %if.end17

if.end17:                                         ; preds = %if.end16, %for.body
  %arrayidx18 = getelementptr inbounds [512 x %struct.move_s]* %moves, i32 0, i64 0
  %25 = load i32* %i, align 4
  call void @__softboundcets_allocate_shadow_stack_space(i32 2)
  call void @__softboundcets_store_base_shadow_stack(i8* %bitcast37, i32 1)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bitcast39, i32 1)
  call void @unmake(%struct.move_s* %arrayidx18, i32 %25)
  call void @__softboundcets_deallocate_shadow_stack_space()
  br label %for.inc19

for.inc19:                                        ; preds = %if.end17
  %26 = load i32* %i, align 4
  %inc20 = add nsw i32 %26, 1
  store i32 %inc20, i32* %i, align 4
  br label %for.cond

for.end21:                                        ; preds = %for.cond, %if.then
  ret void
}

declare i32 @softboundcets_fputc(i32, %struct._IO_FILE*)

declare i32 @fprintf(%struct._IO_FILE*, i8*, ...) #2

; Function Attrs: nounwind uwtable
define internal void @setup_attackers(i32 %square) #0 {
entry:
  %square.addr = alloca i32, align 4
  %square.addr183 = bitcast i32* %square.addr to i32*
  %bitcast = bitcast i32* %square.addr to i8*
  %mtmp = getelementptr i32* %square.addr183, i32 1
  %bitcast184 = bitcast i32* %mtmp to i8*
  %a_sq = alloca i32, align 4
  %a_sq185 = bitcast i32* %a_sq to i32*
  %bitcast186 = bitcast i32* %a_sq to i8*
  %mtmp187 = getelementptr i32* %a_sq185, i32 1
  %bitcast188 = bitcast i32* %mtmp187 to i8*
  %b_sq = alloca i32, align 4
  %b_sq189 = bitcast i32* %b_sq to i32*
  %bitcast190 = bitcast i32* %b_sq to i8*
  %mtmp191 = getelementptr i32* %b_sq189, i32 1
  %bitcast192 = bitcast i32* %mtmp191 to i8*
  %i = alloca i32, align 4
  %i193 = bitcast i32* %i to i32*
  %bitcast194 = bitcast i32* %i to i8*
  %mtmp195 = getelementptr i32* %i193, i32 1
  %bitcast196 = bitcast i32* %mtmp195 to i8*
  %numw = alloca i32, align 4
  %numw197 = bitcast i32* %numw to i32*
  %bitcast198 = bitcast i32* %numw to i8*
  %mtmp199 = getelementptr i32* %numw197, i32 1
  %bitcast200 = bitcast i32* %mtmp199 to i8*
  %numb = alloca i32, align 4
  %numb201 = bitcast i32* %numb to i32*
  %bitcast202 = bitcast i32* %numb to i8*
  %mtmp203 = getelementptr i32* %numb201, i32 1
  %bitcast204 = bitcast i32* %mtmp203 to i8*
  store i32 %square, i32* %square.addr, align 4
  %0 = load i32* getelementptr inbounds ([2 x i32]* @see_num_attackers, i32 0, i64 0), align 4
  store i32 %0, i32* %numw, align 4
  %1 = load i32* getelementptr inbounds ([2 x i32]* @see_num_attackers, i32 0, i64 1), align 4
  store i32 %1, i32* %numb, align 4
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %2 = load i32* %i, align 4
  %cmp = icmp slt i32 %2, 4
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %3 = load i32* %square.addr, align 4
  %4 = load i32* %i, align 4
  %idxprom = sext i32 %4 to i64
  %bitcast205 = bitcast [4 x i32]* @setup_attackers.rook_o to i8*
  %bitcast206 = bitcast [4 x i32]* getelementptr inbounds ([4 x i32]* @setup_attackers.rook_o, i32 1) to i8*
  %arrayidx = getelementptr inbounds [4 x i32]* @setup_attackers.rook_o, i32 0, i64 %idxprom
  %5 = load i32* %arrayidx, align 4
  %add = add nsw i32 %3, %5
  store i32 %add, i32* %a_sq, align 4
  %6 = load i32* %a_sq, align 4
  %idxprom1 = sext i32 %6 to i64
  %arrayidx2 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom1
  %7 = load i32* %arrayidx2, align 4
  store i32 %7, i32* %b_sq, align 4
  %8 = load i32* %b_sq, align 4
  %cmp3 = icmp eq i32 %8, 5
  br i1 %cmp3, label %if.then, label %if.else

if.then:                                          ; preds = %for.body
  %9 = load i32* %b_sq, align 4
  %10 = load i32* %numw, align 4
  %idxprom4 = sext i32 %10 to i64
  %bitcast207 = bitcast [2 x [16 x %struct.see_data]]* @see_attackers to i8*
  %bitcast208 = bitcast [2 x [16 x %struct.see_data]]* getelementptr inbounds ([2 x [16 x %struct.see_data]]* @see_attackers, i32 1) to i8*
  %arrayidx5 = getelementptr inbounds [16 x %struct.see_data]* getelementptr inbounds ([2 x [16 x %struct.see_data]]* @see_attackers, i32 0, i64 0), i32 0, i64 %idxprom4
  %piece = getelementptr inbounds %struct.see_data* %arrayidx5, i32 0, i32 0
  store i32 %9, i32* %piece, align 4
  %11 = load i32* %a_sq, align 4
  %12 = load i32* %numw, align 4
  %idxprom6 = sext i32 %12 to i64
  %bitcast209 = bitcast [2 x [16 x %struct.see_data]]* @see_attackers to i8*
  %bitcast210 = bitcast [2 x [16 x %struct.see_data]]* getelementptr inbounds ([2 x [16 x %struct.see_data]]* @see_attackers, i32 1) to i8*
  %arrayidx7 = getelementptr inbounds [16 x %struct.see_data]* getelementptr inbounds ([2 x [16 x %struct.see_data]]* @see_attackers, i32 0, i64 0), i32 0, i64 %idxprom6
  %square8 = getelementptr inbounds %struct.see_data* %arrayidx7, i32 0, i32 1
  store i32 %11, i32* %square8, align 4
  %13 = load i32* %numw, align 4
  %inc = add nsw i32 %13, 1
  store i32 %inc, i32* %numw, align 4
  br label %for.end

if.else:                                          ; preds = %for.body
  %14 = load i32* %b_sq, align 4
  %cmp9 = icmp eq i32 %14, 6
  br i1 %cmp9, label %if.then10, label %if.else18

if.then10:                                        ; preds = %if.else
  %15 = load i32* %b_sq, align 4
  %16 = load i32* %numb, align 4
  %idxprom11 = sext i32 %16 to i64
  %bitcast211 = bitcast [2 x [16 x %struct.see_data]]* @see_attackers to i8*
  %bitcast212 = bitcast [2 x [16 x %struct.see_data]]* getelementptr inbounds ([2 x [16 x %struct.see_data]]* @see_attackers, i32 1) to i8*
  %arrayidx12 = getelementptr inbounds [16 x %struct.see_data]* getelementptr inbounds ([2 x [16 x %struct.see_data]]* @see_attackers, i32 0, i64 1), i32 0, i64 %idxprom11
  %piece13 = getelementptr inbounds %struct.see_data* %arrayidx12, i32 0, i32 0
  store i32 %15, i32* %piece13, align 4
  %17 = load i32* %a_sq, align 4
  %18 = load i32* %numb, align 4
  %idxprom14 = sext i32 %18 to i64
  %bitcast213 = bitcast [2 x [16 x %struct.see_data]]* @see_attackers to i8*
  %bitcast214 = bitcast [2 x [16 x %struct.see_data]]* getelementptr inbounds ([2 x [16 x %struct.see_data]]* @see_attackers, i32 1) to i8*
  %arrayidx15 = getelementptr inbounds [16 x %struct.see_data]* getelementptr inbounds ([2 x [16 x %struct.see_data]]* @see_attackers, i32 0, i64 1), i32 0, i64 %idxprom14
  %square16 = getelementptr inbounds %struct.see_data* %arrayidx15, i32 0, i32 1
  store i32 %17, i32* %square16, align 4
  %19 = load i32* %numb, align 4
  %inc17 = add nsw i32 %19, 1
  store i32 %inc17, i32* %numb, align 4
  br label %for.end

if.else18:                                        ; preds = %if.else
  br label %while.cond

while.cond:                                       ; preds = %if.end46, %if.else18
  %20 = load i32* %b_sq, align 4
  %cmp19 = icmp ne i32 %20, 0
  br i1 %cmp19, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  %21 = load i32* %b_sq, align 4
  %cmp20 = icmp eq i32 %21, 7
  br i1 %cmp20, label %if.then22, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %while.body
  %22 = load i32* %b_sq, align 4
  %cmp21 = icmp eq i32 %22, 9
  br i1 %cmp21, label %if.then22, label %if.else30

if.then22:                                        ; preds = %lor.lhs.false, %while.body
  %23 = load i32* %b_sq, align 4
  %24 = load i32* %numw, align 4
  %idxprom23 = sext i32 %24 to i64
  %bitcast223 = bitcast [2 x [16 x %struct.see_data]]* @see_attackers to i8*
  %bitcast224 = bitcast [2 x [16 x %struct.see_data]]* getelementptr inbounds ([2 x [16 x %struct.see_data]]* @see_attackers, i32 1) to i8*
  %arrayidx24 = getelementptr inbounds [16 x %struct.see_data]* getelementptr inbounds ([2 x [16 x %struct.see_data]]* @see_attackers, i32 0, i64 0), i32 0, i64 %idxprom23
  %piece25 = getelementptr inbounds %struct.see_data* %arrayidx24, i32 0, i32 0
  store i32 %23, i32* %piece25, align 4
  %25 = load i32* %a_sq, align 4
  %26 = load i32* %numw, align 4
  %idxprom26 = sext i32 %26 to i64
  %bitcast225 = bitcast [2 x [16 x %struct.see_data]]* @see_attackers to i8*
  %bitcast226 = bitcast [2 x [16 x %struct.see_data]]* getelementptr inbounds ([2 x [16 x %struct.see_data]]* @see_attackers, i32 1) to i8*
  %arrayidx27 = getelementptr inbounds [16 x %struct.see_data]* getelementptr inbounds ([2 x [16 x %struct.see_data]]* @see_attackers, i32 0, i64 0), i32 0, i64 %idxprom26
  %square28 = getelementptr inbounds %struct.see_data* %arrayidx27, i32 0, i32 1
  store i32 %25, i32* %square28, align 4
  %27 = load i32* %numw, align 4
  %inc29 = add nsw i32 %27, 1
  store i32 %inc29, i32* %numw, align 4
  br label %while.end

if.else30:                                        ; preds = %lor.lhs.false
  %28 = load i32* %b_sq, align 4
  %cmp31 = icmp eq i32 %28, 8
  br i1 %cmp31, label %if.then34, label %lor.lhs.false32

lor.lhs.false32:                                  ; preds = %if.else30
  %29 = load i32* %b_sq, align 4
  %cmp33 = icmp eq i32 %29, 10
  br i1 %cmp33, label %if.then34, label %if.else42

if.then34:                                        ; preds = %lor.lhs.false32, %if.else30
  %30 = load i32* %b_sq, align 4
  %31 = load i32* %numb, align 4
  %idxprom35 = sext i32 %31 to i64
  %bitcast247 = bitcast [2 x [16 x %struct.see_data]]* @see_attackers to i8*
  %bitcast248 = bitcast [2 x [16 x %struct.see_data]]* getelementptr inbounds ([2 x [16 x %struct.see_data]]* @see_attackers, i32 1) to i8*
  %arrayidx36 = getelementptr inbounds [16 x %struct.see_data]* getelementptr inbounds ([2 x [16 x %struct.see_data]]* @see_attackers, i32 0, i64 1), i32 0, i64 %idxprom35
  %piece37 = getelementptr inbounds %struct.see_data* %arrayidx36, i32 0, i32 0
  store i32 %30, i32* %piece37, align 4
  %32 = load i32* %a_sq, align 4
  %33 = load i32* %numb, align 4
  %idxprom38 = sext i32 %33 to i64
  %bitcast249 = bitcast [2 x [16 x %struct.see_data]]* @see_attackers to i8*
  %bitcast250 = bitcast [2 x [16 x %struct.see_data]]* getelementptr inbounds ([2 x [16 x %struct.see_data]]* @see_attackers, i32 1) to i8*
  %arrayidx39 = getelementptr inbounds [16 x %struct.see_data]* getelementptr inbounds ([2 x [16 x %struct.see_data]]* @see_attackers, i32 0, i64 1), i32 0, i64 %idxprom38
  %square40 = getelementptr inbounds %struct.see_data* %arrayidx39, i32 0, i32 1
  store i32 %32, i32* %square40, align 4
  %34 = load i32* %numb, align 4
  %inc41 = add nsw i32 %34, 1
  store i32 %inc41, i32* %numb, align 4
  br label %while.end

if.else42:                                        ; preds = %lor.lhs.false32
  %35 = load i32* %b_sq, align 4
  %cmp43 = icmp ne i32 %35, 13
  br i1 %cmp43, label %if.then44, label %if.end

if.then44:                                        ; preds = %if.else42
  br label %while.end

if.end:                                           ; preds = %if.else42
  br label %if.end45

if.end45:                                         ; preds = %if.end
  br label %if.end46

if.end46:                                         ; preds = %if.end45
  %36 = load i32* %i, align 4
  %idxprom47 = sext i32 %36 to i64
  %bitcast255 = bitcast [4 x i32]* @setup_attackers.rook_o to i8*
  %bitcast256 = bitcast [4 x i32]* getelementptr inbounds ([4 x i32]* @setup_attackers.rook_o, i32 1) to i8*
  %arrayidx48 = getelementptr inbounds [4 x i32]* @setup_attackers.rook_o, i32 0, i64 %idxprom47
  %37 = load i32* %arrayidx48, align 4
  %38 = load i32* %a_sq, align 4
  %add49 = add nsw i32 %38, %37
  store i32 %add49, i32* %a_sq, align 4
  %39 = load i32* %a_sq, align 4
  %idxprom50 = sext i32 %39 to i64
  %arrayidx51 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom50
  %40 = load i32* %arrayidx51, align 4
  store i32 %40, i32* %b_sq, align 4
  br label %while.cond

while.end:                                        ; preds = %if.then44, %if.then34, %if.then22, %while.cond
  br label %if.end52

if.end52:                                         ; preds = %while.end
  br label %if.end53

if.end53:                                         ; preds = %if.end52
  br label %for.inc

for.inc:                                          ; preds = %if.end53
  %41 = load i32* %i, align 4
  %inc54 = add nsw i32 %41, 1
  store i32 %inc54, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %if.then10, %if.then, %for.cond
  store i32 0, i32* %i, align 4
  br label %for.cond55

for.cond55:                                       ; preds = %for.inc148, %for.end
  %42 = load i32* %i, align 4
  %cmp56 = icmp slt i32 %42, 4
  br i1 %cmp56, label %for.body57, label %for.end150

for.body57:                                       ; preds = %for.cond55
  %43 = load i32* %square.addr, align 4
  %44 = load i32* %i, align 4
  %idxprom58 = sext i32 %44 to i64
  %bitcast215 = bitcast [4 x i32]* @setup_attackers.bishop_o to i8*
  %bitcast216 = bitcast [4 x i32]* getelementptr inbounds ([4 x i32]* @setup_attackers.bishop_o, i32 1) to i8*
  %arrayidx59 = getelementptr inbounds [4 x i32]* @setup_attackers.bishop_o, i32 0, i64 %idxprom58
  %45 = load i32* %arrayidx59, align 4
  %add60 = add nsw i32 %43, %45
  store i32 %add60, i32* %a_sq, align 4
  %46 = load i32* %a_sq, align 4
  %idxprom61 = sext i32 %46 to i64
  %arrayidx62 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom61
  %47 = load i32* %arrayidx62, align 4
  store i32 %47, i32* %b_sq, align 4
  %48 = load i32* %b_sq, align 4
  %cmp63 = icmp eq i32 %48, 1
  br i1 %cmp63, label %land.lhs.true, label %if.else72

land.lhs.true:                                    ; preds = %for.body57
  %49 = load i32* %i, align 4
  %rem = srem i32 %49, 2
  %tobool = icmp ne i32 %rem, 0
  br i1 %tobool, label %if.then64, label %if.else72

if.then64:                                        ; preds = %land.lhs.true
  %50 = load i32* %b_sq, align 4
  %51 = load i32* %numw, align 4
  %idxprom65 = sext i32 %51 to i64
  %bitcast217 = bitcast [2 x [16 x %struct.see_data]]* @see_attackers to i8*
  %bitcast218 = bitcast [2 x [16 x %struct.see_data]]* getelementptr inbounds ([2 x [16 x %struct.see_data]]* @see_attackers, i32 1) to i8*
  %arrayidx66 = getelementptr inbounds [16 x %struct.see_data]* getelementptr inbounds ([2 x [16 x %struct.see_data]]* @see_attackers, i32 0, i64 0), i32 0, i64 %idxprom65
  %piece67 = getelementptr inbounds %struct.see_data* %arrayidx66, i32 0, i32 0
  store i32 %50, i32* %piece67, align 4
  %52 = load i32* %a_sq, align 4
  %53 = load i32* %numw, align 4
  %idxprom68 = sext i32 %53 to i64
  %bitcast219 = bitcast [2 x [16 x %struct.see_data]]* @see_attackers to i8*
  %bitcast220 = bitcast [2 x [16 x %struct.see_data]]* getelementptr inbounds ([2 x [16 x %struct.see_data]]* @see_attackers, i32 1) to i8*
  %arrayidx69 = getelementptr inbounds [16 x %struct.see_data]* getelementptr inbounds ([2 x [16 x %struct.see_data]]* @see_attackers, i32 0, i64 0), i32 0, i64 %idxprom68
  %square70 = getelementptr inbounds %struct.see_data* %arrayidx69, i32 0, i32 1
  store i32 %52, i32* %square70, align 4
  %54 = load i32* %numw, align 4
  %inc71 = add nsw i32 %54, 1
  store i32 %inc71, i32* %numw, align 4
  br label %for.end150

if.else72:                                        ; preds = %land.lhs.true, %for.body57
  %55 = load i32* %b_sq, align 4
  %cmp73 = icmp eq i32 %55, 2
  br i1 %cmp73, label %land.lhs.true74, label %if.else85

land.lhs.true74:                                  ; preds = %if.else72
  %56 = load i32* %i, align 4
  %rem75 = srem i32 %56, 2
  %tobool76 = icmp ne i32 %rem75, 0
  br i1 %tobool76, label %if.else85, label %if.then77

if.then77:                                        ; preds = %land.lhs.true74
  %57 = load i32* %b_sq, align 4
  %58 = load i32* %numb, align 4
  %idxprom78 = sext i32 %58 to i64
  %bitcast227 = bitcast [2 x [16 x %struct.see_data]]* @see_attackers to i8*
  %bitcast228 = bitcast [2 x [16 x %struct.see_data]]* getelementptr inbounds ([2 x [16 x %struct.see_data]]* @see_attackers, i32 1) to i8*
  %arrayidx79 = getelementptr inbounds [16 x %struct.see_data]* getelementptr inbounds ([2 x [16 x %struct.see_data]]* @see_attackers, i32 0, i64 1), i32 0, i64 %idxprom78
  %piece80 = getelementptr inbounds %struct.see_data* %arrayidx79, i32 0, i32 0
  store i32 %57, i32* %piece80, align 4
  %59 = load i32* %a_sq, align 4
  %60 = load i32* %numb, align 4
  %idxprom81 = sext i32 %60 to i64
  %bitcast229 = bitcast [2 x [16 x %struct.see_data]]* @see_attackers to i8*
  %bitcast230 = bitcast [2 x [16 x %struct.see_data]]* getelementptr inbounds ([2 x [16 x %struct.see_data]]* @see_attackers, i32 1) to i8*
  %arrayidx82 = getelementptr inbounds [16 x %struct.see_data]* getelementptr inbounds ([2 x [16 x %struct.see_data]]* @see_attackers, i32 0, i64 1), i32 0, i64 %idxprom81
  %square83 = getelementptr inbounds %struct.see_data* %arrayidx82, i32 0, i32 1
  store i32 %59, i32* %square83, align 4
  %61 = load i32* %numb, align 4
  %inc84 = add nsw i32 %61, 1
  store i32 %inc84, i32* %numb, align 4
  br label %for.end150

if.else85:                                        ; preds = %land.lhs.true74, %if.else72
  %62 = load i32* %b_sq, align 4
  %cmp86 = icmp eq i32 %62, 5
  br i1 %cmp86, label %if.then87, label %if.else95

if.then87:                                        ; preds = %if.else85
  %63 = load i32* %b_sq, align 4
  %64 = load i32* %numw, align 4
  %idxprom88 = sext i32 %64 to i64
  %bitcast231 = bitcast [2 x [16 x %struct.see_data]]* @see_attackers to i8*
  %bitcast232 = bitcast [2 x [16 x %struct.see_data]]* getelementptr inbounds ([2 x [16 x %struct.see_data]]* @see_attackers, i32 1) to i8*
  %arrayidx89 = getelementptr inbounds [16 x %struct.see_data]* getelementptr inbounds ([2 x [16 x %struct.see_data]]* @see_attackers, i32 0, i64 0), i32 0, i64 %idxprom88
  %piece90 = getelementptr inbounds %struct.see_data* %arrayidx89, i32 0, i32 0
  store i32 %63, i32* %piece90, align 4
  %65 = load i32* %a_sq, align 4
  %66 = load i32* %numw, align 4
  %idxprom91 = sext i32 %66 to i64
  %bitcast233 = bitcast [2 x [16 x %struct.see_data]]* @see_attackers to i8*
  %bitcast234 = bitcast [2 x [16 x %struct.see_data]]* getelementptr inbounds ([2 x [16 x %struct.see_data]]* @see_attackers, i32 1) to i8*
  %arrayidx92 = getelementptr inbounds [16 x %struct.see_data]* getelementptr inbounds ([2 x [16 x %struct.see_data]]* @see_attackers, i32 0, i64 0), i32 0, i64 %idxprom91
  %square93 = getelementptr inbounds %struct.see_data* %arrayidx92, i32 0, i32 1
  store i32 %65, i32* %square93, align 4
  %67 = load i32* %numw, align 4
  %inc94 = add nsw i32 %67, 1
  store i32 %inc94, i32* %numw, align 4
  br label %for.end150

if.else95:                                        ; preds = %if.else85
  %68 = load i32* %b_sq, align 4
  %cmp96 = icmp eq i32 %68, 6
  br i1 %cmp96, label %if.then97, label %if.else105

if.then97:                                        ; preds = %if.else95
  %69 = load i32* %b_sq, align 4
  %70 = load i32* %numb, align 4
  %idxprom98 = sext i32 %70 to i64
  %bitcast239 = bitcast [2 x [16 x %struct.see_data]]* @see_attackers to i8*
  %bitcast240 = bitcast [2 x [16 x %struct.see_data]]* getelementptr inbounds ([2 x [16 x %struct.see_data]]* @see_attackers, i32 1) to i8*
  %arrayidx99 = getelementptr inbounds [16 x %struct.see_data]* getelementptr inbounds ([2 x [16 x %struct.see_data]]* @see_attackers, i32 0, i64 1), i32 0, i64 %idxprom98
  %piece100 = getelementptr inbounds %struct.see_data* %arrayidx99, i32 0, i32 0
  store i32 %69, i32* %piece100, align 4
  %71 = load i32* %a_sq, align 4
  %72 = load i32* %numb, align 4
  %idxprom101 = sext i32 %72 to i64
  %bitcast241 = bitcast [2 x [16 x %struct.see_data]]* @see_attackers to i8*
  %bitcast242 = bitcast [2 x [16 x %struct.see_data]]* getelementptr inbounds ([2 x [16 x %struct.see_data]]* @see_attackers, i32 1) to i8*
  %arrayidx102 = getelementptr inbounds [16 x %struct.see_data]* getelementptr inbounds ([2 x [16 x %struct.see_data]]* @see_attackers, i32 0, i64 1), i32 0, i64 %idxprom101
  %square103 = getelementptr inbounds %struct.see_data* %arrayidx102, i32 0, i32 1
  store i32 %71, i32* %square103, align 4
  %73 = load i32* %numb, align 4
  %inc104 = add nsw i32 %73, 1
  store i32 %inc104, i32* %numb, align 4
  br label %for.end150

if.else105:                                       ; preds = %if.else95
  br label %while.cond106

while.cond106:                                    ; preds = %if.end137, %if.else105
  %74 = load i32* %b_sq, align 4
  %cmp107 = icmp ne i32 %74, 0
  br i1 %cmp107, label %while.body108, label %while.end143

while.body108:                                    ; preds = %while.cond106
  %75 = load i32* %b_sq, align 4
  %cmp109 = icmp eq i32 %75, 11
  br i1 %cmp109, label %if.then112, label %lor.lhs.false110

lor.lhs.false110:                                 ; preds = %while.body108
  %76 = load i32* %b_sq, align 4
  %cmp111 = icmp eq i32 %76, 9
  br i1 %cmp111, label %if.then112, label %if.else120

if.then112:                                       ; preds = %lor.lhs.false110, %while.body108
  %77 = load i32* %b_sq, align 4
  %78 = load i32* %numw, align 4
  %idxprom113 = sext i32 %78 to i64
  %bitcast251 = bitcast [2 x [16 x %struct.see_data]]* @see_attackers to i8*
  %bitcast252 = bitcast [2 x [16 x %struct.see_data]]* getelementptr inbounds ([2 x [16 x %struct.see_data]]* @see_attackers, i32 1) to i8*
  %arrayidx114 = getelementptr inbounds [16 x %struct.see_data]* getelementptr inbounds ([2 x [16 x %struct.see_data]]* @see_attackers, i32 0, i64 0), i32 0, i64 %idxprom113
  %piece115 = getelementptr inbounds %struct.see_data* %arrayidx114, i32 0, i32 0
  store i32 %77, i32* %piece115, align 4
  %79 = load i32* %a_sq, align 4
  %80 = load i32* %numw, align 4
  %idxprom116 = sext i32 %80 to i64
  %bitcast253 = bitcast [2 x [16 x %struct.see_data]]* @see_attackers to i8*
  %bitcast254 = bitcast [2 x [16 x %struct.see_data]]* getelementptr inbounds ([2 x [16 x %struct.see_data]]* @see_attackers, i32 1) to i8*
  %arrayidx117 = getelementptr inbounds [16 x %struct.see_data]* getelementptr inbounds ([2 x [16 x %struct.see_data]]* @see_attackers, i32 0, i64 0), i32 0, i64 %idxprom116
  %square118 = getelementptr inbounds %struct.see_data* %arrayidx117, i32 0, i32 1
  store i32 %79, i32* %square118, align 4
  %81 = load i32* %numw, align 4
  %inc119 = add nsw i32 %81, 1
  store i32 %inc119, i32* %numw, align 4
  br label %while.end143

if.else120:                                       ; preds = %lor.lhs.false110
  %82 = load i32* %b_sq, align 4
  %cmp121 = icmp eq i32 %82, 12
  br i1 %cmp121, label %if.then124, label %lor.lhs.false122

lor.lhs.false122:                                 ; preds = %if.else120
  %83 = load i32* %b_sq, align 4
  %cmp123 = icmp eq i32 %83, 10
  br i1 %cmp123, label %if.then124, label %if.else132

if.then124:                                       ; preds = %lor.lhs.false122, %if.else120
  %84 = load i32* %b_sq, align 4
  %85 = load i32* %numb, align 4
  %idxprom125 = sext i32 %85 to i64
  %bitcast257 = bitcast [2 x [16 x %struct.see_data]]* @see_attackers to i8*
  %bitcast258 = bitcast [2 x [16 x %struct.see_data]]* getelementptr inbounds ([2 x [16 x %struct.see_data]]* @see_attackers, i32 1) to i8*
  %arrayidx126 = getelementptr inbounds [16 x %struct.see_data]* getelementptr inbounds ([2 x [16 x %struct.see_data]]* @see_attackers, i32 0, i64 1), i32 0, i64 %idxprom125
  %piece127 = getelementptr inbounds %struct.see_data* %arrayidx126, i32 0, i32 0
  store i32 %84, i32* %piece127, align 4
  %86 = load i32* %a_sq, align 4
  %87 = load i32* %numb, align 4
  %idxprom128 = sext i32 %87 to i64
  %bitcast259 = bitcast [2 x [16 x %struct.see_data]]* @see_attackers to i8*
  %bitcast260 = bitcast [2 x [16 x %struct.see_data]]* getelementptr inbounds ([2 x [16 x %struct.see_data]]* @see_attackers, i32 1) to i8*
  %arrayidx129 = getelementptr inbounds [16 x %struct.see_data]* getelementptr inbounds ([2 x [16 x %struct.see_data]]* @see_attackers, i32 0, i64 1), i32 0, i64 %idxprom128
  %square130 = getelementptr inbounds %struct.see_data* %arrayidx129, i32 0, i32 1
  store i32 %86, i32* %square130, align 4
  %88 = load i32* %numb, align 4
  %inc131 = add nsw i32 %88, 1
  store i32 %inc131, i32* %numb, align 4
  br label %while.end143

if.else132:                                       ; preds = %lor.lhs.false122
  %89 = load i32* %b_sq, align 4
  %cmp133 = icmp ne i32 %89, 13
  br i1 %cmp133, label %if.then134, label %if.end135

if.then134:                                       ; preds = %if.else132
  br label %while.end143

if.end135:                                        ; preds = %if.else132
  br label %if.end136

if.end136:                                        ; preds = %if.end135
  br label %if.end137

if.end137:                                        ; preds = %if.end136
  %90 = load i32* %i, align 4
  %idxprom138 = sext i32 %90 to i64
  %bitcast261 = bitcast [4 x i32]* @setup_attackers.bishop_o to i8*
  %bitcast262 = bitcast [4 x i32]* getelementptr inbounds ([4 x i32]* @setup_attackers.bishop_o, i32 1) to i8*
  %arrayidx139 = getelementptr inbounds [4 x i32]* @setup_attackers.bishop_o, i32 0, i64 %idxprom138
  %91 = load i32* %arrayidx139, align 4
  %92 = load i32* %a_sq, align 4
  %add140 = add nsw i32 %92, %91
  store i32 %add140, i32* %a_sq, align 4
  %93 = load i32* %a_sq, align 4
  %idxprom141 = sext i32 %93 to i64
  %arrayidx142 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom141
  %94 = load i32* %arrayidx142, align 4
  store i32 %94, i32* %b_sq, align 4
  br label %while.cond106

while.end143:                                     ; preds = %if.then134, %if.then124, %if.then112, %while.cond106
  br label %if.end144

if.end144:                                        ; preds = %while.end143
  br label %if.end145

if.end145:                                        ; preds = %if.end144
  br label %if.end146

if.end146:                                        ; preds = %if.end145
  br label %if.end147

if.end147:                                        ; preds = %if.end146
  br label %for.inc148

for.inc148:                                       ; preds = %if.end147
  %95 = load i32* %i, align 4
  %inc149 = add nsw i32 %95, 1
  store i32 %inc149, i32* %i, align 4
  br label %for.cond55

for.end150:                                       ; preds = %if.then97, %if.then87, %if.then77, %if.then64, %for.cond55
  store i32 0, i32* %i, align 4
  br label %for.cond151

for.cond151:                                      ; preds = %for.inc180, %for.end150
  %96 = load i32* %i, align 4
  %cmp152 = icmp slt i32 %96, 8
  br i1 %cmp152, label %for.body153, label %for.end182

for.body153:                                      ; preds = %for.cond151
  %97 = load i32* %square.addr, align 4
  %98 = load i32* %i, align 4
  %idxprom154 = sext i32 %98 to i64
  %bitcast221 = bitcast [8 x i32]* @setup_attackers.knight_o to i8*
  %bitcast222 = bitcast [8 x i32]* getelementptr inbounds ([8 x i32]* @setup_attackers.knight_o, i32 1) to i8*
  %arrayidx155 = getelementptr inbounds [8 x i32]* @setup_attackers.knight_o, i32 0, i64 %idxprom154
  %99 = load i32* %arrayidx155, align 4
  %add156 = add nsw i32 %97, %99
  store i32 %add156, i32* %a_sq, align 4
  %100 = load i32* %a_sq, align 4
  %idxprom157 = sext i32 %100 to i64
  %arrayidx158 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom157
  %101 = load i32* %arrayidx158, align 4
  store i32 %101, i32* %b_sq, align 4
  %102 = load i32* %b_sq, align 4
  %cmp159 = icmp eq i32 %102, 3
  br i1 %cmp159, label %if.then160, label %if.else168

if.then160:                                       ; preds = %for.body153
  %103 = load i32* %b_sq, align 4
  %104 = load i32* %numw, align 4
  %idxprom161 = sext i32 %104 to i64
  %bitcast235 = bitcast [2 x [16 x %struct.see_data]]* @see_attackers to i8*
  %bitcast236 = bitcast [2 x [16 x %struct.see_data]]* getelementptr inbounds ([2 x [16 x %struct.see_data]]* @see_attackers, i32 1) to i8*
  %arrayidx162 = getelementptr inbounds [16 x %struct.see_data]* getelementptr inbounds ([2 x [16 x %struct.see_data]]* @see_attackers, i32 0, i64 0), i32 0, i64 %idxprom161
  %piece163 = getelementptr inbounds %struct.see_data* %arrayidx162, i32 0, i32 0
  store i32 %103, i32* %piece163, align 4
  %105 = load i32* %a_sq, align 4
  %106 = load i32* %numw, align 4
  %idxprom164 = sext i32 %106 to i64
  %bitcast237 = bitcast [2 x [16 x %struct.see_data]]* @see_attackers to i8*
  %bitcast238 = bitcast [2 x [16 x %struct.see_data]]* getelementptr inbounds ([2 x [16 x %struct.see_data]]* @see_attackers, i32 1) to i8*
  %arrayidx165 = getelementptr inbounds [16 x %struct.see_data]* getelementptr inbounds ([2 x [16 x %struct.see_data]]* @see_attackers, i32 0, i64 0), i32 0, i64 %idxprom164
  %square166 = getelementptr inbounds %struct.see_data* %arrayidx165, i32 0, i32 1
  store i32 %105, i32* %square166, align 4
  %107 = load i32* %numw, align 4
  %inc167 = add nsw i32 %107, 1
  store i32 %inc167, i32* %numw, align 4
  br label %if.end179

if.else168:                                       ; preds = %for.body153
  %108 = load i32* %b_sq, align 4
  %cmp169 = icmp eq i32 %108, 4
  br i1 %cmp169, label %if.then170, label %if.end178

if.then170:                                       ; preds = %if.else168
  %109 = load i32* %b_sq, align 4
  %110 = load i32* %numb, align 4
  %idxprom171 = sext i32 %110 to i64
  %bitcast243 = bitcast [2 x [16 x %struct.see_data]]* @see_attackers to i8*
  %bitcast244 = bitcast [2 x [16 x %struct.see_data]]* getelementptr inbounds ([2 x [16 x %struct.see_data]]* @see_attackers, i32 1) to i8*
  %arrayidx172 = getelementptr inbounds [16 x %struct.see_data]* getelementptr inbounds ([2 x [16 x %struct.see_data]]* @see_attackers, i32 0, i64 1), i32 0, i64 %idxprom171
  %piece173 = getelementptr inbounds %struct.see_data* %arrayidx172, i32 0, i32 0
  store i32 %109, i32* %piece173, align 4
  %111 = load i32* %a_sq, align 4
  %112 = load i32* %numb, align 4
  %idxprom174 = sext i32 %112 to i64
  %bitcast245 = bitcast [2 x [16 x %struct.see_data]]* @see_attackers to i8*
  %bitcast246 = bitcast [2 x [16 x %struct.see_data]]* getelementptr inbounds ([2 x [16 x %struct.see_data]]* @see_attackers, i32 1) to i8*
  %arrayidx175 = getelementptr inbounds [16 x %struct.see_data]* getelementptr inbounds ([2 x [16 x %struct.see_data]]* @see_attackers, i32 0, i64 1), i32 0, i64 %idxprom174
  %square176 = getelementptr inbounds %struct.see_data* %arrayidx175, i32 0, i32 1
  store i32 %111, i32* %square176, align 4
  %113 = load i32* %numb, align 4
  %inc177 = add nsw i32 %113, 1
  store i32 %inc177, i32* %numb, align 4
  br label %if.end178

if.end178:                                        ; preds = %if.then170, %if.else168
  br label %if.end179

if.end179:                                        ; preds = %if.end178, %if.then160
  br label %for.inc180

for.inc180:                                       ; preds = %if.end179
  %114 = load i32* %i, align 4
  %inc181 = add nsw i32 %114, 1
  store i32 %inc181, i32* %i, align 4
  br label %for.cond151

for.end182:                                       ; preds = %for.cond151
  %115 = load i32* %numw, align 4
  store i32 %115, i32* getelementptr inbounds ([2 x i32]* @see_num_attackers, i32 0, i64 0), align 4
  %116 = load i32* %numb, align 4
  store i32 %116, i32* getelementptr inbounds ([2 x i32]* @see_num_attackers, i32 0, i64 1), align 4
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @findlowest(i32 %color, i32 %next) #0 {
entry:
  %color.addr = alloca i32, align 4
  %color.addr40 = bitcast i32* %color.addr to i32*
  %bitcast = bitcast i32* %color.addr to i8*
  %mtmp = getelementptr i32* %color.addr40, i32 1
  %bitcast41 = bitcast i32* %mtmp to i8*
  %next.addr = alloca i32, align 4
  %next.addr42 = bitcast i32* %next.addr to i32*
  %bitcast43 = bitcast i32* %next.addr to i8*
  %mtmp44 = getelementptr i32* %next.addr42, i32 1
  %bitcast45 = bitcast i32* %mtmp44 to i8*
  %lowestp = alloca i32, align 4
  %lowestp46 = bitcast i32* %lowestp to i32*
  %bitcast47 = bitcast i32* %lowestp to i8*
  %mtmp48 = getelementptr i32* %lowestp46, i32 1
  %bitcast49 = bitcast i32* %mtmp48 to i8*
  %lowestv = alloca i32, align 4
  %lowestv50 = bitcast i32* %lowestv to i32*
  %bitcast51 = bitcast i32* %lowestv to i8*
  %mtmp52 = getelementptr i32* %lowestv50, i32 1
  %bitcast53 = bitcast i32* %mtmp52 to i8*
  %swap = alloca %struct.see_data, align 4
  %swap54 = bitcast %struct.see_data* %swap to %struct.see_data*
  %bitcast55 = bitcast %struct.see_data* %swap to i8*
  %mtmp56 = getelementptr %struct.see_data* %swap54, i32 1
  %bitcast57 = bitcast %struct.see_data* %mtmp56 to i8*
  %i = alloca i32, align 4
  %i58 = bitcast i32* %i to i32*
  %bitcast59 = bitcast i32* %i to i8*
  %mtmp60 = getelementptr i32* %i58, i32 1
  %bitcast61 = bitcast i32* %mtmp60 to i8*
  store i32 %color, i32* %color.addr, align 4
  store i32 %next, i32* %next.addr, align 4
  %0 = load i32* %next.addr, align 4
  store i32 %0, i32* %lowestp, align 4
  %1 = load i32* %next.addr, align 4
  %idxprom = sext i32 %1 to i64
  %2 = load i32* %color.addr, align 4
  %idxprom1 = sext i32 %2 to i64
  %bitcast62 = bitcast [2 x [16 x %struct.see_data]]* @see_attackers to i8*
  %bitcast63 = bitcast [2 x [16 x %struct.see_data]]* getelementptr inbounds ([2 x [16 x %struct.see_data]]* @see_attackers, i32 1) to i8*
  %arrayidx = getelementptr inbounds [2 x [16 x %struct.see_data]]* @see_attackers, i32 0, i64 %idxprom1
  %arrayidx2 = getelementptr inbounds [16 x %struct.see_data]* %arrayidx, i32 0, i64 %idxprom
  %piece = getelementptr inbounds %struct.see_data* %arrayidx2, i32 0, i32 0
  %3 = load i32* %piece, align 4
  %idxprom3 = sext i32 %3 to i64
  %arrayidx4 = getelementptr inbounds [14 x i32]* @material, i32 0, i64 %idxprom3
  %4 = load i32* %arrayidx4, align 4
  %call = call i32 @softboundcets_abs(i32 %4) #5
  store i32 %call, i32* %lowestv, align 4
  %5 = load i32* %next.addr, align 4
  store i32 %5, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %6 = load i32* %i, align 4
  %7 = load i32* %color.addr, align 4
  %idxprom5 = sext i32 %7 to i64
  %bitcast64 = bitcast [2 x i32]* @see_num_attackers to i8*
  %bitcast65 = bitcast [2 x i32]* getelementptr inbounds ([2 x i32]* @see_num_attackers, i32 1) to i8*
  %arrayidx6 = getelementptr inbounds [2 x i32]* @see_num_attackers, i32 0, i64 %idxprom5
  %8 = load i32* %arrayidx6, align 4
  %cmp = icmp slt i32 %6, %8
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %9 = load i32* %i, align 4
  %idxprom7 = sext i32 %9 to i64
  %10 = load i32* %color.addr, align 4
  %idxprom8 = sext i32 %10 to i64
  %bitcast66 = bitcast [2 x [16 x %struct.see_data]]* @see_attackers to i8*
  %bitcast67 = bitcast [2 x [16 x %struct.see_data]]* getelementptr inbounds ([2 x [16 x %struct.see_data]]* @see_attackers, i32 1) to i8*
  %arrayidx9 = getelementptr inbounds [2 x [16 x %struct.see_data]]* @see_attackers, i32 0, i64 %idxprom8
  %arrayidx10 = getelementptr inbounds [16 x %struct.see_data]* %arrayidx9, i32 0, i64 %idxprom7
  %piece11 = getelementptr inbounds %struct.see_data* %arrayidx10, i32 0, i32 0
  %11 = load i32* %piece11, align 4
  %idxprom12 = sext i32 %11 to i64
  %arrayidx13 = getelementptr inbounds [14 x i32]* @material, i32 0, i64 %idxprom12
  %12 = load i32* %arrayidx13, align 4
  %call14 = call i32 @softboundcets_abs(i32 %12) #5
  %13 = load i32* %lowestv, align 4
  %cmp15 = icmp slt i32 %call14, %13
  br i1 %cmp15, label %if.then, label %if.end

if.then:                                          ; preds = %for.body
  %14 = load i32* %i, align 4
  store i32 %14, i32* %lowestp, align 4
  %15 = load i32* %i, align 4
  %idxprom16 = sext i32 %15 to i64
  %16 = load i32* %color.addr, align 4
  %idxprom17 = sext i32 %16 to i64
  %bitcast76 = bitcast [2 x [16 x %struct.see_data]]* @see_attackers to i8*
  %bitcast77 = bitcast [2 x [16 x %struct.see_data]]* getelementptr inbounds ([2 x [16 x %struct.see_data]]* @see_attackers, i32 1) to i8*
  %arrayidx18 = getelementptr inbounds [2 x [16 x %struct.see_data]]* @see_attackers, i32 0, i64 %idxprom17
  %arrayidx19 = getelementptr inbounds [16 x %struct.see_data]* %arrayidx18, i32 0, i64 %idxprom16
  %piece20 = getelementptr inbounds %struct.see_data* %arrayidx19, i32 0, i32 0
  %17 = load i32* %piece20, align 4
  %idxprom21 = sext i32 %17 to i64
  %arrayidx22 = getelementptr inbounds [14 x i32]* @material, i32 0, i64 %idxprom21
  %18 = load i32* %arrayidx22, align 4
  %call23 = call i32 @softboundcets_abs(i32 %18) #5
  store i32 %call23, i32* %lowestv, align 4
  br label %if.end

if.end:                                           ; preds = %if.then, %for.body
  br label %for.inc

for.inc:                                          ; preds = %if.end
  %19 = load i32* %i, align 4
  %inc = add nsw i32 %19, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %20 = load i32* %next.addr, align 4
  %idxprom24 = sext i32 %20 to i64
  %21 = load i32* %color.addr, align 4
  %idxprom25 = sext i32 %21 to i64
  %bitcast68 = bitcast [2 x [16 x %struct.see_data]]* @see_attackers to i8*
  %bitcast69 = bitcast [2 x [16 x %struct.see_data]]* getelementptr inbounds ([2 x [16 x %struct.see_data]]* @see_attackers, i32 1) to i8*
  %arrayidx26 = getelementptr inbounds [2 x [16 x %struct.see_data]]* @see_attackers, i32 0, i64 %idxprom25
  %arrayidx27 = getelementptr inbounds [16 x %struct.see_data]* %arrayidx26, i32 0, i64 %idxprom24
  %22 = bitcast %struct.see_data* %swap to i8*
  %23 = bitcast %struct.see_data* %arrayidx27 to i8*
  call void @__softboundcets_memcopy_check(i8* %22, i8* %23, i64 8, i8* %bitcast55, i8* %bitcast57, i8* %bitcast68, i8* %bitcast69)
  call void @__softboundcets_copy_metadata(i8* %22, i8* %23, i64 8)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %22, i8* %23, i64 8, i32 4, i1 false)
  %24 = load i32* %next.addr, align 4
  %idxprom28 = sext i32 %24 to i64
  %25 = load i32* %color.addr, align 4
  %idxprom29 = sext i32 %25 to i64
  %bitcast70 = bitcast [2 x [16 x %struct.see_data]]* @see_attackers to i8*
  %bitcast71 = bitcast [2 x [16 x %struct.see_data]]* getelementptr inbounds ([2 x [16 x %struct.see_data]]* @see_attackers, i32 1) to i8*
  %arrayidx30 = getelementptr inbounds [2 x [16 x %struct.see_data]]* @see_attackers, i32 0, i64 %idxprom29
  %arrayidx31 = getelementptr inbounds [16 x %struct.see_data]* %arrayidx30, i32 0, i64 %idxprom28
  %26 = load i32* %lowestp, align 4
  %idxprom32 = sext i32 %26 to i64
  %27 = load i32* %color.addr, align 4
  %idxprom33 = sext i32 %27 to i64
  %bitcast72 = bitcast [2 x [16 x %struct.see_data]]* @see_attackers to i8*
  %bitcast73 = bitcast [2 x [16 x %struct.see_data]]* getelementptr inbounds ([2 x [16 x %struct.see_data]]* @see_attackers, i32 1) to i8*
  %arrayidx34 = getelementptr inbounds [2 x [16 x %struct.see_data]]* @see_attackers, i32 0, i64 %idxprom33
  %arrayidx35 = getelementptr inbounds [16 x %struct.see_data]* %arrayidx34, i32 0, i64 %idxprom32
  %28 = bitcast %struct.see_data* %arrayidx31 to i8*
  %29 = bitcast %struct.see_data* %arrayidx35 to i8*
  call void @__softboundcets_memcopy_check(i8* %28, i8* %29, i64 8, i8* %bitcast70, i8* %bitcast71, i8* %bitcast72, i8* %bitcast73)
  call void @__softboundcets_copy_metadata(i8* %28, i8* %29, i64 8)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %28, i8* %29, i64 8, i32 4, i1 false)
  %30 = load i32* %lowestp, align 4
  %idxprom36 = sext i32 %30 to i64
  %31 = load i32* %color.addr, align 4
  %idxprom37 = sext i32 %31 to i64
  %bitcast74 = bitcast [2 x [16 x %struct.see_data]]* @see_attackers to i8*
  %bitcast75 = bitcast [2 x [16 x %struct.see_data]]* getelementptr inbounds ([2 x [16 x %struct.see_data]]* @see_attackers, i32 1) to i8*
  %arrayidx38 = getelementptr inbounds [2 x [16 x %struct.see_data]]* @see_attackers, i32 0, i64 %idxprom37
  %arrayidx39 = getelementptr inbounds [16 x %struct.see_data]* %arrayidx38, i32 0, i64 %idxprom36
  %32 = bitcast %struct.see_data* %arrayidx39 to i8*
  %33 = bitcast %struct.see_data* %swap to i8*
  call void @__softboundcets_memcopy_check(i8* %32, i8* %33, i64 8, i8* %bitcast74, i8* %bitcast75, i8* %bitcast55, i8* %bitcast57)
  call void @__softboundcets_copy_metadata(i8* %32, i8* %33, i64 8)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %32, i8* %33, i64 8, i32 4, i1 false)
  ret void
}

; Function Attrs: nounwind uwtable
define internal i32 @see(i32 %color, i32 %square, i32 %from) #0 {
entry:
  %retval = alloca i32, align 4
  %retval116 = bitcast i32* %retval to i32*
  %bitcast = bitcast i32* %retval to i8*
  %mtmp = getelementptr i32* %retval116, i32 1
  %bitcast117 = bitcast i32* %mtmp to i8*
  %color.addr = alloca i32, align 4
  %color.addr118 = bitcast i32* %color.addr to i32*
  %bitcast119 = bitcast i32* %color.addr to i8*
  %mtmp120 = getelementptr i32* %color.addr118, i32 1
  %bitcast121 = bitcast i32* %mtmp120 to i8*
  %square.addr = alloca i32, align 4
  %square.addr122 = bitcast i32* %square.addr to i32*
  %bitcast123 = bitcast i32* %square.addr to i8*
  %mtmp124 = getelementptr i32* %square.addr122, i32 1
  %bitcast125 = bitcast i32* %mtmp124 to i8*
  %from.addr = alloca i32, align 4
  %from.addr126 = bitcast i32* %from.addr to i32*
  %bitcast127 = bitcast i32* %from.addr to i8*
  %mtmp128 = getelementptr i32* %from.addr126, i32 1
  %bitcast129 = bitcast i32* %mtmp128 to i8*
  %sside = alloca i32, align 4
  %sside130 = bitcast i32* %sside to i32*
  %bitcast131 = bitcast i32* %sside to i8*
  %mtmp132 = getelementptr i32* %sside130, i32 1
  %bitcast133 = bitcast i32* %mtmp132 to i8*
  %caps = alloca [2 x i32], align 4
  %caps134 = bitcast [2 x i32]* %caps to [2 x i32]*
  %bitcast135 = bitcast [2 x i32]* %caps to i8*
  %mtmp136 = getelementptr [2 x i32]* %caps134, i32 1
  %bitcast137 = bitcast [2 x i32]* %mtmp136 to i8*
  %value = alloca i32, align 4
  %value138 = bitcast i32* %value to i32*
  %bitcast139 = bitcast i32* %value to i8*
  %mtmp140 = getelementptr i32* %value138, i32 1
  %bitcast141 = bitcast i32* %mtmp140 to i8*
  %origpiece = alloca i32, align 4
  %origpiece142 = bitcast i32* %origpiece to i32*
  %bitcast143 = bitcast i32* %origpiece to i8*
  %mtmp144 = getelementptr i32* %origpiece142, i32 1
  %bitcast145 = bitcast i32* %mtmp144 to i8*
  %ourbestvalue = alloca i32, align 4
  %ourbestvalue146 = bitcast i32* %ourbestvalue to i32*
  %bitcast147 = bitcast i32* %ourbestvalue to i8*
  %mtmp148 = getelementptr i32* %ourbestvalue146, i32 1
  %bitcast149 = bitcast i32* %mtmp148 to i8*
  %hisbestvalue = alloca i32, align 4
  %hisbestvalue150 = bitcast i32* %hisbestvalue to i32*
  %bitcast151 = bitcast i32* %hisbestvalue to i8*
  %mtmp152 = getelementptr i32* %hisbestvalue150, i32 1
  %bitcast153 = bitcast i32* %mtmp152 to i8*
  store i32 %color, i32* %color.addr, align 4
  store i32 %square, i32* %square.addr, align 4
  store i32 %from, i32* %from.addr, align 4
  store i32 0, i32* getelementptr inbounds ([2 x i32]* @see_num_attackers, i32 0, i64 0), align 4
  store i32 0, i32* getelementptr inbounds ([2 x i32]* @see_num_attackers, i32 0, i64 1), align 4
  %0 = load i32* %from.addr, align 4
  %idxprom = sext i32 %0 to i64
  %arrayidx = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom
  %1 = load i32* %arrayidx, align 4
  store i32 %1, i32* %origpiece, align 4
  %2 = load i32* %from.addr, align 4
  %idxprom1 = sext i32 %2 to i64
  %arrayidx2 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom1
  store i32 13, i32* %arrayidx2, align 4
  %3 = load i32* %color.addr, align 4
  %idxprom3 = sext i32 %3 to i64
  %bitcast154 = bitcast [2 x i32]* @see_num_attackers to i8*
  %bitcast155 = bitcast [2 x i32]* getelementptr inbounds ([2 x i32]* @see_num_attackers, i32 1) to i8*
  %arrayidx4 = getelementptr inbounds [2 x i32]* @see_num_attackers, i32 0, i64 %idxprom3
  %4 = load i32* %arrayidx4, align 4
  %inc = add nsw i32 %4, 1
  store i32 %inc, i32* %arrayidx4, align 4
  %5 = load i32* %origpiece, align 4
  %6 = load i32* %color.addr, align 4
  %idxprom5 = sext i32 %6 to i64
  %bitcast156 = bitcast [2 x [16 x %struct.see_data]]* @see_attackers to i8*
  %bitcast157 = bitcast [2 x [16 x %struct.see_data]]* getelementptr inbounds ([2 x [16 x %struct.see_data]]* @see_attackers, i32 1) to i8*
  %arrayidx6 = getelementptr inbounds [2 x [16 x %struct.see_data]]* @see_attackers, i32 0, i64 %idxprom5
  %arrayidx7 = getelementptr inbounds [16 x %struct.see_data]* %arrayidx6, i32 0, i64 0
  %piece = getelementptr inbounds %struct.see_data* %arrayidx7, i32 0, i32 0
  store i32 %5, i32* %piece, align 4
  %7 = load i32* %from.addr, align 4
  %8 = load i32* %color.addr, align 4
  %idxprom8 = sext i32 %8 to i64
  %bitcast158 = bitcast [2 x [16 x %struct.see_data]]* @see_attackers to i8*
  %bitcast159 = bitcast [2 x [16 x %struct.see_data]]* getelementptr inbounds ([2 x [16 x %struct.see_data]]* @see_attackers, i32 1) to i8*
  %arrayidx9 = getelementptr inbounds [2 x [16 x %struct.see_data]]* @see_attackers, i32 0, i64 %idxprom8
  %arrayidx10 = getelementptr inbounds [16 x %struct.see_data]* %arrayidx9, i32 0, i64 0
  %square11 = getelementptr inbounds %struct.see_data* %arrayidx10, i32 0, i32 1
  store i32 %7, i32* %square11, align 4
  %9 = load i32* %square.addr, align 4
  call void @setup_attackers(i32 %9)
  %10 = load i32* %square.addr, align 4
  %idxprom12 = sext i32 %10 to i64
  %arrayidx13 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom12
  %11 = load i32* %arrayidx13, align 4
  %idxprom14 = sext i32 %11 to i64
  %arrayidx15 = getelementptr inbounds [14 x i32]* @material, i32 0, i64 %idxprom14
  %12 = load i32* %arrayidx15, align 4
  %call = call i32 @softboundcets_abs(i32 %12) #5
  store i32 %call, i32* %value, align 4
  %13 = load i32* %color.addr, align 4
  %tobool = icmp ne i32 %13, 0
  %lnot = xor i1 %tobool, true
  %lnot.ext = zext i1 %lnot to i32
  %idxprom16 = sext i32 %lnot.ext to i64
  %bitcast160 = bitcast [2 x i32]* @see_num_attackers to i8*
  %bitcast161 = bitcast [2 x i32]* getelementptr inbounds ([2 x i32]* @see_num_attackers, i32 1) to i8*
  %arrayidx17 = getelementptr inbounds [2 x i32]* @see_num_attackers, i32 0, i64 %idxprom16
  %14 = load i32* %arrayidx17, align 4
  %tobool18 = icmp ne i32 %14, 0
  br i1 %tobool18, label %if.else, label %if.then

if.then:                                          ; preds = %entry
  %15 = load i32* %origpiece, align 4
  %16 = load i32* %from.addr, align 4
  %idxprom19 = sext i32 %16 to i64
  %arrayidx20 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom19
  store i32 %15, i32* %arrayidx20, align 4
  %17 = load i32* %value, align 4
  store i32 %17, i32* %retval
  br label %return

if.else:                                          ; preds = %entry
  %18 = load i32* %value, align 4
  store i32 %18, i32* %hisbestvalue, align 4
  store i32 -1000000, i32* %ourbestvalue, align 4
  br label %if.end

if.end:                                           ; preds = %if.else
  %19 = load i32* %color.addr, align 4
  %idxprom21 = sext i32 %19 to i64
  %arrayidx22 = getelementptr inbounds [2 x i32]* %caps, i32 0, i64 %idxprom21
  store i32 1, i32* %arrayidx22, align 4
  %20 = load i32* %color.addr, align 4
  %tobool23 = icmp ne i32 %20, 0
  %lnot24 = xor i1 %tobool23, true
  %lnot.ext25 = zext i1 %lnot24 to i32
  %idxprom26 = sext i32 %lnot.ext25 to i64
  %arrayidx27 = getelementptr inbounds [2 x i32]* %caps, i32 0, i64 %idxprom26
  store i32 0, i32* %arrayidx27, align 4
  %21 = load i32* %color.addr, align 4
  %tobool28 = icmp ne i32 %21, 0
  %lnot29 = xor i1 %tobool28, true
  %lnot.ext30 = zext i1 %lnot29 to i32
  store i32 %lnot.ext30, i32* %sside, align 4
  br label %while.cond

while.cond:                                       ; preds = %if.end109, %if.end
  %22 = load i32* %sside, align 4
  %idxprom31 = sext i32 %22 to i64
  %arrayidx32 = getelementptr inbounds [2 x i32]* %caps, i32 0, i64 %idxprom31
  %23 = load i32* %arrayidx32, align 4
  %24 = load i32* %sside, align 4
  %idxprom33 = sext i32 %24 to i64
  %bitcast162 = bitcast [2 x i32]* @see_num_attackers to i8*
  %bitcast163 = bitcast [2 x i32]* getelementptr inbounds ([2 x i32]* @see_num_attackers, i32 1) to i8*
  %arrayidx34 = getelementptr inbounds [2 x i32]* @see_num_attackers, i32 0, i64 %idxprom33
  %25 = load i32* %arrayidx34, align 4
  %cmp = icmp slt i32 %23, %25
  br i1 %cmp, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  %26 = load i32* %sside, align 4
  %27 = load i32* %sside, align 4
  %idxprom35 = sext i32 %27 to i64
  %arrayidx36 = getelementptr inbounds [2 x i32]* %caps, i32 0, i64 %idxprom35
  %28 = load i32* %arrayidx36, align 4
  call void @findlowest(i32 %26, i32 %28)
  %29 = load i32* %sside, align 4
  %30 = load i32* %color.addr, align 4
  %cmp37 = icmp eq i32 %29, %30
  br i1 %cmp37, label %if.then38, label %if.else72

if.then38:                                        ; preds = %while.body
  %31 = load i32* %sside, align 4
  %tobool39 = icmp ne i32 %31, 0
  %lnot40 = xor i1 %tobool39, true
  %lnot.ext41 = zext i1 %lnot40 to i32
  %idxprom42 = sext i32 %lnot.ext41 to i64
  %arrayidx43 = getelementptr inbounds [2 x i32]* %caps, i32 0, i64 %idxprom42
  %32 = load i32* %arrayidx43, align 4
  %sub = sub nsw i32 %32, 1
  %idxprom44 = sext i32 %sub to i64
  %33 = load i32* %sside, align 4
  %tobool45 = icmp ne i32 %33, 0
  %lnot46 = xor i1 %tobool45, true
  %lnot.ext47 = zext i1 %lnot46 to i32
  %idxprom48 = sext i32 %lnot.ext47 to i64
  %bitcast164 = bitcast [2 x [16 x %struct.see_data]]* @see_attackers to i8*
  %bitcast165 = bitcast [2 x [16 x %struct.see_data]]* getelementptr inbounds ([2 x [16 x %struct.see_data]]* @see_attackers, i32 1) to i8*
  %arrayidx49 = getelementptr inbounds [2 x [16 x %struct.see_data]]* @see_attackers, i32 0, i64 %idxprom48
  %arrayidx50 = getelementptr inbounds [16 x %struct.see_data]* %arrayidx49, i32 0, i64 %idxprom44
  %piece51 = getelementptr inbounds %struct.see_data* %arrayidx50, i32 0, i32 0
  %34 = load i32* %piece51, align 4
  %idxprom52 = sext i32 %34 to i64
  %arrayidx53 = getelementptr inbounds [14 x i32]* @material, i32 0, i64 %idxprom52
  %35 = load i32* %arrayidx53, align 4
  %call54 = call i32 @softboundcets_abs(i32 %35) #5
  %36 = load i32* %value, align 4
  %add = add nsw i32 %36, %call54
  store i32 %add, i32* %value, align 4
  %37 = load i32* %sside, align 4
  %tobool55 = icmp ne i32 %37, 0
  %lnot56 = xor i1 %tobool55, true
  %lnot.ext57 = zext i1 %lnot56 to i32
  %idxprom58 = sext i32 %lnot.ext57 to i64
  %bitcast166 = bitcast [2 x i32]* @see_num_attackers to i8*
  %bitcast167 = bitcast [2 x i32]* getelementptr inbounds ([2 x i32]* @see_num_attackers, i32 1) to i8*
  %arrayidx59 = getelementptr inbounds [2 x i32]* @see_num_attackers, i32 0, i64 %idxprom58
  %38 = load i32* %arrayidx59, align 4
  %39 = load i32* %sside, align 4
  %tobool60 = icmp ne i32 %39, 0
  %lnot61 = xor i1 %tobool60, true
  %lnot.ext62 = zext i1 %lnot61 to i32
  %idxprom63 = sext i32 %lnot.ext62 to i64
  %arrayidx64 = getelementptr inbounds [2 x i32]* %caps, i32 0, i64 %idxprom63
  %40 = load i32* %arrayidx64, align 4
  %cmp65 = icmp sle i32 %38, %40
  br i1 %cmp65, label %land.lhs.true, label %if.end68

land.lhs.true:                                    ; preds = %if.then38
  %41 = load i32* %value, align 4
  %42 = load i32* %ourbestvalue, align 4
  %cmp66 = icmp sgt i32 %41, %42
  br i1 %cmp66, label %if.then67, label %if.end68

if.then67:                                        ; preds = %land.lhs.true
  %43 = load i32* %value, align 4
  store i32 %43, i32* %ourbestvalue, align 4
  br label %if.end68

if.end68:                                         ; preds = %if.then67, %land.lhs.true, %if.then38
  %44 = load i32* %value, align 4
  %45 = load i32* %hisbestvalue, align 4
  %cmp69 = icmp slt i32 %44, %45
  br i1 %cmp69, label %if.then70, label %if.end71

if.then70:                                        ; preds = %if.end68
  %46 = load i32* %value, align 4
  store i32 %46, i32* %hisbestvalue, align 4
  br label %if.end71

if.end71:                                         ; preds = %if.then70, %if.end68
  br label %if.end109

if.else72:                                        ; preds = %while.body
  %47 = load i32* %sside, align 4
  %tobool73 = icmp ne i32 %47, 0
  %lnot74 = xor i1 %tobool73, true
  %lnot.ext75 = zext i1 %lnot74 to i32
  %idxprom76 = sext i32 %lnot.ext75 to i64
  %arrayidx77 = getelementptr inbounds [2 x i32]* %caps, i32 0, i64 %idxprom76
  %48 = load i32* %arrayidx77, align 4
  %sub78 = sub nsw i32 %48, 1
  %idxprom79 = sext i32 %sub78 to i64
  %49 = load i32* %sside, align 4
  %tobool80 = icmp ne i32 %49, 0
  %lnot81 = xor i1 %tobool80, true
  %lnot.ext82 = zext i1 %lnot81 to i32
  %idxprom83 = sext i32 %lnot.ext82 to i64
  %bitcast168 = bitcast [2 x [16 x %struct.see_data]]* @see_attackers to i8*
  %bitcast169 = bitcast [2 x [16 x %struct.see_data]]* getelementptr inbounds ([2 x [16 x %struct.see_data]]* @see_attackers, i32 1) to i8*
  %arrayidx84 = getelementptr inbounds [2 x [16 x %struct.see_data]]* @see_attackers, i32 0, i64 %idxprom83
  %arrayidx85 = getelementptr inbounds [16 x %struct.see_data]* %arrayidx84, i32 0, i64 %idxprom79
  %piece86 = getelementptr inbounds %struct.see_data* %arrayidx85, i32 0, i32 0
  %50 = load i32* %piece86, align 4
  %idxprom87 = sext i32 %50 to i64
  %arrayidx88 = getelementptr inbounds [14 x i32]* @material, i32 0, i64 %idxprom87
  %51 = load i32* %arrayidx88, align 4
  %call89 = call i32 @softboundcets_abs(i32 %51) #5
  %52 = load i32* %value, align 4
  %sub90 = sub nsw i32 %52, %call89
  store i32 %sub90, i32* %value, align 4
  %53 = load i32* %value, align 4
  %54 = load i32* %ourbestvalue, align 4
  %cmp91 = icmp sgt i32 %53, %54
  br i1 %cmp91, label %if.then92, label %if.end93

if.then92:                                        ; preds = %if.else72
  %55 = load i32* %value, align 4
  store i32 %55, i32* %ourbestvalue, align 4
  br label %if.end93

if.end93:                                         ; preds = %if.then92, %if.else72
  %56 = load i32* %sside, align 4
  %tobool94 = icmp ne i32 %56, 0
  %lnot95 = xor i1 %tobool94, true
  %lnot.ext96 = zext i1 %lnot95 to i32
  %idxprom97 = sext i32 %lnot.ext96 to i64
  %bitcast170 = bitcast [2 x i32]* @see_num_attackers to i8*
  %bitcast171 = bitcast [2 x i32]* getelementptr inbounds ([2 x i32]* @see_num_attackers, i32 1) to i8*
  %arrayidx98 = getelementptr inbounds [2 x i32]* @see_num_attackers, i32 0, i64 %idxprom97
  %57 = load i32* %arrayidx98, align 4
  %58 = load i32* %sside, align 4
  %tobool99 = icmp ne i32 %58, 0
  %lnot100 = xor i1 %tobool99, true
  %lnot.ext101 = zext i1 %lnot100 to i32
  %idxprom102 = sext i32 %lnot.ext101 to i64
  %arrayidx103 = getelementptr inbounds [2 x i32]* %caps, i32 0, i64 %idxprom102
  %59 = load i32* %arrayidx103, align 4
  %cmp104 = icmp sle i32 %57, %59
  br i1 %cmp104, label %land.lhs.true105, label %if.end108

land.lhs.true105:                                 ; preds = %if.end93
  %60 = load i32* %value, align 4
  %61 = load i32* %hisbestvalue, align 4
  %cmp106 = icmp slt i32 %60, %61
  br i1 %cmp106, label %if.then107, label %if.end108

if.then107:                                       ; preds = %land.lhs.true105
  %62 = load i32* %value, align 4
  store i32 %62, i32* %hisbestvalue, align 4
  br label %if.end108

if.end108:                                        ; preds = %if.then107, %land.lhs.true105, %if.end93
  br label %if.end109

if.end109:                                        ; preds = %if.end108, %if.end71
  %63 = load i32* %sside, align 4
  %idxprom110 = sext i32 %63 to i64
  %arrayidx111 = getelementptr inbounds [2 x i32]* %caps, i32 0, i64 %idxprom110
  %64 = load i32* %arrayidx111, align 4
  %inc112 = add nsw i32 %64, 1
  store i32 %inc112, i32* %arrayidx111, align 4
  %65 = load i32* %sside, align 4
  %xor = xor i32 %65, 1
  store i32 %xor, i32* %sside, align 4
  br label %while.cond

while.end:                                        ; preds = %while.cond
  %66 = load i32* %origpiece, align 4
  %67 = load i32* %from.addr, align 4
  %idxprom113 = sext i32 %67 to i64
  %arrayidx114 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom113
  store i32 %66, i32* %arrayidx114, align 4
  %68 = load i32* %ourbestvalue, align 4
  %69 = load i32* %hisbestvalue, align 4
  %cmp115 = icmp sgt i32 %68, %69
  br i1 %cmp115, label %cond.true, label %cond.false

cond.true:                                        ; preds = %while.end
  %70 = load i32* %hisbestvalue, align 4
  br label %cond.end

cond.false:                                       ; preds = %while.end
  %71 = load i32* %ourbestvalue, align 4
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %70, %cond.true ], [ %71, %cond.false ]
  store i32 %cond, i32* %retval
  br label %return

return:                                           ; preds = %cond.end, %if.then
  %72 = load i32* %retval
  ret i32 %72
}

; Function Attrs: nounwind uwtable
define internal i32 @suicide_eval() #0 {
entry:
  %call = call i32 @suicide_mid_eval()
  ret i32 %call
}

; Function Attrs: nounwind uwtable
define internal i32 @suicide_mid_eval() #0 {
entry:
  %retval = alloca i32, align 4
  %retval402 = bitcast i32* %retval to i32*
  %bitcast = bitcast i32* %retval to i8*
  %mtmp = getelementptr i32* %retval402, i32 1
  %bitcast403 = bitcast i32* %mtmp to i8*
  %srank = alloca i32, align 4
  %srank404 = bitcast i32* %srank to i32*
  %bitcast405 = bitcast i32* %srank to i8*
  %mtmp406 = getelementptr i32* %srank404, i32 1
  %bitcast407 = bitcast i32* %mtmp406 to i8*
  %pawn_file = alloca i32, align 4
  %pawn_file408 = bitcast i32* %pawn_file to i32*
  %bitcast409 = bitcast i32* %pawn_file to i8*
  %mtmp410 = getelementptr i32* %pawn_file408, i32 1
  %bitcast411 = bitcast i32* %mtmp410 to i8*
  %pawns = alloca [2 x [11 x i32]], align 16
  %pawns412 = bitcast [2 x [11 x i32]]* %pawns to [2 x [11 x i32]]*
  %bitcast413 = bitcast [2 x [11 x i32]]* %pawns to i8*
  %mtmp414 = getelementptr [2 x [11 x i32]]* %pawns412, i32 1
  %bitcast415 = bitcast [2 x [11 x i32]]* %mtmp414 to i8*
  %white_back_pawn = alloca [11 x i32], align 16
  %white_back_pawn416 = bitcast [11 x i32]* %white_back_pawn to [11 x i32]*
  %bitcast417 = bitcast [11 x i32]* %white_back_pawn to i8*
  %mtmp418 = getelementptr [11 x i32]* %white_back_pawn416, i32 1
  %bitcast419 = bitcast [11 x i32]* %mtmp418 to i8*
  %black_back_pawn = alloca [11 x i32], align 16
  %black_back_pawn420 = bitcast [11 x i32]* %black_back_pawn to [11 x i32]*
  %bitcast421 = bitcast [11 x i32]* %black_back_pawn to i8*
  %mtmp422 = getelementptr [11 x i32]* %black_back_pawn420, i32 1
  %bitcast423 = bitcast [11 x i32]* %mtmp422 to i8*
  %isolated = alloca i32, align 4
  %isolated424 = bitcast i32* %isolated to i32*
  %bitcast425 = bitcast i32* %isolated to i8*
  %mtmp426 = getelementptr i32* %isolated424, i32 1
  %bitcast427 = bitcast i32* %mtmp426 to i8*
  %backwards = alloca i32, align 4
  %backwards428 = bitcast i32* %backwards to i32*
  %bitcast429 = bitcast i32* %backwards to i8*
  %mtmp430 = getelementptr i32* %backwards428, i32 1
  %bitcast431 = bitcast i32* %mtmp430 to i8*
  %i = alloca i32, align 4
  %i432 = bitcast i32* %i to i32*
  %bitcast433 = bitcast i32* %i to i8*
  %mtmp434 = getelementptr i32* %i432, i32 1
  %bitcast435 = bitcast i32* %mtmp434 to i8*
  %a = alloca i32, align 4
  %a436 = bitcast i32* %a to i32*
  %bitcast437 = bitcast i32* %a to i8*
  %mtmp438 = getelementptr i32* %a436, i32 1
  %bitcast439 = bitcast i32* %mtmp438 to i8*
  %j = alloca i32, align 4
  %j440 = bitcast i32* %j to i32*
  %bitcast441 = bitcast i32* %j to i8*
  %mtmp442 = getelementptr i32* %j440, i32 1
  %bitcast443 = bitcast i32* %mtmp442 to i8*
  %score = alloca i32, align 4
  %score444 = bitcast i32* %score to i32*
  %bitcast445 = bitcast i32* %score to i8*
  %mtmp446 = getelementptr i32* %score444, i32 1
  %bitcast447 = bitcast i32* %mtmp446 to i8*
  %in_cache = alloca i32, align 4
  %in_cache448 = bitcast i32* %in_cache to i32*
  %bitcast449 = bitcast i32* %in_cache to i8*
  %mtmp450 = getelementptr i32* %in_cache448, i32 1
  %bitcast451 = bitcast i32* %mtmp450 to i8*
  %wb = alloca i32, align 4
  %wb452 = bitcast i32* %wb to i32*
  %bitcast453 = bitcast i32* %wb to i8*
  %mtmp454 = getelementptr i32* %wb452, i32 1
  %bitcast455 = bitcast i32* %mtmp454 to i8*
  %bb = alloca i32, align 4
  %bb456 = bitcast i32* %bb to i32*
  %bitcast457 = bitcast i32* %bb to i8*
  %mtmp458 = getelementptr i32* %bb456, i32 1
  %bitcast459 = bitcast i32* %mtmp458 to i8*
  %wbc = alloca i32, align 4
  %wbc460 = bitcast i32* %wbc to i32*
  %bitcast461 = bitcast i32* %wbc to i8*
  %mtmp462 = getelementptr i32* %wbc460, i32 1
  %bitcast463 = bitcast i32* %mtmp462 to i8*
  %bbc = alloca i32, align 4
  %bbc464 = bitcast i32* %bbc to i32*
  %bitcast465 = bitcast i32* %bbc to i8*
  %mtmp466 = getelementptr i32* %bbc464, i32 1
  %bitcast467 = bitcast i32* %mtmp466 to i8*
  %wk = alloca i32, align 4
  %wk468 = bitcast i32* %wk to i32*
  %bitcast469 = bitcast i32* %wk to i8*
  %mtmp470 = getelementptr i32* %wk468, i32 1
  %bitcast471 = bitcast i32* %mtmp470 to i8*
  %bk = alloca i32, align 4
  %bk472 = bitcast i32* %bk to i32*
  %bitcast473 = bitcast i32* %bk to i8*
  %mtmp474 = getelementptr i32* %bk472, i32 1
  %bitcast475 = bitcast i32* %mtmp474 to i8*
  %wr = alloca i32, align 4
  %wr476 = bitcast i32* %wr to i32*
  %bitcast477 = bitcast i32* %wr to i8*
  %mtmp478 = getelementptr i32* %wr476, i32 1
  %bitcast479 = bitcast i32* %mtmp478 to i8*
  %br = alloca i32, align 4
  %br480 = bitcast i32* %br to i32*
  %bitcast481 = bitcast i32* %br to i8*
  %mtmp482 = getelementptr i32* %br480, i32 1
  %bitcast483 = bitcast i32* %mtmp482 to i8*
  %wn = alloca i32, align 4
  %wn484 = bitcast i32* %wn to i32*
  %bitcast485 = bitcast i32* %wn to i8*
  %mtmp486 = getelementptr i32* %wn484, i32 1
  %bitcast487 = bitcast i32* %mtmp486 to i8*
  %bn = alloca i32, align 4
  %bn488 = bitcast i32* %bn to i32*
  %bitcast489 = bitcast i32* %bn to i8*
  %mtmp490 = getelementptr i32* %bn488, i32 1
  %bitcast491 = bitcast i32* %mtmp490 to i8*
  %wp = alloca i32, align 4
  %wp492 = bitcast i32* %wp to i32*
  %bitcast493 = bitcast i32* %wp to i8*
  %mtmp494 = getelementptr i32* %wp492, i32 1
  %bitcast495 = bitcast i32* %mtmp494 to i8*
  %bp = alloca i32, align 4
  %bp496 = bitcast i32* %bp to i32*
  %bitcast497 = bitcast i32* %bp to i8*
  %mtmp498 = getelementptr i32* %bp496, i32 1
  %bitcast499 = bitcast i32* %mtmp498 to i8*
  store i32 0, i32* %score, align 4
  store i32 0, i32* %wb, align 4
  store i32 0, i32* %bb, align 4
  store i32 0, i32* %wbc, align 4
  store i32 0, i32* %bbc, align 4
  store i32 0, i32* %wk, align 4
  store i32 0, i32* %bk, align 4
  store i32 0, i32* %wr, align 4
  store i32 0, i32* %br, align 4
  store i32 0, i32* %wn, align 4
  store i32 0, i32* %bn, align 4
  store i32 0, i32* %wp, align 4
  store i32 0, i32* %bp, align 4
  store i32 0, i32* %in_cache, align 4
  call void @__softboundcets_allocate_shadow_stack_space(i32 3)
  call void @__softboundcets_store_base_shadow_stack(i8* %bitcast445, i32 1)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bitcast447, i32 1)
  call void @__softboundcets_store_base_shadow_stack(i8* %bitcast449, i32 2)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bitcast451, i32 2)
  call void @checkECache(i32* %score, i32* %in_cache)
  call void @__softboundcets_deallocate_shadow_stack_space()
  %0 = load i32* %in_cache, align 4
  %tobool = icmp ne i32 %0, 0
  br i1 %tobool, label %if.then, label %if.end2

if.then:                                          ; preds = %entry
  %1 = load i32* @white_to_move, align 4
  %cmp = icmp eq i32 %1, 1
  br i1 %cmp, label %if.then1, label %if.end

if.then1:                                         ; preds = %if.then
  %2 = load i32* %score, align 4
  store i32 %2, i32* %retval
  br label %return

if.end:                                           ; preds = %if.then
  %3 = load i32* %score, align 4
  %sub = sub nsw i32 0, %3
  store i32 %sub, i32* %retval
  br label %return

if.end2:                                          ; preds = %entry
  %4 = load i32* @Material, align 4
  store i32 %4, i32* %score, align 4
  %5 = bitcast [2 x [11 x i32]]* %pawns to i8*
  call void @__softboundcets_memset_check(i8* %5, i64 88, i8* %bitcast413, i8* %bitcast415)
  call void @llvm.memset.p0i8.i64(i8* %5, i8 0, i64 88, i32 16, i1 false)
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.end2
  %6 = load i32* %i, align 4
  %cmp3 = icmp slt i32 %6, 11
  br i1 %cmp3, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %7 = load i32* %i, align 4
  %idxprom = sext i32 %7 to i64
  %arrayidx = getelementptr inbounds [11 x i32]* %white_back_pawn, i32 0, i64 %idxprom
  store i32 7, i32* %arrayidx, align 4
  %8 = load i32* %i, align 4
  %idxprom4 = sext i32 %8 to i64
  %arrayidx5 = getelementptr inbounds [11 x i32]* %black_back_pawn, i32 0, i64 %idxprom4
  store i32 2, i32* %arrayidx5, align 4
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %9 = load i32* %i, align 4
  %inc = add nsw i32 %9, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  store i32 1, i32* %j, align 4
  store i32 1, i32* %a, align 4
  br label %for.cond6

for.cond6:                                        ; preds = %for.inc52, %for.end
  %10 = load i32* %a, align 4
  %11 = load i32* @piece_count, align 4
  %cmp7 = icmp sle i32 %10, %11
  br i1 %cmp7, label %for.body8, label %for.end54

for.body8:                                        ; preds = %for.cond6
  %12 = load i32* %j, align 4
  %idxprom9 = sext i32 %12 to i64
  %arrayidx10 = getelementptr inbounds [62 x i32]* @pieces, i32 0, i64 %idxprom9
  %13 = load i32* %arrayidx10, align 4
  store i32 %13, i32* %i, align 4
  %14 = load i32* %i, align 4
  %tobool11 = icmp ne i32 %14, 0
  br i1 %tobool11, label %if.else, label %if.then12

if.then12:                                        ; preds = %for.body8
  br label %for.inc52

if.else:                                          ; preds = %for.body8
  %15 = load i32* %a, align 4
  %inc13 = add nsw i32 %15, 1
  store i32 %inc13, i32* %a, align 4
  br label %if.end14

if.end14:                                         ; preds = %if.else
  %16 = load i32* %i, align 4
  %idxprom15 = sext i32 %16 to i64
  %arrayidx16 = getelementptr inbounds [144 x i32]* @Xfile, i32 0, i64 %idxprom15
  %17 = load i32* %arrayidx16, align 4
  %add = add nsw i32 %17, 1
  store i32 %add, i32* %pawn_file, align 4
  %18 = load i32* %i, align 4
  %idxprom17 = sext i32 %18 to i64
  %arrayidx18 = getelementptr inbounds [144 x i32]* @Xrank, i32 0, i64 %idxprom17
  %19 = load i32* %arrayidx18, align 4
  store i32 %19, i32* %srank, align 4
  %20 = load i32* %i, align 4
  %idxprom19 = sext i32 %20 to i64
  %arrayidx20 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom19
  %21 = load i32* %arrayidx20, align 4
  %cmp21 = icmp eq i32 %21, 1
  br i1 %cmp21, label %if.then22, label %if.else34

if.then22:                                        ; preds = %if.end14
  %22 = load i32* %pawn_file, align 4
  %idxprom23 = sext i32 %22 to i64
  %arrayidx24 = getelementptr inbounds [2 x [11 x i32]]* %pawns, i32 0, i64 1
  %arrayidx25 = getelementptr inbounds [11 x i32]* %arrayidx24, i32 0, i64 %idxprom23
  %23 = load i32* %arrayidx25, align 4
  %inc26 = add nsw i32 %23, 1
  store i32 %inc26, i32* %arrayidx25, align 4
  %24 = load i32* %srank, align 4
  %25 = load i32* %pawn_file, align 4
  %idxprom27 = sext i32 %25 to i64
  %arrayidx28 = getelementptr inbounds [11 x i32]* %white_back_pawn, i32 0, i64 %idxprom27
  %26 = load i32* %arrayidx28, align 4
  %cmp29 = icmp slt i32 %24, %26
  br i1 %cmp29, label %if.then30, label %if.end33

if.then30:                                        ; preds = %if.then22
  %27 = load i32* %srank, align 4
  %28 = load i32* %pawn_file, align 4
  %idxprom31 = sext i32 %28 to i64
  %arrayidx32 = getelementptr inbounds [11 x i32]* %white_back_pawn, i32 0, i64 %idxprom31
  store i32 %27, i32* %arrayidx32, align 4
  br label %if.end33

if.end33:                                         ; preds = %if.then30, %if.then22
  br label %if.end51

if.else34:                                        ; preds = %if.end14
  %29 = load i32* %i, align 4
  %idxprom35 = sext i32 %29 to i64
  %arrayidx36 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom35
  %30 = load i32* %arrayidx36, align 4
  %cmp37 = icmp eq i32 %30, 2
  br i1 %cmp37, label %if.then38, label %if.end50

if.then38:                                        ; preds = %if.else34
  %31 = load i32* %pawn_file, align 4
  %idxprom39 = sext i32 %31 to i64
  %arrayidx40 = getelementptr inbounds [2 x [11 x i32]]* %pawns, i32 0, i64 0
  %arrayidx41 = getelementptr inbounds [11 x i32]* %arrayidx40, i32 0, i64 %idxprom39
  %32 = load i32* %arrayidx41, align 4
  %inc42 = add nsw i32 %32, 1
  store i32 %inc42, i32* %arrayidx41, align 4
  %33 = load i32* %srank, align 4
  %34 = load i32* %pawn_file, align 4
  %idxprom43 = sext i32 %34 to i64
  %arrayidx44 = getelementptr inbounds [11 x i32]* %black_back_pawn, i32 0, i64 %idxprom43
  %35 = load i32* %arrayidx44, align 4
  %cmp45 = icmp sgt i32 %33, %35
  br i1 %cmp45, label %if.then46, label %if.end49

if.then46:                                        ; preds = %if.then38
  %36 = load i32* %srank, align 4
  %37 = load i32* %pawn_file, align 4
  %idxprom47 = sext i32 %37 to i64
  %arrayidx48 = getelementptr inbounds [11 x i32]* %black_back_pawn, i32 0, i64 %idxprom47
  store i32 %36, i32* %arrayidx48, align 4
  br label %if.end49

if.end49:                                         ; preds = %if.then46, %if.then38
  br label %if.end50

if.end50:                                         ; preds = %if.end49, %if.else34
  br label %if.end51

if.end51:                                         ; preds = %if.end50, %if.end33
  br label %for.inc52

for.inc52:                                        ; preds = %if.end51, %if.then12
  %38 = load i32* %j, align 4
  %inc53 = add nsw i32 %38, 1
  store i32 %inc53, i32* %j, align 4
  br label %for.cond6

for.end54:                                        ; preds = %for.cond6
  store i32 1, i32* %j, align 4
  store i32 1, i32* %a, align 4
  br label %for.cond55

for.cond55:                                       ; preds = %for.inc380, %for.end54
  %39 = load i32* %a, align 4
  %40 = load i32* @piece_count, align 4
  %cmp56 = icmp sle i32 %39, %40
  br i1 %cmp56, label %for.body57, label %for.end382

for.body57:                                       ; preds = %for.cond55
  %41 = load i32* %j, align 4
  %idxprom58 = sext i32 %41 to i64
  %arrayidx59 = getelementptr inbounds [62 x i32]* @pieces, i32 0, i64 %idxprom58
  %42 = load i32* %arrayidx59, align 4
  store i32 %42, i32* %i, align 4
  %43 = load i32* %i, align 4
  %tobool60 = icmp ne i32 %43, 0
  br i1 %tobool60, label %if.else62, label %if.then61

if.then61:                                        ; preds = %for.body57
  br label %for.inc380

if.else62:                                        ; preds = %for.body57
  %44 = load i32* %a, align 4
  %inc63 = add nsw i32 %44, 1
  store i32 %inc63, i32* %a, align 4
  br label %if.end64

if.end64:                                         ; preds = %if.else62
  %45 = load i32* %i, align 4
  %idxprom65 = sext i32 %45 to i64
  %arrayidx66 = getelementptr inbounds [144 x i32]* @Xfile, i32 0, i64 %idxprom65
  %46 = load i32* %arrayidx66, align 4
  %add67 = add nsw i32 %46, 1
  store i32 %add67, i32* %pawn_file, align 4
  %47 = load i32* %i, align 4
  %idxprom68 = sext i32 %47 to i64
  %arrayidx69 = getelementptr inbounds [144 x i32]* @Xrank, i32 0, i64 %idxprom68
  %48 = load i32* %arrayidx69, align 4
  store i32 %48, i32* %srank, align 4
  %49 = load i32* %i, align 4
  %idxprom70 = sext i32 %49 to i64
  %arrayidx71 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom70
  %50 = load i32* %arrayidx71, align 4
  switch i32 %50, label %sw.epilog [
    i32 1, label %sw.bb
    i32 2, label %sw.bb177
    i32 7, label %sw.bb287
    i32 8, label %sw.bb294
    i32 11, label %sw.bb301
    i32 12, label %sw.bb318
    i32 3, label %sw.bb335
    i32 4, label %sw.bb342
    i32 9, label %sw.bb349
    i32 10, label %sw.bb357
    i32 5, label %sw.bb365
    i32 6, label %sw.bb372
  ]

sw.bb:                                            ; preds = %if.end64
  %51 = load i32* %i, align 4
  %idxprom72 = sext i32 %51 to i64
  %bitcast500 = bitcast [144 x i32]* @scentral to i8*
  %bitcast501 = bitcast [144 x i32]* getelementptr inbounds ([144 x i32]* @scentral, i32 1) to i8*
  %arrayidx73 = getelementptr inbounds [144 x i32]* @scentral, i32 0, i64 %idxprom72
  %52 = load i32* %arrayidx73, align 4
  %53 = load i32* %score, align 4
  %add74 = add nsw i32 %53, %52
  store i32 %add74, i32* %score, align 4
  %54 = load i32* %i, align 4
  %call = call i32 @s_pawn_mobility(i32 %54)
  %55 = load i32* %score, align 4
  %add75 = add nsw i32 %55, %call
  store i32 %add75, i32* %score, align 4
  %56 = load i32* %i, align 4
  %call76 = call i32 @black_saccers(i32 %56)
  %57 = load i32* %score, align 4
  %sub77 = sub nsw i32 %57, %call76
  store i32 %sub77, i32* %score, align 4
  %58 = load i32* %wp, align 4
  %inc78 = add nsw i32 %58, 1
  store i32 %inc78, i32* %wp, align 4
  store i32 0, i32* %isolated, align 4
  store i32 0, i32* %backwards, align 4
  %59 = load i32* %pawn_file, align 4
  %add79 = add nsw i32 %59, 1
  %idxprom80 = sext i32 %add79 to i64
  %arrayidx81 = getelementptr inbounds [11 x i32]* %white_back_pawn, i32 0, i64 %idxprom80
  %60 = load i32* %arrayidx81, align 4
  %61 = load i32* %srank, align 4
  %cmp82 = icmp sgt i32 %60, %61
  br i1 %cmp82, label %land.lhs.true, label %if.end103

land.lhs.true:                                    ; preds = %sw.bb
  %62 = load i32* %pawn_file, align 4
  %sub83 = sub nsw i32 %62, 1
  %idxprom84 = sext i32 %sub83 to i64
  %arrayidx85 = getelementptr inbounds [11 x i32]* %white_back_pawn, i32 0, i64 %idxprom84
  %63 = load i32* %arrayidx85, align 4
  %64 = load i32* %srank, align 4
  %cmp86 = icmp sgt i32 %63, %64
  br i1 %cmp86, label %if.then87, label %if.end103

if.then87:                                        ; preds = %land.lhs.true
  %65 = load i32* %score, align 4
  %sub88 = sub nsw i32 %65, 8
  store i32 %sub88, i32* %score, align 4
  store i32 1, i32* %backwards, align 4
  %66 = load i32* %pawn_file, align 4
  %add89 = add nsw i32 %66, 1
  %idxprom90 = sext i32 %add89 to i64
  %arrayidx91 = getelementptr inbounds [2 x [11 x i32]]* %pawns, i32 0, i64 1
  %arrayidx92 = getelementptr inbounds [11 x i32]* %arrayidx91, i32 0, i64 %idxprom90
  %67 = load i32* %arrayidx92, align 4
  %tobool93 = icmp ne i32 %67, 0
  br i1 %tobool93, label %if.end102, label %land.lhs.true94

land.lhs.true94:                                  ; preds = %if.then87
  %68 = load i32* %pawn_file, align 4
  %sub95 = sub nsw i32 %68, 1
  %idxprom96 = sext i32 %sub95 to i64
  %arrayidx97 = getelementptr inbounds [2 x [11 x i32]]* %pawns, i32 0, i64 1
  %arrayidx98 = getelementptr inbounds [11 x i32]* %arrayidx97, i32 0, i64 %idxprom96
  %69 = load i32* %arrayidx98, align 4
  %tobool99 = icmp ne i32 %69, 0
  br i1 %tobool99, label %if.end102, label %if.then100

if.then100:                                       ; preds = %land.lhs.true94
  %70 = load i32* %score, align 4
  %sub101 = sub nsw i32 %70, 12
  store i32 %sub101, i32* %score, align 4
  store i32 1, i32* %isolated, align 4
  br label %if.end102

if.end102:                                        ; preds = %if.then100, %land.lhs.true94, %if.then87
  br label %if.end103

if.end103:                                        ; preds = %if.end102, %land.lhs.true, %sw.bb
  %71 = load i32* %pawn_file, align 4
  %idxprom104 = sext i32 %71 to i64
  %arrayidx105 = getelementptr inbounds [2 x [11 x i32]]* %pawns, i32 0, i64 0
  %arrayidx106 = getelementptr inbounds [11 x i32]* %arrayidx105, i32 0, i64 %idxprom104
  %72 = load i32* %arrayidx106, align 4
  %tobool107 = icmp ne i32 %72, 0
  br i1 %tobool107, label %if.end117, label %if.then108

if.then108:                                       ; preds = %if.end103
  %73 = load i32* %backwards, align 4
  %tobool109 = icmp ne i32 %73, 0
  br i1 %tobool109, label %if.then110, label %if.end112

if.then110:                                       ; preds = %if.then108
  %74 = load i32* %score, align 4
  %sub111 = sub nsw i32 %74, 5
  store i32 %sub111, i32* %score, align 4
  br label %if.end112

if.end112:                                        ; preds = %if.then110, %if.then108
  %75 = load i32* %isolated, align 4
  %tobool113 = icmp ne i32 %75, 0
  br i1 %tobool113, label %if.then114, label %if.end116

if.then114:                                       ; preds = %if.end112
  %76 = load i32* %score, align 4
  %sub115 = sub nsw i32 %76, 8
  store i32 %sub115, i32* %score, align 4
  br label %if.end116

if.end116:                                        ; preds = %if.then114, %if.end112
  br label %if.end117

if.end117:                                        ; preds = %if.end116, %if.end103
  %77 = load i32* %pawn_file, align 4
  %idxprom118 = sext i32 %77 to i64
  %arrayidx119 = getelementptr inbounds [2 x [11 x i32]]* %pawns, i32 0, i64 1
  %arrayidx120 = getelementptr inbounds [11 x i32]* %arrayidx119, i32 0, i64 %idxprom118
  %78 = load i32* %arrayidx120, align 4
  %cmp121 = icmp sgt i32 %78, 1
  br i1 %cmp121, label %if.then122, label %if.end128

if.then122:                                       ; preds = %if.end117
  %79 = load i32* %pawn_file, align 4
  %idxprom123 = sext i32 %79 to i64
  %arrayidx124 = getelementptr inbounds [2 x [11 x i32]]* %pawns, i32 0, i64 1
  %arrayidx125 = getelementptr inbounds [11 x i32]* %arrayidx124, i32 0, i64 %idxprom123
  %80 = load i32* %arrayidx125, align 4
  %sub126 = sub nsw i32 %80, 1
  %mul = mul nsw i32 15, %sub126
  %81 = load i32* %score, align 4
  %sub127 = sub nsw i32 %81, %mul
  store i32 %sub127, i32* %score, align 4
  br label %if.end128

if.end128:                                        ; preds = %if.then122, %if.end117
  %82 = load i32* %pawn_file, align 4
  %idxprom129 = sext i32 %82 to i64
  %arrayidx130 = getelementptr inbounds [2 x [11 x i32]]* %pawns, i32 0, i64 0
  %arrayidx131 = getelementptr inbounds [11 x i32]* %arrayidx130, i32 0, i64 %idxprom129
  %83 = load i32* %arrayidx131, align 4
  %tobool132 = icmp ne i32 %83, 0
  br i1 %tobool132, label %if.end168, label %land.lhs.true133

land.lhs.true133:                                 ; preds = %if.end128
  %84 = load i32* %srank, align 4
  %85 = load i32* %pawn_file, align 4
  %sub134 = sub nsw i32 %85, 1
  %idxprom135 = sext i32 %sub134 to i64
  %arrayidx136 = getelementptr inbounds [11 x i32]* %black_back_pawn, i32 0, i64 %idxprom135
  %86 = load i32* %arrayidx136, align 4
  %cmp137 = icmp sge i32 %84, %86
  br i1 %cmp137, label %land.lhs.true138, label %if.end168

land.lhs.true138:                                 ; preds = %land.lhs.true133
  %87 = load i32* %srank, align 4
  %88 = load i32* %pawn_file, align 4
  %add139 = add nsw i32 %88, 1
  %idxprom140 = sext i32 %add139 to i64
  %arrayidx141 = getelementptr inbounds [11 x i32]* %black_back_pawn, i32 0, i64 %idxprom140
  %89 = load i32* %arrayidx141, align 4
  %cmp142 = icmp sge i32 %87, %89
  br i1 %cmp142, label %if.then143, label %if.end168

if.then143:                                       ; preds = %land.lhs.true138
  %90 = load i32* %i, align 4
  %idxprom144 = sext i32 %90 to i64
  %arrayidx145 = getelementptr inbounds [144 x i32]* @Xrank, i32 0, i64 %idxprom144
  %91 = load i32* %arrayidx145, align 4
  %sub146 = sub nsw i32 %91, 2
  %mul147 = mul nsw i32 3, %sub146
  %add148 = add nsw i32 30, %mul147
  %92 = load i32* %score, align 4
  %add149 = add nsw i32 %92, %add148
  store i32 %add149, i32* %score, align 4
  %93 = load i32* %i, align 4
  %idxprom150 = sext i32 %93 to i64
  %arrayidx151 = getelementptr inbounds [144 x i32]* @Xfile, i32 0, i64 %idxprom150
  %94 = load i32* %arrayidx151, align 4
  %cmp152 = icmp eq i32 %94, 1
  br i1 %cmp152, label %if.then156, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.then143
  %95 = load i32* %i, align 4
  %idxprom153 = sext i32 %95 to i64
  %arrayidx154 = getelementptr inbounds [144 x i32]* @Xfile, i32 0, i64 %idxprom153
  %96 = load i32* %arrayidx154, align 4
  %cmp155 = icmp eq i32 %96, 8
  br i1 %cmp155, label %if.then156, label %if.end163

if.then156:                                       ; preds = %lor.lhs.false, %if.then143
  %97 = load i32* %i, align 4
  %idxprom157 = sext i32 %97 to i64
  %arrayidx158 = getelementptr inbounds [144 x i32]* @Xrank, i32 0, i64 %idxprom157
  %98 = load i32* %arrayidx158, align 4
  %sub159 = sub nsw i32 %98, 2
  %mul160 = mul nsw i32 2, %sub159
  %add161 = add nsw i32 4, %mul160
  %99 = load i32* %score, align 4
  %add162 = add nsw i32 %99, %add161
  store i32 %add162, i32* %score, align 4
  br label %if.end163

if.end163:                                        ; preds = %if.then156, %lor.lhs.false
  %100 = load i32* %isolated, align 4
  %tobool164 = icmp ne i32 %100, 0
  br i1 %tobool164, label %if.end167, label %if.then165

if.then165:                                       ; preds = %if.end163
  %101 = load i32* %score, align 4
  %add166 = add nsw i32 %101, 6
  store i32 %add166, i32* %score, align 4
  br label %if.end167

if.end167:                                        ; preds = %if.then165, %if.end163
  br label %if.end168

if.end168:                                        ; preds = %if.end167, %land.lhs.true138, %land.lhs.true133, %if.end128
  %102 = load i32* %pawn_file, align 4
  %sub169 = sub nsw i32 %102, 1
  %idxprom170 = sext i32 %sub169 to i64
  %arrayidx171 = getelementptr inbounds [2 x [11 x i32]]* %pawns, i32 0, i64 1
  %arrayidx172 = getelementptr inbounds [11 x i32]* %arrayidx171, i32 0, i64 %idxprom170
  %103 = load i32* %arrayidx172, align 4
  %tobool173 = icmp ne i32 %103, 0
  br i1 %tobool173, label %if.end176, label %if.then174

if.then174:                                       ; preds = %if.end168
  %104 = load i32* %score, align 4
  %sub175 = sub nsw i32 %104, 20
  store i32 %sub175, i32* %score, align 4
  br label %if.end176

if.end176:                                        ; preds = %if.then174, %if.end168
  br label %sw.epilog

sw.bb177:                                         ; preds = %if.end64
  %105 = load i32* %i, align 4
  %idxprom178 = sext i32 %105 to i64
  %bitcast502 = bitcast [144 x i32]* @scentral to i8*
  %bitcast503 = bitcast [144 x i32]* getelementptr inbounds ([144 x i32]* @scentral, i32 1) to i8*
  %arrayidx179 = getelementptr inbounds [144 x i32]* @scentral, i32 0, i64 %idxprom178
  %106 = load i32* %arrayidx179, align 4
  %107 = load i32* %score, align 4
  %sub180 = sub nsw i32 %107, %106
  store i32 %sub180, i32* %score, align 4
  %108 = load i32* %i, align 4
  %call181 = call i32 @s_pawn_mobility(i32 %108)
  %109 = load i32* %score, align 4
  %sub182 = sub nsw i32 %109, %call181
  store i32 %sub182, i32* %score, align 4
  %110 = load i32* %i, align 4
  %call183 = call i32 @white_saccers(i32 %110)
  %111 = load i32* %score, align 4
  %add184 = add nsw i32 %111, %call183
  store i32 %add184, i32* %score, align 4
  store i32 0, i32* %isolated, align 4
  store i32 0, i32* %backwards, align 4
  %112 = load i32* %bp, align 4
  %inc185 = add nsw i32 %112, 1
  store i32 %inc185, i32* %bp, align 4
  %113 = load i32* %pawn_file, align 4
  %add186 = add nsw i32 %113, 1
  %idxprom187 = sext i32 %add186 to i64
  %arrayidx188 = getelementptr inbounds [11 x i32]* %black_back_pawn, i32 0, i64 %idxprom187
  %114 = load i32* %arrayidx188, align 4
  %115 = load i32* %srank, align 4
  %cmp189 = icmp slt i32 %114, %115
  br i1 %cmp189, label %land.lhs.true190, label %if.end211

land.lhs.true190:                                 ; preds = %sw.bb177
  %116 = load i32* %pawn_file, align 4
  %sub191 = sub nsw i32 %116, 1
  %idxprom192 = sext i32 %sub191 to i64
  %arrayidx193 = getelementptr inbounds [11 x i32]* %black_back_pawn, i32 0, i64 %idxprom192
  %117 = load i32* %arrayidx193, align 4
  %118 = load i32* %srank, align 4
  %cmp194 = icmp slt i32 %117, %118
  br i1 %cmp194, label %if.then195, label %if.end211

if.then195:                                       ; preds = %land.lhs.true190
  %119 = load i32* %score, align 4
  %add196 = add nsw i32 %119, 8
  store i32 %add196, i32* %score, align 4
  store i32 1, i32* %backwards, align 4
  %120 = load i32* %pawn_file, align 4
  %add197 = add nsw i32 %120, 1
  %idxprom198 = sext i32 %add197 to i64
  %arrayidx199 = getelementptr inbounds [2 x [11 x i32]]* %pawns, i32 0, i64 0
  %arrayidx200 = getelementptr inbounds [11 x i32]* %arrayidx199, i32 0, i64 %idxprom198
  %121 = load i32* %arrayidx200, align 4
  %tobool201 = icmp ne i32 %121, 0
  br i1 %tobool201, label %if.end210, label %land.lhs.true202

land.lhs.true202:                                 ; preds = %if.then195
  %122 = load i32* %pawn_file, align 4
  %sub203 = sub nsw i32 %122, 1
  %idxprom204 = sext i32 %sub203 to i64
  %arrayidx205 = getelementptr inbounds [2 x [11 x i32]]* %pawns, i32 0, i64 0
  %arrayidx206 = getelementptr inbounds [11 x i32]* %arrayidx205, i32 0, i64 %idxprom204
  %123 = load i32* %arrayidx206, align 4
  %tobool207 = icmp ne i32 %123, 0
  br i1 %tobool207, label %if.end210, label %if.then208

if.then208:                                       ; preds = %land.lhs.true202
  %124 = load i32* %score, align 4
  %add209 = add nsw i32 %124, 12
  store i32 %add209, i32* %score, align 4
  store i32 1, i32* %isolated, align 4
  br label %if.end210

if.end210:                                        ; preds = %if.then208, %land.lhs.true202, %if.then195
  br label %if.end211

if.end211:                                        ; preds = %if.end210, %land.lhs.true190, %sw.bb177
  %125 = load i32* %pawn_file, align 4
  %idxprom212 = sext i32 %125 to i64
  %arrayidx213 = getelementptr inbounds [2 x [11 x i32]]* %pawns, i32 0, i64 1
  %arrayidx214 = getelementptr inbounds [11 x i32]* %arrayidx213, i32 0, i64 %idxprom212
  %126 = load i32* %arrayidx214, align 4
  %tobool215 = icmp ne i32 %126, 0
  br i1 %tobool215, label %if.end225, label %if.then216

if.then216:                                       ; preds = %if.end211
  %127 = load i32* %backwards, align 4
  %tobool217 = icmp ne i32 %127, 0
  br i1 %tobool217, label %if.then218, label %if.end220

if.then218:                                       ; preds = %if.then216
  %128 = load i32* %score, align 4
  %add219 = add nsw i32 %128, 5
  store i32 %add219, i32* %score, align 4
  br label %if.end220

if.end220:                                        ; preds = %if.then218, %if.then216
  %129 = load i32* %isolated, align 4
  %tobool221 = icmp ne i32 %129, 0
  br i1 %tobool221, label %if.then222, label %if.end224

if.then222:                                       ; preds = %if.end220
  %130 = load i32* %score, align 4
  %add223 = add nsw i32 %130, 8
  store i32 %add223, i32* %score, align 4
  br label %if.end224

if.end224:                                        ; preds = %if.then222, %if.end220
  br label %if.end225

if.end225:                                        ; preds = %if.end224, %if.end211
  %131 = load i32* %pawn_file, align 4
  %idxprom226 = sext i32 %131 to i64
  %arrayidx227 = getelementptr inbounds [2 x [11 x i32]]* %pawns, i32 0, i64 0
  %arrayidx228 = getelementptr inbounds [11 x i32]* %arrayidx227, i32 0, i64 %idxprom226
  %132 = load i32* %arrayidx228, align 4
  %cmp229 = icmp sgt i32 %132, 1
  br i1 %cmp229, label %if.then230, label %if.end237

if.then230:                                       ; preds = %if.end225
  %133 = load i32* %pawn_file, align 4
  %idxprom231 = sext i32 %133 to i64
  %arrayidx232 = getelementptr inbounds [2 x [11 x i32]]* %pawns, i32 0, i64 0
  %arrayidx233 = getelementptr inbounds [11 x i32]* %arrayidx232, i32 0, i64 %idxprom231
  %134 = load i32* %arrayidx233, align 4
  %sub234 = sub nsw i32 %134, 1
  %mul235 = mul nsw i32 15, %sub234
  %135 = load i32* %score, align 4
  %add236 = add nsw i32 %135, %mul235
  store i32 %add236, i32* %score, align 4
  br label %if.end237

if.end237:                                        ; preds = %if.then230, %if.end225
  %136 = load i32* %pawn_file, align 4
  %idxprom238 = sext i32 %136 to i64
  %arrayidx239 = getelementptr inbounds [2 x [11 x i32]]* %pawns, i32 0, i64 1
  %arrayidx240 = getelementptr inbounds [11 x i32]* %arrayidx239, i32 0, i64 %idxprom238
  %137 = load i32* %arrayidx240, align 4
  %tobool241 = icmp ne i32 %137, 0
  br i1 %tobool241, label %if.end278, label %land.lhs.true242

land.lhs.true242:                                 ; preds = %if.end237
  %138 = load i32* %srank, align 4
  %139 = load i32* %pawn_file, align 4
  %sub243 = sub nsw i32 %139, 1
  %idxprom244 = sext i32 %sub243 to i64
  %arrayidx245 = getelementptr inbounds [11 x i32]* %white_back_pawn, i32 0, i64 %idxprom244
  %140 = load i32* %arrayidx245, align 4
  %cmp246 = icmp sle i32 %138, %140
  br i1 %cmp246, label %land.lhs.true247, label %if.end278

land.lhs.true247:                                 ; preds = %land.lhs.true242
  %141 = load i32* %srank, align 4
  %142 = load i32* %pawn_file, align 4
  %add248 = add nsw i32 %142, 1
  %idxprom249 = sext i32 %add248 to i64
  %arrayidx250 = getelementptr inbounds [11 x i32]* %white_back_pawn, i32 0, i64 %idxprom249
  %143 = load i32* %arrayidx250, align 4
  %cmp251 = icmp sle i32 %141, %143
  br i1 %cmp251, label %if.then252, label %if.end278

if.then252:                                       ; preds = %land.lhs.true247
  %144 = load i32* %i, align 4
  %idxprom253 = sext i32 %144 to i64
  %arrayidx254 = getelementptr inbounds [144 x i32]* @Xrank, i32 0, i64 %idxprom253
  %145 = load i32* %arrayidx254, align 4
  %sub255 = sub nsw i32 7, %145
  %mul256 = mul nsw i32 3, %sub255
  %add257 = add nsw i32 30, %mul256
  %146 = load i32* %score, align 4
  %sub258 = sub nsw i32 %146, %add257
  store i32 %sub258, i32* %score, align 4
  %147 = load i32* %i, align 4
  %idxprom259 = sext i32 %147 to i64
  %arrayidx260 = getelementptr inbounds [144 x i32]* @Xfile, i32 0, i64 %idxprom259
  %148 = load i32* %arrayidx260, align 4
  %cmp261 = icmp eq i32 %148, 1
  br i1 %cmp261, label %if.then266, label %lor.lhs.false262

lor.lhs.false262:                                 ; preds = %if.then252
  %149 = load i32* %i, align 4
  %idxprom263 = sext i32 %149 to i64
  %arrayidx264 = getelementptr inbounds [144 x i32]* @Xfile, i32 0, i64 %idxprom263
  %150 = load i32* %arrayidx264, align 4
  %cmp265 = icmp eq i32 %150, 8
  br i1 %cmp265, label %if.then266, label %if.end273

if.then266:                                       ; preds = %lor.lhs.false262, %if.then252
  %151 = load i32* %i, align 4
  %idxprom267 = sext i32 %151 to i64
  %arrayidx268 = getelementptr inbounds [144 x i32]* @Xrank, i32 0, i64 %idxprom267
  %152 = load i32* %arrayidx268, align 4
  %sub269 = sub nsw i32 7, %152
  %mul270 = mul nsw i32 2, %sub269
  %add271 = add nsw i32 4, %mul270
  %153 = load i32* %score, align 4
  %sub272 = sub nsw i32 %153, %add271
  store i32 %sub272, i32* %score, align 4
  br label %if.end273

if.end273:                                        ; preds = %if.then266, %lor.lhs.false262
  %154 = load i32* %isolated, align 4
  %tobool274 = icmp ne i32 %154, 0
  br i1 %tobool274, label %if.end277, label %if.then275

if.then275:                                       ; preds = %if.end273
  %155 = load i32* %score, align 4
  %sub276 = sub nsw i32 %155, 6
  store i32 %sub276, i32* %score, align 4
  br label %if.end277

if.end277:                                        ; preds = %if.then275, %if.end273
  br label %if.end278

if.end278:                                        ; preds = %if.end277, %land.lhs.true247, %land.lhs.true242, %if.end237
  %156 = load i32* %pawn_file, align 4
  %sub279 = sub nsw i32 %156, 1
  %idxprom280 = sext i32 %sub279 to i64
  %arrayidx281 = getelementptr inbounds [2 x [11 x i32]]* %pawns, i32 0, i64 0
  %arrayidx282 = getelementptr inbounds [11 x i32]* %arrayidx281, i32 0, i64 %idxprom280
  %157 = load i32* %arrayidx282, align 4
  %tobool283 = icmp ne i32 %157, 0
  br i1 %tobool283, label %if.end286, label %if.then284

if.then284:                                       ; preds = %if.end278
  %158 = load i32* %score, align 4
  %add285 = add nsw i32 %158, 20
  store i32 %add285, i32* %score, align 4
  br label %if.end286

if.end286:                                        ; preds = %if.then284, %if.end278
  br label %sw.epilog

sw.bb287:                                         ; preds = %if.end64
  %159 = load i32* %i, align 4
  %idxprom288 = sext i32 %159 to i64
  %bitcast504 = bitcast [144 x i32]* @scentral to i8*
  %bitcast505 = bitcast [144 x i32]* getelementptr inbounds ([144 x i32]* @scentral, i32 1) to i8*
  %arrayidx289 = getelementptr inbounds [144 x i32]* @scentral, i32 0, i64 %idxprom288
  %160 = load i32* %arrayidx289, align 4
  %161 = load i32* %score, align 4
  %add290 = add nsw i32 %161, %160
  store i32 %add290, i32* %score, align 4
  %162 = load i32* %i, align 4
  %call291 = call i32 @s_rook_mobility(i32 %162)
  %163 = load i32* %score, align 4
  %add292 = add nsw i32 %163, %call291
  store i32 %add292, i32* %score, align 4
  %164 = load i32* %wr, align 4
  %inc293 = add nsw i32 %164, 1
  store i32 %inc293, i32* %wr, align 4
  br label %sw.epilog

sw.bb294:                                         ; preds = %if.end64
  %165 = load i32* %i, align 4
  %idxprom295 = sext i32 %165 to i64
  %bitcast506 = bitcast [144 x i32]* @scentral to i8*
  %bitcast507 = bitcast [144 x i32]* getelementptr inbounds ([144 x i32]* @scentral, i32 1) to i8*
  %arrayidx296 = getelementptr inbounds [144 x i32]* @scentral, i32 0, i64 %idxprom295
  %166 = load i32* %arrayidx296, align 4
  %167 = load i32* %score, align 4
  %sub297 = sub nsw i32 %167, %166
  store i32 %sub297, i32* %score, align 4
  %168 = load i32* %i, align 4
  %call298 = call i32 @s_rook_mobility(i32 %168)
  %169 = load i32* %score, align 4
  %sub299 = sub nsw i32 %169, %call298
  store i32 %sub299, i32* %score, align 4
  %170 = load i32* %br, align 4
  %inc300 = add nsw i32 %170, 1
  store i32 %inc300, i32* %br, align 4
  br label %sw.epilog

sw.bb301:                                         ; preds = %if.end64
  %171 = load i32* %i, align 4
  %idxprom302 = sext i32 %171 to i64
  %bitcast508 = bitcast [144 x i32]* @scentral to i8*
  %bitcast509 = bitcast [144 x i32]* getelementptr inbounds ([144 x i32]* @scentral, i32 1) to i8*
  %arrayidx303 = getelementptr inbounds [144 x i32]* @scentral, i32 0, i64 %idxprom302
  %172 = load i32* %arrayidx303, align 4
  %173 = load i32* %score, align 4
  %add304 = add nsw i32 %173, %172
  store i32 %add304, i32* %score, align 4
  %174 = load i32* %i, align 4
  %call305 = call i32 @s_bishop_mobility(i32 %174)
  %175 = load i32* %score, align 4
  %add306 = add nsw i32 %175, %call305
  store i32 %add306, i32* %score, align 4
  %176 = load i32* %wb, align 4
  %tobool307 = icmp ne i32 %176, 0
  br i1 %tobool307, label %if.then308, label %if.end314

if.then308:                                       ; preds = %sw.bb301
  %177 = load i32* %i, align 4
  %idxprom309 = sext i32 %177 to i64
  %arrayidx310 = getelementptr inbounds [144 x i32]* @sqcolor, i32 0, i64 %idxprom309
  %178 = load i32* %arrayidx310, align 4
  %179 = load i32* %wbc, align 4
  %cmp311 = icmp ne i32 %178, %179
  br i1 %cmp311, label %if.then312, label %if.end313

if.then312:                                       ; preds = %if.then308
  store i32 99, i32* %wb, align 4
  br label %if.end313

if.end313:                                        ; preds = %if.then312, %if.then308
  br label %if.end314

if.end314:                                        ; preds = %if.end313, %sw.bb301
  %180 = load i32* %wb, align 4
  %inc315 = add nsw i32 %180, 1
  store i32 %inc315, i32* %wb, align 4
  %181 = load i32* %i, align 4
  %idxprom316 = sext i32 %181 to i64
  %arrayidx317 = getelementptr inbounds [144 x i32]* @sqcolor, i32 0, i64 %idxprom316
  %182 = load i32* %arrayidx317, align 4
  store i32 %182, i32* %wbc, align 4
  br label %sw.epilog

sw.bb318:                                         ; preds = %if.end64
  %183 = load i32* %i, align 4
  %idxprom319 = sext i32 %183 to i64
  %bitcast510 = bitcast [144 x i32]* @scentral to i8*
  %bitcast511 = bitcast [144 x i32]* getelementptr inbounds ([144 x i32]* @scentral, i32 1) to i8*
  %arrayidx320 = getelementptr inbounds [144 x i32]* @scentral, i32 0, i64 %idxprom319
  %184 = load i32* %arrayidx320, align 4
  %185 = load i32* %score, align 4
  %sub321 = sub nsw i32 %185, %184
  store i32 %sub321, i32* %score, align 4
  %186 = load i32* %i, align 4
  %call322 = call i32 @s_bishop_mobility(i32 %186)
  %187 = load i32* %score, align 4
  %sub323 = sub nsw i32 %187, %call322
  store i32 %sub323, i32* %score, align 4
  %188 = load i32* %bb, align 4
  %tobool324 = icmp ne i32 %188, 0
  br i1 %tobool324, label %if.then325, label %if.end331

if.then325:                                       ; preds = %sw.bb318
  %189 = load i32* %i, align 4
  %idxprom326 = sext i32 %189 to i64
  %arrayidx327 = getelementptr inbounds [144 x i32]* @sqcolor, i32 0, i64 %idxprom326
  %190 = load i32* %arrayidx327, align 4
  %191 = load i32* %bbc, align 4
  %cmp328 = icmp ne i32 %190, %191
  br i1 %cmp328, label %if.then329, label %if.end330

if.then329:                                       ; preds = %if.then325
  store i32 99, i32* %bb, align 4
  br label %if.end330

if.end330:                                        ; preds = %if.then329, %if.then325
  br label %if.end331

if.end331:                                        ; preds = %if.end330, %sw.bb318
  %192 = load i32* %bb, align 4
  %inc332 = add nsw i32 %192, 1
  store i32 %inc332, i32* %bb, align 4
  %193 = load i32* %i, align 4
  %idxprom333 = sext i32 %193 to i64
  %arrayidx334 = getelementptr inbounds [144 x i32]* @sqcolor, i32 0, i64 %idxprom333
  %194 = load i32* %arrayidx334, align 4
  store i32 %194, i32* %bbc, align 4
  br label %sw.epilog

sw.bb335:                                         ; preds = %if.end64
  %195 = load i32* %i, align 4
  %idxprom336 = sext i32 %195 to i64
  %bitcast512 = bitcast [144 x i32]* @scentral to i8*
  %bitcast513 = bitcast [144 x i32]* getelementptr inbounds ([144 x i32]* @scentral, i32 1) to i8*
  %arrayidx337 = getelementptr inbounds [144 x i32]* @scentral, i32 0, i64 %idxprom336
  %196 = load i32* %arrayidx337, align 4
  %197 = load i32* %score, align 4
  %add338 = add nsw i32 %197, %196
  store i32 %add338, i32* %score, align 4
  %198 = load i32* %i, align 4
  %call339 = call i32 @s_knight_mobility(i32 %198)
  %199 = load i32* %score, align 4
  %add340 = add nsw i32 %199, %call339
  store i32 %add340, i32* %score, align 4
  %200 = load i32* %wn, align 4
  %inc341 = add nsw i32 %200, 1
  store i32 %inc341, i32* %wn, align 4
  br label %sw.epilog

sw.bb342:                                         ; preds = %if.end64
  %201 = load i32* %i, align 4
  %idxprom343 = sext i32 %201 to i64
  %bitcast514 = bitcast [144 x i32]* @scentral to i8*
  %bitcast515 = bitcast [144 x i32]* getelementptr inbounds ([144 x i32]* @scentral, i32 1) to i8*
  %arrayidx344 = getelementptr inbounds [144 x i32]* @scentral, i32 0, i64 %idxprom343
  %202 = load i32* %arrayidx344, align 4
  %203 = load i32* %score, align 4
  %sub345 = sub nsw i32 %203, %202
  store i32 %sub345, i32* %score, align 4
  %204 = load i32* %i, align 4
  %call346 = call i32 @s_knight_mobility(i32 %204)
  %205 = load i32* %score, align 4
  %sub347 = sub nsw i32 %205, %call346
  store i32 %sub347, i32* %score, align 4
  %206 = load i32* %bn, align 4
  %inc348 = add nsw i32 %206, 1
  store i32 %inc348, i32* %bn, align 4
  br label %sw.epilog

sw.bb349:                                         ; preds = %if.end64
  %207 = load i32* %i, align 4
  %idxprom350 = sext i32 %207 to i64
  %bitcast516 = bitcast [144 x i32]* @scentral to i8*
  %bitcast517 = bitcast [144 x i32]* getelementptr inbounds ([144 x i32]* @scentral, i32 1) to i8*
  %arrayidx351 = getelementptr inbounds [144 x i32]* @scentral, i32 0, i64 %idxprom350
  %208 = load i32* %arrayidx351, align 4
  %209 = load i32* %score, align 4
  %add352 = add nsw i32 %209, %208
  store i32 %add352, i32* %score, align 4
  %210 = load i32* %i, align 4
  %call353 = call i32 @s_rook_mobility(i32 %210)
  %211 = load i32* %score, align 4
  %add354 = add nsw i32 %211, %call353
  store i32 %add354, i32* %score, align 4
  %212 = load i32* %i, align 4
  %call355 = call i32 @s_bishop_mobility(i32 %212)
  %213 = load i32* %score, align 4
  %add356 = add nsw i32 %213, %call355
  store i32 %add356, i32* %score, align 4
  br label %sw.epilog

sw.bb357:                                         ; preds = %if.end64
  %214 = load i32* %i, align 4
  %idxprom358 = sext i32 %214 to i64
  %bitcast518 = bitcast [144 x i32]* @scentral to i8*
  %bitcast519 = bitcast [144 x i32]* getelementptr inbounds ([144 x i32]* @scentral, i32 1) to i8*
  %arrayidx359 = getelementptr inbounds [144 x i32]* @scentral, i32 0, i64 %idxprom358
  %215 = load i32* %arrayidx359, align 4
  %216 = load i32* %score, align 4
  %sub360 = sub nsw i32 %216, %215
  store i32 %sub360, i32* %score, align 4
  %217 = load i32* %i, align 4
  %call361 = call i32 @s_rook_mobility(i32 %217)
  %218 = load i32* %score, align 4
  %sub362 = sub nsw i32 %218, %call361
  store i32 %sub362, i32* %score, align 4
  %219 = load i32* %i, align 4
  %call363 = call i32 @s_bishop_mobility(i32 %219)
  %220 = load i32* %score, align 4
  %sub364 = sub nsw i32 %220, %call363
  store i32 %sub364, i32* %score, align 4
  br label %sw.epilog

sw.bb365:                                         ; preds = %if.end64
  %221 = load i32* %i, align 4
  %idxprom366 = sext i32 %221 to i64
  %bitcast520 = bitcast [144 x i32]* @scentral to i8*
  %bitcast521 = bitcast [144 x i32]* getelementptr inbounds ([144 x i32]* @scentral, i32 1) to i8*
  %arrayidx367 = getelementptr inbounds [144 x i32]* @scentral, i32 0, i64 %idxprom366
  %222 = load i32* %arrayidx367, align 4
  %shr = ashr i32 %222, 1
  %223 = load i32* %score, align 4
  %add368 = add nsw i32 %223, %shr
  store i32 %add368, i32* %score, align 4
  %224 = load i32* %i, align 4
  %call369 = call i32 @s_king_mobility(i32 %224)
  %225 = load i32* %score, align 4
  %add370 = add nsw i32 %225, %call369
  store i32 %add370, i32* %score, align 4
  %226 = load i32* %wk, align 4
  %inc371 = add nsw i32 %226, 1
  store i32 %inc371, i32* %wk, align 4
  br label %sw.epilog

sw.bb372:                                         ; preds = %if.end64
  %227 = load i32* %i, align 4
  %idxprom373 = sext i32 %227 to i64
  %bitcast522 = bitcast [144 x i32]* @scentral to i8*
  %bitcast523 = bitcast [144 x i32]* getelementptr inbounds ([144 x i32]* @scentral, i32 1) to i8*
  %arrayidx374 = getelementptr inbounds [144 x i32]* @scentral, i32 0, i64 %idxprom373
  %228 = load i32* %arrayidx374, align 4
  %shr375 = ashr i32 %228, 1
  %229 = load i32* %score, align 4
  %sub376 = sub nsw i32 %229, %shr375
  store i32 %sub376, i32* %score, align 4
  %230 = load i32* %i, align 4
  %call377 = call i32 @s_king_mobility(i32 %230)
  %231 = load i32* %score, align 4
  %sub378 = sub nsw i32 %231, %call377
  store i32 %sub378, i32* %score, align 4
  %232 = load i32* %bk, align 4
  %inc379 = add nsw i32 %232, 1
  store i32 %inc379, i32* %bk, align 4
  br label %sw.epilog

sw.epilog:                                        ; preds = %sw.bb372, %sw.bb365, %sw.bb357, %sw.bb349, %sw.bb342, %sw.bb335, %if.end331, %if.end314, %sw.bb294, %sw.bb287, %if.end286, %if.end176, %if.end64
  br label %for.inc380

for.inc380:                                       ; preds = %sw.epilog, %if.then61
  %233 = load i32* %j, align 4
  %inc381 = add nsw i32 %233, 1
  store i32 %inc381, i32* %j, align 4
  br label %for.cond55

for.end382:                                       ; preds = %for.cond55
  %234 = load i32* %wb, align 4
  %cmp383 = icmp slt i32 %234, 99
  br i1 %cmp383, label %land.lhs.true384, label %if.end396

land.lhs.true384:                                 ; preds = %for.end382
  %235 = load i32* %bb, align 4
  %cmp385 = icmp slt i32 %235, 99
  br i1 %cmp385, label %land.lhs.true386, label %if.end396

land.lhs.true386:                                 ; preds = %land.lhs.true384
  %236 = load i32* %wbc, align 4
  %237 = load i32* %bbc, align 4
  %cmp387 = icmp ne i32 %236, %237
  br i1 %cmp387, label %land.lhs.true388, label %if.end396

land.lhs.true388:                                 ; preds = %land.lhs.true386
  %238 = load i32* @piece_count, align 4
  %cmp389 = icmp slt i32 %238, 32
  br i1 %cmp389, label %if.then390, label %if.end396

if.then390:                                       ; preds = %land.lhs.true388
  %239 = load i32* %score, align 4
  %conv = sitofp i32 %239 to float
  %240 = load i32* @piece_count, align 4
  %conv391 = sitofp i32 %240 to float
  %conv392 = fpext float %conv391 to double
  %div = fdiv double %conv392, 3.200000e+01
  %conv393 = fptrunc double %div to float
  %mul394 = fmul float %conv, %conv393
  %conv395 = fptosi float %mul394 to i32
  store i32 %conv395, i32* %score, align 4
  br label %if.end396

if.end396:                                        ; preds = %if.then390, %land.lhs.true388, %land.lhs.true386, %land.lhs.true384, %for.end382
  %241 = load i32* %score, align 4
  call void @storeECache(i32 %241)
  %242 = load i32* @white_to_move, align 4
  %cmp397 = icmp eq i32 %242, 1
  br i1 %cmp397, label %if.then399, label %if.else400

if.then399:                                       ; preds = %if.end396
  %243 = load i32* %score, align 4
  store i32 %243, i32* %retval
  br label %return

if.else400:                                       ; preds = %if.end396
  %244 = load i32* %score, align 4
  %sub401 = sub nsw i32 0, %244
  store i32 %sub401, i32* %retval
  br label %return

return:                                           ; preds = %if.else400, %if.then399, %if.end, %if.then1
  %245 = load i32* %retval
  ret i32 %245
}

; Function Attrs: nounwind uwtable
define internal i32 @s_pawn_mobility(i32 %square) #0 {
entry:
  %square.addr = alloca i32, align 4
  %square.addr12 = bitcast i32* %square.addr to i32*
  %bitcast = bitcast i32* %square.addr to i8*
  %mtmp = getelementptr i32* %square.addr12, i32 1
  %bitcast13 = bitcast i32* %mtmp to i8*
  %m = alloca i32, align 4
  %m14 = bitcast i32* %m to i32*
  %bitcast15 = bitcast i32* %m to i8*
  %mtmp16 = getelementptr i32* %m14, i32 1
  %bitcast17 = bitcast i32* %mtmp16 to i8*
  store i32 %square, i32* %square.addr, align 4
  store i32 0, i32* %m, align 4
  %0 = load i32* %square.addr, align 4
  %idxprom = sext i32 %0 to i64
  %arrayidx = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom
  %1 = load i32* %arrayidx, align 4
  %cmp = icmp eq i32 %1, 1
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  %2 = load i32* %square.addr, align 4
  %add = add nsw i32 %2, 12
  %idxprom1 = sext i32 %add to i64
  %arrayidx2 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom1
  %3 = load i32* %arrayidx2, align 4
  %cmp3 = icmp eq i32 %3, 13
  br i1 %cmp3, label %if.then4, label %if.end

if.then4:                                         ; preds = %if.then
  %4 = load i32* %m, align 4
  %inc = add nsw i32 %4, 1
  store i32 %inc, i32* %m, align 4
  br label %if.end

if.end:                                           ; preds = %if.then4, %if.then
  br label %if.end11

if.else:                                          ; preds = %entry
  %5 = load i32* %square.addr, align 4
  %sub = sub nsw i32 %5, 12
  %idxprom5 = sext i32 %sub to i64
  %arrayidx6 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom5
  %6 = load i32* %arrayidx6, align 4
  %cmp7 = icmp eq i32 %6, 13
  br i1 %cmp7, label %if.then8, label %if.end10

if.then8:                                         ; preds = %if.else
  %7 = load i32* %m, align 4
  %inc9 = add nsw i32 %7, 1
  store i32 %inc9, i32* %m, align 4
  br label %if.end10

if.end10:                                         ; preds = %if.then8, %if.else
  br label %if.end11

if.end11:                                         ; preds = %if.end10, %if.end
  %8 = load i32* %m, align 4
  %shl = shl i32 %8, 3
  ret i32 %shl
}

; Function Attrs: nounwind uwtable
define internal i32 @black_saccers(i32 %square) #0 {
entry:
  %retval = alloca i32, align 4
  %retval66 = bitcast i32* %retval to i32*
  %bitcast = bitcast i32* %retval to i8*
  %mtmp = getelementptr i32* %retval66, i32 1
  %bitcast67 = bitcast i32* %mtmp to i8*
  %square.addr = alloca i32, align 4
  %square.addr68 = bitcast i32* %square.addr to i32*
  %bitcast69 = bitcast i32* %square.addr to i8*
  %mtmp70 = getelementptr i32* %square.addr68, i32 1
  %bitcast71 = bitcast i32* %mtmp70 to i8*
  %f = alloca i32, align 4
  %f72 = bitcast i32* %f to i32*
  %bitcast73 = bitcast i32* %f to i8*
  %mtmp74 = getelementptr i32* %f72, i32 1
  %bitcast75 = bitcast i32* %mtmp74 to i8*
  store i32 %square, i32* %square.addr, align 4
  store i32 0, i32* %f, align 4
  %0 = load i32* %square.addr, align 4
  %add = add nsw i32 %0, 24
  %idxprom = sext i32 %add to i64
  %arrayidx = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom
  %1 = load i32* %arrayidx, align 4
  %cmp = icmp eq i32 %1, 2
  br i1 %cmp, label %if.then, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %entry
  %2 = load i32* %square.addr, align 4
  %add1 = add nsw i32 %2, 22
  %idxprom2 = sext i32 %add1 to i64
  %arrayidx3 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom2
  %3 = load i32* %arrayidx3, align 4
  %cmp4 = icmp eq i32 %3, 2
  br i1 %cmp4, label %if.then, label %lor.lhs.false5

lor.lhs.false5:                                   ; preds = %lor.lhs.false
  %4 = load i32* %square.addr, align 4
  %add6 = add nsw i32 %4, 26
  %idxprom7 = sext i32 %add6 to i64
  %arrayidx8 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom7
  %5 = load i32* %arrayidx8, align 4
  %cmp9 = icmp eq i32 %5, 2
  br i1 %cmp9, label %if.then, label %if.end

if.then:                                          ; preds = %lor.lhs.false5, %lor.lhs.false, %entry
  store i32 0, i32* %retval
  br label %return

if.end:                                           ; preds = %lor.lhs.false5
  %6 = load i32* %square.addr, align 4
  %idxprom10 = sext i32 %6 to i64
  %arrayidx11 = getelementptr inbounds [144 x i32]* @Xrank, i32 0, i64 %idxprom10
  %7 = load i32* %arrayidx11, align 4
  %cmp12 = icmp slt i32 %7, 6
  br i1 %cmp12, label %land.lhs.true, label %if.else

land.lhs.true:                                    ; preds = %if.end
  %8 = load i32* %square.addr, align 4
  %add13 = add nsw i32 %8, 25
  %idxprom14 = sext i32 %add13 to i64
  %arrayidx15 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom14
  %9 = load i32* %arrayidx15, align 4
  %cmp16 = icmp eq i32 %9, 2
  br i1 %cmp16, label %if.then22, label %lor.lhs.false17

lor.lhs.false17:                                  ; preds = %land.lhs.true
  %10 = load i32* %square.addr, align 4
  %add18 = add nsw i32 %10, 23
  %idxprom19 = sext i32 %add18 to i64
  %arrayidx20 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom19
  %11 = load i32* %arrayidx20, align 4
  %cmp21 = icmp eq i32 %11, 2
  br i1 %cmp21, label %if.then22, label %if.else

if.then22:                                        ; preds = %lor.lhs.false17, %land.lhs.true
  store i32 1, i32* %f, align 4
  br label %if.end38

if.else:                                          ; preds = %lor.lhs.false17, %if.end
  %12 = load i32* %square.addr, align 4
  %idxprom23 = sext i32 %12 to i64
  %arrayidx24 = getelementptr inbounds [144 x i32]* @Xrank, i32 0, i64 %idxprom23
  %13 = load i32* %arrayidx24, align 4
  %cmp25 = icmp eq i32 %13, 4
  br i1 %cmp25, label %land.lhs.true26, label %if.end37

land.lhs.true26:                                  ; preds = %if.else
  %14 = load i32* %square.addr, align 4
  %add27 = add nsw i32 %14, 35
  %idxprom28 = sext i32 %add27 to i64
  %arrayidx29 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom28
  %15 = load i32* %arrayidx29, align 4
  %cmp30 = icmp eq i32 %15, 2
  br i1 %cmp30, label %if.then36, label %lor.lhs.false31

lor.lhs.false31:                                  ; preds = %land.lhs.true26
  %16 = load i32* %square.addr, align 4
  %add32 = add nsw i32 %16, 37
  %idxprom33 = sext i32 %add32 to i64
  %arrayidx34 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom33
  %17 = load i32* %arrayidx34, align 4
  %cmp35 = icmp eq i32 %17, 2
  br i1 %cmp35, label %if.then36, label %if.end37

if.then36:                                        ; preds = %lor.lhs.false31, %land.lhs.true26
  store i32 1, i32* %f, align 4
  br label %if.end37

if.end37:                                         ; preds = %if.then36, %lor.lhs.false31, %if.else
  br label %if.end38

if.end38:                                         ; preds = %if.end37, %if.then22
  %18 = load i32* %f, align 4
  %tobool = icmp ne i32 %18, 0
  br i1 %tobool, label %if.end42, label %if.then39

if.then39:                                        ; preds = %if.end38
  %19 = load i32* %square.addr, align 4
  %add40 = add nsw i32 %19, 11
  %call = call i32 @is_attacked(i32 %add40, i32 0)
  %tobool41 = icmp ne i32 %call, 0
  %cond = select i1 %tobool41, i32 1, i32 0
  store i32 %cond, i32* %f, align 4
  br label %if.end42

if.end42:                                         ; preds = %if.then39, %if.end38
  %20 = load i32* %f, align 4
  %tobool43 = icmp ne i32 %20, 0
  br i1 %tobool43, label %if.end49, label %if.then44

if.then44:                                        ; preds = %if.end42
  %21 = load i32* %square.addr, align 4
  %add45 = add nsw i32 %21, 13
  %call46 = call i32 @is_attacked(i32 %add45, i32 0)
  %tobool47 = icmp ne i32 %call46, 0
  %cond48 = select i1 %tobool47, i32 2, i32 0
  store i32 %cond48, i32* %f, align 4
  br label %if.end49

if.end49:                                         ; preds = %if.then44, %if.end42
  %22 = load i32* %f, align 4
  %tobool50 = icmp ne i32 %22, 0
  br i1 %tobool50, label %if.else52, label %if.then51

if.then51:                                        ; preds = %if.end49
  store i32 0, i32* %retval
  br label %return

if.else52:                                        ; preds = %if.end49
  %23 = load i32* %f, align 4
  %cmp53 = icmp eq i32 %23, 1
  br i1 %cmp53, label %if.then54, label %if.else60

if.then54:                                        ; preds = %if.else52
  %24 = load i32* %square.addr, align 4
  %add55 = add nsw i32 %24, 11
  %call56 = call i32 @calc_attackers(i32 %add55, i32 0)
  %cmp57 = icmp sgt i32 %call56, 1
  br i1 %cmp57, label %if.then58, label %if.else59

if.then58:                                        ; preds = %if.then54
  store i32 0, i32* %retval
  br label %return

if.else59:                                        ; preds = %if.then54
  store i32 30, i32* %retval
  br label %return

if.else60:                                        ; preds = %if.else52
  %25 = load i32* %square.addr, align 4
  %add61 = add nsw i32 %25, 13
  %call62 = call i32 @calc_attackers(i32 %add61, i32 0)
  %cmp63 = icmp sgt i32 %call62, 1
  br i1 %cmp63, label %if.then64, label %if.else65

if.then64:                                        ; preds = %if.else60
  store i32 0, i32* %retval
  br label %return

if.else65:                                        ; preds = %if.else60
  store i32 30, i32* %retval
  br label %return

return:                                           ; preds = %if.else65, %if.then64, %if.else59, %if.then58, %if.then51, %if.then
  %26 = load i32* %retval
  ret i32 %26
}

; Function Attrs: nounwind uwtable
define internal i32 @white_saccers(i32 %square) #0 {
entry:
  %retval = alloca i32, align 4
  %retval66 = bitcast i32* %retval to i32*
  %bitcast = bitcast i32* %retval to i8*
  %mtmp = getelementptr i32* %retval66, i32 1
  %bitcast67 = bitcast i32* %mtmp to i8*
  %square.addr = alloca i32, align 4
  %square.addr68 = bitcast i32* %square.addr to i32*
  %bitcast69 = bitcast i32* %square.addr to i8*
  %mtmp70 = getelementptr i32* %square.addr68, i32 1
  %bitcast71 = bitcast i32* %mtmp70 to i8*
  %f = alloca i32, align 4
  %f72 = bitcast i32* %f to i32*
  %bitcast73 = bitcast i32* %f to i8*
  %mtmp74 = getelementptr i32* %f72, i32 1
  %bitcast75 = bitcast i32* %mtmp74 to i8*
  store i32 %square, i32* %square.addr, align 4
  store i32 0, i32* %f, align 4
  %0 = load i32* %square.addr, align 4
  %sub = sub nsw i32 %0, 24
  %idxprom = sext i32 %sub to i64
  %arrayidx = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom
  %1 = load i32* %arrayidx, align 4
  %cmp = icmp eq i32 %1, 1
  br i1 %cmp, label %if.then, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %entry
  %2 = load i32* %square.addr, align 4
  %sub1 = sub nsw i32 %2, 22
  %idxprom2 = sext i32 %sub1 to i64
  %arrayidx3 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom2
  %3 = load i32* %arrayidx3, align 4
  %cmp4 = icmp eq i32 %3, 1
  br i1 %cmp4, label %if.then, label %lor.lhs.false5

lor.lhs.false5:                                   ; preds = %lor.lhs.false
  %4 = load i32* %square.addr, align 4
  %sub6 = sub nsw i32 %4, 26
  %idxprom7 = sext i32 %sub6 to i64
  %arrayidx8 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom7
  %5 = load i32* %arrayidx8, align 4
  %cmp9 = icmp eq i32 %5, 1
  br i1 %cmp9, label %if.then, label %if.end

if.then:                                          ; preds = %lor.lhs.false5, %lor.lhs.false, %entry
  store i32 0, i32* %retval
  br label %return

if.end:                                           ; preds = %lor.lhs.false5
  %6 = load i32* %square.addr, align 4
  %idxprom10 = sext i32 %6 to i64
  %arrayidx11 = getelementptr inbounds [144 x i32]* @Xrank, i32 0, i64 %idxprom10
  %7 = load i32* %arrayidx11, align 4
  %cmp12 = icmp sgt i32 %7, 3
  br i1 %cmp12, label %land.lhs.true, label %if.else

land.lhs.true:                                    ; preds = %if.end
  %8 = load i32* %square.addr, align 4
  %sub13 = sub nsw i32 %8, 25
  %idxprom14 = sext i32 %sub13 to i64
  %arrayidx15 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom14
  %9 = load i32* %arrayidx15, align 4
  %cmp16 = icmp eq i32 %9, 1
  br i1 %cmp16, label %if.then22, label %lor.lhs.false17

lor.lhs.false17:                                  ; preds = %land.lhs.true
  %10 = load i32* %square.addr, align 4
  %sub18 = sub nsw i32 %10, 23
  %idxprom19 = sext i32 %sub18 to i64
  %arrayidx20 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom19
  %11 = load i32* %arrayidx20, align 4
  %cmp21 = icmp eq i32 %11, 1
  br i1 %cmp21, label %if.then22, label %if.else

if.then22:                                        ; preds = %lor.lhs.false17, %land.lhs.true
  store i32 1, i32* %f, align 4
  br label %if.end38

if.else:                                          ; preds = %lor.lhs.false17, %if.end
  %12 = load i32* %square.addr, align 4
  %idxprom23 = sext i32 %12 to i64
  %arrayidx24 = getelementptr inbounds [144 x i32]* @Xrank, i32 0, i64 %idxprom23
  %13 = load i32* %arrayidx24, align 4
  %cmp25 = icmp eq i32 %13, 5
  br i1 %cmp25, label %land.lhs.true26, label %if.end37

land.lhs.true26:                                  ; preds = %if.else
  %14 = load i32* %square.addr, align 4
  %sub27 = sub nsw i32 %14, 35
  %idxprom28 = sext i32 %sub27 to i64
  %arrayidx29 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom28
  %15 = load i32* %arrayidx29, align 4
  %cmp30 = icmp eq i32 %15, 1
  br i1 %cmp30, label %if.then36, label %lor.lhs.false31

lor.lhs.false31:                                  ; preds = %land.lhs.true26
  %16 = load i32* %square.addr, align 4
  %sub32 = sub nsw i32 %16, 37
  %idxprom33 = sext i32 %sub32 to i64
  %arrayidx34 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom33
  %17 = load i32* %arrayidx34, align 4
  %cmp35 = icmp eq i32 %17, 1
  br i1 %cmp35, label %if.then36, label %if.end37

if.then36:                                        ; preds = %lor.lhs.false31, %land.lhs.true26
  store i32 1, i32* %f, align 4
  br label %if.end37

if.end37:                                         ; preds = %if.then36, %lor.lhs.false31, %if.else
  br label %if.end38

if.end38:                                         ; preds = %if.end37, %if.then22
  %18 = load i32* %f, align 4
  %tobool = icmp ne i32 %18, 0
  br i1 %tobool, label %if.end42, label %if.then39

if.then39:                                        ; preds = %if.end38
  %19 = load i32* %square.addr, align 4
  %sub40 = sub nsw i32 %19, 11
  %call = call i32 @is_attacked(i32 %sub40, i32 1)
  %tobool41 = icmp ne i32 %call, 0
  %cond = select i1 %tobool41, i32 1, i32 0
  store i32 %cond, i32* %f, align 4
  br label %if.end42

if.end42:                                         ; preds = %if.then39, %if.end38
  %20 = load i32* %f, align 4
  %tobool43 = icmp ne i32 %20, 0
  br i1 %tobool43, label %if.end49, label %if.then44

if.then44:                                        ; preds = %if.end42
  %21 = load i32* %square.addr, align 4
  %sub45 = sub nsw i32 %21, 13
  %call46 = call i32 @is_attacked(i32 %sub45, i32 1)
  %tobool47 = icmp ne i32 %call46, 0
  %cond48 = select i1 %tobool47, i32 2, i32 0
  store i32 %cond48, i32* %f, align 4
  br label %if.end49

if.end49:                                         ; preds = %if.then44, %if.end42
  %22 = load i32* %f, align 4
  %tobool50 = icmp ne i32 %22, 0
  br i1 %tobool50, label %if.else52, label %if.then51

if.then51:                                        ; preds = %if.end49
  store i32 0, i32* %retval
  br label %return

if.else52:                                        ; preds = %if.end49
  %23 = load i32* %f, align 4
  %cmp53 = icmp eq i32 %23, 1
  br i1 %cmp53, label %if.then54, label %if.else60

if.then54:                                        ; preds = %if.else52
  %24 = load i32* %square.addr, align 4
  %sub55 = sub nsw i32 %24, 11
  %call56 = call i32 @calc_attackers(i32 %sub55, i32 1)
  %cmp57 = icmp sgt i32 %call56, 1
  br i1 %cmp57, label %if.then58, label %if.else59

if.then58:                                        ; preds = %if.then54
  store i32 0, i32* %retval
  br label %return

if.else59:                                        ; preds = %if.then54
  store i32 30, i32* %retval
  br label %return

if.else60:                                        ; preds = %if.else52
  %25 = load i32* %square.addr, align 4
  %sub61 = sub nsw i32 %25, 13
  %call62 = call i32 @calc_attackers(i32 %sub61, i32 1)
  %cmp63 = icmp sgt i32 %call62, 1
  br i1 %cmp63, label %if.then64, label %if.else65

if.then64:                                        ; preds = %if.else60
  store i32 0, i32* %retval
  br label %return

if.else65:                                        ; preds = %if.else60
  store i32 30, i32* %retval
  br label %return

return:                                           ; preds = %if.else65, %if.then64, %if.else59, %if.then58, %if.then51, %if.then
  %26 = load i32* %retval
  ret i32 %26
}

; Function Attrs: nounwind uwtable
define internal i32 @s_rook_mobility(i32 %square) #0 {
entry:
  %square.addr = alloca i32, align 4
  %square.addr31 = bitcast i32* %square.addr to i32*
  %bitcast = bitcast i32* %square.addr to i8*
  %mtmp = getelementptr i32* %square.addr31, i32 1
  %bitcast32 = bitcast i32* %mtmp to i8*
  %l = alloca i32, align 4
  %l33 = bitcast i32* %l to i32*
  %bitcast34 = bitcast i32* %l to i8*
  %mtmp35 = getelementptr i32* %l33, i32 1
  %bitcast36 = bitcast i32* %mtmp35 to i8*
  %m = alloca i32, align 4
  %m37 = bitcast i32* %m to i32*
  %bitcast38 = bitcast i32* %m to i8*
  %mtmp39 = getelementptr i32* %m37, i32 1
  %bitcast40 = bitcast i32* %mtmp39 to i8*
  store i32 %square, i32* %square.addr, align 4
  store i32 0, i32* %m, align 4
  %0 = load i32* %square.addr, align 4
  %sub = sub nsw i32 %0, 12
  store i32 %sub, i32* %l, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %1 = load i32* %l, align 4
  %idxprom = sext i32 %1 to i64
  %arrayidx = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom
  %2 = load i32* %arrayidx, align 4
  %cmp = icmp eq i32 %2, 13
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %3 = load i32* %m, align 4
  %inc = add nsw i32 %3, 1
  store i32 %inc, i32* %m, align 4
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %4 = load i32* %l, align 4
  %sub1 = sub nsw i32 %4, 12
  store i32 %sub1, i32* %l, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %5 = load i32* %square.addr, align 4
  %sub2 = sub nsw i32 %5, 1
  store i32 %sub2, i32* %l, align 4
  br label %for.cond3

for.cond3:                                        ; preds = %for.inc9, %for.end
  %6 = load i32* %l, align 4
  %idxprom4 = sext i32 %6 to i64
  %arrayidx5 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom4
  %7 = load i32* %arrayidx5, align 4
  %cmp6 = icmp eq i32 %7, 13
  br i1 %cmp6, label %for.body7, label %for.end11

for.body7:                                        ; preds = %for.cond3
  %8 = load i32* %m, align 4
  %inc8 = add nsw i32 %8, 1
  store i32 %inc8, i32* %m, align 4
  br label %for.inc9

for.inc9:                                         ; preds = %for.body7
  %9 = load i32* %l, align 4
  %sub10 = sub nsw i32 %9, 1
  store i32 %sub10, i32* %l, align 4
  br label %for.cond3

for.end11:                                        ; preds = %for.cond3
  %10 = load i32* %square.addr, align 4
  %add = add nsw i32 %10, 1
  store i32 %add, i32* %l, align 4
  br label %for.cond12

for.cond12:                                       ; preds = %for.inc18, %for.end11
  %11 = load i32* %l, align 4
  %idxprom13 = sext i32 %11 to i64
  %arrayidx14 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom13
  %12 = load i32* %arrayidx14, align 4
  %cmp15 = icmp eq i32 %12, 13
  br i1 %cmp15, label %for.body16, label %for.end20

for.body16:                                       ; preds = %for.cond12
  %13 = load i32* %m, align 4
  %inc17 = add nsw i32 %13, 1
  store i32 %inc17, i32* %m, align 4
  br label %for.inc18

for.inc18:                                        ; preds = %for.body16
  %14 = load i32* %l, align 4
  %add19 = add nsw i32 %14, 1
  store i32 %add19, i32* %l, align 4
  br label %for.cond12

for.end20:                                        ; preds = %for.cond12
  %15 = load i32* %square.addr, align 4
  %add21 = add nsw i32 %15, 12
  store i32 %add21, i32* %l, align 4
  br label %for.cond22

for.cond22:                                       ; preds = %for.inc28, %for.end20
  %16 = load i32* %l, align 4
  %idxprom23 = sext i32 %16 to i64
  %arrayidx24 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom23
  %17 = load i32* %arrayidx24, align 4
  %cmp25 = icmp eq i32 %17, 13
  br i1 %cmp25, label %for.body26, label %for.end30

for.body26:                                       ; preds = %for.cond22
  %18 = load i32* %m, align 4
  %inc27 = add nsw i32 %18, 1
  store i32 %inc27, i32* %m, align 4
  br label %for.inc28

for.inc28:                                        ; preds = %for.body26
  %19 = load i32* %l, align 4
  %add29 = add nsw i32 %19, 12
  store i32 %add29, i32* %l, align 4
  br label %for.cond22

for.end30:                                        ; preds = %for.cond22
  %20 = load i32* %m, align 4
  %shl = shl i32 %20, 2
  ret i32 %shl
}

; Function Attrs: nounwind uwtable
define internal i32 @s_bishop_mobility(i32 %square) #0 {
entry:
  %square.addr = alloca i32, align 4
  %square.addr31 = bitcast i32* %square.addr to i32*
  %bitcast = bitcast i32* %square.addr to i8*
  %mtmp = getelementptr i32* %square.addr31, i32 1
  %bitcast32 = bitcast i32* %mtmp to i8*
  %l = alloca i32, align 4
  %l33 = bitcast i32* %l to i32*
  %bitcast34 = bitcast i32* %l to i8*
  %mtmp35 = getelementptr i32* %l33, i32 1
  %bitcast36 = bitcast i32* %mtmp35 to i8*
  %m = alloca i32, align 4
  %m37 = bitcast i32* %m to i32*
  %bitcast38 = bitcast i32* %m to i8*
  %mtmp39 = getelementptr i32* %m37, i32 1
  %bitcast40 = bitcast i32* %mtmp39 to i8*
  store i32 %square, i32* %square.addr, align 4
  store i32 0, i32* %m, align 4
  %0 = load i32* %square.addr, align 4
  %sub = sub nsw i32 %0, 13
  store i32 %sub, i32* %l, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %1 = load i32* %l, align 4
  %idxprom = sext i32 %1 to i64
  %arrayidx = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom
  %2 = load i32* %arrayidx, align 4
  %cmp = icmp eq i32 %2, 13
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %3 = load i32* %m, align 4
  %inc = add nsw i32 %3, 1
  store i32 %inc, i32* %m, align 4
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %4 = load i32* %l, align 4
  %sub1 = sub nsw i32 %4, 13
  store i32 %sub1, i32* %l, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %5 = load i32* %square.addr, align 4
  %sub2 = sub nsw i32 %5, 11
  store i32 %sub2, i32* %l, align 4
  br label %for.cond3

for.cond3:                                        ; preds = %for.inc9, %for.end
  %6 = load i32* %l, align 4
  %idxprom4 = sext i32 %6 to i64
  %arrayidx5 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom4
  %7 = load i32* %arrayidx5, align 4
  %cmp6 = icmp eq i32 %7, 13
  br i1 %cmp6, label %for.body7, label %for.end11

for.body7:                                        ; preds = %for.cond3
  %8 = load i32* %m, align 4
  %inc8 = add nsw i32 %8, 1
  store i32 %inc8, i32* %m, align 4
  br label %for.inc9

for.inc9:                                         ; preds = %for.body7
  %9 = load i32* %l, align 4
  %sub10 = sub nsw i32 %9, 11
  store i32 %sub10, i32* %l, align 4
  br label %for.cond3

for.end11:                                        ; preds = %for.cond3
  %10 = load i32* %square.addr, align 4
  %add = add nsw i32 %10, 11
  store i32 %add, i32* %l, align 4
  br label %for.cond12

for.cond12:                                       ; preds = %for.inc18, %for.end11
  %11 = load i32* %l, align 4
  %idxprom13 = sext i32 %11 to i64
  %arrayidx14 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom13
  %12 = load i32* %arrayidx14, align 4
  %cmp15 = icmp eq i32 %12, 13
  br i1 %cmp15, label %for.body16, label %for.end20

for.body16:                                       ; preds = %for.cond12
  %13 = load i32* %m, align 4
  %inc17 = add nsw i32 %13, 1
  store i32 %inc17, i32* %m, align 4
  br label %for.inc18

for.inc18:                                        ; preds = %for.body16
  %14 = load i32* %l, align 4
  %add19 = add nsw i32 %14, 11
  store i32 %add19, i32* %l, align 4
  br label %for.cond12

for.end20:                                        ; preds = %for.cond12
  %15 = load i32* %square.addr, align 4
  %add21 = add nsw i32 %15, 13
  store i32 %add21, i32* %l, align 4
  br label %for.cond22

for.cond22:                                       ; preds = %for.inc28, %for.end20
  %16 = load i32* %l, align 4
  %idxprom23 = sext i32 %16 to i64
  %arrayidx24 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom23
  %17 = load i32* %arrayidx24, align 4
  %cmp25 = icmp eq i32 %17, 13
  br i1 %cmp25, label %for.body26, label %for.end30

for.body26:                                       ; preds = %for.cond22
  %18 = load i32* %m, align 4
  %inc27 = add nsw i32 %18, 1
  store i32 %inc27, i32* %m, align 4
  br label %for.inc28

for.inc28:                                        ; preds = %for.body26
  %19 = load i32* %l, align 4
  %add29 = add nsw i32 %19, 13
  store i32 %add29, i32* %l, align 4
  br label %for.cond22

for.end30:                                        ; preds = %for.cond22
  %20 = load i32* %m, align 4
  %shl = shl i32 %20, 2
  ret i32 %shl
}

; Function Attrs: nounwind uwtable
define internal i32 @s_knight_mobility(i32 %square) #0 {
entry:
  %square.addr = alloca i32, align 4
  %square.addr5 = bitcast i32* %square.addr to i32*
  %bitcast = bitcast i32* %square.addr to i8*
  %mtmp = getelementptr i32* %square.addr5, i32 1
  %bitcast6 = bitcast i32* %mtmp to i8*
  %d = alloca i32, align 4
  %d7 = bitcast i32* %d to i32*
  %bitcast8 = bitcast i32* %d to i8*
  %mtmp9 = getelementptr i32* %d7, i32 1
  %bitcast10 = bitcast i32* %mtmp9 to i8*
  %m = alloca i32, align 4
  %m11 = bitcast i32* %m to i32*
  %bitcast12 = bitcast i32* %m to i8*
  %mtmp13 = getelementptr i32* %m11, i32 1
  %bitcast14 = bitcast i32* %mtmp13 to i8*
  store i32 %square, i32* %square.addr, align 4
  store i32 0, i32* %m, align 4
  store i32 0, i32* %d, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32* %d, align 4
  %cmp = icmp slt i32 %0, 8
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %1 = load i32* %square.addr, align 4
  %2 = load i32* %d, align 4
  %idxprom = sext i32 %2 to i64
  %bitcast15 = bitcast [8 x i32]* @knight_o to i8*
  %bitcast16 = bitcast [8 x i32]* getelementptr inbounds ([8 x i32]* @knight_o, i32 1) to i8*
  %arrayidx = getelementptr inbounds [8 x i32]* @knight_o, i32 0, i64 %idxprom
  %3 = load i32* %arrayidx, align 4
  %add = add nsw i32 %1, %3
  %idxprom1 = sext i32 %add to i64
  %arrayidx2 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom1
  %4 = load i32* %arrayidx2, align 4
  %cmp3 = icmp eq i32 %4, 13
  br i1 %cmp3, label %if.then, label %if.end

if.then:                                          ; preds = %for.body
  %5 = load i32* %m, align 4
  %inc = add nsw i32 %5, 1
  store i32 %inc, i32* %m, align 4
  br label %if.end

if.end:                                           ; preds = %if.then, %for.body
  br label %for.inc

for.inc:                                          ; preds = %if.end
  %6 = load i32* %d, align 4
  %inc4 = add nsw i32 %6, 1
  store i32 %inc4, i32* %d, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %7 = load i32* %m, align 4
  %shl = shl i32 %7, 2
  ret i32 %shl
}

; Function Attrs: nounwind uwtable
define internal i32 @s_king_mobility(i32 %square) #0 {
entry:
  %square.addr = alloca i32, align 4
  %square.addr5 = bitcast i32* %square.addr to i32*
  %bitcast = bitcast i32* %square.addr to i8*
  %mtmp = getelementptr i32* %square.addr5, i32 1
  %bitcast6 = bitcast i32* %mtmp to i8*
  %d = alloca i32, align 4
  %d7 = bitcast i32* %d to i32*
  %bitcast8 = bitcast i32* %d to i8*
  %mtmp9 = getelementptr i32* %d7, i32 1
  %bitcast10 = bitcast i32* %mtmp9 to i8*
  %m = alloca i32, align 4
  %m11 = bitcast i32* %m to i32*
  %bitcast12 = bitcast i32* %m to i8*
  %mtmp13 = getelementptr i32* %m11, i32 1
  %bitcast14 = bitcast i32* %mtmp13 to i8*
  store i32 %square, i32* %square.addr, align 4
  store i32 0, i32* %m, align 4
  store i32 0, i32* %d, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32* %d, align 4
  %cmp = icmp slt i32 %0, 8
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %1 = load i32* %square.addr, align 4
  %2 = load i32* %d, align 4
  %idxprom = sext i32 %2 to i64
  %bitcast15 = bitcast [8 x i32]* @king_o to i8*
  %bitcast16 = bitcast [8 x i32]* getelementptr inbounds ([8 x i32]* @king_o, i32 1) to i8*
  %arrayidx = getelementptr inbounds [8 x i32]* @king_o, i32 0, i64 %idxprom
  %3 = load i32* %arrayidx, align 4
  %add = add nsw i32 %1, %3
  %idxprom1 = sext i32 %add to i64
  %arrayidx2 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom1
  %4 = load i32* %arrayidx2, align 4
  %cmp3 = icmp eq i32 %4, 13
  br i1 %cmp3, label %if.then, label %if.end

if.then:                                          ; preds = %for.body
  %5 = load i32* %m, align 4
  %inc = add nsw i32 %5, 1
  store i32 %inc, i32* %m, align 4
  br label %if.end

if.end:                                           ; preds = %if.then, %for.body
  br label %for.inc

for.inc:                                          ; preds = %if.end
  %6 = load i32* %d, align 4
  %inc4 = add nsw i32 %6, 1
  store i32 %inc4, i32* %d, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %7 = load i32* %m, align 4
  %shl = shl i32 %7, 2
  ret i32 %shl
}

define i32 @softboundcets_pseudo_main(i32 %argc, i8** %argv) {
entry:
  %base.alloca171 = alloca i8*
  %bound.alloca172 = alloca i8*
  %base.alloca166 = alloca i8*
  %bound.alloca167 = alloca i8*
  %base.alloca161 = alloca i8*
  %bound.alloca162 = alloca i8*
  %base.alloca156 = alloca i8*
  %bound.alloca157 = alloca i8*
  %base.alloca147 = alloca i8*
  %bound.alloca148 = alloca i8*
  %base.alloca142 = alloca i8*
  %bound.alloca143 = alloca i8*
  %base.alloca137 = alloca i8*
  %bound.alloca138 = alloca i8*
  %base.alloca132 = alloca i8*
  %bound.alloca133 = alloca i8*
  %base.alloca125 = alloca i8*
  %bound.alloca126 = alloca i8*
  %base.alloca120 = alloca i8*
  %bound.alloca121 = alloca i8*
  %base.alloca115 = alloca i8*
  %bound.alloca116 = alloca i8*
  %base.alloca110 = alloca i8*
  %bound.alloca111 = alloca i8*
  %base.alloca105 = alloca i8*
  %bound.alloca106 = alloca i8*
  %base.alloca100 = alloca i8*
  %bound.alloca101 = alloca i8*
  %base.alloca95 = alloca i8*
  %bound.alloca96 = alloca i8*
  %base.alloca = alloca i8*
  %bound.alloca = alloca i8*
  %0 = call i8* @__softboundcets_load_base_shadow_stack(i32 1)
  %1 = call i8* @__softboundcets_load_bound_shadow_stack(i32 1)
  %retval = alloca i32, align 4
  %retval1 = bitcast i32* %retval to i32*
  %bitcast = bitcast i32* %retval to i8*
  %mtmp = getelementptr i32* %retval1, i32 1
  %bitcast2 = bitcast i32* %mtmp to i8*
  %argc.addr = alloca i32, align 4
  %argc.addr3 = bitcast i32* %argc.addr to i32*
  %bitcast4 = bitcast i32* %argc.addr to i8*
  %mtmp5 = getelementptr i32* %argc.addr3, i32 1
  %bitcast6 = bitcast i32* %mtmp5 to i8*
  %argv.addr = alloca i8**, align 8
  %argv.addr7 = bitcast i8*** %argv.addr to i8***
  %bitcast8 = bitcast i8*** %argv.addr to i8*
  %mtmp9 = getelementptr i8*** %argv.addr7, i32 1
  %bitcast10 = bitcast i8*** %mtmp9 to i8*
  %input = alloca [256 x i8], align 16
  %input11 = bitcast [256 x i8]* %input to [256 x i8]*
  %bitcast12 = bitcast [256 x i8]* %input to i8*
  %mtmp13 = getelementptr [256 x i8]* %input11, i32 1
  %bitcast14 = bitcast [256 x i8]* %mtmp13 to i8*
  %p = alloca i8*, align 8
  %p15 = bitcast i8** %p to i8**
  %bitcast16 = bitcast i8** %p to i8*
  %mtmp17 = getelementptr i8** %p15, i32 1
  %bitcast18 = bitcast i8** %mtmp17 to i8*
  %output = alloca [256 x i8], align 16
  %output19 = bitcast [256 x i8]* %output to [256 x i8]*
  %bitcast20 = bitcast [256 x i8]* %output to i8*
  %mtmp21 = getelementptr [256 x i8]* %output19, i32 1
  %bitcast22 = bitcast [256 x i8]* %mtmp21 to i8*
  %readbuff = alloca [256 x i8], align 16
  %readbuff23 = bitcast [256 x i8]* %readbuff to [256 x i8]*
  %bitcast24 = bitcast [256 x i8]* %readbuff to i8*
  %mtmp25 = getelementptr [256 x i8]* %readbuff23, i32 1
  %bitcast26 = bitcast [256 x i8]* %mtmp25 to i8*
  %move = alloca %struct.move_s, align 4
  %move27 = bitcast %struct.move_s* %move to %struct.move_s*
  %bitcast28 = bitcast %struct.move_s* %move to i8*
  %mtmp29 = getelementptr %struct.move_s* %move27, i32 1
  %bitcast30 = bitcast %struct.move_s* %mtmp29 to i8*
  %comp_move = alloca %struct.move_s, align 8
  %comp_move31 = bitcast %struct.move_s* %comp_move to %struct.move_s*
  %bitcast32 = bitcast %struct.move_s* %comp_move to i8*
  %mtmp33 = getelementptr %struct.move_s* %comp_move31, i32 1
  %bitcast34 = bitcast %struct.move_s* %mtmp33 to i8*
  %depth = alloca i32, align 4
  %depth35 = bitcast i32* %depth to i32*
  %bitcast36 = bitcast i32* %depth to i8*
  %mtmp37 = getelementptr i32* %depth35, i32 1
  %bitcast38 = bitcast i32* %mtmp37 to i8*
  %force_mode = alloca i32, align 4
  %force_mode39 = bitcast i32* %force_mode to i32*
  %bitcast40 = bitcast i32* %force_mode to i8*
  %mtmp41 = getelementptr i32* %force_mode39, i32 1
  %bitcast42 = bitcast i32* %mtmp41 to i8*
  %show_board = alloca i32, align 4
  %show_board43 = bitcast i32* %show_board to i32*
  %bitcast44 = bitcast i32* %show_board to i8*
  %mtmp45 = getelementptr i32* %show_board43, i32 1
  %bitcast46 = bitcast i32* %mtmp45 to i8*
  %game_history = alloca [600 x %struct.move_s], align 16
  %game_history47 = bitcast [600 x %struct.move_s]* %game_history to [600 x %struct.move_s]*
  %bitcast48 = bitcast [600 x %struct.move_s]* %game_history to i8*
  %mtmp49 = getelementptr [600 x %struct.move_s]* %game_history47, i32 1
  %bitcast50 = bitcast [600 x %struct.move_s]* %mtmp49 to i8*
  %game_history_x = alloca [600 x %struct.move_x], align 16
  %game_history_x51 = bitcast [600 x %struct.move_x]* %game_history_x to [600 x %struct.move_x]*
  %bitcast52 = bitcast [600 x %struct.move_x]* %game_history_x to i8*
  %mtmp53 = getelementptr [600 x %struct.move_x]* %game_history_x51, i32 1
  %bitcast54 = bitcast [600 x %struct.move_x]* %mtmp53 to i8*
  %is_edit_mode = alloca i32, align 4
  %is_edit_mode55 = bitcast i32* %is_edit_mode to i32*
  %bitcast56 = bitcast i32* %is_edit_mode to i8*
  %mtmp57 = getelementptr i32* %is_edit_mode55, i32 1
  %bitcast58 = bitcast i32* %mtmp57 to i8*
  %edit_color = alloca i32, align 4
  %edit_color59 = bitcast i32* %edit_color to i32*
  %bitcast60 = bitcast i32* %edit_color to i8*
  %mtmp61 = getelementptr i32* %edit_color59, i32 1
  %bitcast62 = bitcast i32* %mtmp61 to i8*
  %pingnum = alloca i32, align 4
  %pingnum63 = bitcast i32* %pingnum to i32*
  %bitcast64 = bitcast i32* %pingnum to i8*
  %mtmp65 = getelementptr i32* %pingnum63, i32 1
  %bitcast66 = bitcast i32* %mtmp65 to i8*
  %braindeadinterface = alloca i32, align 4
  %braindeadinterface67 = bitcast i32* %braindeadinterface to i32*
  %bitcast68 = bitcast i32* %braindeadinterface to i8*
  %mtmp69 = getelementptr i32* %braindeadinterface67, i32 1
  %bitcast70 = bitcast i32* %mtmp69 to i8*
  %automode = alloca i32, align 4
  %automode71 = bitcast i32* %automode to i32*
  %bitcast72 = bitcast i32* %automode to i8*
  %mtmp73 = getelementptr i32* %automode71, i32 1
  %bitcast74 = bitcast i32* %mtmp73 to i8*
  %xstart_time = alloca i64, align 8
  %xstart_time75 = bitcast i64* %xstart_time to i64*
  %bitcast76 = bitcast i64* %xstart_time to i8*
  %mtmp77 = getelementptr i64* %xstart_time75, i32 1
  %bitcast78 = bitcast i64* %mtmp77 to i8*
  %tmp = alloca %struct.move_s, align 4
  %tmp79 = bitcast %struct.move_s* %tmp to %struct.move_s*
  %bitcast80 = bitcast %struct.move_s* %tmp to i8*
  %mtmp81 = getelementptr %struct.move_s* %tmp79, i32 1
  %bitcast82 = bitcast %struct.move_s* %mtmp81 to i8*
  %tmp245 = alloca %struct.move_s, align 4
  %tmp24583 = bitcast %struct.move_s* %tmp245 to %struct.move_s*
  %bitcast84 = bitcast %struct.move_s* %tmp245 to i8*
  %mtmp85 = getelementptr %struct.move_s* %tmp24583, i32 1
  %bitcast86 = bitcast %struct.move_s* %mtmp85 to i8*
  %tmp544 = alloca %struct.move_s, align 4
  %tmp54487 = bitcast %struct.move_s* %tmp544 to %struct.move_s*
  %bitcast88 = bitcast %struct.move_s* %tmp544 to i8*
  %mtmp89 = getelementptr %struct.move_s* %tmp54487, i32 1
  %bitcast90 = bitcast %struct.move_s* %mtmp89 to i8*
  store i32 0, i32* %retval
  store i32 %argc, i32* %argc.addr, align 4
  store i8** %argv, i8*** %argv.addr, align 8
  %bitcast175 = bitcast i8*** %argv.addr to i8*
  call void @__softboundcets_metadata_store(i8* %bitcast175, i8* %0, i8* %1)
  store i32 4, i32* %depth, align 4
  call void @read_rcfile()
  call void @initialize_zobrist()
  store i32 2, i32* @Variant, align 4
  call void @__softboundcets_memcopy_check(i8* bitcast ([14 x i32]* @material to i8*), i8* bitcast ([14 x i32]* @std_material to i8*), i64 56, i8* null, i8* inttoptr (i64 281474976710656 to i8*), i8* null, i8* inttoptr (i64 281474976710656 to i8*))
  call void @__softboundcets_copy_metadata(i8* bitcast ([14 x i32]* @material to i8*), i8* bitcast ([14 x i32]* @std_material to i8*), i64 56)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* bitcast ([14 x i32]* @material to i8*), i8* bitcast ([14 x i32]* @std_material to i8*), i64 56, i32 16, i1 false)
  call void @init_game()
  call void @initialize_hash()
  call void @clear_tt()
  call void @reset_ecache()
  store i32 0, i32* @ECacheProbes, align 4
  store i32 0, i32* @ECacheHits, align 4
  store i32 0, i32* @TTProbes, align 4
  store i32 0, i32* @TTStores, align 4
  store i32 0, i32* @TTHits, align 4
  store i32 0, i32* @bookidx, align 4
  store i32 0, i32* @total_moves, align 4
  store i32 0, i32* @ply, align 4
  store i32 0, i32* %braindeadinterface, align 4
  store i32 40, i32* @moves_to_tc, align 4
  store i32 5, i32* @min_per_game, align 4
  store i32 30000, i32* @time_left, align 4
  store i32 2000, i32* @opp_rating, align 4
  store i32 2000, i32* @my_rating, align 4
  store i32 40, i32* @maxdepth, align 4
  store i32 200, i32* @maxposdiff, align 4
  store i32 1, i32* @must_go, align 4
  store i32 1, i32* @tradefreely, align 4
  store i32 0, i32* %automode, align 4
  store i32 0, i32* @xb_mode, align 4
  store i32 0, i32* %force_mode, align 4
  store i32 0, i32* @comp_color, align 4
  store i32 0, i32* %edit_color, align 4
  store i32 1, i32* %show_board, align 4
  store i32 0, i32* @is_pondering, align 4
  store i32 1, i32* @allow_pondering, align 4
  store i32 0, i32* @is_analyzing, align 4
  store i32 0, i32* %is_edit_mode, align 4
  store i32 0, i32* @have_partner, align 4
  store i32 0, i32* @must_sit, align 4
  store i32 0, i32* @go_fast, align 4
  store i32 0, i32* @fixed_time, align 4
  store i32 0, i32* @phase, align 4
  store i32 0, i32* @root_to_move, align 4
  store i32 0, i32* @kibitzed, align 4
  store i32 0, i32* @move_number, align 4
  %2 = bitcast [600 x %struct.move_s]* %game_history to i8*
  call void @__softboundcets_memset_check(i8* %2, i64 14400, i8* %bitcast48, i8* %bitcast50)
  call void @llvm.memset.p0i8.i64(i8* %2, i8 0, i64 14400, i32 16, i1 false)
  %3 = bitcast [600 x %struct.move_x]* %game_history_x to i8*
  call void @__softboundcets_memset_check(i8* %3, i64 9600, i8* %bitcast52, i8* %bitcast54)
  call void @llvm.memset.p0i8.i64(i8* %3, i8 0, i64 9600, i32 16, i1 false)
  %4 = load i32* @hash, align 4
  %5 = load i32* @move_number, align 4
  %idxprom = sext i32 %5 to i64
  %bitcast91 = bitcast [600 x i32]* @hash_history to i8*
  %bitcast92 = bitcast [600 x i32]* getelementptr inbounds ([600 x i32]* @hash_history, i32 1) to i8*
  %arrayidx = getelementptr inbounds [600 x i32]* @hash_history, i32 0, i64 %idxprom
  store i32 %4, i32* %arrayidx, align 4
  %6 = load %struct._IO_FILE** @stdout, align 8
  %bitcast93 = bitcast %struct._IO_FILE** @stdout to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast93, i8** %base.alloca, i8** %bound.alloca)
  %base.load = load i8** %base.alloca
  %bound.load = load i8** %bound.alloca
  call void @__softboundcets_allocate_shadow_stack_space(i32 3)
  call void @__softboundcets_store_base_shadow_stack(i8* %base.load, i32 1)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bound.load, i32 1)
  call void @__softboundcets_store_base_shadow_stack(i8* null, i32 2)
  call void @__softboundcets_store_bound_shadow_stack(i8* null, i32 2)
  call void @softboundcets_setbuf(%struct._IO_FILE* %6, i8* null) #1
  call void @__softboundcets_deallocate_shadow_stack_space()
  %7 = load %struct._IO_FILE** @stdin, align 8
  %bitcast94 = bitcast %struct._IO_FILE** @stdin to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast94, i8** %base.alloca95, i8** %bound.alloca96)
  %base.load97 = load i8** %base.alloca95
  %bound.load98 = load i8** %bound.alloca96
  call void @__softboundcets_allocate_shadow_stack_space(i32 3)
  call void @__softboundcets_store_base_shadow_stack(i8* %base.load97, i32 1)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bound.load98, i32 1)
  call void @__softboundcets_store_base_shadow_stack(i8* null, i32 2)
  call void @__softboundcets_store_bound_shadow_stack(i8* null, i32 2)
  call void @softboundcets_setbuf(%struct._IO_FILE* %7, i8* null) #1
  call void @__softboundcets_deallocate_shadow_stack_space()
  call void @start_up()
  %8 = load i32* %argc.addr, align 4
  %cmp = icmp eq i32 %8, 2
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %call = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([15 x i8]* @.str180, i32 0, i32 0))
  %9 = load i8*** %argv.addr, align 8
  %bitcast99 = bitcast i8*** %argv.addr to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast99, i8** %base.alloca100, i8** %bound.alloca101)
  %base.load102 = load i8** %base.alloca100
  %bound.load103 = load i8** %bound.alloca101
  %arrayidx1 = getelementptr inbounds i8** %9, i64 1
  %10 = load i8** %arrayidx1, align 8
  %bitcast104 = bitcast i8** %arrayidx1 to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast104, i8** %base.alloca105, i8** %bound.alloca106)
  %base.load107 = load i8** %base.alloca105
  %bound.load108 = load i8** %bound.alloca106
  call void @__softboundcets_allocate_shadow_stack_space(i32 2)
  call void @__softboundcets_store_base_shadow_stack(i8* %base.load107, i32 1)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bound.load108, i32 1)
  call void @run_autotest(i8* %10)
  call void @__softboundcets_deallocate_shadow_stack_space()
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  br label %while.body

while.body:                                       ; preds = %if.end856, %if.then748, %if.then739, %if.then734, %if.then411, %if.then406, %if.then401, %if.then396, %if.end
  %11 = load i32* %is_edit_mode, align 4
  %tobool = icmp ne i32 %11, 0
  br i1 %tobool, label %if.end215, label %land.lhs.true

land.lhs.true:                                    ; preds = %while.body
  %12 = load i32* @comp_color, align 4
  %13 = load i32* @white_to_move, align 4
  %cmp2 = icmp eq i32 %12, %13
  br i1 %cmp2, label %land.lhs.true4, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %land.lhs.true
  %14 = load i32* %automode, align 4
  %tobool3 = icmp ne i32 %14, 0
  br i1 %tobool3, label %land.lhs.true4, label %if.end215

land.lhs.true4:                                   ; preds = %lor.lhs.false, %land.lhs.true
  %15 = load i32* %force_mode, align 4
  %tobool5 = icmp ne i32 %15, 0
  br i1 %tobool5, label %if.end215, label %land.lhs.true6

land.lhs.true6:                                   ; preds = %land.lhs.true4
  %16 = load i32* @must_sit, align 4
  %tobool7 = icmp ne i32 %16, 0
  br i1 %tobool7, label %if.end215, label %land.lhs.true8

land.lhs.true8:                                   ; preds = %land.lhs.true6
  %17 = load i32* @result, align 4
  %tobool9 = icmp ne i32 %17, 0
  br i1 %tobool9, label %if.end215, label %if.then10

if.then10:                                        ; preds = %land.lhs.true8
  store i32 0, i32* @is_pondering, align 4
  call void @__softboundcets_allocate_shadow_stack_space(i32 2)
  call void @__softboundcets_store_base_shadow_stack(i8* %bitcast80, i32 1)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bitcast82, i32 1)
  call void @think(%struct.move_s* sret %tmp)
  call void @__softboundcets_deallocate_shadow_stack_space()
  %18 = bitcast %struct.move_s* %comp_move to i8*
  %19 = bitcast %struct.move_s* %tmp to i8*
  call void @__softboundcets_memcopy_check(i8* %18, i8* %19, i64 24, i8* %bitcast32, i8* %bitcast34, i8* %bitcast80, i8* %bitcast82)
  call void @__softboundcets_copy_metadata(i8* %18, i8* %19, i64 24)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %18, i8* %19, i64 24, i32 4, i1 false)
  store i32 0, i32* @ply, align 4
  %20 = load i32* @must_sit, align 4
  %tobool11 = icmp ne i32 %20, 0
  br i1 %tobool11, label %lor.lhs.false12, label %if.then14

lor.lhs.false12:                                  ; preds = %if.then10
  %21 = load i32* @must_go, align 4
  %cmp13 = icmp ne i32 %21, 0
  br i1 %cmp13, label %if.then14, label %if.end214

if.then14:                                        ; preds = %lor.lhs.false12, %if.then10
  %22 = load i32* @Variant, align 4
  %cmp15 = icmp eq i32 %22, 4
  br i1 %cmp15, label %land.lhs.true18, label %lor.lhs.false16

lor.lhs.false16:                                  ; preds = %if.then14
  %23 = load i32* @Variant, align 4
  %cmp17 = icmp eq i32 %23, 3
  br i1 %cmp17, label %land.lhs.true18, label %lor.lhs.false22

land.lhs.true18:                                  ; preds = %lor.lhs.false16, %if.then14
  %24 = load i32* @result, align 4
  %cmp19 = icmp ne i32 %24, 2
  br i1 %cmp19, label %land.lhs.true20, label %lor.lhs.false22

land.lhs.true20:                                  ; preds = %land.lhs.true18
  %25 = load i32* @result, align 4
  %cmp21 = icmp ne i32 %25, 3
  br i1 %cmp21, label %land.lhs.true36, label %lor.lhs.false22

lor.lhs.false22:                                  ; preds = %land.lhs.true20, %land.lhs.true18, %lor.lhs.false16
  %26 = load i32* @Variant, align 4
  %cmp23 = icmp eq i32 %26, 2
  br i1 %cmp23, label %land.lhs.true28, label %lor.lhs.false24

lor.lhs.false24:                                  ; preds = %lor.lhs.false22
  %27 = load i32* @Variant, align 4
  %cmp25 = icmp eq i32 %27, 0
  br i1 %cmp25, label %land.lhs.true28, label %lor.lhs.false26

lor.lhs.false26:                                  ; preds = %lor.lhs.false24
  %28 = load i32* @Variant, align 4
  %cmp27 = icmp eq i32 %28, 1
  br i1 %cmp27, label %land.lhs.true28, label %if.else187

land.lhs.true28:                                  ; preds = %lor.lhs.false26, %lor.lhs.false24, %lor.lhs.false22
  %29 = load i32* @comp_color, align 4
  %cmp29 = icmp eq i32 %29, 1
  br i1 %cmp29, label %land.lhs.true30, label %lor.lhs.false32

land.lhs.true30:                                  ; preds = %land.lhs.true28
  %30 = load i32* @result, align 4
  %cmp31 = icmp ne i32 %30, 2
  br i1 %cmp31, label %land.lhs.true36, label %lor.lhs.false32

lor.lhs.false32:                                  ; preds = %land.lhs.true30, %land.lhs.true28
  %31 = load i32* @comp_color, align 4
  %cmp33 = icmp eq i32 %31, 0
  br i1 %cmp33, label %land.lhs.true34, label %if.else187

land.lhs.true34:                                  ; preds = %lor.lhs.false32
  %32 = load i32* @result, align 4
  %cmp35 = icmp ne i32 %32, 3
  br i1 %cmp35, label %land.lhs.true36, label %if.else187

land.lhs.true36:                                  ; preds = %land.lhs.true34, %land.lhs.true30, %land.lhs.true20
  %33 = load i32* @result, align 4
  %cmp37 = icmp ne i32 %33, 1
  br i1 %cmp37, label %land.lhs.true38, label %if.else187

land.lhs.true38:                                  ; preds = %land.lhs.true36
  %34 = load i32* @result, align 4
  %cmp39 = icmp ne i32 %34, 4
  br i1 %cmp39, label %land.lhs.true40, label %if.else187

land.lhs.true40:                                  ; preds = %land.lhs.true38
  %35 = load i32* @result, align 4
  %cmp41 = icmp ne i32 %35, 5
  br i1 %cmp41, label %if.then42, label %if.else187

if.then42:                                        ; preds = %land.lhs.true40
  %arraydecay = getelementptr inbounds [256 x i8]* %output, i32 0, i32 0
  call void @__softboundcets_allocate_shadow_stack_space(i32 3)
  call void @__softboundcets_store_base_shadow_stack(i8* %bitcast32, i32 1)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bitcast34, i32 1)
  call void @__softboundcets_store_base_shadow_stack(i8* %bitcast20, i32 2)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bitcast22, i32 2)
  call void @comp_to_coord(%struct.move_s* byval align 8 %comp_move, i8* %arraydecay)
  call void @__softboundcets_deallocate_shadow_stack_space()
  %36 = load i32* @hash, align 4
  %37 = load i32* @move_number, align 4
  %idxprom43 = sext i32 %37 to i64
  %bitcast151 = bitcast [600 x i32]* @hash_history to i8*
  %bitcast152 = bitcast [600 x i32]* getelementptr inbounds ([600 x i32]* @hash_history, i32 1) to i8*
  %arrayidx44 = getelementptr inbounds [600 x i32]* @hash_history, i32 0, i64 %idxprom43
  store i32 %36, i32* %arrayidx44, align 4
  %38 = load i32* @move_number, align 4
  %idxprom45 = sext i32 %38 to i64
  %arrayidx46 = getelementptr inbounds [600 x %struct.move_s]* %game_history, i32 0, i64 %idxprom45
  %39 = bitcast %struct.move_s* %arrayidx46 to i8*
  %40 = bitcast %struct.move_s* %comp_move to i8*
  call void @__softboundcets_memcopy_check(i8* %39, i8* %40, i64 24, i8* %bitcast48, i8* %bitcast50, i8* %bitcast32, i8* %bitcast34)
  call void @__softboundcets_copy_metadata(i8* %39, i8* %40, i64 24)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %39, i8* %40, i64 24, i32 4, i1 false)
  call void @__softboundcets_allocate_shadow_stack_space(i32 2)
  call void @__softboundcets_store_base_shadow_stack(i8* %bitcast32, i32 1)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bitcast34, i32 1)
  call void @make(%struct.move_s* %comp_move, i32 0)
  call void @__softboundcets_deallocate_shadow_stack_space()
  %41 = load i32* @move_number, align 4
  %inc = add nsw i32 %41, 1
  store i32 %inc, i32* @move_number, align 4
  %idxprom47 = sext i32 %41 to i64
  %arrayidx48 = getelementptr inbounds [600 x %struct.move_x]* %game_history_x, i32 0, i64 %idxprom47
  %42 = bitcast %struct.move_x* %arrayidx48 to i8*
  call void @__softboundcets_memcopy_check(i8* %42, i8* bitcast ([300 x %struct.move_x]* @path_x to i8*), i64 16, i8* %bitcast52, i8* %bitcast54, i8* bitcast ([300 x %struct.move_x]* @path_x to i8*), i8* bitcast ([300 x %struct.move_x]* getelementptr inbounds ([300 x %struct.move_x]* @path_x, i32 1) to i8*))
  call void @__softboundcets_copy_metadata(i8* %42, i8* bitcast ([300 x %struct.move_x]* @path_x to i8*), i64 16)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %42, i8* bitcast ([300 x %struct.move_x]* @path_x to i8*), i64 16, i32 4, i1 false)
  store i32 0, i32* @userealholdings, align 4
  %43 = load i32* @must_go, align 4
  %dec = add nsw i32 %43, -1
  store i32 %dec, i32* @must_go, align 4
  %call49 = call i32 @is_draw()
  %tobool50 = icmp ne i32 %call49, 0
  br i1 %tobool50, label %if.then51, label %if.else

if.then51:                                        ; preds = %if.then42
  store i32 5, i32* @result, align 4
  br label %if.end55

if.else:                                          ; preds = %if.then42
  %44 = load i32* @fifty, align 4
  %cmp52 = icmp sgt i32 %44, 100
  br i1 %cmp52, label %if.then53, label %if.end54

if.then53:                                        ; preds = %if.else
  store i32 4, i32* @result, align 4
  br label %if.end54

if.end54:                                         ; preds = %if.then53, %if.else
  br label %if.end55

if.end55:                                         ; preds = %if.end54, %if.then51
  %45 = load i32* @root_to_move, align 4
  %xor = xor i32 %45, 1
  store i32 %xor, i32* @root_to_move, align 4
  call void @reset_piece_square()
  %46 = load i32* @book_ply, align 4
  %cmp56 = icmp slt i32 %46, 40
  br i1 %cmp56, label %if.then57, label %if.end66

if.then57:                                        ; preds = %if.end55
  %47 = load i32* @book_ply, align 4
  %tobool58 = icmp ne i32 %47, 0
  br i1 %tobool58, label %if.else62, label %if.then59

if.then59:                                        ; preds = %if.then57
  %arraydecay60 = getelementptr inbounds [256 x i8]* %output, i32 0, i32 0
  call void @__softboundcets_allocate_shadow_stack_space(i32 3)
  call void @__softboundcets_store_base_shadow_stack(i8* getelementptr inbounds ([256 x i8]* @opening_history, i32 0, i32 0), i32 1)
  call void @__softboundcets_store_bound_shadow_stack(i8* getelementptr inbounds ([256 x i8]* @opening_history, i32 1, i32 0), i32 1)
  call void @__softboundcets_store_base_shadow_stack(i8* %bitcast20, i32 2)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bitcast22, i32 2)
  %call61 = call i8* @softboundcets_strcpy(i8* getelementptr inbounds ([256 x i8]* @opening_history, i32 0, i32 0), i8* %arraydecay60) #1
  %48 = call i8* @__softboundcets_load_base_shadow_stack(i32 0)
  %49 = call i8* @__softboundcets_load_bound_shadow_stack(i32 0)
  call void @__softboundcets_deallocate_shadow_stack_space()
  br label %if.end65

if.else62:                                        ; preds = %if.then57
  %arraydecay63 = getelementptr inbounds [256 x i8]* %output, i32 0, i32 0
  call void @__softboundcets_allocate_shadow_stack_space(i32 3)
  call void @__softboundcets_store_base_shadow_stack(i8* getelementptr inbounds ([256 x i8]* @opening_history, i32 0, i32 0), i32 1)
  call void @__softboundcets_store_bound_shadow_stack(i8* getelementptr inbounds ([256 x i8]* @opening_history, i32 1, i32 0), i32 1)
  call void @__softboundcets_store_base_shadow_stack(i8* %bitcast20, i32 2)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bitcast22, i32 2)
  %call64 = call i8* @softboundcets_strcat(i8* getelementptr inbounds ([256 x i8]* @opening_history, i32 0, i32 0), i8* %arraydecay63) #1
  %50 = call i8* @__softboundcets_load_base_shadow_stack(i32 0)
  %51 = call i8* @__softboundcets_load_bound_shadow_stack(i32 0)
  call void @__softboundcets_deallocate_shadow_stack_space()
  br label %if.end65

if.end65:                                         ; preds = %if.else62, %if.then59
  br label %if.end66

if.end66:                                         ; preds = %if.end65, %if.end55
  %52 = load i32* @book_ply, align 4
  %inc67 = add nsw i32 %52, 1
  store i32 %inc67, i32* @book_ply, align 4
  %53 = load i32* @nodes, align 4
  %54 = load i32* @qnodes, align 4
  %conv = sitofp i32 %54 to float
  %55 = load i32* @nodes, align 4
  %conv68 = sitofp i32 %55 to float
  %div = fdiv float %conv, %conv68
  %conv69 = fpext float %div to double
  %mul = fmul double %conv69, 1.000000e+02
  %conv70 = fptrunc double %mul to float
  %conv71 = fpext float %conv70 to double
  %call72 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([29 x i8]* @.str1191, i32 0, i32 0), i32 %53, double %conv71)
  %56 = load i32* @ECacheProbes, align 4
  %57 = load i32* @ECacheHits, align 4
  %58 = load i32* @ECacheHits, align 4
  %conv73 = uitofp i32 %58 to float
  %59 = load i32* @ECacheProbes, align 4
  %conv74 = uitofp i32 %59 to float
  %add = fadd float %conv74, 1.000000e+00
  %div75 = fdiv float %conv73, %add
  %mul76 = fmul float %div75, 1.000000e+02
  %conv77 = fpext float %mul76 to double
  %call78 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([54 x i8]* @.str2196, i32 0, i32 0), i32 %56, i32 %57, double %conv77)
  %60 = load i32* @TTStores, align 4
  %61 = load i32* @TTProbes, align 4
  %62 = load i32* @TTHits, align 4
  %63 = load i32* @TTHits, align 4
  %conv79 = uitofp i32 %63 to float
  %64 = load i32* @TTProbes, align 4
  %conv80 = uitofp i32 %64 to float
  %add81 = fadd float %conv80, 1.000000e+00
  %div82 = fdiv float %conv79, %add81
  %mul83 = fmul float %div82, 1.000000e+02
  %conv84 = fpext float %mul83 to double
  %call85 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([60 x i8]* @.str3197, i32 0, i32 0), i32 %60, i32 %61, i32 %62, double %conv84)
  %65 = load i32* @NTries, align 4
  %66 = load i32* @NCuts, align 4
  %67 = load i32* @NCuts, align 4
  %conv86 = uitofp i32 %67 to float
  %mul87 = fmul float %conv86, 1.000000e+02
  %68 = load i32* @NTries, align 4
  %conv88 = uitofp i32 %68 to float
  %add89 = fadd float %conv88, 1.000000e+00
  %div90 = fdiv float %mul87, %add89
  %conv91 = fpext float %div90 to double
  %69 = load i32* @TExt, align 4
  %call92 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([51 x i8]* @.str4198, i32 0, i32 0), i32 %65, i32 %66, double %conv91, i32 %69)
  %70 = load i32* @ext_check, align 4
  %71 = load i32* @razor_drop, align 4
  %72 = load i32* @razor_material, align 4
  %call93 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([61 x i8]* @.str5205, i32 0, i32 0), i32 %70, i32 %71, i32 %72)
  %73 = load i32* @FHF, align 4
  %conv94 = uitofp i32 %73 to float
  %mul95 = fmul float %conv94, 1.000000e+02
  %74 = load i32* @FH, align 4
  %add96 = add i32 %74, 1
  %conv97 = uitofp i32 %add96 to float
  %div98 = fdiv float %mul95, %conv97
  %conv99 = fpext float %div98 to double
  %call100 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([22 x i8]* @.str6208, i32 0, i32 0), double %conv99)
  %75 = load i32* @Material, align 4
  %call101 = call i32 @eval(i32 -1000000, i32 1000000)
  %76 = load i32* @maxposdiff, align 4
  %77 = load i32* @white_hand_eval, align 4
  %78 = load i32* @black_hand_eval, align 4
  %call102 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([81 x i8]* @.str7209, i32 0, i32 0), i32 %75, i32 %call101, i32 %76, i32 %77, i32 %78)
  %79 = load i32* @hash, align 4
  %80 = load i32* @hold_hash, align 4
  %call103 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([26 x i8]* @.str8210, i32 0, i32 0), i32 %79, i32 %80)
  %81 = load i32* @result, align 4
  %tobool104 = icmp ne i32 %81, 0
  br i1 %tobool104, label %if.else134, label %if.then105

if.then105:                                       ; preds = %if.end66
  %82 = load i32* @xb_mode, align 4
  %tobool106 = icmp ne i32 %82, 0
  br i1 %tobool106, label %if.then107, label %if.else121

if.then107:                                       ; preds = %if.then105
  %from = getelementptr inbounds %struct.move_s* %comp_move, i32 0, i32 0
  %83 = load i32* %from, align 4
  %84 = load i32* getelementptr inbounds (%struct.move_s* @dummy, i32 0, i32 0), align 4
  %cmp108 = icmp ne i32 %83, %84
  br i1 %cmp108, label %if.then113, label %lor.lhs.false110

lor.lhs.false110:                                 ; preds = %if.then107
  %target = getelementptr inbounds %struct.move_s* %comp_move, i32 0, i32 1
  %85 = load i32* %target, align 4
  %86 = load i32* getelementptr inbounds (%struct.move_s* @dummy, i32 0, i32 1), align 4
  %cmp111 = icmp ne i32 %85, %86
  br i1 %cmp111, label %if.then113, label %if.end116

if.then113:                                       ; preds = %lor.lhs.false110, %if.then107
  %arraydecay114 = getelementptr inbounds [256 x i8]* %output, i32 0, i32 0
  %call115 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([9 x i8]* @.str9211, i32 0, i32 0), i8* %arraydecay114)
  br label %if.end116

if.end116:                                        ; preds = %if.then113, %lor.lhs.false110
  %87 = load i32* @Variant, align 4
  %cmp117 = icmp eq i32 %87, 1
  br i1 %cmp117, label %if.then119, label %if.end120

if.then119:                                       ; preds = %if.end116
  call void @CheckBadFlow(i32 0)
  br label %if.end120

if.end120:                                        ; preds = %if.then119, %if.end116
  br label %if.end133

if.else121:                                       ; preds = %if.then105
  %from122 = getelementptr inbounds %struct.move_s* %comp_move, i32 0, i32 0
  %88 = load i32* %from122, align 4
  %89 = load i32* getelementptr inbounds (%struct.move_s* @dummy, i32 0, i32 0), align 4
  %cmp123 = icmp ne i32 %88, %89
  br i1 %cmp123, label %if.then129, label %lor.lhs.false125

lor.lhs.false125:                                 ; preds = %if.else121
  %target126 = getelementptr inbounds %struct.move_s* %comp_move, i32 0, i32 1
  %90 = load i32* %target126, align 4
  %91 = load i32* getelementptr inbounds (%struct.move_s* @dummy, i32 0, i32 1), align 4
  %cmp127 = icmp ne i32 %90, %91
  br i1 %cmp127, label %if.then129, label %if.end132

if.then129:                                       ; preds = %lor.lhs.false125, %if.else121
  %arraydecay130 = getelementptr inbounds [256 x i8]* %output, i32 0, i32 0
  %call131 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([5 x i8]* @.str10212, i32 0, i32 0), i8* %arraydecay130)
  br label %if.end132

if.end132:                                        ; preds = %if.then129, %lor.lhs.false125
  br label %if.end133

if.end133:                                        ; preds = %if.end132, %if.end120
  br label %if.end186

if.else134:                                       ; preds = %if.end66
  %92 = load i32* @xb_mode, align 4
  %tobool135 = icmp ne i32 %92, 0
  br i1 %tobool135, label %if.then136, label %if.else148

if.then136:                                       ; preds = %if.else134
  %from137 = getelementptr inbounds %struct.move_s* %comp_move, i32 0, i32 0
  %93 = load i32* %from137, align 4
  %94 = load i32* getelementptr inbounds (%struct.move_s* @dummy, i32 0, i32 0), align 4
  %cmp138 = icmp ne i32 %93, %94
  br i1 %cmp138, label %if.then144, label %lor.lhs.false140

lor.lhs.false140:                                 ; preds = %if.then136
  %target141 = getelementptr inbounds %struct.move_s* %comp_move, i32 0, i32 1
  %95 = load i32* %target141, align 4
  %96 = load i32* getelementptr inbounds (%struct.move_s* @dummy, i32 0, i32 1), align 4
  %cmp142 = icmp ne i32 %95, %96
  br i1 %cmp142, label %if.then144, label %if.end147

if.then144:                                       ; preds = %lor.lhs.false140, %if.then136
  %arraydecay145 = getelementptr inbounds [256 x i8]* %output, i32 0, i32 0
  %call146 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([9 x i8]* @.str9211, i32 0, i32 0), i8* %arraydecay145)
  br label %if.end147

if.end147:                                        ; preds = %if.then144, %lor.lhs.false140
  br label %if.end160

if.else148:                                       ; preds = %if.else134
  %from149 = getelementptr inbounds %struct.move_s* %comp_move, i32 0, i32 0
  %97 = load i32* %from149, align 4
  %98 = load i32* getelementptr inbounds (%struct.move_s* @dummy, i32 0, i32 0), align 4
  %cmp150 = icmp ne i32 %97, %98
  br i1 %cmp150, label %if.then156, label %lor.lhs.false152

lor.lhs.false152:                                 ; preds = %if.else148
  %target153 = getelementptr inbounds %struct.move_s* %comp_move, i32 0, i32 1
  %99 = load i32* %target153, align 4
  %100 = load i32* getelementptr inbounds (%struct.move_s* @dummy, i32 0, i32 1), align 4
  %cmp154 = icmp ne i32 %99, %100
  br i1 %cmp154, label %if.then156, label %if.end159

if.then156:                                       ; preds = %lor.lhs.false152, %if.else148
  %arraydecay157 = getelementptr inbounds [256 x i8]* %output, i32 0, i32 0
  %call158 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([5 x i8]* @.str10212, i32 0, i32 0), i8* %arraydecay157)
  br label %if.end159

if.end159:                                        ; preds = %if.then156, %lor.lhs.false152
  br label %if.end160

if.end160:                                        ; preds = %if.end159, %if.end147
  %101 = load i32* @result, align 4
  %cmp161 = icmp eq i32 %101, 2
  br i1 %cmp161, label %if.then163, label %if.else165

if.then163:                                       ; preds = %if.end160
  %call164 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([19 x i8]* @.str11213, i32 0, i32 0))
  br label %if.end185

if.else165:                                       ; preds = %if.end160
  %102 = load i32* @result, align 4
  %cmp166 = icmp eq i32 %102, 3
  br i1 %cmp166, label %if.then168, label %if.else170

if.then168:                                       ; preds = %if.else165
  %call169 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([19 x i8]* @.str12214, i32 0, i32 0))
  br label %if.end184

if.else170:                                       ; preds = %if.else165
  %103 = load i32* @result, align 4
  %cmp171 = icmp eq i32 %103, 4
  br i1 %cmp171, label %if.then173, label %if.else175

if.then173:                                       ; preds = %if.else170
  %call174 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([27 x i8]* @.str13215, i32 0, i32 0))
  br label %if.end183

if.else175:                                       ; preds = %if.else170
  %104 = load i32* @result, align 4
  %cmp176 = icmp eq i32 %104, 5
  br i1 %cmp176, label %if.then178, label %if.else180

if.then178:                                       ; preds = %if.else175
  %call179 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([29 x i8]* @.str14216, i32 0, i32 0))
  br label %if.end182

if.else180:                                       ; preds = %if.else175
  %call181 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([16 x i8]* @.str15217, i32 0, i32 0))
  br label %if.end182

if.end182:                                        ; preds = %if.else180, %if.then178
  br label %if.end183

if.end183:                                        ; preds = %if.end182, %if.then173
  br label %if.end184

if.end184:                                        ; preds = %if.end183, %if.then168
  br label %if.end185

if.end185:                                        ; preds = %if.end184, %if.then163
  store i32 0, i32* %automode, align 4
  br label %if.end186

if.end186:                                        ; preds = %if.end185, %if.end133
  br label %if.end213

if.else187:                                       ; preds = %land.lhs.true40, %land.lhs.true38, %land.lhs.true36, %land.lhs.true34, %lor.lhs.false32, %lor.lhs.false26
  %105 = load i32* @result, align 4
  %cmp188 = icmp eq i32 %105, 2
  br i1 %cmp188, label %if.then190, label %if.else192

if.then190:                                       ; preds = %if.else187
  %call191 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([19 x i8]* @.str11213, i32 0, i32 0))
  br label %if.end212

if.else192:                                       ; preds = %if.else187
  %106 = load i32* @result, align 4
  %cmp193 = icmp eq i32 %106, 3
  br i1 %cmp193, label %if.then195, label %if.else197

if.then195:                                       ; preds = %if.else192
  %call196 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([19 x i8]* @.str12214, i32 0, i32 0))
  br label %if.end211

if.else197:                                       ; preds = %if.else192
  %107 = load i32* @result, align 4
  %cmp198 = icmp eq i32 %107, 4
  br i1 %cmp198, label %if.then200, label %if.else202

if.then200:                                       ; preds = %if.else197
  %call201 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([27 x i8]* @.str13215, i32 0, i32 0))
  br label %if.end210

if.else202:                                       ; preds = %if.else197
  %108 = load i32* @result, align 4
  %cmp203 = icmp eq i32 %108, 5
  br i1 %cmp203, label %if.then205, label %if.else207

if.then205:                                       ; preds = %if.else202
  %call206 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([29 x i8]* @.str14216, i32 0, i32 0))
  br label %if.end209

if.else207:                                       ; preds = %if.else202
  %call208 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([16 x i8]* @.str15217, i32 0, i32 0))
  br label %if.end209

if.end209:                                        ; preds = %if.else207, %if.then205
  br label %if.end210

if.end210:                                        ; preds = %if.end209, %if.then200
  br label %if.end211

if.end211:                                        ; preds = %if.end210, %if.then195
  br label %if.end212

if.end212:                                        ; preds = %if.end211, %if.then190
  store i32 0, i32* %automode, align 4
  br label %if.end213

if.end213:                                        ; preds = %if.end212, %if.end186
  br label %if.end214

if.end214:                                        ; preds = %if.end213, %lor.lhs.false12
  br label %if.end215

if.end215:                                        ; preds = %if.end214, %land.lhs.true8, %land.lhs.true6, %land.lhs.true4, %lor.lhs.false, %while.body
  %109 = load i32* @xb_mode, align 4
  %tobool216 = icmp ne i32 %109, 0
  br i1 %tobool216, label %if.else227, label %if.then217

if.then217:                                       ; preds = %if.end215
  %110 = load i32* %show_board, align 4
  %tobool218 = icmp ne i32 %110, 0
  br i1 %tobool218, label %if.then219, label %if.end221

if.then219:                                       ; preds = %if.then217
  %call220 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([2 x i8]* @.str16218, i32 0, i32 0))
  %111 = load %struct._IO_FILE** @stdout, align 8
  %bitcast109 = bitcast %struct._IO_FILE** @stdout to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast109, i8** %base.alloca110, i8** %bound.alloca111)
  %base.load112 = load i8** %base.alloca110
  %bound.load113 = load i8** %bound.alloca111
  %112 = load i32* @comp_color, align 4
  %sub = sub nsw i32 1, %112
  call void @__softboundcets_allocate_shadow_stack_space(i32 2)
  call void @__softboundcets_store_base_shadow_stack(i8* %base.load112, i32 1)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bound.load113, i32 1)
  call void @display_board(%struct._IO_FILE* %111, i32 %sub)
  call void @__softboundcets_deallocate_shadow_stack_space()
  br label %if.end221

if.end221:                                        ; preds = %if.then219, %if.then217
  %113 = load i32* %automode, align 4
  %tobool222 = icmp ne i32 %113, 0
  br i1 %tobool222, label %if.end226, label %if.then223

if.then223:                                       ; preds = %if.end221
  %call224 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([8 x i8]* @.str17219, i32 0, i32 0))
  %arraydecay225 = getelementptr inbounds [256 x i8]* %input, i32 0, i32 0
  %114 = load %struct._IO_FILE** @stdin, align 8
  %bitcast114 = bitcast %struct._IO_FILE** @stdin to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast114, i8** %base.alloca115, i8** %bound.alloca116)
  %base.load117 = load i8** %base.alloca115
  %bound.load118 = load i8** %bound.alloca116
  call void @__softboundcets_allocate_shadow_stack_space(i32 3)
  call void @__softboundcets_store_base_shadow_stack(i8* %bitcast12, i32 1)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bitcast14, i32 1)
  call void @__softboundcets_store_base_shadow_stack(i8* %base.load117, i32 2)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bound.load118, i32 2)
  call void @rinput(i8* %arraydecay225, i32 256, %struct._IO_FILE* %114)
  call void @__softboundcets_deallocate_shadow_stack_space()
  br label %if.end226

if.end226:                                        ; preds = %if.then223, %if.end221
  br label %if.end251

if.else227:                                       ; preds = %if.end215
  %115 = load i32* @must_sit, align 4
  %tobool228 = icmp ne i32 %115, 0
  br i1 %tobool228, label %land.lhs.true240, label %lor.lhs.false229

lor.lhs.false229:                                 ; preds = %if.else227
  %116 = load i32* @allow_pondering, align 4
  %tobool230 = icmp ne i32 %116, 0
  br i1 %tobool230, label %land.lhs.true231, label %lor.lhs.false238

land.lhs.true231:                                 ; preds = %lor.lhs.false229
  %117 = load i32* %is_edit_mode, align 4
  %tobool232 = icmp ne i32 %117, 0
  br i1 %tobool232, label %lor.lhs.false238, label %land.lhs.true233

land.lhs.true233:                                 ; preds = %land.lhs.true231
  %118 = load i32* %force_mode, align 4
  %tobool234 = icmp ne i32 %118, 0
  br i1 %tobool234, label %lor.lhs.false238, label %land.lhs.true235

land.lhs.true235:                                 ; preds = %land.lhs.true233
  %119 = load i32* @move_number, align 4
  %cmp236 = icmp ne i32 %119, 0
  br i1 %cmp236, label %land.lhs.true240, label %lor.lhs.false238

lor.lhs.false238:                                 ; preds = %land.lhs.true235, %land.lhs.true233, %land.lhs.true231, %lor.lhs.false229
  %120 = load i32* @is_analyzing, align 4
  %tobool239 = icmp ne i32 %120, 0
  br i1 %tobool239, label %land.lhs.true240, label %if.end246

land.lhs.true240:                                 ; preds = %lor.lhs.false238, %land.lhs.true235, %if.else227
  %121 = load i32* @result, align 4
  %tobool241 = icmp ne i32 %121, 0
  br i1 %tobool241, label %if.end246, label %land.lhs.true242

land.lhs.true242:                                 ; preds = %land.lhs.true240
  %122 = load i32* %automode, align 4
  %tobool243 = icmp ne i32 %122, 0
  br i1 %tobool243, label %if.end246, label %if.then244

if.then244:                                       ; preds = %land.lhs.true242
  store i32 1, i32* @is_pondering, align 4
  call void @__softboundcets_allocate_shadow_stack_space(i32 2)
  call void @__softboundcets_store_base_shadow_stack(i8* %bitcast84, i32 1)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bitcast86, i32 1)
  call void @think(%struct.move_s* sret %tmp245)
  call void @__softboundcets_deallocate_shadow_stack_space()
  store i32 0, i32* @is_pondering, align 4
  store i32 0, i32* @ply, align 4
  br label %if.end246

if.end246:                                        ; preds = %if.then244, %land.lhs.true242, %land.lhs.true240, %lor.lhs.false238
  %123 = load i32* %automode, align 4
  %tobool247 = icmp ne i32 %123, 0
  br i1 %tobool247, label %if.end250, label %if.then248

if.then248:                                       ; preds = %if.end246
  %arraydecay249 = getelementptr inbounds [256 x i8]* %input, i32 0, i32 0
  %124 = load %struct._IO_FILE** @stdin, align 8
  %bitcast119 = bitcast %struct._IO_FILE** @stdin to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast119, i8** %base.alloca120, i8** %bound.alloca121)
  %base.load122 = load i8** %base.alloca120
  %bound.load123 = load i8** %bound.alloca121
  call void @__softboundcets_allocate_shadow_stack_space(i32 3)
  call void @__softboundcets_store_base_shadow_stack(i8* %bitcast12, i32 1)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bitcast14, i32 1)
  call void @__softboundcets_store_base_shadow_stack(i8* %base.load122, i32 2)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bound.load123, i32 2)
  call void @rinput(i8* %arraydecay249, i32 256, %struct._IO_FILE* %124)
  call void @__softboundcets_deallocate_shadow_stack_space()
  br label %if.end250

if.end250:                                        ; preds = %if.then248, %if.end246
  br label %if.end251

if.end251:                                        ; preds = %if.end250, %if.end226
  %125 = load i32* %is_edit_mode, align 4
  %tobool252 = icmp ne i32 %125, 0
  br i1 %tobool252, label %if.else292, label %land.lhs.true253

land.lhs.true253:                                 ; preds = %if.end251
  %arrayidx254 = getelementptr inbounds [256 x i8]* %input, i32 0, i64 0
  call void @__softboundcets_allocate_shadow_stack_space(i32 2)
  call void @__softboundcets_store_base_shadow_stack(i8* %bitcast12, i32 1)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bitcast14, i32 1)
  %call255 = call i32 @is_move(i8* %arrayidx254)
  call void @__softboundcets_deallocate_shadow_stack_space()
  %tobool256 = icmp ne i32 %call255, 0
  br i1 %tobool256, label %if.then257, label %if.else292

if.then257:                                       ; preds = %land.lhs.true253
  %arraydecay258 = getelementptr inbounds [256 x i8]* %input, i32 0, i32 0
  call void @__softboundcets_allocate_shadow_stack_space(i32 3)
  call void @__softboundcets_store_base_shadow_stack(i8* %bitcast12, i32 1)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bitcast14, i32 1)
  call void @__softboundcets_store_base_shadow_stack(i8* %bitcast28, i32 2)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bitcast30, i32 2)
  %call259 = call i32 @verify_coord(i8* %arraydecay258, %struct.move_s* %move)
  call void @__softboundcets_deallocate_shadow_stack_space()
  %tobool260 = icmp ne i32 %call259, 0
  br i1 %tobool260, label %if.then261, label %if.else288

if.then261:                                       ; preds = %if.then257
  %126 = load i32* @move_number, align 4
  %idxprom262 = sext i32 %126 to i64
  %arrayidx263 = getelementptr inbounds [600 x %struct.move_s]* %game_history, i32 0, i64 %idxprom262
  %127 = bitcast %struct.move_s* %arrayidx263 to i8*
  %128 = bitcast %struct.move_s* %move to i8*
  call void @__softboundcets_memcopy_check(i8* %127, i8* %128, i64 24, i8* %bitcast48, i8* %bitcast50, i8* %bitcast28, i8* %bitcast30)
  call void @__softboundcets_copy_metadata(i8* %127, i8* %128, i64 24)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %127, i8* %128, i64 24, i32 4, i1 false)
  %129 = load i32* @hash, align 4
  %130 = load i32* @move_number, align 4
  %idxprom264 = sext i32 %130 to i64
  %bitcast129 = bitcast [600 x i32]* @hash_history to i8*
  %bitcast130 = bitcast [600 x i32]* getelementptr inbounds ([600 x i32]* @hash_history, i32 1) to i8*
  %arrayidx265 = getelementptr inbounds [600 x i32]* @hash_history, i32 0, i64 %idxprom264
  store i32 %129, i32* %arrayidx265, align 4
  call void @__softboundcets_allocate_shadow_stack_space(i32 2)
  call void @__softboundcets_store_base_shadow_stack(i8* %bitcast28, i32 1)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bitcast30, i32 1)
  call void @make(%struct.move_s* %move, i32 0)
  call void @__softboundcets_deallocate_shadow_stack_space()
  %131 = load i32* @move_number, align 4
  %inc266 = add nsw i32 %131, 1
  store i32 %inc266, i32* @move_number, align 4
  %idxprom267 = sext i32 %131 to i64
  %arrayidx268 = getelementptr inbounds [600 x %struct.move_x]* %game_history_x, i32 0, i64 %idxprom267
  %132 = bitcast %struct.move_x* %arrayidx268 to i8*
  call void @__softboundcets_memcopy_check(i8* %132, i8* bitcast ([300 x %struct.move_x]* @path_x to i8*), i64 16, i8* %bitcast52, i8* %bitcast54, i8* bitcast ([300 x %struct.move_x]* @path_x to i8*), i8* bitcast ([300 x %struct.move_x]* getelementptr inbounds ([300 x %struct.move_x]* @path_x, i32 1) to i8*))
  call void @__softboundcets_copy_metadata(i8* %132, i8* bitcast ([300 x %struct.move_x]* @path_x to i8*), i64 16)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %132, i8* bitcast ([300 x %struct.move_x]* @path_x to i8*), i64 16, i32 4, i1 false)
  call void @reset_piece_square()
  %133 = load i32* @root_to_move, align 4
  %xor269 = xor i32 %133, 1
  store i32 %xor269, i32* @root_to_move, align 4
  %134 = load i32* @book_ply, align 4
  %cmp270 = icmp slt i32 %134, 40
  br i1 %cmp270, label %if.then272, label %if.end281

if.then272:                                       ; preds = %if.then261
  %135 = load i32* @book_ply, align 4
  %tobool273 = icmp ne i32 %135, 0
  br i1 %tobool273, label %if.else277, label %if.then274

if.then274:                                       ; preds = %if.then272
  %arraydecay275 = getelementptr inbounds [256 x i8]* %input, i32 0, i32 0
  call void @__softboundcets_allocate_shadow_stack_space(i32 3)
  call void @__softboundcets_store_base_shadow_stack(i8* getelementptr inbounds ([256 x i8]* @opening_history, i32 0, i32 0), i32 1)
  call void @__softboundcets_store_bound_shadow_stack(i8* getelementptr inbounds ([256 x i8]* @opening_history, i32 1, i32 0), i32 1)
  call void @__softboundcets_store_base_shadow_stack(i8* %bitcast12, i32 2)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bitcast14, i32 2)
  %call276 = call i8* @softboundcets_strcpy(i8* getelementptr inbounds ([256 x i8]* @opening_history, i32 0, i32 0), i8* %arraydecay275) #1
  %136 = call i8* @__softboundcets_load_base_shadow_stack(i32 0)
  %137 = call i8* @__softboundcets_load_bound_shadow_stack(i32 0)
  call void @__softboundcets_deallocate_shadow_stack_space()
  br label %if.end280

if.else277:                                       ; preds = %if.then272
  %arraydecay278 = getelementptr inbounds [256 x i8]* %input, i32 0, i32 0
  call void @__softboundcets_allocate_shadow_stack_space(i32 3)
  call void @__softboundcets_store_base_shadow_stack(i8* getelementptr inbounds ([256 x i8]* @opening_history, i32 0, i32 0), i32 1)
  call void @__softboundcets_store_bound_shadow_stack(i8* getelementptr inbounds ([256 x i8]* @opening_history, i32 1, i32 0), i32 1)
  call void @__softboundcets_store_base_shadow_stack(i8* %bitcast12, i32 2)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bitcast14, i32 2)
  %call279 = call i8* @softboundcets_strcat(i8* getelementptr inbounds ([256 x i8]* @opening_history, i32 0, i32 0), i8* %arraydecay278) #1
  %138 = call i8* @__softboundcets_load_base_shadow_stack(i32 0)
  %139 = call i8* @__softboundcets_load_bound_shadow_stack(i32 0)
  call void @__softboundcets_deallocate_shadow_stack_space()
  br label %if.end280

if.end280:                                        ; preds = %if.else277, %if.then274
  br label %if.end281

if.end281:                                        ; preds = %if.end280, %if.then261
  %140 = load i32* @book_ply, align 4
  %inc282 = add nsw i32 %140, 1
  store i32 %inc282, i32* @book_ply, align 4
  %141 = load i32* %show_board, align 4
  %tobool283 = icmp ne i32 %141, 0
  br i1 %tobool283, label %if.then284, label %if.end287

if.then284:                                       ; preds = %if.end281
  %call285 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([2 x i8]* @.str16218, i32 0, i32 0))
  %142 = load %struct._IO_FILE** @stdout, align 8
  %bitcast146 = bitcast %struct._IO_FILE** @stdout to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast146, i8** %base.alloca147, i8** %bound.alloca148)
  %base.load149 = load i8** %base.alloca147
  %bound.load150 = load i8** %bound.alloca148
  %143 = load i32* @comp_color, align 4
  %sub286 = sub nsw i32 1, %143
  call void @__softboundcets_allocate_shadow_stack_space(i32 2)
  call void @__softboundcets_store_base_shadow_stack(i8* %base.load149, i32 1)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bound.load150, i32 1)
  call void @display_board(%struct._IO_FILE* %142, i32 %sub286)
  call void @__softboundcets_deallocate_shadow_stack_space()
  br label %if.end287

if.end287:                                        ; preds = %if.then284, %if.end281
  br label %if.end291

if.else288:                                       ; preds = %if.then257
  %arraydecay289 = getelementptr inbounds [256 x i8]* %input, i32 0, i32 0
  %call290 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([18 x i8]* @.str18220, i32 0, i32 0), i8* %arraydecay289)
  br label %if.end291

if.end291:                                        ; preds = %if.else288, %if.end287
  br label %if.end856

if.else292:                                       ; preds = %land.lhs.true253, %if.end251
  %arraydecay293 = getelementptr inbounds [256 x i8]* %input, i32 0, i32 0
  call void @__softboundcets_allocate_shadow_stack_space(i32 3)
  call void @__softboundcets_store_base_shadow_stack(i8* %bitcast12, i32 1)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bitcast14, i32 1)
  call void @__softboundcets_store_base_shadow_stack(i8* getelementptr inbounds ([9 x i8]* @.str19221, i32 0, i32 0), i32 2)
  call void @__softboundcets_store_bound_shadow_stack(i8* getelementptr inbounds ([9 x i8]* @.str19221, i32 1, i32 0), i32 2)
  %call294 = call i8* @softboundcets_strstr(i8* %arraydecay293, i8* getelementptr inbounds ([9 x i8]* @.str19221, i32 0, i32 0)) #6
  %144 = call i8* @__softboundcets_load_base_shadow_stack(i32 0)
  %145 = call i8* @__softboundcets_load_bound_shadow_stack(i32 0)
  call void @__softboundcets_deallocate_shadow_stack_space()
  %tobool295 = icmp ne i8* %call294, null
  br i1 %tobool295, label %if.end302, label %if.then296

if.then296:                                       ; preds = %if.else292
  %arraydecay297 = getelementptr inbounds [256 x i8]* %input, i32 0, i32 0
  store i8* %arraydecay297, i8** %p, align 8
  %bitcast176 = bitcast i8** %p to i8*
  call void @__softboundcets_metadata_store(i8* %bitcast176, i8* %bitcast12, i8* %bitcast14)
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.then296
  %146 = load i8** %p, align 8
  %bitcast124 = bitcast i8** %p to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast124, i8** %base.alloca125, i8** %bound.alloca126)
  %base.load127 = load i8** %base.alloca125
  %bound.load128 = load i8** %bound.alloca126
  %147 = load i8* %146, align 1
  %tobool298 = icmp ne i8 %147, 0
  br i1 %tobool298, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %148 = load i8** %p, align 8
  %bitcast131 = bitcast i8** %p to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast131, i8** %base.alloca132, i8** %bound.alloca133)
  %base.load134 = load i8** %base.alloca132
  %bound.load135 = load i8** %bound.alloca133
  %149 = load i8* %148, align 1
  %conv299 = sext i8 %149 to i32
  %call300 = call i32 @softboundcets_tolower(i32 %conv299) #1
  %conv301 = trunc i32 %call300 to i8
  %150 = load i8** %p, align 8
  %bitcast136 = bitcast i8** %p to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast136, i8** %base.alloca137, i8** %bound.alloca138)
  %base.load139 = load i8** %base.alloca137
  %bound.load140 = load i8** %bound.alloca138
  store i8 %conv301, i8* %150, align 1
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %151 = load i8** %p, align 8
  %bitcast141 = bitcast i8** %p to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast141, i8** %base.alloca142, i8** %bound.alloca143)
  %base.load144 = load i8** %base.alloca142
  %bound.load145 = load i8** %bound.alloca143
  %incdec.ptr = getelementptr inbounds i8* %151, i32 1
  store i8* %incdec.ptr, i8** %p, align 8
  %bitcast177 = bitcast i8** %p to i8*
  call void @__softboundcets_metadata_store(i8* %bitcast177, i8* %base.load144, i8* %bound.load145)
  br label %for.cond

for.end:                                          ; preds = %for.cond
  br label %if.end302

if.end302:                                        ; preds = %for.end, %if.else292
  %arraydecay303 = getelementptr inbounds [256 x i8]* %input, i32 0, i32 0
  call void @__softboundcets_allocate_shadow_stack_space(i32 3)
  call void @__softboundcets_store_base_shadow_stack(i8* %bitcast12, i32 1)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bitcast14, i32 1)
  call void @__softboundcets_store_base_shadow_stack(i8* getelementptr inbounds ([5 x i8]* @.str20222, i32 0, i32 0), i32 2)
  call void @__softboundcets_store_bound_shadow_stack(i8* getelementptr inbounds ([5 x i8]* @.str20222, i32 1, i32 0), i32 2)
  %call304 = call i32 @softboundcets_strcmp(i8* %arraydecay303, i8* getelementptr inbounds ([5 x i8]* @.str20222, i32 0, i32 0)) #6
  call void @__softboundcets_deallocate_shadow_stack_space()
  %tobool305 = icmp ne i32 %call304, 0
  br i1 %tobool305, label %if.else307, label %if.then306

if.then306:                                       ; preds = %if.end302
  call void @free_hash()
  call void @free_ecache()
  call void @softboundcets_exit(i32 0) #4
  unreachable

if.else307:                                       ; preds = %if.end302
  %arraydecay308 = getelementptr inbounds [256 x i8]* %input, i32 0, i32 0
  call void @__softboundcets_allocate_shadow_stack_space(i32 3)
  call void @__softboundcets_store_base_shadow_stack(i8* %bitcast12, i32 1)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bitcast14, i32 1)
  call void @__softboundcets_store_base_shadow_stack(i8* getelementptr inbounds ([5 x i8]* @.str21223, i32 0, i32 0), i32 2)
  call void @__softboundcets_store_bound_shadow_stack(i8* getelementptr inbounds ([5 x i8]* @.str21223, i32 1, i32 0), i32 2)
  %call309 = call i32 @softboundcets_strcmp(i8* %arraydecay308, i8* getelementptr inbounds ([5 x i8]* @.str21223, i32 0, i32 0)) #6
  call void @__softboundcets_deallocate_shadow_stack_space()
  %tobool310 = icmp ne i32 %call309, 0
  br i1 %tobool310, label %if.else316, label %if.then311

if.then311:                                       ; preds = %if.else307
  %152 = load i32* @is_analyzing, align 4
  %tobool312 = icmp ne i32 %152, 0
  br i1 %tobool312, label %if.then313, label %if.else314

if.then313:                                       ; preds = %if.then311
  store i32 0, i32* @is_analyzing, align 4
  store i32 0, i32* @is_pondering, align 4
  store i32 0, i32* @time_for_move, align 4
  br label %if.end315

if.else314:                                       ; preds = %if.then311
  call void @free_hash()
  call void @free_ecache()
  call void @softboundcets_exit(i32 0) #4
  unreachable

if.end315:                                        ; preds = %if.then313
  br label %if.end854

if.else316:                                       ; preds = %if.else307
  %arraydecay317 = getelementptr inbounds [256 x i8]* %input, i32 0, i32 0
  call void @__softboundcets_allocate_shadow_stack_space(i32 3)
  call void @__softboundcets_store_base_shadow_stack(i8* %bitcast12, i32 1)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bitcast14, i32 1)
  call void @__softboundcets_store_base_shadow_stack(i8* getelementptr inbounds ([8 x i8]* @.str22226, i32 0, i32 0), i32 2)
  call void @__softboundcets_store_bound_shadow_stack(i8* getelementptr inbounds ([8 x i8]* @.str22226, i32 1, i32 0), i32 2)
  %call318 = call i32 @softboundcets_strcmp(i8* %arraydecay317, i8* getelementptr inbounds ([8 x i8]* @.str22226, i32 0, i32 0)) #6
  call void @__softboundcets_deallocate_shadow_stack_space()
  %tobool319 = icmp ne i32 %call318, 0
  br i1 %tobool319, label %lor.lhs.false320, label %if.then324

lor.lhs.false320:                                 ; preds = %if.else316
  %arraydecay321 = getelementptr inbounds [256 x i8]* %input, i32 0, i32 0
  call void @__softboundcets_allocate_shadow_stack_space(i32 3)
  call void @__softboundcets_store_base_shadow_stack(i8* %bitcast12, i32 1)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bitcast14, i32 1)
  call void @__softboundcets_store_base_shadow_stack(i8* getelementptr inbounds ([2 x i8]* @.str23227, i32 0, i32 0), i32 2)
  call void @__softboundcets_store_bound_shadow_stack(i8* getelementptr inbounds ([2 x i8]* @.str23227, i32 1, i32 0), i32 2)
  %call322 = call i32 @softboundcets_strcmp(i8* %arraydecay321, i8* getelementptr inbounds ([2 x i8]* @.str23227, i32 0, i32 0)) #6
  call void @__softboundcets_deallocate_shadow_stack_space()
  %tobool323 = icmp ne i32 %call322, 0
  br i1 %tobool323, label %if.else325, label %if.then324

if.then324:                                       ; preds = %lor.lhs.false320, %if.else316
  call void @__softboundcets_allocate_shadow_stack_space(i32 2)
  call void @__softboundcets_store_base_shadow_stack(i8* %bitcast44, i32 1)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bitcast46, i32 1)
  call void @toggle_bool(i32* %show_board)
  call void @__softboundcets_deallocate_shadow_stack_space()
  br label %if.end853

if.else325:                                       ; preds = %lor.lhs.false320
  %arraydecay326 = getelementptr inbounds [256 x i8]* %input, i32 0, i32 0
  call void @__softboundcets_allocate_shadow_stack_space(i32 3)
  call void @__softboundcets_store_base_shadow_stack(i8* %bitcast12, i32 1)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bitcast14, i32 1)
  call void @__softboundcets_store_base_shadow_stack(i8* getelementptr inbounds ([6 x i8]* @.str24228, i32 0, i32 0), i32 2)
  call void @__softboundcets_store_bound_shadow_stack(i8* getelementptr inbounds ([6 x i8]* @.str24228, i32 1, i32 0), i32 2)
  %call327 = call i32 @softboundcets_strncmp(i8* %arraydecay326, i8* getelementptr inbounds ([6 x i8]* @.str24228, i32 0, i32 0), i64 5) #6
  call void @__softboundcets_deallocate_shadow_stack_space()
  %tobool328 = icmp ne i32 %call327, 0
  br i1 %tobool328, label %if.else340, label %if.then329

if.then329:                                       ; preds = %if.else325
  %arraydecay330 = getelementptr inbounds [256 x i8]* %input, i32 0, i32 0
  %add.ptr = getelementptr inbounds i8* %arraydecay330, i64 6
  %call331 = call i32 (i8*, i8*, ...)* @__isoc99_sscanf(i8* %add.ptr, i8* getelementptr inbounds ([3 x i8]* @.str25229, i32 0, i32 0), i32* %depth) #1
  store i32 0, i32* @raw_nodes, align 4
  %call332 = call i64 @rtime()
  store i64 %call332, i64* %xstart_time, align 8
  %153 = load i32* %depth, align 4
  call void @perft(i32 %153)
  %154 = load i32* %depth, align 4
  %155 = load i32* @raw_nodes, align 4
  %call333 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([28 x i8]* @.str26232, i32 0, i32 0), i32 %154, i32 %155)
  %call334 = call i64 @rtime()
  %156 = load i64* %xstart_time, align 8
  %call335 = call i32 @rdifftime(i64 %call334, i64 %156)
  %conv336 = sitofp i32 %call335 to float
  %conv337 = fpext float %conv336 to double
  %div338 = fdiv double %conv337, 1.000000e+02
  %call339 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([13 x i8]* @.str27233, i32 0, i32 0), double %div338)
  br label %if.end852

if.else340:                                       ; preds = %if.else325
  %arraydecay341 = getelementptr inbounds [256 x i8]* %input, i32 0, i32 0
  call void @__softboundcets_allocate_shadow_stack_space(i32 3)
  call void @__softboundcets_store_base_shadow_stack(i8* %bitcast12, i32 1)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bitcast14, i32 1)
  call void @__softboundcets_store_base_shadow_stack(i8* getelementptr inbounds ([4 x i8]* @.str28234, i32 0, i32 0), i32 2)
  call void @__softboundcets_store_bound_shadow_stack(i8* getelementptr inbounds ([4 x i8]* @.str28234, i32 1, i32 0), i32 2)
  %call342 = call i32 @softboundcets_strcmp(i8* %arraydecay341, i8* getelementptr inbounds ([4 x i8]* @.str28234, i32 0, i32 0)) #6
  call void @__softboundcets_deallocate_shadow_stack_space()
  %tobool343 = icmp ne i32 %call342, 0
  br i1 %tobool343, label %if.else358, label %if.then344

if.then344:                                       ; preds = %if.else340
  %157 = load i32* @xb_mode, align 4
  %tobool345 = icmp ne i32 %157, 0
  br i1 %tobool345, label %if.then346, label %if.end348

if.then346:                                       ; preds = %if.then344
  %call347 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([40 x i8]* @.str29235, i32 0, i32 0), i8* getelementptr inbounds ([30 x i8]* @setcode, i32 0, i32 0))
  br label %if.end348

if.end348:                                        ; preds = %if.then346, %if.then344
  %158 = load i32* @is_analyzing, align 4
  %tobool349 = icmp ne i32 %158, 0
  br i1 %tobool349, label %if.else356, label %if.then350

if.then350:                                       ; preds = %if.end348
  call void @__softboundcets_memcopy_check(i8* bitcast ([14 x i32]* @material to i8*), i8* bitcast ([14 x i32]* @std_material to i8*), i64 56, i8* null, i8* inttoptr (i64 281474976710656 to i8*), i8* null, i8* inttoptr (i64 281474976710656 to i8*))
  call void @__softboundcets_copy_metadata(i8* bitcast ([14 x i32]* @material to i8*), i8* bitcast ([14 x i32]* @std_material to i8*), i64 56)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* bitcast ([14 x i32]* @material to i8*), i8* bitcast ([14 x i32]* @std_material to i8*), i64 56, i32 16, i1 false)
  store i32 2, i32* @Variant, align 4
  call void @init_game()
  call void @initialize_hash()
  %159 = load i32* %braindeadinterface, align 4
  %tobool351 = icmp ne i32 %159, 0
  br i1 %tobool351, label %if.end353, label %if.then352

if.then352:                                       ; preds = %if.then350
  call void @clear_tt()
  call void @reset_ecache()
  br label %if.end353

if.end353:                                        ; preds = %if.then352, %if.then350
  store i32 0, i32* %force_mode, align 4
  store i32 0, i32* @must_sit, align 4
  store i32 0, i32* @go_fast, align 4
  store i32 0, i32* @piecedead, align 4
  store i32 0, i32* @partnerdead, align 4
  store i32 0, i32* @kibitzed, align 4
  store i32 0, i32* @fixed_time, align 4
  store i32 0, i32* @root_to_move, align 4
  store i32 0, i32* @comp_color, align 4
  store i32 0, i32* @move_number, align 4
  %160 = load i32* @move_number, align 4
  %idxprom354 = sext i32 %160 to i64
  %bitcast153 = bitcast [600 x i32]* @hash_history to i8*
  %bitcast154 = bitcast [600 x i32]* getelementptr inbounds ([600 x i32]* @hash_history, i32 1) to i8*
  %arrayidx355 = getelementptr inbounds [600 x i32]* @hash_history, i32 0, i64 %idxprom354
  store i32 0, i32* %arrayidx355, align 4
  store i32 0, i32* @bookidx, align 4
  store i32 2000, i32* @opp_rating, align 4
  store i32 2000, i32* @my_rating, align 4
  store i32 0, i32* @must_go, align 4
  store i32 1, i32* @tradefreely, align 4
  store i32 0, i32* %automode, align 4
  call void @CheckBadFlow(i32 1)
  call void @ResetHandValue()
  br label %if.end357

if.else356:                                       ; preds = %if.end348
  call void @init_game()
  store i32 0, i32* @move_number, align 4
  br label %if.end357

if.end357:                                        ; preds = %if.else356, %if.end353
  br label %if.end851

if.else358:                                       ; preds = %if.else340
  %arraydecay359 = getelementptr inbounds [256 x i8]* %input, i32 0, i32 0
  call void @__softboundcets_allocate_shadow_stack_space(i32 3)
  call void @__softboundcets_store_base_shadow_stack(i8* %bitcast12, i32 1)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bitcast14, i32 1)
  call void @__softboundcets_store_base_shadow_stack(i8* getelementptr inbounds ([7 x i8]* @.str30238, i32 0, i32 0), i32 2)
  call void @__softboundcets_store_bound_shadow_stack(i8* getelementptr inbounds ([7 x i8]* @.str30238, i32 1, i32 0), i32 2)
  %call360 = call i32 @softboundcets_strcmp(i8* %arraydecay359, i8* getelementptr inbounds ([7 x i8]* @.str30238, i32 0, i32 0)) #6
  call void @__softboundcets_deallocate_shadow_stack_space()
  %tobool361 = icmp ne i32 %call360, 0
  br i1 %tobool361, label %if.else366, label %if.then362

if.then362:                                       ; preds = %if.else358
  store i32 1, i32* @xb_mode, align 4
  call void @__softboundcets_allocate_shadow_stack_space(i32 2)
  call void @__softboundcets_store_base_shadow_stack(i8* %bitcast44, i32 1)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bitcast46, i32 1)
  call void @toggle_bool(i32* %show_board)
  call void @__softboundcets_deallocate_shadow_stack_space()
  call void @__softboundcets_allocate_shadow_stack_space(i32 2)
  call void @__softboundcets_store_base_shadow_stack(i8* null, i32 1)
  call void @__softboundcets_store_bound_shadow_stack(i8* null, i32 1)
  %call363 = call void (i32)* (i32, void (i32)*)* @softboundcets_signal(i32 2, void (i32)* inttoptr (i64 1 to void (i32)*)) #1
  %161 = call i8* @__softboundcets_load_base_shadow_stack(i32 0)
  %162 = call i8* @__softboundcets_load_bound_shadow_stack(i32 0)
  call void @__softboundcets_deallocate_shadow_stack_space()
  %call364 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([2 x i8]* @.str16218, i32 0, i32 0))
  %call365 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([20 x i8]* @.str31239, i32 0, i32 0))
  call void @BegForPartner()
  br label %if.end850

if.else366:                                       ; preds = %if.else358
  %arraydecay367 = getelementptr inbounds [256 x i8]* %input, i32 0, i32 0
  call void @__softboundcets_allocate_shadow_stack_space(i32 3)
  call void @__softboundcets_store_base_shadow_stack(i8* %bitcast12, i32 1)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bitcast14, i32 1)
  call void @__softboundcets_store_base_shadow_stack(i8* getelementptr inbounds ([6 x i8]* @.str32240, i32 0, i32 0), i32 2)
  call void @__softboundcets_store_bound_shadow_stack(i8* getelementptr inbounds ([6 x i8]* @.str32240, i32 1, i32 0), i32 2)
  %call368 = call i32 @softboundcets_strcmp(i8* %arraydecay367, i8* getelementptr inbounds ([6 x i8]* @.str32240, i32 0, i32 0)) #6
  call void @__softboundcets_deallocate_shadow_stack_space()
  %tobool369 = icmp ne i32 %call368, 0
  br i1 %tobool369, label %if.else379, label %if.then370

if.then370:                                       ; preds = %if.else366
  %163 = load i32* @nodes, align 4
  %164 = load i32* @qnodes, align 4
  %conv371 = sitofp i32 %164 to float
  %165 = load i32* @nodes, align 4
  %conv372 = sitofp i32 %165 to float
  %div373 = fdiv float %conv371, %conv372
  %conv374 = fpext float %div373 to double
  %mul375 = fmul double %conv374, 1.000000e+02
  %conv376 = fptrunc double %mul375 to float
  %conv377 = fpext float %conv376 to double
  %call378 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([38 x i8]* @.str33241, i32 0, i32 0), i32 %163, double %conv377)
  br label %if.end849

if.else379:                                       ; preds = %if.else366
  %arraydecay380 = getelementptr inbounds [256 x i8]* %input, i32 0, i32 0
  call void @__softboundcets_allocate_shadow_stack_space(i32 3)
  call void @__softboundcets_store_base_shadow_stack(i8* %bitcast12, i32 1)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bitcast14, i32 1)
  call void @__softboundcets_store_base_shadow_stack(i8* getelementptr inbounds ([5 x i8]* @.str34242, i32 0, i32 0), i32 2)
  call void @__softboundcets_store_bound_shadow_stack(i8* getelementptr inbounds ([5 x i8]* @.str34242, i32 1, i32 0), i32 2)
  %call381 = call i32 @softboundcets_strcmp(i8* %arraydecay380, i8* getelementptr inbounds ([5 x i8]* @.str34242, i32 0, i32 0)) #6
  call void @__softboundcets_deallocate_shadow_stack_space()
  %tobool382 = icmp ne i32 %call381, 0
  br i1 %tobool382, label %if.else387, label %if.then383

if.then383:                                       ; preds = %if.else379
  call void @__softboundcets_allocate_shadow_stack_space(i32 2)
  call void @__softboundcets_store_base_shadow_stack(i8* bitcast (i32* @post to i8*), i32 1)
  call void @__softboundcets_store_bound_shadow_stack(i8* bitcast (i32* getelementptr inbounds (i32* @post, i32 1) to i8*), i32 1)
  call void @toggle_bool(i32* @post)
  call void @__softboundcets_deallocate_shadow_stack_space()
  %166 = load i32* @xb_mode, align 4
  %tobool384 = icmp ne i32 %166, 0
  br i1 %tobool384, label %if.then385, label %if.end386

if.then385:                                       ; preds = %if.then383
  store i32 1, i32* @post, align 4
  br label %if.end386

if.end386:                                        ; preds = %if.then385, %if.then383
  br label %if.end848

if.else387:                                       ; preds = %if.else379
  %arraydecay388 = getelementptr inbounds [256 x i8]* %input, i32 0, i32 0
  call void @__softboundcets_allocate_shadow_stack_space(i32 3)
  call void @__softboundcets_store_base_shadow_stack(i8* %bitcast12, i32 1)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bitcast14, i32 1)
  call void @__softboundcets_store_base_shadow_stack(i8* getelementptr inbounds ([7 x i8]* @.str35245, i32 0, i32 0), i32 2)
  call void @__softboundcets_store_bound_shadow_stack(i8* getelementptr inbounds ([7 x i8]* @.str35245, i32 1, i32 0), i32 2)
  %call389 = call i32 @softboundcets_strcmp(i8* %arraydecay388, i8* getelementptr inbounds ([7 x i8]* @.str35245, i32 0, i32 0)) #6
  call void @__softboundcets_deallocate_shadow_stack_space()
  %tobool390 = icmp ne i32 %call389, 0
  br i1 %tobool390, label %if.else392, label %if.then391

if.then391:                                       ; preds = %if.else387
  store i32 0, i32* @post, align 4
  br label %if.end847

if.else392:                                       ; preds = %if.else387
  %arraydecay393 = getelementptr inbounds [256 x i8]* %input, i32 0, i32 0
  call void @__softboundcets_allocate_shadow_stack_space(i32 3)
  call void @__softboundcets_store_base_shadow_stack(i8* %bitcast12, i32 1)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bitcast14, i32 1)
  call void @__softboundcets_store_base_shadow_stack(i8* getelementptr inbounds ([7 x i8]* @.str36246, i32 0, i32 0), i32 2)
  call void @__softboundcets_store_bound_shadow_stack(i8* getelementptr inbounds ([7 x i8]* @.str36246, i32 1, i32 0), i32 2)
  %call394 = call i32 @softboundcets_strcmp(i8* %arraydecay393, i8* getelementptr inbounds ([7 x i8]* @.str36246, i32 0, i32 0)) #6
  call void @__softboundcets_deallocate_shadow_stack_space()
  %tobool395 = icmp ne i32 %call394, 0
  br i1 %tobool395, label %if.else397, label %if.then396

if.then396:                                       ; preds = %if.else392
  br label %while.body

if.else397:                                       ; preds = %if.else392
  %arraydecay398 = getelementptr inbounds [256 x i8]* %input, i32 0, i32 0
  call void @__softboundcets_allocate_shadow_stack_space(i32 3)
  call void @__softboundcets_store_base_shadow_stack(i8* %bitcast12, i32 1)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bitcast14, i32 1)
  call void @__softboundcets_store_base_shadow_stack(i8* getelementptr inbounds ([5 x i8]* @.str37247, i32 0, i32 0), i32 2)
  call void @__softboundcets_store_bound_shadow_stack(i8* getelementptr inbounds ([5 x i8]* @.str37247, i32 1, i32 0), i32 2)
  %call399 = call i32 @softboundcets_strcmp(i8* %arraydecay398, i8* getelementptr inbounds ([5 x i8]* @.str37247, i32 0, i32 0)) #6
  call void @__softboundcets_deallocate_shadow_stack_space()
  %tobool400 = icmp ne i32 %call399, 0
  br i1 %tobool400, label %if.else402, label %if.then401

if.then401:                                       ; preds = %if.else397
  store i32 1, i32* @allow_pondering, align 4
  br label %while.body

if.else402:                                       ; preds = %if.else397
  %arraydecay403 = getelementptr inbounds [256 x i8]* %input, i32 0, i32 0
  call void @__softboundcets_allocate_shadow_stack_space(i32 3)
  call void @__softboundcets_store_base_shadow_stack(i8* %bitcast12, i32 1)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bitcast14, i32 1)
  call void @__softboundcets_store_base_shadow_stack(i8* getelementptr inbounds ([5 x i8]* @.str38248, i32 0, i32 0), i32 2)
  call void @__softboundcets_store_bound_shadow_stack(i8* getelementptr inbounds ([5 x i8]* @.str38248, i32 1, i32 0), i32 2)
  %call404 = call i32 @softboundcets_strcmp(i8* %arraydecay403, i8* getelementptr inbounds ([5 x i8]* @.str38248, i32 0, i32 0)) #6
  call void @__softboundcets_deallocate_shadow_stack_space()
  %tobool405 = icmp ne i32 %call404, 0
  br i1 %tobool405, label %if.else407, label %if.then406

if.then406:                                       ; preds = %if.else402
  store i32 0, i32* @allow_pondering, align 4
  br label %while.body

if.else407:                                       ; preds = %if.else402
  %arraydecay408 = getelementptr inbounds [256 x i8]* %input, i32 0, i32 0
  call void @__softboundcets_allocate_shadow_stack_space(i32 3)
  call void @__softboundcets_store_base_shadow_stack(i8* %bitcast12, i32 1)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bitcast14, i32 1)
  call void @__softboundcets_store_base_shadow_stack(i8* getelementptr inbounds ([2 x i8]* @.str39249, i32 0, i32 0), i32 2)
  call void @__softboundcets_store_bound_shadow_stack(i8* getelementptr inbounds ([2 x i8]* @.str39249, i32 1, i32 0), i32 2)
  %call409 = call i32 @softboundcets_strcmp(i8* %arraydecay408, i8* getelementptr inbounds ([2 x i8]* @.str39249, i32 0, i32 0)) #6
  call void @__softboundcets_deallocate_shadow_stack_space()
  %tobool410 = icmp ne i32 %call409, 0
  br i1 %tobool410, label %if.else412, label %if.then411

if.then411:                                       ; preds = %if.else407
  br label %while.body

if.else412:                                       ; preds = %if.else407
  %arraydecay413 = getelementptr inbounds [256 x i8]* %input, i32 0, i32 0
  call void @__softboundcets_allocate_shadow_stack_space(i32 3)
  call void @__softboundcets_store_base_shadow_stack(i8* %bitcast12, i32 1)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bitcast14, i32 1)
  call void @__softboundcets_store_base_shadow_stack(i8* getelementptr inbounds ([6 x i8]* @.str40250, i32 0, i32 0), i32 2)
  call void @__softboundcets_store_bound_shadow_stack(i8* getelementptr inbounds ([6 x i8]* @.str40250, i32 1, i32 0), i32 2)
  %call414 = call i32 @softboundcets_strcmp(i8* %arraydecay413, i8* getelementptr inbounds ([6 x i8]* @.str40250, i32 0, i32 0)) #6
  call void @__softboundcets_deallocate_shadow_stack_space()
  %tobool415 = icmp ne i32 %call414, 0
  br i1 %tobool415, label %if.else417, label %if.then416

if.then416:                                       ; preds = %if.else412
  store i32 1, i32* @white_to_move, align 4
  store i32 0, i32* @root_to_move, align 4
  store i32 0, i32* @comp_color, align 4
  br label %if.end842

if.else417:                                       ; preds = %if.else412
  %arraydecay418 = getelementptr inbounds [256 x i8]* %input, i32 0, i32 0
  call void @__softboundcets_allocate_shadow_stack_space(i32 3)
  call void @__softboundcets_store_base_shadow_stack(i8* %bitcast12, i32 1)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bitcast14, i32 1)
  call void @__softboundcets_store_base_shadow_stack(i8* getelementptr inbounds ([6 x i8]* @.str41251, i32 0, i32 0), i32 2)
  call void @__softboundcets_store_bound_shadow_stack(i8* getelementptr inbounds ([6 x i8]* @.str41251, i32 1, i32 0), i32 2)
  %call419 = call i32 @softboundcets_strcmp(i8* %arraydecay418, i8* getelementptr inbounds ([6 x i8]* @.str41251, i32 0, i32 0)) #6
  call void @__softboundcets_deallocate_shadow_stack_space()
  %tobool420 = icmp ne i32 %call419, 0
  br i1 %tobool420, label %if.else422, label %if.then421

if.then421:                                       ; preds = %if.else417
  store i32 0, i32* @white_to_move, align 4
  store i32 1, i32* @root_to_move, align 4
  store i32 1, i32* @comp_color, align 4
  br label %if.end841

if.else422:                                       ; preds = %if.else417
  %arraydecay423 = getelementptr inbounds [256 x i8]* %input, i32 0, i32 0
  call void @__softboundcets_allocate_shadow_stack_space(i32 3)
  call void @__softboundcets_store_base_shadow_stack(i8* %bitcast12, i32 1)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bitcast14, i32 1)
  call void @__softboundcets_store_base_shadow_stack(i8* getelementptr inbounds ([6 x i8]* @.str42252, i32 0, i32 0), i32 2)
  call void @__softboundcets_store_bound_shadow_stack(i8* getelementptr inbounds ([6 x i8]* @.str42252, i32 1, i32 0), i32 2)
  %call424 = call i32 @softboundcets_strcmp(i8* %arraydecay423, i8* getelementptr inbounds ([6 x i8]* @.str42252, i32 0, i32 0)) #6
  call void @__softboundcets_deallocate_shadow_stack_space()
  %tobool425 = icmp ne i32 %call424, 0
  br i1 %tobool425, label %if.else427, label %if.then426

if.then426:                                       ; preds = %if.else422
  store i32 1, i32* %force_mode, align 4
  br label %if.end840

if.else427:                                       ; preds = %if.else422
  %arraydecay428 = getelementptr inbounds [256 x i8]* %input, i32 0, i32 0
  call void @__softboundcets_allocate_shadow_stack_space(i32 3)
  call void @__softboundcets_store_base_shadow_stack(i8* %bitcast12, i32 1)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bitcast14, i32 1)
  call void @__softboundcets_store_base_shadow_stack(i8* getelementptr inbounds ([5 x i8]* @.str43253, i32 0, i32 0), i32 2)
  call void @__softboundcets_store_bound_shadow_stack(i8* getelementptr inbounds ([5 x i8]* @.str43253, i32 1, i32 0), i32 2)
  %call429 = call i32 @softboundcets_strcmp(i8* %arraydecay428, i8* getelementptr inbounds ([5 x i8]* @.str43253, i32 0, i32 0)) #6
  call void @__softboundcets_deallocate_shadow_stack_space()
  %tobool430 = icmp ne i32 %call429, 0
  br i1 %tobool430, label %if.else434, label %if.then431

if.then431:                                       ; preds = %if.else427
  call void @check_phase()
  %call432 = call i32 @eval(i32 -1000000, i32 1000000)
  %call433 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([10 x i8]* @.str44254, i32 0, i32 0), i32 %call432)
  br label %if.end839

if.else434:                                       ; preds = %if.else427
  %arraydecay435 = getelementptr inbounds [256 x i8]* %input, i32 0, i32 0
  call void @__softboundcets_allocate_shadow_stack_space(i32 3)
  call void @__softboundcets_store_base_shadow_stack(i8* %bitcast12, i32 1)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bitcast14, i32 1)
  call void @__softboundcets_store_base_shadow_stack(i8* getelementptr inbounds ([3 x i8]* @.str45255, i32 0, i32 0), i32 2)
  call void @__softboundcets_store_bound_shadow_stack(i8* getelementptr inbounds ([3 x i8]* @.str45255, i32 1, i32 0), i32 2)
  %call436 = call i32 @softboundcets_strcmp(i8* %arraydecay435, i8* getelementptr inbounds ([3 x i8]* @.str45255, i32 0, i32 0)) #6
  call void @__softboundcets_deallocate_shadow_stack_space()
  %tobool437 = icmp ne i32 %call436, 0
  br i1 %tobool437, label %if.else439, label %if.then438

if.then438:                                       ; preds = %if.else434
  %167 = load i32* @white_to_move, align 4
  store i32 %167, i32* @comp_color, align 4
  store i32 0, i32* %force_mode, align 4
  br label %if.end838

if.else439:                                       ; preds = %if.else434
  %arraydecay440 = getelementptr inbounds [256 x i8]* %input, i32 0, i32 0
  call void @__softboundcets_allocate_shadow_stack_space(i32 3)
  call void @__softboundcets_store_base_shadow_stack(i8* %bitcast12, i32 1)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bitcast14, i32 1)
  call void @__softboundcets_store_base_shadow_stack(i8* getelementptr inbounds ([5 x i8]* @.str46256, i32 0, i32 0), i32 2)
  call void @__softboundcets_store_bound_shadow_stack(i8* getelementptr inbounds ([5 x i8]* @.str46256, i32 1, i32 0), i32 2)
  %call441 = call i32 @softboundcets_strncmp(i8* %arraydecay440, i8* getelementptr inbounds ([5 x i8]* @.str46256, i32 0, i32 0), i64 4) #6
  call void @__softboundcets_deallocate_shadow_stack_space()
  %tobool442 = icmp ne i32 %call441, 0
  br i1 %tobool442, label %if.else447, label %if.then443

if.then443:                                       ; preds = %if.else439
  %arraydecay444 = getelementptr inbounds [256 x i8]* %input, i32 0, i32 0
  %add.ptr445 = getelementptr inbounds i8* %arraydecay444, i64 5
  %call446 = call i32 (i8*, i8*, ...)* @__isoc99_sscanf(i8* %add.ptr445, i8* getelementptr inbounds ([3 x i8]* @.str47257, i32 0, i32 0), i32* @time_left) #1
  br label %if.end837

if.else447:                                       ; preds = %if.else439
  %arraydecay448 = getelementptr inbounds [256 x i8]* %input, i32 0, i32 0
  call void @__softboundcets_allocate_shadow_stack_space(i32 3)
  call void @__softboundcets_store_base_shadow_stack(i8* %bitcast12, i32 1)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bitcast14, i32 1)
  call void @__softboundcets_store_base_shadow_stack(i8* getelementptr inbounds ([5 x i8]* @.str48258, i32 0, i32 0), i32 2)
  call void @__softboundcets_store_bound_shadow_stack(i8* getelementptr inbounds ([5 x i8]* @.str48258, i32 1, i32 0), i32 2)
  %call449 = call i32 @softboundcets_strncmp(i8* %arraydecay448, i8* getelementptr inbounds ([5 x i8]* @.str48258, i32 0, i32 0), i64 4) #6
  call void @__softboundcets_deallocate_shadow_stack_space()
  %tobool450 = icmp ne i32 %call449, 0
  br i1 %tobool450, label %if.else455, label %if.then451

if.then451:                                       ; preds = %if.else447
  %arraydecay452 = getelementptr inbounds [256 x i8]* %input, i32 0, i32 0
  %add.ptr453 = getelementptr inbounds i8* %arraydecay452, i64 5
  %call454 = call i32 (i8*, i8*, ...)* @__isoc99_sscanf(i8* %add.ptr453, i8* getelementptr inbounds ([3 x i8]* @.str47257, i32 0, i32 0), i32* @opp_time) #1
  br label %if.end836

if.else455:                                       ; preds = %if.else447
  %arraydecay456 = getelementptr inbounds [256 x i8]* %input, i32 0, i32 0
  call void @__softboundcets_allocate_shadow_stack_space(i32 3)
  call void @__softboundcets_store_base_shadow_stack(i8* %bitcast12, i32 1)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bitcast14, i32 1)
  call void @__softboundcets_store_base_shadow_stack(i8* getelementptr inbounds ([6 x i8]* @.str49259, i32 0, i32 0), i32 2)
  call void @__softboundcets_store_bound_shadow_stack(i8* getelementptr inbounds ([6 x i8]* @.str49259, i32 1, i32 0), i32 2)
  %call457 = call i32 @softboundcets_strncmp(i8* %arraydecay456, i8* getelementptr inbounds ([6 x i8]* @.str49259, i32 0, i32 0), i64 5) #6
  call void @__softboundcets_deallocate_shadow_stack_space()
  %tobool458 = icmp ne i32 %call457, 0
  br i1 %tobool458, label %if.else477, label %if.then459

if.then459:                                       ; preds = %if.else455
  %arraydecay460 = getelementptr inbounds [256 x i8]* %input, i32 0, i32 0
  %add.ptr461 = getelementptr inbounds i8* %arraydecay460, i64 6
  call void @__softboundcets_allocate_shadow_stack_space(i32 3)
  call void @__softboundcets_store_base_shadow_stack(i8* %bitcast12, i32 1)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bitcast14, i32 1)
  call void @__softboundcets_store_base_shadow_stack(i8* getelementptr inbounds ([2 x i8]* @.str50260, i32 0, i32 0), i32 2)
  call void @__softboundcets_store_bound_shadow_stack(i8* getelementptr inbounds ([2 x i8]* @.str50260, i32 1, i32 0), i32 2)
  %call462 = call i8* @softboundcets_strstr(i8* %add.ptr461, i8* getelementptr inbounds ([2 x i8]* @.str50260, i32 0, i32 0)) #6
  %168 = call i8* @__softboundcets_load_base_shadow_stack(i32 0)
  %169 = call i8* @__softboundcets_load_bound_shadow_stack(i32 0)
  call void @__softboundcets_deallocate_shadow_stack_space()
  %tobool463 = icmp ne i8* %call462, null
  br i1 %tobool463, label %if.then464, label %if.else471

if.then464:                                       ; preds = %if.then459
  %arraydecay465 = getelementptr inbounds [256 x i8]* %input, i32 0, i32 0
  %add.ptr466 = getelementptr inbounds i8* %arraydecay465, i64 6
  %call467 = call i32 (i8*, i8*, ...)* @__isoc99_sscanf(i8* %add.ptr466, i8* getelementptr inbounds ([12 x i8]* @.str51261, i32 0, i32 0), i32* @moves_to_tc, i32* @min_per_game, i32* @sec_per_game, i32* @inc) #1
  %170 = load i32* @min_per_game, align 4
  %mul468 = mul nsw i32 %170, 6000
  %171 = load i32* @sec_per_game, align 4
  %mul469 = mul nsw i32 %171, 100
  %add470 = add nsw i32 %mul468, %mul469
  store i32 %add470, i32* @time_left, align 4
  %172 = load i32* @time_left, align 4
  store i32 %172, i32* @opp_time, align 4
  br label %if.end476

if.else471:                                       ; preds = %if.then459
  %arraydecay472 = getelementptr inbounds [256 x i8]* %input, i32 0, i32 0
  %add.ptr473 = getelementptr inbounds i8* %arraydecay472, i64 6
  %call474 = call i32 (i8*, i8*, ...)* @__isoc99_sscanf(i8* %add.ptr473, i8* getelementptr inbounds ([9 x i8]* @.str52264, i32 0, i32 0), i32* @moves_to_tc, i32* @min_per_game, i32* @inc) #1
  %173 = load i32* @min_per_game, align 4
  %mul475 = mul nsw i32 %173, 6000
  store i32 %mul475, i32* @time_left, align 4
  %174 = load i32* @time_left, align 4
  store i32 %174, i32* @opp_time, align 4
  br label %if.end476

if.end476:                                        ; preds = %if.else471, %if.then464
  store i32 0, i32* @fixed_time, align 4
  store i32 0, i32* @time_cushion, align 4
  br label %if.end835

if.else477:                                       ; preds = %if.else455
  %arraydecay478 = getelementptr inbounds [256 x i8]* %input, i32 0, i32 0
  call void @__softboundcets_allocate_shadow_stack_space(i32 3)
  call void @__softboundcets_store_base_shadow_stack(i8* %bitcast12, i32 1)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bitcast14, i32 1)
  call void @__softboundcets_store_base_shadow_stack(i8* getelementptr inbounds ([7 x i8]* @.str53267, i32 0, i32 0), i32 2)
  call void @__softboundcets_store_bound_shadow_stack(i8* getelementptr inbounds ([7 x i8]* @.str53267, i32 1, i32 0), i32 2)
  %call479 = call i32 @softboundcets_strncmp(i8* %arraydecay478, i8* getelementptr inbounds ([7 x i8]* @.str53267, i32 0, i32 0), i64 6) #6
  call void @__softboundcets_deallocate_shadow_stack_space()
  %tobool480 = icmp ne i32 %call479, 0
  br i1 %tobool480, label %if.else493, label %if.then481

if.then481:                                       ; preds = %if.else477
  %arraydecay482 = getelementptr inbounds [256 x i8]* %input, i32 0, i32 0
  %add.ptr483 = getelementptr inbounds i8* %arraydecay482, i64 7
  %call484 = call i32 (i8*, i8*, ...)* @__isoc99_sscanf(i8* %add.ptr483, i8* getelementptr inbounds ([6 x i8]* @.str54268, i32 0, i32 0), i32* @my_rating, i32* @opp_rating) #1
  %175 = load i32* @my_rating, align 4
  %cmp485 = icmp eq i32 %175, 0
  br i1 %cmp485, label %if.then487, label %if.end488

if.then487:                                       ; preds = %if.then481
  store i32 2000, i32* @my_rating, align 4
  br label %if.end488

if.end488:                                        ; preds = %if.then487, %if.then481
  %176 = load i32* @opp_rating, align 4
  %cmp489 = icmp eq i32 %176, 0
  br i1 %cmp489, label %if.then491, label %if.end492

if.then491:                                       ; preds = %if.end488
  store i32 2000, i32* @opp_rating, align 4
  br label %if.end492

if.end492:                                        ; preds = %if.then491, %if.end488
  br label %if.end834

if.else493:                                       ; preds = %if.else477
  %arraydecay494 = getelementptr inbounds [256 x i8]* %input, i32 0, i32 0
  call void @__softboundcets_allocate_shadow_stack_space(i32 3)
  call void @__softboundcets_store_base_shadow_stack(i8* %bitcast12, i32 1)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bitcast14, i32 1)
  call void @__softboundcets_store_base_shadow_stack(i8* getelementptr inbounds ([8 x i8]* @.str55269, i32 0, i32 0), i32 2)
  call void @__softboundcets_store_bound_shadow_stack(i8* getelementptr inbounds ([8 x i8]* @.str55269, i32 1, i32 0), i32 2)
  %call495 = call i32 @softboundcets_strncmp(i8* %arraydecay494, i8* getelementptr inbounds ([8 x i8]* @.str55269, i32 0, i32 0), i64 7) #6
  call void @__softboundcets_deallocate_shadow_stack_space()
  %tobool496 = icmp ne i32 %call495, 0
  br i1 %tobool496, label %if.else499, label %if.then497

if.then497:                                       ; preds = %if.else493
  %arraydecay498 = getelementptr inbounds [256 x i8]* %input, i32 0, i32 0
  call void @__softboundcets_allocate_shadow_stack_space(i32 2)
  call void @__softboundcets_store_base_shadow_stack(i8* %bitcast12, i32 1)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bitcast14, i32 1)
  call void @ProcessHoldings(i8* %arraydecay498)
  call void @__softboundcets_deallocate_shadow_stack_space()
  br label %if.end833

if.else499:                                       ; preds = %if.else493
  %arraydecay500 = getelementptr inbounds [256 x i8]* %input, i32 0, i32 0
  call void @__softboundcets_allocate_shadow_stack_space(i32 3)
  call void @__softboundcets_store_base_shadow_stack(i8* %bitcast12, i32 1)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bitcast14, i32 1)
  call void @__softboundcets_store_base_shadow_stack(i8* getelementptr inbounds ([8 x i8]* @.str56270, i32 0, i32 0), i32 2)
  call void @__softboundcets_store_bound_shadow_stack(i8* getelementptr inbounds ([8 x i8]* @.str56270, i32 1, i32 0), i32 2)
  %call501 = call i32 @softboundcets_strncmp(i8* %arraydecay500, i8* getelementptr inbounds ([8 x i8]* @.str56270, i32 0, i32 0), i64 7) #6
  call void @__softboundcets_deallocate_shadow_stack_space()
  %tobool502 = icmp ne i32 %call501, 0
  br i1 %tobool502, label %if.else539, label %if.then503

if.then503:                                       ; preds = %if.else499
  %arraydecay504 = getelementptr inbounds [256 x i8]* %input, i32 0, i32 0
  call void @__softboundcets_allocate_shadow_stack_space(i32 3)
  call void @__softboundcets_store_base_shadow_stack(i8* %bitcast12, i32 1)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bitcast14, i32 1)
  call void @__softboundcets_store_base_shadow_stack(i8* getelementptr inbounds ([7 x i8]* @.str57271, i32 0, i32 0), i32 2)
  call void @__softboundcets_store_bound_shadow_stack(i8* getelementptr inbounds ([7 x i8]* @.str57271, i32 1, i32 0), i32 2)
  %call505 = call i8* @softboundcets_strstr(i8* %arraydecay504, i8* getelementptr inbounds ([7 x i8]* @.str57271, i32 0, i32 0)) #6
  %177 = call i8* @__softboundcets_load_base_shadow_stack(i32 0)
  %178 = call i8* @__softboundcets_load_bound_shadow_stack(i32 0)
  call void @__softboundcets_deallocate_shadow_stack_space()
  %tobool506 = icmp ne i8* %call505, null
  br i1 %tobool506, label %if.then507, label %if.else508

if.then507:                                       ; preds = %if.then503
  store i32 2, i32* @Variant, align 4
  call void @__softboundcets_memcopy_check(i8* bitcast ([14 x i32]* @material to i8*), i8* bitcast ([14 x i32]* @std_material to i8*), i64 56, i8* null, i8* inttoptr (i64 281474976710656 to i8*), i8* null, i8* inttoptr (i64 281474976710656 to i8*))
  call void @__softboundcets_copy_metadata(i8* bitcast ([14 x i32]* @material to i8*), i8* bitcast ([14 x i32]* @std_material to i8*), i64 56)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* bitcast ([14 x i32]* @material to i8*), i8* bitcast ([14 x i32]* @std_material to i8*), i64 56, i32 16, i1 false)
  br label %if.end538

if.else508:                                       ; preds = %if.then503
  %arraydecay509 = getelementptr inbounds [256 x i8]* %input, i32 0, i32 0
  call void @__softboundcets_allocate_shadow_stack_space(i32 3)
  call void @__softboundcets_store_base_shadow_stack(i8* %bitcast12, i32 1)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bitcast14, i32 1)
  call void @__softboundcets_store_base_shadow_stack(i8* getelementptr inbounds ([11 x i8]* @.str58272, i32 0, i32 0), i32 2)
  call void @__softboundcets_store_bound_shadow_stack(i8* getelementptr inbounds ([11 x i8]* @.str58272, i32 1, i32 0), i32 2)
  %call510 = call i8* @softboundcets_strstr(i8* %arraydecay509, i8* getelementptr inbounds ([11 x i8]* @.str58272, i32 0, i32 0)) #6
  %179 = call i8* @__softboundcets_load_base_shadow_stack(i32 0)
  %180 = call i8* @__softboundcets_load_bound_shadow_stack(i32 0)
  call void @__softboundcets_deallocate_shadow_stack_space()
  %tobool511 = icmp ne i8* %call510, null
  br i1 %tobool511, label %if.then512, label %if.else513

if.then512:                                       ; preds = %if.else508
  store i32 0, i32* @Variant, align 4
  call void @__softboundcets_memcopy_check(i8* bitcast ([14 x i32]* @material to i8*), i8* bitcast ([14 x i32]* @zh_material to i8*), i64 56, i8* null, i8* inttoptr (i64 281474976710656 to i8*), i8* null, i8* inttoptr (i64 281474976710656 to i8*))
  call void @__softboundcets_copy_metadata(i8* bitcast ([14 x i32]* @material to i8*), i8* bitcast ([14 x i32]* @zh_material to i8*), i64 56)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* bitcast ([14 x i32]* @material to i8*), i8* bitcast ([14 x i32]* @zh_material to i8*), i64 56, i32 16, i1 false)
  br label %if.end537

if.else513:                                       ; preds = %if.else508
  %arraydecay514 = getelementptr inbounds [256 x i8]* %input, i32 0, i32 0
  call void @__softboundcets_allocate_shadow_stack_space(i32 3)
  call void @__softboundcets_store_base_shadow_stack(i8* %bitcast12, i32 1)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bitcast14, i32 1)
  call void @__softboundcets_store_base_shadow_stack(i8* getelementptr inbounds ([9 x i8]* @.str59273, i32 0, i32 0), i32 2)
  call void @__softboundcets_store_bound_shadow_stack(i8* getelementptr inbounds ([9 x i8]* @.str59273, i32 1, i32 0), i32 2)
  %call515 = call i8* @softboundcets_strstr(i8* %arraydecay514, i8* getelementptr inbounds ([9 x i8]* @.str59273, i32 0, i32 0)) #6
  %181 = call i8* @__softboundcets_load_base_shadow_stack(i32 0)
  %182 = call i8* @__softboundcets_load_bound_shadow_stack(i32 0)
  call void @__softboundcets_deallocate_shadow_stack_space()
  %tobool516 = icmp ne i8* %call515, null
  br i1 %tobool516, label %if.then517, label %if.else518

if.then517:                                       ; preds = %if.else513
  store i32 1, i32* @Variant, align 4
  call void @__softboundcets_memcopy_check(i8* bitcast ([14 x i32]* @material to i8*), i8* bitcast ([14 x i32]* @zh_material to i8*), i64 56, i8* null, i8* inttoptr (i64 281474976710656 to i8*), i8* null, i8* inttoptr (i64 281474976710656 to i8*))
  call void @__softboundcets_copy_metadata(i8* bitcast ([14 x i32]* @material to i8*), i8* bitcast ([14 x i32]* @zh_material to i8*), i64 56)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* bitcast ([14 x i32]* @material to i8*), i8* bitcast ([14 x i32]* @zh_material to i8*), i64 56, i32 16, i1 false)
  br label %if.end536

if.else518:                                       ; preds = %if.else513
  %arraydecay519 = getelementptr inbounds [256 x i8]* %input, i32 0, i32 0
  call void @__softboundcets_allocate_shadow_stack_space(i32 3)
  call void @__softboundcets_store_base_shadow_stack(i8* %bitcast12, i32 1)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bitcast14, i32 1)
  call void @__softboundcets_store_base_shadow_stack(i8* getelementptr inbounds ([8 x i8]* @.str60274, i32 0, i32 0), i32 2)
  call void @__softboundcets_store_bound_shadow_stack(i8* getelementptr inbounds ([8 x i8]* @.str60274, i32 1, i32 0), i32 2)
  %call520 = call i8* @softboundcets_strstr(i8* %arraydecay519, i8* getelementptr inbounds ([8 x i8]* @.str60274, i32 0, i32 0)) #6
  %183 = call i8* @__softboundcets_load_base_shadow_stack(i32 0)
  %184 = call i8* @__softboundcets_load_bound_shadow_stack(i32 0)
  call void @__softboundcets_deallocate_shadow_stack_space()
  %tobool521 = icmp ne i8* %call520, null
  br i1 %tobool521, label %if.then522, label %if.else523

if.then522:                                       ; preds = %if.else518
  store i32 3, i32* @Variant, align 4
  store i32 0, i32* @Giveaway, align 4
  call void @__softboundcets_memcopy_check(i8* bitcast ([14 x i32]* @material to i8*), i8* bitcast ([14 x i32]* @suicide_material to i8*), i64 56, i8* null, i8* inttoptr (i64 281474976710656 to i8*), i8* null, i8* inttoptr (i64 281474976710656 to i8*))
  call void @__softboundcets_copy_metadata(i8* bitcast ([14 x i32]* @material to i8*), i8* bitcast ([14 x i32]* @suicide_material to i8*), i64 56)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* bitcast ([14 x i32]* @material to i8*), i8* bitcast ([14 x i32]* @suicide_material to i8*), i64 56, i32 16, i1 false)
  br label %if.end535

if.else523:                                       ; preds = %if.else518
  %arraydecay524 = getelementptr inbounds [256 x i8]* %input, i32 0, i32 0
  call void @__softboundcets_allocate_shadow_stack_space(i32 3)
  call void @__softboundcets_store_base_shadow_stack(i8* %bitcast12, i32 1)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bitcast14, i32 1)
  call void @__softboundcets_store_base_shadow_stack(i8* getelementptr inbounds ([9 x i8]* @.str61277, i32 0, i32 0), i32 2)
  call void @__softboundcets_store_bound_shadow_stack(i8* getelementptr inbounds ([9 x i8]* @.str61277, i32 1, i32 0), i32 2)
  %call525 = call i8* @softboundcets_strstr(i8* %arraydecay524, i8* getelementptr inbounds ([9 x i8]* @.str61277, i32 0, i32 0)) #6
  %185 = call i8* @__softboundcets_load_base_shadow_stack(i32 0)
  %186 = call i8* @__softboundcets_load_bound_shadow_stack(i32 0)
  call void @__softboundcets_deallocate_shadow_stack_space()
  %tobool526 = icmp ne i8* %call525, null
  br i1 %tobool526, label %if.then527, label %if.else528

if.then527:                                       ; preds = %if.else523
  store i32 3, i32* @Variant, align 4
  store i32 1, i32* @Giveaway, align 4
  call void @__softboundcets_memcopy_check(i8* bitcast ([14 x i32]* @material to i8*), i8* bitcast ([14 x i32]* @suicide_material to i8*), i64 56, i8* null, i8* inttoptr (i64 281474976710656 to i8*), i8* null, i8* inttoptr (i64 281474976710656 to i8*))
  call void @__softboundcets_copy_metadata(i8* bitcast ([14 x i32]* @material to i8*), i8* bitcast ([14 x i32]* @suicide_material to i8*), i64 56)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* bitcast ([14 x i32]* @material to i8*), i8* bitcast ([14 x i32]* @suicide_material to i8*), i64 56, i32 16, i1 false)
  br label %if.end534

if.else528:                                       ; preds = %if.else523
  %arraydecay529 = getelementptr inbounds [256 x i8]* %input, i32 0, i32 0
  call void @__softboundcets_allocate_shadow_stack_space(i32 3)
  call void @__softboundcets_store_base_shadow_stack(i8* %bitcast12, i32 1)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bitcast14, i32 1)
  call void @__softboundcets_store_base_shadow_stack(i8* getelementptr inbounds ([7 x i8]* @.str62278, i32 0, i32 0), i32 2)
  call void @__softboundcets_store_bound_shadow_stack(i8* getelementptr inbounds ([7 x i8]* @.str62278, i32 1, i32 0), i32 2)
  %call530 = call i8* @softboundcets_strstr(i8* %arraydecay529, i8* getelementptr inbounds ([7 x i8]* @.str62278, i32 0, i32 0)) #6
  %187 = call i8* @__softboundcets_load_base_shadow_stack(i32 0)
  %188 = call i8* @__softboundcets_load_bound_shadow_stack(i32 0)
  call void @__softboundcets_deallocate_shadow_stack_space()
  %tobool531 = icmp ne i8* %call530, null
  br i1 %tobool531, label %if.then532, label %if.end533

if.then532:                                       ; preds = %if.else528
  store i32 4, i32* @Variant, align 4
  call void @__softboundcets_memcopy_check(i8* bitcast ([14 x i32]* @material to i8*), i8* bitcast ([14 x i32]* @losers_material to i8*), i64 56, i8* null, i8* inttoptr (i64 281474976710656 to i8*), i8* null, i8* inttoptr (i64 281474976710656 to i8*))
  call void @__softboundcets_copy_metadata(i8* bitcast ([14 x i32]* @material to i8*), i8* bitcast ([14 x i32]* @losers_material to i8*), i64 56)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* bitcast ([14 x i32]* @material to i8*), i8* bitcast ([14 x i32]* @losers_material to i8*), i64 56, i32 16, i1 false)
  br label %if.end533

if.end533:                                        ; preds = %if.then532, %if.else528
  br label %if.end534

if.end534:                                        ; preds = %if.end533, %if.then527
  br label %if.end535

if.end535:                                        ; preds = %if.end534, %if.then522
  br label %if.end536

if.end536:                                        ; preds = %if.end535, %if.then517
  br label %if.end537

if.end537:                                        ; preds = %if.end536, %if.then512
  br label %if.end538

if.end538:                                        ; preds = %if.end537, %if.then507
  call void @initialize_hash()
  call void @clear_tt()
  call void @reset_ecache()
  br label %if.end832

if.else539:                                       ; preds = %if.else499
  %arraydecay540 = getelementptr inbounds [256 x i8]* %input, i32 0, i32 0
  call void @__softboundcets_allocate_shadow_stack_space(i32 3)
  call void @__softboundcets_store_base_shadow_stack(i8* %bitcast12, i32 1)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bitcast14, i32 1)
  call void @__softboundcets_store_base_shadow_stack(i8* getelementptr inbounds ([8 x i8]* @.str63279, i32 0, i32 0), i32 2)
  call void @__softboundcets_store_bound_shadow_stack(i8* getelementptr inbounds ([8 x i8]* @.str63279, i32 1, i32 0), i32 2)
  %call541 = call i32 @softboundcets_strncmp(i8* %arraydecay540, i8* getelementptr inbounds ([8 x i8]* @.str63279, i32 0, i32 0), i64 7) #6
  call void @__softboundcets_deallocate_shadow_stack_space()
  %tobool542 = icmp ne i32 %call541, 0
  br i1 %tobool542, label %if.else545, label %if.then543

if.then543:                                       ; preds = %if.else539
  store i32 1, i32* @is_analyzing, align 4
  store i32 1, i32* @is_pondering, align 4
  call void @__softboundcets_allocate_shadow_stack_space(i32 2)
  call void @__softboundcets_store_base_shadow_stack(i8* %bitcast88, i32 1)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bitcast90, i32 1)
  call void @think(%struct.move_s* sret %tmp544)
  call void @__softboundcets_deallocate_shadow_stack_space()
  store i32 0, i32* @ply, align 4
  br label %if.end831

if.else545:                                       ; preds = %if.else539
  %arraydecay546 = getelementptr inbounds [256 x i8]* %input, i32 0, i32 0
  call void @__softboundcets_allocate_shadow_stack_space(i32 3)
  call void @__softboundcets_store_base_shadow_stack(i8* %bitcast12, i32 1)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bitcast14, i32 1)
  call void @__softboundcets_store_base_shadow_stack(i8* getelementptr inbounds ([5 x i8]* @.str64280, i32 0, i32 0), i32 2)
  call void @__softboundcets_store_bound_shadow_stack(i8* getelementptr inbounds ([5 x i8]* @.str64280, i32 1, i32 0), i32 2)
  %call547 = call i32 @softboundcets_strncmp(i8* %arraydecay546, i8* getelementptr inbounds ([5 x i8]* @.str64280, i32 0, i32 0), i64 4) #6
  call void @__softboundcets_deallocate_shadow_stack_space()
  %tobool548 = icmp ne i32 %call547, 0
  br i1 %tobool548, label %if.else561, label %if.then549

if.then549:                                       ; preds = %if.else545
  %189 = load i32* @move_number, align 4
  %call550 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([18 x i8]* @.str65281, i32 0, i32 0), i32 %189)
  %190 = load i32* @move_number, align 4
  %cmp551 = icmp sgt i32 %190, 0
  br i1 %cmp551, label %if.then553, label %if.end560

if.then553:                                       ; preds = %if.then549
  %191 = load i32* @move_number, align 4
  %dec554 = add nsw i32 %191, -1
  store i32 %dec554, i32* @move_number, align 4
  %idxprom555 = sext i32 %dec554 to i64
  %arrayidx556 = getelementptr inbounds [600 x %struct.move_x]* %game_history_x, i32 0, i64 %idxprom555
  %192 = bitcast %struct.move_x* %arrayidx556 to i8*
  call void @__softboundcets_memcopy_check(i8* bitcast ([300 x %struct.move_x]* @path_x to i8*), i8* %192, i64 16, i8* bitcast ([300 x %struct.move_x]* @path_x to i8*), i8* bitcast ([300 x %struct.move_x]* getelementptr inbounds ([300 x %struct.move_x]* @path_x, i32 1) to i8*), i8* %bitcast52, i8* %bitcast54)
  call void @__softboundcets_copy_metadata(i8* bitcast ([300 x %struct.move_x]* @path_x to i8*), i8* %192, i64 16)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* bitcast ([300 x %struct.move_x]* @path_x to i8*), i8* %192, i64 16, i32 4, i1 false)
  %193 = load i32* @move_number, align 4
  %idxprom557 = sext i32 %193 to i64
  %arrayidx558 = getelementptr inbounds [600 x %struct.move_s]* %game_history, i32 0, i64 %idxprom557
  call void @__softboundcets_allocate_shadow_stack_space(i32 2)
  call void @__softboundcets_store_base_shadow_stack(i8* %bitcast48, i32 1)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bitcast50, i32 1)
  call void @unmake(%struct.move_s* %arrayidx558, i32 0)
  call void @__softboundcets_deallocate_shadow_stack_space()
  call void @reset_piece_square()
  %194 = load i32* @root_to_move, align 4
  %xor559 = xor i32 %194, 1
  store i32 %xor559, i32* @root_to_move, align 4
  br label %if.end560

if.end560:                                        ; preds = %if.then553, %if.then549
  br label %if.end830

if.else561:                                       ; preds = %if.else545
  %arraydecay562 = getelementptr inbounds [256 x i8]* %input, i32 0, i32 0
  call void @__softboundcets_allocate_shadow_stack_space(i32 3)
  call void @__softboundcets_store_base_shadow_stack(i8* %bitcast12, i32 1)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bitcast14, i32 1)
  call void @__softboundcets_store_base_shadow_stack(i8* getelementptr inbounds ([7 x i8]* @.str66282, i32 0, i32 0), i32 2)
  call void @__softboundcets_store_bound_shadow_stack(i8* getelementptr inbounds ([7 x i8]* @.str66282, i32 1, i32 0), i32 2)
  %call563 = call i32 @softboundcets_strncmp(i8* %arraydecay562, i8* getelementptr inbounds ([7 x i8]* @.str66282, i32 0, i32 0), i64 5) #6
  call void @__softboundcets_deallocate_shadow_stack_space()
  %tobool564 = icmp ne i32 %call563, 0
  br i1 %tobool564, label %if.else580, label %if.then565

if.then565:                                       ; preds = %if.else561
  %195 = load i32* @move_number, align 4
  %cmp566 = icmp sgt i32 %195, 1
  br i1 %cmp566, label %if.then568, label %if.end579

if.then568:                                       ; preds = %if.then565
  %196 = load i32* @move_number, align 4
  %dec569 = add nsw i32 %196, -1
  store i32 %dec569, i32* @move_number, align 4
  %idxprom570 = sext i32 %dec569 to i64
  %arrayidx571 = getelementptr inbounds [600 x %struct.move_x]* %game_history_x, i32 0, i64 %idxprom570
  %197 = bitcast %struct.move_x* %arrayidx571 to i8*
  call void @__softboundcets_memcopy_check(i8* bitcast ([300 x %struct.move_x]* @path_x to i8*), i8* %197, i64 16, i8* bitcast ([300 x %struct.move_x]* @path_x to i8*), i8* bitcast ([300 x %struct.move_x]* getelementptr inbounds ([300 x %struct.move_x]* @path_x, i32 1) to i8*), i8* %bitcast52, i8* %bitcast54)
  call void @__softboundcets_copy_metadata(i8* bitcast ([300 x %struct.move_x]* @path_x to i8*), i8* %197, i64 16)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* bitcast ([300 x %struct.move_x]* @path_x to i8*), i8* %197, i64 16, i32 4, i1 false)
  %198 = load i32* @move_number, align 4
  %idxprom572 = sext i32 %198 to i64
  %arrayidx573 = getelementptr inbounds [600 x %struct.move_s]* %game_history, i32 0, i64 %idxprom572
  call void @__softboundcets_allocate_shadow_stack_space(i32 2)
  call void @__softboundcets_store_base_shadow_stack(i8* %bitcast48, i32 1)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bitcast50, i32 1)
  call void @unmake(%struct.move_s* %arrayidx573, i32 0)
  call void @__softboundcets_deallocate_shadow_stack_space()
  call void @reset_piece_square()
  %199 = load i32* @move_number, align 4
  %dec574 = add nsw i32 %199, -1
  store i32 %dec574, i32* @move_number, align 4
  %idxprom575 = sext i32 %dec574 to i64
  %arrayidx576 = getelementptr inbounds [600 x %struct.move_x]* %game_history_x, i32 0, i64 %idxprom575
  %200 = bitcast %struct.move_x* %arrayidx576 to i8*
  call void @__softboundcets_memcopy_check(i8* bitcast ([300 x %struct.move_x]* @path_x to i8*), i8* %200, i64 16, i8* bitcast ([300 x %struct.move_x]* @path_x to i8*), i8* bitcast ([300 x %struct.move_x]* getelementptr inbounds ([300 x %struct.move_x]* @path_x, i32 1) to i8*), i8* %bitcast52, i8* %bitcast54)
  call void @__softboundcets_copy_metadata(i8* bitcast ([300 x %struct.move_x]* @path_x to i8*), i8* %200, i64 16)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* bitcast ([300 x %struct.move_x]* @path_x to i8*), i8* %200, i64 16, i32 4, i1 false)
  %201 = load i32* @move_number, align 4
  %idxprom577 = sext i32 %201 to i64
  %arrayidx578 = getelementptr inbounds [600 x %struct.move_s]* %game_history, i32 0, i64 %idxprom577
  call void @__softboundcets_allocate_shadow_stack_space(i32 2)
  call void @__softboundcets_store_base_shadow_stack(i8* %bitcast48, i32 1)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bitcast50, i32 1)
  call void @unmake(%struct.move_s* %arrayidx578, i32 0)
  call void @__softboundcets_deallocate_shadow_stack_space()
  call void @reset_piece_square()
  br label %if.end579

if.end579:                                        ; preds = %if.then568, %if.then565
  br label %if.end829

if.else580:                                       ; preds = %if.else561
  %arraydecay581 = getelementptr inbounds [256 x i8]* %input, i32 0, i32 0
  call void @__softboundcets_allocate_shadow_stack_space(i32 3)
  call void @__softboundcets_store_base_shadow_stack(i8* %bitcast12, i32 1)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bitcast14, i32 1)
  call void @__softboundcets_store_base_shadow_stack(i8* getelementptr inbounds ([5 x i8]* @.str67283, i32 0, i32 0), i32 2)
  call void @__softboundcets_store_bound_shadow_stack(i8* getelementptr inbounds ([5 x i8]* @.str67283, i32 1, i32 0), i32 2)
  %call582 = call i32 @softboundcets_strncmp(i8* %arraydecay581, i8* getelementptr inbounds ([5 x i8]* @.str67283, i32 0, i32 0), i64 4) #6
  call void @__softboundcets_deallocate_shadow_stack_space()
  %tobool583 = icmp ne i32 %call582, 0
  br i1 %tobool583, label %if.else585, label %if.then584

if.then584:                                       ; preds = %if.else580
  store i32 1, i32* %is_edit_mode, align 4
  store i32 0, i32* %edit_color, align 4
  br label %if.end828

if.else585:                                       ; preds = %if.else580
  %arraydecay586 = getelementptr inbounds [256 x i8]* %input, i32 0, i32 0
  call void @__softboundcets_allocate_shadow_stack_space(i32 3)
  call void @__softboundcets_store_base_shadow_stack(i8* %bitcast12, i32 1)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bitcast14, i32 1)
  call void @__softboundcets_store_base_shadow_stack(i8* getelementptr inbounds ([2 x i8]* @.str68284, i32 0, i32 0), i32 2)
  call void @__softboundcets_store_bound_shadow_stack(i8* getelementptr inbounds ([2 x i8]* @.str68284, i32 1, i32 0), i32 2)
  %call587 = call i32 @softboundcets_strncmp(i8* %arraydecay586, i8* getelementptr inbounds ([2 x i8]* @.str68284, i32 0, i32 0), i64 1) #6
  call void @__softboundcets_deallocate_shadow_stack_space()
  %tobool588 = icmp ne i32 %call587, 0
  br i1 %tobool588, label %if.else600, label %land.lhs.true589

land.lhs.true589:                                 ; preds = %if.else585
  %202 = load i32* %is_edit_mode, align 4
  %tobool590 = icmp ne i32 %202, 0
  br i1 %tobool590, label %if.then591, label %if.else600

if.then591:                                       ; preds = %land.lhs.true589
  store i32 0, i32* %is_edit_mode, align 4
  %203 = load i32* @wking_loc, align 4
  %cmp592 = icmp eq i32 %203, 30
  br i1 %cmp592, label %if.then594, label %if.end595

if.then594:                                       ; preds = %if.then591
  store i32 0, i32* @white_castled, align 4
  br label %if.end595

if.end595:                                        ; preds = %if.then594, %if.then591
  %204 = load i32* @bking_loc, align 4
  %cmp596 = icmp eq i32 %204, 114
  br i1 %cmp596, label %if.then598, label %if.end599

if.then598:                                       ; preds = %if.end595
  store i32 0, i32* @black_castled, align 4
  br label %if.end599

if.end599:                                        ; preds = %if.then598, %if.end595
  store i32 50, i32* @book_ply, align 4
  store i32 0, i32* @ep_square, align 4
  store i32 0, i32* @move_number, align 4
  call void @__softboundcets_memset_check(i8* getelementptr inbounds ([256 x i8]* @opening_history, i32 0, i32 0), i64 256, i8* getelementptr inbounds ([256 x i8]* @opening_history, i32 0, i32 0), i8* getelementptr inbounds ([256 x i8]* @opening_history, i32 1, i32 0))
  call void @llvm.memset.p0i8.i64(i8* getelementptr inbounds ([256 x i8]* @opening_history, i32 0, i32 0), i8 0, i64 256, i32 16, i1 false)
  call void @clear_tt()
  call void @initialize_hash()
  call void @reset_piece_square()
  br label %if.end827

if.else600:                                       ; preds = %land.lhs.true589, %if.else585
  %205 = load i32* %is_edit_mode, align 4
  %tobool601 = icmp ne i32 %205, 0
  br i1 %tobool601, label %land.lhs.true602, label %if.else612

land.lhs.true602:                                 ; preds = %if.else600
  %arraydecay603 = getelementptr inbounds [256 x i8]* %input, i32 0, i32 0
  call void @__softboundcets_allocate_shadow_stack_space(i32 3)
  call void @__softboundcets_store_base_shadow_stack(i8* %bitcast12, i32 1)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bitcast14, i32 1)
  call void @__softboundcets_store_base_shadow_stack(i8* getelementptr inbounds ([2 x i8]* @.str69295, i32 0, i32 0), i32 2)
  call void @__softboundcets_store_bound_shadow_stack(i8* getelementptr inbounds ([2 x i8]* @.str69295, i32 1, i32 0), i32 2)
  %call604 = call i32 @softboundcets_strncmp(i8* %arraydecay603, i8* getelementptr inbounds ([2 x i8]* @.str69295, i32 0, i32 0), i64 1) #6
  call void @__softboundcets_deallocate_shadow_stack_space()
  %tobool605 = icmp ne i32 %call604, 0
  br i1 %tobool605, label %if.else612, label %if.then606

if.then606:                                       ; preds = %land.lhs.true602
  %206 = load i32* %edit_color, align 4
  %cmp607 = icmp eq i32 %206, 0
  br i1 %cmp607, label %if.then609, label %if.else610

if.then609:                                       ; preds = %if.then606
  store i32 1, i32* %edit_color, align 4
  br label %if.end611

if.else610:                                       ; preds = %if.then606
  store i32 0, i32* %edit_color, align 4
  br label %if.end611

if.end611:                                        ; preds = %if.else610, %if.then609
  br label %if.end826

if.else612:                                       ; preds = %land.lhs.true602, %if.else600
  %207 = load i32* %is_edit_mode, align 4
  %tobool613 = icmp ne i32 %207, 0
  br i1 %tobool613, label %land.lhs.true614, label %if.else619

land.lhs.true614:                                 ; preds = %if.else612
  %arraydecay615 = getelementptr inbounds [256 x i8]* %input, i32 0, i32 0
  call void @__softboundcets_allocate_shadow_stack_space(i32 3)
  call void @__softboundcets_store_base_shadow_stack(i8* %bitcast12, i32 1)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bitcast14, i32 1)
  call void @__softboundcets_store_base_shadow_stack(i8* getelementptr inbounds ([2 x i8]* @.str70296, i32 0, i32 0), i32 2)
  call void @__softboundcets_store_bound_shadow_stack(i8* getelementptr inbounds ([2 x i8]* @.str70296, i32 1, i32 0), i32 2)
  %call616 = call i32 @softboundcets_strncmp(i8* %arraydecay615, i8* getelementptr inbounds ([2 x i8]* @.str70296, i32 0, i32 0), i64 1) #6
  call void @__softboundcets_deallocate_shadow_stack_space()
  %tobool617 = icmp ne i32 %call616, 0
  br i1 %tobool617, label %if.else619, label %if.then618

if.then618:                                       ; preds = %land.lhs.true614
  call void @reset_board()
  store i32 0, i32* @move_number, align 4
  br label %if.end825

if.else619:                                       ; preds = %land.lhs.true614, %if.else612
  %208 = load i32* %is_edit_mode, align 4
  %tobool620 = icmp ne i32 %208, 0
  br i1 %tobool620, label %land.lhs.true621, label %if.else652

land.lhs.true621:                                 ; preds = %if.else619
  %arrayidx622 = getelementptr inbounds [256 x i8]* %input, i32 0, i64 0
  %209 = load i8* %arrayidx622, align 1
  %conv623 = sext i8 %209 to i32
  %idxprom624 = sext i32 %conv623 to i64
  call void @__softboundcets_allocate_shadow_stack_space(i32 1)
  %call625 = call i16** @softboundcets___ctype_b_loc() #5
  %210 = call i8* @__softboundcets_load_base_shadow_stack(i32 0)
  %211 = call i8* @__softboundcets_load_bound_shadow_stack(i32 0)
  call void @__softboundcets_deallocate_shadow_stack_space()
  %212 = load i16** %call625, align 8
  %bitcast155 = bitcast i16** %call625 to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast155, i8** %base.alloca156, i8** %bound.alloca157)
  %base.load158 = load i8** %base.alloca156
  %bound.load159 = load i8** %bound.alloca157
  %arrayidx626 = getelementptr inbounds i16* %212, i64 %idxprom624
  %213 = load i16* %arrayidx626, align 2
  %conv627 = zext i16 %213 to i32
  %and = and i32 %conv627, 1024
  %tobool628 = icmp ne i32 %and, 0
  br i1 %tobool628, label %land.lhs.true629, label %if.else652

land.lhs.true629:                                 ; preds = %land.lhs.true621
  %arrayidx630 = getelementptr inbounds [256 x i8]* %input, i32 0, i64 1
  %214 = load i8* %arrayidx630, align 1
  %conv631 = sext i8 %214 to i32
  %idxprom632 = sext i32 %conv631 to i64
  call void @__softboundcets_allocate_shadow_stack_space(i32 1)
  %call633 = call i16** @softboundcets___ctype_b_loc() #5
  %215 = call i8* @__softboundcets_load_base_shadow_stack(i32 0)
  %216 = call i8* @__softboundcets_load_bound_shadow_stack(i32 0)
  call void @__softboundcets_deallocate_shadow_stack_space()
  %217 = load i16** %call633, align 8
  %bitcast160 = bitcast i16** %call633 to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast160, i8** %base.alloca161, i8** %bound.alloca162)
  %base.load163 = load i8** %base.alloca161
  %bound.load164 = load i8** %bound.alloca162
  %arrayidx634 = getelementptr inbounds i16* %217, i64 %idxprom632
  %218 = load i16* %arrayidx634, align 2
  %conv635 = zext i16 %218 to i32
  %and636 = and i32 %conv635, 1024
  %tobool637 = icmp ne i32 %and636, 0
  br i1 %tobool637, label %land.lhs.true638, label %if.else652

land.lhs.true638:                                 ; preds = %land.lhs.true629
  %arrayidx639 = getelementptr inbounds [256 x i8]* %input, i32 0, i64 2
  %219 = load i8* %arrayidx639, align 1
  %conv640 = sext i8 %219 to i32
  %idxprom641 = sext i32 %conv640 to i64
  call void @__softboundcets_allocate_shadow_stack_space(i32 1)
  %call642 = call i16** @softboundcets___ctype_b_loc() #5
  %220 = call i8* @__softboundcets_load_base_shadow_stack(i32 0)
  %221 = call i8* @__softboundcets_load_bound_shadow_stack(i32 0)
  call void @__softboundcets_deallocate_shadow_stack_space()
  %222 = load i16** %call642, align 8
  %bitcast165 = bitcast i16** %call642 to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast165, i8** %base.alloca166, i8** %bound.alloca167)
  %base.load168 = load i8** %base.alloca166
  %bound.load169 = load i8** %bound.alloca167
  %arrayidx643 = getelementptr inbounds i16* %222, i64 %idxprom641
  %223 = load i16* %arrayidx643, align 2
  %conv644 = zext i16 %223 to i32
  %and645 = and i32 %conv644, 2048
  %tobool646 = icmp ne i32 %and645, 0
  br i1 %tobool646, label %if.then647, label %if.else652

if.then647:                                       ; preds = %land.lhs.true638
  %224 = load i32* %edit_color, align 4
  %arrayidx648 = getelementptr inbounds [256 x i8]* %input, i32 0, i64 0
  %225 = load i8* %arrayidx648, align 1
  %arrayidx649 = getelementptr inbounds [256 x i8]* %input, i32 0, i64 1
  %226 = load i8* %arrayidx649, align 1
  %arrayidx650 = getelementptr inbounds [256 x i8]* %input, i32 0, i64 2
  %227 = load i8* %arrayidx650, align 1
  %conv651 = sext i8 %227 to i32
  call void @PutPiece(i32 %224, i8 signext %225, i8 signext %226, i32 %conv651)
  br label %if.end824

if.else652:                                       ; preds = %land.lhs.true638, %land.lhs.true629, %land.lhs.true621, %if.else619
  %arraydecay653 = getelementptr inbounds [256 x i8]* %input, i32 0, i32 0
  call void @__softboundcets_allocate_shadow_stack_space(i32 3)
  call void @__softboundcets_store_base_shadow_stack(i8* %bitcast12, i32 1)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bitcast14, i32 1)
  call void @__softboundcets_store_base_shadow_stack(i8* getelementptr inbounds ([8 x i8]* @.str71297, i32 0, i32 0), i32 2)
  call void @__softboundcets_store_bound_shadow_stack(i8* getelementptr inbounds ([8 x i8]* @.str71297, i32 1, i32 0), i32 2)
  %call654 = call i32 @softboundcets_strncmp(i8* %arraydecay653, i8* getelementptr inbounds ([8 x i8]* @.str71297, i32 0, i32 0), i64 7) #6
  call void @__softboundcets_deallocate_shadow_stack_space()
  %tobool655 = icmp ne i32 %call654, 0
  br i1 %tobool655, label %if.else659, label %if.then656

if.then656:                                       ; preds = %if.else652
  %arraydecay657 = getelementptr inbounds [256 x i8]* %input, i32 0, i32 0
  %add.ptr658 = getelementptr inbounds i8* %arraydecay657, i64 7
  call void @__softboundcets_allocate_shadow_stack_space(i32 2)
  call void @__softboundcets_store_base_shadow_stack(i8* %bitcast12, i32 1)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bitcast14, i32 1)
  call void @HandlePartner(i8* %add.ptr658)
  call void @__softboundcets_deallocate_shadow_stack_space()
  br label %if.end823

if.else659:                                       ; preds = %if.else652
  %arraydecay660 = getelementptr inbounds [256 x i8]* %input, i32 0, i32 0
  call void @__softboundcets_allocate_shadow_stack_space(i32 3)
  call void @__softboundcets_store_base_shadow_stack(i8* %bitcast12, i32 1)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bitcast14, i32 1)
  call void @__softboundcets_store_base_shadow_stack(i8* getelementptr inbounds ([9 x i8]* @.str72298, i32 0, i32 0), i32 2)
  call void @__softboundcets_store_bound_shadow_stack(i8* getelementptr inbounds ([9 x i8]* @.str72298, i32 1, i32 0), i32 2)
  %call661 = call i32 @softboundcets_strncmp(i8* %arraydecay660, i8* getelementptr inbounds ([9 x i8]* @.str72298, i32 0, i32 0), i64 8) #6
  call void @__softboundcets_deallocate_shadow_stack_space()
  %tobool662 = icmp ne i32 %call661, 0
  br i1 %tobool662, label %if.else666, label %if.then663

if.then663:                                       ; preds = %if.else659
  %arraydecay664 = getelementptr inbounds [256 x i8]* %input, i32 0, i32 0
  %add.ptr665 = getelementptr inbounds i8* %arraydecay664, i64 8
  call void @__softboundcets_allocate_shadow_stack_space(i32 2)
  call void @__softboundcets_store_base_shadow_stack(i8* %bitcast12, i32 1)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bitcast14, i32 1)
  call void @HandlePartner(i8* %add.ptr665)
  call void @__softboundcets_deallocate_shadow_stack_space()
  br label %if.end822

if.else666:                                       ; preds = %if.else659
  %arraydecay667 = getelementptr inbounds [256 x i8]* %input, i32 0, i32 0
  call void @__softboundcets_allocate_shadow_stack_space(i32 3)
  call void @__softboundcets_store_base_shadow_stack(i8* %bitcast12, i32 1)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bitcast14, i32 1)
  call void @__softboundcets_store_base_shadow_stack(i8* getelementptr inbounds ([6 x i8]* @.str73299, i32 0, i32 0), i32 2)
  call void @__softboundcets_store_bound_shadow_stack(i8* getelementptr inbounds ([6 x i8]* @.str73299, i32 1, i32 0), i32 2)
  %call668 = call i32 @softboundcets_strncmp(i8* %arraydecay667, i8* getelementptr inbounds ([6 x i8]* @.str73299, i32 0, i32 0), i64 5) #6
  call void @__softboundcets_deallocate_shadow_stack_space()
  %tobool669 = icmp ne i32 %call668, 0
  br i1 %tobool669, label %if.else672, label %if.then670

if.then670:                                       ; preds = %if.else666
  %arraydecay671 = getelementptr inbounds [256 x i8]* %input, i32 0, i32 0
  call void @__softboundcets_allocate_shadow_stack_space(i32 2)
  call void @__softboundcets_store_base_shadow_stack(i8* %bitcast12, i32 1)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bitcast14, i32 1)
  call void @HandlePtell(i8* %arraydecay671)
  call void @__softboundcets_deallocate_shadow_stack_space()
  br label %if.end821

if.else672:                                       ; preds = %if.else666
  %arraydecay673 = getelementptr inbounds [256 x i8]* %input, i32 0, i32 0
  call void @__softboundcets_allocate_shadow_stack_space(i32 3)
  call void @__softboundcets_store_base_shadow_stack(i8* %bitcast12, i32 1)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bitcast14, i32 1)
  call void @__softboundcets_store_base_shadow_stack(i8* getelementptr inbounds ([5 x i8]* @.str74300, i32 0, i32 0), i32 2)
  call void @__softboundcets_store_bound_shadow_stack(i8* getelementptr inbounds ([5 x i8]* @.str74300, i32 1, i32 0), i32 2)
  %call674 = call i32 @softboundcets_strncmp(i8* %arraydecay673, i8* getelementptr inbounds ([5 x i8]* @.str74300, i32 0, i32 0), i64 4) #6
  call void @__softboundcets_deallocate_shadow_stack_space()
  %tobool675 = icmp ne i32 %call674, 0
  br i1 %tobool675, label %if.else677, label %if.then676

if.then676:                                       ; preds = %if.else672
  call void @run_epd_testsuite()
  br label %if.end820

if.else677:                                       ; preds = %if.else672
  %arraydecay678 = getelementptr inbounds [256 x i8]* %input, i32 0, i32 0
  call void @__softboundcets_allocate_shadow_stack_space(i32 3)
  call void @__softboundcets_store_base_shadow_stack(i8* %bitcast12, i32 1)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bitcast14, i32 1)
  call void @__softboundcets_store_base_shadow_stack(i8* getelementptr inbounds ([3 x i8]* @.str75301, i32 0, i32 0), i32 2)
  call void @__softboundcets_store_bound_shadow_stack(i8* getelementptr inbounds ([3 x i8]* @.str75301, i32 1, i32 0), i32 2)
  %call679 = call i32 @softboundcets_strncmp(i8* %arraydecay678, i8* getelementptr inbounds ([3 x i8]* @.str75301, i32 0, i32 0), i64 2) #6
  call void @__softboundcets_deallocate_shadow_stack_space()
  %tobool680 = icmp ne i32 %call679, 0
  br i1 %tobool680, label %if.else686, label %if.then681

if.then681:                                       ; preds = %if.else677
  %arraydecay682 = getelementptr inbounds [256 x i8]* %input, i32 0, i32 0
  %add.ptr683 = getelementptr inbounds i8* %arraydecay682, i64 3
  %call684 = call i32 (i8*, i8*, ...)* @__isoc99_sscanf(i8* %add.ptr683, i8* getelementptr inbounds ([3 x i8]* @.str25229, i32 0, i32 0), i32* @fixed_time) #1
  %228 = load i32* @fixed_time, align 4
  %mul685 = mul nsw i32 %228, 100
  store i32 %mul685, i32* @fixed_time, align 4
  br label %if.end819

if.else686:                                       ; preds = %if.else677
  %arraydecay687 = getelementptr inbounds [256 x i8]* %input, i32 0, i32 0
  call void @__softboundcets_allocate_shadow_stack_space(i32 3)
  call void @__softboundcets_store_base_shadow_stack(i8* %bitcast12, i32 1)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bitcast14, i32 1)
  call void @__softboundcets_store_base_shadow_stack(i8* getelementptr inbounds ([7 x i8]* @.str76302, i32 0, i32 0), i32 2)
  call void @__softboundcets_store_bound_shadow_stack(i8* getelementptr inbounds ([7 x i8]* @.str76302, i32 1, i32 0), i32 2)
  %call688 = call i32 @softboundcets_strncmp(i8* %arraydecay687, i8* getelementptr inbounds ([7 x i8]* @.str76302, i32 0, i32 0), i64 6) #6
  call void @__softboundcets_deallocate_shadow_stack_space()
  %tobool689 = icmp ne i32 %call688, 0
  br i1 %tobool689, label %if.else691, label %if.then690

if.then690:                                       ; preds = %if.else686
  br label %if.end818

if.else691:                                       ; preds = %if.else686
  %arraydecay692 = getelementptr inbounds [256 x i8]* %input, i32 0, i32 0
  call void @__softboundcets_allocate_shadow_stack_space(i32 3)
  call void @__softboundcets_store_base_shadow_stack(i8* %bitcast12, i32 1)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bitcast14, i32 1)
  call void @__softboundcets_store_base_shadow_stack(i8* getelementptr inbounds ([6 x i8]* @.str77303, i32 0, i32 0), i32 2)
  call void @__softboundcets_store_bound_shadow_stack(i8* getelementptr inbounds ([6 x i8]* @.str77303, i32 1, i32 0), i32 2)
  %call693 = call i32 @softboundcets_strncmp(i8* %arraydecay692, i8* getelementptr inbounds ([6 x i8]* @.str77303, i32 0, i32 0), i64 5) #6
  call void @__softboundcets_deallocate_shadow_stack_space()
  %tobool694 = icmp ne i32 %call693, 0
  br i1 %tobool694, label %if.else704, label %if.then695

if.then695:                                       ; preds = %if.else691
  %call696 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([26 x i8]* @.str78304, i32 0, i32 0))
  %call697 = call i64 @rtime()
  store i64 %call697, i64* @start_time, align 8
  %arraydecay698 = getelementptr inbounds [256 x i8]* %readbuff, i32 0, i32 0
  %229 = load %struct._IO_FILE** @stdin, align 8
  %bitcast170 = bitcast %struct._IO_FILE** @stdin to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast170, i8** %base.alloca171, i8** %bound.alloca172)
  %base.load173 = load i8** %base.alloca171
  %bound.load174 = load i8** %bound.alloca172
  call void @__softboundcets_allocate_shadow_stack_space(i32 3)
  call void @__softboundcets_store_base_shadow_stack(i8* %bitcast24, i32 1)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bitcast26, i32 1)
  call void @__softboundcets_store_base_shadow_stack(i8* %base.load173, i32 2)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bound.load174, i32 2)
  call void @rinput(i8* %arraydecay698, i32 256, %struct._IO_FILE* %229)
  call void @__softboundcets_deallocate_shadow_stack_space()
  %arraydecay699 = getelementptr inbounds [256 x i8]* %readbuff, i32 0, i32 0
  call void @__softboundcets_allocate_shadow_stack_space(i32 2)
  call void @__softboundcets_store_base_shadow_stack(i8* %bitcast24, i32 1)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bitcast26, i32 1)
  %call700 = call i64 @softboundcets_atol(i8* %arraydecay699) #6
  call void @__softboundcets_deallocate_shadow_stack_space()
  %mul701 = mul nsw i64 %call700, 100
  %conv702 = trunc i64 %mul701 to i32
  store i32 %conv702, i32* @pn_time, align 4
  %call703 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([2 x i8]* @.str16218, i32 0, i32 0))
  call void @proofnumbersearch()
  br label %if.end817

if.else704:                                       ; preds = %if.else691
  %arraydecay705 = getelementptr inbounds [256 x i8]* %input, i32 0, i32 0
  call void @__softboundcets_allocate_shadow_stack_space(i32 3)
  call void @__softboundcets_store_base_shadow_stack(i8* %bitcast12, i32 1)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bitcast14, i32 1)
  call void @__softboundcets_store_base_shadow_stack(i8* getelementptr inbounds ([5 x i8]* @.str79307, i32 0, i32 0), i32 2)
  call void @__softboundcets_store_bound_shadow_stack(i8* getelementptr inbounds ([5 x i8]* @.str79307, i32 1, i32 0), i32 2)
  %call706 = call i32 @softboundcets_strncmp(i8* %arraydecay705, i8* getelementptr inbounds ([5 x i8]* @.str79307, i32 0, i32 0), i64 4) #6
  call void @__softboundcets_deallocate_shadow_stack_space()
  %tobool707 = icmp ne i32 %call706, 0
  br i1 %tobool707, label %if.else713, label %if.then708

if.then708:                                       ; preds = %if.else704
  %arraydecay709 = getelementptr inbounds [256 x i8]* %input, i32 0, i32 0
  %add.ptr710 = getelementptr inbounds i8* %arraydecay709, i64 5
  %call711 = call i32 (i8*, i8*, ...)* @__isoc99_sscanf(i8* %add.ptr710, i8* getelementptr inbounds ([3 x i8]* @.str25229, i32 0, i32 0), i32* %pingnum) #1
  %230 = load i32* %pingnum, align 4
  %call712 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([9 x i8]* @.str80308, i32 0, i32 0), i32 %230)
  br label %if.end816

if.else713:                                       ; preds = %if.else704
  %arraydecay714 = getelementptr inbounds [256 x i8]* %input, i32 0, i32 0
  call void @__softboundcets_allocate_shadow_stack_space(i32 3)
  call void @__softboundcets_store_base_shadow_stack(i8* %bitcast12, i32 1)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bitcast14, i32 1)
  call void @__softboundcets_store_base_shadow_stack(i8* getelementptr inbounds ([6 x i8]* @.str81309, i32 0, i32 0), i32 2)
  call void @__softboundcets_store_bound_shadow_stack(i8* getelementptr inbounds ([6 x i8]* @.str81309, i32 1, i32 0), i32 2)
  %call715 = call i32 @softboundcets_strncmp(i8* %arraydecay714, i8* getelementptr inbounds ([6 x i8]* @.str81309, i32 0, i32 0), i64 5) #6
  call void @__softboundcets_deallocate_shadow_stack_space()
  %tobool716 = icmp ne i32 %call715, 0
  br i1 %tobool716, label %if.else718, label %if.then717

if.then717:                                       ; preds = %if.else713
  store i32 1, i32* %braindeadinterface, align 4
  br label %if.end815

if.else718:                                       ; preds = %if.else713
  %arraydecay719 = getelementptr inbounds [256 x i8]* %input, i32 0, i32 0
  call void @__softboundcets_allocate_shadow_stack_space(i32 3)
  call void @__softboundcets_store_base_shadow_stack(i8* %bitcast12, i32 1)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bitcast14, i32 1)
  call void @__softboundcets_store_base_shadow_stack(i8* getelementptr inbounds ([6 x i8]* @.str82310, i32 0, i32 0), i32 2)
  call void @__softboundcets_store_bound_shadow_stack(i8* getelementptr inbounds ([6 x i8]* @.str82310, i32 1, i32 0), i32 2)
  %call720 = call i32 @softboundcets_strncmp(i8* %arraydecay719, i8* getelementptr inbounds ([6 x i8]* @.str82310, i32 0, i32 0), i64 5) #6
  call void @__softboundcets_deallocate_shadow_stack_space()
  %tobool721 = icmp ne i32 %call720, 0
  br i1 %tobool721, label %if.else723, label %if.then722

if.then722:                                       ; preds = %if.else718
  call void @__softboundcets_memcopy_check(i8* bitcast ([14 x i32]* @material to i8*), i8* bitcast ([14 x i32]* @std_material to i8*), i64 56, i8* null, i8* inttoptr (i64 281474976710656 to i8*), i8* null, i8* inttoptr (i64 281474976710656 to i8*))
  call void @__softboundcets_copy_metadata(i8* bitcast ([14 x i32]* @material to i8*), i8* bitcast ([14 x i32]* @std_material to i8*), i64 56)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* bitcast ([14 x i32]* @material to i8*), i8* bitcast ([14 x i32]* @std_material to i8*), i64 56, i32 16, i1 false)
  store i32 2, i32* @Variant, align 4
  call void @init_game()
  call void @initialize_hash()
  call void @clear_tt()
  call void @reset_ecache()
  store i32 0, i32* %force_mode, align 4
  store i32 0, i32* @fixed_time, align 4
  store i32 0, i32* @root_to_move, align 4
  store i32 0, i32* @comp_color, align 4
  store i32 0, i32* @move_number, align 4
  store i32 0, i32* @bookidx, align 4
  store i32 2000, i32* @opp_rating, align 4
  store i32 2000, i32* @my_rating, align 4
  br label %if.end814

if.else723:                                       ; preds = %if.else718
  %arraydecay724 = getelementptr inbounds [256 x i8]* %input, i32 0, i32 0
  call void @__softboundcets_allocate_shadow_stack_space(i32 3)
  call void @__softboundcets_store_base_shadow_stack(i8* %bitcast12, i32 1)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bitcast14, i32 1)
  call void @__softboundcets_store_base_shadow_stack(i8* getelementptr inbounds ([9 x i8]* @.str19221, i32 0, i32 0), i32 2)
  call void @__softboundcets_store_bound_shadow_stack(i8* getelementptr inbounds ([9 x i8]* @.str19221, i32 1, i32 0), i32 2)
  %call725 = call i32 @softboundcets_strncmp(i8* %arraydecay724, i8* getelementptr inbounds ([9 x i8]* @.str19221, i32 0, i32 0), i64 8) #6
  call void @__softboundcets_deallocate_shadow_stack_space()
  %tobool726 = icmp ne i32 %call725, 0
  br i1 %tobool726, label %if.else730, label %if.then727

if.then727:                                       ; preds = %if.else723
  %arraydecay728 = getelementptr inbounds [256 x i8]* %input, i32 0, i32 0
  %add.ptr729 = getelementptr inbounds i8* %arraydecay728, i64 9
  call void @__softboundcets_allocate_shadow_stack_space(i32 2)
  call void @__softboundcets_store_base_shadow_stack(i8* %bitcast12, i32 1)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bitcast14, i32 1)
  call void @setup_epd_line(i8* %add.ptr729)
  call void @__softboundcets_deallocate_shadow_stack_space()
  br label %if.end813

if.else730:                                       ; preds = %if.else723
  %arraydecay731 = getelementptr inbounds [256 x i8]* %input, i32 0, i32 0
  call void @__softboundcets_allocate_shadow_stack_space(i32 3)
  call void @__softboundcets_store_base_shadow_stack(i8* %bitcast12, i32 1)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bitcast14, i32 1)
  call void @__softboundcets_store_base_shadow_stack(i8* getelementptr inbounds ([2 x i8]* @.str68284, i32 0, i32 0), i32 2)
  call void @__softboundcets_store_bound_shadow_stack(i8* getelementptr inbounds ([2 x i8]* @.str68284, i32 1, i32 0), i32 2)
  %call732 = call i32 @softboundcets_strncmp(i8* %arraydecay731, i8* getelementptr inbounds ([2 x i8]* @.str68284, i32 0, i32 0), i64 1) #6
  call void @__softboundcets_deallocate_shadow_stack_space()
  %tobool733 = icmp ne i32 %call732, 0
  br i1 %tobool733, label %if.else735, label %if.then734

if.then734:                                       ; preds = %if.else730
  br label %while.body

if.else735:                                       ; preds = %if.else730
  %arraydecay736 = getelementptr inbounds [256 x i8]* %input, i32 0, i32 0
  call void @__softboundcets_allocate_shadow_stack_space(i32 3)
  call void @__softboundcets_store_base_shadow_stack(i8* %bitcast12, i32 1)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bitcast14, i32 1)
  call void @__softboundcets_store_base_shadow_stack(i8* getelementptr inbounds ([3 x i8]* @.str83311, i32 0, i32 0), i32 2)
  call void @__softboundcets_store_bound_shadow_stack(i8* getelementptr inbounds ([3 x i8]* @.str83311, i32 1, i32 0), i32 2)
  %call737 = call i32 @softboundcets_strncmp(i8* %arraydecay736, i8* getelementptr inbounds ([3 x i8]* @.str83311, i32 0, i32 0), i64 2) #6
  call void @__softboundcets_deallocate_shadow_stack_space()
  %tobool738 = icmp ne i32 %call737, 0
  br i1 %tobool738, label %if.else744, label %if.then739

if.then739:                                       ; preds = %if.else735
  %arraydecay740 = getelementptr inbounds [256 x i8]* %input, i32 0, i32 0
  %add.ptr741 = getelementptr inbounds i8* %arraydecay740, i64 3
  %call742 = call i32 (i8*, i8*, ...)* @__isoc99_sscanf(i8* %add.ptr741, i8* getelementptr inbounds ([3 x i8]* @.str25229, i32 0, i32 0), i32* @maxdepth) #1
  %231 = load i32* @maxdepth, align 4
  %call743 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([26 x i8]* @.str84312, i32 0, i32 0), i32 %231)
  br label %while.body

if.else744:                                       ; preds = %if.else735
  %arraydecay745 = getelementptr inbounds [256 x i8]* %input, i32 0, i32 0
  call void @__softboundcets_allocate_shadow_stack_space(i32 3)
  call void @__softboundcets_store_base_shadow_stack(i8* %bitcast12, i32 1)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bitcast14, i32 1)
  call void @__softboundcets_store_base_shadow_stack(i8* getelementptr inbounds ([5 x i8]* @.str85, i32 0, i32 0), i32 2)
  call void @__softboundcets_store_bound_shadow_stack(i8* getelementptr inbounds ([5 x i8]* @.str85, i32 1, i32 0), i32 2)
  %call746 = call i32 @softboundcets_strncmp(i8* %arraydecay745, i8* getelementptr inbounds ([5 x i8]* @.str85, i32 0, i32 0), i64 4) #6
  call void @__softboundcets_deallocate_shadow_stack_space()
  %tobool747 = icmp ne i32 %call746, 0
  br i1 %tobool747, label %if.else749, label %if.then748

if.then748:                                       ; preds = %if.else744
  store i32 1, i32* %automode, align 4
  br label %while.body

if.else749:                                       ; preds = %if.else744
  %arraydecay750 = getelementptr inbounds [256 x i8]* %input, i32 0, i32 0
  call void @__softboundcets_allocate_shadow_stack_space(i32 3)
  call void @__softboundcets_store_base_shadow_stack(i8* %bitcast12, i32 1)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bitcast14, i32 1)
  call void @__softboundcets_store_base_shadow_stack(i8* getelementptr inbounds ([9 x i8]* @.str86, i32 0, i32 0), i32 2)
  call void @__softboundcets_store_bound_shadow_stack(i8* getelementptr inbounds ([9 x i8]* @.str86, i32 1, i32 0), i32 2)
  %call751 = call i32 @softboundcets_strncmp(i8* %arraydecay750, i8* getelementptr inbounds ([9 x i8]* @.str86, i32 0, i32 0), i64 8) #6
  call void @__softboundcets_deallocate_shadow_stack_space()
  %tobool752 = icmp ne i32 %call751, 0
  br i1 %tobool752, label %if.else759, label %if.then753

if.then753:                                       ; preds = %if.else749
  %call754 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([63 x i8]* @.str87, i32 0, i32 0))
  %call755 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([53 x i8]* @.str88, i32 0, i32 0))
  %call756 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([33 x i8]* @.str89, i32 0, i32 0))
  %call757 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([71 x i8]* @.str90, i32 0, i32 0))
  %call758 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([46 x i8]* @.str91, i32 0, i32 0))
  store i32 2, i32* @xb_mode, align 4
  br label %if.end809

if.else759:                                       ; preds = %if.else749
  %arraydecay760 = getelementptr inbounds [256 x i8]* %input, i32 0, i32 0
  call void @__softboundcets_allocate_shadow_stack_space(i32 3)
  call void @__softboundcets_store_base_shadow_stack(i8* %bitcast12, i32 1)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bitcast14, i32 1)
  call void @__softboundcets_store_base_shadow_stack(i8* getelementptr inbounds ([9 x i8]* @.str92, i32 0, i32 0), i32 2)
  call void @__softboundcets_store_bound_shadow_stack(i8* getelementptr inbounds ([9 x i8]* @.str92, i32 1, i32 0), i32 2)
  %call761 = call i32 @softboundcets_strncmp(i8* %arraydecay760, i8* getelementptr inbounds ([9 x i8]* @.str92, i32 0, i32 0), i64 8) #6
  call void @__softboundcets_deallocate_shadow_stack_space()
  %tobool762 = icmp ne i32 %call761, 0
  br i1 %tobool762, label %if.else764, label %if.then763

if.then763:                                       ; preds = %if.else759
  br label %if.end808

if.else764:                                       ; preds = %if.else759
  %arraydecay765 = getelementptr inbounds [256 x i8]* %input, i32 0, i32 0
  call void @__softboundcets_allocate_shadow_stack_space(i32 3)
  call void @__softboundcets_store_base_shadow_stack(i8* %bitcast12, i32 1)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bitcast14, i32 1)
  call void @__softboundcets_store_base_shadow_stack(i8* getelementptr inbounds ([9 x i8]* @.str93, i32 0, i32 0), i32 2)
  call void @__softboundcets_store_bound_shadow_stack(i8* getelementptr inbounds ([9 x i8]* @.str93, i32 1, i32 0), i32 2)
  %call766 = call i32 @softboundcets_strncmp(i8* %arraydecay765, i8* getelementptr inbounds ([9 x i8]* @.str93, i32 0, i32 0), i64 8) #6
  call void @__softboundcets_deallocate_shadow_stack_space()
  %tobool767 = icmp ne i32 %call766, 0
  br i1 %tobool767, label %if.else770, label %if.then768

if.then768:                                       ; preds = %if.else764
  %call769 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([65 x i8]* @.str94, i32 0, i32 0))
  br label %if.end807

if.else770:                                       ; preds = %if.else764
  %arraydecay771 = getelementptr inbounds [256 x i8]* %input, i32 0, i32 0
  call void @__softboundcets_allocate_shadow_stack_space(i32 3)
  call void @__softboundcets_store_base_shadow_stack(i8* %bitcast12, i32 1)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bitcast14, i32 1)
  call void @__softboundcets_store_base_shadow_stack(i8* getelementptr inbounds ([5 x i8]* @.str95, i32 0, i32 0), i32 2)
  call void @__softboundcets_store_bound_shadow_stack(i8* getelementptr inbounds ([5 x i8]* @.str95, i32 1, i32 0), i32 2)
  %call772 = call i32 @softboundcets_strcmp(i8* %arraydecay771, i8* getelementptr inbounds ([5 x i8]* @.str95, i32 0, i32 0)) #6
  call void @__softboundcets_deallocate_shadow_stack_space()
  %tobool773 = icmp ne i32 %call772, 0
  br i1 %tobool773, label %if.else800, label %if.then774

if.then774:                                       ; preds = %if.else770
  %call775 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([6 x i8]* @.str96, i32 0, i32 0), i8* getelementptr inbounds ([50 x i8]* @divider, i32 0, i32 0))
  %call776 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([41 x i8]* @.str97, i32 0, i32 0))
  %call777 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([34 x i8]* @.str98, i32 0, i32 0))
  %call778 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([51 x i8]* @.str99, i32 0, i32 0))
  %call779 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([35 x i8]* @.str100, i32 0, i32 0))
  %call780 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([55 x i8]* @.str101, i32 0, i32 0))
  %call781 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([49 x i8]* @.str102, i32 0, i32 0))
  %call782 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([49 x i8]* @.str103, i32 0, i32 0))
  %call783 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([25 x i8]* @.str104, i32 0, i32 0))
  %call784 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([29 x i8]* @.str105, i32 0, i32 0))
  %call785 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([55 x i8]* @.str106, i32 0, i32 0))
  %call786 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([47 x i8]* @.str107, i32 0, i32 0))
  %call787 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([42 x i8]* @.str108, i32 0, i32 0))
  %call788 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([45 x i8]* @.str109, i32 0, i32 0))
  %call789 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([39 x i8]* @.str110, i32 0, i32 0))
  %call790 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([52 x i8]* @.str111, i32 0, i32 0))
  %call791 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([59 x i8]* @.str112313, i32 0, i32 0))
  %call792 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([44 x i8]* @.str113314, i32 0, i32 0))
  %call793 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([51 x i8]* @.str114, i32 0, i32 0))
  %call794 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([54 x i8]* @.str115, i32 0, i32 0))
  %call795 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([38 x i8]* @.str116, i32 0, i32 0))
  %call796 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([38 x i8]* @.str117, i32 0, i32 0))
  %call797 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([42 x i8]* @.str118, i32 0, i32 0))
  %call798 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([44 x i8]* @.str119, i32 0, i32 0))
  %call799 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([6 x i8]* @.str96, i32 0, i32 0), i8* getelementptr inbounds ([50 x i8]* @divider, i32 0, i32 0))
  store i32 0, i32* %show_board, align 4
  br label %if.end806

if.else800:                                       ; preds = %if.else770
  %232 = load i32* @xb_mode, align 4
  %tobool801 = icmp ne i32 %232, 0
  br i1 %tobool801, label %if.end805, label %if.then802

if.then802:                                       ; preds = %if.else800
  %arraydecay803 = getelementptr inbounds [256 x i8]* %input, i32 0, i32 0
  %call804 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([18 x i8]* @.str18220, i32 0, i32 0), i8* %arraydecay803)
  br label %if.end805

if.end805:                                        ; preds = %if.then802, %if.else800
  br label %if.end806

if.end806:                                        ; preds = %if.end805, %if.then774
  br label %if.end807

if.end807:                                        ; preds = %if.end806, %if.then768
  br label %if.end808

if.end808:                                        ; preds = %if.end807, %if.then763
  br label %if.end809

if.end809:                                        ; preds = %if.end808, %if.then753
  br label %if.end810

if.end810:                                        ; preds = %if.end809
  br label %if.end811

if.end811:                                        ; preds = %if.end810
  br label %if.end812

if.end812:                                        ; preds = %if.end811
  br label %if.end813

if.end813:                                        ; preds = %if.end812, %if.then727
  br label %if.end814

if.end814:                                        ; preds = %if.end813, %if.then722
  br label %if.end815

if.end815:                                        ; preds = %if.end814, %if.then717
  br label %if.end816

if.end816:                                        ; preds = %if.end815, %if.then708
  br label %if.end817

if.end817:                                        ; preds = %if.end816, %if.then695
  br label %if.end818

if.end818:                                        ; preds = %if.end817, %if.then690
  br label %if.end819

if.end819:                                        ; preds = %if.end818, %if.then681
  br label %if.end820

if.end820:                                        ; preds = %if.end819, %if.then676
  br label %if.end821

if.end821:                                        ; preds = %if.end820, %if.then670
  br label %if.end822

if.end822:                                        ; preds = %if.end821, %if.then663
  br label %if.end823

if.end823:                                        ; preds = %if.end822, %if.then656
  br label %if.end824

if.end824:                                        ; preds = %if.end823, %if.then647
  br label %if.end825

if.end825:                                        ; preds = %if.end824, %if.then618
  br label %if.end826

if.end826:                                        ; preds = %if.end825, %if.end611
  br label %if.end827

if.end827:                                        ; preds = %if.end826, %if.end599
  br label %if.end828

if.end828:                                        ; preds = %if.end827, %if.then584
  br label %if.end829

if.end829:                                        ; preds = %if.end828, %if.end579
  br label %if.end830

if.end830:                                        ; preds = %if.end829, %if.end560
  br label %if.end831

if.end831:                                        ; preds = %if.end830, %if.then543
  br label %if.end832

if.end832:                                        ; preds = %if.end831, %if.end538
  br label %if.end833

if.end833:                                        ; preds = %if.end832, %if.then497
  br label %if.end834

if.end834:                                        ; preds = %if.end833, %if.end492
  br label %if.end835

if.end835:                                        ; preds = %if.end834, %if.end476
  br label %if.end836

if.end836:                                        ; preds = %if.end835, %if.then451
  br label %if.end837

if.end837:                                        ; preds = %if.end836, %if.then443
  br label %if.end838

if.end838:                                        ; preds = %if.end837, %if.then438
  br label %if.end839

if.end839:                                        ; preds = %if.end838, %if.then431
  br label %if.end840

if.end840:                                        ; preds = %if.end839, %if.then426
  br label %if.end841

if.end841:                                        ; preds = %if.end840, %if.then421
  br label %if.end842

if.end842:                                        ; preds = %if.end841, %if.then416
  br label %if.end843

if.end843:                                        ; preds = %if.end842
  br label %if.end844

if.end844:                                        ; preds = %if.end843
  br label %if.end845

if.end845:                                        ; preds = %if.end844
  br label %if.end846

if.end846:                                        ; preds = %if.end845
  br label %if.end847

if.end847:                                        ; preds = %if.end846, %if.then391
  br label %if.end848

if.end848:                                        ; preds = %if.end847, %if.end386
  br label %if.end849

if.end849:                                        ; preds = %if.end848, %if.then370
  br label %if.end850

if.end850:                                        ; preds = %if.end849, %if.then362
  br label %if.end851

if.end851:                                        ; preds = %if.end850, %if.end357
  br label %if.end852

if.end852:                                        ; preds = %if.end851, %if.then329
  br label %if.end853

if.end853:                                        ; preds = %if.end852, %if.then324
  br label %if.end854

if.end854:                                        ; preds = %if.end853, %if.end315
  br label %if.end855

if.end855:                                        ; preds = %if.end854
  br label %if.end856

if.end856:                                        ; preds = %if.end855, %if.end291
  br label %while.body

return:                                           ; No predecessors!
  %233 = load i32* %retval
  ret i32 %233
}

declare void @softboundcets_setbuf(%struct._IO_FILE*, i8*)

declare i32 @softboundcets_tolower(i32)

declare i32 @softboundcets_strcmp(i8*, i8*)

declare void (i32)* @softboundcets_signal(i32, void (i32)*)

; Function Attrs: nounwind uwtable
define internal void @clear_tt() #0 {
entry:
  %base.alloca11 = alloca i8*
  %bound.alloca12 = alloca i8*
  %base.alloca6 = alloca i8*
  %bound.alloca7 = alloca i8*
  %base.alloca = alloca i8*
  %bound.alloca = alloca i8*
  %0 = load %struct.TType** @DP_TTable, align 8
  %bitcast = bitcast %struct.TType** @DP_TTable to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast, i8** %base.alloca, i8** %bound.alloca)
  %base.load = load i8** %base.alloca
  %bound.load = load i8** %bound.alloca
  %1 = bitcast %struct.TType* %0 to i8*
  %2 = load i32* @TTSize, align 4
  %conv = sext i32 %2 to i64
  %mul = mul i64 20, %conv
  call void @__softboundcets_memset_check(i8* %1, i64 %mul, i8* %base.load, i8* %bound.load)
  call void @llvm.memset.p0i8.i64(i8* %1, i8 0, i64 %mul, i32 4, i1 false)
  %3 = load %struct.TType** @AS_TTable, align 8
  %bitcast5 = bitcast %struct.TType** @AS_TTable to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast5, i8** %base.alloca6, i8** %bound.alloca7)
  %base.load8 = load i8** %base.alloca6
  %bound.load9 = load i8** %bound.alloca7
  %4 = bitcast %struct.TType* %3 to i8*
  %5 = load i32* @TTSize, align 4
  %conv1 = sext i32 %5 to i64
  %mul2 = mul i64 20, %conv1
  call void @__softboundcets_memset_check(i8* %4, i64 %mul2, i8* %base.load8, i8* %bound.load9)
  call void @llvm.memset.p0i8.i64(i8* %4, i8 0, i64 %mul2, i32 4, i1 false)
  %6 = load %struct.QTType** @QS_TTable, align 8
  %bitcast10 = bitcast %struct.QTType** @QS_TTable to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast10, i8** %base.alloca11, i8** %bound.alloca12)
  %base.load13 = load i8** %base.alloca11
  %bound.load14 = load i8** %bound.alloca12
  %7 = bitcast %struct.QTType* %6 to i8*
  %8 = load i32* @TTSize, align 4
  %conv3 = sext i32 %8 to i64
  %mul4 = mul i64 16, %conv3
  call void @__softboundcets_memset_check(i8* %7, i64 %mul4, i8* %base.load13, i8* %bound.load14)
  call void @llvm.memset.p0i8.i64(i8* %7, i8 0, i64 %mul4, i32 4, i1 false)
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @clear_dp_tt() #0 {
entry:
  %base.alloca = alloca i8*
  %bound.alloca = alloca i8*
  %0 = load %struct.TType** @DP_TTable, align 8
  %bitcast = bitcast %struct.TType** @DP_TTable to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast, i8** %base.alloca, i8** %bound.alloca)
  %base.load = load i8** %base.alloca
  %bound.load = load i8** %bound.alloca
  %1 = bitcast %struct.TType* %0 to i8*
  %2 = load i32* @TTSize, align 4
  %conv = sext i32 %2 to i64
  %mul = mul i64 20, %conv
  call void @__softboundcets_memset_check(i8* %1, i64 %mul, i8* %base.load, i8* %bound.load)
  call void @llvm.memset.p0i8.i64(i8* %1, i8 0, i64 %mul, i32 4, i1 false)
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @initialize_zobrist() #0 {
entry:
  %p = alloca i32, align 4
  %p9 = bitcast i32* %p to i32*
  %bitcast = bitcast i32* %p to i8*
  %mtmp = getelementptr i32* %p9, i32 1
  %bitcast10 = bitcast i32* %mtmp to i8*
  %q = alloca i32, align 4
  %q11 = bitcast i32* %q to i32*
  %bitcast12 = bitcast i32* %q to i8*
  %mtmp13 = getelementptr i32* %q11, i32 1
  %bitcast14 = bitcast i32* %mtmp13 to i8*
  call void @seedMT(i32 31657)
  store i32 0, i32* %p, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc6, %entry
  %0 = load i32* %p, align 4
  %cmp = icmp slt i32 %0, 14
  br i1 %cmp, label %for.body, label %for.end8

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %q, align 4
  br label %for.cond1

for.cond1:                                        ; preds = %for.inc, %for.body
  %1 = load i32* %q, align 4
  %cmp2 = icmp slt i32 %1, 144
  br i1 %cmp2, label %for.body3, label %for.end

for.body3:                                        ; preds = %for.cond1
  %call = call i32 @randomMT()
  %2 = load i32* %q, align 4
  %idxprom = sext i32 %2 to i64
  %3 = load i32* %p, align 4
  %idxprom4 = sext i32 %3 to i64
  %bitcast15 = bitcast [14 x [144 x i32]]* @zobrist to i8*
  %bitcast16 = bitcast [14 x [144 x i32]]* getelementptr inbounds ([14 x [144 x i32]]* @zobrist, i32 1) to i8*
  %arrayidx = getelementptr inbounds [14 x [144 x i32]]* @zobrist, i32 0, i64 %idxprom4
  %arrayidx5 = getelementptr inbounds [144 x i32]* %arrayidx, i32 0, i64 %idxprom
  store i32 %call, i32* %arrayidx5, align 4
  br label %for.inc

for.inc:                                          ; preds = %for.body3
  %4 = load i32* %q, align 4
  %inc = add nsw i32 %4, 1
  store i32 %inc, i32* %q, align 4
  br label %for.cond1

for.end:                                          ; preds = %for.cond1
  br label %for.inc6

for.inc6:                                         ; preds = %for.end
  %5 = load i32* %p, align 4
  %inc7 = add nsw i32 %5, 1
  store i32 %inc7, i32* %p, align 4
  br label %for.cond

for.end8:                                         ; preds = %for.cond
  store i32 -559038737, i32* @hash, align 4
  store i32 -1056969216, i32* @hold_hash, align 4
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @initialize_hash() #0 {
entry:
  %p = alloca i32, align 4
  %p11 = bitcast i32* %p to i32*
  %bitcast = bitcast i32* %p to i8*
  %mtmp = getelementptr i32* %p11, i32 1
  %bitcast12 = bitcast i32* %mtmp to i8*
  store i32 -559038737, i32* @hash, align 4
  store i32 0, i32* %p, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32* %p, align 4
  %cmp = icmp slt i32 %0, 144
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %1 = load i32* %p, align 4
  %idxprom = sext i32 %1 to i64
  %arrayidx = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom
  %2 = load i32* %arrayidx, align 4
  %cmp1 = icmp ne i32 %2, 13
  br i1 %cmp1, label %land.lhs.true, label %if.end

land.lhs.true:                                    ; preds = %for.body
  %3 = load i32* %p, align 4
  %idxprom2 = sext i32 %3 to i64
  %arrayidx3 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom2
  %4 = load i32* %arrayidx3, align 4
  %cmp4 = icmp ne i32 %4, 0
  br i1 %cmp4, label %if.then, label %if.end

if.then:                                          ; preds = %land.lhs.true
  %5 = load i32* @hash, align 4
  %6 = load i32* %p, align 4
  %idxprom5 = sext i32 %6 to i64
  %7 = load i32* %p, align 4
  %idxprom6 = sext i32 %7 to i64
  %arrayidx7 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom6
  %8 = load i32* %arrayidx7, align 4
  %idxprom8 = sext i32 %8 to i64
  %bitcast13 = bitcast [14 x [144 x i32]]* @zobrist to i8*
  %bitcast14 = bitcast [14 x [144 x i32]]* getelementptr inbounds ([14 x [144 x i32]]* @zobrist, i32 1) to i8*
  %arrayidx9 = getelementptr inbounds [14 x [144 x i32]]* @zobrist, i32 0, i64 %idxprom8
  %arrayidx10 = getelementptr inbounds [144 x i32]* %arrayidx9, i32 0, i64 %idxprom5
  %9 = load i32* %arrayidx10, align 4
  %xor = xor i32 %5, %9
  store i32 %xor, i32* @hash, align 4
  br label %if.end

if.end:                                           ; preds = %if.then, %land.lhs.true, %for.body
  br label %for.inc

for.inc:                                          ; preds = %if.end
  %10 = load i32* %p, align 4
  %inc = add nsw i32 %10, 1
  store i32 %inc, i32* %p, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  store i32 -1056969216, i32* @hold_hash, align 4
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @QStoreTT(i32 %score, i32 %alpha, i32 %beta, i32 %best) #0 {
entry:
  %base.alloca72 = alloca i8*
  %bound.alloca73 = alloca i8*
  %base.alloca67 = alloca i8*
  %bound.alloca68 = alloca i8*
  %base.alloca62 = alloca i8*
  %bound.alloca63 = alloca i8*
  %base.alloca57 = alloca i8*
  %bound.alloca58 = alloca i8*
  %base.alloca52 = alloca i8*
  %bound.alloca53 = alloca i8*
  %base.alloca47 = alloca i8*
  %bound.alloca48 = alloca i8*
  %base.alloca42 = alloca i8*
  %bound.alloca43 = alloca i8*
  %base.alloca = alloca i8*
  %bound.alloca = alloca i8*
  %score.addr = alloca i32, align 4
  %score.addr22 = bitcast i32* %score.addr to i32*
  %bitcast = bitcast i32* %score.addr to i8*
  %mtmp = getelementptr i32* %score.addr22, i32 1
  %bitcast23 = bitcast i32* %mtmp to i8*
  %alpha.addr = alloca i32, align 4
  %alpha.addr24 = bitcast i32* %alpha.addr to i32*
  %bitcast25 = bitcast i32* %alpha.addr to i8*
  %mtmp26 = getelementptr i32* %alpha.addr24, i32 1
  %bitcast27 = bitcast i32* %mtmp26 to i8*
  %beta.addr = alloca i32, align 4
  %beta.addr28 = bitcast i32* %beta.addr to i32*
  %bitcast29 = bitcast i32* %beta.addr to i8*
  %mtmp30 = getelementptr i32* %beta.addr28, i32 1
  %bitcast31 = bitcast i32* %mtmp30 to i8*
  %best.addr = alloca i32, align 4
  %best.addr32 = bitcast i32* %best.addr to i32*
  %bitcast33 = bitcast i32* %best.addr to i8*
  %mtmp34 = getelementptr i32* %best.addr32, i32 1
  %bitcast35 = bitcast i32* %mtmp34 to i8*
  %ttindex = alloca i32, align 4
  %ttindex36 = bitcast i32* %ttindex to i32*
  %bitcast37 = bitcast i32* %ttindex to i8*
  %mtmp38 = getelementptr i32* %ttindex36, i32 1
  %bitcast39 = bitcast i32* %mtmp38 to i8*
  store i32 %score, i32* %score.addr, align 4
  store i32 %alpha, i32* %alpha.addr, align 4
  store i32 %beta, i32* %beta.addr, align 4
  store i32 %best, i32* %best.addr, align 4
  %0 = load i32* @TTStores, align 4
  %inc = add i32 %0, 1
  store i32 %inc, i32* @TTStores, align 4
  %1 = load i32* @hash, align 4
  %2 = load i32* @TTSize, align 4
  %rem = urem i32 %1, %2
  store i32 %rem, i32* %ttindex, align 4
  %3 = load i32* %score.addr, align 4
  %4 = load i32* %alpha.addr, align 4
  %cmp = icmp sle i32 %3, %4
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  %5 = load i32* %ttindex, align 4
  %idxprom = zext i32 %5 to i64
  %6 = load %struct.QTType** @QS_TTable, align 8
  %bitcast40 = bitcast %struct.QTType** @QS_TTable to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast40, i8** %base.alloca, i8** %bound.alloca)
  %base.load = load i8** %base.alloca
  %bound.load = load i8** %bound.alloca
  %arrayidx = getelementptr inbounds %struct.QTType* %6, i64 %idxprom
  %Type = getelementptr inbounds %struct.QTType* %arrayidx, i32 0, i32 1
  store i8 1, i8* %Type, align 1
  br label %if.end10

if.else:                                          ; preds = %entry
  %7 = load i32* %score.addr, align 4
  %8 = load i32* %beta.addr, align 4
  %cmp1 = icmp sge i32 %7, %8
  br i1 %cmp1, label %if.then2, label %if.else6

if.then2:                                         ; preds = %if.else
  %9 = load i32* %ttindex, align 4
  %idxprom3 = zext i32 %9 to i64
  %10 = load %struct.QTType** @QS_TTable, align 8
  %bitcast66 = bitcast %struct.QTType** @QS_TTable to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast66, i8** %base.alloca67, i8** %bound.alloca68)
  %base.load69 = load i8** %base.alloca67
  %bound.load70 = load i8** %bound.alloca68
  %arrayidx4 = getelementptr inbounds %struct.QTType* %10, i64 %idxprom3
  %Type5 = getelementptr inbounds %struct.QTType* %arrayidx4, i32 0, i32 1
  store i8 2, i8* %Type5, align 1
  br label %if.end

if.else6:                                         ; preds = %if.else
  %11 = load i32* %ttindex, align 4
  %idxprom7 = zext i32 %11 to i64
  %12 = load %struct.QTType** @QS_TTable, align 8
  %bitcast71 = bitcast %struct.QTType** @QS_TTable to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast71, i8** %base.alloca72, i8** %bound.alloca73)
  %base.load74 = load i8** %base.alloca72
  %bound.load75 = load i8** %bound.alloca73
  %arrayidx8 = getelementptr inbounds %struct.QTType* %12, i64 %idxprom7
  %Type9 = getelementptr inbounds %struct.QTType* %arrayidx8, i32 0, i32 1
  store i8 3, i8* %Type9, align 1
  br label %if.end

if.end:                                           ; preds = %if.else6, %if.then2
  br label %if.end10

if.end10:                                         ; preds = %if.end, %if.then
  %13 = load i32* @hash, align 4
  %14 = load i32* %ttindex, align 4
  %idxprom11 = zext i32 %14 to i64
  %15 = load %struct.QTType** @QS_TTable, align 8
  %bitcast41 = bitcast %struct.QTType** @QS_TTable to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast41, i8** %base.alloca42, i8** %bound.alloca43)
  %base.load44 = load i8** %base.alloca42
  %bound.load45 = load i8** %bound.alloca43
  %arrayidx12 = getelementptr inbounds %struct.QTType* %15, i64 %idxprom11
  %HashKey = getelementptr inbounds %struct.QTType* %arrayidx12, i32 0, i32 3
  store i32 %13, i32* %HashKey, align 4
  %16 = load i32* @hold_hash, align 4
  %17 = load i32* %ttindex, align 4
  %idxprom13 = zext i32 %17 to i64
  %18 = load %struct.QTType** @QS_TTable, align 8
  %bitcast46 = bitcast %struct.QTType** @QS_TTable to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast46, i8** %base.alloca47, i8** %bound.alloca48)
  %base.load49 = load i8** %base.alloca47
  %bound.load50 = load i8** %bound.alloca48
  %arrayidx14 = getelementptr inbounds %struct.QTType* %18, i64 %idxprom13
  %Hold_hash = getelementptr inbounds %struct.QTType* %arrayidx14, i32 0, i32 4
  store i32 %16, i32* %Hold_hash, align 4
  %19 = load i32* %best.addr, align 4
  %conv = trunc i32 %19 to i16
  %20 = load i32* %ttindex, align 4
  %idxprom15 = zext i32 %20 to i64
  %21 = load %struct.QTType** @QS_TTable, align 8
  %bitcast51 = bitcast %struct.QTType** @QS_TTable to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast51, i8** %base.alloca52, i8** %bound.alloca53)
  %base.load54 = load i8** %base.alloca52
  %bound.load55 = load i8** %bound.alloca53
  %arrayidx16 = getelementptr inbounds %struct.QTType* %21, i64 %idxprom15
  %Bestmove = getelementptr inbounds %struct.QTType* %arrayidx16, i32 0, i32 2
  store i16 %conv, i16* %Bestmove, align 2
  %22 = load i32* %score.addr, align 4
  %23 = load i32* %ttindex, align 4
  %idxprom17 = zext i32 %23 to i64
  %24 = load %struct.QTType** @QS_TTable, align 8
  %bitcast56 = bitcast %struct.QTType** @QS_TTable to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast56, i8** %base.alloca57, i8** %bound.alloca58)
  %base.load59 = load i8** %base.alloca57
  %bound.load60 = load i8** %bound.alloca58
  %arrayidx18 = getelementptr inbounds %struct.QTType* %24, i64 %idxprom17
  %Bound = getelementptr inbounds %struct.QTType* %arrayidx18, i32 0, i32 5
  store i32 %22, i32* %Bound, align 4
  %25 = load i32* @white_to_move, align 4
  %tobool = icmp ne i32 %25, 0
  %cond = select i1 %tobool, i32 0, i32 1
  %conv19 = trunc i32 %cond to i8
  %26 = load i32* %ttindex, align 4
  %idxprom20 = zext i32 %26 to i64
  %27 = load %struct.QTType** @QS_TTable, align 8
  %bitcast61 = bitcast %struct.QTType** @QS_TTable to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast61, i8** %base.alloca62, i8** %bound.alloca63)
  %base.load64 = load i8** %base.alloca62
  %bound.load65 = load i8** %bound.alloca63
  %arrayidx21 = getelementptr inbounds %struct.QTType* %27, i64 %idxprom20
  %OnMove = getelementptr inbounds %struct.QTType* %arrayidx21, i32 0, i32 0
  store i8 %conv19, i8* %OnMove, align 1
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @StoreTT(i32 %score, i32 %alpha, i32 %beta, i32 %best, i32 %threat, i32 %depth) #0 {
entry:
  %base.alloca277 = alloca i8*
  %bound.alloca278 = alloca i8*
  %base.alloca272 = alloca i8*
  %bound.alloca273 = alloca i8*
  %base.alloca267 = alloca i8*
  %bound.alloca268 = alloca i8*
  %base.alloca262 = alloca i8*
  %bound.alloca263 = alloca i8*
  %base.alloca257 = alloca i8*
  %bound.alloca258 = alloca i8*
  %base.alloca252 = alloca i8*
  %bound.alloca253 = alloca i8*
  %base.alloca247 = alloca i8*
  %bound.alloca248 = alloca i8*
  %base.alloca242 = alloca i8*
  %bound.alloca243 = alloca i8*
  %base.alloca237 = alloca i8*
  %bound.alloca238 = alloca i8*
  %base.alloca232 = alloca i8*
  %bound.alloca233 = alloca i8*
  %base.alloca227 = alloca i8*
  %bound.alloca228 = alloca i8*
  %base.alloca222 = alloca i8*
  %bound.alloca223 = alloca i8*
  %base.alloca217 = alloca i8*
  %bound.alloca218 = alloca i8*
  %base.alloca212 = alloca i8*
  %bound.alloca213 = alloca i8*
  %base.alloca207 = alloca i8*
  %bound.alloca208 = alloca i8*
  %base.alloca202 = alloca i8*
  %bound.alloca203 = alloca i8*
  %base.alloca197 = alloca i8*
  %bound.alloca198 = alloca i8*
  %base.alloca192 = alloca i8*
  %bound.alloca193 = alloca i8*
  %base.alloca187 = alloca i8*
  %bound.alloca188 = alloca i8*
  %base.alloca182 = alloca i8*
  %bound.alloca183 = alloca i8*
  %base.alloca177 = alloca i8*
  %bound.alloca178 = alloca i8*
  %base.alloca172 = alloca i8*
  %bound.alloca173 = alloca i8*
  %base.alloca = alloca i8*
  %bound.alloca = alloca i8*
  %score.addr = alloca i32, align 4
  %score.addr144 = bitcast i32* %score.addr to i32*
  %bitcast = bitcast i32* %score.addr to i8*
  %mtmp = getelementptr i32* %score.addr144, i32 1
  %bitcast145 = bitcast i32* %mtmp to i8*
  %alpha.addr = alloca i32, align 4
  %alpha.addr146 = bitcast i32* %alpha.addr to i32*
  %bitcast147 = bitcast i32* %alpha.addr to i8*
  %mtmp148 = getelementptr i32* %alpha.addr146, i32 1
  %bitcast149 = bitcast i32* %mtmp148 to i8*
  %beta.addr = alloca i32, align 4
  %beta.addr150 = bitcast i32* %beta.addr to i32*
  %bitcast151 = bitcast i32* %beta.addr to i8*
  %mtmp152 = getelementptr i32* %beta.addr150, i32 1
  %bitcast153 = bitcast i32* %mtmp152 to i8*
  %best.addr = alloca i32, align 4
  %best.addr154 = bitcast i32* %best.addr to i32*
  %bitcast155 = bitcast i32* %best.addr to i8*
  %mtmp156 = getelementptr i32* %best.addr154, i32 1
  %bitcast157 = bitcast i32* %mtmp156 to i8*
  %threat.addr = alloca i32, align 4
  %threat.addr158 = bitcast i32* %threat.addr to i32*
  %bitcast159 = bitcast i32* %threat.addr to i8*
  %mtmp160 = getelementptr i32* %threat.addr158, i32 1
  %bitcast161 = bitcast i32* %mtmp160 to i8*
  %depth.addr = alloca i32, align 4
  %depth.addr162 = bitcast i32* %depth.addr to i32*
  %bitcast163 = bitcast i32* %depth.addr to i8*
  %mtmp164 = getelementptr i32* %depth.addr162, i32 1
  %bitcast165 = bitcast i32* %mtmp164 to i8*
  %ttindex = alloca i32, align 4
  %ttindex166 = bitcast i32* %ttindex to i32*
  %bitcast167 = bitcast i32* %ttindex to i8*
  %mtmp168 = getelementptr i32* %ttindex166, i32 1
  %bitcast169 = bitcast i32* %mtmp168 to i8*
  store i32 %score, i32* %score.addr, align 4
  store i32 %alpha, i32* %alpha.addr, align 4
  store i32 %beta, i32* %beta.addr, align 4
  store i32 %best, i32* %best.addr, align 4
  store i32 %threat, i32* %threat.addr, align 4
  store i32 %depth, i32* %depth.addr, align 4
  %0 = load i32* @TTStores, align 4
  %inc = add i32 %0, 1
  store i32 %inc, i32* @TTStores, align 4
  %1 = load i32* @hash, align 4
  %2 = load i32* @TTSize, align 4
  %rem = urem i32 %1, %2
  store i32 %rem, i32* %ttindex, align 4
  %3 = load i32* %ttindex, align 4
  %idxprom = zext i32 %3 to i64
  %4 = load %struct.TType** @DP_TTable, align 8
  %bitcast170 = bitcast %struct.TType** @DP_TTable to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast170, i8** %base.alloca, i8** %bound.alloca)
  %base.load = load i8** %base.alloca
  %bound.load = load i8** %bound.alloca
  %arrayidx = getelementptr inbounds %struct.TType* %4, i64 %idxprom
  %Depth = getelementptr inbounds %struct.TType* %arrayidx, i32 0, i32 0
  %5 = load i8* %Depth, align 1
  %conv = sext i8 %5 to i32
  %6 = load i32* %depth.addr, align 4
  %cmp = icmp slt i32 %conv, %6
  br i1 %cmp, label %land.lhs.true22, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %entry
  %7 = load i32* %ttindex, align 4
  %idxprom2 = zext i32 %7 to i64
  %8 = load %struct.TType** @DP_TTable, align 8
  %bitcast171 = bitcast %struct.TType** @DP_TTable to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast171, i8** %base.alloca172, i8** %bound.alloca173)
  %base.load174 = load i8** %base.alloca172
  %bound.load175 = load i8** %bound.alloca173
  %arrayidx3 = getelementptr inbounds %struct.TType* %8, i64 %idxprom2
  %Depth4 = getelementptr inbounds %struct.TType* %arrayidx3, i32 0, i32 0
  %9 = load i8* %Depth4, align 1
  %conv5 = sext i8 %9 to i32
  %10 = load i32* %depth.addr, align 4
  %cmp6 = icmp eq i32 %conv5, %10
  br i1 %cmp6, label %land.lhs.true, label %if.else77

land.lhs.true:                                    ; preds = %lor.lhs.false
  %11 = load i32* %ttindex, align 4
  %idxprom8 = zext i32 %11 to i64
  %12 = load %struct.TType** @DP_TTable, align 8
  %bitcast176 = bitcast %struct.TType** @DP_TTable to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast176, i8** %base.alloca177, i8** %bound.alloca178)
  %base.load179 = load i8** %base.alloca177
  %bound.load180 = load i8** %bound.alloca178
  %arrayidx9 = getelementptr inbounds %struct.TType* %12, i64 %idxprom8
  %Type = getelementptr inbounds %struct.TType* %arrayidx9, i32 0, i32 3
  %13 = load i8* %Type, align 1
  %conv10 = sext i8 %13 to i32
  %cmp11 = icmp eq i32 %conv10, 1
  br i1 %cmp11, label %land.lhs.true13, label %lor.lhs.false16

land.lhs.true13:                                  ; preds = %land.lhs.true
  %14 = load i32* %score.addr, align 4
  %15 = load i32* %alpha.addr, align 4
  %cmp14 = icmp sgt i32 %14, %15
  br i1 %cmp14, label %land.lhs.true22, label %lor.lhs.false16

lor.lhs.false16:                                  ; preds = %land.lhs.true13, %land.lhs.true
  %16 = load i32* %score.addr, align 4
  %17 = load i32* %alpha.addr, align 4
  %cmp17 = icmp sgt i32 %16, %17
  br i1 %cmp17, label %land.lhs.true19, label %if.else77

land.lhs.true19:                                  ; preds = %lor.lhs.false16
  %18 = load i32* %score.addr, align 4
  %19 = load i32* %beta.addr, align 4
  %cmp20 = icmp slt i32 %18, %19
  br i1 %cmp20, label %land.lhs.true22, label %if.else77

land.lhs.true22:                                  ; preds = %land.lhs.true19, %land.lhs.true13, %entry
  %20 = load i32* @is_pondering, align 4
  %tobool = icmp ne i32 %20, 0
  br i1 %tobool, label %if.else77, label %if.then

if.then:                                          ; preds = %land.lhs.true22
  %21 = load i32* %score.addr, align 4
  %22 = load i32* %alpha.addr, align 4
  %cmp23 = icmp sle i32 %21, %22
  br i1 %cmp23, label %if.then25, label %if.else

if.then25:                                        ; preds = %if.then
  %23 = load i32* %ttindex, align 4
  %idxprom26 = zext i32 %23 to i64
  %24 = load %struct.TType** @DP_TTable, align 8
  %bitcast186 = bitcast %struct.TType** @DP_TTable to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast186, i8** %base.alloca187, i8** %bound.alloca188)
  %base.load189 = load i8** %base.alloca187
  %bound.load190 = load i8** %bound.alloca188
  %arrayidx27 = getelementptr inbounds %struct.TType* %24, i64 %idxprom26
  %Type28 = getelementptr inbounds %struct.TType* %arrayidx27, i32 0, i32 3
  store i8 1, i8* %Type28, align 1
  %25 = load i32* %score.addr, align 4
  %cmp29 = icmp slt i32 %25, -999500
  br i1 %cmp29, label %if.then31, label %if.end

if.then31:                                        ; preds = %if.then25
  store i32 -999500, i32* %score.addr, align 4
  br label %if.end

if.end:                                           ; preds = %if.then31, %if.then25
  br label %if.end56

if.else:                                          ; preds = %if.then
  %26 = load i32* %score.addr, align 4
  %27 = load i32* %beta.addr, align 4
  %cmp32 = icmp sge i32 %26, %27
  br i1 %cmp32, label %if.then34, label %if.else42

if.then34:                                        ; preds = %if.else
  %28 = load i32* %ttindex, align 4
  %idxprom35 = zext i32 %28 to i64
  %29 = load %struct.TType** @DP_TTable, align 8
  %bitcast201 = bitcast %struct.TType** @DP_TTable to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast201, i8** %base.alloca202, i8** %bound.alloca203)
  %base.load204 = load i8** %base.alloca202
  %bound.load205 = load i8** %bound.alloca203
  %arrayidx36 = getelementptr inbounds %struct.TType* %29, i64 %idxprom35
  %Type37 = getelementptr inbounds %struct.TType* %arrayidx36, i32 0, i32 3
  store i8 2, i8* %Type37, align 1
  %30 = load i32* %score.addr, align 4
  %cmp38 = icmp sgt i32 %30, 999500
  br i1 %cmp38, label %if.then40, label %if.end41

if.then40:                                        ; preds = %if.then34
  store i32 999500, i32* %score.addr, align 4
  br label %if.end41

if.end41:                                         ; preds = %if.then40, %if.then34
  br label %if.end55

if.else42:                                        ; preds = %if.else
  %31 = load i32* %ttindex, align 4
  %idxprom43 = zext i32 %31 to i64
  %32 = load %struct.TType** @DP_TTable, align 8
  %bitcast206 = bitcast %struct.TType** @DP_TTable to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast206, i8** %base.alloca207, i8** %bound.alloca208)
  %base.load209 = load i8** %base.alloca207
  %bound.load210 = load i8** %bound.alloca208
  %arrayidx44 = getelementptr inbounds %struct.TType* %32, i64 %idxprom43
  %Type45 = getelementptr inbounds %struct.TType* %arrayidx44, i32 0, i32 3
  store i8 3, i8* %Type45, align 1
  %33 = load i32* %score.addr, align 4
  %cmp46 = icmp sgt i32 %33, 999500
  br i1 %cmp46, label %if.then48, label %if.else49

if.then48:                                        ; preds = %if.else42
  %34 = load i32* @ply, align 4
  %35 = load i32* %score.addr, align 4
  %add = add nsw i32 %35, %34
  store i32 %add, i32* %score.addr, align 4
  br label %if.end54

if.else49:                                        ; preds = %if.else42
  %36 = load i32* %score.addr, align 4
  %cmp50 = icmp slt i32 %36, -999500
  br i1 %cmp50, label %if.then52, label %if.end53

if.then52:                                        ; preds = %if.else49
  %37 = load i32* @ply, align 4
  %38 = load i32* %score.addr, align 4
  %sub = sub nsw i32 %38, %37
  store i32 %sub, i32* %score.addr, align 4
  br label %if.end53

if.end53:                                         ; preds = %if.then52, %if.else49
  br label %if.end54

if.end54:                                         ; preds = %if.end53, %if.then48
  br label %if.end55

if.end55:                                         ; preds = %if.end54, %if.end41
  br label %if.end56

if.end56:                                         ; preds = %if.end55, %if.end
  %39 = load i32* @hash, align 4
  %40 = load i32* %ttindex, align 4
  %idxprom57 = zext i32 %40 to i64
  %41 = load %struct.TType** @DP_TTable, align 8
  %bitcast246 = bitcast %struct.TType** @DP_TTable to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast246, i8** %base.alloca247, i8** %bound.alloca248)
  %base.load249 = load i8** %base.alloca247
  %bound.load250 = load i8** %bound.alloca248
  %arrayidx58 = getelementptr inbounds %struct.TType* %41, i64 %idxprom57
  %HashKey = getelementptr inbounds %struct.TType* %arrayidx58, i32 0, i32 5
  store i32 %39, i32* %HashKey, align 4
  %42 = load i32* @hold_hash, align 4
  %43 = load i32* %ttindex, align 4
  %idxprom59 = zext i32 %43 to i64
  %44 = load %struct.TType** @DP_TTable, align 8
  %bitcast251 = bitcast %struct.TType** @DP_TTable to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast251, i8** %base.alloca252, i8** %bound.alloca253)
  %base.load254 = load i8** %base.alloca252
  %bound.load255 = load i8** %bound.alloca253
  %arrayidx60 = getelementptr inbounds %struct.TType* %44, i64 %idxprom59
  %Hold_hash = getelementptr inbounds %struct.TType* %arrayidx60, i32 0, i32 6
  store i32 %42, i32* %Hold_hash, align 4
  %45 = load i32* %depth.addr, align 4
  %conv61 = trunc i32 %45 to i8
  %46 = load i32* %ttindex, align 4
  %idxprom62 = zext i32 %46 to i64
  %47 = load %struct.TType** @DP_TTable, align 8
  %bitcast256 = bitcast %struct.TType** @DP_TTable to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast256, i8** %base.alloca257, i8** %bound.alloca258)
  %base.load259 = load i8** %base.alloca257
  %bound.load260 = load i8** %bound.alloca258
  %arrayidx63 = getelementptr inbounds %struct.TType* %47, i64 %idxprom62
  %Depth64 = getelementptr inbounds %struct.TType* %arrayidx63, i32 0, i32 0
  store i8 %conv61, i8* %Depth64, align 1
  %48 = load i32* %best.addr, align 4
  %conv65 = trunc i32 %48 to i16
  %49 = load i32* %ttindex, align 4
  %idxprom66 = zext i32 %49 to i64
  %50 = load %struct.TType** @DP_TTable, align 8
  %bitcast261 = bitcast %struct.TType** @DP_TTable to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast261, i8** %base.alloca262, i8** %bound.alloca263)
  %base.load264 = load i8** %base.alloca262
  %bound.load265 = load i8** %bound.alloca263
  %arrayidx67 = getelementptr inbounds %struct.TType* %50, i64 %idxprom66
  %Bestmove = getelementptr inbounds %struct.TType* %arrayidx67, i32 0, i32 4
  store i16 %conv65, i16* %Bestmove, align 2
  %51 = load i32* %score.addr, align 4
  %52 = load i32* %ttindex, align 4
  %idxprom68 = zext i32 %52 to i64
  %53 = load %struct.TType** @DP_TTable, align 8
  %bitcast266 = bitcast %struct.TType** @DP_TTable to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast266, i8** %base.alloca267, i8** %bound.alloca268)
  %base.load269 = load i8** %base.alloca267
  %bound.load270 = load i8** %bound.alloca268
  %arrayidx69 = getelementptr inbounds %struct.TType* %53, i64 %idxprom68
  %Bound = getelementptr inbounds %struct.TType* %arrayidx69, i32 0, i32 7
  store i32 %51, i32* %Bound, align 4
  %54 = load i32* @white_to_move, align 4
  %tobool70 = icmp ne i32 %54, 0
  %cond = select i1 %tobool70, i32 0, i32 1
  %conv71 = trunc i32 %cond to i8
  %55 = load i32* %ttindex, align 4
  %idxprom72 = zext i32 %55 to i64
  %56 = load %struct.TType** @DP_TTable, align 8
  %bitcast271 = bitcast %struct.TType** @DP_TTable to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast271, i8** %base.alloca272, i8** %bound.alloca273)
  %base.load274 = load i8** %base.alloca272
  %bound.load275 = load i8** %bound.alloca273
  %arrayidx73 = getelementptr inbounds %struct.TType* %56, i64 %idxprom72
  %OnMove = getelementptr inbounds %struct.TType* %arrayidx73, i32 0, i32 1
  store i8 %conv71, i8* %OnMove, align 1
  %57 = load i32* %threat.addr, align 4
  %conv74 = trunc i32 %57 to i8
  %58 = load i32* %ttindex, align 4
  %idxprom75 = zext i32 %58 to i64
  %59 = load %struct.TType** @DP_TTable, align 8
  %bitcast276 = bitcast %struct.TType** @DP_TTable to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast276, i8** %base.alloca277, i8** %bound.alloca278)
  %base.load279 = load i8** %base.alloca277
  %bound.load280 = load i8** %bound.alloca278
  %arrayidx76 = getelementptr inbounds %struct.TType* %59, i64 %idxprom75
  %Threat = getelementptr inbounds %struct.TType* %arrayidx76, i32 0, i32 2
  store i8 %conv74, i8* %Threat, align 1
  br label %if.end143

if.else77:                                        ; preds = %land.lhs.true22, %land.lhs.true19, %lor.lhs.false16, %lor.lhs.false
  %60 = load i32* %score.addr, align 4
  %61 = load i32* %alpha.addr, align 4
  %cmp78 = icmp sle i32 %60, %61
  br i1 %cmp78, label %if.then80, label %if.else88

if.then80:                                        ; preds = %if.else77
  %62 = load i32* %ttindex, align 4
  %idxprom81 = zext i32 %62 to i64
  %63 = load %struct.TType** @AS_TTable, align 8
  %bitcast181 = bitcast %struct.TType** @AS_TTable to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast181, i8** %base.alloca182, i8** %bound.alloca183)
  %base.load184 = load i8** %base.alloca182
  %bound.load185 = load i8** %bound.alloca183
  %arrayidx82 = getelementptr inbounds %struct.TType* %63, i64 %idxprom81
  %Type83 = getelementptr inbounds %struct.TType* %arrayidx82, i32 0, i32 3
  store i8 1, i8* %Type83, align 1
  %64 = load i32* %score.addr, align 4
  %cmp84 = icmp slt i32 %64, -999500
  br i1 %cmp84, label %if.then86, label %if.end87

if.then86:                                        ; preds = %if.then80
  store i32 -999500, i32* %score.addr, align 4
  br label %if.end87

if.end87:                                         ; preds = %if.then86, %if.then80
  br label %if.end115

if.else88:                                        ; preds = %if.else77
  %65 = load i32* %score.addr, align 4
  %66 = load i32* %beta.addr, align 4
  %cmp89 = icmp sge i32 %65, %66
  br i1 %cmp89, label %if.then91, label %if.else99

if.then91:                                        ; preds = %if.else88
  %67 = load i32* %ttindex, align 4
  %idxprom92 = zext i32 %67 to i64
  %68 = load %struct.TType** @AS_TTable, align 8
  %bitcast191 = bitcast %struct.TType** @AS_TTable to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast191, i8** %base.alloca192, i8** %bound.alloca193)
  %base.load194 = load i8** %base.alloca192
  %bound.load195 = load i8** %bound.alloca193
  %arrayidx93 = getelementptr inbounds %struct.TType* %68, i64 %idxprom92
  %Type94 = getelementptr inbounds %struct.TType* %arrayidx93, i32 0, i32 3
  store i8 2, i8* %Type94, align 1
  %69 = load i32* %score.addr, align 4
  %cmp95 = icmp sgt i32 %69, 999500
  br i1 %cmp95, label %if.then97, label %if.end98

if.then97:                                        ; preds = %if.then91
  store i32 999500, i32* %score.addr, align 4
  br label %if.end98

if.end98:                                         ; preds = %if.then97, %if.then91
  br label %if.end114

if.else99:                                        ; preds = %if.else88
  %70 = load i32* %ttindex, align 4
  %idxprom100 = zext i32 %70 to i64
  %71 = load %struct.TType** @AS_TTable, align 8
  %bitcast196 = bitcast %struct.TType** @AS_TTable to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast196, i8** %base.alloca197, i8** %bound.alloca198)
  %base.load199 = load i8** %base.alloca197
  %bound.load200 = load i8** %bound.alloca198
  %arrayidx101 = getelementptr inbounds %struct.TType* %71, i64 %idxprom100
  %Type102 = getelementptr inbounds %struct.TType* %arrayidx101, i32 0, i32 3
  store i8 3, i8* %Type102, align 1
  %72 = load i32* %score.addr, align 4
  %cmp103 = icmp sgt i32 %72, 999500
  br i1 %cmp103, label %if.then105, label %if.else107

if.then105:                                       ; preds = %if.else99
  %73 = load i32* @ply, align 4
  %74 = load i32* %score.addr, align 4
  %add106 = add nsw i32 %74, %73
  store i32 %add106, i32* %score.addr, align 4
  br label %if.end113

if.else107:                                       ; preds = %if.else99
  %75 = load i32* %score.addr, align 4
  %cmp108 = icmp slt i32 %75, -999500
  br i1 %cmp108, label %if.then110, label %if.end112

if.then110:                                       ; preds = %if.else107
  %76 = load i32* @ply, align 4
  %77 = load i32* %score.addr, align 4
  %sub111 = sub nsw i32 %77, %76
  store i32 %sub111, i32* %score.addr, align 4
  br label %if.end112

if.end112:                                        ; preds = %if.then110, %if.else107
  br label %if.end113

if.end113:                                        ; preds = %if.end112, %if.then105
  br label %if.end114

if.end114:                                        ; preds = %if.end113, %if.end98
  br label %if.end115

if.end115:                                        ; preds = %if.end114, %if.end87
  %78 = load i32* @hash, align 4
  %79 = load i32* %ttindex, align 4
  %idxprom116 = zext i32 %79 to i64
  %80 = load %struct.TType** @AS_TTable, align 8
  %bitcast211 = bitcast %struct.TType** @AS_TTable to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast211, i8** %base.alloca212, i8** %bound.alloca213)
  %base.load214 = load i8** %base.alloca212
  %bound.load215 = load i8** %bound.alloca213
  %arrayidx117 = getelementptr inbounds %struct.TType* %80, i64 %idxprom116
  %HashKey118 = getelementptr inbounds %struct.TType* %arrayidx117, i32 0, i32 5
  store i32 %78, i32* %HashKey118, align 4
  %81 = load i32* @hold_hash, align 4
  %82 = load i32* %ttindex, align 4
  %idxprom119 = zext i32 %82 to i64
  %83 = load %struct.TType** @AS_TTable, align 8
  %bitcast216 = bitcast %struct.TType** @AS_TTable to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast216, i8** %base.alloca217, i8** %bound.alloca218)
  %base.load219 = load i8** %base.alloca217
  %bound.load220 = load i8** %bound.alloca218
  %arrayidx120 = getelementptr inbounds %struct.TType* %83, i64 %idxprom119
  %Hold_hash121 = getelementptr inbounds %struct.TType* %arrayidx120, i32 0, i32 6
  store i32 %81, i32* %Hold_hash121, align 4
  %84 = load i32* %depth.addr, align 4
  %conv122 = trunc i32 %84 to i8
  %85 = load i32* %ttindex, align 4
  %idxprom123 = zext i32 %85 to i64
  %86 = load %struct.TType** @AS_TTable, align 8
  %bitcast221 = bitcast %struct.TType** @AS_TTable to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast221, i8** %base.alloca222, i8** %bound.alloca223)
  %base.load224 = load i8** %base.alloca222
  %bound.load225 = load i8** %bound.alloca223
  %arrayidx124 = getelementptr inbounds %struct.TType* %86, i64 %idxprom123
  %Depth125 = getelementptr inbounds %struct.TType* %arrayidx124, i32 0, i32 0
  store i8 %conv122, i8* %Depth125, align 1
  %87 = load i32* %best.addr, align 4
  %conv126 = trunc i32 %87 to i16
  %88 = load i32* %ttindex, align 4
  %idxprom127 = zext i32 %88 to i64
  %89 = load %struct.TType** @AS_TTable, align 8
  %bitcast226 = bitcast %struct.TType** @AS_TTable to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast226, i8** %base.alloca227, i8** %bound.alloca228)
  %base.load229 = load i8** %base.alloca227
  %bound.load230 = load i8** %bound.alloca228
  %arrayidx128 = getelementptr inbounds %struct.TType* %89, i64 %idxprom127
  %Bestmove129 = getelementptr inbounds %struct.TType* %arrayidx128, i32 0, i32 4
  store i16 %conv126, i16* %Bestmove129, align 2
  %90 = load i32* %score.addr, align 4
  %91 = load i32* %ttindex, align 4
  %idxprom130 = zext i32 %91 to i64
  %92 = load %struct.TType** @AS_TTable, align 8
  %bitcast231 = bitcast %struct.TType** @AS_TTable to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast231, i8** %base.alloca232, i8** %bound.alloca233)
  %base.load234 = load i8** %base.alloca232
  %bound.load235 = load i8** %bound.alloca233
  %arrayidx131 = getelementptr inbounds %struct.TType* %92, i64 %idxprom130
  %Bound132 = getelementptr inbounds %struct.TType* %arrayidx131, i32 0, i32 7
  store i32 %90, i32* %Bound132, align 4
  %93 = load i32* @white_to_move, align 4
  %tobool133 = icmp ne i32 %93, 0
  %cond134 = select i1 %tobool133, i32 0, i32 1
  %conv135 = trunc i32 %cond134 to i8
  %94 = load i32* %ttindex, align 4
  %idxprom136 = zext i32 %94 to i64
  %95 = load %struct.TType** @AS_TTable, align 8
  %bitcast236 = bitcast %struct.TType** @AS_TTable to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast236, i8** %base.alloca237, i8** %bound.alloca238)
  %base.load239 = load i8** %base.alloca237
  %bound.load240 = load i8** %bound.alloca238
  %arrayidx137 = getelementptr inbounds %struct.TType* %95, i64 %idxprom136
  %OnMove138 = getelementptr inbounds %struct.TType* %arrayidx137, i32 0, i32 1
  store i8 %conv135, i8* %OnMove138, align 1
  %96 = load i32* %threat.addr, align 4
  %conv139 = trunc i32 %96 to i8
  %97 = load i32* %ttindex, align 4
  %idxprom140 = zext i32 %97 to i64
  %98 = load %struct.TType** @AS_TTable, align 8
  %bitcast241 = bitcast %struct.TType** @AS_TTable to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast241, i8** %base.alloca242, i8** %bound.alloca243)
  %base.load244 = load i8** %base.alloca242
  %bound.load245 = load i8** %bound.alloca243
  %arrayidx141 = getelementptr inbounds %struct.TType* %98, i64 %idxprom140
  %Threat142 = getelementptr inbounds %struct.TType* %arrayidx141, i32 0, i32 2
  store i8 %conv139, i8* %Threat142, align 1
  br label %if.end143

if.end143:                                        ; preds = %if.end115, %if.end56
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @LearnStoreTT(i32 %score, i32 %nhash, i32 %hhash, i32 %tomove, i32 %best, i32 %depth) #0 {
entry:
  %base.alloca86 = alloca i8*
  %bound.alloca87 = alloca i8*
  %base.alloca81 = alloca i8*
  %bound.alloca82 = alloca i8*
  %base.alloca76 = alloca i8*
  %bound.alloca77 = alloca i8*
  %base.alloca71 = alloca i8*
  %bound.alloca72 = alloca i8*
  %base.alloca66 = alloca i8*
  %bound.alloca67 = alloca i8*
  %base.alloca61 = alloca i8*
  %bound.alloca62 = alloca i8*
  %base.alloca56 = alloca i8*
  %bound.alloca57 = alloca i8*
  %base.alloca51 = alloca i8*
  %bound.alloca52 = alloca i8*
  %base.alloca = alloca i8*
  %bound.alloca = alloca i8*
  %score.addr = alloca i32, align 4
  %score.addr23 = bitcast i32* %score.addr to i32*
  %bitcast = bitcast i32* %score.addr to i8*
  %mtmp = getelementptr i32* %score.addr23, i32 1
  %bitcast24 = bitcast i32* %mtmp to i8*
  %nhash.addr = alloca i32, align 4
  %nhash.addr25 = bitcast i32* %nhash.addr to i32*
  %bitcast26 = bitcast i32* %nhash.addr to i8*
  %mtmp27 = getelementptr i32* %nhash.addr25, i32 1
  %bitcast28 = bitcast i32* %mtmp27 to i8*
  %hhash.addr = alloca i32, align 4
  %hhash.addr29 = bitcast i32* %hhash.addr to i32*
  %bitcast30 = bitcast i32* %hhash.addr to i8*
  %mtmp31 = getelementptr i32* %hhash.addr29, i32 1
  %bitcast32 = bitcast i32* %mtmp31 to i8*
  %tomove.addr = alloca i32, align 4
  %tomove.addr33 = bitcast i32* %tomove.addr to i32*
  %bitcast34 = bitcast i32* %tomove.addr to i8*
  %mtmp35 = getelementptr i32* %tomove.addr33, i32 1
  %bitcast36 = bitcast i32* %mtmp35 to i8*
  %best.addr = alloca i32, align 4
  %best.addr37 = bitcast i32* %best.addr to i32*
  %bitcast38 = bitcast i32* %best.addr to i8*
  %mtmp39 = getelementptr i32* %best.addr37, i32 1
  %bitcast40 = bitcast i32* %mtmp39 to i8*
  %depth.addr = alloca i32, align 4
  %depth.addr41 = bitcast i32* %depth.addr to i32*
  %bitcast42 = bitcast i32* %depth.addr to i8*
  %mtmp43 = getelementptr i32* %depth.addr41, i32 1
  %bitcast44 = bitcast i32* %mtmp43 to i8*
  %ttindex = alloca i32, align 4
  %ttindex45 = bitcast i32* %ttindex to i32*
  %bitcast46 = bitcast i32* %ttindex to i8*
  %mtmp47 = getelementptr i32* %ttindex45, i32 1
  %bitcast48 = bitcast i32* %mtmp47 to i8*
  store i32 %score, i32* %score.addr, align 4
  store i32 %nhash, i32* %nhash.addr, align 4
  store i32 %hhash, i32* %hhash.addr, align 4
  store i32 %tomove, i32* %tomove.addr, align 4
  store i32 %best, i32* %best.addr, align 4
  store i32 %depth, i32* %depth.addr, align 4
  %0 = load i32* %nhash.addr, align 4
  %1 = load i32* @TTSize, align 4
  %rem = urem i32 %0, %1
  store i32 %rem, i32* %ttindex, align 4
  %2 = load i32* %depth.addr, align 4
  %conv = trunc i32 %2 to i8
  %3 = load i32* %ttindex, align 4
  %idxprom = zext i32 %3 to i64
  %4 = load %struct.TType** @AS_TTable, align 8
  %bitcast49 = bitcast %struct.TType** @AS_TTable to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast49, i8** %base.alloca, i8** %bound.alloca)
  %base.load = load i8** %base.alloca
  %bound.load = load i8** %bound.alloca
  %arrayidx = getelementptr inbounds %struct.TType* %4, i64 %idxprom
  %Depth = getelementptr inbounds %struct.TType* %arrayidx, i32 0, i32 0
  store i8 %conv, i8* %Depth, align 1
  %5 = load i32* @Variant, align 4
  %cmp = icmp ne i32 %5, 3
  br i1 %cmp, label %land.lhs.true, label %if.else

land.lhs.true:                                    ; preds = %entry
  %6 = load i32* @Variant, align 4
  %cmp2 = icmp ne i32 %6, 4
  br i1 %cmp2, label %if.then, label %if.else

if.then:                                          ; preds = %land.lhs.true
  %7 = load i32* %ttindex, align 4
  %idxprom4 = zext i32 %7 to i64
  %8 = load %struct.TType** @AS_TTable, align 8
  %bitcast55 = bitcast %struct.TType** @AS_TTable to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast55, i8** %base.alloca56, i8** %bound.alloca57)
  %base.load58 = load i8** %base.alloca56
  %bound.load59 = load i8** %bound.alloca57
  %arrayidx5 = getelementptr inbounds %struct.TType* %8, i64 %idxprom4
  %Type = getelementptr inbounds %struct.TType* %arrayidx5, i32 0, i32 3
  store i8 3, i8* %Type, align 1
  br label %if.end

if.else:                                          ; preds = %land.lhs.true, %entry
  %9 = load i32* %ttindex, align 4
  %idxprom6 = zext i32 %9 to i64
  %10 = load %struct.TType** @AS_TTable, align 8
  %bitcast50 = bitcast %struct.TType** @AS_TTable to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast50, i8** %base.alloca51, i8** %bound.alloca52)
  %base.load53 = load i8** %base.alloca51
  %bound.load54 = load i8** %bound.alloca52
  %arrayidx7 = getelementptr inbounds %struct.TType* %10, i64 %idxprom6
  %Type8 = getelementptr inbounds %struct.TType* %arrayidx7, i32 0, i32 3
  store i8 1, i8* %Type8, align 1
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %11 = load i32* %nhash.addr, align 4
  %12 = load i32* %ttindex, align 4
  %idxprom9 = zext i32 %12 to i64
  %13 = load %struct.TType** @AS_TTable, align 8
  %bitcast60 = bitcast %struct.TType** @AS_TTable to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast60, i8** %base.alloca61, i8** %bound.alloca62)
  %base.load63 = load i8** %base.alloca61
  %bound.load64 = load i8** %bound.alloca62
  %arrayidx10 = getelementptr inbounds %struct.TType* %13, i64 %idxprom9
  %HashKey = getelementptr inbounds %struct.TType* %arrayidx10, i32 0, i32 5
  store i32 %11, i32* %HashKey, align 4
  %14 = load i32* %hhash.addr, align 4
  %15 = load i32* %ttindex, align 4
  %idxprom11 = zext i32 %15 to i64
  %16 = load %struct.TType** @AS_TTable, align 8
  %bitcast65 = bitcast %struct.TType** @AS_TTable to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast65, i8** %base.alloca66, i8** %bound.alloca67)
  %base.load68 = load i8** %base.alloca66
  %bound.load69 = load i8** %bound.alloca67
  %arrayidx12 = getelementptr inbounds %struct.TType* %16, i64 %idxprom11
  %Hold_hash = getelementptr inbounds %struct.TType* %arrayidx12, i32 0, i32 6
  store i32 %14, i32* %Hold_hash, align 4
  %17 = load i32* %best.addr, align 4
  %conv13 = trunc i32 %17 to i16
  %18 = load i32* %ttindex, align 4
  %idxprom14 = zext i32 %18 to i64
  %19 = load %struct.TType** @AS_TTable, align 8
  %bitcast70 = bitcast %struct.TType** @AS_TTable to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast70, i8** %base.alloca71, i8** %bound.alloca72)
  %base.load73 = load i8** %base.alloca71
  %bound.load74 = load i8** %bound.alloca72
  %arrayidx15 = getelementptr inbounds %struct.TType* %19, i64 %idxprom14
  %Bestmove = getelementptr inbounds %struct.TType* %arrayidx15, i32 0, i32 4
  store i16 %conv13, i16* %Bestmove, align 2
  %20 = load i32* %score.addr, align 4
  %21 = load i32* %ttindex, align 4
  %idxprom16 = zext i32 %21 to i64
  %22 = load %struct.TType** @AS_TTable, align 8
  %bitcast75 = bitcast %struct.TType** @AS_TTable to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast75, i8** %base.alloca76, i8** %bound.alloca77)
  %base.load78 = load i8** %base.alloca76
  %bound.load79 = load i8** %bound.alloca77
  %arrayidx17 = getelementptr inbounds %struct.TType* %22, i64 %idxprom16
  %Bound = getelementptr inbounds %struct.TType* %arrayidx17, i32 0, i32 7
  store i32 %20, i32* %Bound, align 4
  %23 = load i32* %tomove.addr, align 4
  %conv18 = trunc i32 %23 to i8
  %24 = load i32* %ttindex, align 4
  %idxprom19 = zext i32 %24 to i64
  %25 = load %struct.TType** @AS_TTable, align 8
  %bitcast80 = bitcast %struct.TType** @AS_TTable to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast80, i8** %base.alloca81, i8** %bound.alloca82)
  %base.load83 = load i8** %base.alloca81
  %bound.load84 = load i8** %bound.alloca82
  %arrayidx20 = getelementptr inbounds %struct.TType* %25, i64 %idxprom19
  %OnMove = getelementptr inbounds %struct.TType* %arrayidx20, i32 0, i32 1
  store i8 %conv18, i8* %OnMove, align 1
  %26 = load i32* %ttindex, align 4
  %idxprom21 = zext i32 %26 to i64
  %27 = load %struct.TType** @AS_TTable, align 8
  %bitcast85 = bitcast %struct.TType** @AS_TTable to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast85, i8** %base.alloca86, i8** %bound.alloca87)
  %base.load88 = load i8** %base.alloca86
  %bound.load89 = load i8** %bound.alloca87
  %arrayidx22 = getelementptr inbounds %struct.TType* %27, i64 %idxprom21
  %Threat = getelementptr inbounds %struct.TType* %arrayidx22, i32 0, i32 2
  store i8 0, i8* %Threat, align 1
  ret void
}

; Function Attrs: nounwind uwtable
define internal i32 @ProbeTT(i32* %score, i32 %beta, i32* %best, i32* %threat, i32* %donull, i32 %depth) #0 {
entry:
  %base.alloca440 = alloca i8*
  %bound.alloca441 = alloca i8*
  %base.alloca435 = alloca i8*
  %bound.alloca436 = alloca i8*
  %base.alloca430 = alloca i8*
  %bound.alloca431 = alloca i8*
  %base.alloca425 = alloca i8*
  %bound.alloca426 = alloca i8*
  %base.alloca420 = alloca i8*
  %bound.alloca421 = alloca i8*
  %base.alloca415 = alloca i8*
  %bound.alloca416 = alloca i8*
  %base.alloca410 = alloca i8*
  %bound.alloca411 = alloca i8*
  %base.alloca405 = alloca i8*
  %bound.alloca406 = alloca i8*
  %base.alloca400 = alloca i8*
  %bound.alloca401 = alloca i8*
  %base.alloca395 = alloca i8*
  %bound.alloca396 = alloca i8*
  %base.alloca390 = alloca i8*
  %bound.alloca391 = alloca i8*
  %base.alloca385 = alloca i8*
  %bound.alloca386 = alloca i8*
  %base.alloca380 = alloca i8*
  %bound.alloca381 = alloca i8*
  %base.alloca375 = alloca i8*
  %bound.alloca376 = alloca i8*
  %base.alloca370 = alloca i8*
  %bound.alloca371 = alloca i8*
  %base.alloca365 = alloca i8*
  %bound.alloca366 = alloca i8*
  %base.alloca360 = alloca i8*
  %bound.alloca361 = alloca i8*
  %base.alloca355 = alloca i8*
  %bound.alloca356 = alloca i8*
  %base.alloca350 = alloca i8*
  %bound.alloca351 = alloca i8*
  %base.alloca345 = alloca i8*
  %bound.alloca346 = alloca i8*
  %base.alloca340 = alloca i8*
  %bound.alloca341 = alloca i8*
  %base.alloca335 = alloca i8*
  %bound.alloca336 = alloca i8*
  %base.alloca330 = alloca i8*
  %bound.alloca331 = alloca i8*
  %base.alloca325 = alloca i8*
  %bound.alloca326 = alloca i8*
  %base.alloca320 = alloca i8*
  %bound.alloca321 = alloca i8*
  %base.alloca315 = alloca i8*
  %bound.alloca316 = alloca i8*
  %base.alloca310 = alloca i8*
  %bound.alloca311 = alloca i8*
  %base.alloca305 = alloca i8*
  %bound.alloca306 = alloca i8*
  %base.alloca300 = alloca i8*
  %bound.alloca301 = alloca i8*
  %base.alloca295 = alloca i8*
  %bound.alloca296 = alloca i8*
  %base.alloca290 = alloca i8*
  %bound.alloca291 = alloca i8*
  %base.alloca285 = alloca i8*
  %bound.alloca286 = alloca i8*
  %base.alloca280 = alloca i8*
  %bound.alloca281 = alloca i8*
  %base.alloca275 = alloca i8*
  %bound.alloca276 = alloca i8*
  %base.alloca270 = alloca i8*
  %bound.alloca271 = alloca i8*
  %base.alloca265 = alloca i8*
  %bound.alloca266 = alloca i8*
  %base.alloca260 = alloca i8*
  %bound.alloca261 = alloca i8*
  %base.alloca255 = alloca i8*
  %bound.alloca256 = alloca i8*
  %base.alloca250 = alloca i8*
  %bound.alloca251 = alloca i8*
  %base.alloca245 = alloca i8*
  %bound.alloca246 = alloca i8*
  %base.alloca240 = alloca i8*
  %bound.alloca241 = alloca i8*
  %base.alloca235 = alloca i8*
  %bound.alloca236 = alloca i8*
  %base.alloca230 = alloca i8*
  %bound.alloca231 = alloca i8*
  %base.alloca225 = alloca i8*
  %bound.alloca226 = alloca i8*
  %base.alloca220 = alloca i8*
  %bound.alloca221 = alloca i8*
  %base.alloca215 = alloca i8*
  %bound.alloca216 = alloca i8*
  %base.alloca210 = alloca i8*
  %bound.alloca211 = alloca i8*
  %base.alloca205 = alloca i8*
  %bound.alloca206 = alloca i8*
  %base.alloca = alloca i8*
  %bound.alloca = alloca i8*
  %0 = call i8* @__softboundcets_load_base_shadow_stack(i32 4)
  %1 = call i8* @__softboundcets_load_bound_shadow_stack(i32 4)
  %2 = call i8* @__softboundcets_load_base_shadow_stack(i32 3)
  %3 = call i8* @__softboundcets_load_bound_shadow_stack(i32 3)
  %4 = call i8* @__softboundcets_load_base_shadow_stack(i32 2)
  %5 = call i8* @__softboundcets_load_bound_shadow_stack(i32 2)
  %6 = call i8* @__softboundcets_load_base_shadow_stack(i32 1)
  %7 = call i8* @__softboundcets_load_bound_shadow_stack(i32 1)
  %retval = alloca i32, align 4
  %retval173 = bitcast i32* %retval to i32*
  %bitcast = bitcast i32* %retval to i8*
  %mtmp = getelementptr i32* %retval173, i32 1
  %bitcast174 = bitcast i32* %mtmp to i8*
  %score.addr = alloca i32*, align 8
  %score.addr175 = bitcast i32** %score.addr to i32**
  %bitcast176 = bitcast i32** %score.addr to i8*
  %mtmp177 = getelementptr i32** %score.addr175, i32 1
  %bitcast178 = bitcast i32** %mtmp177 to i8*
  %beta.addr = alloca i32, align 4
  %beta.addr179 = bitcast i32* %beta.addr to i32*
  %bitcast180 = bitcast i32* %beta.addr to i8*
  %mtmp181 = getelementptr i32* %beta.addr179, i32 1
  %bitcast182 = bitcast i32* %mtmp181 to i8*
  %best.addr = alloca i32*, align 8
  %best.addr183 = bitcast i32** %best.addr to i32**
  %bitcast184 = bitcast i32** %best.addr to i8*
  %mtmp185 = getelementptr i32** %best.addr183, i32 1
  %bitcast186 = bitcast i32** %mtmp185 to i8*
  %threat.addr = alloca i32*, align 8
  %threat.addr187 = bitcast i32** %threat.addr to i32**
  %bitcast188 = bitcast i32** %threat.addr to i8*
  %mtmp189 = getelementptr i32** %threat.addr187, i32 1
  %bitcast190 = bitcast i32** %mtmp189 to i8*
  %donull.addr = alloca i32*, align 8
  %donull.addr191 = bitcast i32** %donull.addr to i32**
  %bitcast192 = bitcast i32** %donull.addr to i8*
  %mtmp193 = getelementptr i32** %donull.addr191, i32 1
  %bitcast194 = bitcast i32** %mtmp193 to i8*
  %depth.addr = alloca i32, align 4
  %depth.addr195 = bitcast i32* %depth.addr to i32*
  %bitcast196 = bitcast i32* %depth.addr to i8*
  %mtmp197 = getelementptr i32* %depth.addr195, i32 1
  %bitcast198 = bitcast i32* %mtmp197 to i8*
  %ttindex = alloca i32, align 4
  %ttindex199 = bitcast i32* %ttindex to i32*
  %bitcast200 = bitcast i32* %ttindex to i8*
  %mtmp201 = getelementptr i32* %ttindex199, i32 1
  %bitcast202 = bitcast i32* %mtmp201 to i8*
  store i32* %score, i32** %score.addr, align 8
  %bitcast444 = bitcast i32** %score.addr to i8*
  call void @__softboundcets_metadata_store(i8* %bitcast444, i8* %6, i8* %7)
  store i32 %beta, i32* %beta.addr, align 4
  store i32* %best, i32** %best.addr, align 8
  %bitcast445 = bitcast i32** %best.addr to i8*
  call void @__softboundcets_metadata_store(i8* %bitcast445, i8* %4, i8* %5)
  store i32* %threat, i32** %threat.addr, align 8
  %bitcast446 = bitcast i32** %threat.addr to i8*
  call void @__softboundcets_metadata_store(i8* %bitcast446, i8* %2, i8* %3)
  store i32* %donull, i32** %donull.addr, align 8
  %bitcast447 = bitcast i32** %donull.addr to i8*
  call void @__softboundcets_metadata_store(i8* %bitcast447, i8* %0, i8* %1)
  store i32 %depth, i32* %depth.addr, align 4
  %8 = load i32** %donull.addr, align 8
  %bitcast203 = bitcast i32** %donull.addr to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast203, i8** %base.alloca, i8** %bound.alloca)
  %base.load = load i8** %base.alloca
  %bound.load = load i8** %bound.alloca
  store i32 1, i32* %8, align 4
  %9 = load i32* @TTProbes, align 4
  %inc = add i32 %9, 1
  store i32 %inc, i32* @TTProbes, align 4
  %10 = load i32* @hash, align 4
  %11 = load i32* @TTSize, align 4
  %rem = urem i32 %10, %11
  store i32 %rem, i32* %ttindex, align 4
  %12 = load i32* %ttindex, align 4
  %idxprom = zext i32 %12 to i64
  %13 = load %struct.TType** @DP_TTable, align 8
  %bitcast204 = bitcast %struct.TType** @DP_TTable to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast204, i8** %base.alloca205, i8** %bound.alloca206)
  %base.load207 = load i8** %base.alloca205
  %bound.load208 = load i8** %bound.alloca206
  %arrayidx = getelementptr inbounds %struct.TType* %13, i64 %idxprom
  %HashKey = getelementptr inbounds %struct.TType* %arrayidx, i32 0, i32 5
  %14 = load i32* %HashKey, align 4
  %15 = load i32* @hash, align 4
  %cmp = icmp eq i32 %14, %15
  br i1 %cmp, label %land.lhs.true, label %if.else75

land.lhs.true:                                    ; preds = %entry
  %16 = load i32* %ttindex, align 4
  %idxprom1 = zext i32 %16 to i64
  %17 = load %struct.TType** @DP_TTable, align 8
  %bitcast209 = bitcast %struct.TType** @DP_TTable to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast209, i8** %base.alloca210, i8** %bound.alloca211)
  %base.load212 = load i8** %base.alloca210
  %bound.load213 = load i8** %bound.alloca211
  %arrayidx2 = getelementptr inbounds %struct.TType* %17, i64 %idxprom1
  %Hold_hash = getelementptr inbounds %struct.TType* %arrayidx2, i32 0, i32 6
  %18 = load i32* %Hold_hash, align 4
  %19 = load i32* @hold_hash, align 4
  %cmp3 = icmp eq i32 %18, %19
  br i1 %cmp3, label %land.lhs.true4, label %if.else75

land.lhs.true4:                                   ; preds = %land.lhs.true
  %20 = load i32* %ttindex, align 4
  %idxprom5 = zext i32 %20 to i64
  %21 = load %struct.TType** @DP_TTable, align 8
  %bitcast219 = bitcast %struct.TType** @DP_TTable to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast219, i8** %base.alloca220, i8** %bound.alloca221)
  %base.load222 = load i8** %base.alloca220
  %bound.load223 = load i8** %bound.alloca221
  %arrayidx6 = getelementptr inbounds %struct.TType* %21, i64 %idxprom5
  %OnMove = getelementptr inbounds %struct.TType* %arrayidx6, i32 0, i32 1
  %22 = load i8* %OnMove, align 1
  %conv = sext i8 %22 to i32
  %23 = load i32* @white_to_move, align 4
  %tobool = icmp ne i32 %23, 0
  %cond = select i1 %tobool, i32 0, i32 1
  %conv7 = trunc i32 %cond to i8
  %conv8 = sext i8 %conv7 to i32
  %cmp9 = icmp eq i32 %conv, %conv8
  br i1 %cmp9, label %if.then, label %if.else75

if.then:                                          ; preds = %land.lhs.true4
  %24 = load i32* @TTHits, align 4
  %inc11 = add i32 %24, 1
  store i32 %inc11, i32* @TTHits, align 4
  %25 = load i32* %ttindex, align 4
  %idxprom12 = zext i32 %25 to i64
  %26 = load %struct.TType** @DP_TTable, align 8
  %bitcast229 = bitcast %struct.TType** @DP_TTable to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast229, i8** %base.alloca230, i8** %bound.alloca231)
  %base.load232 = load i8** %base.alloca230
  %bound.load233 = load i8** %bound.alloca231
  %arrayidx13 = getelementptr inbounds %struct.TType* %26, i64 %idxprom12
  %Type = getelementptr inbounds %struct.TType* %arrayidx13, i32 0, i32 3
  %27 = load i8* %Type, align 1
  %conv14 = sext i8 %27 to i32
  %cmp15 = icmp eq i32 %conv14, 1
  br i1 %cmp15, label %land.lhs.true17, label %if.end

land.lhs.true17:                                  ; preds = %if.then
  %28 = load i32* %depth.addr, align 4
  %sub = sub nsw i32 %28, 2
  %sub18 = sub nsw i32 %sub, 1
  %29 = load i32* %ttindex, align 4
  %idxprom19 = zext i32 %29 to i64
  %30 = load %struct.TType** @DP_TTable, align 8
  %bitcast239 = bitcast %struct.TType** @DP_TTable to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast239, i8** %base.alloca240, i8** %bound.alloca241)
  %base.load242 = load i8** %base.alloca240
  %bound.load243 = load i8** %bound.alloca241
  %arrayidx20 = getelementptr inbounds %struct.TType* %30, i64 %idxprom19
  %Depth = getelementptr inbounds %struct.TType* %arrayidx20, i32 0, i32 0
  %31 = load i8* %Depth, align 1
  %conv21 = sext i8 %31 to i32
  %cmp22 = icmp sle i32 %sub18, %conv21
  br i1 %cmp22, label %land.lhs.true24, label %if.end

land.lhs.true24:                                  ; preds = %land.lhs.true17
  %32 = load i32* %ttindex, align 4
  %idxprom25 = zext i32 %32 to i64
  %33 = load %struct.TType** @DP_TTable, align 8
  %bitcast254 = bitcast %struct.TType** @DP_TTable to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast254, i8** %base.alloca255, i8** %bound.alloca256)
  %base.load257 = load i8** %base.alloca255
  %bound.load258 = load i8** %bound.alloca256
  %arrayidx26 = getelementptr inbounds %struct.TType* %33, i64 %idxprom25
  %Bound = getelementptr inbounds %struct.TType* %arrayidx26, i32 0, i32 7
  %34 = load i32* %Bound, align 4
  %35 = load i32* %beta.addr, align 4
  %cmp27 = icmp slt i32 %34, %35
  br i1 %cmp27, label %if.then29, label %if.end

if.then29:                                        ; preds = %land.lhs.true24
  %36 = load i32** %donull.addr, align 8
  %bitcast274 = bitcast i32** %donull.addr to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast274, i8** %base.alloca275, i8** %bound.alloca276)
  %base.load277 = load i8** %base.alloca275
  %bound.load278 = load i8** %bound.alloca276
  store i32 0, i32* %36, align 4
  br label %if.end

if.end:                                           ; preds = %if.then29, %land.lhs.true24, %land.lhs.true17, %if.then
  %37 = load i32* %ttindex, align 4
  %idxprom30 = zext i32 %37 to i64
  %38 = load %struct.TType** @DP_TTable, align 8
  %bitcast244 = bitcast %struct.TType** @DP_TTable to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast244, i8** %base.alloca245, i8** %bound.alloca246)
  %base.load247 = load i8** %base.alloca245
  %bound.load248 = load i8** %bound.alloca246
  %arrayidx31 = getelementptr inbounds %struct.TType* %38, i64 %idxprom30
  %Threat = getelementptr inbounds %struct.TType* %arrayidx31, i32 0, i32 2
  %39 = load i8* %Threat, align 1
  %tobool32 = icmp ne i8 %39, 0
  br i1 %tobool32, label %if.then33, label %if.end35

if.then33:                                        ; preds = %if.end
  %40 = load i32* %depth.addr, align 4
  %inc34 = add nsw i32 %40, 1
  store i32 %inc34, i32* %depth.addr, align 4
  br label %if.end35

if.end35:                                         ; preds = %if.then33, %if.end
  %41 = load i32* %ttindex, align 4
  %idxprom36 = zext i32 %41 to i64
  %42 = load %struct.TType** @DP_TTable, align 8
  %bitcast259 = bitcast %struct.TType** @DP_TTable to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast259, i8** %base.alloca260, i8** %bound.alloca261)
  %base.load262 = load i8** %base.alloca260
  %bound.load263 = load i8** %bound.alloca261
  %arrayidx37 = getelementptr inbounds %struct.TType* %42, i64 %idxprom36
  %Depth38 = getelementptr inbounds %struct.TType* %arrayidx37, i32 0, i32 0
  %43 = load i8* %Depth38, align 1
  %conv39 = sext i8 %43 to i32
  %44 = load i32* %depth.addr, align 4
  %cmp40 = icmp sge i32 %conv39, %44
  br i1 %cmp40, label %if.then42, label %if.else66

if.then42:                                        ; preds = %if.end35
  %45 = load i32* %ttindex, align 4
  %idxprom43 = zext i32 %45 to i64
  %46 = load %struct.TType** @DP_TTable, align 8
  %bitcast279 = bitcast %struct.TType** @DP_TTable to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast279, i8** %base.alloca280, i8** %bound.alloca281)
  %base.load282 = load i8** %base.alloca280
  %bound.load283 = load i8** %bound.alloca281
  %arrayidx44 = getelementptr inbounds %struct.TType* %46, i64 %idxprom43
  %Bound45 = getelementptr inbounds %struct.TType* %arrayidx44, i32 0, i32 7
  %47 = load i32* %Bound45, align 4
  %48 = load i32** %score.addr, align 8
  %bitcast284 = bitcast i32** %score.addr to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast284, i8** %base.alloca285, i8** %bound.alloca286)
  %base.load287 = load i8** %base.alloca285
  %bound.load288 = load i8** %bound.alloca286
  store i32 %47, i32* %48, align 4
  %49 = load i32** %score.addr, align 8
  %bitcast289 = bitcast i32** %score.addr to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast289, i8** %base.alloca290, i8** %bound.alloca291)
  %base.load292 = load i8** %base.alloca290
  %bound.load293 = load i8** %bound.alloca291
  %50 = load i32* %49, align 4
  %cmp46 = icmp sgt i32 %50, 999500
  br i1 %cmp46, label %if.then48, label %if.else

if.then48:                                        ; preds = %if.then42
  %51 = load i32* @ply, align 4
  %52 = load i32** %score.addr, align 8
  %bitcast324 = bitcast i32** %score.addr to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast324, i8** %base.alloca325, i8** %bound.alloca326)
  %base.load327 = load i8** %base.alloca325
  %bound.load328 = load i8** %bound.alloca326
  %53 = load i32* %52, align 4
  %sub49 = sub nsw i32 %53, %51
  store i32 %sub49, i32* %52, align 4
  br label %if.end54

if.else:                                          ; preds = %if.then42
  %54 = load i32** %score.addr, align 8
  %bitcast329 = bitcast i32** %score.addr to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast329, i8** %base.alloca330, i8** %bound.alloca331)
  %base.load332 = load i8** %base.alloca330
  %bound.load333 = load i8** %bound.alloca331
  %55 = load i32* %54, align 4
  %cmp50 = icmp slt i32 %55, -999500
  br i1 %cmp50, label %if.then52, label %if.end53

if.then52:                                        ; preds = %if.else
  %56 = load i32* @ply, align 4
  %57 = load i32** %score.addr, align 8
  %bitcast399 = bitcast i32** %score.addr to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast399, i8** %base.alloca400, i8** %bound.alloca401)
  %base.load402 = load i8** %base.alloca400
  %bound.load403 = load i8** %bound.alloca401
  %58 = load i32* %57, align 4
  %add = add nsw i32 %58, %56
  store i32 %add, i32* %57, align 4
  br label %if.end53

if.end53:                                         ; preds = %if.then52, %if.else
  br label %if.end54

if.end54:                                         ; preds = %if.end53, %if.then48
  %59 = load i32* %ttindex, align 4
  %idxprom55 = zext i32 %59 to i64
  %60 = load %struct.TType** @DP_TTable, align 8
  %bitcast374 = bitcast %struct.TType** @DP_TTable to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast374, i8** %base.alloca375, i8** %bound.alloca376)
  %base.load377 = load i8** %base.alloca375
  %bound.load378 = load i8** %bound.alloca376
  %arrayidx56 = getelementptr inbounds %struct.TType* %60, i64 %idxprom55
  %Bestmove = getelementptr inbounds %struct.TType* %arrayidx56, i32 0, i32 4
  %61 = load i16* %Bestmove, align 2
  %conv57 = zext i16 %61 to i32
  %62 = load i32** %best.addr, align 8
  %bitcast379 = bitcast i32** %best.addr to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast379, i8** %base.alloca380, i8** %bound.alloca381)
  %base.load382 = load i8** %base.alloca380
  %bound.load383 = load i8** %bound.alloca381
  store i32 %conv57, i32* %62, align 4
  %63 = load i32* %ttindex, align 4
  %idxprom58 = zext i32 %63 to i64
  %64 = load %struct.TType** @DP_TTable, align 8
  %bitcast384 = bitcast %struct.TType** @DP_TTable to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast384, i8** %base.alloca385, i8** %bound.alloca386)
  %base.load387 = load i8** %base.alloca385
  %bound.load388 = load i8** %bound.alloca386
  %arrayidx59 = getelementptr inbounds %struct.TType* %64, i64 %idxprom58
  %Threat60 = getelementptr inbounds %struct.TType* %arrayidx59, i32 0, i32 2
  %65 = load i8* %Threat60, align 1
  %conv61 = sext i8 %65 to i32
  %66 = load i32** %threat.addr, align 8
  %bitcast389 = bitcast i32** %threat.addr to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast389, i8** %base.alloca390, i8** %bound.alloca391)
  %base.load392 = load i8** %base.alloca390
  %bound.load393 = load i8** %bound.alloca391
  store i32 %conv61, i32* %66, align 4
  %67 = load i32* %ttindex, align 4
  %idxprom62 = zext i32 %67 to i64
  %68 = load %struct.TType** @DP_TTable, align 8
  %bitcast394 = bitcast %struct.TType** @DP_TTable to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast394, i8** %base.alloca395, i8** %bound.alloca396)
  %base.load397 = load i8** %base.alloca395
  %bound.load398 = load i8** %bound.alloca396
  %arrayidx63 = getelementptr inbounds %struct.TType* %68, i64 %idxprom62
  %Type64 = getelementptr inbounds %struct.TType* %arrayidx63, i32 0, i32 3
  %69 = load i8* %Type64, align 1
  %conv65 = sext i8 %69 to i32
  store i32 %conv65, i32* %retval
  br label %return

if.else66:                                        ; preds = %if.end35
  %70 = load i32* %ttindex, align 4
  %idxprom67 = zext i32 %70 to i64
  %71 = load %struct.TType** @DP_TTable, align 8
  %bitcast294 = bitcast %struct.TType** @DP_TTable to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast294, i8** %base.alloca295, i8** %bound.alloca296)
  %base.load297 = load i8** %base.alloca295
  %bound.load298 = load i8** %bound.alloca296
  %arrayidx68 = getelementptr inbounds %struct.TType* %71, i64 %idxprom67
  %Bestmove69 = getelementptr inbounds %struct.TType* %arrayidx68, i32 0, i32 4
  %72 = load i16* %Bestmove69, align 2
  %conv70 = zext i16 %72 to i32
  %73 = load i32** %best.addr, align 8
  %bitcast299 = bitcast i32** %best.addr to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast299, i8** %base.alloca300, i8** %bound.alloca301)
  %base.load302 = load i8** %base.alloca300
  %bound.load303 = load i8** %bound.alloca301
  store i32 %conv70, i32* %73, align 4
  %74 = load i32* %ttindex, align 4
  %idxprom71 = zext i32 %74 to i64
  %75 = load %struct.TType** @DP_TTable, align 8
  %bitcast304 = bitcast %struct.TType** @DP_TTable to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast304, i8** %base.alloca305, i8** %bound.alloca306)
  %base.load307 = load i8** %base.alloca305
  %bound.load308 = load i8** %bound.alloca306
  %arrayidx72 = getelementptr inbounds %struct.TType* %75, i64 %idxprom71
  %Threat73 = getelementptr inbounds %struct.TType* %arrayidx72, i32 0, i32 2
  %76 = load i8* %Threat73, align 1
  %conv74 = sext i8 %76 to i32
  %77 = load i32** %threat.addr, align 8
  %bitcast309 = bitcast i32** %threat.addr to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast309, i8** %base.alloca310, i8** %bound.alloca311)
  %base.load312 = load i8** %base.alloca310
  %bound.load313 = load i8** %bound.alloca311
  store i32 %conv74, i32* %77, align 4
  store i32 0, i32* %retval
  br label %return

if.else75:                                        ; preds = %land.lhs.true4, %land.lhs.true, %entry
  %78 = load i32* %ttindex, align 4
  %idxprom76 = zext i32 %78 to i64
  %79 = load %struct.TType** @AS_TTable, align 8
  %bitcast214 = bitcast %struct.TType** @AS_TTable to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast214, i8** %base.alloca215, i8** %bound.alloca216)
  %base.load217 = load i8** %base.alloca215
  %bound.load218 = load i8** %bound.alloca216
  %arrayidx77 = getelementptr inbounds %struct.TType* %79, i64 %idxprom76
  %HashKey78 = getelementptr inbounds %struct.TType* %arrayidx77, i32 0, i32 5
  %80 = load i32* %HashKey78, align 4
  %81 = load i32* @hash, align 4
  %cmp79 = icmp eq i32 %80, %81
  br i1 %cmp79, label %land.lhs.true81, label %if.else172

land.lhs.true81:                                  ; preds = %if.else75
  %82 = load i32* %ttindex, align 4
  %idxprom82 = zext i32 %82 to i64
  %83 = load %struct.TType** @AS_TTable, align 8
  %bitcast224 = bitcast %struct.TType** @AS_TTable to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast224, i8** %base.alloca225, i8** %bound.alloca226)
  %base.load227 = load i8** %base.alloca225
  %bound.load228 = load i8** %bound.alloca226
  %arrayidx83 = getelementptr inbounds %struct.TType* %83, i64 %idxprom82
  %Hold_hash84 = getelementptr inbounds %struct.TType* %arrayidx83, i32 0, i32 6
  %84 = load i32* %Hold_hash84, align 4
  %85 = load i32* @hold_hash, align 4
  %cmp85 = icmp eq i32 %84, %85
  br i1 %cmp85, label %land.lhs.true87, label %if.else172

land.lhs.true87:                                  ; preds = %land.lhs.true81
  %86 = load i32* %ttindex, align 4
  %idxprom88 = zext i32 %86 to i64
  %87 = load %struct.TType** @AS_TTable, align 8
  %bitcast234 = bitcast %struct.TType** @AS_TTable to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast234, i8** %base.alloca235, i8** %bound.alloca236)
  %base.load237 = load i8** %base.alloca235
  %bound.load238 = load i8** %bound.alloca236
  %arrayidx89 = getelementptr inbounds %struct.TType* %87, i64 %idxprom88
  %OnMove90 = getelementptr inbounds %struct.TType* %arrayidx89, i32 0, i32 1
  %88 = load i8* %OnMove90, align 1
  %conv91 = sext i8 %88 to i32
  %89 = load i32* @white_to_move, align 4
  %tobool92 = icmp ne i32 %89, 0
  %cond93 = select i1 %tobool92, i32 0, i32 1
  %conv94 = trunc i32 %cond93 to i8
  %conv95 = sext i8 %conv94 to i32
  %cmp96 = icmp eq i32 %conv91, %conv95
  br i1 %cmp96, label %if.then98, label %if.else172

if.then98:                                        ; preds = %land.lhs.true87
  %90 = load i32* @TTHits, align 4
  %inc99 = add i32 %90, 1
  store i32 %inc99, i32* @TTHits, align 4
  %91 = load i32* %ttindex, align 4
  %idxprom100 = zext i32 %91 to i64
  %92 = load %struct.TType** @AS_TTable, align 8
  %bitcast249 = bitcast %struct.TType** @AS_TTable to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast249, i8** %base.alloca250, i8** %bound.alloca251)
  %base.load252 = load i8** %base.alloca250
  %bound.load253 = load i8** %bound.alloca251
  %arrayidx101 = getelementptr inbounds %struct.TType* %92, i64 %idxprom100
  %Type102 = getelementptr inbounds %struct.TType* %arrayidx101, i32 0, i32 3
  %93 = load i8* %Type102, align 1
  %conv103 = sext i8 %93 to i32
  %cmp104 = icmp eq i32 %conv103, 1
  br i1 %cmp104, label %land.lhs.true106, label %if.end122

land.lhs.true106:                                 ; preds = %if.then98
  %94 = load i32* %depth.addr, align 4
  %sub107 = sub nsw i32 %94, 2
  %sub108 = sub nsw i32 %sub107, 1
  %95 = load i32* %ttindex, align 4
  %idxprom109 = zext i32 %95 to i64
  %96 = load %struct.TType** @AS_TTable, align 8
  %bitcast264 = bitcast %struct.TType** @AS_TTable to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast264, i8** %base.alloca265, i8** %bound.alloca266)
  %base.load267 = load i8** %base.alloca265
  %bound.load268 = load i8** %bound.alloca266
  %arrayidx110 = getelementptr inbounds %struct.TType* %96, i64 %idxprom109
  %Depth111 = getelementptr inbounds %struct.TType* %arrayidx110, i32 0, i32 0
  %97 = load i8* %Depth111, align 1
  %conv112 = sext i8 %97 to i32
  %cmp113 = icmp sle i32 %sub108, %conv112
  br i1 %cmp113, label %land.lhs.true115, label %if.end122

land.lhs.true115:                                 ; preds = %land.lhs.true106
  %98 = load i32* %ttindex, align 4
  %idxprom116 = zext i32 %98 to i64
  %99 = load %struct.TType** @AS_TTable, align 8
  %bitcast314 = bitcast %struct.TType** @AS_TTable to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast314, i8** %base.alloca315, i8** %bound.alloca316)
  %base.load317 = load i8** %base.alloca315
  %bound.load318 = load i8** %bound.alloca316
  %arrayidx117 = getelementptr inbounds %struct.TType* %99, i64 %idxprom116
  %Bound118 = getelementptr inbounds %struct.TType* %arrayidx117, i32 0, i32 7
  %100 = load i32* %Bound118, align 4
  %101 = load i32* %beta.addr, align 4
  %cmp119 = icmp slt i32 %100, %101
  br i1 %cmp119, label %if.then121, label %if.end122

if.then121:                                       ; preds = %land.lhs.true115
  %102 = load i32** %donull.addr, align 8
  %bitcast334 = bitcast i32** %donull.addr to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast334, i8** %base.alloca335, i8** %bound.alloca336)
  %base.load337 = load i8** %base.alloca335
  %bound.load338 = load i8** %bound.alloca336
  store i32 0, i32* %102, align 4
  br label %if.end122

if.end122:                                        ; preds = %if.then121, %land.lhs.true115, %land.lhs.true106, %if.then98
  %103 = load i32* %ttindex, align 4
  %idxprom123 = zext i32 %103 to i64
  %104 = load %struct.TType** @AS_TTable, align 8
  %bitcast269 = bitcast %struct.TType** @AS_TTable to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast269, i8** %base.alloca270, i8** %bound.alloca271)
  %base.load272 = load i8** %base.alloca270
  %bound.load273 = load i8** %bound.alloca271
  %arrayidx124 = getelementptr inbounds %struct.TType* %104, i64 %idxprom123
  %Threat125 = getelementptr inbounds %struct.TType* %arrayidx124, i32 0, i32 2
  %105 = load i8* %Threat125, align 1
  %tobool126 = icmp ne i8 %105, 0
  br i1 %tobool126, label %if.then127, label %if.end129

if.then127:                                       ; preds = %if.end122
  %106 = load i32* %depth.addr, align 4
  %inc128 = add nsw i32 %106, 1
  store i32 %inc128, i32* %depth.addr, align 4
  br label %if.end129

if.end129:                                        ; preds = %if.then127, %if.end122
  %107 = load i32* %ttindex, align 4
  %idxprom130 = zext i32 %107 to i64
  %108 = load %struct.TType** @AS_TTable, align 8
  %bitcast319 = bitcast %struct.TType** @AS_TTable to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast319, i8** %base.alloca320, i8** %bound.alloca321)
  %base.load322 = load i8** %base.alloca320
  %bound.load323 = load i8** %bound.alloca321
  %arrayidx131 = getelementptr inbounds %struct.TType* %108, i64 %idxprom130
  %Depth132 = getelementptr inbounds %struct.TType* %arrayidx131, i32 0, i32 0
  %109 = load i8* %Depth132, align 1
  %conv133 = sext i8 %109 to i32
  %110 = load i32* %depth.addr, align 4
  %cmp134 = icmp sge i32 %conv133, %110
  br i1 %cmp134, label %if.then136, label %if.else163

if.then136:                                       ; preds = %if.end129
  %111 = load i32* %ttindex, align 4
  %idxprom137 = zext i32 %111 to i64
  %112 = load %struct.TType** @AS_TTable, align 8
  %bitcast339 = bitcast %struct.TType** @AS_TTable to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast339, i8** %base.alloca340, i8** %bound.alloca341)
  %base.load342 = load i8** %base.alloca340
  %bound.load343 = load i8** %bound.alloca341
  %arrayidx138 = getelementptr inbounds %struct.TType* %112, i64 %idxprom137
  %Bound139 = getelementptr inbounds %struct.TType* %arrayidx138, i32 0, i32 7
  %113 = load i32* %Bound139, align 4
  %114 = load i32** %score.addr, align 8
  %bitcast344 = bitcast i32** %score.addr to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast344, i8** %base.alloca345, i8** %bound.alloca346)
  %base.load347 = load i8** %base.alloca345
  %bound.load348 = load i8** %bound.alloca346
  store i32 %113, i32* %114, align 4
  %115 = load i32** %score.addr, align 8
  %bitcast349 = bitcast i32** %score.addr to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast349, i8** %base.alloca350, i8** %bound.alloca351)
  %base.load352 = load i8** %base.alloca350
  %bound.load353 = load i8** %bound.alloca351
  %116 = load i32* %115, align 4
  %cmp140 = icmp sgt i32 %116, 999500
  br i1 %cmp140, label %if.then142, label %if.else144

if.then142:                                       ; preds = %if.then136
  %117 = load i32* @ply, align 4
  %118 = load i32** %score.addr, align 8
  %bitcast404 = bitcast i32** %score.addr to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast404, i8** %base.alloca405, i8** %bound.alloca406)
  %base.load407 = load i8** %base.alloca405
  %bound.load408 = load i8** %bound.alloca406
  %119 = load i32* %118, align 4
  %sub143 = sub nsw i32 %119, %117
  store i32 %sub143, i32* %118, align 4
  br label %if.end150

if.else144:                                       ; preds = %if.then136
  %120 = load i32** %score.addr, align 8
  %bitcast409 = bitcast i32** %score.addr to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast409, i8** %base.alloca410, i8** %bound.alloca411)
  %base.load412 = load i8** %base.alloca410
  %bound.load413 = load i8** %bound.alloca411
  %121 = load i32* %120, align 4
  %cmp145 = icmp slt i32 %121, -999500
  br i1 %cmp145, label %if.then147, label %if.end149

if.then147:                                       ; preds = %if.else144
  %122 = load i32* @ply, align 4
  %123 = load i32** %score.addr, align 8
  %bitcast439 = bitcast i32** %score.addr to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast439, i8** %base.alloca440, i8** %bound.alloca441)
  %base.load442 = load i8** %base.alloca440
  %bound.load443 = load i8** %bound.alloca441
  %124 = load i32* %123, align 4
  %add148 = add nsw i32 %124, %122
  store i32 %add148, i32* %123, align 4
  br label %if.end149

if.end149:                                        ; preds = %if.then147, %if.else144
  br label %if.end150

if.end150:                                        ; preds = %if.end149, %if.then142
  %125 = load i32* %ttindex, align 4
  %idxprom151 = zext i32 %125 to i64
  %126 = load %struct.TType** @AS_TTable, align 8
  %bitcast414 = bitcast %struct.TType** @AS_TTable to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast414, i8** %base.alloca415, i8** %bound.alloca416)
  %base.load417 = load i8** %base.alloca415
  %bound.load418 = load i8** %bound.alloca416
  %arrayidx152 = getelementptr inbounds %struct.TType* %126, i64 %idxprom151
  %Bestmove153 = getelementptr inbounds %struct.TType* %arrayidx152, i32 0, i32 4
  %127 = load i16* %Bestmove153, align 2
  %conv154 = zext i16 %127 to i32
  %128 = load i32** %best.addr, align 8
  %bitcast419 = bitcast i32** %best.addr to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast419, i8** %base.alloca420, i8** %bound.alloca421)
  %base.load422 = load i8** %base.alloca420
  %bound.load423 = load i8** %bound.alloca421
  store i32 %conv154, i32* %128, align 4
  %129 = load i32* %ttindex, align 4
  %idxprom155 = zext i32 %129 to i64
  %130 = load %struct.TType** @AS_TTable, align 8
  %bitcast424 = bitcast %struct.TType** @AS_TTable to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast424, i8** %base.alloca425, i8** %bound.alloca426)
  %base.load427 = load i8** %base.alloca425
  %bound.load428 = load i8** %bound.alloca426
  %arrayidx156 = getelementptr inbounds %struct.TType* %130, i64 %idxprom155
  %Threat157 = getelementptr inbounds %struct.TType* %arrayidx156, i32 0, i32 2
  %131 = load i8* %Threat157, align 1
  %conv158 = sext i8 %131 to i32
  %132 = load i32** %threat.addr, align 8
  %bitcast429 = bitcast i32** %threat.addr to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast429, i8** %base.alloca430, i8** %bound.alloca431)
  %base.load432 = load i8** %base.alloca430
  %bound.load433 = load i8** %bound.alloca431
  store i32 %conv158, i32* %132, align 4
  %133 = load i32* %ttindex, align 4
  %idxprom159 = zext i32 %133 to i64
  %134 = load %struct.TType** @AS_TTable, align 8
  %bitcast434 = bitcast %struct.TType** @AS_TTable to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast434, i8** %base.alloca435, i8** %bound.alloca436)
  %base.load437 = load i8** %base.alloca435
  %bound.load438 = load i8** %bound.alloca436
  %arrayidx160 = getelementptr inbounds %struct.TType* %134, i64 %idxprom159
  %Type161 = getelementptr inbounds %struct.TType* %arrayidx160, i32 0, i32 3
  %135 = load i8* %Type161, align 1
  %conv162 = sext i8 %135 to i32
  store i32 %conv162, i32* %retval
  br label %return

if.else163:                                       ; preds = %if.end129
  %136 = load i32* %ttindex, align 4
  %idxprom164 = zext i32 %136 to i64
  %137 = load %struct.TType** @AS_TTable, align 8
  %bitcast354 = bitcast %struct.TType** @AS_TTable to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast354, i8** %base.alloca355, i8** %bound.alloca356)
  %base.load357 = load i8** %base.alloca355
  %bound.load358 = load i8** %bound.alloca356
  %arrayidx165 = getelementptr inbounds %struct.TType* %137, i64 %idxprom164
  %Bestmove166 = getelementptr inbounds %struct.TType* %arrayidx165, i32 0, i32 4
  %138 = load i16* %Bestmove166, align 2
  %conv167 = zext i16 %138 to i32
  %139 = load i32** %best.addr, align 8
  %bitcast359 = bitcast i32** %best.addr to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast359, i8** %base.alloca360, i8** %bound.alloca361)
  %base.load362 = load i8** %base.alloca360
  %bound.load363 = load i8** %bound.alloca361
  store i32 %conv167, i32* %139, align 4
  %140 = load i32* %ttindex, align 4
  %idxprom168 = zext i32 %140 to i64
  %141 = load %struct.TType** @AS_TTable, align 8
  %bitcast364 = bitcast %struct.TType** @AS_TTable to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast364, i8** %base.alloca365, i8** %bound.alloca366)
  %base.load367 = load i8** %base.alloca365
  %bound.load368 = load i8** %bound.alloca366
  %arrayidx169 = getelementptr inbounds %struct.TType* %141, i64 %idxprom168
  %Threat170 = getelementptr inbounds %struct.TType* %arrayidx169, i32 0, i32 2
  %142 = load i8* %Threat170, align 1
  %conv171 = sext i8 %142 to i32
  %143 = load i32** %threat.addr, align 8
  %bitcast369 = bitcast i32** %threat.addr to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast369, i8** %base.alloca370, i8** %bound.alloca371)
  %base.load372 = load i8** %base.alloca370
  %bound.load373 = load i8** %bound.alloca371
  store i32 %conv171, i32* %143, align 4
  store i32 0, i32* %retval
  br label %return

if.else172:                                       ; preds = %land.lhs.true87, %land.lhs.true81, %if.else75
  store i32 4, i32* %retval
  br label %return

return:                                           ; preds = %if.else172, %if.else163, %if.end150, %if.else66, %if.end54
  %144 = load i32* %retval
  ret i32 %144
}

; Function Attrs: nounwind uwtable
define internal i32 @QProbeTT(i32* %score, i32* %best) #0 {
entry:
  %base.alloca66 = alloca i8*
  %bound.alloca67 = alloca i8*
  %base.alloca61 = alloca i8*
  %bound.alloca62 = alloca i8*
  %base.alloca56 = alloca i8*
  %bound.alloca57 = alloca i8*
  %base.alloca51 = alloca i8*
  %bound.alloca52 = alloca i8*
  %base.alloca46 = alloca i8*
  %bound.alloca47 = alloca i8*
  %base.alloca41 = alloca i8*
  %bound.alloca42 = alloca i8*
  %base.alloca36 = alloca i8*
  %bound.alloca37 = alloca i8*
  %base.alloca = alloca i8*
  %bound.alloca = alloca i8*
  %0 = call i8* @__softboundcets_load_base_shadow_stack(i32 2)
  %1 = call i8* @__softboundcets_load_bound_shadow_stack(i32 2)
  %2 = call i8* @__softboundcets_load_base_shadow_stack(i32 1)
  %3 = call i8* @__softboundcets_load_bound_shadow_stack(i32 1)
  %retval = alloca i32, align 4
  %retval20 = bitcast i32* %retval to i32*
  %bitcast = bitcast i32* %retval to i8*
  %mtmp = getelementptr i32* %retval20, i32 1
  %bitcast21 = bitcast i32* %mtmp to i8*
  %score.addr = alloca i32*, align 8
  %score.addr22 = bitcast i32** %score.addr to i32**
  %bitcast23 = bitcast i32** %score.addr to i8*
  %mtmp24 = getelementptr i32** %score.addr22, i32 1
  %bitcast25 = bitcast i32** %mtmp24 to i8*
  %best.addr = alloca i32*, align 8
  %best.addr26 = bitcast i32** %best.addr to i32**
  %bitcast27 = bitcast i32** %best.addr to i8*
  %mtmp28 = getelementptr i32** %best.addr26, i32 1
  %bitcast29 = bitcast i32** %mtmp28 to i8*
  %ttindex = alloca i32, align 4
  %ttindex30 = bitcast i32* %ttindex to i32*
  %bitcast31 = bitcast i32* %ttindex to i8*
  %mtmp32 = getelementptr i32* %ttindex30, i32 1
  %bitcast33 = bitcast i32* %mtmp32 to i8*
  store i32* %score, i32** %score.addr, align 8
  %bitcast70 = bitcast i32** %score.addr to i8*
  call void @__softboundcets_metadata_store(i8* %bitcast70, i8* %2, i8* %3)
  store i32* %best, i32** %best.addr, align 8
  %bitcast71 = bitcast i32** %best.addr to i8*
  call void @__softboundcets_metadata_store(i8* %bitcast71, i8* %0, i8* %1)
  %4 = load i32* @TTProbes, align 4
  %inc = add i32 %4, 1
  store i32 %inc, i32* @TTProbes, align 4
  %5 = load i32* @hash, align 4
  %6 = load i32* @TTSize, align 4
  %rem = urem i32 %5, %6
  store i32 %rem, i32* %ttindex, align 4
  %7 = load i32* %ttindex, align 4
  %idxprom = zext i32 %7 to i64
  %8 = load %struct.QTType** @QS_TTable, align 8
  %bitcast34 = bitcast %struct.QTType** @QS_TTable to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast34, i8** %base.alloca, i8** %bound.alloca)
  %base.load = load i8** %base.alloca
  %bound.load = load i8** %bound.alloca
  %arrayidx = getelementptr inbounds %struct.QTType* %8, i64 %idxprom
  %HashKey = getelementptr inbounds %struct.QTType* %arrayidx, i32 0, i32 3
  %9 = load i32* %HashKey, align 4
  %10 = load i32* @hash, align 4
  %cmp = icmp eq i32 %9, %10
  br i1 %cmp, label %land.lhs.true, label %if.else

land.lhs.true:                                    ; preds = %entry
  %11 = load i32* %ttindex, align 4
  %idxprom1 = zext i32 %11 to i64
  %12 = load %struct.QTType** @QS_TTable, align 8
  %bitcast35 = bitcast %struct.QTType** @QS_TTable to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast35, i8** %base.alloca36, i8** %bound.alloca37)
  %base.load38 = load i8** %base.alloca36
  %bound.load39 = load i8** %bound.alloca37
  %arrayidx2 = getelementptr inbounds %struct.QTType* %12, i64 %idxprom1
  %Hold_hash = getelementptr inbounds %struct.QTType* %arrayidx2, i32 0, i32 4
  %13 = load i32* %Hold_hash, align 4
  %14 = load i32* @hold_hash, align 4
  %cmp3 = icmp eq i32 %13, %14
  br i1 %cmp3, label %land.lhs.true4, label %if.else

land.lhs.true4:                                   ; preds = %land.lhs.true
  %15 = load i32* %ttindex, align 4
  %idxprom5 = zext i32 %15 to i64
  %16 = load %struct.QTType** @QS_TTable, align 8
  %bitcast40 = bitcast %struct.QTType** @QS_TTable to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast40, i8** %base.alloca41, i8** %bound.alloca42)
  %base.load43 = load i8** %base.alloca41
  %bound.load44 = load i8** %bound.alloca42
  %arrayidx6 = getelementptr inbounds %struct.QTType* %16, i64 %idxprom5
  %OnMove = getelementptr inbounds %struct.QTType* %arrayidx6, i32 0, i32 0
  %17 = load i8* %OnMove, align 1
  %conv = sext i8 %17 to i32
  %18 = load i32* @white_to_move, align 4
  %tobool = icmp ne i32 %18, 0
  %cond = select i1 %tobool, i32 0, i32 1
  %conv7 = trunc i32 %cond to i8
  %conv8 = sext i8 %conv7 to i32
  %cmp9 = icmp eq i32 %conv, %conv8
  br i1 %cmp9, label %if.then, label %if.else

if.then:                                          ; preds = %land.lhs.true4
  %19 = load i32* @TTHits, align 4
  %inc11 = add i32 %19, 1
  store i32 %inc11, i32* @TTHits, align 4
  %20 = load i32* %ttindex, align 4
  %idxprom12 = zext i32 %20 to i64
  %21 = load %struct.QTType** @QS_TTable, align 8
  %bitcast45 = bitcast %struct.QTType** @QS_TTable to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast45, i8** %base.alloca46, i8** %bound.alloca47)
  %base.load48 = load i8** %base.alloca46
  %bound.load49 = load i8** %bound.alloca47
  %arrayidx13 = getelementptr inbounds %struct.QTType* %21, i64 %idxprom12
  %Bound = getelementptr inbounds %struct.QTType* %arrayidx13, i32 0, i32 5
  %22 = load i32* %Bound, align 4
  %23 = load i32** %score.addr, align 8
  %bitcast50 = bitcast i32** %score.addr to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast50, i8** %base.alloca51, i8** %bound.alloca52)
  %base.load53 = load i8** %base.alloca51
  %bound.load54 = load i8** %bound.alloca52
  store i32 %22, i32* %23, align 4
  %24 = load i32* %ttindex, align 4
  %idxprom14 = zext i32 %24 to i64
  %25 = load %struct.QTType** @QS_TTable, align 8
  %bitcast55 = bitcast %struct.QTType** @QS_TTable to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast55, i8** %base.alloca56, i8** %bound.alloca57)
  %base.load58 = load i8** %base.alloca56
  %bound.load59 = load i8** %bound.alloca57
  %arrayidx15 = getelementptr inbounds %struct.QTType* %25, i64 %idxprom14
  %Bestmove = getelementptr inbounds %struct.QTType* %arrayidx15, i32 0, i32 2
  %26 = load i16* %Bestmove, align 2
  %conv16 = zext i16 %26 to i32
  %27 = load i32** %best.addr, align 8
  %bitcast60 = bitcast i32** %best.addr to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast60, i8** %base.alloca61, i8** %bound.alloca62)
  %base.load63 = load i8** %base.alloca61
  %bound.load64 = load i8** %bound.alloca62
  store i32 %conv16, i32* %27, align 4
  %28 = load i32* %ttindex, align 4
  %idxprom17 = zext i32 %28 to i64
  %29 = load %struct.QTType** @QS_TTable, align 8
  %bitcast65 = bitcast %struct.QTType** @QS_TTable to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast65, i8** %base.alloca66, i8** %bound.alloca67)
  %base.load68 = load i8** %base.alloca66
  %bound.load69 = load i8** %bound.alloca67
  %arrayidx18 = getelementptr inbounds %struct.QTType* %29, i64 %idxprom17
  %Type = getelementptr inbounds %struct.QTType* %arrayidx18, i32 0, i32 1
  %30 = load i8* %Type, align 1
  %conv19 = sext i8 %30 to i32
  store i32 %conv19, i32* %retval
  br label %return

if.else:                                          ; preds = %land.lhs.true4, %land.lhs.true, %entry
  store i32 4, i32* %retval
  br label %return

return:                                           ; preds = %if.else, %if.then
  %31 = load i32* %retval
  ret i32 %31
}

; Function Attrs: nounwind uwtable
define internal void @alloc_hash() #0 {
entry:
  %base.alloca20 = alloca i8*
  %bound.alloca21 = alloca i8*
  %base.alloca15 = alloca i8*
  %bound.alloca16 = alloca i8*
  %base.alloca = alloca i8*
  %bound.alloca = alloca i8*
  %0 = load i32* @TTSize, align 4
  %conv = sext i32 %0 to i64
  %mul = mul i64 20, %conv
  call void @__softboundcets_allocate_shadow_stack_space(i32 1)
  %call = call noalias i8* @softboundcets_malloc(i64 %mul) #1
  %1 = call i8* @__softboundcets_load_base_shadow_stack(i32 0)
  %2 = call i8* @__softboundcets_load_bound_shadow_stack(i32 0)
  call void @__softboundcets_deallocate_shadow_stack_space()
  %3 = bitcast i8* %call to %struct.TType*
  store %struct.TType* %3, %struct.TType** @AS_TTable, align 8
  %bitcast24 = bitcast %struct.TType** @AS_TTable to i8*
  call void @__softboundcets_metadata_store(i8* %bitcast24, i8* %1, i8* %2)
  %4 = load i32* @TTSize, align 4
  %conv1 = sext i32 %4 to i64
  %mul2 = mul i64 20, %conv1
  call void @__softboundcets_allocate_shadow_stack_space(i32 1)
  %call3 = call noalias i8* @softboundcets_malloc(i64 %mul2) #1
  %5 = call i8* @__softboundcets_load_base_shadow_stack(i32 0)
  %6 = call i8* @__softboundcets_load_bound_shadow_stack(i32 0)
  call void @__softboundcets_deallocate_shadow_stack_space()
  %7 = bitcast i8* %call3 to %struct.TType*
  store %struct.TType* %7, %struct.TType** @DP_TTable, align 8
  %bitcast25 = bitcast %struct.TType** @DP_TTable to i8*
  call void @__softboundcets_metadata_store(i8* %bitcast25, i8* %5, i8* %6)
  %8 = load i32* @TTSize, align 4
  %conv4 = sext i32 %8 to i64
  %mul5 = mul i64 16, %conv4
  call void @__softboundcets_allocate_shadow_stack_space(i32 1)
  %call6 = call noalias i8* @softboundcets_malloc(i64 %mul5) #1
  %9 = call i8* @__softboundcets_load_base_shadow_stack(i32 0)
  %10 = call i8* @__softboundcets_load_bound_shadow_stack(i32 0)
  call void @__softboundcets_deallocate_shadow_stack_space()
  %11 = bitcast i8* %call6 to %struct.QTType*
  store %struct.QTType* %11, %struct.QTType** @QS_TTable, align 8
  %bitcast26 = bitcast %struct.QTType** @QS_TTable to i8*
  call void @__softboundcets_metadata_store(i8* %bitcast26, i8* %9, i8* %10)
  %12 = load %struct.TType** @AS_TTable, align 8
  %bitcast = bitcast %struct.TType** @AS_TTable to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast, i8** %base.alloca, i8** %bound.alloca)
  %base.load = load i8** %base.alloca
  %bound.load = load i8** %bound.alloca
  %cmp = icmp eq %struct.TType* %12, null
  br i1 %cmp, label %if.then, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %entry
  %13 = load %struct.TType** @DP_TTable, align 8
  %bitcast14 = bitcast %struct.TType** @DP_TTable to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast14, i8** %base.alloca15, i8** %bound.alloca16)
  %base.load17 = load i8** %base.alloca15
  %bound.load18 = load i8** %bound.alloca16
  %cmp8 = icmp eq %struct.TType* %13, null
  br i1 %cmp8, label %if.then, label %lor.lhs.false10

lor.lhs.false10:                                  ; preds = %lor.lhs.false
  %14 = load %struct.QTType** @QS_TTable, align 8
  %bitcast19 = bitcast %struct.QTType** @QS_TTable to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast19, i8** %base.alloca20, i8** %bound.alloca21)
  %base.load22 = load i8** %base.alloca20
  %bound.load23 = load i8** %bound.alloca21
  %cmp11 = icmp eq %struct.QTType* %14, null
  br i1 %cmp11, label %if.then, label %if.end

if.then:                                          ; preds = %lor.lhs.false10, %lor.lhs.false, %entry
  %call13 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([38 x i8]* @.str377, i32 0, i32 0))
  call void @softboundcets_exit(i32 1) #4
  unreachable

if.end:                                           ; preds = %lor.lhs.false10
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @free_hash() #0 {
entry:
  %base.alloca7 = alloca i8*
  %bound.alloca8 = alloca i8*
  %base.alloca2 = alloca i8*
  %bound.alloca3 = alloca i8*
  %base.alloca = alloca i8*
  %bound.alloca = alloca i8*
  %0 = load %struct.TType** @AS_TTable, align 8
  %bitcast = bitcast %struct.TType** @AS_TTable to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast, i8** %base.alloca, i8** %bound.alloca)
  %base.load = load i8** %base.alloca
  %bound.load = load i8** %bound.alloca
  %1 = bitcast %struct.TType* %0 to i8*
  call void @__softboundcets_allocate_shadow_stack_space(i32 2)
  call void @__softboundcets_store_base_shadow_stack(i8* %base.load, i32 1)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bound.load, i32 1)
  call void @softboundcets_free(i8* %1) #1
  call void @__softboundcets_deallocate_shadow_stack_space()
  %2 = load %struct.TType** @DP_TTable, align 8
  %bitcast1 = bitcast %struct.TType** @DP_TTable to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast1, i8** %base.alloca2, i8** %bound.alloca3)
  %base.load4 = load i8** %base.alloca2
  %bound.load5 = load i8** %bound.alloca3
  %3 = bitcast %struct.TType* %2 to i8*
  call void @__softboundcets_allocate_shadow_stack_space(i32 2)
  call void @__softboundcets_store_base_shadow_stack(i8* %base.load4, i32 1)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bound.load5, i32 1)
  call void @softboundcets_free(i8* %3) #1
  call void @__softboundcets_deallocate_shadow_stack_space()
  %4 = load %struct.QTType** @QS_TTable, align 8
  %bitcast6 = bitcast %struct.QTType** @QS_TTable to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast6, i8** %base.alloca7, i8** %bound.alloca8)
  %base.load9 = load i8** %base.alloca7
  %bound.load10 = load i8** %bound.alloca8
  %5 = bitcast %struct.QTType* %4 to i8*
  call void @__softboundcets_allocate_shadow_stack_space(i32 2)
  call void @__softboundcets_store_base_shadow_stack(i8* %base.load9, i32 1)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bound.load10, i32 1)
  call void @softboundcets_free(i8* %5) #1
  call void @__softboundcets_deallocate_shadow_stack_space()
  ret void
}

; Function Attrs: nounwind uwtable
define internal i32 @allocate_time() #0 {
entry:
  %allocated_time = alloca double, align 8
  %allocated_time149 = bitcast double* %allocated_time to double*
  %bitcast = bitcast double* %allocated_time to i8*
  %mtmp = getelementptr double* %allocated_time149, i32 1
  %bitcast150 = bitcast double* %mtmp to i8*
  %move_speed = alloca double, align 8
  %move_speed151 = bitcast double* %move_speed to double*
  %bitcast152 = bitcast double* %move_speed to i8*
  %mtmp153 = getelementptr double* %move_speed151, i32 1
  %bitcast154 = bitcast double* %mtmp153 to i8*
  store double 0.000000e+00, double* %allocated_time, align 8
  store double 2.000000e+01, double* %move_speed, align 8
  %0 = load i32* @moves_to_tc, align 4
  %tobool = icmp ne i32 %0, 0
  br i1 %tobool, label %if.else110, label %if.then

if.then:                                          ; preds = %entry
  %1 = load i32* @min_per_game, align 4
  %cmp = icmp slt i32 %1, 6
  br i1 %cmp, label %land.lhs.true, label %lor.lhs.false

land.lhs.true:                                    ; preds = %if.then
  %2 = load i32* @inc, align 4
  %tobool1 = icmp ne i32 %2, 0
  br i1 %tobool1, label %lor.lhs.false, label %if.then7

lor.lhs.false:                                    ; preds = %land.lhs.true, %if.then
  %3 = load i32* @time_left, align 4
  %conv = sitofp i32 %3 to double
  %4 = load i32* @min_per_game, align 4
  %mul = mul nsw i32 %4, 6000
  %5 = load i32* @sec_per_game, align 4
  %mul2 = mul nsw i32 %5, 100
  %add = add nsw i32 %mul, %mul2
  %conv3 = sitofp i32 %add to double
  %mul4 = fmul double %conv3, 4.000000e+00
  %div = fdiv double %mul4, 5.000000e+00
  %cmp5 = fcmp olt double %conv, %div
  br i1 %cmp5, label %if.then7, label %if.end37

if.then7:                                         ; preds = %lor.lhs.false, %land.lhs.true
  %6 = load i32* @opp_time, align 4
  %7 = load i32* @time_left, align 4
  %sub = sub nsw i32 %6, %7
  %conv8 = sitofp i32 %sub to double
  %8 = load i32* @opp_time, align 4
  %conv9 = sitofp i32 %8 to double
  %div10 = fdiv double %conv9, 5.000000e+00
  %cmp11 = fcmp ogt double %conv8, %div10
  br i1 %cmp11, label %land.lhs.true13, label %if.else

land.lhs.true13:                                  ; preds = %if.then7
  %9 = load i32* @xb_mode, align 4
  %tobool14 = icmp ne i32 %9, 0
  br i1 %tobool14, label %if.then15, label %if.else

if.then15:                                        ; preds = %land.lhs.true13
  store double 4.000000e+01, double* %move_speed, align 8
  br label %if.end36

if.else:                                          ; preds = %land.lhs.true13, %if.then7
  %10 = load i32* @opp_time, align 4
  %11 = load i32* @time_left, align 4
  %sub16 = sub nsw i32 %10, %11
  %conv17 = sitofp i32 %sub16 to double
  %12 = load i32* @opp_time, align 4
  %conv18 = sitofp i32 %12 to double
  %div19 = fdiv double %conv18, 1.000000e+01
  %cmp20 = fcmp ogt double %conv17, %div19
  br i1 %cmp20, label %land.lhs.true22, label %if.else25

land.lhs.true22:                                  ; preds = %if.else
  %13 = load i32* @xb_mode, align 4
  %tobool23 = icmp ne i32 %13, 0
  br i1 %tobool23, label %if.then24, label %if.else25

if.then24:                                        ; preds = %land.lhs.true22
  store double 3.000000e+01, double* %move_speed, align 8
  br label %if.end35

if.else25:                                        ; preds = %land.lhs.true22, %if.else
  %14 = load i32* @opp_time, align 4
  %15 = load i32* @time_left, align 4
  %sub26 = sub nsw i32 %14, %15
  %conv27 = sitofp i32 %sub26 to double
  %16 = load i32* @opp_time, align 4
  %conv28 = sitofp i32 %16 to double
  %div29 = fdiv double %conv28, 2.000000e+01
  %cmp30 = fcmp ogt double %conv27, %div29
  br i1 %cmp30, label %land.lhs.true32, label %if.end

land.lhs.true32:                                  ; preds = %if.else25
  %17 = load i32* @xb_mode, align 4
  %tobool33 = icmp ne i32 %17, 0
  br i1 %tobool33, label %if.then34, label %if.end

if.then34:                                        ; preds = %land.lhs.true32
  store double 2.500000e+01, double* %move_speed, align 8
  br label %if.end

if.end:                                           ; preds = %if.then34, %land.lhs.true32, %if.else25
  br label %if.end35

if.end35:                                         ; preds = %if.end, %if.then24
  br label %if.end36

if.end36:                                         ; preds = %if.end35, %if.then15
  br label %if.end37

if.end37:                                         ; preds = %if.end36, %lor.lhs.false
  %18 = load i32* @Variant, align 4
  %cmp38 = icmp ne i32 %18, 3
  br i1 %cmp38, label %land.lhs.true40, label %if.else67

land.lhs.true40:                                  ; preds = %if.end37
  %19 = load i32* @Variant, align 4
  %cmp41 = icmp ne i32 %19, 4
  br i1 %cmp41, label %if.then43, label %if.else67

if.then43:                                        ; preds = %land.lhs.true40
  %20 = load i32* @time_left, align 4
  %21 = load i32* @opp_time, align 4
  %sub44 = sub nsw i32 %20, %21
  %conv45 = sitofp i32 %sub44 to double
  %22 = load i32* @time_left, align 4
  %conv46 = sitofp i32 %22 to double
  %div47 = fdiv double %conv46, 5.000000e+00
  %cmp48 = fcmp ogt double %conv45, %div47
  br i1 %cmp48, label %land.lhs.true50, label %if.else54

land.lhs.true50:                                  ; preds = %if.then43
  %23 = load i32* @xb_mode, align 4
  %tobool51 = icmp ne i32 %23, 0
  br i1 %tobool51, label %if.then52, label %if.else54

if.then52:                                        ; preds = %land.lhs.true50
  %24 = load double* %move_speed, align 8
  %sub53 = fsub double %24, 1.000000e+01
  store double %sub53, double* %move_speed, align 8
  br label %if.end66

if.else54:                                        ; preds = %land.lhs.true50, %if.then43
  %25 = load i32* @time_left, align 4
  %26 = load i32* @opp_time, align 4
  %sub55 = sub nsw i32 %25, %26
  %conv56 = sitofp i32 %sub55 to double
  %27 = load i32* @time_left, align 4
  %conv57 = sitofp i32 %27 to double
  %div58 = fdiv double %conv57, 1.000000e+01
  %cmp59 = fcmp ogt double %conv56, %div58
  br i1 %cmp59, label %land.lhs.true61, label %if.end65

land.lhs.true61:                                  ; preds = %if.else54
  %28 = load i32* @xb_mode, align 4
  %tobool62 = icmp ne i32 %28, 0
  br i1 %tobool62, label %if.then63, label %if.end65

if.then63:                                        ; preds = %land.lhs.true61
  %29 = load double* %move_speed, align 8
  %sub64 = fsub double %29, 5.000000e+00
  store double %sub64, double* %move_speed, align 8
  br label %if.end65

if.end65:                                         ; preds = %if.then63, %land.lhs.true61, %if.else54
  br label %if.end66

if.end66:                                         ; preds = %if.end65, %if.then52
  br label %if.end79

if.else67:                                        ; preds = %land.lhs.true40, %if.end37
  %30 = load i32* @Variant, align 4
  %cmp68 = icmp eq i32 %30, 3
  br i1 %cmp68, label %if.then70, label %if.else72

if.then70:                                        ; preds = %if.else67
  %31 = load double* %move_speed, align 8
  %sub71 = fsub double %31, 1.000000e+01
  store double %sub71, double* %move_speed, align 8
  br label %if.end78

if.else72:                                        ; preds = %if.else67
  %32 = load i32* @Variant, align 4
  %cmp73 = icmp eq i32 %32, 4
  br i1 %cmp73, label %if.then75, label %if.end77

if.then75:                                        ; preds = %if.else72
  %33 = load double* %move_speed, align 8
  %sub76 = fsub double %33, 5.000000e+00
  store double %sub76, double* %move_speed, align 8
  br label %if.end77

if.end77:                                         ; preds = %if.then75, %if.else72
  br label %if.end78

if.end78:                                         ; preds = %if.end77, %if.then70
  br label %if.end79

if.end79:                                         ; preds = %if.end78, %if.end66
  %34 = load i32* @time_left, align 4
  %conv80 = sitofp i32 %34 to double
  %35 = load double* %move_speed, align 8
  %div81 = fdiv double %conv80, %35
  store double %div81, double* %allocated_time, align 8
  %36 = load i32* @inc, align 4
  %tobool82 = icmp ne i32 %36, 0
  br i1 %tobool82, label %if.then83, label %if.end109

if.then83:                                        ; preds = %if.end79
  %37 = load i32* @time_left, align 4
  %conv84 = sitofp i32 %37 to double
  %38 = load double* %allocated_time, align 8
  %sub85 = fsub double %conv84, %38
  %39 = load i32* @inc, align 4
  %conv86 = sitofp i32 %39 to double
  %sub87 = fsub double %sub85, %conv86
  %cmp88 = fcmp ogt double %sub87, 5.000000e+02
  br i1 %cmp88, label %if.then90, label %if.else93

if.then90:                                        ; preds = %if.then83
  %40 = load i32* @inc, align 4
  %conv91 = sitofp i32 %40 to double
  %41 = load double* %allocated_time, align 8
  %add92 = fadd double %41, %conv91
  store double %add92, double* %allocated_time, align 8
  br label %if.end108

if.else93:                                        ; preds = %if.then83
  %42 = load i32* @time_left, align 4
  %conv94 = sitofp i32 %42 to double
  %43 = load double* %allocated_time, align 8
  %sub95 = fsub double %conv94, %43
  %44 = load i32* @inc, align 4
  %conv96 = sitofp i32 %44 to double
  %mul97 = fmul double %conv96, 2.000000e+00
  %div98 = fdiv double %mul97, 3.000000e+00
  %sub99 = fsub double %sub95, %div98
  %cmp100 = fcmp ogt double %sub99, 1.000000e+02
  br i1 %cmp100, label %if.then102, label %if.end107

if.then102:                                       ; preds = %if.else93
  %45 = load i32* @inc, align 4
  %conv103 = sitofp i32 %45 to double
  %mul104 = fmul double %conv103, 2.000000e+00
  %div105 = fdiv double %mul104, 3.000000e+00
  %46 = load double* %allocated_time, align 8
  %add106 = fadd double %46, %div105
  store double %add106, double* %allocated_time, align 8
  br label %if.end107

if.end107:                                        ; preds = %if.then102, %if.else93
  br label %if.end108

if.end108:                                        ; preds = %if.end107, %if.then90
  br label %if.end109

if.end109:                                        ; preds = %if.end108, %if.end79
  br label %if.end134

if.else110:                                       ; preds = %entry
  %47 = load i32* @min_per_game, align 4
  %conv111 = sitofp i32 %47 to float
  %conv112 = fpext float %conv111 to double
  %mul113 = fmul double %conv112, 6.000000e+03
  %48 = load i32* @sec_per_game, align 4
  %conv114 = sitofp i32 %48 to float
  %conv115 = fpext float %conv114 to double
  %mul116 = fmul double %conv115, 1.000000e+02
  %add117 = fadd double %mul113, %mul116
  %49 = load i32* @moves_to_tc, align 4
  %conv118 = sitofp i32 %49 to float
  %conv119 = fpext float %conv118 to double
  %div120 = fdiv double %add117, %conv119
  %sub121 = fsub double %div120, 1.000000e+02
  store double %sub121, double* %allocated_time, align 8
  %50 = load i32* @time_cushion, align 4
  %tobool122 = icmp ne i32 %50, 0
  br i1 %tobool122, label %if.then123, label %if.end133

if.then123:                                       ; preds = %if.else110
  %51 = load i32* @time_cushion, align 4
  %conv124 = sitofp i32 %51 to double
  %mul125 = fmul double %conv124, 2.100000e+00
  %div126 = fdiv double %mul125, 3.000000e+00
  %52 = load double* %allocated_time, align 8
  %add127 = fadd double %52, %div126
  store double %add127, double* %allocated_time, align 8
  %53 = load i32* @time_cushion, align 4
  %conv128 = sitofp i32 %53 to double
  %mul129 = fmul double %conv128, 2.100000e+00
  %div130 = fdiv double %mul129, 3.000000e+00
  %conv131 = fptosi double %div130 to i32
  %54 = load i32* @time_cushion, align 4
  %sub132 = sub nsw i32 %54, %conv131
  store i32 %sub132, i32* @time_cushion, align 4
  br label %if.end133

if.end133:                                        ; preds = %if.then123, %if.else110
  br label %if.end134

if.end134:                                        ; preds = %if.end133, %if.end109
  %55 = load i32* @Variant, align 4
  %cmp135 = icmp eq i32 %55, 1
  br i1 %cmp135, label %if.then137, label %if.end147

if.then137:                                       ; preds = %if.end134
  %56 = load double* %allocated_time, align 8
  %mul138 = fmul double %56, 2.500000e-01
  store double %mul138, double* %allocated_time, align 8
  %57 = load i32* @opp_time, align 4
  %58 = load i32* @time_left, align 4
  %cmp139 = icmp sgt i32 %57, %58
  br i1 %cmp139, label %if.then144, label %lor.lhs.false141

lor.lhs.false141:                                 ; preds = %if.then137
  %59 = load i32* @opp_time, align 4
  %cmp142 = icmp slt i32 %59, 1500
  br i1 %cmp142, label %if.then144, label %if.end146

if.then144:                                       ; preds = %lor.lhs.false141, %if.then137
  %60 = load double* %allocated_time, align 8
  %mul145 = fmul double %60, 5.000000e-01
  store double %mul145, double* %allocated_time, align 8
  br label %if.end146

if.end146:                                        ; preds = %if.then144, %lor.lhs.false141
  br label %if.end147

if.end147:                                        ; preds = %if.end146, %if.end134
  %61 = load double* %allocated_time, align 8
  %conv148 = fptosi double %61 to i32
  ret i32 %conv148
}

; Function Attrs: nounwind uwtable
define internal void @comp_to_san(%struct.move_s* byval align 8 %move, i8* %str) #0 {
entry:
  %base.alloca380 = alloca i8*
  %bound.alloca381 = alloca i8*
  %base.alloca373 = alloca i8*
  %bound.alloca374 = alloca i8*
  %base.alloca366 = alloca i8*
  %bound.alloca367 = alloca i8*
  %base.alloca359 = alloca i8*
  %bound.alloca360 = alloca i8*
  %base.alloca352 = alloca i8*
  %bound.alloca353 = alloca i8*
  %base.alloca345 = alloca i8*
  %bound.alloca346 = alloca i8*
  %base.alloca340 = alloca i8*
  %bound.alloca341 = alloca i8*
  %base.alloca335 = alloca i8*
  %bound.alloca336 = alloca i8*
  %base.alloca330 = alloca i8*
  %bound.alloca331 = alloca i8*
  %base.alloca325 = alloca i8*
  %bound.alloca326 = alloca i8*
  %base.alloca320 = alloca i8*
  %bound.alloca321 = alloca i8*
  %base.alloca313 = alloca i8*
  %bound.alloca314 = alloca i8*
  %base.alloca308 = alloca i8*
  %bound.alloca309 = alloca i8*
  %base.alloca301 = alloca i8*
  %bound.alloca302 = alloca i8*
  %base.alloca296 = alloca i8*
  %bound.alloca297 = alloca i8*
  %base.alloca = alloca i8*
  %bound.alloca = alloca i8*
  %0 = call i8* @__softboundcets_load_base_shadow_stack(i32 2)
  %1 = call i8* @__softboundcets_load_bound_shadow_stack(i32 2)
  %str.addr = alloca i8*, align 8
  %str.addr242 = bitcast i8** %str.addr to i8**
  %bitcast = bitcast i8** %str.addr to i8*
  %mtmp = getelementptr i8** %str.addr242, i32 1
  %bitcast243 = bitcast i8** %mtmp to i8*
  %moves = alloca [512 x %struct.move_s], align 16
  %moves244 = bitcast [512 x %struct.move_s]* %moves to [512 x %struct.move_s]*
  %bitcast245 = bitcast [512 x %struct.move_s]* %moves to i8*
  %mtmp246 = getelementptr [512 x %struct.move_s]* %moves244, i32 1
  %bitcast247 = bitcast [512 x %struct.move_s]* %mtmp246 to i8*
  %evade_moves = alloca [512 x %struct.move_s], align 16
  %evade_moves248 = bitcast [512 x %struct.move_s]* %evade_moves to [512 x %struct.move_s]*
  %bitcast249 = bitcast [512 x %struct.move_s]* %evade_moves to i8*
  %mtmp250 = getelementptr [512 x %struct.move_s]* %evade_moves248, i32 1
  %bitcast251 = bitcast [512 x %struct.move_s]* %mtmp250 to i8*
  %i = alloca i32, align 4
  %i252 = bitcast i32* %i to i32*
  %bitcast253 = bitcast i32* %i to i8*
  %mtmp254 = getelementptr i32* %i252, i32 1
  %bitcast255 = bitcast i32* %mtmp254 to i8*
  %num_moves = alloca i32, align 4
  %num_moves256 = bitcast i32* %num_moves to i32*
  %bitcast257 = bitcast i32* %num_moves to i8*
  %mtmp258 = getelementptr i32* %num_moves256, i32 1
  %bitcast259 = bitcast i32* %mtmp258 to i8*
  %evasions = alloca i32, align 4
  %evasions260 = bitcast i32* %evasions to i32*
  %bitcast261 = bitcast i32* %evasions to i8*
  %mtmp262 = getelementptr i32* %evasions260, i32 1
  %bitcast263 = bitcast i32* %mtmp262 to i8*
  %ambig = alloca i32, align 4
  %ambig264 = bitcast i32* %ambig to i32*
  %bitcast265 = bitcast i32* %ambig to i8*
  %mtmp266 = getelementptr i32* %ambig264, i32 1
  %bitcast267 = bitcast i32* %mtmp266 to i8*
  %mate = alloca i32, align 4
  %mate268 = bitcast i32* %mate to i32*
  %bitcast269 = bitcast i32* %mate to i8*
  %mtmp270 = getelementptr i32* %mate268, i32 1
  %bitcast271 = bitcast i32* %mtmp270 to i8*
  %f_rank = alloca i32, align 4
  %f_rank272 = bitcast i32* %f_rank to i32*
  %bitcast273 = bitcast i32* %f_rank to i8*
  %mtmp274 = getelementptr i32* %f_rank272, i32 1
  %bitcast275 = bitcast i32* %mtmp274 to i8*
  %t_rank = alloca i32, align 4
  %t_rank276 = bitcast i32* %t_rank to i32*
  %bitcast277 = bitcast i32* %t_rank to i8*
  %mtmp278 = getelementptr i32* %t_rank276, i32 1
  %bitcast279 = bitcast i32* %mtmp278 to i8*
  %converter = alloca i32, align 4
  %converter280 = bitcast i32* %converter to i32*
  %bitcast281 = bitcast i32* %converter to i8*
  %mtmp282 = getelementptr i32* %converter280, i32 1
  %bitcast283 = bitcast i32* %mtmp282 to i8*
  %f_file = alloca i8, align 1
  %f_file284 = bitcast i8* %f_file to i8*
  %mtmp285 = getelementptr i8* %f_file284, i32 1
  %t_file = alloca i8, align 1
  %t_file286 = bitcast i8* %t_file to i8*
  %mtmp287 = getelementptr i8* %t_file286, i32 1
  %ic = alloca i32, align 4
  %ic288 = bitcast i32* %ic to i32*
  %bitcast289 = bitcast i32* %ic to i8*
  %mtmp290 = getelementptr i32* %ic288, i32 1
  %bitcast291 = bitcast i32* %mtmp290 to i8*
  store i8* %str, i8** %str.addr, align 8
  %bitcast386 = bitcast i8** %str.addr to i8*
  call void @__softboundcets_metadata_store(i8* %bitcast386, i8* %0, i8* %1)
  %from = getelementptr inbounds %struct.move_s* %move, i32 0, i32 0
  %2 = load i32* %from, align 4
  %idxprom = sext i32 %2 to i64
  %arrayidx = getelementptr inbounds [144 x i32]* @Xrank, i32 0, i64 %idxprom
  %3 = load i32* %arrayidx, align 4
  store i32 %3, i32* %f_rank, align 4
  %target = getelementptr inbounds %struct.move_s* %move, i32 0, i32 1
  %4 = load i32* %target, align 4
  %idxprom1 = sext i32 %4 to i64
  %arrayidx2 = getelementptr inbounds [144 x i32]* @Xrank, i32 0, i64 %idxprom1
  %5 = load i32* %arrayidx2, align 4
  store i32 %5, i32* %t_rank, align 4
  store i32 97, i32* %converter, align 4
  %from3 = getelementptr inbounds %struct.move_s* %move, i32 0, i32 0
  %6 = load i32* %from3, align 4
  %idxprom4 = sext i32 %6 to i64
  %arrayidx5 = getelementptr inbounds [144 x i32]* @Xfile, i32 0, i64 %idxprom4
  %7 = load i32* %arrayidx5, align 4
  %8 = load i32* %converter, align 4
  %add = add nsw i32 %7, %8
  %sub = sub nsw i32 %add, 1
  %conv = trunc i32 %sub to i8
  store i8 %conv, i8* %f_file, align 1
  %target6 = getelementptr inbounds %struct.move_s* %move, i32 0, i32 1
  %9 = load i32* %target6, align 4
  %idxprom7 = sext i32 %9 to i64
  %arrayidx8 = getelementptr inbounds [144 x i32]* @Xfile, i32 0, i64 %idxprom7
  %10 = load i32* %arrayidx8, align 4
  %11 = load i32* %converter, align 4
  %add9 = add nsw i32 %10, %11
  %sub10 = sub nsw i32 %add9, 1
  %conv11 = trunc i32 %sub10 to i8
  store i8 %conv11, i8* %t_file, align 1
  %from12 = getelementptr inbounds %struct.move_s* %move, i32 0, i32 0
  %12 = load i32* %from12, align 4
  %cmp = icmp eq i32 %12, 0
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  %13 = load i8** %str.addr, align 8
  %bitcast292 = bitcast i8** %str.addr to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast292, i8** %base.alloca, i8** %bound.alloca)
  %base.load = load i8** %base.alloca
  %bound.load = load i8** %bound.alloca
  %promoted = getelementptr inbounds %struct.move_s* %move, i32 0, i32 3
  %14 = load i32* %promoted, align 4
  %idxprom14 = sext i32 %14 to i64
  %bitcast293 = bitcast [14 x i32]* @comp_to_san.type_to_char to i8*
  %bitcast294 = bitcast [14 x i32]* getelementptr inbounds ([14 x i32]* @comp_to_san.type_to_char, i32 1) to i8*
  %arrayidx15 = getelementptr inbounds [14 x i32]* @comp_to_san.type_to_char, i32 0, i64 %idxprom14
  %15 = load i32* %arrayidx15, align 4
  %16 = load i8* %t_file, align 1
  %conv16 = sext i8 %16 to i32
  %17 = load i32* %t_rank, align 4
  %call = call i32 (i8*, i8*, ...)* @sprintf(i8* %13, i8* getelementptr inbounds ([8 x i8]* @.str396, i32 0, i32 0), i32 %15, i32 %conv16, i32 %17) #1
  br label %if.end209

if.else:                                          ; preds = %entry
  %from17 = getelementptr inbounds %struct.move_s* %move, i32 0, i32 0
  %18 = load i32* %from17, align 4
  %idxprom18 = sext i32 %18 to i64
  %arrayidx19 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom18
  %19 = load i32* %arrayidx19, align 4
  %cmp20 = icmp eq i32 %19, 1
  br i1 %cmp20, label %if.then27, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.else
  %from22 = getelementptr inbounds %struct.move_s* %move, i32 0, i32 0
  %20 = load i32* %from22, align 4
  %idxprom23 = sext i32 %20 to i64
  %arrayidx24 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom23
  %21 = load i32* %arrayidx24, align 4
  %cmp25 = icmp eq i32 %21, 2
  br i1 %cmp25, label %if.then27, label %if.else61

if.then27:                                        ; preds = %lor.lhs.false, %if.else
  %target28 = getelementptr inbounds %struct.move_s* %move, i32 0, i32 1
  %22 = load i32* %target28, align 4
  %idxprom29 = sext i32 %22 to i64
  %arrayidx30 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom29
  %23 = load i32* %arrayidx30, align 4
  %cmp31 = icmp eq i32 %23, 13
  br i1 %cmp31, label %land.lhs.true, label %if.else45

land.lhs.true:                                    ; preds = %if.then27
  %ep = getelementptr inbounds %struct.move_s* %move, i32 0, i32 5
  %24 = load i32* %ep, align 4
  %tobool = icmp ne i32 %24, 0
  br i1 %tobool, label %if.else45, label %if.then33

if.then33:                                        ; preds = %land.lhs.true
  %promoted34 = getelementptr inbounds %struct.move_s* %move, i32 0, i32 3
  %25 = load i32* %promoted34, align 4
  %tobool35 = icmp ne i32 %25, 0
  br i1 %tobool35, label %if.else39, label %if.then36

if.then36:                                        ; preds = %if.then33
  %26 = load i8** %str.addr, align 8
  %bitcast319 = bitcast i8** %str.addr to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast319, i8** %base.alloca320, i8** %bound.alloca321)
  %base.load322 = load i8** %base.alloca320
  %bound.load323 = load i8** %bound.alloca321
  %27 = load i8* %t_file, align 1
  %conv37 = sext i8 %27 to i32
  %28 = load i32* %t_rank, align 4
  %call38 = call i32 (i8*, i8*, ...)* @sprintf(i8* %26, i8* getelementptr inbounds ([5 x i8]* @.str1398, i32 0, i32 0), i32 %conv37, i32 %28) #1
  br label %if.end

if.else39:                                        ; preds = %if.then33
  %29 = load i8** %str.addr, align 8
  %bitcast312 = bitcast i8** %str.addr to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast312, i8** %base.alloca313, i8** %bound.alloca314)
  %base.load315 = load i8** %base.alloca313
  %bound.load316 = load i8** %bound.alloca314
  %30 = load i8* %t_file, align 1
  %conv40 = sext i8 %30 to i32
  %31 = load i32* %t_rank, align 4
  %promoted41 = getelementptr inbounds %struct.move_s* %move, i32 0, i32 3
  %32 = load i32* %promoted41, align 4
  %idxprom42 = sext i32 %32 to i64
  %bitcast317 = bitcast [14 x i32]* @comp_to_san.type_to_char to i8*
  %bitcast318 = bitcast [14 x i32]* getelementptr inbounds ([14 x i32]* @comp_to_san.type_to_char, i32 1) to i8*
  %arrayidx43 = getelementptr inbounds [14 x i32]* @comp_to_san.type_to_char, i32 0, i64 %idxprom42
  %33 = load i32* %arrayidx43, align 4
  %call44 = call i32 (i8*, i8*, ...)* @sprintf(i8* %29, i8* getelementptr inbounds ([8 x i8]* @.str2399, i32 0, i32 0), i32 %conv40, i32 %31, i32 %33) #1
  br label %if.end

if.end:                                           ; preds = %if.else39, %if.then36
  br label %if.end60

if.else45:                                        ; preds = %land.lhs.true, %if.then27
  %promoted46 = getelementptr inbounds %struct.move_s* %move, i32 0, i32 3
  %34 = load i32* %promoted46, align 4
  %tobool47 = icmp ne i32 %34, 0
  br i1 %tobool47, label %if.else52, label %if.then48

if.then48:                                        ; preds = %if.else45
  %35 = load i8** %str.addr, align 8
  %bitcast307 = bitcast i8** %str.addr to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast307, i8** %base.alloca308, i8** %bound.alloca309)
  %base.load310 = load i8** %base.alloca308
  %bound.load311 = load i8** %bound.alloca309
  %36 = load i8* %f_file, align 1
  %conv49 = sext i8 %36 to i32
  %37 = load i8* %t_file, align 1
  %conv50 = sext i8 %37 to i32
  %38 = load i32* %t_rank, align 4
  %call51 = call i32 (i8*, i8*, ...)* @sprintf(i8* %35, i8* getelementptr inbounds ([8 x i8]* @.str3400, i32 0, i32 0), i32 %conv49, i32 %conv50, i32 %38) #1
  br label %if.end59

if.else52:                                        ; preds = %if.else45
  %39 = load i8** %str.addr, align 8
  %bitcast300 = bitcast i8** %str.addr to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast300, i8** %base.alloca301, i8** %bound.alloca302)
  %base.load303 = load i8** %base.alloca301
  %bound.load304 = load i8** %bound.alloca302
  %40 = load i8* %f_file, align 1
  %conv53 = sext i8 %40 to i32
  %41 = load i8* %t_file, align 1
  %conv54 = sext i8 %41 to i32
  %42 = load i32* %t_rank, align 4
  %promoted55 = getelementptr inbounds %struct.move_s* %move, i32 0, i32 3
  %43 = load i32* %promoted55, align 4
  %idxprom56 = sext i32 %43 to i64
  %bitcast305 = bitcast [14 x i32]* @comp_to_san.type_to_char to i8*
  %bitcast306 = bitcast [14 x i32]* getelementptr inbounds ([14 x i32]* @comp_to_san.type_to_char, i32 1) to i8*
  %arrayidx57 = getelementptr inbounds [14 x i32]* @comp_to_san.type_to_char, i32 0, i64 %idxprom56
  %44 = load i32* %arrayidx57, align 4
  %call58 = call i32 (i8*, i8*, ...)* @sprintf(i8* %39, i8* getelementptr inbounds ([11 x i8]* @.str4401, i32 0, i32 0), i32 %conv53, i32 %conv54, i32 %42, i32 %44) #1
  br label %if.end59

if.end59:                                         ; preds = %if.else52, %if.then48
  br label %if.end60

if.end60:                                         ; preds = %if.end59, %if.end
  br label %if.end208

if.else61:                                        ; preds = %lor.lhs.false
  %castled = getelementptr inbounds %struct.move_s* %move, i32 0, i32 4
  %45 = load i32* %castled, align 4
  %cmp62 = icmp ne i32 %45, 0
  br i1 %cmp62, label %if.then64, label %if.else77

if.then64:                                        ; preds = %if.else61
  %castled65 = getelementptr inbounds %struct.move_s* %move, i32 0, i32 4
  %46 = load i32* %castled65, align 4
  %cmp66 = icmp eq i32 %46, 1
  br i1 %cmp66, label %if.then72, label %lor.lhs.false68

lor.lhs.false68:                                  ; preds = %if.then64
  %castled69 = getelementptr inbounds %struct.move_s* %move, i32 0, i32 4
  %47 = load i32* %castled69, align 4
  %cmp70 = icmp eq i32 %47, 3
  br i1 %cmp70, label %if.then72, label %if.else74

if.then72:                                        ; preds = %lor.lhs.false68, %if.then64
  %48 = load i8** %str.addr, align 8
  %bitcast324 = bitcast i8** %str.addr to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast324, i8** %base.alloca325, i8** %bound.alloca326)
  %base.load327 = load i8** %base.alloca325
  %bound.load328 = load i8** %bound.alloca326
  %call73 = call i32 (i8*, i8*, ...)* @sprintf(i8* %48, i8* getelementptr inbounds ([4 x i8]* @.str5402, i32 0, i32 0)) #1
  br label %if.end76

if.else74:                                        ; preds = %lor.lhs.false68
  %49 = load i8** %str.addr, align 8
  %bitcast329 = bitcast i8** %str.addr to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast329, i8** %base.alloca330, i8** %bound.alloca331)
  %base.load332 = load i8** %base.alloca330
  %bound.load333 = load i8** %bound.alloca331
  %call75 = call i32 (i8*, i8*, ...)* @sprintf(i8* %49, i8* getelementptr inbounds ([6 x i8]* @.str6403, i32 0, i32 0)) #1
  br label %if.end76

if.end76:                                         ; preds = %if.else74, %if.then72
  br label %if.end207

if.else77:                                        ; preds = %if.else61
  store i32 -1, i32* %ambig, align 4
  store i32 0, i32* %num_moves, align 4
  %arrayidx78 = getelementptr inbounds [512 x %struct.move_s]* %moves, i32 0, i64 0
  call void @__softboundcets_allocate_shadow_stack_space(i32 2)
  call void @__softboundcets_store_base_shadow_stack(i8* %bitcast245, i32 1)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bitcast247, i32 1)
  call void @gen(%struct.move_s* %arrayidx78)
  call void @__softboundcets_deallocate_shadow_stack_space()
  %50 = load i32* @numb_moves, align 4
  store i32 %50, i32* %num_moves, align 4
  %call79 = call i32 @in_check()
  store i32 %call79, i32* %ic, align 4
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.else77
  %51 = load i32* %i, align 4
  %52 = load i32* %num_moves, align 4
  %cmp80 = icmp slt i32 %51, %52
  br i1 %cmp80, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %53 = load i32* %i, align 4
  %idxprom82 = sext i32 %53 to i64
  %arrayidx83 = getelementptr inbounds [512 x %struct.move_s]* %moves, i32 0, i64 %idxprom82
  %target84 = getelementptr inbounds %struct.move_s* %arrayidx83, i32 0, i32 1
  %54 = load i32* %target84, align 4
  %target85 = getelementptr inbounds %struct.move_s* %move, i32 0, i32 1
  %55 = load i32* %target85, align 4
  %cmp86 = icmp eq i32 %54, %55
  br i1 %cmp86, label %land.lhs.true88, label %if.end115

land.lhs.true88:                                  ; preds = %for.body
  %56 = load i32* %i, align 4
  %idxprom89 = sext i32 %56 to i64
  %arrayidx90 = getelementptr inbounds [512 x %struct.move_s]* %moves, i32 0, i64 %idxprom89
  %from91 = getelementptr inbounds %struct.move_s* %arrayidx90, i32 0, i32 0
  %57 = load i32* %from91, align 4
  %idxprom92 = sext i32 %57 to i64
  %arrayidx93 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom92
  %58 = load i32* %arrayidx93, align 4
  %from94 = getelementptr inbounds %struct.move_s* %move, i32 0, i32 0
  %59 = load i32* %from94, align 4
  %idxprom95 = sext i32 %59 to i64
  %arrayidx96 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom95
  %60 = load i32* %arrayidx96, align 4
  %cmp97 = icmp eq i32 %58, %60
  br i1 %cmp97, label %land.lhs.true99, label %if.end115

land.lhs.true99:                                  ; preds = %land.lhs.true88
  %61 = load i32* %i, align 4
  %idxprom100 = sext i32 %61 to i64
  %arrayidx101 = getelementptr inbounds [512 x %struct.move_s]* %moves, i32 0, i64 %idxprom100
  %from102 = getelementptr inbounds %struct.move_s* %arrayidx101, i32 0, i32 0
  %62 = load i32* %from102, align 4
  %from103 = getelementptr inbounds %struct.move_s* %move, i32 0, i32 0
  %63 = load i32* %from103, align 4
  %cmp104 = icmp ne i32 %62, %63
  br i1 %cmp104, label %if.then106, label %if.end115

if.then106:                                       ; preds = %land.lhs.true99
  %arrayidx107 = getelementptr inbounds [512 x %struct.move_s]* %moves, i32 0, i64 0
  %64 = load i32* %i, align 4
  call void @__softboundcets_allocate_shadow_stack_space(i32 2)
  call void @__softboundcets_store_base_shadow_stack(i8* %bitcast245, i32 1)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bitcast247, i32 1)
  call void @make(%struct.move_s* %arrayidx107, i32 %64)
  call void @__softboundcets_deallocate_shadow_stack_space()
  %arrayidx108 = getelementptr inbounds [512 x %struct.move_s]* %moves, i32 0, i64 0
  %65 = load i32* %i, align 4
  %66 = load i32* %ic, align 4
  call void @__softboundcets_allocate_shadow_stack_space(i32 2)
  call void @__softboundcets_store_base_shadow_stack(i8* %bitcast245, i32 1)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bitcast247, i32 1)
  %call109 = call i32 @check_legal(%struct.move_s* %arrayidx108, i32 %65, i32 %66)
  call void @__softboundcets_deallocate_shadow_stack_space()
  %tobool110 = icmp ne i32 %call109, 0
  br i1 %tobool110, label %if.then111, label %if.end113

if.then111:                                       ; preds = %if.then106
  %arrayidx112 = getelementptr inbounds [512 x %struct.move_s]* %moves, i32 0, i64 0
  %67 = load i32* %i, align 4
  call void @__softboundcets_allocate_shadow_stack_space(i32 2)
  call void @__softboundcets_store_base_shadow_stack(i8* %bitcast245, i32 1)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bitcast247, i32 1)
  call void @unmake(%struct.move_s* %arrayidx112, i32 %67)
  call void @__softboundcets_deallocate_shadow_stack_space()
  %68 = load i32* %i, align 4
  store i32 %68, i32* %ambig, align 4
  br label %for.end

if.end113:                                        ; preds = %if.then106
  %arrayidx114 = getelementptr inbounds [512 x %struct.move_s]* %moves, i32 0, i64 0
  %69 = load i32* %i, align 4
  call void @__softboundcets_allocate_shadow_stack_space(i32 2)
  call void @__softboundcets_store_base_shadow_stack(i8* %bitcast245, i32 1)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bitcast247, i32 1)
  call void @unmake(%struct.move_s* %arrayidx114, i32 %69)
  call void @__softboundcets_deallocate_shadow_stack_space()
  br label %if.end115

if.end115:                                        ; preds = %if.end113, %land.lhs.true99, %land.lhs.true88, %for.body
  br label %for.inc

for.inc:                                          ; preds = %if.end115
  %70 = load i32* %i, align 4
  %inc = add nsw i32 %70, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %if.then111, %for.cond
  %71 = load i32* %ambig, align 4
  %cmp116 = icmp ne i32 %71, -1
  br i1 %cmp116, label %if.then118, label %if.else183

if.then118:                                       ; preds = %for.end
  %target119 = getelementptr inbounds %struct.move_s* %move, i32 0, i32 1
  %72 = load i32* %target119, align 4
  %idxprom120 = sext i32 %72 to i64
  %arrayidx121 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom120
  %73 = load i32* %arrayidx121, align 4
  %cmp122 = icmp eq i32 %73, 13
  br i1 %cmp122, label %if.then124, label %if.else153

if.then124:                                       ; preds = %if.then118
  %74 = load i32* %ambig, align 4
  %idxprom125 = sext i32 %74 to i64
  %arrayidx126 = getelementptr inbounds [512 x %struct.move_s]* %moves, i32 0, i64 %idxprom125
  %from127 = getelementptr inbounds %struct.move_s* %arrayidx126, i32 0, i32 0
  %75 = load i32* %from127, align 4
  %idxprom128 = sext i32 %75 to i64
  %arrayidx129 = getelementptr inbounds [144 x i32]* @Xfile, i32 0, i64 %idxprom128
  %76 = load i32* %arrayidx129, align 4
  %from130 = getelementptr inbounds %struct.move_s* %move, i32 0, i32 0
  %77 = load i32* %from130, align 4
  %idxprom131 = sext i32 %77 to i64
  %arrayidx132 = getelementptr inbounds [144 x i32]* @Xfile, i32 0, i64 %idxprom131
  %78 = load i32* %arrayidx132, align 4
  %cmp133 = icmp ne i32 %76, %78
  br i1 %cmp133, label %if.then135, label %if.else144

if.then135:                                       ; preds = %if.then124
  %79 = load i8** %str.addr, align 8
  %bitcast358 = bitcast i8** %str.addr to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast358, i8** %base.alloca359, i8** %bound.alloca360)
  %base.load361 = load i8** %base.alloca359
  %bound.load362 = load i8** %bound.alloca360
  %from136 = getelementptr inbounds %struct.move_s* %move, i32 0, i32 0
  %80 = load i32* %from136, align 4
  %idxprom137 = sext i32 %80 to i64
  %arrayidx138 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom137
  %81 = load i32* %arrayidx138, align 4
  %idxprom139 = sext i32 %81 to i64
  %bitcast363 = bitcast [14 x i32]* @comp_to_san.type_to_char to i8*
  %bitcast364 = bitcast [14 x i32]* getelementptr inbounds ([14 x i32]* @comp_to_san.type_to_char, i32 1) to i8*
  %arrayidx140 = getelementptr inbounds [14 x i32]* @comp_to_san.type_to_char, i32 0, i64 %idxprom139
  %82 = load i32* %arrayidx140, align 4
  %83 = load i8* %f_file, align 1
  %conv141 = sext i8 %83 to i32
  %84 = load i8* %t_file, align 1
  %conv142 = sext i8 %84 to i32
  %85 = load i32* %t_rank, align 4
  %call143 = call i32 (i8*, i8*, ...)* @sprintf(i8* %79, i8* getelementptr inbounds ([9 x i8]* @.str7404, i32 0, i32 0), i32 %82, i32 %conv141, i32 %conv142, i32 %85) #1
  br label %if.end152

if.else144:                                       ; preds = %if.then124
  %86 = load i8** %str.addr, align 8
  %bitcast365 = bitcast i8** %str.addr to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast365, i8** %base.alloca366, i8** %bound.alloca367)
  %base.load368 = load i8** %base.alloca366
  %bound.load369 = load i8** %bound.alloca367
  %from145 = getelementptr inbounds %struct.move_s* %move, i32 0, i32 0
  %87 = load i32* %from145, align 4
  %idxprom146 = sext i32 %87 to i64
  %arrayidx147 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom146
  %88 = load i32* %arrayidx147, align 4
  %idxprom148 = sext i32 %88 to i64
  %bitcast370 = bitcast [14 x i32]* @comp_to_san.type_to_char to i8*
  %bitcast371 = bitcast [14 x i32]* getelementptr inbounds ([14 x i32]* @comp_to_san.type_to_char, i32 1) to i8*
  %arrayidx149 = getelementptr inbounds [14 x i32]* @comp_to_san.type_to_char, i32 0, i64 %idxprom148
  %89 = load i32* %arrayidx149, align 4
  %90 = load i32* %f_rank, align 4
  %91 = load i8* %t_file, align 1
  %conv150 = sext i8 %91 to i32
  %92 = load i32* %t_rank, align 4
  %call151 = call i32 (i8*, i8*, ...)* @sprintf(i8* %86, i8* getelementptr inbounds ([9 x i8]* @.str8405, i32 0, i32 0), i32 %89, i32 %90, i32 %conv150, i32 %92) #1
  br label %if.end152

if.end152:                                        ; preds = %if.else144, %if.then135
  br label %if.end182

if.else153:                                       ; preds = %if.then118
  %93 = load i32* %ambig, align 4
  %idxprom154 = sext i32 %93 to i64
  %arrayidx155 = getelementptr inbounds [512 x %struct.move_s]* %moves, i32 0, i64 %idxprom154
  %from156 = getelementptr inbounds %struct.move_s* %arrayidx155, i32 0, i32 0
  %94 = load i32* %from156, align 4
  %idxprom157 = sext i32 %94 to i64
  %arrayidx158 = getelementptr inbounds [144 x i32]* @Xfile, i32 0, i64 %idxprom157
  %95 = load i32* %arrayidx158, align 4
  %from159 = getelementptr inbounds %struct.move_s* %move, i32 0, i32 0
  %96 = load i32* %from159, align 4
  %idxprom160 = sext i32 %96 to i64
  %arrayidx161 = getelementptr inbounds [144 x i32]* @Xfile, i32 0, i64 %idxprom160
  %97 = load i32* %arrayidx161, align 4
  %cmp162 = icmp ne i32 %95, %97
  br i1 %cmp162, label %if.then164, label %if.else173

if.then164:                                       ; preds = %if.else153
  %98 = load i8** %str.addr, align 8
  %bitcast372 = bitcast i8** %str.addr to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast372, i8** %base.alloca373, i8** %bound.alloca374)
  %base.load375 = load i8** %base.alloca373
  %bound.load376 = load i8** %bound.alloca374
  %from165 = getelementptr inbounds %struct.move_s* %move, i32 0, i32 0
  %99 = load i32* %from165, align 4
  %idxprom166 = sext i32 %99 to i64
  %arrayidx167 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom166
  %100 = load i32* %arrayidx167, align 4
  %idxprom168 = sext i32 %100 to i64
  %bitcast377 = bitcast [14 x i32]* @comp_to_san.type_to_char to i8*
  %bitcast378 = bitcast [14 x i32]* getelementptr inbounds ([14 x i32]* @comp_to_san.type_to_char, i32 1) to i8*
  %arrayidx169 = getelementptr inbounds [14 x i32]* @comp_to_san.type_to_char, i32 0, i64 %idxprom168
  %101 = load i32* %arrayidx169, align 4
  %102 = load i8* %f_file, align 1
  %conv170 = sext i8 %102 to i32
  %103 = load i8* %t_file, align 1
  %conv171 = sext i8 %103 to i32
  %104 = load i32* %t_rank, align 4
  %call172 = call i32 (i8*, i8*, ...)* @sprintf(i8* %98, i8* getelementptr inbounds ([10 x i8]* @.str9406, i32 0, i32 0), i32 %101, i32 %conv170, i32 %conv171, i32 %104) #1
  br label %if.end181

if.else173:                                       ; preds = %if.else153
  %105 = load i8** %str.addr, align 8
  %bitcast379 = bitcast i8** %str.addr to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast379, i8** %base.alloca380, i8** %bound.alloca381)
  %base.load382 = load i8** %base.alloca380
  %bound.load383 = load i8** %bound.alloca381
  %from174 = getelementptr inbounds %struct.move_s* %move, i32 0, i32 0
  %106 = load i32* %from174, align 4
  %idxprom175 = sext i32 %106 to i64
  %arrayidx176 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom175
  %107 = load i32* %arrayidx176, align 4
  %idxprom177 = sext i32 %107 to i64
  %bitcast384 = bitcast [14 x i32]* @comp_to_san.type_to_char to i8*
  %bitcast385 = bitcast [14 x i32]* getelementptr inbounds ([14 x i32]* @comp_to_san.type_to_char, i32 1) to i8*
  %arrayidx178 = getelementptr inbounds [14 x i32]* @comp_to_san.type_to_char, i32 0, i64 %idxprom177
  %108 = load i32* %arrayidx178, align 4
  %109 = load i32* %f_rank, align 4
  %110 = load i8* %t_file, align 1
  %conv179 = sext i8 %110 to i32
  %111 = load i32* %t_rank, align 4
  %call180 = call i32 (i8*, i8*, ...)* @sprintf(i8* %105, i8* getelementptr inbounds ([10 x i8]* @.str10407, i32 0, i32 0), i32 %108, i32 %109, i32 %conv179, i32 %111) #1
  br label %if.end181

if.end181:                                        ; preds = %if.else173, %if.then164
  br label %if.end182

if.end182:                                        ; preds = %if.end181, %if.end152
  br label %if.end206

if.else183:                                       ; preds = %for.end
  %target184 = getelementptr inbounds %struct.move_s* %move, i32 0, i32 1
  %112 = load i32* %target184, align 4
  %idxprom185 = sext i32 %112 to i64
  %arrayidx186 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom185
  %113 = load i32* %arrayidx186, align 4
  %cmp187 = icmp eq i32 %113, 13
  br i1 %cmp187, label %if.then189, label %if.else197

if.then189:                                       ; preds = %if.else183
  %114 = load i8** %str.addr, align 8
  %bitcast344 = bitcast i8** %str.addr to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast344, i8** %base.alloca345, i8** %bound.alloca346)
  %base.load347 = load i8** %base.alloca345
  %bound.load348 = load i8** %bound.alloca346
  %from190 = getelementptr inbounds %struct.move_s* %move, i32 0, i32 0
  %115 = load i32* %from190, align 4
  %idxprom191 = sext i32 %115 to i64
  %arrayidx192 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom191
  %116 = load i32* %arrayidx192, align 4
  %idxprom193 = sext i32 %116 to i64
  %bitcast349 = bitcast [14 x i32]* @comp_to_san.type_to_char to i8*
  %bitcast350 = bitcast [14 x i32]* getelementptr inbounds ([14 x i32]* @comp_to_san.type_to_char, i32 1) to i8*
  %arrayidx194 = getelementptr inbounds [14 x i32]* @comp_to_san.type_to_char, i32 0, i64 %idxprom193
  %117 = load i32* %arrayidx194, align 4
  %118 = load i8* %t_file, align 1
  %conv195 = sext i8 %118 to i32
  %119 = load i32* %t_rank, align 4
  %call196 = call i32 (i8*, i8*, ...)* @sprintf(i8* %114, i8* getelementptr inbounds ([7 x i8]* @.str11408, i32 0, i32 0), i32 %117, i32 %conv195, i32 %119) #1
  br label %if.end205

if.else197:                                       ; preds = %if.else183
  %120 = load i8** %str.addr, align 8
  %bitcast351 = bitcast i8** %str.addr to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast351, i8** %base.alloca352, i8** %bound.alloca353)
  %base.load354 = load i8** %base.alloca352
  %bound.load355 = load i8** %bound.alloca353
  %from198 = getelementptr inbounds %struct.move_s* %move, i32 0, i32 0
  %121 = load i32* %from198, align 4
  %idxprom199 = sext i32 %121 to i64
  %arrayidx200 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom199
  %122 = load i32* %arrayidx200, align 4
  %idxprom201 = sext i32 %122 to i64
  %bitcast356 = bitcast [14 x i32]* @comp_to_san.type_to_char to i8*
  %bitcast357 = bitcast [14 x i32]* getelementptr inbounds ([14 x i32]* @comp_to_san.type_to_char, i32 1) to i8*
  %arrayidx202 = getelementptr inbounds [14 x i32]* @comp_to_san.type_to_char, i32 0, i64 %idxprom201
  %123 = load i32* %arrayidx202, align 4
  %124 = load i8* %t_file, align 1
  %conv203 = sext i8 %124 to i32
  %125 = load i32* %t_rank, align 4
  %call204 = call i32 (i8*, i8*, ...)* @sprintf(i8* %120, i8* getelementptr inbounds ([8 x i8]* @.str3400, i32 0, i32 0), i32 %123, i32 %conv203, i32 %125) #1
  br label %if.end205

if.end205:                                        ; preds = %if.else197, %if.then189
  br label %if.end206

if.end206:                                        ; preds = %if.end205, %if.end182
  br label %if.end207

if.end207:                                        ; preds = %if.end206, %if.end76
  br label %if.end208

if.end208:                                        ; preds = %if.end207, %if.end60
  br label %if.end209

if.end209:                                        ; preds = %if.end208, %if.then
  call void @__softboundcets_allocate_shadow_stack_space(i32 2)
  call void @__softboundcets_store_base_shadow_stack(i8* null, i32 1)
  call void @__softboundcets_store_bound_shadow_stack(i8* inttoptr (i64 281474976710656 to i8*), i32 1)
  call void @make(%struct.move_s* %move, i32 0)
  call void @__softboundcets_deallocate_shadow_stack_space()
  call void @__softboundcets_allocate_shadow_stack_space(i32 2)
  call void @__softboundcets_store_base_shadow_stack(i8* null, i32 1)
  call void @__softboundcets_store_bound_shadow_stack(i8* inttoptr (i64 281474976710656 to i8*), i32 1)
  %call210 = call i32 @check_legal(%struct.move_s* %move, i32 0, i32 1)
  call void @__softboundcets_deallocate_shadow_stack_space()
  %tobool211 = icmp ne i32 %call210, 0
  br i1 %tobool211, label %if.end214, label %if.then212

if.then212:                                       ; preds = %if.end209
  %126 = load i8** %str.addr, align 8
  %bitcast295 = bitcast i8** %str.addr to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast295, i8** %base.alloca296, i8** %bound.alloca297)
  %base.load298 = load i8** %base.alloca296
  %bound.load299 = load i8** %bound.alloca297
  call void @__softboundcets_allocate_shadow_stack_space(i32 3)
  call void @__softboundcets_store_base_shadow_stack(i8* %base.load298, i32 1)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bound.load299, i32 1)
  call void @__softboundcets_store_base_shadow_stack(i8* getelementptr inbounds ([5 x i8]* @.str12409, i32 0, i32 0), i32 2)
  call void @__softboundcets_store_bound_shadow_stack(i8* getelementptr inbounds ([5 x i8]* @.str12409, i32 1, i32 0), i32 2)
  %call213 = call i8* @softboundcets_strcpy(i8* %126, i8* getelementptr inbounds ([5 x i8]* @.str12409, i32 0, i32 0)) #1
  %127 = call i8* @__softboundcets_load_base_shadow_stack(i32 0)
  %128 = call i8* @__softboundcets_load_bound_shadow_stack(i32 0)
  call void @__softboundcets_deallocate_shadow_stack_space()
  call void @__softboundcets_allocate_shadow_stack_space(i32 2)
  call void @__softboundcets_store_base_shadow_stack(i8* null, i32 1)
  call void @__softboundcets_store_bound_shadow_stack(i8* inttoptr (i64 281474976710656 to i8*), i32 1)
  call void @unmake(%struct.move_s* %move, i32 0)
  call void @__softboundcets_deallocate_shadow_stack_space()
  br label %return

if.end214:                                        ; preds = %if.end209
  %call215 = call i32 @in_check()
  %tobool216 = icmp ne i32 %call215, 0
  br i1 %tobool216, label %if.then217, label %if.end241

if.then217:                                       ; preds = %if.end214
  store i32 1, i32* %mate, align 4
  store i32 0, i32* %evasions, align 4
  %arrayidx218 = getelementptr inbounds [512 x %struct.move_s]* %evade_moves, i32 0, i64 0
  call void @__softboundcets_allocate_shadow_stack_space(i32 2)
  call void @__softboundcets_store_base_shadow_stack(i8* %bitcast249, i32 1)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bitcast251, i32 1)
  call void @gen(%struct.move_s* %arrayidx218)
  call void @__softboundcets_deallocate_shadow_stack_space()
  %129 = load i32* @numb_moves, align 4
  store i32 %129, i32* %evasions, align 4
  store i32 0, i32* %i, align 4
  br label %for.cond219

for.cond219:                                      ; preds = %for.inc231, %if.then217
  %130 = load i32* %i, align 4
  %131 = load i32* %evasions, align 4
  %cmp220 = icmp slt i32 %130, %131
  br i1 %cmp220, label %for.body222, label %for.end233

for.body222:                                      ; preds = %for.cond219
  %arrayidx223 = getelementptr inbounds [512 x %struct.move_s]* %evade_moves, i32 0, i64 0
  %132 = load i32* %i, align 4
  call void @__softboundcets_allocate_shadow_stack_space(i32 2)
  call void @__softboundcets_store_base_shadow_stack(i8* %bitcast249, i32 1)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bitcast251, i32 1)
  call void @make(%struct.move_s* %arrayidx223, i32 %132)
  call void @__softboundcets_deallocate_shadow_stack_space()
  %arrayidx224 = getelementptr inbounds [512 x %struct.move_s]* %evade_moves, i32 0, i64 0
  %133 = load i32* %i, align 4
  call void @__softboundcets_allocate_shadow_stack_space(i32 2)
  call void @__softboundcets_store_base_shadow_stack(i8* %bitcast249, i32 1)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bitcast251, i32 1)
  %call225 = call i32 @check_legal(%struct.move_s* %arrayidx224, i32 %133, i32 1)
  call void @__softboundcets_deallocate_shadow_stack_space()
  %tobool226 = icmp ne i32 %call225, 0
  br i1 %tobool226, label %if.then227, label %if.end229

if.then227:                                       ; preds = %for.body222
  store i32 0, i32* %mate, align 4
  %arrayidx228 = getelementptr inbounds [512 x %struct.move_s]* %evade_moves, i32 0, i64 0
  %134 = load i32* %i, align 4
  call void @__softboundcets_allocate_shadow_stack_space(i32 2)
  call void @__softboundcets_store_base_shadow_stack(i8* %bitcast249, i32 1)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bitcast251, i32 1)
  call void @unmake(%struct.move_s* %arrayidx228, i32 %134)
  call void @__softboundcets_deallocate_shadow_stack_space()
  br label %for.end233

if.end229:                                        ; preds = %for.body222
  %arrayidx230 = getelementptr inbounds [512 x %struct.move_s]* %evade_moves, i32 0, i64 0
  %135 = load i32* %i, align 4
  call void @__softboundcets_allocate_shadow_stack_space(i32 2)
  call void @__softboundcets_store_base_shadow_stack(i8* %bitcast249, i32 1)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bitcast251, i32 1)
  call void @unmake(%struct.move_s* %arrayidx230, i32 %135)
  call void @__softboundcets_deallocate_shadow_stack_space()
  br label %for.inc231

for.inc231:                                       ; preds = %if.end229
  %136 = load i32* %i, align 4
  %inc232 = add nsw i32 %136, 1
  store i32 %inc232, i32* %i, align 4
  br label %for.cond219

for.end233:                                       ; preds = %if.then227, %for.cond219
  %137 = load i32* %mate, align 4
  %cmp234 = icmp eq i32 %137, 1
  br i1 %cmp234, label %if.then236, label %if.else238

if.then236:                                       ; preds = %for.end233
  %138 = load i8** %str.addr, align 8
  %bitcast334 = bitcast i8** %str.addr to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast334, i8** %base.alloca335, i8** %bound.alloca336)
  %base.load337 = load i8** %base.alloca335
  %bound.load338 = load i8** %bound.alloca336
  call void @__softboundcets_allocate_shadow_stack_space(i32 3)
  call void @__softboundcets_store_base_shadow_stack(i8* %base.load337, i32 1)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bound.load338, i32 1)
  call void @__softboundcets_store_base_shadow_stack(i8* getelementptr inbounds ([2 x i8]* @.str13410, i32 0, i32 0), i32 2)
  call void @__softboundcets_store_bound_shadow_stack(i8* getelementptr inbounds ([2 x i8]* @.str13410, i32 1, i32 0), i32 2)
  %call237 = call i8* @softboundcets_strcat(i8* %138, i8* getelementptr inbounds ([2 x i8]* @.str13410, i32 0, i32 0)) #1
  %139 = call i8* @__softboundcets_load_base_shadow_stack(i32 0)
  %140 = call i8* @__softboundcets_load_bound_shadow_stack(i32 0)
  call void @__softboundcets_deallocate_shadow_stack_space()
  br label %if.end240

if.else238:                                       ; preds = %for.end233
  %141 = load i8** %str.addr, align 8
  %bitcast339 = bitcast i8** %str.addr to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast339, i8** %base.alloca340, i8** %bound.alloca341)
  %base.load342 = load i8** %base.alloca340
  %bound.load343 = load i8** %bound.alloca341
  call void @__softboundcets_allocate_shadow_stack_space(i32 3)
  call void @__softboundcets_store_base_shadow_stack(i8* %base.load342, i32 1)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bound.load343, i32 1)
  call void @__softboundcets_store_base_shadow_stack(i8* getelementptr inbounds ([2 x i8]* @.str14411, i32 0, i32 0), i32 2)
  call void @__softboundcets_store_bound_shadow_stack(i8* getelementptr inbounds ([2 x i8]* @.str14411, i32 1, i32 0), i32 2)
  %call239 = call i8* @softboundcets_strcat(i8* %141, i8* getelementptr inbounds ([2 x i8]* @.str14411, i32 0, i32 0)) #1
  %142 = call i8* @__softboundcets_load_base_shadow_stack(i32 0)
  %143 = call i8* @__softboundcets_load_bound_shadow_stack(i32 0)
  call void @__softboundcets_deallocate_shadow_stack_space()
  br label %if.end240

if.end240:                                        ; preds = %if.else238, %if.then236
  br label %if.end241

if.end241:                                        ; preds = %if.end240, %if.end214
  call void @__softboundcets_allocate_shadow_stack_space(i32 2)
  call void @__softboundcets_store_base_shadow_stack(i8* null, i32 1)
  call void @__softboundcets_store_bound_shadow_stack(i8* inttoptr (i64 281474976710656 to i8*), i32 1)
  call void @unmake(%struct.move_s* %move, i32 0)
  call void @__softboundcets_deallocate_shadow_stack_space()
  br label %return

return:                                           ; preds = %if.end241, %if.then212
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @comp_to_coord(%struct.move_s* byval align 8 %move, i8* %str) #0 {
entry:
  %base.alloca127 = alloca i8*
  %bound.alloca128 = alloca i8*
  %base.alloca122 = alloca i8*
  %bound.alloca123 = alloca i8*
  %base.alloca117 = alloca i8*
  %bound.alloca118 = alloca i8*
  %base.alloca112 = alloca i8*
  %bound.alloca113 = alloca i8*
  %base.alloca107 = alloca i8*
  %bound.alloca108 = alloca i8*
  %base.alloca102 = alloca i8*
  %bound.alloca103 = alloca i8*
  %base.alloca = alloca i8*
  %bound.alloca = alloca i8*
  %0 = call i8* @__softboundcets_load_base_shadow_stack(i32 2)
  %1 = call i8* @__softboundcets_load_bound_shadow_stack(i32 2)
  %str.addr = alloca i8*, align 8
  %str.addr68 = bitcast i8** %str.addr to i8**
  %bitcast = bitcast i8** %str.addr to i8*
  %mtmp = getelementptr i8** %str.addr68, i32 1
  %bitcast69 = bitcast i8** %mtmp to i8*
  %prom = alloca i32, align 4
  %prom70 = bitcast i32* %prom to i32*
  %bitcast71 = bitcast i32* %prom to i8*
  %mtmp72 = getelementptr i32* %prom70, i32 1
  %bitcast73 = bitcast i32* %mtmp72 to i8*
  %from = alloca i32, align 4
  %from74 = bitcast i32* %from to i32*
  %bitcast75 = bitcast i32* %from to i8*
  %mtmp76 = getelementptr i32* %from74, i32 1
  %bitcast77 = bitcast i32* %mtmp76 to i8*
  %target = alloca i32, align 4
  %target78 = bitcast i32* %target to i32*
  %bitcast79 = bitcast i32* %target to i8*
  %mtmp80 = getelementptr i32* %target78, i32 1
  %bitcast81 = bitcast i32* %mtmp80 to i8*
  %f_rank = alloca i32, align 4
  %f_rank82 = bitcast i32* %f_rank to i32*
  %bitcast83 = bitcast i32* %f_rank to i8*
  %mtmp84 = getelementptr i32* %f_rank82, i32 1
  %bitcast85 = bitcast i32* %mtmp84 to i8*
  %t_rank = alloca i32, align 4
  %t_rank86 = bitcast i32* %t_rank to i32*
  %bitcast87 = bitcast i32* %t_rank to i8*
  %mtmp88 = getelementptr i32* %t_rank86, i32 1
  %bitcast89 = bitcast i32* %mtmp88 to i8*
  %converter = alloca i32, align 4
  %converter90 = bitcast i32* %converter to i32*
  %bitcast91 = bitcast i32* %converter to i8*
  %mtmp92 = getelementptr i32* %converter90, i32 1
  %bitcast93 = bitcast i32* %mtmp92 to i8*
  %f_file = alloca i8, align 1
  %f_file94 = bitcast i8* %f_file to i8*
  %mtmp95 = getelementptr i8* %f_file94, i32 1
  %t_file = alloca i8, align 1
  %t_file96 = bitcast i8* %t_file to i8*
  %mtmp97 = getelementptr i8* %t_file96, i32 1
  store i8* %str, i8** %str.addr, align 8
  %bitcast131 = bitcast i8** %str.addr to i8*
  call void @__softboundcets_metadata_store(i8* %bitcast131, i8* %0, i8* %1)
  %promoted = getelementptr inbounds %struct.move_s* %move, i32 0, i32 3
  %2 = load i32* %promoted, align 4
  store i32 %2, i32* %prom, align 4
  %from1 = getelementptr inbounds %struct.move_s* %move, i32 0, i32 0
  %3 = load i32* %from1, align 4
  store i32 %3, i32* %from, align 4
  %target2 = getelementptr inbounds %struct.move_s* %move, i32 0, i32 1
  %4 = load i32* %target2, align 4
  store i32 %4, i32* %target, align 4
  %5 = load i32* %from, align 4
  %idxprom = sext i32 %5 to i64
  %arrayidx = getelementptr inbounds [144 x i32]* @Xrank, i32 0, i64 %idxprom
  %6 = load i32* %arrayidx, align 4
  store i32 %6, i32* %f_rank, align 4
  %7 = load i32* %target, align 4
  %idxprom3 = sext i32 %7 to i64
  %arrayidx4 = getelementptr inbounds [144 x i32]* @Xrank, i32 0, i64 %idxprom3
  %8 = load i32* %arrayidx4, align 4
  store i32 %8, i32* %t_rank, align 4
  store i32 97, i32* %converter, align 4
  %9 = load i32* %from, align 4
  %idxprom5 = sext i32 %9 to i64
  %arrayidx6 = getelementptr inbounds [144 x i32]* @Xfile, i32 0, i64 %idxprom5
  %10 = load i32* %arrayidx6, align 4
  %11 = load i32* %converter, align 4
  %add = add nsw i32 %10, %11
  %sub = sub nsw i32 %add, 1
  %conv = trunc i32 %sub to i8
  store i8 %conv, i8* %f_file, align 1
  %12 = load i32* %target, align 4
  %idxprom7 = sext i32 %12 to i64
  %arrayidx8 = getelementptr inbounds [144 x i32]* @Xfile, i32 0, i64 %idxprom7
  %13 = load i32* %arrayidx8, align 4
  %14 = load i32* %converter, align 4
  %add9 = add nsw i32 %13, %14
  %sub10 = sub nsw i32 %add9, 1
  %conv11 = trunc i32 %sub10 to i8
  store i8 %conv11, i8* %t_file, align 1
  %15 = load i32* %from, align 4
  %cmp = icmp eq i32 %15, 0
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  %16 = load i8** %str.addr, align 8
  %bitcast98 = bitcast i8** %str.addr to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast98, i8** %base.alloca, i8** %bound.alloca)
  %base.load = load i8** %base.alloca
  %bound.load = load i8** %bound.alloca
  %17 = load i32* %prom, align 4
  %idxprom13 = sext i32 %17 to i64
  %bitcast99 = bitcast [14 x i32]* @comp_to_coord.type_to_char to i8*
  %bitcast100 = bitcast [14 x i32]* getelementptr inbounds ([14 x i32]* @comp_to_coord.type_to_char, i32 1) to i8*
  %arrayidx14 = getelementptr inbounds [14 x i32]* @comp_to_coord.type_to_char, i32 0, i64 %idxprom13
  %18 = load i32* %arrayidx14, align 4
  %19 = load i8* %t_file, align 1
  %conv15 = sext i8 %19 to i32
  %20 = load i32* %t_rank, align 4
  %call = call i32 (i8*, i8*, ...)* @sprintf(i8* %16, i8* getelementptr inbounds ([8 x i8]* @.str396, i32 0, i32 0), i32 %18, i32 %conv15, i32 %20) #1
  br label %if.end67

if.else:                                          ; preds = %entry
  %21 = load i32* %prom, align 4
  %tobool = icmp ne i32 %21, 0
  br i1 %tobool, label %if.else20, label %if.then16

if.then16:                                        ; preds = %if.else
  %22 = load i8** %str.addr, align 8
  %bitcast101 = bitcast i8** %str.addr to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast101, i8** %base.alloca102, i8** %bound.alloca103)
  %base.load104 = load i8** %base.alloca102
  %bound.load105 = load i8** %bound.alloca103
  %23 = load i8* %f_file, align 1
  %conv17 = sext i8 %23 to i32
  %24 = load i32* %f_rank, align 4
  %25 = load i8* %t_file, align 1
  %conv18 = sext i8 %25 to i32
  %26 = load i32* %t_rank, align 4
  %call19 = call i32 (i8*, i8*, ...)* @sprintf(i8* %22, i8* getelementptr inbounds ([9 x i8]* @.str8405, i32 0, i32 0), i32 %conv17, i32 %24, i32 %conv18, i32 %26) #1
  br label %if.end66

if.else20:                                        ; preds = %if.else
  %27 = load i32* %prom, align 4
  %cmp21 = icmp eq i32 %27, 3
  br i1 %cmp21, label %if.then25, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.else20
  %28 = load i32* %prom, align 4
  %cmp23 = icmp eq i32 %28, 4
  br i1 %cmp23, label %if.then25, label %if.else29

if.then25:                                        ; preds = %lor.lhs.false, %if.else20
  %29 = load i8** %str.addr, align 8
  %bitcast106 = bitcast i8** %str.addr to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast106, i8** %base.alloca107, i8** %bound.alloca108)
  %base.load109 = load i8** %base.alloca107
  %bound.load110 = load i8** %bound.alloca108
  %30 = load i8* %f_file, align 1
  %conv26 = sext i8 %30 to i32
  %31 = load i32* %f_rank, align 4
  %32 = load i8* %t_file, align 1
  %conv27 = sext i8 %32 to i32
  %33 = load i32* %t_rank, align 4
  %call28 = call i32 (i8*, i8*, ...)* @sprintf(i8* %29, i8* getelementptr inbounds ([10 x i8]* @.str15412, i32 0, i32 0), i32 %conv26, i32 %31, i32 %conv27, i32 %33) #1
  br label %if.end65

if.else29:                                        ; preds = %lor.lhs.false
  %34 = load i32* %prom, align 4
  %cmp30 = icmp eq i32 %34, 7
  br i1 %cmp30, label %if.then35, label %lor.lhs.false32

lor.lhs.false32:                                  ; preds = %if.else29
  %35 = load i32* %prom, align 4
  %cmp33 = icmp eq i32 %35, 8
  br i1 %cmp33, label %if.then35, label %if.else39

if.then35:                                        ; preds = %lor.lhs.false32, %if.else29
  %36 = load i8** %str.addr, align 8
  %bitcast111 = bitcast i8** %str.addr to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast111, i8** %base.alloca112, i8** %bound.alloca113)
  %base.load114 = load i8** %base.alloca112
  %bound.load115 = load i8** %bound.alloca113
  %37 = load i8* %f_file, align 1
  %conv36 = sext i8 %37 to i32
  %38 = load i32* %f_rank, align 4
  %39 = load i8* %t_file, align 1
  %conv37 = sext i8 %39 to i32
  %40 = load i32* %t_rank, align 4
  %call38 = call i32 (i8*, i8*, ...)* @sprintf(i8* %36, i8* getelementptr inbounds ([10 x i8]* @.str16413, i32 0, i32 0), i32 %conv36, i32 %38, i32 %conv37, i32 %40) #1
  br label %if.end64

if.else39:                                        ; preds = %lor.lhs.false32
  %41 = load i32* %prom, align 4
  %cmp40 = icmp eq i32 %41, 11
  br i1 %cmp40, label %if.then45, label %lor.lhs.false42

lor.lhs.false42:                                  ; preds = %if.else39
  %42 = load i32* %prom, align 4
  %cmp43 = icmp eq i32 %42, 12
  br i1 %cmp43, label %if.then45, label %if.else49

if.then45:                                        ; preds = %lor.lhs.false42, %if.else39
  %43 = load i8** %str.addr, align 8
  %bitcast116 = bitcast i8** %str.addr to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast116, i8** %base.alloca117, i8** %bound.alloca118)
  %base.load119 = load i8** %base.alloca117
  %bound.load120 = load i8** %bound.alloca118
  %44 = load i8* %f_file, align 1
  %conv46 = sext i8 %44 to i32
  %45 = load i32* %f_rank, align 4
  %46 = load i8* %t_file, align 1
  %conv47 = sext i8 %46 to i32
  %47 = load i32* %t_rank, align 4
  %call48 = call i32 (i8*, i8*, ...)* @sprintf(i8* %43, i8* getelementptr inbounds ([10 x i8]* @.str17414, i32 0, i32 0), i32 %conv46, i32 %45, i32 %conv47, i32 %47) #1
  br label %if.end63

if.else49:                                        ; preds = %lor.lhs.false42
  %48 = load i32* %prom, align 4
  %cmp50 = icmp eq i32 %48, 5
  br i1 %cmp50, label %if.then55, label %lor.lhs.false52

lor.lhs.false52:                                  ; preds = %if.else49
  %49 = load i32* %prom, align 4
  %cmp53 = icmp eq i32 %49, 6
  br i1 %cmp53, label %if.then55, label %if.else59

if.then55:                                        ; preds = %lor.lhs.false52, %if.else49
  %50 = load i8** %str.addr, align 8
  %bitcast121 = bitcast i8** %str.addr to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast121, i8** %base.alloca122, i8** %bound.alloca123)
  %base.load124 = load i8** %base.alloca122
  %bound.load125 = load i8** %bound.alloca123
  %51 = load i8* %f_file, align 1
  %conv56 = sext i8 %51 to i32
  %52 = load i32* %f_rank, align 4
  %53 = load i8* %t_file, align 1
  %conv57 = sext i8 %53 to i32
  %54 = load i32* %t_rank, align 4
  %call58 = call i32 (i8*, i8*, ...)* @sprintf(i8* %50, i8* getelementptr inbounds ([10 x i8]* @.str18415, i32 0, i32 0), i32 %conv56, i32 %52, i32 %conv57, i32 %54) #1
  br label %if.end

if.else59:                                        ; preds = %lor.lhs.false52
  %55 = load i8** %str.addr, align 8
  %bitcast126 = bitcast i8** %str.addr to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast126, i8** %base.alloca127, i8** %bound.alloca128)
  %base.load129 = load i8** %base.alloca127
  %bound.load130 = load i8** %bound.alloca128
  %56 = load i8* %f_file, align 1
  %conv60 = sext i8 %56 to i32
  %57 = load i32* %f_rank, align 4
  %58 = load i8* %t_file, align 1
  %conv61 = sext i8 %58 to i32
  %59 = load i32* %t_rank, align 4
  %call62 = call i32 (i8*, i8*, ...)* @sprintf(i8* %55, i8* getelementptr inbounds ([10 x i8]* @.str19416, i32 0, i32 0), i32 %conv60, i32 %57, i32 %conv61, i32 %59) #1
  br label %if.end

if.end:                                           ; preds = %if.else59, %if.then55
  br label %if.end63

if.end63:                                         ; preds = %if.end, %if.then45
  br label %if.end64

if.end64:                                         ; preds = %if.end63, %if.then35
  br label %if.end65

if.end65:                                         ; preds = %if.end64, %if.then25
  br label %if.end66

if.end66:                                         ; preds = %if.end65, %if.then16
  br label %if.end67

if.end67:                                         ; preds = %if.end66, %if.then
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @display_board(%struct._IO_FILE* %stream, i32 %color) #0 {
entry:
  %base.alloca146 = alloca i8*
  %bound.alloca147 = alloca i8*
  %base.alloca141 = alloca i8*
  %bound.alloca142 = alloca i8*
  %base.alloca136 = alloca i8*
  %bound.alloca137 = alloca i8*
  %base.alloca131 = alloca i8*
  %bound.alloca132 = alloca i8*
  %base.alloca126 = alloca i8*
  %bound.alloca127 = alloca i8*
  %base.alloca121 = alloca i8*
  %bound.alloca122 = alloca i8*
  %base.alloca116 = alloca i8*
  %bound.alloca117 = alloca i8*
  %base.alloca111 = alloca i8*
  %bound.alloca112 = alloca i8*
  %base.alloca106 = alloca i8*
  %bound.alloca107 = alloca i8*
  %base.alloca101 = alloca i8*
  %bound.alloca102 = alloca i8*
  %base.alloca96 = alloca i8*
  %bound.alloca97 = alloca i8*
  %base.alloca91 = alloca i8*
  %bound.alloca92 = alloca i8*
  %base.alloca86 = alloca i8*
  %bound.alloca87 = alloca i8*
  %base.alloca81 = alloca i8*
  %bound.alloca82 = alloca i8*
  %base.alloca76 = alloca i8*
  %bound.alloca77 = alloca i8*
  %base.alloca = alloca i8*
  %bound.alloca = alloca i8*
  %0 = call i8* @__softboundcets_load_base_shadow_stack(i32 1)
  %1 = call i8* @__softboundcets_load_bound_shadow_stack(i32 1)
  %stream.addr = alloca %struct._IO_FILE*, align 8
  %stream.addr48 = bitcast %struct._IO_FILE** %stream.addr to %struct._IO_FILE**
  %bitcast = bitcast %struct._IO_FILE** %stream.addr to i8*
  %mtmp = getelementptr %struct._IO_FILE** %stream.addr48, i32 1
  %bitcast49 = bitcast %struct._IO_FILE** %mtmp to i8*
  %color.addr = alloca i32, align 4
  %color.addr50 = bitcast i32* %color.addr to i32*
  %bitcast51 = bitcast i32* %color.addr to i8*
  %mtmp52 = getelementptr i32* %color.addr50, i32 1
  %bitcast53 = bitcast i32* %mtmp52 to i8*
  %line_sep = alloca i8*, align 8
  %line_sep54 = bitcast i8** %line_sep to i8**
  %bitcast55 = bitcast i8** %line_sep to i8*
  %mtmp56 = getelementptr i8** %line_sep54, i32 1
  %bitcast57 = bitcast i8** %mtmp56 to i8*
  %piece_rep = alloca [14 x i8*], align 16
  %piece_rep58 = bitcast [14 x i8*]* %piece_rep to [14 x i8*]*
  %bitcast59 = bitcast [14 x i8*]* %piece_rep to i8*
  %mtmp60 = getelementptr [14 x i8*]* %piece_rep58, i32 1
  %bitcast61 = bitcast [14 x i8*]* %mtmp60 to i8*
  %a = alloca i32, align 4
  %a62 = bitcast i32* %a to i32*
  %bitcast63 = bitcast i32* %a to i8*
  %mtmp64 = getelementptr i32* %a62, i32 1
  %bitcast65 = bitcast i32* %mtmp64 to i8*
  %b = alloca i32, align 4
  %b66 = bitcast i32* %b to i32*
  %bitcast67 = bitcast i32* %b to i8*
  %mtmp68 = getelementptr i32* %b66, i32 1
  %bitcast69 = bitcast i32* %mtmp68 to i8*
  %c = alloca i32, align 4
  %c70 = bitcast i32* %c to i32*
  %bitcast71 = bitcast i32* %c to i8*
  %mtmp72 = getelementptr i32* %c70, i32 1
  %bitcast73 = bitcast i32* %mtmp72 to i8*
  store %struct._IO_FILE* %stream, %struct._IO_FILE** %stream.addr, align 8
  %bitcast150 = bitcast %struct._IO_FILE** %stream.addr to i8*
  call void @__softboundcets_metadata_store(i8* %bitcast150, i8* %0, i8* %1)
  store i32 %color, i32* %color.addr, align 4
  store i8* getelementptr inbounds ([42 x i8]* @.str20417, i32 0, i32 0), i8** %line_sep, align 8
  %bitcast151 = bitcast i8** %line_sep to i8*
  %bitcast152 = bitcast [42 x i8]* @.str20417 to i8*
  %bitcast153 = bitcast [42 x i8]* getelementptr inbounds ([42 x i8]* @.str20417, i32 1) to i8*
  call void @__softboundcets_metadata_store(i8* %bitcast151, i8* %bitcast152, i8* %bitcast153)
  %2 = bitcast [14 x i8*]* %piece_rep to i8*
  call void @__softboundcets_memcopy_check(i8* %2, i8* bitcast ([14 x i8*]* @display_board.piece_rep to i8*), i64 112, i8* %bitcast59, i8* %bitcast61, i8* bitcast ([14 x i8*]* @display_board.piece_rep to i8*), i8* bitcast ([14 x i8*]* getelementptr inbounds ([14 x i8*]* @display_board.piece_rep, i32 1) to i8*))
  call void @__softboundcets_copy_metadata(i8* %2, i8* bitcast ([14 x i8*]* @display_board.piece_rep to i8*), i64 112)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %2, i8* bitcast ([14 x i8*]* @display_board.piece_rep to i8*), i64 112, i32 16, i1 false)
  %3 = load i32* %color.addr, align 4
  %rem = srem i32 %3, 2
  %tobool = icmp ne i32 %rem, 0
  br i1 %tobool, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  %4 = load %struct._IO_FILE** %stream.addr, align 8
  %bitcast74 = bitcast %struct._IO_FILE** %stream.addr to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast74, i8** %base.alloca, i8** %bound.alloca)
  %base.load = load i8** %base.alloca
  %bound.load = load i8** %bound.alloca
  %5 = load i8** %line_sep, align 8
  %bitcast75 = bitcast i8** %line_sep to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast75, i8** %base.alloca76, i8** %bound.alloca77)
  %base.load78 = load i8** %base.alloca76
  %bound.load79 = load i8** %bound.alloca77
  %call = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %4, i8* getelementptr inbounds ([6 x i8]* @.str35432, i32 0, i32 0), i8* %5)
  store i32 1, i32* %a, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc14, %if.then
  %6 = load i32* %a, align 4
  %cmp = icmp sle i32 %6, 8
  br i1 %cmp, label %for.body, label %for.end16

for.body:                                         ; preds = %for.cond
  %7 = load %struct._IO_FILE** %stream.addr, align 8
  %bitcast90 = bitcast %struct._IO_FILE** %stream.addr to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast90, i8** %base.alloca91, i8** %bound.alloca92)
  %base.load93 = load i8** %base.alloca91
  %bound.load94 = load i8** %bound.alloca92
  %8 = load i32* %a, align 4
  %sub = sub nsw i32 9, %8
  %call1 = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %7, i8* getelementptr inbounds ([5 x i8]* @.str36433, i32 0, i32 0), i32 %sub)
  store i32 0, i32* %b, align 4
  br label %for.cond2

for.cond2:                                        ; preds = %for.inc, %for.body
  %9 = load i32* %b, align 4
  %cmp3 = icmp sle i32 %9, 11
  br i1 %cmp3, label %for.body4, label %for.end

for.body4:                                        ; preds = %for.cond2
  %10 = load i32* %a, align 4
  %mul = mul nsw i32 %10, 12
  %sub5 = sub nsw i32 120, %mul
  %11 = load i32* %b, align 4
  %add = add nsw i32 %sub5, %11
  store i32 %add, i32* %c, align 4
  %12 = load i32* %c, align 4
  %idxprom = sext i32 %12 to i64
  %arrayidx = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom
  %13 = load i32* %arrayidx, align 4
  %cmp6 = icmp ne i32 %13, 0
  br i1 %cmp6, label %if.then7, label %if.end

if.then7:                                         ; preds = %for.body4
  %14 = load %struct._IO_FILE** %stream.addr, align 8
  %bitcast130 = bitcast %struct._IO_FILE** %stream.addr to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast130, i8** %base.alloca131, i8** %bound.alloca132)
  %base.load133 = load i8** %base.alloca131
  %bound.load134 = load i8** %bound.alloca132
  %15 = load i32* %c, align 4
  %idxprom8 = sext i32 %15 to i64
  %arrayidx9 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom8
  %16 = load i32* %arrayidx9, align 4
  %idxprom10 = sext i32 %16 to i64
  %arrayidx11 = getelementptr inbounds [14 x i8*]* %piece_rep, i32 0, i64 %idxprom10
  %17 = load i8** %arrayidx11, align 8
  %bitcast135 = bitcast i8** %arrayidx11 to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast135, i8** %base.alloca136, i8** %bound.alloca137)
  %base.load138 = load i8** %base.alloca136
  %bound.load139 = load i8** %bound.alloca137
  %call12 = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %14, i8* getelementptr inbounds ([6 x i8]* @.str37434, i32 0, i32 0), i8* %17)
  br label %if.end

if.end:                                           ; preds = %if.then7, %for.body4
  br label %for.inc

for.inc:                                          ; preds = %if.end
  %18 = load i32* %b, align 4
  %inc = add nsw i32 %18, 1
  store i32 %inc, i32* %b, align 4
  br label %for.cond2

for.end:                                          ; preds = %for.cond2
  %19 = load %struct._IO_FILE** %stream.addr, align 8
  %bitcast110 = bitcast %struct._IO_FILE** %stream.addr to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast110, i8** %base.alloca111, i8** %bound.alloca112)
  %base.load113 = load i8** %base.alloca111
  %bound.load114 = load i8** %bound.alloca112
  %20 = load i8** %line_sep, align 8
  %bitcast115 = bitcast i8** %line_sep to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast115, i8** %base.alloca116, i8** %bound.alloca117)
  %base.load118 = load i8** %base.alloca116
  %bound.load119 = load i8** %bound.alloca117
  %call13 = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %19, i8* getelementptr inbounds ([7 x i8]* @.str38435, i32 0, i32 0), i8* %20)
  br label %for.inc14

for.inc14:                                        ; preds = %for.end
  %21 = load i32* %a, align 4
  %inc15 = add nsw i32 %21, 1
  store i32 %inc15, i32* %a, align 4
  br label %for.cond

for.end16:                                        ; preds = %for.cond
  %22 = load %struct._IO_FILE** %stream.addr, align 8
  %bitcast95 = bitcast %struct._IO_FILE** %stream.addr to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast95, i8** %base.alloca96, i8** %bound.alloca97)
  %base.load98 = load i8** %base.alloca96
  %bound.load99 = load i8** %bound.alloca97
  %call17 = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %22, i8* getelementptr inbounds ([45 x i8]* @.str39436, i32 0, i32 0))
  br label %if.end47

if.else:                                          ; preds = %entry
  %23 = load %struct._IO_FILE** %stream.addr, align 8
  %bitcast80 = bitcast %struct._IO_FILE** %stream.addr to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast80, i8** %base.alloca81, i8** %bound.alloca82)
  %base.load83 = load i8** %base.alloca81
  %bound.load84 = load i8** %bound.alloca82
  %24 = load i8** %line_sep, align 8
  %bitcast85 = bitcast i8** %line_sep to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast85, i8** %base.alloca86, i8** %bound.alloca87)
  %base.load88 = load i8** %base.alloca86
  %bound.load89 = load i8** %bound.alloca87
  %call18 = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %23, i8* getelementptr inbounds ([6 x i8]* @.str35432, i32 0, i32 0), i8* %24)
  store i32 1, i32* %a, align 4
  br label %for.cond19

for.cond19:                                       ; preds = %for.inc43, %if.else
  %25 = load i32* %a, align 4
  %cmp20 = icmp sle i32 %25, 8
  br i1 %cmp20, label %for.body21, label %for.end45

for.body21:                                       ; preds = %for.cond19
  %26 = load %struct._IO_FILE** %stream.addr, align 8
  %bitcast100 = bitcast %struct._IO_FILE** %stream.addr to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast100, i8** %base.alloca101, i8** %bound.alloca102)
  %base.load103 = load i8** %base.alloca101
  %bound.load104 = load i8** %bound.alloca102
  %27 = load i32* %a, align 4
  %call22 = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %26, i8* getelementptr inbounds ([5 x i8]* @.str36433, i32 0, i32 0), i32 %27)
  store i32 0, i32* %b, align 4
  br label %for.cond23

for.cond23:                                       ; preds = %for.inc39, %for.body21
  %28 = load i32* %b, align 4
  %cmp24 = icmp sle i32 %28, 11
  br i1 %cmp24, label %for.body25, label %for.end41

for.body25:                                       ; preds = %for.cond23
  %29 = load i32* %a, align 4
  %mul26 = mul nsw i32 %29, 12
  %add27 = add nsw i32 24, %mul26
  %30 = load i32* %b, align 4
  %sub28 = sub nsw i32 %add27, %30
  store i32 %sub28, i32* %c, align 4
  %31 = load i32* %c, align 4
  %idxprom29 = sext i32 %31 to i64
  %arrayidx30 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom29
  %32 = load i32* %arrayidx30, align 4
  %cmp31 = icmp ne i32 %32, 0
  br i1 %cmp31, label %if.then32, label %if.end38

if.then32:                                        ; preds = %for.body25
  %33 = load %struct._IO_FILE** %stream.addr, align 8
  %bitcast140 = bitcast %struct._IO_FILE** %stream.addr to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast140, i8** %base.alloca141, i8** %bound.alloca142)
  %base.load143 = load i8** %base.alloca141
  %bound.load144 = load i8** %bound.alloca142
  %34 = load i32* %c, align 4
  %idxprom33 = sext i32 %34 to i64
  %arrayidx34 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom33
  %35 = load i32* %arrayidx34, align 4
  %idxprom35 = sext i32 %35 to i64
  %arrayidx36 = getelementptr inbounds [14 x i8*]* %piece_rep, i32 0, i64 %idxprom35
  %36 = load i8** %arrayidx36, align 8
  %bitcast145 = bitcast i8** %arrayidx36 to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast145, i8** %base.alloca146, i8** %bound.alloca147)
  %base.load148 = load i8** %base.alloca146
  %bound.load149 = load i8** %bound.alloca147
  %call37 = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %33, i8* getelementptr inbounds ([6 x i8]* @.str37434, i32 0, i32 0), i8* %36)
  br label %if.end38

if.end38:                                         ; preds = %if.then32, %for.body25
  br label %for.inc39

for.inc39:                                        ; preds = %if.end38
  %37 = load i32* %b, align 4
  %inc40 = add nsw i32 %37, 1
  store i32 %inc40, i32* %b, align 4
  br label %for.cond23

for.end41:                                        ; preds = %for.cond23
  %38 = load %struct._IO_FILE** %stream.addr, align 8
  %bitcast120 = bitcast %struct._IO_FILE** %stream.addr to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast120, i8** %base.alloca121, i8** %bound.alloca122)
  %base.load123 = load i8** %base.alloca121
  %bound.load124 = load i8** %bound.alloca122
  %39 = load i8** %line_sep, align 8
  %bitcast125 = bitcast i8** %line_sep to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast125, i8** %base.alloca126, i8** %bound.alloca127)
  %base.load128 = load i8** %base.alloca126
  %bound.load129 = load i8** %bound.alloca127
  %call42 = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %38, i8* getelementptr inbounds ([7 x i8]* @.str38435, i32 0, i32 0), i8* %39)
  br label %for.inc43

for.inc43:                                        ; preds = %for.end41
  %40 = load i32* %a, align 4
  %inc44 = add nsw i32 %40, 1
  store i32 %inc44, i32* %a, align 4
  br label %for.cond19

for.end45:                                        ; preds = %for.cond19
  %41 = load %struct._IO_FILE** %stream.addr, align 8
  %bitcast105 = bitcast %struct._IO_FILE** %stream.addr to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast105, i8** %base.alloca106, i8** %bound.alloca107)
  %base.load108 = load i8** %base.alloca106
  %bound.load109 = load i8** %bound.alloca107
  %call46 = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %41, i8* getelementptr inbounds ([45 x i8]* @.str40437, i32 0, i32 0))
  br label %if.end47

if.end47:                                         ; preds = %for.end45, %for.end16
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @init_game() #0 {
entry:
  %init_board = alloca [144 x i32], align 16
  %init_board1 = bitcast [144 x i32]* %init_board to [144 x i32]*
  %bitcast = bitcast [144 x i32]* %init_board to i8*
  %mtmp = getelementptr [144 x i32]* %init_board1, i32 1
  %bitcast2 = bitcast [144 x i32]* %mtmp to i8*
  %0 = bitcast [144 x i32]* %init_board to i8*
  call void @__softboundcets_memcopy_check(i8* %0, i8* bitcast ([144 x i32]* @init_game.init_board to i8*), i64 576, i8* %bitcast, i8* %bitcast2, i8* bitcast ([144 x i32]* @init_game.init_board to i8*), i8* bitcast ([144 x i32]* getelementptr inbounds ([144 x i32]* @init_game.init_board, i32 1) to i8*))
  call void @__softboundcets_copy_metadata(i8* %0, i8* bitcast ([144 x i32]* @init_game.init_board to i8*), i64 576)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %0, i8* bitcast ([144 x i32]* @init_game.init_board to i8*), i64 576, i32 16, i1 false)
  %1 = bitcast [144 x i32]* %init_board to i8*
  call void @__softboundcets_memcopy_check(i8* bitcast ([144 x i32]* @board to i8*), i8* %1, i64 576, i8* null, i8* inttoptr (i64 281474976710656 to i8*), i8* %bitcast, i8* %bitcast2)
  call void @__softboundcets_copy_metadata(i8* bitcast ([144 x i32]* @board to i8*), i8* %1, i64 576)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* bitcast ([144 x i32]* @board to i8*), i8* %1, i64 576, i32 16, i1 false)
  call void @__softboundcets_memset_check(i8* bitcast ([144 x i32]* @moved to i8*), i64 576, i8* null, i8* inttoptr (i64 281474976710656 to i8*))
  call void @llvm.memset.p0i8.i64(i8* bitcast ([144 x i32]* @moved to i8*), i8 0, i64 576, i32 16, i1 false)
  store i32 1, i32* @white_to_move, align 4
  store i32 0, i32* @ep_square, align 4
  store i32 30, i32* @wking_loc, align 4
  store i32 114, i32* @bking_loc, align 4
  store i32 0, i32* @white_castled, align 4
  store i32 0, i32* @black_castled, align 4
  store i32 0, i32* @result, align 4
  store i32 0, i32* @captures, align 4
  store i32 32, i32* @piece_count, align 4
  store i32 0, i32* @Material, align 4
  call void @__softboundcets_memset_check(i8* bitcast ([62 x i32]* @is_promoted to i8*), i64 248, i8* null, i8* inttoptr (i64 281474976710656 to i8*))
  call void @llvm.memset.p0i8.i64(i8* bitcast ([62 x i32]* @is_promoted to i8*), i8 0, i64 248, i32 16, i1 false)
  call void @__softboundcets_memset_check(i8* bitcast ([2 x [16 x i32]]* @holding to i8*), i64 128, i8* null, i8* inttoptr (i64 281474976710656 to i8*))
  call void @llvm.memset.p0i8.i64(i8* bitcast ([2 x [16 x i32]]* @holding to i8*), i8 0, i64 128, i32 16, i1 false)
  store i32 0, i32* @white_hand_eval, align 4
  store i32 0, i32* @black_hand_eval, align 4
  call void @reset_piece_square()
  store i32 0, i32* @bookidx, align 4
  store i32 0, i32* @book_ply, align 4
  store i32 0, i32* @fifty, align 4
  store i32 0, i32* @ply, align 4
  store i32 0, i32* @phase, align 4
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @reset_piece_square() #0 {
entry:
  %i = alloca i32, align 4
  %i37 = bitcast i32* %i to i32*
  %bitcast = bitcast i32* %i to i8*
  %mtmp = getelementptr i32* %i37, i32 1
  %bitcast38 = bitcast i32* %mtmp to i8*
  %promoted_board = alloca [144 x i32], align 16
  %promoted_board39 = bitcast [144 x i32]* %promoted_board to [144 x i32]*
  %bitcast40 = bitcast [144 x i32]* %promoted_board to i8*
  %mtmp41 = getelementptr [144 x i32]* %promoted_board39, i32 1
  %bitcast42 = bitcast [144 x i32]* %mtmp41 to i8*
  %0 = bitcast [144 x i32]* %promoted_board to i8*
  call void @__softboundcets_memset_check(i8* %0, i64 576, i8* %bitcast40, i8* %bitcast42)
  call void @llvm.memset.p0i8.i64(i8* %0, i8 0, i64 576, i32 16, i1 false)
  store i32 1, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %1 = load i32* %i, align 4
  %2 = load i32* @piece_count, align 4
  %cmp = icmp sle i32 %1, %2
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %3 = load i32* %i, align 4
  %idxprom = sext i32 %3 to i64
  %arrayidx = getelementptr inbounds [62 x i32]* @is_promoted, i32 0, i64 %idxprom
  %4 = load i32* %arrayidx, align 4
  %tobool = icmp ne i32 %4, 0
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; preds = %for.body
  %5 = load i32* %i, align 4
  %idxprom1 = sext i32 %5 to i64
  %arrayidx2 = getelementptr inbounds [62 x i32]* @pieces, i32 0, i64 %idxprom1
  %6 = load i32* %arrayidx2, align 4
  %idxprom3 = sext i32 %6 to i64
  %arrayidx4 = getelementptr inbounds [144 x i32]* %promoted_board, i32 0, i64 %idxprom3
  store i32 1, i32* %arrayidx4, align 4
  br label %if.end

if.end:                                           ; preds = %if.then, %for.body
  br label %for.inc

for.inc:                                          ; preds = %if.end
  %7 = load i32* %i, align 4
  %inc = add nsw i32 %7, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  store i32 0, i32* @Material, align 4
  store i32 0, i32* @piece_count, align 4
  call void @__softboundcets_memset_check(i8* bitcast ([62 x i32]* @pieces to i8*), i64 248, i8* null, i8* inttoptr (i64 281474976710656 to i8*))
  call void @llvm.memset.p0i8.i64(i8* bitcast ([62 x i32]* @pieces to i8*), i8 0, i64 248, i32 16, i1 false)
  call void @__softboundcets_memset_check(i8* bitcast ([62 x i32]* @is_promoted to i8*), i64 248, i8* null, i8* inttoptr (i64 281474976710656 to i8*))
  call void @llvm.memset.p0i8.i64(i8* bitcast ([62 x i32]* @is_promoted to i8*), i8 0, i64 248, i32 16, i1 false)
  store i32 0, i32* getelementptr inbounds ([62 x i32]* @pieces, i32 0, i64 0), align 4
  store i32 26, i32* %i, align 4
  br label %for.cond5

for.cond5:                                        ; preds = %for.inc34, %for.end
  %8 = load i32* %i, align 4
  %cmp6 = icmp slt i32 %8, 118
  br i1 %cmp6, label %for.body7, label %for.end36

for.body7:                                        ; preds = %for.cond5
  %9 = load i32* %i, align 4
  %idxprom8 = sext i32 %9 to i64
  %arrayidx9 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom8
  %10 = load i32* %arrayidx9, align 4
  %tobool10 = icmp ne i32 %10, 0
  br i1 %tobool10, label %land.lhs.true, label %if.else

land.lhs.true:                                    ; preds = %for.body7
  %11 = load i32* %i, align 4
  %idxprom11 = sext i32 %11 to i64
  %arrayidx12 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom11
  %12 = load i32* %arrayidx12, align 4
  %cmp13 = icmp slt i32 %12, 13
  br i1 %cmp13, label %if.then14, label %if.else

if.then14:                                        ; preds = %land.lhs.true
  %13 = load i32* %i, align 4
  %idxprom15 = sext i32 %13 to i64
  %arrayidx16 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom15
  %14 = load i32* %arrayidx16, align 4
  %idxprom17 = sext i32 %14 to i64
  %arrayidx18 = getelementptr inbounds [14 x i32]* @material, i32 0, i64 %idxprom17
  %15 = load i32* %arrayidx18, align 4
  %16 = load i32* @Material, align 4
  %add = add nsw i32 %16, %15
  store i32 %add, i32* @Material, align 4
  %17 = load i32* @piece_count, align 4
  %add19 = add nsw i32 %17, 1
  store i32 %add19, i32* @piece_count, align 4
  %18 = load i32* %i, align 4
  %19 = load i32* @piece_count, align 4
  %idxprom20 = sext i32 %19 to i64
  %arrayidx21 = getelementptr inbounds [62 x i32]* @pieces, i32 0, i64 %idxprom20
  store i32 %18, i32* %arrayidx21, align 4
  %20 = load i32* @piece_count, align 4
  %21 = load i32* %i, align 4
  %idxprom22 = sext i32 %21 to i64
  %arrayidx23 = getelementptr inbounds [144 x i32]* @squares, i32 0, i64 %idxprom22
  store i32 %20, i32* %arrayidx23, align 4
  %22 = load i32* %i, align 4
  %idxprom24 = sext i32 %22 to i64
  %arrayidx25 = getelementptr inbounds [144 x i32]* %promoted_board, i32 0, i64 %idxprom24
  %23 = load i32* %arrayidx25, align 4
  %tobool26 = icmp ne i32 %23, 0
  br i1 %tobool26, label %if.then27, label %if.end30

if.then27:                                        ; preds = %if.then14
  %24 = load i32* @piece_count, align 4
  %idxprom28 = sext i32 %24 to i64
  %arrayidx29 = getelementptr inbounds [62 x i32]* @is_promoted, i32 0, i64 %idxprom28
  store i32 1, i32* %arrayidx29, align 4
  br label %if.end30

if.end30:                                         ; preds = %if.then27, %if.then14
  br label %if.end33

if.else:                                          ; preds = %land.lhs.true, %for.body7
  %25 = load i32* %i, align 4
  %idxprom31 = sext i32 %25 to i64
  %arrayidx32 = getelementptr inbounds [144 x i32]* @squares, i32 0, i64 %idxprom31
  store i32 0, i32* %arrayidx32, align 4
  br label %if.end33

if.end33:                                         ; preds = %if.else, %if.end30
  br label %for.inc34

for.inc34:                                        ; preds = %if.end33
  %26 = load i32* %i, align 4
  %inc35 = add nsw i32 %26, 1
  store i32 %inc35, i32* %i, align 4
  br label %for.cond5

for.end36:                                        ; preds = %for.cond5
  ret void
}

; Function Attrs: nounwind uwtable
define internal i32 @is_move(i8* %str) #0 {
entry:
  %base.alloca134 = alloca i8*
  %bound.alloca135 = alloca i8*
  %base.alloca129 = alloca i8*
  %bound.alloca130 = alloca i8*
  %base.alloca124 = alloca i8*
  %bound.alloca125 = alloca i8*
  %base.alloca119 = alloca i8*
  %bound.alloca120 = alloca i8*
  %base.alloca114 = alloca i8*
  %bound.alloca115 = alloca i8*
  %base.alloca109 = alloca i8*
  %bound.alloca110 = alloca i8*
  %base.alloca104 = alloca i8*
  %bound.alloca105 = alloca i8*
  %base.alloca99 = alloca i8*
  %bound.alloca100 = alloca i8*
  %base.alloca94 = alloca i8*
  %bound.alloca95 = alloca i8*
  %base.alloca89 = alloca i8*
  %bound.alloca90 = alloca i8*
  %base.alloca84 = alloca i8*
  %bound.alloca85 = alloca i8*
  %base.alloca79 = alloca i8*
  %bound.alloca80 = alloca i8*
  %base.alloca74 = alloca i8*
  %bound.alloca75 = alloca i8*
  %base.alloca69 = alloca i8*
  %bound.alloca70 = alloca i8*
  %base.alloca = alloca i8*
  %bound.alloca = alloca i8*
  %0 = call i8* @__softboundcets_load_base_shadow_stack(i32 1)
  %1 = call i8* @__softboundcets_load_bound_shadow_stack(i32 1)
  %retval = alloca i32, align 4
  %retval61 = bitcast i32* %retval to i32*
  %bitcast = bitcast i32* %retval to i8*
  %mtmp = getelementptr i32* %retval61, i32 1
  %bitcast62 = bitcast i32* %mtmp to i8*
  %str.addr = alloca i8*, align 8
  %str.addr63 = bitcast i8** %str.addr to i8**
  %bitcast64 = bitcast i8** %str.addr to i8*
  %mtmp65 = getelementptr i8** %str.addr63, i32 1
  %bitcast66 = bitcast i8** %mtmp65 to i8*
  store i8* %str, i8** %str.addr, align 8
  %bitcast138 = bitcast i8** %str.addr to i8*
  call void @__softboundcets_metadata_store(i8* %bitcast138, i8* %0, i8* %1)
  %2 = load i8** %str.addr, align 8
  %bitcast67 = bitcast i8** %str.addr to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast67, i8** %base.alloca, i8** %bound.alloca)
  %base.load = load i8** %base.alloca
  %bound.load = load i8** %bound.alloca
  %arrayidx = getelementptr inbounds i8* %2, i64 0
  %3 = load i8* %arrayidx, align 1
  %conv = sext i8 %3 to i32
  %idxprom = sext i32 %conv to i64
  call void @__softboundcets_allocate_shadow_stack_space(i32 1)
  %call = call i16** @softboundcets___ctype_b_loc() #5
  %4 = call i8* @__softboundcets_load_base_shadow_stack(i32 0)
  %5 = call i8* @__softboundcets_load_bound_shadow_stack(i32 0)
  call void @__softboundcets_deallocate_shadow_stack_space()
  %6 = load i16** %call, align 8
  %bitcast68 = bitcast i16** %call to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast68, i8** %base.alloca69, i8** %bound.alloca70)
  %base.load71 = load i8** %base.alloca69
  %bound.load72 = load i8** %bound.alloca70
  %arrayidx1 = getelementptr inbounds i16* %6, i64 %idxprom
  %7 = load i16* %arrayidx1, align 2
  %conv2 = zext i16 %7 to i32
  %and = and i32 %conv2, 1024
  %tobool = icmp ne i32 %and, 0
  br i1 %tobool, label %land.lhs.true, label %if.else

land.lhs.true:                                    ; preds = %entry
  %8 = load i8** %str.addr, align 8
  %bitcast73 = bitcast i8** %str.addr to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast73, i8** %base.alloca74, i8** %bound.alloca75)
  %base.load76 = load i8** %base.alloca74
  %bound.load77 = load i8** %bound.alloca75
  %arrayidx3 = getelementptr inbounds i8* %8, i64 1
  %9 = load i8* %arrayidx3, align 1
  %conv4 = sext i8 %9 to i32
  %idxprom5 = sext i32 %conv4 to i64
  call void @__softboundcets_allocate_shadow_stack_space(i32 1)
  %call6 = call i16** @softboundcets___ctype_b_loc() #5
  %10 = call i8* @__softboundcets_load_base_shadow_stack(i32 0)
  %11 = call i8* @__softboundcets_load_bound_shadow_stack(i32 0)
  call void @__softboundcets_deallocate_shadow_stack_space()
  %12 = load i16** %call6, align 8
  %bitcast78 = bitcast i16** %call6 to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast78, i8** %base.alloca79, i8** %bound.alloca80)
  %base.load81 = load i8** %base.alloca79
  %bound.load82 = load i8** %bound.alloca80
  %arrayidx7 = getelementptr inbounds i16* %12, i64 %idxprom5
  %13 = load i16* %arrayidx7, align 2
  %conv8 = zext i16 %13 to i32
  %and9 = and i32 %conv8, 2048
  %tobool10 = icmp ne i32 %and9, 0
  br i1 %tobool10, label %land.lhs.true11, label %if.else

land.lhs.true11:                                  ; preds = %land.lhs.true
  %14 = load i8** %str.addr, align 8
  %bitcast93 = bitcast i8** %str.addr to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast93, i8** %base.alloca94, i8** %bound.alloca95)
  %base.load96 = load i8** %base.alloca94
  %bound.load97 = load i8** %bound.alloca95
  %arrayidx12 = getelementptr inbounds i8* %14, i64 2
  %15 = load i8* %arrayidx12, align 1
  %conv13 = sext i8 %15 to i32
  %idxprom14 = sext i32 %conv13 to i64
  call void @__softboundcets_allocate_shadow_stack_space(i32 1)
  %call15 = call i16** @softboundcets___ctype_b_loc() #5
  %16 = call i8* @__softboundcets_load_base_shadow_stack(i32 0)
  %17 = call i8* @__softboundcets_load_bound_shadow_stack(i32 0)
  call void @__softboundcets_deallocate_shadow_stack_space()
  %18 = load i16** %call15, align 8
  %bitcast98 = bitcast i16** %call15 to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast98, i8** %base.alloca99, i8** %bound.alloca100)
  %base.load101 = load i8** %base.alloca99
  %bound.load102 = load i8** %bound.alloca100
  %arrayidx16 = getelementptr inbounds i16* %18, i64 %idxprom14
  %19 = load i16* %arrayidx16, align 2
  %conv17 = zext i16 %19 to i32
  %and18 = and i32 %conv17, 1024
  %tobool19 = icmp ne i32 %and18, 0
  br i1 %tobool19, label %land.lhs.true20, label %if.else

land.lhs.true20:                                  ; preds = %land.lhs.true11
  %20 = load i8** %str.addr, align 8
  %bitcast108 = bitcast i8** %str.addr to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast108, i8** %base.alloca109, i8** %bound.alloca110)
  %base.load111 = load i8** %base.alloca109
  %bound.load112 = load i8** %bound.alloca110
  %arrayidx21 = getelementptr inbounds i8* %20, i64 3
  %21 = load i8* %arrayidx21, align 1
  %conv22 = sext i8 %21 to i32
  %idxprom23 = sext i32 %conv22 to i64
  call void @__softboundcets_allocate_shadow_stack_space(i32 1)
  %call24 = call i16** @softboundcets___ctype_b_loc() #5
  %22 = call i8* @__softboundcets_load_base_shadow_stack(i32 0)
  %23 = call i8* @__softboundcets_load_bound_shadow_stack(i32 0)
  call void @__softboundcets_deallocate_shadow_stack_space()
  %24 = load i16** %call24, align 8
  %bitcast113 = bitcast i16** %call24 to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast113, i8** %base.alloca114, i8** %bound.alloca115)
  %base.load116 = load i8** %base.alloca114
  %bound.load117 = load i8** %bound.alloca115
  %arrayidx25 = getelementptr inbounds i16* %24, i64 %idxprom23
  %25 = load i16* %arrayidx25, align 2
  %conv26 = zext i16 %25 to i32
  %and27 = and i32 %conv26, 2048
  %tobool28 = icmp ne i32 %and27, 0
  br i1 %tobool28, label %if.then, label %if.else

if.then:                                          ; preds = %land.lhs.true20
  store i32 1, i32* %retval
  br label %return

if.else:                                          ; preds = %land.lhs.true20, %land.lhs.true11, %land.lhs.true, %entry
  %26 = load i8** %str.addr, align 8
  %bitcast83 = bitcast i8** %str.addr to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast83, i8** %base.alloca84, i8** %bound.alloca85)
  %base.load86 = load i8** %base.alloca84
  %bound.load87 = load i8** %bound.alloca85
  %arrayidx29 = getelementptr inbounds i8* %26, i64 0
  %27 = load i8* %arrayidx29, align 1
  %conv30 = sext i8 %27 to i32
  %idxprom31 = sext i32 %conv30 to i64
  call void @__softboundcets_allocate_shadow_stack_space(i32 1)
  %call32 = call i16** @softboundcets___ctype_b_loc() #5
  %28 = call i8* @__softboundcets_load_base_shadow_stack(i32 0)
  %29 = call i8* @__softboundcets_load_bound_shadow_stack(i32 0)
  call void @__softboundcets_deallocate_shadow_stack_space()
  %30 = load i16** %call32, align 8
  %bitcast88 = bitcast i16** %call32 to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast88, i8** %base.alloca89, i8** %bound.alloca90)
  %base.load91 = load i8** %base.alloca89
  %bound.load92 = load i8** %bound.alloca90
  %arrayidx33 = getelementptr inbounds i16* %30, i64 %idxprom31
  %31 = load i16* %arrayidx33, align 2
  %conv34 = zext i16 %31 to i32
  %and35 = and i32 %conv34, 1024
  %tobool36 = icmp ne i32 %and35, 0
  br i1 %tobool36, label %land.lhs.true37, label %if.else60

land.lhs.true37:                                  ; preds = %if.else
  %32 = load i8** %str.addr, align 8
  %bitcast103 = bitcast i8** %str.addr to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast103, i8** %base.alloca104, i8** %bound.alloca105)
  %base.load106 = load i8** %base.alloca104
  %bound.load107 = load i8** %bound.alloca105
  %arrayidx38 = getelementptr inbounds i8* %32, i64 1
  %33 = load i8* %arrayidx38, align 1
  %conv39 = sext i8 %33 to i32
  %cmp = icmp eq i32 %conv39, 64
  br i1 %cmp, label %land.lhs.true41, label %if.else60

land.lhs.true41:                                  ; preds = %land.lhs.true37
  %34 = load i8** %str.addr, align 8
  %bitcast118 = bitcast i8** %str.addr to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast118, i8** %base.alloca119, i8** %bound.alloca120)
  %base.load121 = load i8** %base.alloca119
  %bound.load122 = load i8** %bound.alloca120
  %arrayidx42 = getelementptr inbounds i8* %34, i64 2
  %35 = load i8* %arrayidx42, align 1
  %conv43 = sext i8 %35 to i32
  %idxprom44 = sext i32 %conv43 to i64
  call void @__softboundcets_allocate_shadow_stack_space(i32 1)
  %call45 = call i16** @softboundcets___ctype_b_loc() #5
  %36 = call i8* @__softboundcets_load_base_shadow_stack(i32 0)
  %37 = call i8* @__softboundcets_load_bound_shadow_stack(i32 0)
  call void @__softboundcets_deallocate_shadow_stack_space()
  %38 = load i16** %call45, align 8
  %bitcast123 = bitcast i16** %call45 to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast123, i8** %base.alloca124, i8** %bound.alloca125)
  %base.load126 = load i8** %base.alloca124
  %bound.load127 = load i8** %bound.alloca125
  %arrayidx46 = getelementptr inbounds i16* %38, i64 %idxprom44
  %39 = load i16* %arrayidx46, align 2
  %conv47 = zext i16 %39 to i32
  %and48 = and i32 %conv47, 1024
  %tobool49 = icmp ne i32 %and48, 0
  br i1 %tobool49, label %land.lhs.true50, label %if.else60

land.lhs.true50:                                  ; preds = %land.lhs.true41
  %40 = load i8** %str.addr, align 8
  %bitcast128 = bitcast i8** %str.addr to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast128, i8** %base.alloca129, i8** %bound.alloca130)
  %base.load131 = load i8** %base.alloca129
  %bound.load132 = load i8** %bound.alloca130
  %arrayidx51 = getelementptr inbounds i8* %40, i64 3
  %41 = load i8* %arrayidx51, align 1
  %conv52 = sext i8 %41 to i32
  %idxprom53 = sext i32 %conv52 to i64
  call void @__softboundcets_allocate_shadow_stack_space(i32 1)
  %call54 = call i16** @softboundcets___ctype_b_loc() #5
  %42 = call i8* @__softboundcets_load_base_shadow_stack(i32 0)
  %43 = call i8* @__softboundcets_load_bound_shadow_stack(i32 0)
  call void @__softboundcets_deallocate_shadow_stack_space()
  %44 = load i16** %call54, align 8
  %bitcast133 = bitcast i16** %call54 to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast133, i8** %base.alloca134, i8** %bound.alloca135)
  %base.load136 = load i8** %base.alloca134
  %bound.load137 = load i8** %bound.alloca135
  %arrayidx55 = getelementptr inbounds i16* %44, i64 %idxprom53
  %45 = load i16* %arrayidx55, align 2
  %conv56 = zext i16 %45 to i32
  %and57 = and i32 %conv56, 2048
  %tobool58 = icmp ne i32 %and57, 0
  br i1 %tobool58, label %if.then59, label %if.else60

if.then59:                                        ; preds = %land.lhs.true50
  store i32 1, i32* %retval
  br label %return

if.else60:                                        ; preds = %land.lhs.true50, %land.lhs.true41, %land.lhs.true37, %if.else
  store i32 0, i32* %retval
  br label %return

return:                                           ; preds = %if.else60, %if.then59, %if.then
  %46 = load i32* %retval
  ret i32 %46
}

; Function Attrs: nounwind uwtable
define internal void @perft_debug() #0 {
entry:
  %base.alloca110 = alloca i8*
  %bound.alloca111 = alloca i8*
  %base.alloca105 = alloca i8*
  %bound.alloca106 = alloca i8*
  %base.alloca100 = alloca i8*
  %bound.alloca101 = alloca i8*
  %base.alloca95 = alloca i8*
  %bound.alloca96 = alloca i8*
  %base.alloca90 = alloca i8*
  %bound.alloca91 = alloca i8*
  %base.alloca85 = alloca i8*
  %bound.alloca86 = alloca i8*
  %base.alloca80 = alloca i8*
  %bound.alloca81 = alloca i8*
  %base.alloca75 = alloca i8*
  %bound.alloca76 = alloca i8*
  %base.alloca70 = alloca i8*
  %bound.alloca71 = alloca i8*
  %base.alloca65 = alloca i8*
  %bound.alloca66 = alloca i8*
  %base.alloca60 = alloca i8*
  %bound.alloca61 = alloca i8*
  %base.alloca = alloca i8*
  %bound.alloca = alloca i8*
  %input = alloca [256 x i8], align 16
  %input44 = bitcast [256 x i8]* %input to [256 x i8]*
  %bitcast = bitcast [256 x i8]* %input to i8*
  %mtmp = getelementptr [256 x i8]* %input44, i32 1
  %bitcast45 = bitcast [256 x i8]* %mtmp to i8*
  %p = alloca i8*, align 8
  %p46 = bitcast i8** %p to i8**
  %bitcast47 = bitcast i8** %p to i8*
  %mtmp48 = getelementptr i8** %p46, i32 1
  %bitcast49 = bitcast i8** %mtmp48 to i8*
  %move = alloca %struct.move_s, align 4
  %move50 = bitcast %struct.move_s* %move to %struct.move_s*
  %bitcast51 = bitcast %struct.move_s* %move to i8*
  %mtmp52 = getelementptr %struct.move_s* %move50, i32 1
  %bitcast53 = bitcast %struct.move_s* %mtmp52 to i8*
  %depth = alloca i32, align 4
  %depth54 = bitcast i32* %depth to i32*
  %bitcast55 = bitcast i32* %depth to i8*
  %mtmp56 = getelementptr i32* %depth54, i32 1
  %bitcast57 = bitcast i32* %mtmp56 to i8*
  call void @init_game()
  br label %while.body

while.body:                                       ; preds = %if.end43, %entry
  %call = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([47 x i8]* @.str41438, i32 0, i32 0))
  %arraydecay = getelementptr inbounds [256 x i8]* %input, i32 0, i32 0
  %0 = load %struct._IO_FILE** @stdin, align 8
  %bitcast58 = bitcast %struct._IO_FILE** @stdin to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast58, i8** %base.alloca, i8** %bound.alloca)
  %base.load = load i8** %base.alloca
  %bound.load = load i8** %bound.alloca
  call void @__softboundcets_allocate_shadow_stack_space(i32 3)
  call void @__softboundcets_store_base_shadow_stack(i8* %bitcast, i32 1)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bitcast45, i32 1)
  call void @__softboundcets_store_base_shadow_stack(i8* %base.load, i32 2)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bound.load, i32 2)
  call void @rinput(i8* %arraydecay, i32 256, %struct._IO_FILE* %0)
  call void @__softboundcets_deallocate_shadow_stack_space()
  %arraydecay1 = getelementptr inbounds [256 x i8]* %input, i32 0, i32 0
  call void @__softboundcets_allocate_shadow_stack_space(i32 2)
  call void @__softboundcets_store_base_shadow_stack(i8* %bitcast, i32 1)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bitcast45, i32 1)
  %call2 = call i32 @softboundcets_atoi(i8* %arraydecay1) #6
  call void @__softboundcets_deallocate_shadow_stack_space()
  store i32 %call2, i32* %depth, align 4
  store i32 0, i32* @raw_nodes, align 4
  %1 = load i32* %depth, align 4
  call void @perft(i32 %1)
  %2 = load i32* %depth, align 4
  %3 = load i32* @raw_nodes, align 4
  %call3 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([31 x i8]* @.str42439, i32 0, i32 0), i32 %2, i32 %3)
  %4 = load %struct._IO_FILE** @stdout, align 8
  %bitcast59 = bitcast %struct._IO_FILE** @stdout to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast59, i8** %base.alloca60, i8** %bound.alloca61)
  %base.load62 = load i8** %base.alloca60
  %bound.load63 = load i8** %bound.alloca61
  call void @__softboundcets_allocate_shadow_stack_space(i32 2)
  call void @__softboundcets_store_base_shadow_stack(i8* %base.load62, i32 1)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bound.load63, i32 1)
  call void @display_board(%struct._IO_FILE* %4, i32 1)
  call void @__softboundcets_deallocate_shadow_stack_space()
  %call4 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([31 x i8]* @.str43440, i32 0, i32 0))
  %arraydecay5 = getelementptr inbounds [256 x i8]* %input, i32 0, i32 0
  %5 = load %struct._IO_FILE** @stdin, align 8
  %bitcast64 = bitcast %struct._IO_FILE** @stdin to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast64, i8** %base.alloca65, i8** %bound.alloca66)
  %base.load67 = load i8** %base.alloca65
  %bound.load68 = load i8** %bound.alloca66
  call void @__softboundcets_allocate_shadow_stack_space(i32 3)
  call void @__softboundcets_store_base_shadow_stack(i8* %bitcast, i32 1)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bitcast45, i32 1)
  call void @__softboundcets_store_base_shadow_stack(i8* %base.load67, i32 2)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bound.load68, i32 2)
  call void @rinput(i8* %arraydecay5, i32 256, %struct._IO_FILE* %5)
  call void @__softboundcets_deallocate_shadow_stack_space()
  %arraydecay6 = getelementptr inbounds [256 x i8]* %input, i32 0, i32 0
  store i8* %arraydecay6, i8** %p, align 8
  %bitcast114 = bitcast i8** %p to i8*
  call void @__softboundcets_metadata_store(i8* %bitcast114, i8* %bitcast, i8* %bitcast45)
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %while.body
  %6 = load i8** %p, align 8
  %bitcast69 = bitcast i8** %p to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast69, i8** %base.alloca70, i8** %bound.alloca71)
  %base.load72 = load i8** %base.alloca70
  %bound.load73 = load i8** %bound.alloca71
  %7 = load i8* %6, align 1
  %tobool = icmp ne i8 %7, 0
  br i1 %tobool, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %8 = load i8** %p, align 8
  %bitcast74 = bitcast i8** %p to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast74, i8** %base.alloca75, i8** %bound.alloca76)
  %base.load77 = load i8** %base.alloca75
  %bound.load78 = load i8** %bound.alloca76
  %9 = load i8* %8, align 1
  %conv = sext i8 %9 to i32
  %call7 = call i32 @softboundcets_tolower(i32 %conv) #1
  %conv8 = trunc i32 %call7 to i8
  %10 = load i8** %p, align 8
  %bitcast79 = bitcast i8** %p to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast79, i8** %base.alloca80, i8** %bound.alloca81)
  %base.load82 = load i8** %base.alloca80
  %bound.load83 = load i8** %bound.alloca81
  store i8 %conv8, i8* %10, align 1
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %11 = load i8** %p, align 8
  %bitcast84 = bitcast i8** %p to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast84, i8** %base.alloca85, i8** %bound.alloca86)
  %base.load87 = load i8** %base.alloca85
  %bound.load88 = load i8** %bound.alloca86
  %incdec.ptr = getelementptr inbounds i8* %11, i32 1
  store i8* %incdec.ptr, i8** %p, align 8
  %bitcast115 = bitcast i8** %p to i8*
  call void @__softboundcets_metadata_store(i8* %bitcast115, i8* %base.load87, i8* %bound.load88)
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %arraydecay9 = getelementptr inbounds [256 x i8]* %input, i32 0, i32 0
  call void @__softboundcets_allocate_shadow_stack_space(i32 3)
  call void @__softboundcets_store_base_shadow_stack(i8* %bitcast, i32 1)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bitcast45, i32 1)
  call void @__softboundcets_store_base_shadow_stack(i8* getelementptr inbounds ([5 x i8]* @.str44441, i32 0, i32 0), i32 2)
  call void @__softboundcets_store_bound_shadow_stack(i8* getelementptr inbounds ([5 x i8]* @.str44441, i32 1, i32 0), i32 2)
  %call10 = call i32 @softboundcets_strcmp(i8* %arraydecay9, i8* getelementptr inbounds ([5 x i8]* @.str44441, i32 0, i32 0)) #6
  call void @__softboundcets_deallocate_shadow_stack_space()
  %tobool11 = icmp ne i32 %call10, 0
  br i1 %tobool11, label %lor.lhs.false, label %if.then

lor.lhs.false:                                    ; preds = %for.end
  %arraydecay12 = getelementptr inbounds [256 x i8]* %input, i32 0, i32 0
  call void @__softboundcets_allocate_shadow_stack_space(i32 3)
  call void @__softboundcets_store_base_shadow_stack(i8* %bitcast, i32 1)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bitcast45, i32 1)
  call void @__softboundcets_store_base_shadow_stack(i8* getelementptr inbounds ([5 x i8]* @.str45442, i32 0, i32 0), i32 2)
  call void @__softboundcets_store_bound_shadow_stack(i8* getelementptr inbounds ([5 x i8]* @.str45442, i32 1, i32 0), i32 2)
  %call13 = call i32 @softboundcets_strcmp(i8* %arraydecay12, i8* getelementptr inbounds ([5 x i8]* @.str45442, i32 0, i32 0)) #6
  call void @__softboundcets_deallocate_shadow_stack_space()
  %tobool14 = icmp ne i32 %call13, 0
  br i1 %tobool14, label %if.end, label %if.then

if.then:                                          ; preds = %lor.lhs.false, %for.end
  call void @softboundcets_exit(i32 0) #4
  unreachable

if.end:                                           ; preds = %lor.lhs.false
  %arraydecay15 = getelementptr inbounds [256 x i8]* %input, i32 0, i32 0
  call void @__softboundcets_allocate_shadow_stack_space(i32 3)
  call void @__softboundcets_store_base_shadow_stack(i8* %bitcast, i32 1)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bitcast45, i32 1)
  call void @__softboundcets_store_base_shadow_stack(i8* %bitcast51, i32 2)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bitcast53, i32 2)
  %call16 = call i32 @verify_coord(i8* %arraydecay15, %struct.move_s* %move)
  call void @__softboundcets_deallocate_shadow_stack_space()
  %tobool17 = icmp ne i32 %call16, 0
  br i1 %tobool17, label %if.end43, label %if.then18

if.then18:                                        ; preds = %if.end
  br label %do.body

do.body:                                          ; preds = %do.cond, %if.then18
  %call19 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([58 x i8]* @.str46443, i32 0, i32 0))
  %arraydecay20 = getelementptr inbounds [256 x i8]* %input, i32 0, i32 0
  %12 = load %struct._IO_FILE** @stdin, align 8
  %bitcast89 = bitcast %struct._IO_FILE** @stdin to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast89, i8** %base.alloca90, i8** %bound.alloca91)
  %base.load92 = load i8** %base.alloca90
  %bound.load93 = load i8** %bound.alloca91
  call void @__softboundcets_allocate_shadow_stack_space(i32 3)
  call void @__softboundcets_store_base_shadow_stack(i8* %bitcast, i32 1)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bitcast45, i32 1)
  call void @__softboundcets_store_base_shadow_stack(i8* %base.load92, i32 2)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bound.load93, i32 2)
  call void @rinput(i8* %arraydecay20, i32 256, %struct._IO_FILE* %12)
  call void @__softboundcets_deallocate_shadow_stack_space()
  %arraydecay21 = getelementptr inbounds [256 x i8]* %input, i32 0, i32 0
  store i8* %arraydecay21, i8** %p, align 8
  %bitcast116 = bitcast i8** %p to i8*
  call void @__softboundcets_metadata_store(i8* %bitcast116, i8* %bitcast, i8* %bitcast45)
  br label %for.cond22

for.cond22:                                       ; preds = %for.inc28, %do.body
  %13 = load i8** %p, align 8
  %bitcast94 = bitcast i8** %p to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast94, i8** %base.alloca95, i8** %bound.alloca96)
  %base.load97 = load i8** %base.alloca95
  %bound.load98 = load i8** %bound.alloca96
  %14 = load i8* %13, align 1
  %tobool23 = icmp ne i8 %14, 0
  br i1 %tobool23, label %for.body24, label %for.end30

for.body24:                                       ; preds = %for.cond22
  %15 = load i8** %p, align 8
  %bitcast99 = bitcast i8** %p to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast99, i8** %base.alloca100, i8** %bound.alloca101)
  %base.load102 = load i8** %base.alloca100
  %bound.load103 = load i8** %bound.alloca101
  %16 = load i8* %15, align 1
  %conv25 = sext i8 %16 to i32
  %call26 = call i32 @softboundcets_tolower(i32 %conv25) #1
  %conv27 = trunc i32 %call26 to i8
  %17 = load i8** %p, align 8
  %bitcast104 = bitcast i8** %p to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast104, i8** %base.alloca105, i8** %bound.alloca106)
  %base.load107 = load i8** %base.alloca105
  %bound.load108 = load i8** %bound.alloca106
  store i8 %conv27, i8* %17, align 1
  br label %for.inc28

for.inc28:                                        ; preds = %for.body24
  %18 = load i8** %p, align 8
  %bitcast109 = bitcast i8** %p to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast109, i8** %base.alloca110, i8** %bound.alloca111)
  %base.load112 = load i8** %base.alloca110
  %bound.load113 = load i8** %bound.alloca111
  %incdec.ptr29 = getelementptr inbounds i8* %18, i32 1
  store i8* %incdec.ptr29, i8** %p, align 8
  %bitcast117 = bitcast i8** %p to i8*
  call void @__softboundcets_metadata_store(i8* %bitcast117, i8* %base.load112, i8* %bound.load113)
  br label %for.cond22

for.end30:                                        ; preds = %for.cond22
  %arraydecay31 = getelementptr inbounds [256 x i8]* %input, i32 0, i32 0
  call void @__softboundcets_allocate_shadow_stack_space(i32 3)
  call void @__softboundcets_store_base_shadow_stack(i8* %bitcast, i32 1)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bitcast45, i32 1)
  call void @__softboundcets_store_base_shadow_stack(i8* getelementptr inbounds ([5 x i8]* @.str44441, i32 0, i32 0), i32 2)
  call void @__softboundcets_store_bound_shadow_stack(i8* getelementptr inbounds ([5 x i8]* @.str44441, i32 1, i32 0), i32 2)
  %call32 = call i32 @softboundcets_strcmp(i8* %arraydecay31, i8* getelementptr inbounds ([5 x i8]* @.str44441, i32 0, i32 0)) #6
  call void @__softboundcets_deallocate_shadow_stack_space()
  %tobool33 = icmp ne i32 %call32, 0
  br i1 %tobool33, label %lor.lhs.false34, label %if.then38

lor.lhs.false34:                                  ; preds = %for.end30
  %arraydecay35 = getelementptr inbounds [256 x i8]* %input, i32 0, i32 0
  call void @__softboundcets_allocate_shadow_stack_space(i32 3)
  call void @__softboundcets_store_base_shadow_stack(i8* %bitcast, i32 1)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bitcast45, i32 1)
  call void @__softboundcets_store_base_shadow_stack(i8* getelementptr inbounds ([5 x i8]* @.str45442, i32 0, i32 0), i32 2)
  call void @__softboundcets_store_bound_shadow_stack(i8* getelementptr inbounds ([5 x i8]* @.str45442, i32 1, i32 0), i32 2)
  %call36 = call i32 @softboundcets_strcmp(i8* %arraydecay35, i8* getelementptr inbounds ([5 x i8]* @.str45442, i32 0, i32 0)) #6
  call void @__softboundcets_deallocate_shadow_stack_space()
  %tobool37 = icmp ne i32 %call36, 0
  br i1 %tobool37, label %if.end39, label %if.then38

if.then38:                                        ; preds = %lor.lhs.false34, %for.end30
  call void @softboundcets_exit(i32 0) #4
  unreachable

if.end39:                                         ; preds = %lor.lhs.false34
  br label %do.cond

do.cond:                                          ; preds = %if.end39
  %arraydecay40 = getelementptr inbounds [256 x i8]* %input, i32 0, i32 0
  call void @__softboundcets_allocate_shadow_stack_space(i32 3)
  call void @__softboundcets_store_base_shadow_stack(i8* %bitcast, i32 1)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bitcast45, i32 1)
  call void @__softboundcets_store_base_shadow_stack(i8* %bitcast51, i32 2)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bitcast53, i32 2)
  %call41 = call i32 @verify_coord(i8* %arraydecay40, %struct.move_s* %move)
  call void @__softboundcets_deallocate_shadow_stack_space()
  %tobool42 = icmp ne i32 %call41, 0
  %lnot = xor i1 %tobool42, true
  br i1 %lnot, label %do.body, label %do.end

do.end:                                           ; preds = %do.cond
  br label %if.end43

if.end43:                                         ; preds = %do.end, %if.end
  call void @__softboundcets_allocate_shadow_stack_space(i32 2)
  call void @__softboundcets_store_base_shadow_stack(i8* %bitcast51, i32 1)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bitcast53, i32 1)
  call void @make(%struct.move_s* %move, i32 0)
  call void @__softboundcets_deallocate_shadow_stack_space()
  br label %while.body

return:                                           ; No predecessors!
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @rinput(i8* %str, i32 %n, %struct._IO_FILE* %stream) #0 {
entry:
  %base.alloca30 = alloca i8*
  %bound.alloca31 = alloca i8*
  %base.alloca25 = alloca i8*
  %bound.alloca26 = alloca i8*
  %base.alloca = alloca i8*
  %bound.alloca = alloca i8*
  %0 = call i8* @__softboundcets_load_base_shadow_stack(i32 2)
  %1 = call i8* @__softboundcets_load_bound_shadow_stack(i32 2)
  %2 = call i8* @__softboundcets_load_base_shadow_stack(i32 1)
  %3 = call i8* @__softboundcets_load_bound_shadow_stack(i32 1)
  %str.addr = alloca i8*, align 8
  %str.addr5 = bitcast i8** %str.addr to i8**
  %bitcast = bitcast i8** %str.addr to i8*
  %mtmp = getelementptr i8** %str.addr5, i32 1
  %bitcast6 = bitcast i8** %mtmp to i8*
  %n.addr = alloca i32, align 4
  %n.addr7 = bitcast i32* %n.addr to i32*
  %bitcast8 = bitcast i32* %n.addr to i8*
  %mtmp9 = getelementptr i32* %n.addr7, i32 1
  %bitcast10 = bitcast i32* %mtmp9 to i8*
  %stream.addr = alloca %struct._IO_FILE*, align 8
  %stream.addr11 = bitcast %struct._IO_FILE** %stream.addr to %struct._IO_FILE**
  %bitcast12 = bitcast %struct._IO_FILE** %stream.addr to i8*
  %mtmp13 = getelementptr %struct._IO_FILE** %stream.addr11, i32 1
  %bitcast14 = bitcast %struct._IO_FILE** %mtmp13 to i8*
  %ch = alloca i32, align 4
  %ch15 = bitcast i32* %ch to i32*
  %bitcast16 = bitcast i32* %ch to i8*
  %mtmp17 = getelementptr i32* %ch15, i32 1
  %bitcast18 = bitcast i32* %mtmp17 to i8*
  %i = alloca i32, align 4
  %i19 = bitcast i32* %i to i32*
  %bitcast20 = bitcast i32* %i to i8*
  %mtmp21 = getelementptr i32* %i19, i32 1
  %bitcast22 = bitcast i32* %mtmp21 to i8*
  store i8* %str, i8** %str.addr, align 8
  %bitcast34 = bitcast i8** %str.addr to i8*
  call void @__softboundcets_metadata_store(i8* %bitcast34, i8* %2, i8* %3)
  store i32 %n, i32* %n.addr, align 4
  store %struct._IO_FILE* %stream, %struct._IO_FILE** %stream.addr, align 8
  %bitcast35 = bitcast %struct._IO_FILE** %stream.addr to i8*
  call void @__softboundcets_metadata_store(i8* %bitcast35, i8* %0, i8* %1)
  store i32 0, i32* %i, align 4
  br label %while.cond

while.cond:                                       ; preds = %if.end, %entry
  %4 = load %struct._IO_FILE** %stream.addr, align 8
  %bitcast23 = bitcast %struct._IO_FILE** %stream.addr to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast23, i8** %base.alloca, i8** %bound.alloca)
  %base.load = load i8** %base.alloca
  %bound.load = load i8** %bound.alloca
  %call = call i32 @_IO_getc(%struct._IO_FILE* %4)
  store i32 %call, i32* %ch, align 4
  %cmp = icmp ne i32 %call, 10
  br i1 %cmp, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %while.cond
  %5 = load i32* %ch, align 4
  %cmp1 = icmp ne i32 %5, -1
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond
  %6 = phi i1 [ false, %while.cond ], [ %cmp1, %land.rhs ]
  br i1 %6, label %while.body, label %while.end

while.body:                                       ; preds = %land.end
  %7 = load i32* %i, align 4
  %8 = load i32* %n.addr, align 4
  %sub = sub nsw i32 %8, 1
  %cmp2 = icmp slt i32 %7, %sub
  br i1 %cmp2, label %if.then, label %if.end

if.then:                                          ; preds = %while.body
  %9 = load i32* %ch, align 4
  %conv = trunc i32 %9 to i8
  %10 = load i32* %i, align 4
  %inc = add nsw i32 %10, 1
  store i32 %inc, i32* %i, align 4
  %idxprom = sext i32 %10 to i64
  %11 = load i8** %str.addr, align 8
  %bitcast29 = bitcast i8** %str.addr to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast29, i8** %base.alloca30, i8** %bound.alloca31)
  %base.load32 = load i8** %base.alloca30
  %bound.load33 = load i8** %bound.alloca31
  %arrayidx = getelementptr inbounds i8* %11, i64 %idxprom
  store i8 %conv, i8* %arrayidx, align 1
  br label %if.end

if.end:                                           ; preds = %if.then, %while.body
  br label %while.cond

while.end:                                        ; preds = %land.end
  %12 = load i32* %i, align 4
  %idxprom3 = sext i32 %12 to i64
  %13 = load i8** %str.addr, align 8
  %bitcast24 = bitcast i8** %str.addr to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast24, i8** %base.alloca25, i8** %bound.alloca26)
  %base.load27 = load i8** %base.alloca25
  %bound.load28 = load i8** %bound.alloca26
  %arrayidx4 = getelementptr inbounds i8* %13, i64 %idxprom3
  store i8 0, i8* %arrayidx4, align 1
  ret void
}

; Function Attrs: nounwind uwtable
define internal i32 @verify_coord(i8* %input, %struct.move_s* %move) #0 {
entry:
  %base.alloca66 = alloca i8*
  %bound.alloca67 = alloca i8*
  %base.alloca = alloca i8*
  %bound.alloca = alloca i8*
  %0 = call i8* @__softboundcets_load_base_shadow_stack(i32 2)
  %1 = call i8* @__softboundcets_load_bound_shadow_stack(i32 2)
  %2 = call i8* @__softboundcets_load_base_shadow_stack(i32 1)
  %3 = call i8* @__softboundcets_load_bound_shadow_stack(i32 1)
  %input.addr = alloca i8*, align 8
  %input.addr34 = bitcast i8** %input.addr to i8**
  %bitcast = bitcast i8** %input.addr to i8*
  %mtmp = getelementptr i8** %input.addr34, i32 1
  %bitcast35 = bitcast i8** %mtmp to i8*
  %move.addr = alloca %struct.move_s*, align 8
  %move.addr36 = bitcast %struct.move_s** %move.addr to %struct.move_s**
  %bitcast37 = bitcast %struct.move_s** %move.addr to i8*
  %mtmp38 = getelementptr %struct.move_s** %move.addr36, i32 1
  %bitcast39 = bitcast %struct.move_s** %mtmp38 to i8*
  %moves = alloca [512 x %struct.move_s], align 16
  %moves40 = bitcast [512 x %struct.move_s]* %moves to [512 x %struct.move_s]*
  %bitcast41 = bitcast [512 x %struct.move_s]* %moves to i8*
  %mtmp42 = getelementptr [512 x %struct.move_s]* %moves40, i32 1
  %bitcast43 = bitcast [512 x %struct.move_s]* %mtmp42 to i8*
  %num_moves = alloca i32, align 4
  %num_moves44 = bitcast i32* %num_moves to i32*
  %bitcast45 = bitcast i32* %num_moves to i8*
  %mtmp46 = getelementptr i32* %num_moves44, i32 1
  %bitcast47 = bitcast i32* %mtmp46 to i8*
  %i = alloca i32, align 4
  %i48 = bitcast i32* %i to i32*
  %bitcast49 = bitcast i32* %i to i8*
  %mtmp50 = getelementptr i32* %i48, i32 1
  %bitcast51 = bitcast i32* %mtmp50 to i8*
  %comp_move = alloca [6 x i8], align 1
  %comp_move52 = bitcast [6 x i8]* %comp_move to [6 x i8]*
  %bitcast53 = bitcast [6 x i8]* %comp_move to i8*
  %mtmp54 = getelementptr [6 x i8]* %comp_move52, i32 1
  %bitcast55 = bitcast [6 x i8]* %mtmp54 to i8*
  %legal = alloca i32, align 4
  %legal56 = bitcast i32* %legal to i32*
  %bitcast57 = bitcast i32* %legal to i8*
  %mtmp58 = getelementptr i32* %legal56, i32 1
  %bitcast59 = bitcast i32* %mtmp58 to i8*
  %mate = alloca i32, align 4
  %mate60 = bitcast i32* %mate to i32*
  %bitcast61 = bitcast i32* %mate to i8*
  %mtmp62 = getelementptr i32* %mate60, i32 1
  %bitcast63 = bitcast i32* %mtmp62 to i8*
  store i8* %input, i8** %input.addr, align 8
  %bitcast70 = bitcast i8** %input.addr to i8*
  call void @__softboundcets_metadata_store(i8* %bitcast70, i8* %2, i8* %3)
  store %struct.move_s* %move, %struct.move_s** %move.addr, align 8
  %bitcast71 = bitcast %struct.move_s** %move.addr to i8*
  call void @__softboundcets_metadata_store(i8* %bitcast71, i8* %0, i8* %1)
  store i32 0, i32* %legal, align 4
  %4 = load i32* @Variant, align 4
  %cmp = icmp eq i32 %4, 4
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  store i32 1, i32* @captures, align 4
  store i32 0, i32* %num_moves, align 4
  %arrayidx = getelementptr inbounds [512 x %struct.move_s]* %moves, i32 0, i64 0
  call void @__softboundcets_allocate_shadow_stack_space(i32 2)
  call void @__softboundcets_store_base_shadow_stack(i8* %bitcast41, i32 1)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bitcast43, i32 1)
  call void @gen(%struct.move_s* %arrayidx)
  call void @__softboundcets_deallocate_shadow_stack_space()
  %5 = load i32* @numb_moves, align 4
  store i32 %5, i32* %num_moves, align 4
  store i32 0, i32* @captures, align 4
  store i32 1, i32* %mate, align 4
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.then
  %6 = load i32* %i, align 4
  %7 = load i32* %num_moves, align 4
  %cmp1 = icmp slt i32 %6, %7
  br i1 %cmp1, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %arrayidx2 = getelementptr inbounds [512 x %struct.move_s]* %moves, i32 0, i64 0
  %8 = load i32* %i, align 4
  call void @__softboundcets_allocate_shadow_stack_space(i32 2)
  call void @__softboundcets_store_base_shadow_stack(i8* %bitcast41, i32 1)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bitcast43, i32 1)
  call void @make(%struct.move_s* %arrayidx2, i32 %8)
  call void @__softboundcets_deallocate_shadow_stack_space()
  %arrayidx3 = getelementptr inbounds [512 x %struct.move_s]* %moves, i32 0, i64 0
  %9 = load i32* %i, align 4
  call void @__softboundcets_allocate_shadow_stack_space(i32 2)
  call void @__softboundcets_store_base_shadow_stack(i8* %bitcast41, i32 1)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bitcast43, i32 1)
  %call = call i32 @check_legal(%struct.move_s* %arrayidx3, i32 %9, i32 1)
  call void @__softboundcets_deallocate_shadow_stack_space()
  %tobool = icmp ne i32 %call, 0
  br i1 %tobool, label %if.then4, label %if.end

if.then4:                                         ; preds = %for.body
  store i32 0, i32* %mate, align 4
  %arrayidx5 = getelementptr inbounds [512 x %struct.move_s]* %moves, i32 0, i64 0
  %10 = load i32* %i, align 4
  call void @__softboundcets_allocate_shadow_stack_space(i32 2)
  call void @__softboundcets_store_base_shadow_stack(i8* %bitcast41, i32 1)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bitcast43, i32 1)
  call void @unmake(%struct.move_s* %arrayidx5, i32 %10)
  call void @__softboundcets_deallocate_shadow_stack_space()
  br label %for.end

if.end:                                           ; preds = %for.body
  %arrayidx6 = getelementptr inbounds [512 x %struct.move_s]* %moves, i32 0, i64 0
  %11 = load i32* %i, align 4
  call void @__softboundcets_allocate_shadow_stack_space(i32 2)
  call void @__softboundcets_store_base_shadow_stack(i8* %bitcast41, i32 1)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bitcast43, i32 1)
  call void @unmake(%struct.move_s* %arrayidx6, i32 %11)
  call void @__softboundcets_deallocate_shadow_stack_space()
  br label %for.inc

for.inc:                                          ; preds = %if.end
  %12 = load i32* %i, align 4
  %inc = add nsw i32 %12, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %if.then4, %for.cond
  %13 = load i32* %mate, align 4
  %cmp7 = icmp eq i32 %13, 1
  br i1 %cmp7, label %if.then8, label %if.end10

if.then8:                                         ; preds = %for.end
  store i32 0, i32* @captures, align 4
  store i32 0, i32* %num_moves, align 4
  %arrayidx9 = getelementptr inbounds [512 x %struct.move_s]* %moves, i32 0, i64 0
  call void @__softboundcets_allocate_shadow_stack_space(i32 2)
  call void @__softboundcets_store_base_shadow_stack(i8* %bitcast41, i32 1)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bitcast43, i32 1)
  call void @gen(%struct.move_s* %arrayidx9)
  call void @__softboundcets_deallocate_shadow_stack_space()
  %14 = load i32* @numb_moves, align 4
  store i32 %14, i32* %num_moves, align 4
  br label %if.end10

if.end10:                                         ; preds = %if.then8, %for.end
  br label %if.end12

if.else:                                          ; preds = %entry
  %arrayidx11 = getelementptr inbounds [512 x %struct.move_s]* %moves, i32 0, i64 0
  call void @__softboundcets_allocate_shadow_stack_space(i32 2)
  call void @__softboundcets_store_base_shadow_stack(i8* %bitcast41, i32 1)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bitcast43, i32 1)
  call void @gen(%struct.move_s* %arrayidx11)
  call void @__softboundcets_deallocate_shadow_stack_space()
  %15 = load i32* @numb_moves, align 4
  store i32 %15, i32* %num_moves, align 4
  br label %if.end12

if.end12:                                         ; preds = %if.else, %if.end10
  store i32 0, i32* %i, align 4
  br label %for.cond13

for.cond13:                                       ; preds = %for.inc31, %if.end12
  %16 = load i32* %i, align 4
  %17 = load i32* %num_moves, align 4
  %cmp14 = icmp slt i32 %16, %17
  br i1 %cmp14, label %for.body15, label %for.end33

for.body15:                                       ; preds = %for.cond13
  %18 = load i32* %i, align 4
  %idxprom = sext i32 %18 to i64
  %arrayidx16 = getelementptr inbounds [512 x %struct.move_s]* %moves, i32 0, i64 %idxprom
  %arraydecay = getelementptr inbounds [6 x i8]* %comp_move, i32 0, i32 0
  call void @__softboundcets_allocate_shadow_stack_space(i32 3)
  call void @__softboundcets_store_base_shadow_stack(i8* %bitcast41, i32 1)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bitcast43, i32 1)
  call void @__softboundcets_store_base_shadow_stack(i8* %bitcast53, i32 2)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bitcast55, i32 2)
  call void @comp_to_coord(%struct.move_s* byval align 8 %arrayidx16, i8* %arraydecay)
  call void @__softboundcets_deallocate_shadow_stack_space()
  %19 = load i8** %input.addr, align 8
  %bitcast64 = bitcast i8** %input.addr to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast64, i8** %base.alloca, i8** %bound.alloca)
  %base.load = load i8** %base.alloca
  %bound.load = load i8** %bound.alloca
  %arraydecay17 = getelementptr inbounds [6 x i8]* %comp_move, i32 0, i32 0
  call void @__softboundcets_allocate_shadow_stack_space(i32 3)
  call void @__softboundcets_store_base_shadow_stack(i8* %base.load, i32 1)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bound.load, i32 1)
  call void @__softboundcets_store_base_shadow_stack(i8* %bitcast53, i32 2)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bitcast55, i32 2)
  %call18 = call i32 @softboundcets_strcmp(i8* %19, i8* %arraydecay17) #6
  call void @__softboundcets_deallocate_shadow_stack_space()
  %tobool19 = icmp ne i32 %call18, 0
  br i1 %tobool19, label %if.end30, label %if.then20

if.then20:                                        ; preds = %for.body15
  %arrayidx21 = getelementptr inbounds [512 x %struct.move_s]* %moves, i32 0, i64 0
  %20 = load i32* %i, align 4
  call void @__softboundcets_allocate_shadow_stack_space(i32 2)
  call void @__softboundcets_store_base_shadow_stack(i8* %bitcast41, i32 1)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bitcast43, i32 1)
  call void @make(%struct.move_s* %arrayidx21, i32 %20)
  call void @__softboundcets_deallocate_shadow_stack_space()
  %arrayidx22 = getelementptr inbounds [512 x %struct.move_s]* %moves, i32 0, i64 0
  %21 = load i32* %i, align 4
  call void @__softboundcets_allocate_shadow_stack_space(i32 2)
  call void @__softboundcets_store_base_shadow_stack(i8* %bitcast41, i32 1)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bitcast43, i32 1)
  %call23 = call i32 @check_legal(%struct.move_s* %arrayidx22, i32 %21, i32 1)
  call void @__softboundcets_deallocate_shadow_stack_space()
  %tobool24 = icmp ne i32 %call23, 0
  br i1 %tobool24, label %if.then25, label %if.end28

if.then25:                                        ; preds = %if.then20
  store i32 1, i32* %legal, align 4
  %22 = load %struct.move_s** %move.addr, align 8
  %bitcast65 = bitcast %struct.move_s** %move.addr to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast65, i8** %base.alloca66, i8** %bound.alloca67)
  %base.load68 = load i8** %base.alloca66
  %bound.load69 = load i8** %bound.alloca67
  %23 = load i32* %i, align 4
  %idxprom26 = sext i32 %23 to i64
  %arrayidx27 = getelementptr inbounds [512 x %struct.move_s]* %moves, i32 0, i64 %idxprom26
  %24 = bitcast %struct.move_s* %22 to i8*
  %25 = bitcast %struct.move_s* %arrayidx27 to i8*
  call void @__softboundcets_memcopy_check(i8* %24, i8* %25, i64 24, i8* %base.load68, i8* %bound.load69, i8* %bitcast41, i8* %bitcast43)
  call void @__softboundcets_copy_metadata(i8* %24, i8* %25, i64 24)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %24, i8* %25, i64 24, i32 4, i1 false)
  br label %if.end28

if.end28:                                         ; preds = %if.then25, %if.then20
  %arrayidx29 = getelementptr inbounds [512 x %struct.move_s]* %moves, i32 0, i64 0
  %26 = load i32* %i, align 4
  call void @__softboundcets_allocate_shadow_stack_space(i32 2)
  call void @__softboundcets_store_base_shadow_stack(i8* %bitcast41, i32 1)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bitcast43, i32 1)
  call void @unmake(%struct.move_s* %arrayidx29, i32 %26)
  call void @__softboundcets_deallocate_shadow_stack_space()
  br label %if.end30

if.end30:                                         ; preds = %if.end28, %for.body15
  br label %for.inc31

for.inc31:                                        ; preds = %if.end30
  %27 = load i32* %i, align 4
  %inc32 = add nsw i32 %27, 1
  store i32 %inc32, i32* %i, align 4
  br label %for.cond13

for.end33:                                        ; preds = %for.cond13
  %28 = load i32* %legal, align 4
  ret i32 %28
}

; Function Attrs: nounwind uwtable
define internal void @hash_extract_pv(i32 %level, i8* %str) #0 {
entry:
  %base.alloca57 = alloca i8*
  %bound.alloca58 = alloca i8*
  %base.alloca52 = alloca i8*
  %bound.alloca53 = alloca i8*
  %base.alloca47 = alloca i8*
  %bound.alloca48 = alloca i8*
  %base.alloca = alloca i8*
  %bound.alloca = alloca i8*
  %0 = call i8* @__softboundcets_load_base_shadow_stack(i32 1)
  %1 = call i8* @__softboundcets_load_bound_shadow_stack(i32 1)
  %level.addr = alloca i32, align 4
  %level.addr19 = bitcast i32* %level.addr to i32*
  %bitcast = bitcast i32* %level.addr to i8*
  %mtmp = getelementptr i32* %level.addr19, i32 1
  %bitcast20 = bitcast i32* %mtmp to i8*
  %str.addr = alloca i8*, align 8
  %str.addr21 = bitcast i8** %str.addr to i8**
  %bitcast22 = bitcast i8** %str.addr to i8*
  %mtmp23 = getelementptr i8** %str.addr21, i32 1
  %bitcast24 = bitcast i8** %mtmp23 to i8*
  %xdummy = alloca i32, align 4
  %xdummy25 = bitcast i32* %xdummy to i32*
  %bitcast26 = bitcast i32* %xdummy to i8*
  %mtmp27 = getelementptr i32* %xdummy25, i32 1
  %bitcast28 = bitcast i32* %mtmp27 to i8*
  %bm = alloca i32, align 4
  %bm29 = bitcast i32* %bm to i32*
  %bitcast30 = bitcast i32* %bm to i8*
  %mtmp31 = getelementptr i32* %bm29, i32 1
  %bitcast32 = bitcast i32* %mtmp31 to i8*
  %moves = alloca [512 x %struct.move_s], align 16
  %moves33 = bitcast [512 x %struct.move_s]* %moves to [512 x %struct.move_s]*
  %bitcast34 = bitcast [512 x %struct.move_s]* %moves to i8*
  %mtmp35 = getelementptr [512 x %struct.move_s]* %moves33, i32 1
  %bitcast36 = bitcast [512 x %struct.move_s]* %mtmp35 to i8*
  %num_moves = alloca i32, align 4
  %num_moves37 = bitcast i32* %num_moves to i32*
  %bitcast38 = bitcast i32* %num_moves to i8*
  %mtmp39 = getelementptr i32* %num_moves37, i32 1
  %bitcast40 = bitcast i32* %mtmp39 to i8*
  %output = alloca [256 x i8], align 16
  %output41 = bitcast [256 x i8]* %output to [256 x i8]*
  %bitcast42 = bitcast [256 x i8]* %output to i8*
  %mtmp43 = getelementptr [256 x i8]* %output41, i32 1
  %bitcast44 = bitcast [256 x i8]* %mtmp43 to i8*
  store i32 %level, i32* %level.addr, align 4
  store i8* %str, i8** %str.addr, align 8
  %bitcast61 = bitcast i8** %str.addr to i8*
  call void @__softboundcets_metadata_store(i8* %bitcast61, i8* %0, i8* %1)
  %2 = load i32* %level.addr, align 4
  %dec = add nsw i32 %2, -1
  store i32 %dec, i32* %level.addr, align 4
  %3 = load i32* %level.addr, align 4
  %tobool = icmp ne i32 %3, 0
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  br label %if.end18

if.end:                                           ; preds = %entry
  call void @__softboundcets_allocate_shadow_stack_space(i32 5)
  call void @__softboundcets_store_base_shadow_stack(i8* %bitcast26, i32 1)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bitcast28, i32 1)
  call void @__softboundcets_store_base_shadow_stack(i8* %bitcast30, i32 2)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bitcast32, i32 2)
  call void @__softboundcets_store_base_shadow_stack(i8* %bitcast26, i32 3)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bitcast28, i32 3)
  call void @__softboundcets_store_base_shadow_stack(i8* %bitcast26, i32 4)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bitcast28, i32 4)
  %call = call i32 @ProbeTT(i32* %xdummy, i32 0, i32* %bm, i32* %xdummy, i32* %xdummy, i32 0)
  call void @__softboundcets_deallocate_shadow_stack_space()
  %cmp = icmp ne i32 %call, 4
  br i1 %cmp, label %if.then1, label %if.end18

if.then1:                                         ; preds = %if.end
  %arrayidx = getelementptr inbounds [512 x %struct.move_s]* %moves, i32 0, i64 0
  call void @__softboundcets_allocate_shadow_stack_space(i32 2)
  call void @__softboundcets_store_base_shadow_stack(i8* %bitcast34, i32 1)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bitcast36, i32 1)
  call void @gen(%struct.move_s* %arrayidx)
  call void @__softboundcets_deallocate_shadow_stack_space()
  %4 = load i32* @numb_moves, align 4
  store i32 %4, i32* %num_moves, align 4
  %5 = load i32* %bm, align 4
  %cmp2 = icmp sge i32 %5, 0
  br i1 %cmp2, label %land.lhs.true, label %if.end17

land.lhs.true:                                    ; preds = %if.then1
  %6 = load i32* %bm, align 4
  %7 = load i32* %num_moves, align 4
  %cmp3 = icmp slt i32 %6, %7
  br i1 %cmp3, label %if.then4, label %if.end17

if.then4:                                         ; preds = %land.lhs.true
  %8 = load i32* %bm, align 4
  %idxprom = sext i32 %8 to i64
  %arrayidx5 = getelementptr inbounds [512 x %struct.move_s]* %moves, i32 0, i64 %idxprom
  %arraydecay = getelementptr inbounds [256 x i8]* %output, i32 0, i32 0
  call void @__softboundcets_allocate_shadow_stack_space(i32 3)
  call void @__softboundcets_store_base_shadow_stack(i8* %bitcast34, i32 1)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bitcast36, i32 1)
  call void @__softboundcets_store_base_shadow_stack(i8* %bitcast42, i32 2)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bitcast44, i32 2)
  call void @comp_to_san(%struct.move_s* byval align 8 %arrayidx5, i8* %arraydecay)
  call void @__softboundcets_deallocate_shadow_stack_space()
  %arrayidx6 = getelementptr inbounds [512 x %struct.move_s]* %moves, i32 0, i64 0
  %9 = load i32* %bm, align 4
  call void @__softboundcets_allocate_shadow_stack_space(i32 2)
  call void @__softboundcets_store_base_shadow_stack(i8* %bitcast34, i32 1)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bitcast36, i32 1)
  call void @make(%struct.move_s* %arrayidx6, i32 %9)
  call void @__softboundcets_deallocate_shadow_stack_space()
  %arrayidx7 = getelementptr inbounds [512 x %struct.move_s]* %moves, i32 0, i64 0
  %10 = load i32* %bm, align 4
  call void @__softboundcets_allocate_shadow_stack_space(i32 2)
  call void @__softboundcets_store_base_shadow_stack(i8* %bitcast34, i32 1)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bitcast36, i32 1)
  %call8 = call i32 @check_legal(%struct.move_s* %arrayidx7, i32 %10, i32 1)
  call void @__softboundcets_deallocate_shadow_stack_space()
  %tobool9 = icmp ne i32 %call8, 0
  br i1 %tobool9, label %if.then10, label %if.end15

if.then10:                                        ; preds = %if.then4
  %11 = load i8** %str.addr, align 8
  %bitcast45 = bitcast i8** %str.addr to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast45, i8** %base.alloca, i8** %bound.alloca)
  %base.load = load i8** %base.alloca
  %bound.load = load i8** %bound.alloca
  call void @__softboundcets_allocate_shadow_stack_space(i32 3)
  call void @__softboundcets_store_base_shadow_stack(i8* %base.load, i32 1)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bound.load, i32 1)
  call void @__softboundcets_store_base_shadow_stack(i8* getelementptr inbounds ([2 x i8]* @.str47444, i32 0, i32 0), i32 2)
  call void @__softboundcets_store_bound_shadow_stack(i8* getelementptr inbounds ([2 x i8]* @.str47444, i32 1, i32 0), i32 2)
  %call11 = call i8* @softboundcets_strcat(i8* %11, i8* getelementptr inbounds ([2 x i8]* @.str47444, i32 0, i32 0)) #1
  %12 = call i8* @__softboundcets_load_base_shadow_stack(i32 0)
  %13 = call i8* @__softboundcets_load_bound_shadow_stack(i32 0)
  call void @__softboundcets_deallocate_shadow_stack_space()
  %14 = load i8** %str.addr, align 8
  %bitcast46 = bitcast i8** %str.addr to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast46, i8** %base.alloca47, i8** %bound.alloca48)
  %base.load49 = load i8** %base.alloca47
  %bound.load50 = load i8** %bound.alloca48
  %arraydecay12 = getelementptr inbounds [256 x i8]* %output, i32 0, i32 0
  call void @__softboundcets_allocate_shadow_stack_space(i32 3)
  call void @__softboundcets_store_base_shadow_stack(i8* %base.load49, i32 1)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bound.load50, i32 1)
  call void @__softboundcets_store_base_shadow_stack(i8* %bitcast42, i32 2)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bitcast44, i32 2)
  %call13 = call i8* @softboundcets_strcat(i8* %14, i8* %arraydecay12) #1
  %15 = call i8* @__softboundcets_load_base_shadow_stack(i32 0)
  %16 = call i8* @__softboundcets_load_bound_shadow_stack(i32 0)
  call void @__softboundcets_deallocate_shadow_stack_space()
  %17 = load i8** %str.addr, align 8
  %bitcast51 = bitcast i8** %str.addr to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast51, i8** %base.alloca52, i8** %bound.alloca53)
  %base.load54 = load i8** %base.alloca52
  %bound.load55 = load i8** %bound.alloca53
  call void @__softboundcets_allocate_shadow_stack_space(i32 3)
  call void @__softboundcets_store_base_shadow_stack(i8* %base.load54, i32 1)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bound.load55, i32 1)
  call void @__softboundcets_store_base_shadow_stack(i8* getelementptr inbounds ([3 x i8]* @.str48445, i32 0, i32 0), i32 2)
  call void @__softboundcets_store_bound_shadow_stack(i8* getelementptr inbounds ([3 x i8]* @.str48445, i32 1, i32 0), i32 2)
  %call14 = call i8* @softboundcets_strcat(i8* %17, i8* getelementptr inbounds ([3 x i8]* @.str48445, i32 0, i32 0)) #1
  %18 = call i8* @__softboundcets_load_base_shadow_stack(i32 0)
  %19 = call i8* @__softboundcets_load_bound_shadow_stack(i32 0)
  call void @__softboundcets_deallocate_shadow_stack_space()
  %20 = load i32* %level.addr, align 4
  %21 = load i8** %str.addr, align 8
  %bitcast56 = bitcast i8** %str.addr to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast56, i8** %base.alloca57, i8** %bound.alloca58)
  %base.load59 = load i8** %base.alloca57
  %bound.load60 = load i8** %bound.alloca58
  call void @__softboundcets_allocate_shadow_stack_space(i32 2)
  call void @__softboundcets_store_base_shadow_stack(i8* %base.load59, i32 1)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bound.load60, i32 1)
  call void @hash_extract_pv(i32 %20, i8* %21)
  call void @__softboundcets_deallocate_shadow_stack_space()
  br label %if.end15

if.end15:                                         ; preds = %if.then10, %if.then4
  %arrayidx16 = getelementptr inbounds [512 x %struct.move_s]* %moves, i32 0, i64 0
  %22 = load i32* %bm, align 4
  call void @__softboundcets_allocate_shadow_stack_space(i32 2)
  call void @__softboundcets_store_base_shadow_stack(i8* %bitcast34, i32 1)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bitcast36, i32 1)
  call void @unmake(%struct.move_s* %arrayidx16, i32 %22)
  call void @__softboundcets_deallocate_shadow_stack_space()
  br label %if.end17

if.end17:                                         ; preds = %if.end15, %land.lhs.true, %if.then1
  br label %if.end18

if.end18:                                         ; preds = %if.end17, %if.end, %if.then
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @stringize_pv(i8* %str) #0 {
entry:
  %base.alloca38 = alloca i8*
  %bound.alloca39 = alloca i8*
  %base.alloca33 = alloca i8*
  %bound.alloca34 = alloca i8*
  %base.alloca28 = alloca i8*
  %bound.alloca29 = alloca i8*
  %base.alloca = alloca i8*
  %bound.alloca = alloca i8*
  %0 = call i8* @__softboundcets_load_base_shadow_stack(i32 1)
  %1 = call i8* @__softboundcets_load_bound_shadow_stack(i32 1)
  %str.addr = alloca i8*, align 8
  %str.addr12 = bitcast i8** %str.addr to i8**
  %bitcast = bitcast i8** %str.addr to i8*
  %mtmp = getelementptr i8** %str.addr12, i32 1
  %bitcast13 = bitcast i8** %mtmp to i8*
  %output = alloca [256 x i8], align 16
  %output14 = bitcast [256 x i8]* %output to [256 x i8]*
  %bitcast15 = bitcast [256 x i8]* %output to i8*
  %mtmp16 = getelementptr [256 x i8]* %output14, i32 1
  %bitcast17 = bitcast [256 x i8]* %mtmp16 to i8*
  %i = alloca i32, align 4
  %i18 = bitcast i32* %i to i32*
  %bitcast19 = bitcast i32* %i to i8*
  %mtmp20 = getelementptr i32* %i18, i32 1
  %bitcast21 = bitcast i32* %mtmp20 to i8*
  %tmp = alloca %struct.move_s, align 8
  %tmp22 = bitcast %struct.move_s* %tmp to %struct.move_s*
  %bitcast23 = bitcast %struct.move_s* %tmp to i8*
  %mtmp24 = getelementptr %struct.move_s* %tmp22, i32 1
  %bitcast25 = bitcast %struct.move_s* %mtmp24 to i8*
  store i8* %str, i8** %str.addr, align 8
  %bitcast42 = bitcast i8** %str.addr to i8*
  call void @__softboundcets_metadata_store(i8* %bitcast42, i8* %0, i8* %1)
  %2 = load i8** %str.addr, align 8
  %bitcast26 = bitcast i8** %str.addr to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast26, i8** %base.alloca, i8** %bound.alloca)
  %base.load = load i8** %base.alloca
  %bound.load = load i8** %bound.alloca
  call void @__softboundcets_memset_check(i8* %2, i64 256, i8* %base.load, i8* %bound.load)
  call void @llvm.memset.p0i8.i64(i8* %2, i8 0, i64 256, i32 1, i1 false)
  store i32 1, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %3 = load i32* %i, align 4
  %4 = load i32* getelementptr inbounds ([300 x i32]* @pv_length, i32 0, i64 1), align 4
  %cmp = icmp slt i32 %3, %4
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %5 = load i32* %i, align 4
  %idxprom = sext i32 %5 to i64
  %arrayidx = getelementptr inbounds [300 x %struct.move_s]* getelementptr inbounds ([300 x [300 x %struct.move_s]]* @pv, i32 0, i64 1), i32 0, i64 %idxprom
  %arraydecay = getelementptr inbounds [256 x i8]* %output, i32 0, i32 0
  %6 = bitcast %struct.move_s* %tmp to i8*
  %7 = bitcast %struct.move_s* %arrayidx to i8*
  call void @__softboundcets_memcopy_check(i8* %6, i8* %7, i64 24, i8* %bitcast23, i8* %bitcast25, i8* null, i8* inttoptr (i64 281474976710656 to i8*))
  call void @__softboundcets_copy_metadata(i8* %6, i8* %7, i64 24)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %6, i8* %7, i64 24, i32 4, i1 false)
  call void @__softboundcets_allocate_shadow_stack_space(i32 3)
  call void @__softboundcets_store_base_shadow_stack(i8* %bitcast23, i32 1)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bitcast25, i32 1)
  call void @__softboundcets_store_base_shadow_stack(i8* %bitcast15, i32 2)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bitcast17, i32 2)
  call void @comp_to_san(%struct.move_s* byval align 8 %tmp, i8* %arraydecay)
  call void @__softboundcets_deallocate_shadow_stack_space()
  %8 = load i32* %i, align 4
  %idxprom1 = sext i32 %8 to i64
  %arrayidx2 = getelementptr inbounds [300 x %struct.move_s]* getelementptr inbounds ([300 x [300 x %struct.move_s]]* @pv, i32 0, i64 1), i32 0, i64 %idxprom1
  call void @__softboundcets_allocate_shadow_stack_space(i32 2)
  call void @__softboundcets_store_base_shadow_stack(i8* null, i32 1)
  call void @__softboundcets_store_bound_shadow_stack(i8* inttoptr (i64 281474976710656 to i8*), i32 1)
  call void @make(%struct.move_s* %arrayidx2, i32 0)
  call void @__softboundcets_deallocate_shadow_stack_space()
  %9 = load i8** %str.addr, align 8
  %bitcast27 = bitcast i8** %str.addr to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast27, i8** %base.alloca28, i8** %bound.alloca29)
  %base.load30 = load i8** %base.alloca28
  %bound.load31 = load i8** %bound.alloca29
  %arraydecay3 = getelementptr inbounds [256 x i8]* %output, i32 0, i32 0
  call void @__softboundcets_allocate_shadow_stack_space(i32 3)
  call void @__softboundcets_store_base_shadow_stack(i8* %base.load30, i32 1)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bound.load31, i32 1)
  call void @__softboundcets_store_base_shadow_stack(i8* %bitcast15, i32 2)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bitcast17, i32 2)
  %call = call i8* @softboundcets_strcat(i8* %9, i8* %arraydecay3) #1
  %10 = call i8* @__softboundcets_load_base_shadow_stack(i32 0)
  %11 = call i8* @__softboundcets_load_bound_shadow_stack(i32 0)
  call void @__softboundcets_deallocate_shadow_stack_space()
  %12 = load i8** %str.addr, align 8
  %bitcast32 = bitcast i8** %str.addr to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast32, i8** %base.alloca33, i8** %bound.alloca34)
  %base.load35 = load i8** %base.alloca33
  %bound.load36 = load i8** %bound.alloca34
  call void @__softboundcets_allocate_shadow_stack_space(i32 3)
  call void @__softboundcets_store_base_shadow_stack(i8* %base.load35, i32 1)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bound.load36, i32 1)
  call void @__softboundcets_store_base_shadow_stack(i8* getelementptr inbounds ([2 x i8]* @.str49446, i32 0, i32 0), i32 2)
  call void @__softboundcets_store_bound_shadow_stack(i8* getelementptr inbounds ([2 x i8]* @.str49446, i32 1, i32 0), i32 2)
  %call4 = call i8* @softboundcets_strcat(i8* %12, i8* getelementptr inbounds ([2 x i8]* @.str49446, i32 0, i32 0)) #1
  %13 = call i8* @__softboundcets_load_base_shadow_stack(i32 0)
  %14 = call i8* @__softboundcets_load_bound_shadow_stack(i32 0)
  call void @__softboundcets_deallocate_shadow_stack_space()
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %15 = load i32* %i, align 4
  %inc = add nsw i32 %15, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %16 = load i8** %str.addr, align 8
  %bitcast37 = bitcast i8** %str.addr to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast37, i8** %base.alloca38, i8** %bound.alloca39)
  %base.load40 = load i8** %base.alloca38
  %bound.load41 = load i8** %bound.alloca39
  call void @__softboundcets_allocate_shadow_stack_space(i32 2)
  call void @__softboundcets_store_base_shadow_stack(i8* %base.load40, i32 1)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bound.load41, i32 1)
  call void @hash_extract_pv(i32 7, i8* %16)
  call void @__softboundcets_deallocate_shadow_stack_space()
  %17 = load i32* getelementptr inbounds ([300 x i32]* @pv_length, i32 0, i64 1), align 4
  %sub = sub nsw i32 %17, 1
  store i32 %sub, i32* %i, align 4
  br label %for.cond5

for.cond5:                                        ; preds = %for.inc10, %for.end
  %18 = load i32* %i, align 4
  %cmp6 = icmp sgt i32 %18, 0
  br i1 %cmp6, label %for.body7, label %for.end11

for.body7:                                        ; preds = %for.cond5
  %19 = load i32* %i, align 4
  %idxprom8 = sext i32 %19 to i64
  %arrayidx9 = getelementptr inbounds [300 x %struct.move_s]* getelementptr inbounds ([300 x [300 x %struct.move_s]]* @pv, i32 0, i64 1), i32 0, i64 %idxprom8
  call void @__softboundcets_allocate_shadow_stack_space(i32 2)
  call void @__softboundcets_store_base_shadow_stack(i8* null, i32 1)
  call void @__softboundcets_store_bound_shadow_stack(i8* inttoptr (i64 281474976710656 to i8*), i32 1)
  call void @unmake(%struct.move_s* %arrayidx9, i32 0)
  call void @__softboundcets_deallocate_shadow_stack_space()
  br label %for.inc10

for.inc10:                                        ; preds = %for.body7
  %20 = load i32* %i, align 4
  %dec = add nsw i32 %20, -1
  store i32 %dec, i32* %i, align 4
  br label %for.cond5

for.end11:                                        ; preds = %for.cond5
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @post_thinking(i32 %score) #0 {
entry:
  %score.addr = alloca i32, align 4
  %score.addr50 = bitcast i32* %score.addr to i32*
  %bitcast = bitcast i32* %score.addr to i8*
  %mtmp = getelementptr i32* %score.addr50, i32 1
  %bitcast51 = bitcast i32* %mtmp to i8*
  %i = alloca i32, align 4
  %i52 = bitcast i32* %i to i32*
  %bitcast53 = bitcast i32* %i to i8*
  %mtmp54 = getelementptr i32* %i52, i32 1
  %bitcast55 = bitcast i32* %mtmp54 to i8*
  %remake = alloca i32, align 4
  %remake56 = bitcast i32* %remake to i32*
  %bitcast57 = bitcast i32* %remake to i8*
  %mtmp58 = getelementptr i32* %remake56, i32 1
  %bitcast59 = bitcast i32* %mtmp58 to i8*
  %nps = alloca i32, align 4
  %nps60 = bitcast i32* %nps to i32*
  %bitcast61 = bitcast i32* %nps to i8*
  %mtmp62 = getelementptr i32* %nps60, i32 1
  %bitcast63 = bitcast i32* %mtmp62 to i8*
  %elapsed = alloca i32, align 4
  %elapsed64 = bitcast i32* %elapsed to i32*
  %bitcast65 = bitcast i32* %elapsed to i8*
  %mtmp66 = getelementptr i32* %elapsed64, i32 1
  %bitcast67 = bitcast i32* %mtmp66 to i8*
  %output = alloca [256 x i8], align 16
  %output68 = bitcast [256 x i8]* %output to [256 x i8]*
  %bitcast69 = bitcast [256 x i8]* %output to i8*
  %mtmp70 = getelementptr [256 x i8]* %output68, i32 1
  %bitcast71 = bitcast [256 x i8]* %mtmp70 to i8*
  %hashpv = alloca [256 x i8], align 16
  %hashpv72 = bitcast [256 x i8]* %hashpv to [256 x i8]*
  %bitcast73 = bitcast [256 x i8]* %hashpv to i8*
  %mtmp74 = getelementptr [256 x i8]* %hashpv72, i32 1
  %bitcast75 = bitcast [256 x i8]* %mtmp74 to i8*
  %dnps = alloca double, align 8
  %dnps76 = bitcast double* %dnps to double*
  %bitcast77 = bitcast double* %dnps to i8*
  %mtmp78 = getelementptr double* %dnps76, i32 1
  %bitcast79 = bitcast double* %mtmp78 to i8*
  %tmp = alloca %struct.move_s, align 8
  %tmp80 = bitcast %struct.move_s* %tmp to %struct.move_s*
  %bitcast81 = bitcast %struct.move_s* %tmp to i8*
  %mtmp82 = getelementptr %struct.move_s* %tmp80, i32 1
  %bitcast83 = bitcast %struct.move_s* %mtmp82 to i8*
  store i32 %score, i32* %score.addr, align 4
  store i32 0, i32* %remake, align 4
  %call = call i64 @rtime()
  %0 = load i64* @start_time, align 8
  %call1 = call i32 @rdifftime(i64 %call, i64 %0)
  store i32 %call1, i32* %elapsed, align 4
  %1 = load i32* %elapsed, align 4
  %cmp = icmp sgt i32 %1, 0
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  %2 = load i32* @nodes, align 4
  %conv = sitofp i32 %2 to double
  %mul = fmul double 1.000000e+02, %conv
  %3 = load i32* %elapsed, align 4
  %conv2 = sitofp i32 %3 to double
  %div = fdiv double %mul, %conv2
  store double %div, double* %dnps, align 8
  %4 = load double* %dnps, align 8
  %conv3 = fptosi double %4 to i32
  store i32 %conv3, i32* %nps, align 4
  br label %if.end

if.else:                                          ; preds = %entry
  %5 = load i32* @nodes, align 4
  store i32 %5, i32* %nps, align 4
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %6 = load i32* @xb_mode, align 4
  %tobool = icmp ne i32 %6, 0
  br i1 %tobool, label %if.then4, label %if.else6

if.then4:                                         ; preds = %if.end
  %7 = load i32* @i_depth, align 4
  %8 = load i32* %score.addr, align 4
  %9 = load i32* %elapsed, align 4
  %10 = load i32* @nodes, align 4
  %call5 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([18 x i8]* @.str50447, i32 0, i32 0), i32 %7, i32 %8, i32 %9, i32 %10)
  br label %if.end13

if.else6:                                         ; preds = %if.end
  %11 = load i32* @i_depth, align 4
  %12 = load i32* %score.addr, align 4
  %cmp7 = icmp slt i32 %12, 0
  %cond = select i1 %cmp7, i32 45, i32 32
  %13 = load i32* %score.addr, align 4
  %div9 = sdiv i32 %13, 100
  %call10 = call i32 @softboundcets_abs(i32 %div9) #5
  %14 = load i32* %score.addr, align 4
  %rem = srem i32 %14, 100
  %call11 = call i32 @softboundcets_abs(i32 %rem) #5
  %15 = load i32* @nodes, align 4
  %call12 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([20 x i8]* @.str51448, i32 0, i32 0), i32 %11, i32 %cond, i32 %call10, i32 %call11, i32 %15)
  br label %if.end13

if.end13:                                         ; preds = %if.else6, %if.then4
  %16 = load i32* getelementptr inbounds ([300 x [300 x %struct.move_s]]* @pv, i32 0, i64 1, i64 1, i32 0), align 4
  %cmp14 = icmp ne i32 %16, 0
  br i1 %cmp14, label %land.lhs.true, label %lor.lhs.false

land.lhs.true:                                    ; preds = %if.end13
  %17 = load i32* getelementptr inbounds ([300 x [300 x %struct.move_s]]* @pv, i32 0, i64 1, i64 1, i32 0), align 4
  %idxprom = sext i32 %17 to i64
  %arrayidx = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom
  %18 = load i32* %arrayidx, align 4
  %cmp16 = icmp eq i32 %18, 13
  br i1 %cmp16, label %if.then25, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %land.lhs.true, %if.end13
  %19 = load i32* getelementptr inbounds ([300 x [300 x %struct.move_s]]* @pv, i32 0, i64 1, i64 1, i32 0), align 4
  %cmp18 = icmp eq i32 %19, 0
  br i1 %cmp18, label %land.lhs.true20, label %if.end26

land.lhs.true20:                                  ; preds = %lor.lhs.false
  %20 = load i32* getelementptr inbounds ([300 x [300 x %struct.move_s]]* @pv, i32 0, i64 1, i64 1, i32 1), align 4
  %idxprom21 = sext i32 %20 to i64
  %arrayidx22 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom21
  %21 = load i32* %arrayidx22, align 4
  %cmp23 = icmp ne i32 %21, 13
  br i1 %cmp23, label %if.then25, label %if.end26

if.then25:                                        ; preds = %land.lhs.true20, %land.lhs.true
  call void @__softboundcets_allocate_shadow_stack_space(i32 2)
  call void @__softboundcets_store_base_shadow_stack(i8* null, i32 1)
  call void @__softboundcets_store_bound_shadow_stack(i8* inttoptr (i64 281474976710656 to i8*), i32 1)
  call void @unmake(%struct.move_s* getelementptr inbounds ([300 x [300 x %struct.move_s]]* @pv, i32 0, i64 1, i64 1), i32 0)
  call void @__softboundcets_deallocate_shadow_stack_space()
  store i32 1, i32* %remake, align 4
  br label %if.end26

if.end26:                                         ; preds = %if.then25, %land.lhs.true20, %lor.lhs.false
  store i32 1, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.end26
  %22 = load i32* %i, align 4
  %23 = load i32* getelementptr inbounds ([300 x i32]* @pv_length, i32 0, i64 1), align 4
  %cmp27 = icmp slt i32 %22, %23
  br i1 %cmp27, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %24 = load i32* %i, align 4
  %idxprom29 = sext i32 %24 to i64
  %arrayidx30 = getelementptr inbounds [300 x %struct.move_s]* getelementptr inbounds ([300 x [300 x %struct.move_s]]* @pv, i32 0, i64 1), i32 0, i64 %idxprom29
  %arraydecay = getelementptr inbounds [256 x i8]* %output, i32 0, i32 0
  %25 = bitcast %struct.move_s* %tmp to i8*
  %26 = bitcast %struct.move_s* %arrayidx30 to i8*
  call void @__softboundcets_memcopy_check(i8* %25, i8* %26, i64 24, i8* %bitcast81, i8* %bitcast83, i8* null, i8* inttoptr (i64 281474976710656 to i8*))
  call void @__softboundcets_copy_metadata(i8* %25, i8* %26, i64 24)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %25, i8* %26, i64 24, i32 4, i1 false)
  call void @__softboundcets_allocate_shadow_stack_space(i32 3)
  call void @__softboundcets_store_base_shadow_stack(i8* %bitcast81, i32 1)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bitcast83, i32 1)
  call void @__softboundcets_store_base_shadow_stack(i8* %bitcast69, i32 2)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bitcast71, i32 2)
  call void @comp_to_san(%struct.move_s* byval align 8 %tmp, i8* %arraydecay)
  call void @__softboundcets_deallocate_shadow_stack_space()
  %27 = load i32* %i, align 4
  %idxprom31 = sext i32 %27 to i64
  %arrayidx32 = getelementptr inbounds [300 x %struct.move_s]* getelementptr inbounds ([300 x [300 x %struct.move_s]]* @pv, i32 0, i64 1), i32 0, i64 %idxprom31
  call void @__softboundcets_allocate_shadow_stack_space(i32 2)
  call void @__softboundcets_store_base_shadow_stack(i8* null, i32 1)
  call void @__softboundcets_store_bound_shadow_stack(i8* inttoptr (i64 281474976710656 to i8*), i32 1)
  call void @make(%struct.move_s* %arrayidx32, i32 0)
  call void @__softboundcets_deallocate_shadow_stack_space()
  %arraydecay33 = getelementptr inbounds [256 x i8]* %output, i32 0, i32 0
  %call34 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([4 x i8]* @.str52449, i32 0, i32 0), i8* %arraydecay33)
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %28 = load i32* %i, align 4
  %inc = add nsw i32 %28, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %29 = bitcast [256 x i8]* %hashpv to i8*
  call void @__softboundcets_memset_check(i8* %29, i64 256, i8* %bitcast73, i8* %bitcast75)
  call void @llvm.memset.p0i8.i64(i8* %29, i8 0, i64 256, i32 16, i1 false)
  %arraydecay35 = getelementptr inbounds [256 x i8]* %hashpv, i32 0, i32 0
  call void @__softboundcets_allocate_shadow_stack_space(i32 2)
  call void @__softboundcets_store_base_shadow_stack(i8* %bitcast73, i32 1)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bitcast75, i32 1)
  call void @hash_extract_pv(i32 7, i8* %arraydecay35)
  call void @__softboundcets_deallocate_shadow_stack_space()
  %arraydecay36 = getelementptr inbounds [256 x i8]* %hashpv, i32 0, i32 0
  %call37 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([3 x i8]* @.str53450, i32 0, i32 0), i8* %arraydecay36)
  %30 = load i32* getelementptr inbounds ([300 x i32]* @pv_length, i32 0, i64 1), align 4
  %sub = sub nsw i32 %30, 1
  store i32 %sub, i32* %i, align 4
  br label %for.cond38

for.cond38:                                       ; preds = %for.inc44, %for.end
  %31 = load i32* %i, align 4
  %cmp39 = icmp sgt i32 %31, 0
  br i1 %cmp39, label %for.body41, label %for.end45

for.body41:                                       ; preds = %for.cond38
  %32 = load i32* %i, align 4
  %idxprom42 = sext i32 %32 to i64
  %arrayidx43 = getelementptr inbounds [300 x %struct.move_s]* getelementptr inbounds ([300 x [300 x %struct.move_s]]* @pv, i32 0, i64 1), i32 0, i64 %idxprom42
  call void @__softboundcets_allocate_shadow_stack_space(i32 2)
  call void @__softboundcets_store_base_shadow_stack(i8* null, i32 1)
  call void @__softboundcets_store_bound_shadow_stack(i8* inttoptr (i64 281474976710656 to i8*), i32 1)
  call void @unmake(%struct.move_s* %arrayidx43, i32 0)
  call void @__softboundcets_deallocate_shadow_stack_space()
  br label %for.inc44

for.inc44:                                        ; preds = %for.body41
  %33 = load i32* %i, align 4
  %dec = add nsw i32 %33, -1
  store i32 %dec, i32* %i, align 4
  br label %for.cond38

for.end45:                                        ; preds = %for.cond38
  %34 = load i32* %remake, align 4
  %tobool46 = icmp ne i32 %34, 0
  br i1 %tobool46, label %if.then47, label %if.end48

if.then47:                                        ; preds = %for.end45
  call void @__softboundcets_allocate_shadow_stack_space(i32 2)
  call void @__softboundcets_store_base_shadow_stack(i8* null, i32 1)
  call void @__softboundcets_store_bound_shadow_stack(i8* inttoptr (i64 281474976710656 to i8*), i32 1)
  call void @make(%struct.move_s* getelementptr inbounds ([300 x [300 x %struct.move_s]]* @pv, i32 0, i64 1, i64 1), i32 0)
  call void @__softboundcets_deallocate_shadow_stack_space()
  br label %if.end48

if.end48:                                         ; preds = %if.then47, %for.end45
  %call49 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([2 x i8]* @.str54451, i32 0, i32 0))
  ret void
}

; Function Attrs: nounwind uwtable
define internal i32 @rdifftime(i64 %end, i64 %start) #0 {
entry:
  %end.addr = alloca i64, align 8
  %end.addr1 = bitcast i64* %end.addr to i64*
  %bitcast = bitcast i64* %end.addr to i8*
  %mtmp = getelementptr i64* %end.addr1, i32 1
  %bitcast2 = bitcast i64* %mtmp to i8*
  %start.addr = alloca i64, align 8
  %start.addr3 = bitcast i64* %start.addr to i64*
  %bitcast4 = bitcast i64* %start.addr to i8*
  %mtmp5 = getelementptr i64* %start.addr3, i32 1
  %bitcast6 = bitcast i64* %mtmp5 to i8*
  store i64 %end, i64* %end.addr, align 8
  store i64 %start, i64* %start.addr, align 8
  %0 = load i64* %end.addr, align 8
  %1 = load i64* %start.addr, align 8
  %call = call double @softboundcets_difftime(i64 %0, i64 %1) #5
  %conv = fptosi double %call to i32
  %mul = mul nsw i32 100, %conv
  ret i32 %mul
}

; Function Attrs: nounwind uwtable
define i64 @rtime() #0 {
entry:
  ret i64 0
}

; Function Attrs: nounwind uwtable
define internal void @post_fail_thinking(i32 %score, %struct.move_s* %failmove) #0 {
entry:
  %base.alloca50 = alloca i8*
  %bound.alloca51 = alloca i8*
  %base.alloca45 = alloca i8*
  %bound.alloca46 = alloca i8*
  %base.alloca = alloca i8*
  %bound.alloca = alloca i8*
  %0 = call i8* @__softboundcets_load_base_shadow_stack(i32 1)
  %1 = call i8* @__softboundcets_load_bound_shadow_stack(i32 1)
  %score.addr = alloca i32, align 4
  %score.addr17 = bitcast i32* %score.addr to i32*
  %bitcast = bitcast i32* %score.addr to i8*
  %mtmp = getelementptr i32* %score.addr17, i32 1
  %bitcast18 = bitcast i32* %mtmp to i8*
  %failmove.addr = alloca %struct.move_s*, align 8
  %failmove.addr19 = bitcast %struct.move_s** %failmove.addr to %struct.move_s**
  %bitcast20 = bitcast %struct.move_s** %failmove.addr to i8*
  %mtmp21 = getelementptr %struct.move_s** %failmove.addr19, i32 1
  %bitcast22 = bitcast %struct.move_s** %mtmp21 to i8*
  %elapsed = alloca i32, align 4
  %elapsed23 = bitcast i32* %elapsed to i32*
  %bitcast24 = bitcast i32* %elapsed to i8*
  %mtmp25 = getelementptr i32* %elapsed23, i32 1
  %bitcast26 = bitcast i32* %mtmp25 to i8*
  %nps = alloca i32, align 4
  %nps27 = bitcast i32* %nps to i32*
  %bitcast28 = bitcast i32* %nps to i8*
  %mtmp29 = getelementptr i32* %nps27, i32 1
  %bitcast30 = bitcast i32* %mtmp29 to i8*
  %output = alloca [256 x i8], align 16
  %output31 = bitcast [256 x i8]* %output to [256 x i8]*
  %bitcast32 = bitcast [256 x i8]* %output to i8*
  %mtmp33 = getelementptr [256 x i8]* %output31, i32 1
  %bitcast34 = bitcast [256 x i8]* %mtmp33 to i8*
  %dnps = alloca double, align 8
  %dnps35 = bitcast double* %dnps to double*
  %bitcast36 = bitcast double* %dnps to i8*
  %mtmp37 = getelementptr double* %dnps35, i32 1
  %bitcast38 = bitcast double* %mtmp37 to i8*
  %tmp = alloca %struct.move_s, align 8
  %tmp39 = bitcast %struct.move_s* %tmp to %struct.move_s*
  %bitcast40 = bitcast %struct.move_s* %tmp to i8*
  %mtmp41 = getelementptr %struct.move_s* %tmp39, i32 1
  %bitcast42 = bitcast %struct.move_s* %mtmp41 to i8*
  store i32 %score, i32* %score.addr, align 4
  store %struct.move_s* %failmove, %struct.move_s** %failmove.addr, align 8
  %bitcast54 = bitcast %struct.move_s** %failmove.addr to i8*
  call void @__softboundcets_metadata_store(i8* %bitcast54, i8* %0, i8* %1)
  %call = call i64 @rtime()
  %2 = load i64* @start_time, align 8
  %call1 = call i32 @rdifftime(i64 %call, i64 %2)
  store i32 %call1, i32* %elapsed, align 4
  %3 = load i32* %elapsed, align 4
  %cmp = icmp sgt i32 %3, 0
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  %4 = load i32* @nodes, align 4
  %conv = sitofp i32 %4 to double
  %mul = fmul double 1.000000e+02, %conv
  %5 = load i32* %elapsed, align 4
  %conv2 = sitofp i32 %5 to double
  %div = fdiv double %mul, %conv2
  store double %div, double* %dnps, align 8
  %6 = load double* %dnps, align 8
  %conv3 = fptosi double %6 to i32
  store i32 %conv3, i32* %nps, align 4
  br label %if.end

if.else:                                          ; preds = %entry
  %7 = load i32* @nodes, align 4
  store i32 %7, i32* %nps, align 4
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %8 = load i32* @xb_mode, align 4
  %tobool = icmp ne i32 %8, 0
  br i1 %tobool, label %if.then4, label %if.else6

if.then4:                                         ; preds = %if.end
  %9 = load i32* @i_depth, align 4
  %10 = load i32* %score.addr, align 4
  %11 = load i32* %elapsed, align 4
  %12 = load i32* @nodes, align 4
  %call5 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([18 x i8]* @.str50447, i32 0, i32 0), i32 %9, i32 %10, i32 %11, i32 %12)
  br label %if.end13

if.else6:                                         ; preds = %if.end
  %13 = load i32* @i_depth, align 4
  %14 = load i32* %score.addr, align 4
  %cmp7 = icmp slt i32 %14, 0
  %cond = select i1 %cmp7, i32 45, i32 32
  %15 = load i32* %score.addr, align 4
  %div9 = sdiv i32 %15, 100
  %call10 = call i32 @softboundcets_abs(i32 %div9) #5
  %16 = load i32* %score.addr, align 4
  %rem = srem i32 %16, 100
  %call11 = call i32 @softboundcets_abs(i32 %rem) #5
  %17 = load i32* @nodes, align 4
  %call12 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([20 x i8]* @.str51448, i32 0, i32 0), i32 %13, i32 %cond, i32 %call10, i32 %call11, i32 %17)
  br label %if.end13

if.end13:                                         ; preds = %if.else6, %if.then4
  %18 = load %struct.move_s** %failmove.addr, align 8
  %bitcast43 = bitcast %struct.move_s** %failmove.addr to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast43, i8** %base.alloca, i8** %bound.alloca)
  %base.load = load i8** %base.alloca
  %bound.load = load i8** %bound.alloca
  call void @__softboundcets_allocate_shadow_stack_space(i32 2)
  call void @__softboundcets_store_base_shadow_stack(i8* %base.load, i32 1)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bound.load, i32 1)
  call void @unmake(%struct.move_s* %18, i32 0)
  call void @__softboundcets_deallocate_shadow_stack_space()
  %19 = load %struct.move_s** %failmove.addr, align 8
  %bitcast44 = bitcast %struct.move_s** %failmove.addr to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast44, i8** %base.alloca45, i8** %bound.alloca46)
  %base.load47 = load i8** %base.alloca45
  %bound.load48 = load i8** %bound.alloca46
  %arraydecay = getelementptr inbounds [256 x i8]* %output, i32 0, i32 0
  %20 = bitcast %struct.move_s* %tmp to i8*
  %21 = bitcast %struct.move_s* %19 to i8*
  call void @__softboundcets_memcopy_check(i8* %20, i8* %21, i64 24, i8* %bitcast40, i8* %bitcast42, i8* %base.load47, i8* %bound.load48)
  call void @__softboundcets_copy_metadata(i8* %20, i8* %21, i64 24)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %20, i8* %21, i64 24, i32 4, i1 false)
  call void @__softboundcets_allocate_shadow_stack_space(i32 3)
  call void @__softboundcets_store_base_shadow_stack(i8* %bitcast40, i32 1)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bitcast42, i32 1)
  call void @__softboundcets_store_base_shadow_stack(i8* %bitcast32, i32 2)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bitcast34, i32 2)
  call void @comp_to_san(%struct.move_s* byval align 8 %tmp, i8* %arraydecay)
  call void @__softboundcets_deallocate_shadow_stack_space()
  %22 = load %struct.move_s** %failmove.addr, align 8
  %bitcast49 = bitcast %struct.move_s** %failmove.addr to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast49, i8** %base.alloca50, i8** %bound.alloca51)
  %base.load52 = load i8** %base.alloca50
  %bound.load53 = load i8** %bound.alloca51
  call void @__softboundcets_allocate_shadow_stack_space(i32 2)
  call void @__softboundcets_store_base_shadow_stack(i8* %base.load52, i32 1)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bound.load53, i32 1)
  call void @make(%struct.move_s* %22, i32 0)
  call void @__softboundcets_deallocate_shadow_stack_space()
  %arraydecay14 = getelementptr inbounds [256 x i8]* %output, i32 0, i32 0
  %call15 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([5 x i8]* @.str55452, i32 0, i32 0), i8* %arraydecay14)
  %call16 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([2 x i8]* @.str54451, i32 0, i32 0))
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @post_fh_thinking(i32 %score, %struct.move_s* %failmove) #0 {
entry:
  %base.alloca50 = alloca i8*
  %bound.alloca51 = alloca i8*
  %base.alloca45 = alloca i8*
  %bound.alloca46 = alloca i8*
  %base.alloca = alloca i8*
  %bound.alloca = alloca i8*
  %0 = call i8* @__softboundcets_load_base_shadow_stack(i32 1)
  %1 = call i8* @__softboundcets_load_bound_shadow_stack(i32 1)
  %score.addr = alloca i32, align 4
  %score.addr17 = bitcast i32* %score.addr to i32*
  %bitcast = bitcast i32* %score.addr to i8*
  %mtmp = getelementptr i32* %score.addr17, i32 1
  %bitcast18 = bitcast i32* %mtmp to i8*
  %failmove.addr = alloca %struct.move_s*, align 8
  %failmove.addr19 = bitcast %struct.move_s** %failmove.addr to %struct.move_s**
  %bitcast20 = bitcast %struct.move_s** %failmove.addr to i8*
  %mtmp21 = getelementptr %struct.move_s** %failmove.addr19, i32 1
  %bitcast22 = bitcast %struct.move_s** %mtmp21 to i8*
  %elapsed = alloca i32, align 4
  %elapsed23 = bitcast i32* %elapsed to i32*
  %bitcast24 = bitcast i32* %elapsed to i8*
  %mtmp25 = getelementptr i32* %elapsed23, i32 1
  %bitcast26 = bitcast i32* %mtmp25 to i8*
  %nps = alloca i32, align 4
  %nps27 = bitcast i32* %nps to i32*
  %bitcast28 = bitcast i32* %nps to i8*
  %mtmp29 = getelementptr i32* %nps27, i32 1
  %bitcast30 = bitcast i32* %mtmp29 to i8*
  %output = alloca [256 x i8], align 16
  %output31 = bitcast [256 x i8]* %output to [256 x i8]*
  %bitcast32 = bitcast [256 x i8]* %output to i8*
  %mtmp33 = getelementptr [256 x i8]* %output31, i32 1
  %bitcast34 = bitcast [256 x i8]* %mtmp33 to i8*
  %dnps = alloca double, align 8
  %dnps35 = bitcast double* %dnps to double*
  %bitcast36 = bitcast double* %dnps to i8*
  %mtmp37 = getelementptr double* %dnps35, i32 1
  %bitcast38 = bitcast double* %mtmp37 to i8*
  %tmp = alloca %struct.move_s, align 8
  %tmp39 = bitcast %struct.move_s* %tmp to %struct.move_s*
  %bitcast40 = bitcast %struct.move_s* %tmp to i8*
  %mtmp41 = getelementptr %struct.move_s* %tmp39, i32 1
  %bitcast42 = bitcast %struct.move_s* %mtmp41 to i8*
  store i32 %score, i32* %score.addr, align 4
  store %struct.move_s* %failmove, %struct.move_s** %failmove.addr, align 8
  %bitcast54 = bitcast %struct.move_s** %failmove.addr to i8*
  call void @__softboundcets_metadata_store(i8* %bitcast54, i8* %0, i8* %1)
  %call = call i64 @rtime()
  %2 = load i64* @start_time, align 8
  %call1 = call i32 @rdifftime(i64 %call, i64 %2)
  store i32 %call1, i32* %elapsed, align 4
  %3 = load i32* %elapsed, align 4
  %cmp = icmp sgt i32 %3, 0
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  %4 = load i32* @nodes, align 4
  %conv = sitofp i32 %4 to double
  %mul = fmul double 1.000000e+02, %conv
  %5 = load i32* %elapsed, align 4
  %conv2 = sitofp i32 %5 to double
  %div = fdiv double %mul, %conv2
  store double %div, double* %dnps, align 8
  %6 = load double* %dnps, align 8
  %conv3 = fptosi double %6 to i32
  store i32 %conv3, i32* %nps, align 4
  br label %if.end

if.else:                                          ; preds = %entry
  %7 = load i32* @nodes, align 4
  store i32 %7, i32* %nps, align 4
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %8 = load i32* @xb_mode, align 4
  %tobool = icmp ne i32 %8, 0
  br i1 %tobool, label %if.then4, label %if.else6

if.then4:                                         ; preds = %if.end
  %9 = load i32* @i_depth, align 4
  %10 = load i32* %score.addr, align 4
  %11 = load i32* %elapsed, align 4
  %12 = load i32* @nodes, align 4
  %call5 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([18 x i8]* @.str50447, i32 0, i32 0), i32 %9, i32 %10, i32 %11, i32 %12)
  br label %if.end13

if.else6:                                         ; preds = %if.end
  %13 = load i32* @i_depth, align 4
  %14 = load i32* %score.addr, align 4
  %cmp7 = icmp slt i32 %14, 0
  %cond = select i1 %cmp7, i32 45, i32 32
  %15 = load i32* %score.addr, align 4
  %div9 = sdiv i32 %15, 100
  %call10 = call i32 @softboundcets_abs(i32 %div9) #5
  %16 = load i32* %score.addr, align 4
  %rem = srem i32 %16, 100
  %call11 = call i32 @softboundcets_abs(i32 %rem) #5
  %17 = load i32* @nodes, align 4
  %call12 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([20 x i8]* @.str51448, i32 0, i32 0), i32 %13, i32 %cond, i32 %call10, i32 %call11, i32 %17)
  br label %if.end13

if.end13:                                         ; preds = %if.else6, %if.then4
  %18 = load %struct.move_s** %failmove.addr, align 8
  %bitcast43 = bitcast %struct.move_s** %failmove.addr to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast43, i8** %base.alloca, i8** %bound.alloca)
  %base.load = load i8** %base.alloca
  %bound.load = load i8** %bound.alloca
  call void @__softboundcets_allocate_shadow_stack_space(i32 2)
  call void @__softboundcets_store_base_shadow_stack(i8* %base.load, i32 1)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bound.load, i32 1)
  call void @unmake(%struct.move_s* %18, i32 0)
  call void @__softboundcets_deallocate_shadow_stack_space()
  %19 = load %struct.move_s** %failmove.addr, align 8
  %bitcast44 = bitcast %struct.move_s** %failmove.addr to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast44, i8** %base.alloca45, i8** %bound.alloca46)
  %base.load47 = load i8** %base.alloca45
  %bound.load48 = load i8** %bound.alloca46
  %arraydecay = getelementptr inbounds [256 x i8]* %output, i32 0, i32 0
  %20 = bitcast %struct.move_s* %tmp to i8*
  %21 = bitcast %struct.move_s* %19 to i8*
  call void @__softboundcets_memcopy_check(i8* %20, i8* %21, i64 24, i8* %bitcast40, i8* %bitcast42, i8* %base.load47, i8* %bound.load48)
  call void @__softboundcets_copy_metadata(i8* %20, i8* %21, i64 24)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %20, i8* %21, i64 24, i32 4, i1 false)
  call void @__softboundcets_allocate_shadow_stack_space(i32 3)
  call void @__softboundcets_store_base_shadow_stack(i8* %bitcast40, i32 1)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bitcast42, i32 1)
  call void @__softboundcets_store_base_shadow_stack(i8* %bitcast32, i32 2)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bitcast34, i32 2)
  call void @comp_to_san(%struct.move_s* byval align 8 %tmp, i8* %arraydecay)
  call void @__softboundcets_deallocate_shadow_stack_space()
  %22 = load %struct.move_s** %failmove.addr, align 8
  %bitcast49 = bitcast %struct.move_s** %failmove.addr to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast49, i8** %base.alloca50, i8** %bound.alloca51)
  %base.load52 = load i8** %base.alloca50
  %bound.load53 = load i8** %bound.alloca51
  call void @__softboundcets_allocate_shadow_stack_space(i32 2)
  call void @__softboundcets_store_base_shadow_stack(i8* %base.load52, i32 1)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bound.load53, i32 1)
  call void @make(%struct.move_s* %22, i32 0)
  call void @__softboundcets_deallocate_shadow_stack_space()
  %arraydecay14 = getelementptr inbounds [256 x i8]* %output, i32 0, i32 0
  %call15 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([6 x i8]* @.str56453, i32 0, i32 0), i8* %arraydecay14)
  %call16 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([2 x i8]* @.str54451, i32 0, i32 0))
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @post_fl_thinking(i32 %score, %struct.move_s* %failmove) #0 {
entry:
  %base.alloca50 = alloca i8*
  %bound.alloca51 = alloca i8*
  %base.alloca45 = alloca i8*
  %bound.alloca46 = alloca i8*
  %base.alloca = alloca i8*
  %bound.alloca = alloca i8*
  %0 = call i8* @__softboundcets_load_base_shadow_stack(i32 1)
  %1 = call i8* @__softboundcets_load_bound_shadow_stack(i32 1)
  %score.addr = alloca i32, align 4
  %score.addr17 = bitcast i32* %score.addr to i32*
  %bitcast = bitcast i32* %score.addr to i8*
  %mtmp = getelementptr i32* %score.addr17, i32 1
  %bitcast18 = bitcast i32* %mtmp to i8*
  %failmove.addr = alloca %struct.move_s*, align 8
  %failmove.addr19 = bitcast %struct.move_s** %failmove.addr to %struct.move_s**
  %bitcast20 = bitcast %struct.move_s** %failmove.addr to i8*
  %mtmp21 = getelementptr %struct.move_s** %failmove.addr19, i32 1
  %bitcast22 = bitcast %struct.move_s** %mtmp21 to i8*
  %elapsed = alloca i32, align 4
  %elapsed23 = bitcast i32* %elapsed to i32*
  %bitcast24 = bitcast i32* %elapsed to i8*
  %mtmp25 = getelementptr i32* %elapsed23, i32 1
  %bitcast26 = bitcast i32* %mtmp25 to i8*
  %nps = alloca i32, align 4
  %nps27 = bitcast i32* %nps to i32*
  %bitcast28 = bitcast i32* %nps to i8*
  %mtmp29 = getelementptr i32* %nps27, i32 1
  %bitcast30 = bitcast i32* %mtmp29 to i8*
  %output = alloca [256 x i8], align 16
  %output31 = bitcast [256 x i8]* %output to [256 x i8]*
  %bitcast32 = bitcast [256 x i8]* %output to i8*
  %mtmp33 = getelementptr [256 x i8]* %output31, i32 1
  %bitcast34 = bitcast [256 x i8]* %mtmp33 to i8*
  %dnps = alloca double, align 8
  %dnps35 = bitcast double* %dnps to double*
  %bitcast36 = bitcast double* %dnps to i8*
  %mtmp37 = getelementptr double* %dnps35, i32 1
  %bitcast38 = bitcast double* %mtmp37 to i8*
  %tmp = alloca %struct.move_s, align 8
  %tmp39 = bitcast %struct.move_s* %tmp to %struct.move_s*
  %bitcast40 = bitcast %struct.move_s* %tmp to i8*
  %mtmp41 = getelementptr %struct.move_s* %tmp39, i32 1
  %bitcast42 = bitcast %struct.move_s* %mtmp41 to i8*
  store i32 %score, i32* %score.addr, align 4
  store %struct.move_s* %failmove, %struct.move_s** %failmove.addr, align 8
  %bitcast54 = bitcast %struct.move_s** %failmove.addr to i8*
  call void @__softboundcets_metadata_store(i8* %bitcast54, i8* %0, i8* %1)
  %call = call i64 @rtime()
  %2 = load i64* @start_time, align 8
  %call1 = call i32 @rdifftime(i64 %call, i64 %2)
  store i32 %call1, i32* %elapsed, align 4
  %3 = load i32* %elapsed, align 4
  %cmp = icmp sgt i32 %3, 0
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  %4 = load i32* @nodes, align 4
  %conv = sitofp i32 %4 to double
  %mul = fmul double 1.000000e+02, %conv
  %5 = load i32* %elapsed, align 4
  %conv2 = sitofp i32 %5 to double
  %div = fdiv double %mul, %conv2
  store double %div, double* %dnps, align 8
  %6 = load double* %dnps, align 8
  %conv3 = fptosi double %6 to i32
  store i32 %conv3, i32* %nps, align 4
  br label %if.end

if.else:                                          ; preds = %entry
  %7 = load i32* @nodes, align 4
  store i32 %7, i32* %nps, align 4
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %8 = load i32* @xb_mode, align 4
  %tobool = icmp ne i32 %8, 0
  br i1 %tobool, label %if.then4, label %if.else6

if.then4:                                         ; preds = %if.end
  %9 = load i32* @i_depth, align 4
  %10 = load i32* %score.addr, align 4
  %11 = load i32* %elapsed, align 4
  %12 = load i32* @nodes, align 4
  %call5 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([18 x i8]* @.str50447, i32 0, i32 0), i32 %9, i32 %10, i32 %11, i32 %12)
  br label %if.end13

if.else6:                                         ; preds = %if.end
  %13 = load i32* @i_depth, align 4
  %14 = load i32* %score.addr, align 4
  %cmp7 = icmp slt i32 %14, 0
  %cond = select i1 %cmp7, i32 45, i32 32
  %15 = load i32* %score.addr, align 4
  %div9 = sdiv i32 %15, 100
  %call10 = call i32 @softboundcets_abs(i32 %div9) #5
  %16 = load i32* %score.addr, align 4
  %rem = srem i32 %16, 100
  %call11 = call i32 @softboundcets_abs(i32 %rem) #5
  %17 = load i32* @nodes, align 4
  %call12 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([20 x i8]* @.str51448, i32 0, i32 0), i32 %13, i32 %cond, i32 %call10, i32 %call11, i32 %17)
  br label %if.end13

if.end13:                                         ; preds = %if.else6, %if.then4
  %18 = load %struct.move_s** %failmove.addr, align 8
  %bitcast43 = bitcast %struct.move_s** %failmove.addr to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast43, i8** %base.alloca, i8** %bound.alloca)
  %base.load = load i8** %base.alloca
  %bound.load = load i8** %bound.alloca
  call void @__softboundcets_allocate_shadow_stack_space(i32 2)
  call void @__softboundcets_store_base_shadow_stack(i8* %base.load, i32 1)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bound.load, i32 1)
  call void @unmake(%struct.move_s* %18, i32 0)
  call void @__softboundcets_deallocate_shadow_stack_space()
  %19 = load %struct.move_s** %failmove.addr, align 8
  %bitcast44 = bitcast %struct.move_s** %failmove.addr to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast44, i8** %base.alloca45, i8** %bound.alloca46)
  %base.load47 = load i8** %base.alloca45
  %bound.load48 = load i8** %bound.alloca46
  %arraydecay = getelementptr inbounds [256 x i8]* %output, i32 0, i32 0
  %20 = bitcast %struct.move_s* %tmp to i8*
  %21 = bitcast %struct.move_s* %19 to i8*
  call void @__softboundcets_memcopy_check(i8* %20, i8* %21, i64 24, i8* %bitcast40, i8* %bitcast42, i8* %base.load47, i8* %bound.load48)
  call void @__softboundcets_copy_metadata(i8* %20, i8* %21, i64 24)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %20, i8* %21, i64 24, i32 4, i1 false)
  call void @__softboundcets_allocate_shadow_stack_space(i32 3)
  call void @__softboundcets_store_base_shadow_stack(i8* %bitcast40, i32 1)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bitcast42, i32 1)
  call void @__softboundcets_store_base_shadow_stack(i8* %bitcast32, i32 2)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bitcast34, i32 2)
  call void @comp_to_san(%struct.move_s* byval align 8 %tmp, i8* %arraydecay)
  call void @__softboundcets_deallocate_shadow_stack_space()
  %22 = load %struct.move_s** %failmove.addr, align 8
  %bitcast49 = bitcast %struct.move_s** %failmove.addr to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast49, i8** %base.alloca50, i8** %bound.alloca51)
  %base.load52 = load i8** %base.alloca50
  %bound.load53 = load i8** %bound.alloca51
  call void @__softboundcets_allocate_shadow_stack_space(i32 2)
  call void @__softboundcets_store_base_shadow_stack(i8* %base.load52, i32 1)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bound.load53, i32 1)
  call void @make(%struct.move_s* %22, i32 0)
  call void @__softboundcets_deallocate_shadow_stack_space()
  %arraydecay14 = getelementptr inbounds [256 x i8]* %output, i32 0, i32 0
  %call15 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([6 x i8]* @.str57454, i32 0, i32 0), i8* %arraydecay14)
  %call16 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([2 x i8]* @.str54451, i32 0, i32 0))
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @post_stat_thinking() #0 {
entry:
  %elapsed = alloca i32, align 4
  %elapsed7 = bitcast i32* %elapsed to i32*
  %bitcast = bitcast i32* %elapsed to i8*
  %mtmp = getelementptr i32* %elapsed7, i32 1
  %bitcast8 = bitcast i32* %mtmp to i8*
  %call = call i64 @rtime()
  %0 = load i64* @start_time, align 8
  %call1 = call i32 @rdifftime(i64 %call, i64 %0)
  store i32 %call1, i32* %elapsed, align 4
  %1 = load i32* @xb_mode, align 4
  %cmp = icmp eq i32 %1, 1
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  %2 = load i32* %elapsed, align 4
  %3 = load i32* @nodes, align 4
  %4 = load i32* @i_depth, align 4
  %5 = load i32* @moveleft, align 4
  %6 = load i32* @movetotal, align 4
  %call2 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([24 x i8]* @.str58455, i32 0, i32 0), i32 %2, i32 %3, i32 %4, i32 %5, i32 %6)
  br label %if.end6

if.else:                                          ; preds = %entry
  %7 = load i32* @xb_mode, align 4
  %cmp3 = icmp eq i32 %7, 2
  br i1 %cmp3, label %if.then4, label %if.end

if.then4:                                         ; preds = %if.else
  %8 = load i32* %elapsed, align 4
  %9 = load i32* @nodes, align 4
  %10 = load i32* @i_depth, align 4
  %11 = load i32* @moveleft, align 4
  %12 = load i32* @movetotal, align 4
  %call5 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([27 x i8]* @.str59456, i32 0, i32 0), i32 %8, i32 %9, i32 %10, i32 %11, i32 %12, i8* getelementptr inbounds ([20 x i8]* @searching_move, i32 0, i32 0))
  br label %if.end

if.end:                                           ; preds = %if.then4, %if.else
  br label %if.end6

if.end6:                                          ; preds = %if.end, %if.then
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @print_move(%struct.move_s* %moves, i32 %m, %struct._IO_FILE* %stream) #0 {
entry:
  %base.alloca22 = alloca i8*
  %bound.alloca23 = alloca i8*
  %base.alloca = alloca i8*
  %bound.alloca = alloca i8*
  %0 = call i8* @__softboundcets_load_base_shadow_stack(i32 2)
  %1 = call i8* @__softboundcets_load_bound_shadow_stack(i32 2)
  %2 = call i8* @__softboundcets_load_base_shadow_stack(i32 1)
  %3 = call i8* @__softboundcets_load_bound_shadow_stack(i32 1)
  %moves.addr = alloca %struct.move_s*, align 8
  %moves.addr2 = bitcast %struct.move_s** %moves.addr to %struct.move_s**
  %bitcast = bitcast %struct.move_s** %moves.addr to i8*
  %mtmp = getelementptr %struct.move_s** %moves.addr2, i32 1
  %bitcast3 = bitcast %struct.move_s** %mtmp to i8*
  %m.addr = alloca i32, align 4
  %m.addr4 = bitcast i32* %m.addr to i32*
  %bitcast5 = bitcast i32* %m.addr to i8*
  %mtmp6 = getelementptr i32* %m.addr4, i32 1
  %bitcast7 = bitcast i32* %mtmp6 to i8*
  %stream.addr = alloca %struct._IO_FILE*, align 8
  %stream.addr8 = bitcast %struct._IO_FILE** %stream.addr to %struct._IO_FILE**
  %bitcast9 = bitcast %struct._IO_FILE** %stream.addr to i8*
  %mtmp10 = getelementptr %struct._IO_FILE** %stream.addr8, i32 1
  %bitcast11 = bitcast %struct._IO_FILE** %mtmp10 to i8*
  %move = alloca [256 x i8], align 16
  %move12 = bitcast [256 x i8]* %move to [256 x i8]*
  %bitcast13 = bitcast [256 x i8]* %move to i8*
  %mtmp14 = getelementptr [256 x i8]* %move12, i32 1
  %bitcast15 = bitcast [256 x i8]* %mtmp14 to i8*
  %tmp = alloca %struct.move_s, align 8
  %tmp16 = bitcast %struct.move_s* %tmp to %struct.move_s*
  %bitcast17 = bitcast %struct.move_s* %tmp to i8*
  %mtmp18 = getelementptr %struct.move_s* %tmp16, i32 1
  %bitcast19 = bitcast %struct.move_s* %mtmp18 to i8*
  store %struct.move_s* %moves, %struct.move_s** %moves.addr, align 8
  %bitcast26 = bitcast %struct.move_s** %moves.addr to i8*
  call void @__softboundcets_metadata_store(i8* %bitcast26, i8* %2, i8* %3)
  store i32 %m, i32* %m.addr, align 4
  store %struct._IO_FILE* %stream, %struct._IO_FILE** %stream.addr, align 8
  %bitcast27 = bitcast %struct._IO_FILE** %stream.addr to i8*
  call void @__softboundcets_metadata_store(i8* %bitcast27, i8* %0, i8* %1)
  %4 = load i32* %m.addr, align 4
  %idxprom = sext i32 %4 to i64
  %5 = load %struct.move_s** %moves.addr, align 8
  %bitcast20 = bitcast %struct.move_s** %moves.addr to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast20, i8** %base.alloca, i8** %bound.alloca)
  %base.load = load i8** %base.alloca
  %bound.load = load i8** %bound.alloca
  %arrayidx = getelementptr inbounds %struct.move_s* %5, i64 %idxprom
  %arraydecay = getelementptr inbounds [256 x i8]* %move, i32 0, i32 0
  %6 = bitcast %struct.move_s* %tmp to i8*
  %7 = bitcast %struct.move_s* %arrayidx to i8*
  call void @__softboundcets_memcopy_check(i8* %6, i8* %7, i64 24, i8* %bitcast17, i8* %bitcast19, i8* %base.load, i8* %bound.load)
  call void @__softboundcets_copy_metadata(i8* %6, i8* %7, i64 24)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %6, i8* %7, i64 24, i32 4, i1 false)
  call void @__softboundcets_allocate_shadow_stack_space(i32 3)
  call void @__softboundcets_store_base_shadow_stack(i8* %bitcast17, i32 1)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bitcast19, i32 1)
  call void @__softboundcets_store_base_shadow_stack(i8* %bitcast13, i32 2)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bitcast15, i32 2)
  call void @comp_to_san(%struct.move_s* byval align 8 %tmp, i8* %arraydecay)
  call void @__softboundcets_deallocate_shadow_stack_space()
  %8 = load %struct._IO_FILE** %stream.addr, align 8
  %bitcast21 = bitcast %struct._IO_FILE** %stream.addr to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast21, i8** %base.alloca22, i8** %bound.alloca23)
  %base.load24 = load i8** %base.alloca22
  %bound.load25 = load i8** %bound.alloca23
  %arraydecay1 = getelementptr inbounds [256 x i8]* %move, i32 0, i32 0
  %call = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %8, i8* getelementptr inbounds ([3 x i8]* @.str53450, i32 0, i32 0), i8* %arraydecay1)
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @rdelay(i32 %time_in_s) #0 {
entry:
  %time_in_s.addr = alloca i32, align 4
  %time_in_s.addr3 = bitcast i32* %time_in_s.addr to i32*
  %bitcast = bitcast i32* %time_in_s.addr to i8*
  %mtmp = getelementptr i32* %time_in_s.addr3, i32 1
  %bitcast4 = bitcast i32* %mtmp to i8*
  %time1 = alloca i64, align 8
  %time15 = bitcast i64* %time1 to i64*
  %bitcast6 = bitcast i64* %time1 to i8*
  %mtmp7 = getelementptr i64* %time15, i32 1
  %bitcast8 = bitcast i64* %mtmp7 to i8*
  %time2 = alloca i64, align 8
  %time29 = bitcast i64* %time2 to i64*
  %bitcast10 = bitcast i64* %time2 to i8*
  %mtmp11 = getelementptr i64* %time29, i32 1
  %bitcast12 = bitcast i64* %mtmp11 to i8*
  %timer = alloca i32, align 4
  %timer13 = bitcast i32* %timer to i32*
  %bitcast14 = bitcast i32* %timer to i8*
  %mtmp15 = getelementptr i32* %timer13, i32 1
  %bitcast16 = bitcast i32* %mtmp15 to i8*
  store i32 %time_in_s, i32* %time_in_s.addr, align 4
  store i32 0, i32* %timer, align 4
  %call = call i64 @rtime()
  store i64 %call, i64* %time1, align 8
  br label %while.cond

while.cond:                                       ; preds = %while.body, %entry
  %0 = load i32* %timer, align 4
  %div = sdiv i32 %0, 100
  %1 = load i32* %time_in_s.addr, align 4
  %cmp = icmp slt i32 %div, %1
  br i1 %cmp, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  %call1 = call i64 @rtime()
  store i64 %call1, i64* %time2, align 8
  %2 = load i64* %time2, align 8
  %3 = load i64* %time1, align 8
  %call2 = call i32 @rdifftime(i64 %2, i64 %3)
  store i32 %call2, i32* %timer, align 4
  br label %while.cond

while.end:                                        ; preds = %while.cond
  ret void
}

declare double @softboundcets_difftime(i64, i64)

; Function Attrs: nounwind uwtable
define internal void @check_piece_square() #0 {
entry:
  %base.alloca100 = alloca i8*
  %bound.alloca101 = alloca i8*
  %base.alloca95 = alloca i8*
  %bound.alloca96 = alloca i8*
  %base.alloca90 = alloca i8*
  %bound.alloca91 = alloca i8*
  %base.alloca85 = alloca i8*
  %bound.alloca86 = alloca i8*
  %base.alloca80 = alloca i8*
  %bound.alloca81 = alloca i8*
  %base.alloca = alloca i8*
  %bound.alloca = alloca i8*
  %i = alloca i32, align 4
  %i76 = bitcast i32* %i to i32*
  %bitcast = bitcast i32* %i to i8*
  %mtmp = getelementptr i32* %i76, i32 1
  %bitcast77 = bitcast i32* %mtmp to i8*
  store i32 1, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32* %i, align 4
  %1 = load i32* @piece_count, align 4
  %cmp = icmp sle i32 %0, %1
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %2 = load i32* %i, align 4
  %idxprom = sext i32 %2 to i64
  %arrayidx = getelementptr inbounds [62 x i32]* @pieces, i32 0, i64 %idxprom
  %3 = load i32* %arrayidx, align 4
  %idxprom1 = sext i32 %3 to i64
  %arrayidx2 = getelementptr inbounds [144 x i32]* @squares, i32 0, i64 %idxprom1
  %4 = load i32* %arrayidx2, align 4
  %5 = load i32* %i, align 4
  %cmp3 = icmp ne i32 %4, %5
  br i1 %cmp3, label %land.lhs.true, label %if.end

land.lhs.true:                                    ; preds = %for.body
  %6 = load i32* %i, align 4
  %idxprom4 = sext i32 %6 to i64
  %arrayidx5 = getelementptr inbounds [62 x i32]* @pieces, i32 0, i64 %idxprom4
  %7 = load i32* %arrayidx5, align 4
  %cmp6 = icmp ne i32 %7, 0
  br i1 %cmp6, label %if.then, label %if.end

if.then:                                          ; preds = %land.lhs.true
  %call = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([36 x i8]* @.str60457, i32 0, i32 0))
  %8 = load %struct._IO_FILE** @stdout, align 8
  %bitcast78 = bitcast %struct._IO_FILE** @stdout to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast78, i8** %base.alloca, i8** %bound.alloca)
  %base.load = load i8** %base.alloca
  %bound.load = load i8** %bound.alloca
  call void @__softboundcets_allocate_shadow_stack_space(i32 2)
  call void @__softboundcets_store_base_shadow_stack(i8* %base.load, i32 1)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bound.load, i32 1)
  call void @display_board(%struct._IO_FILE* %8, i32 0)
  call void @__softboundcets_deallocate_shadow_stack_space()
  store i32 0, i32* null, align 4
  br label %if.end

if.end:                                           ; preds = %if.then, %land.lhs.true, %for.body
  %9 = load i32* %i, align 4
  %idxprom7 = sext i32 %9 to i64
  %arrayidx8 = getelementptr inbounds [62 x i32]* @pieces, i32 0, i64 %idxprom7
  %10 = load i32* %arrayidx8, align 4
  %idxprom9 = sext i32 %10 to i64
  %arrayidx10 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom9
  %11 = load i32* %arrayidx10, align 4
  %cmp11 = icmp eq i32 %11, 13
  br i1 %cmp11, label %land.lhs.true12, label %if.end18

land.lhs.true12:                                  ; preds = %if.end
  %12 = load i32* %i, align 4
  %idxprom13 = sext i32 %12 to i64
  %arrayidx14 = getelementptr inbounds [62 x i32]* @pieces, i32 0, i64 %idxprom13
  %13 = load i32* %arrayidx14, align 4
  %cmp15 = icmp ne i32 %13, 0
  br i1 %cmp15, label %if.then16, label %if.end18

if.then16:                                        ; preds = %land.lhs.true12
  %call17 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([35 x i8]* @.str61458, i32 0, i32 0))
  %14 = load %struct._IO_FILE** @stdout, align 8
  %bitcast79 = bitcast %struct._IO_FILE** @stdout to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast79, i8** %base.alloca80, i8** %bound.alloca81)
  %base.load82 = load i8** %base.alloca80
  %bound.load83 = load i8** %bound.alloca81
  call void @__softboundcets_allocate_shadow_stack_space(i32 2)
  call void @__softboundcets_store_base_shadow_stack(i8* %base.load82, i32 1)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bound.load83, i32 1)
  call void @display_board(%struct._IO_FILE* %14, i32 0)
  call void @__softboundcets_deallocate_shadow_stack_space()
  store i32 0, i32* null, align 4
  br label %if.end18

if.end18:                                         ; preds = %if.then16, %land.lhs.true12, %if.end
  %15 = load i32* %i, align 4
  %idxprom19 = sext i32 %15 to i64
  %arrayidx20 = getelementptr inbounds [62 x i32]* @pieces, i32 0, i64 %idxprom19
  %16 = load i32* %arrayidx20, align 4
  %cmp21 = icmp eq i32 %16, 0
  br i1 %cmp21, label %land.lhs.true22, label %if.end30

land.lhs.true22:                                  ; preds = %if.end18
  %17 = load i32* %i, align 4
  %idxprom23 = sext i32 %17 to i64
  %arrayidx24 = getelementptr inbounds [62 x i32]* @pieces, i32 0, i64 %idxprom23
  %18 = load i32* %arrayidx24, align 4
  %idxprom25 = sext i32 %18 to i64
  %arrayidx26 = getelementptr inbounds [144 x i32]* @squares, i32 0, i64 %idxprom25
  %19 = load i32* %arrayidx26, align 4
  %cmp27 = icmp ne i32 %19, 0
  br i1 %cmp27, label %if.then28, label %if.end30

if.then28:                                        ; preds = %land.lhs.true22
  %call29 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([29 x i8]* @.str62459, i32 0, i32 0))
  %20 = load %struct._IO_FILE** @stdout, align 8
  %bitcast84 = bitcast %struct._IO_FILE** @stdout to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast84, i8** %base.alloca85, i8** %bound.alloca86)
  %base.load87 = load i8** %base.alloca85
  %bound.load88 = load i8** %bound.alloca86
  call void @__softboundcets_allocate_shadow_stack_space(i32 2)
  call void @__softboundcets_store_base_shadow_stack(i8* %base.load87, i32 1)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bound.load88, i32 1)
  call void @display_board(%struct._IO_FILE* %20, i32 0)
  call void @__softboundcets_deallocate_shadow_stack_space()
  store i32 0, i32* null, align 4
  br label %if.end30

if.end30:                                         ; preds = %if.then28, %land.lhs.true22, %if.end18
  br label %for.inc

for.inc:                                          ; preds = %if.end30
  %21 = load i32* %i, align 4
  %inc = add nsw i32 %21, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  store i32 0, i32* %i, align 4
  br label %for.cond31

for.cond31:                                       ; preds = %for.inc73, %for.end
  %22 = load i32* %i, align 4
  %cmp32 = icmp slt i32 %22, 144
  br i1 %cmp32, label %for.body33, label %for.end75

for.body33:                                       ; preds = %for.cond31
  %23 = load i32* %i, align 4
  %idxprom34 = sext i32 %23 to i64
  %arrayidx35 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom34
  %24 = load i32* %arrayidx35, align 4
  %cmp36 = icmp eq i32 %24, 13
  br i1 %cmp36, label %land.lhs.true40, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %for.body33
  %25 = load i32* %i, align 4
  %idxprom37 = sext i32 %25 to i64
  %arrayidx38 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom37
  %26 = load i32* %arrayidx38, align 4
  %cmp39 = icmp eq i32 %26, 0
  br i1 %cmp39, label %land.lhs.true40, label %if.end46

land.lhs.true40:                                  ; preds = %lor.lhs.false, %for.body33
  %27 = load i32* %i, align 4
  %idxprom41 = sext i32 %27 to i64
  %arrayidx42 = getelementptr inbounds [144 x i32]* @squares, i32 0, i64 %idxprom41
  %28 = load i32* %arrayidx42, align 4
  %cmp43 = icmp ne i32 %28, 0
  br i1 %cmp43, label %if.then44, label %if.end46

if.then44:                                        ; preds = %land.lhs.true40
  %call45 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([32 x i8]* @.str63460, i32 0, i32 0))
  %29 = load %struct._IO_FILE** @stdout, align 8
  %bitcast89 = bitcast %struct._IO_FILE** @stdout to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast89, i8** %base.alloca90, i8** %bound.alloca91)
  %base.load92 = load i8** %base.alloca90
  %bound.load93 = load i8** %bound.alloca91
  call void @__softboundcets_allocate_shadow_stack_space(i32 2)
  call void @__softboundcets_store_base_shadow_stack(i8* %base.load92, i32 1)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bound.load93, i32 1)
  call void @display_board(%struct._IO_FILE* %29, i32 0)
  call void @__softboundcets_deallocate_shadow_stack_space()
  store i32 0, i32* null, align 4
  br label %if.end46

if.end46:                                         ; preds = %if.then44, %land.lhs.true40, %lor.lhs.false
  %30 = load i32* %i, align 4
  %idxprom47 = sext i32 %30 to i64
  %arrayidx48 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom47
  %31 = load i32* %arrayidx48, align 4
  %cmp49 = icmp ne i32 %31, 13
  br i1 %cmp49, label %land.lhs.true50, label %if.end60

land.lhs.true50:                                  ; preds = %if.end46
  %32 = load i32* %i, align 4
  %idxprom51 = sext i32 %32 to i64
  %arrayidx52 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom51
  %33 = load i32* %arrayidx52, align 4
  %cmp53 = icmp ne i32 %33, 0
  br i1 %cmp53, label %land.lhs.true54, label %if.end60

land.lhs.true54:                                  ; preds = %land.lhs.true50
  %34 = load i32* %i, align 4
  %idxprom55 = sext i32 %34 to i64
  %arrayidx56 = getelementptr inbounds [144 x i32]* @squares, i32 0, i64 %idxprom55
  %35 = load i32* %arrayidx56, align 4
  %cmp57 = icmp eq i32 %35, 0
  br i1 %cmp57, label %if.then58, label %if.end60

if.then58:                                        ; preds = %land.lhs.true54
  %36 = load i32* %i, align 4
  %call59 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([39 x i8]* @.str64461, i32 0, i32 0), i32 %36)
  %37 = load %struct._IO_FILE** @stdout, align 8
  %bitcast94 = bitcast %struct._IO_FILE** @stdout to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast94, i8** %base.alloca95, i8** %bound.alloca96)
  %base.load97 = load i8** %base.alloca95
  %bound.load98 = load i8** %bound.alloca96
  call void @__softboundcets_allocate_shadow_stack_space(i32 2)
  call void @__softboundcets_store_base_shadow_stack(i8* %base.load97, i32 1)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bound.load98, i32 1)
  call void @display_board(%struct._IO_FILE* %37, i32 0)
  call void @__softboundcets_deallocate_shadow_stack_space()
  store i32 0, i32* null, align 4
  br label %if.end60

if.end60:                                         ; preds = %if.then58, %land.lhs.true54, %land.lhs.true50, %if.end46
  %38 = load i32* %i, align 4
  %idxprom61 = sext i32 %38 to i64
  %arrayidx62 = getelementptr inbounds [144 x i32]* @squares, i32 0, i64 %idxprom61
  %39 = load i32* %arrayidx62, align 4
  %idxprom63 = sext i32 %39 to i64
  %arrayidx64 = getelementptr inbounds [62 x i32]* @pieces, i32 0, i64 %idxprom63
  %40 = load i32* %arrayidx64, align 4
  %41 = load i32* %i, align 4
  %cmp65 = icmp ne i32 %40, %41
  br i1 %cmp65, label %land.lhs.true66, label %if.end72

land.lhs.true66:                                  ; preds = %if.end60
  %42 = load i32* %i, align 4
  %idxprom67 = sext i32 %42 to i64
  %arrayidx68 = getelementptr inbounds [144 x i32]* @squares, i32 0, i64 %idxprom67
  %43 = load i32* %arrayidx68, align 4
  %cmp69 = icmp ne i32 %43, 0
  br i1 %cmp69, label %if.then70, label %if.end72

if.then70:                                        ; preds = %land.lhs.true66
  %call71 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([37 x i8]* @.str65462, i32 0, i32 0))
  %44 = load %struct._IO_FILE** @stdout, align 8
  %bitcast99 = bitcast %struct._IO_FILE** @stdout to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast99, i8** %base.alloca100, i8** %bound.alloca101)
  %base.load102 = load i8** %base.alloca100
  %bound.load103 = load i8** %bound.alloca101
  call void @__softboundcets_allocate_shadow_stack_space(i32 2)
  call void @__softboundcets_store_base_shadow_stack(i8* %base.load102, i32 1)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bound.load103, i32 1)
  call void @display_board(%struct._IO_FILE* %44, i32 0)
  call void @__softboundcets_deallocate_shadow_stack_space()
  store i32 0, i32* null, align 4
  br label %if.end72

if.end72:                                         ; preds = %if.then70, %land.lhs.true66, %if.end60
  br label %for.inc73

for.inc73:                                        ; preds = %if.end72
  %45 = load i32* %i, align 4
  %inc74 = add nsw i32 %45, 1
  store i32 %inc74, i32* %i, align 4
  br label %for.cond31

for.end75:                                        ; preds = %for.cond31
  ret void
}

declare i32 @_IO_getc(%struct._IO_FILE*) #2

; Function Attrs: nounwind uwtable
define internal void @start_up() #0 {
entry:
  %call = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([71 x i8]* @.str66463, i32 0, i32 0))
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @toggle_bool(i32* %var) #0 {
entry:
  %base.alloca10 = alloca i8*
  %bound.alloca11 = alloca i8*
  %base.alloca5 = alloca i8*
  %bound.alloca6 = alloca i8*
  %base.alloca = alloca i8*
  %bound.alloca = alloca i8*
  %0 = call i8* @__softboundcets_load_base_shadow_stack(i32 1)
  %1 = call i8* @__softboundcets_load_bound_shadow_stack(i32 1)
  %var.addr = alloca i32*, align 8
  %var.addr1 = bitcast i32** %var.addr to i32**
  %bitcast = bitcast i32** %var.addr to i8*
  %mtmp = getelementptr i32** %var.addr1, i32 1
  %bitcast2 = bitcast i32** %mtmp to i8*
  store i32* %var, i32** %var.addr, align 8
  %bitcast14 = bitcast i32** %var.addr to i8*
  call void @__softboundcets_metadata_store(i8* %bitcast14, i8* %0, i8* %1)
  %2 = load i32** %var.addr, align 8
  %bitcast3 = bitcast i32** %var.addr to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast3, i8** %base.alloca, i8** %bound.alloca)
  %base.load = load i8** %base.alloca
  %bound.load = load i8** %bound.alloca
  %3 = load i32* %2, align 4
  %tobool = icmp ne i32 %3, 0
  br i1 %tobool, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  %4 = load i32** %var.addr, align 8
  %bitcast4 = bitcast i32** %var.addr to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast4, i8** %base.alloca5, i8** %bound.alloca6)
  %base.load7 = load i8** %base.alloca5
  %bound.load8 = load i8** %bound.alloca6
  store i32 0, i32* %4, align 4
  br label %if.end

if.else:                                          ; preds = %entry
  %5 = load i32** %var.addr, align 8
  %bitcast9 = bitcast i32** %var.addr to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast9, i8** %base.alloca10, i8** %bound.alloca11)
  %base.load12 = load i8** %base.alloca10
  %bound.load13 = load i8** %bound.alloca11
  store i32 1, i32* %5, align 4
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @tree_debug() #0 {
entry:
  %base.alloca52 = alloca i8*
  %bound.alloca53 = alloca i8*
  %base.alloca47 = alloca i8*
  %bound.alloca48 = alloca i8*
  %base.alloca42 = alloca i8*
  %bound.alloca43 = alloca i8*
  %base.alloca37 = alloca i8*
  %bound.alloca38 = alloca i8*
  %base.alloca32 = alloca i8*
  %bound.alloca33 = alloca i8*
  %base.alloca = alloca i8*
  %bound.alloca = alloca i8*
  %input = alloca [256 x i8], align 16
  %input20 = bitcast [256 x i8]* %input to [256 x i8]*
  %bitcast = bitcast [256 x i8]* %input to i8*
  %mtmp = getelementptr [256 x i8]* %input20, i32 1
  %bitcast21 = bitcast [256 x i8]* %mtmp to i8*
  %stream = alloca %struct._IO_FILE*, align 8
  %stream22 = bitcast %struct._IO_FILE** %stream to %struct._IO_FILE**
  %bitcast23 = bitcast %struct._IO_FILE** %stream to i8*
  %mtmp24 = getelementptr %struct._IO_FILE** %stream22, i32 1
  %bitcast25 = bitcast %struct._IO_FILE** %mtmp24 to i8*
  %depth = alloca i32, align 4
  %depth26 = bitcast i32* %depth to i32*
  %bitcast27 = bitcast i32* %depth to i8*
  %mtmp28 = getelementptr i32* %depth26, i32 1
  %bitcast29 = bitcast i32* %mtmp28 to i8*
  call void @init_game()
  %call = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([34 x i8]* @.str67464, i32 0, i32 0))
  %arraydecay = getelementptr inbounds [256 x i8]* %input, i32 0, i32 0
  %0 = load %struct._IO_FILE** @stdin, align 8
  %bitcast30 = bitcast %struct._IO_FILE** @stdin to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast30, i8** %base.alloca, i8** %bound.alloca)
  %base.load = load i8** %base.alloca
  %bound.load = load i8** %bound.alloca
  call void @__softboundcets_allocate_shadow_stack_space(i32 3)
  call void @__softboundcets_store_base_shadow_stack(i8* %bitcast, i32 1)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bitcast21, i32 1)
  call void @__softboundcets_store_base_shadow_stack(i8* %base.load, i32 2)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bound.load, i32 2)
  call void @rinput(i8* %arraydecay, i32 256, %struct._IO_FILE* %0)
  call void @__softboundcets_deallocate_shadow_stack_space()
  %arraydecay1 = getelementptr inbounds [256 x i8]* %input, i32 0, i32 0
  call void @__softboundcets_allocate_shadow_stack_space(i32 2)
  call void @__softboundcets_store_base_shadow_stack(i8* %bitcast, i32 1)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bitcast21, i32 1)
  %call2 = call i32 @softboundcets_atoi(i8* %arraydecay1) #6
  call void @__softboundcets_deallocate_shadow_stack_space()
  store i32 %call2, i32* %depth, align 4
  %call3 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([37 x i8]* @.str68465, i32 0, i32 0))
  %arraydecay4 = getelementptr inbounds [256 x i8]* %input, i32 0, i32 0
  %1 = load %struct._IO_FILE** @stdin, align 8
  %bitcast31 = bitcast %struct._IO_FILE** @stdin to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast31, i8** %base.alloca32, i8** %bound.alloca33)
  %base.load34 = load i8** %base.alloca32
  %bound.load35 = load i8** %bound.alloca33
  call void @__softboundcets_allocate_shadow_stack_space(i32 3)
  call void @__softboundcets_store_base_shadow_stack(i8* %bitcast, i32 1)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bitcast21, i32 1)
  call void @__softboundcets_store_base_shadow_stack(i8* %base.load34, i32 2)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bound.load35, i32 2)
  call void @rinput(i8* %arraydecay4, i32 256, %struct._IO_FILE* %1)
  call void @__softboundcets_deallocate_shadow_stack_space()
  %arrayidx = getelementptr inbounds [256 x i8]* %input, i32 0, i64 0
  %2 = load i8* %arrayidx, align 1
  %conv = sext i8 %2 to i32
  %cmp = icmp eq i32 %conv, 121
  br i1 %cmp, label %if.then, label %if.end18

if.then:                                          ; preds = %entry
  %call6 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([56 x i8]* @.str69466, i32 0, i32 0))
  %arraydecay7 = getelementptr inbounds [256 x i8]* %input, i32 0, i32 0
  %3 = load %struct._IO_FILE** @stdin, align 8
  %bitcast36 = bitcast %struct._IO_FILE** @stdin to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast36, i8** %base.alloca37, i8** %bound.alloca38)
  %base.load39 = load i8** %base.alloca37
  %bound.load40 = load i8** %bound.alloca38
  call void @__softboundcets_allocate_shadow_stack_space(i32 3)
  call void @__softboundcets_store_base_shadow_stack(i8* %bitcast, i32 1)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bitcast21, i32 1)
  call void @__softboundcets_store_base_shadow_stack(i8* %base.load39, i32 2)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bound.load40, i32 2)
  call void @rinput(i8* %arraydecay7, i32 256, %struct._IO_FILE* %3)
  call void @__softboundcets_deallocate_shadow_stack_space()
  %arraydecay8 = getelementptr inbounds [256 x i8]* %input, i32 0, i32 0
  call void @__softboundcets_allocate_shadow_stack_space(i32 3)
  call void @__softboundcets_store_base_shadow_stack(i8* %bitcast, i32 1)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bitcast21, i32 1)
  call void @__softboundcets_store_base_shadow_stack(i8* getelementptr inbounds ([2 x i8]* @.str70467, i32 0, i32 0), i32 2)
  call void @__softboundcets_store_bound_shadow_stack(i8* getelementptr inbounds ([2 x i8]* @.str70467, i32 1, i32 0), i32 2)
  %call9 = call %struct._IO_FILE* @softboundcets_fopen(i8* %arraydecay8, i8* getelementptr inbounds ([2 x i8]* @.str70467, i32 0, i32 0))
  %4 = call i8* @__softboundcets_load_base_shadow_stack(i32 0)
  %5 = call i8* @__softboundcets_load_bound_shadow_stack(i32 0)
  call void @__softboundcets_deallocate_shadow_stack_space()
  store %struct._IO_FILE* %call9, %struct._IO_FILE** %stream, align 8
  %bitcast56 = bitcast %struct._IO_FILE** %stream to i8*
  call void @__softboundcets_metadata_store(i8* %bitcast56, i8* %4, i8* %5)
  %cmp10 = icmp eq %struct._IO_FILE* %call9, null
  br i1 %cmp10, label %if.then12, label %if.end

if.then12:                                        ; preds = %if.then
  %6 = load %struct._IO_FILE** @stderr, align 8
  %bitcast41 = bitcast %struct._IO_FILE** @stderr to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast41, i8** %base.alloca42, i8** %bound.alloca43)
  %base.load44 = load i8** %base.alloca42
  %bound.load45 = load i8** %bound.alloca43
  %arraydecay13 = getelementptr inbounds [256 x i8]* %input, i32 0, i32 0
  %call14 = call i32 (%struct._IO_FILE*, i8*, ...)* @fprintf(%struct._IO_FILE* %6, i8* getelementptr inbounds ([23 x i8]* @.str71468, i32 0, i32 0), i8* %arraydecay13)
  br label %if.end

if.end:                                           ; preds = %if.then12, %if.then
  %call15 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([40 x i8]* @.str72469, i32 0, i32 0))
  %arraydecay16 = getelementptr inbounds [256 x i8]* %input, i32 0, i32 0
  %7 = load %struct._IO_FILE** @stdin, align 8
  %bitcast46 = bitcast %struct._IO_FILE** @stdin to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast46, i8** %base.alloca47, i8** %bound.alloca48)
  %base.load49 = load i8** %base.alloca47
  %bound.load50 = load i8** %bound.alloca48
  call void @__softboundcets_allocate_shadow_stack_space(i32 3)
  call void @__softboundcets_store_base_shadow_stack(i8* %bitcast, i32 1)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bitcast21, i32 1)
  call void @__softboundcets_store_base_shadow_stack(i8* %base.load49, i32 2)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bound.load50, i32 2)
  call void @rinput(i8* %arraydecay16, i32 256, %struct._IO_FILE* %7)
  call void @__softboundcets_deallocate_shadow_stack_space()
  %8 = load i32* %depth, align 4
  %9 = load %struct._IO_FILE** %stream, align 8
  %bitcast51 = bitcast %struct._IO_FILE** %stream to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast51, i8** %base.alloca52, i8** %bound.alloca53)
  %base.load54 = load i8** %base.alloca52
  %bound.load55 = load i8** %bound.alloca53
  %arraydecay17 = getelementptr inbounds [256 x i8]* %input, i32 0, i32 0
  call void @__softboundcets_allocate_shadow_stack_space(i32 3)
  call void @__softboundcets_store_base_shadow_stack(i8* %base.load54, i32 1)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bound.load55, i32 1)
  call void @__softboundcets_store_base_shadow_stack(i8* %bitcast, i32 2)
  call void @__softboundcets_store_bound_shadow_stack(i8* %bitcast21, i32 2)
  call void @tree(i32 %8, i32 0, %struct._IO_FILE* %9, i8* %arraydecay17)
  call void @__softboundcets_deallocate_shadow_stack_space()
  br label %if.end18

if.end18:                                         ; preds = %if.end, %entry
  store i32 0, i32* @raw_nodes, align 4
  %10 = load i32* %depth, align 4
  call void @perft(i32 %10)
  %11 = load i32* %depth, align 4
  %12 = load i32* @raw_nodes, align 4
  %call19 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([37 x i8]* @.str73470, i32 0, i32 0), i8* getelementptr inbounds ([50 x i8]* @divider, i32 0, i32 0), i32 %11, i32 %12, i8* getelementptr inbounds ([50 x i8]* @divider, i32 0, i32 0))
  ret void
}

; Function Attrs: nounwind uwtable
define internal i32 @interrupt() #0 {
entry:
  ret i32 0
}

; Function Attrs: nounwind uwtable
define internal void @PutPiece(i32 %color, i8 signext %piece, i8 signext %pfile, i32 %prank) #0 {
entry:
  %color.addr = alloca i32, align 4
  %color.addr50 = bitcast i32* %color.addr to i32*
  %bitcast = bitcast i32* %color.addr to i8*
  %mtmp = getelementptr i32* %color.addr50, i32 1
  %bitcast51 = bitcast i32* %mtmp to i8*
  %piece.addr = alloca i8, align 1
  %piece.addr52 = bitcast i8* %piece.addr to i8*
  %mtmp53 = getelementptr i8* %piece.addr52, i32 1
  %pfile.addr = alloca i8, align 1
  %pfile.addr54 = bitcast i8* %pfile.addr to i8*
  %mtmp55 = getelementptr i8* %pfile.addr54, i32 1
  %prank.addr = alloca i32, align 4
  %prank.addr56 = bitcast i32* %prank.addr to i32*
  %bitcast57 = bitcast i32* %prank.addr to i8*
  %mtmp58 = getelementptr i32* %prank.addr56, i32 1
  %bitcast59 = bitcast i32* %mtmp58 to i8*
  %converterf = alloca i32, align 4
  %converterf60 = bitcast i32* %converterf to i32*
  %bitcast61 = bitcast i32* %converterf to i8*
  %mtmp62 = getelementptr i32* %converterf60, i32 1
  %bitcast63 = bitcast i32* %mtmp62 to i8*
  %converterr = alloca i32, align 4
  %converterr64 = bitcast i32* %converterr to i32*
  %bitcast65 = bitcast i32* %converterr to i8*
  %mtmp66 = getelementptr i32* %converterr64, i32 1
  %bitcast67 = bitcast i32* %mtmp66 to i8*
  %norm_file = alloca i32, align 4
  %norm_file68 = bitcast i32* %norm_file to i32*
  %bitcast69 = bitcast i32* %norm_file to i8*
  %mtmp70 = getelementptr i32* %norm_file68, i32 1
  %bitcast71 = bitcast i32* %mtmp70 to i8*
  %norm_rank = alloca i32, align 4
  %norm_rank72 = bitcast i32* %norm_rank to i32*
  %bitcast73 = bitcast i32* %norm_rank to i8*
  %mtmp74 = getelementptr i32* %norm_rank72, i32 1
  %bitcast75 = bitcast i32* %mtmp74 to i8*
  %norm_square = alloca i32, align 4
  %norm_square76 = bitcast i32* %norm_square to i32*
  %bitcast77 = bitcast i32* %norm_square to i8*
  %mtmp78 = getelementptr i32* %norm_square76, i32 1
  %bitcast79 = bitcast i32* %mtmp78 to i8*
  store i32 %color, i32* %color.addr, align 4
  store i8 %piece, i8* %piece.addr, align 1
  store i8 %pfile, i8* %pfile.addr, align 1
  store i32 %prank, i32* %prank.addr, align 4
  store i32 97, i32* %converterf, align 4
  store i32 49, i32* %converterr, align 4
  %0 = load i8* %pfile.addr, align 1
  %conv = sext i8 %0 to i32
  %1 = load i32* %converterf, align 4
  %sub = sub nsw i32 %conv, %1
  store i32 %sub, i32* %norm_file, align 4
  %2 = load i32* %prank.addr, align 4
  %3 = load i32* %converterr, align 4
  %sub1 = sub nsw i32 %2, %3
  store i32 %sub1, i32* %norm_rank, align 4
  %4 = load i32* %norm_rank, align 4
  %mul = mul nsw i32 %4, 12
  %add = add nsw i32 %mul, 26
  %5 = load i32* %norm_file, align 4
  %add2 = add nsw i32 %add, %5
  store i32 %add2, i32* %norm_square, align 4
  %6 = load i32* %color.addr, align 4
  %cmp = icmp eq i32 %6, 0
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  %7 = load i8* %piece.addr, align 1
  %conv4 = sext i8 %7 to i32
  switch i32 %conv4, label %sw.epilog [
    i32 112, label %sw.bb
    i32 110, label %sw.bb5
    i32 98, label %sw.bb8
    i32 114, label %sw.bb11
    i32 113, label %sw.bb14
    i32 107, label %sw.bb17
    i32 120, label %sw.bb20
  ]

sw.bb:                                            ; preds = %if.then
  %8 = load i32* %norm_square, align 4
  %idxprom = sext i32 %8 to i64
  %arrayidx = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom
  store i32 1, i32* %arrayidx, align 4
  br label %sw.epilog

sw.bb5:                                           ; preds = %if.then
  %9 = load i32* %norm_square, align 4
  %idxprom6 = sext i32 %9 to i64
  %arrayidx7 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom6
  store i32 3, i32* %arrayidx7, align 4
  br label %sw.epilog

sw.bb8:                                           ; preds = %if.then
  %10 = load i32* %norm_square, align 4
  %idxprom9 = sext i32 %10 to i64
  %arrayidx10 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom9
  store i32 11, i32* %arrayidx10, align 4
  br label %sw.epilog

sw.bb11:                                          ; preds = %if.then
  %11 = load i32* %norm_square, align 4
  %idxprom12 = sext i32 %11 to i64
  %arrayidx13 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom12
  store i32 7, i32* %arrayidx13, align 4
  br label %sw.epilog

sw.bb14:                                          ; preds = %if.then
  %12 = load i32* %norm_square, align 4
  %idxprom15 = sext i32 %12 to i64
  %arrayidx16 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom15
  store i32 9, i32* %arrayidx16, align 4
  br label %sw.epilog

sw.bb17:                                          ; preds = %if.then
  %13 = load i32* %norm_square, align 4
  %idxprom18 = sext i32 %13 to i64
  %arrayidx19 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom18
  store i32 5, i32* %arrayidx19, align 4
  br label %sw.epilog

sw.bb20:                                          ; preds = %if.then
  %14 = load i32* %norm_square, align 4
  %idxprom21 = sext i32 %14 to i64
  %arrayidx22 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom21
  store i32 13, i32* %arrayidx22, align 4
  br label %sw.epilog

sw.epilog:                                        ; preds = %sw.bb20, %sw.bb17, %sw.bb14, %sw.bb11, %sw.bb8, %sw.bb5, %sw.bb, %if.then
  br label %if.end49

if.else:                                          ; preds = %entry
  %15 = load i32* %color.addr, align 4
  %cmp23 = icmp eq i32 %15, 1
  br i1 %cmp23, label %if.then25, label %if.end

if.then25:                                        ; preds = %if.else
  %16 = load i8* %piece.addr, align 1
  %conv26 = sext i8 %16 to i32
  switch i32 %conv26, label %sw.epilog48 [
    i32 112, label %sw.bb27
    i32 110, label %sw.bb30
    i32 98, label %sw.bb33
    i32 114, label %sw.bb36
    i32 113, label %sw.bb39
    i32 107, label %sw.bb42
    i32 120, label %sw.bb45
  ]

sw.bb27:                                          ; preds = %if.then25
  %17 = load i32* %norm_square, align 4
  %idxprom28 = sext i32 %17 to i64
  %arrayidx29 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom28
  store i32 2, i32* %arrayidx29, align 4
  br label %sw.epilog48

sw.bb30:                                          ; preds = %if.then25
  %18 = load i32* %norm_square, align 4
  %idxprom31 = sext i32 %18 to i64
  %arrayidx32 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom31
  store i32 4, i32* %arrayidx32, align 4
  br label %sw.epilog48

sw.bb33:                                          ; preds = %if.then25
  %19 = load i32* %norm_square, align 4
  %idxprom34 = sext i32 %19 to i64
  %arrayidx35 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom34
  store i32 12, i32* %arrayidx35, align 4
  br label %sw.epilog48

sw.bb36:                                          ; preds = %if.then25
  %20 = load i32* %norm_square, align 4
  %idxprom37 = sext i32 %20 to i64
  %arrayidx38 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom37
  store i32 8, i32* %arrayidx38, align 4
  br label %sw.epilog48

sw.bb39:                                          ; preds = %if.then25
  %21 = load i32* %norm_square, align 4
  %idxprom40 = sext i32 %21 to i64
  %arrayidx41 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom40
  store i32 10, i32* %arrayidx41, align 4
  br label %sw.epilog48

sw.bb42:                                          ; preds = %if.then25
  %22 = load i32* %norm_square, align 4
  %idxprom43 = sext i32 %22 to i64
  %arrayidx44 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom43
  store i32 6, i32* %arrayidx44, align 4
  br label %sw.epilog48

sw.bb45:                                          ; preds = %if.then25
  %23 = load i32* %norm_square, align 4
  %idxprom46 = sext i32 %23 to i64
  %arrayidx47 = getelementptr inbounds [144 x i32]* @board, i32 0, i64 %idxprom46
  store i32 13, i32* %arrayidx47, align 4
  br label %sw.epilog48

sw.epilog48:                                      ; preds = %sw.bb45, %sw.bb42, %sw.bb39, %sw.bb36, %sw.bb33, %sw.bb30, %sw.bb27, %if.then25
  br label %if.end

if.end:                                           ; preds = %sw.epilog48, %if.else
  br label %if.end49

if.end49:                                         ; preds = %if.end, %sw.epilog
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @reset_board() #0 {
entry:
  %i = alloca i32, align 4
  %i1 = bitcast i32* %i to i32*
  %bitcast = bitcast i32* %i to i8*
  %mtmp = getelementptr i32* %i1, i32 1
  %bitcast2 = bitcast i32* %mtmp to i8*
  %init_board = alloca [144 x i32], align 16
  %init_board3 = bitcast [144 x i32]* %init_board to [144 x i32]*
  %bitcast4 = bitcast [144 x i32]* %init_board to i8*
  %mtmp5 = getelementptr [144 x i32]* %init_board3, i32 1
  %bitcast6 = bitcast [144 x i32]* %mtmp5 to i8*
  %0 = bitcast [144 x i32]* %init_board to i8*
  call void @__softboundcets_memcopy_check(i8* %0, i8* bitcast ([144 x i32]* @reset_board.init_board to i8*), i64 576, i8* %bitcast4, i8* %bitcast6, i8* bitcast ([144 x i32]* @reset_board.init_board to i8*), i8* bitcast ([144 x i32]* getelementptr inbounds ([144 x i32]* @reset_board.init_board, i32 1) to i8*))
  call void @__softboundcets_copy_metadata(i8* %0, i8* bitcast ([144 x i32]* @reset_board.init_board to i8*), i64 576)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %0, i8* bitcast ([144 x i32]* @reset_board.init_board to i8*), i64 576, i32 16, i1 false)
  %1 = bitcast [144 x i32]* %init_board to i8*
  call void @__softboundcets_memcopy_check(i8* bitcast ([144 x i32]* @board to i8*), i8* %1, i64 576, i8* null, i8* inttoptr (i64 281474976710656 to i8*), i8* %bitcast4, i8* %bitcast6)
  call void @__softboundcets_copy_metadata(i8* bitcast ([144 x i32]* @board to i8*), i8* %1, i64 576)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* bitcast ([144 x i32]* @board to i8*), i8* %1, i64 576, i32 16, i1 false)
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %2 = load i32* %i, align 4
  %cmp = icmp sle i32 %2, 143
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %3 = load i32* %i, align 4
  %idxprom = sext i32 %3 to i64
  %arrayidx = getelementptr inbounds [144 x i32]* @moved, i32 0, i64 %idxprom
  store i32 0, i32* %arrayidx, align 4
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %4 = load i32* %i, align 4
  %inc = add nsw i32 %4, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  store i32 0, i32* @ep_square, align 4
  store i32 0, i32* @piece_count, align 4
  store i32 0, i32* @Material, align 4
  call void @__softboundcets_memset_check(i8* bitcast ([62 x i32]* @is_promoted to i8*), i64 248, i8* null, i8* inttoptr (i64 281474976710656 to i8*))
  call void @llvm.memset.p0i8.i64(i8* bitcast ([62 x i32]* @is_promoted to i8*), i8 0, i64 248, i32 16, i1 false)
  call void @__softboundcets_memset_check(i8* bitcast ([2 x [16 x i32]]* @holding to i8*), i64 128, i8* null, i8* inttoptr (i64 281474976710656 to i8*))
  call void @llvm.memset.p0i8.i64(i8* bitcast ([2 x [16 x i32]]* @holding to i8*), i8 0, i64 128, i32 16, i1 false)
  store i32 0, i32* @white_hand_eval, align 4
  store i32 0, i32* @black_hand_eval, align 4
  store i32 0, i32* @bookidx, align 4
  store i32 0, i32* @fifty, align 4
  call void @reset_piece_square()
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @seedMT(i32 %seed) #0 {
entry:
  %base.alloca18 = alloca i8*
  %bound.alloca19 = alloca i8*
  %base.alloca = alloca i8*
  %bound.alloca = alloca i8*
  %seed.addr = alloca i32, align 4
  %seed.addr2 = bitcast i32* %seed.addr to i32*
  %bitcast = bitcast i32* %seed.addr to i8*
  %mtmp = getelementptr i32* %seed.addr2, i32 1
  %bitcast3 = bitcast i32* %mtmp to i8*
  %x = alloca i32, align 4
  %x4 = bitcast i32* %x to i32*
  %bitcast5 = bitcast i32* %x to i8*
  %mtmp6 = getelementptr i32* %x4, i32 1
  %bitcast7 = bitcast i32* %mtmp6 to i8*
  %s = alloca i32*, align 8
  %s8 = bitcast i32** %s to i32**
  %bitcast9 = bitcast i32** %s to i8*
  %mtmp10 = getelementptr i32** %s8, i32 1
  %bitcast11 = bitcast i32** %mtmp10 to i8*
  %j = alloca i32, align 4
  %j12 = bitcast i32* %j to i32*
  %bitcast13 = bitcast i32* %j to i8*
  %mtmp14 = getelementptr i32* %j12, i32 1
  %bitcast15 = bitcast i32* %mtmp14 to i8*
  store i32 %seed, i32* %seed.addr, align 4
  %0 = load i32* %seed.addr, align 4
  %or = or i32 %0, 1
  store i32 %or, i32* %x, align 4
  store i32* getelementptr inbounds ([625 x i32]* @state, i32 0, i32 0), i32** %s, align 8
  %bitcast22 = bitcast i32** %s to i8*
  %bitcast23 = bitcast [625 x i32]* @state to i8*
  %bitcast24 = bitcast [625 x i32]* getelementptr inbounds ([625 x i32]* @state, i32 1) to i8*
  call void @__softboundcets_metadata_store(i8* %bitcast22, i8* %bitcast23, i8* %bitcast24)
  store i32 0, i32* @left, align 4
  %1 = load i32* %x, align 4
  %2 = load i32** %s, align 8
  %bitcast16 = bitcast i32** %s to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast16, i8** %base.alloca, i8** %bound.alloca)
  %base.load = load i8** %base.alloca
  %bound.load = load i8** %bound.alloca
  %incdec.ptr = getelementptr inbounds i32* %2, i32 1
  store i32* %incdec.ptr, i32** %s, align 8
  %bitcast25 = bitcast i32** %s to i8*
  call void @__softboundcets_metadata_store(i8* %bitcast25, i8* %base.load, i8* %bound.load)
  store i32 %1, i32* %2, align 4
  store i32 624, i32* %j, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %3 = load i32* %j, align 4
  %dec = add nsw i32 %3, -1
  store i32 %dec, i32* %j, align 4
  %tobool = icmp ne i32 %dec, 0
  br i1 %tobool, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %4 = load i32* %x, align 4
  %mul = mul i32 %4, 69069
  store i32 %mul, i32* %x, align 4
  %5 = load i32** %s, align 8
  %bitcast17 = bitcast i32** %s to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast17, i8** %base.alloca18, i8** %bound.alloca19)
  %base.load20 = load i8** %base.alloca18
  %bound.load21 = load i8** %bound.alloca19
  %incdec.ptr1 = getelementptr inbounds i32* %5, i32 1
  store i32* %incdec.ptr1, i32** %s, align 8
  %bitcast26 = bitcast i32** %s to i8*
  call void @__softboundcets_metadata_store(i8* %bitcast26, i8* %base.load20, i8* %bound.load21)
  store i32 %mul, i32* %5, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  ret void
}

; Function Attrs: nounwind uwtable
define internal i32 @reloadMT() #0 {
entry:
  %base.alloca97 = alloca i8*
  %bound.alloca98 = alloca i8*
  %base.alloca92 = alloca i8*
  %bound.alloca93 = alloca i8*
  %base.alloca87 = alloca i8*
  %bound.alloca88 = alloca i8*
  %base.alloca82 = alloca i8*
  %bound.alloca83 = alloca i8*
  %base.alloca77 = alloca i8*
  %bound.alloca78 = alloca i8*
  %base.alloca72 = alloca i8*
  %bound.alloca73 = alloca i8*
  %base.alloca67 = alloca i8*
  %bound.alloca68 = alloca i8*
  %base.alloca = alloca i8*
  %bound.alloca = alloca i8*
  %p0 = alloca i32*, align 8
  %p043 = bitcast i32** %p0 to i32**
  %bitcast = bitcast i32** %p0 to i8*
  %mtmp = getelementptr i32** %p043, i32 1
  %bitcast44 = bitcast i32** %mtmp to i8*
  %p2 = alloca i32*, align 8
  %p245 = bitcast i32** %p2 to i32**
  %bitcast46 = bitcast i32** %p2 to i8*
  %mtmp47 = getelementptr i32** %p245, i32 1
  %bitcast48 = bitcast i32** %mtmp47 to i8*
  %pM = alloca i32*, align 8
  %pM49 = bitcast i32** %pM to i32**
  %bitcast50 = bitcast i32** %pM to i8*
  %mtmp51 = getelementptr i32** %pM49, i32 1
  %bitcast52 = bitcast i32** %mtmp51 to i8*
  %s0 = alloca i32, align 4
  %s053 = bitcast i32* %s0 to i32*
  %bitcast54 = bitcast i32* %s0 to i8*
  %mtmp55 = getelementptr i32* %s053, i32 1
  %bitcast56 = bitcast i32* %mtmp55 to i8*
  %s1 = alloca i32, align 4
  %s157 = bitcast i32* %s1 to i32*
  %bitcast58 = bitcast i32* %s1 to i8*
  %mtmp59 = getelementptr i32* %s157, i32 1
  %bitcast60 = bitcast i32* %mtmp59 to i8*
  %j = alloca i32, align 4
  %j61 = bitcast i32* %j to i32*
  %bitcast62 = bitcast i32* %j to i8*
  %mtmp63 = getelementptr i32* %j61, i32 1
  %bitcast64 = bitcast i32* %mtmp63 to i8*
  store i32* getelementptr inbounds ([625 x i32]* @state, i32 0, i32 0), i32** %p0, align 8
  %bitcast101 = bitcast i32** %p0 to i8*
  %bitcast102 = bitcast [625 x i32]* @state to i8*
  %bitcast103 = bitcast [625 x i32]* getelementptr inbounds ([625 x i32]* @state, i32 1) to i8*
  call void @__softboundcets_metadata_store(i8* %bitcast101, i8* %bitcast102, i8* %bitcast103)
  store i32* getelementptr inbounds ([625 x i32]* @state, i32 0, i64 2), i32** %p2, align 8
  %bitcast104 = bitcast i32** %p2 to i8*
  %bitcast105 = bitcast [625 x i32]* @state to i8*
  %bitcast106 = bitcast [625 x i32]* getelementptr inbounds ([625 x i32]* @state, i32 1) to i8*
  call void @__softboundcets_metadata_store(i8* %bitcast104, i8* %bitcast105, i8* %bitcast106)
  store i32* getelementptr inbounds ([625 x i32]* @state, i32 0, i64 397), i32** %pM, align 8
  %bitcast107 = bitcast i32** %pM to i8*
  %bitcast108 = bitcast [625 x i32]* @state to i8*
  %bitcast109 = bitcast [625 x i32]* getelementptr inbounds ([625 x i32]* @state, i32 1) to i8*
  call void @__softboundcets_metadata_store(i8* %bitcast107, i8* %bitcast108, i8* %bitcast109)
  %0 = load i32* @left, align 4
  %cmp = icmp slt i32 %0, -1
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  call void @seedMT(i32 4357)
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  store i32 623, i32* @left, align 4
  store i32* getelementptr inbounds ([625 x i32]* @state, i32 0, i64 1), i32** @next, align 8
  %bitcast110 = bitcast i32** @next to i8*
  %bitcast111 = bitcast [625 x i32]* @state to i8*
  %bitcast112 = bitcast [625 x i32]* getelementptr inbounds ([625 x i32]* @state, i32 1) to i8*
  call void @__softboundcets_metadata_store(i8* %bitcast110, i8* %bitcast111, i8* %bitcast112)
  %1 = load i32* getelementptr inbounds ([625 x i32]* @state, i32 0, i64 0), align 4
  store i32 %1, i32* %s0, align 4
  %2 = load i32* getelementptr inbounds ([625 x i32]* @state, i32 0, i64 1), align 4
  store i32 %2, i32* %s1, align 4
  store i32 228, i32* %j, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.end
  %3 = load i32* %j, align 4
  %dec = add nsw i32 %3, -1
  store i32 %dec, i32* %j, align 4
  %tobool = icmp ne i32 %dec, 0
  br i1 %tobool, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %4 = load i32** %pM, align 8
  %bitcast65 = bitcast i32** %pM to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast65, i8** %base.alloca, i8** %bound.alloca)
  %base.load = load i8** %base.alloca
  %bound.load = load i8** %bound.alloca
  %incdec.ptr = getelementptr inbounds i32* %4, i32 1
  store i32* %incdec.ptr, i32** %pM, align 8
  %bitcast113 = bitcast i32** %pM to i8*
  call void @__softboundcets_metadata_store(i8* %bitcast113, i8* %base.load, i8* %bound.load)
  %5 = load i32* %4, align 4
  %6 = load i32* %s0, align 4
  %and = and i32 %6, -2147483648
  %7 = load i32* %s1, align 4
  %and1 = and i32 %7, 2147483647
  %or = or i32 %and, %and1
  %shr = lshr i32 %or, 1
  %xor = xor i32 %5, %shr
  %8 = load i32* %s1, align 4
  %and2 = and i32 %8, 1
  %tobool3 = icmp ne i32 %and2, 0
  %cond = select i1 %tobool3, i32 -1727483681, i32 0
  %xor4 = xor i32 %xor, %cond
  %9 = load i32** %p0, align 8
  %bitcast66 = bitcast i32** %p0 to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast66, i8** %base.alloca67, i8** %bound.alloca68)
  %base.load69 = load i8** %base.alloca67
  %bound.load70 = load i8** %bound.alloca68
  %incdec.ptr5 = getelementptr inbounds i32* %9, i32 1
  store i32* %incdec.ptr5, i32** %p0, align 8
  %bitcast114 = bitcast i32** %p0 to i8*
  call void @__softboundcets_metadata_store(i8* %bitcast114, i8* %base.load69, i8* %bound.load70)
  store i32 %xor4, i32* %9, align 4
  br label %for.inc

for.inc:                                          ; preds = %for.body
  %10 = load i32* %s1, align 4
  store i32 %10, i32* %s0, align 4
  %11 = load i32** %p2, align 8
  %bitcast71 = bitcast i32** %p2 to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast71, i8** %base.alloca72, i8** %bound.alloca73)
  %base.load74 = load i8** %base.alloca72
  %bound.load75 = load i8** %bound.alloca73
  %incdec.ptr6 = getelementptr inbounds i32* %11, i32 1
  store i32* %incdec.ptr6, i32** %p2, align 8
  %bitcast118 = bitcast i32** %p2 to i8*
  call void @__softboundcets_metadata_store(i8* %bitcast118, i8* %base.load74, i8* %bound.load75)
  %12 = load i32* %11, align 4
  store i32 %12, i32* %s1, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  store i32* getelementptr inbounds ([625 x i32]* @state, i32 0, i32 0), i32** %pM, align 8
  %bitcast115 = bitcast i32** %pM to i8*
  %bitcast116 = bitcast [625 x i32]* @state to i8*
  %bitcast117 = bitcast [625 x i32]* getelementptr inbounds ([625 x i32]* @state, i32 1) to i8*
  call void @__softboundcets_metadata_store(i8* %bitcast115, i8* %bitcast116, i8* %bitcast117)
  store i32 397, i32* %j, align 4
  br label %for.cond7

for.cond7:                                        ; preds = %for.inc22, %for.end
  %13 = load i32* %j, align 4
  %dec8 = add nsw i32 %13, -1
  store i32 %dec8, i32* %j, align 4
  %tobool9 = icmp ne i32 %dec8, 0
  br i1 %tobool9, label %for.body10, label %for.end24

for.body10:                                       ; preds = %for.cond7
  %14 = load i32** %pM, align 8
  %bitcast76 = bitcast i32** %pM to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast76, i8** %base.alloca77, i8** %bound.alloca78)
  %base.load79 = load i8** %base.alloca77
  %bound.load80 = load i8** %bound.alloca78
  %incdec.ptr11 = getelementptr inbounds i32* %14, i32 1
  store i32* %incdec.ptr11, i32** %pM, align 8
  %bitcast119 = bitcast i32** %pM to i8*
  call void @__softboundcets_metadata_store(i8* %bitcast119, i8* %base.load79, i8* %bound.load80)
  %15 = load i32* %14, align 4
  %16 = load i32* %s0, align 4
  %and12 = and i32 %16, -2147483648
  %17 = load i32* %s1, align 4
  %and13 = and i32 %17, 2147483647
  %or14 = or i32 %and12, %and13
  %shr15 = lshr i32 %or14, 1
  %xor16 = xor i32 %15, %shr15
  %18 = load i32* %s1, align 4
  %and17 = and i32 %18, 1
  %tobool18 = icmp ne i32 %and17, 0
  %cond19 = select i1 %tobool18, i32 -1727483681, i32 0
  %xor20 = xor i32 %xor16, %cond19
  %19 = load i32** %p0, align 8
  %bitcast81 = bitcast i32** %p0 to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast81, i8** %base.alloca82, i8** %bound.alloca83)
  %base.load84 = load i8** %base.alloca82
  %bound.load85 = load i8** %bound.alloca83
  %incdec.ptr21 = getelementptr inbounds i32* %19, i32 1
  store i32* %incdec.ptr21, i32** %p0, align 8
  %bitcast120 = bitcast i32** %p0 to i8*
  call void @__softboundcets_metadata_store(i8* %bitcast120, i8* %base.load84, i8* %bound.load85)
  store i32 %xor20, i32* %19, align 4
  br label %for.inc22

for.inc22:                                        ; preds = %for.body10
  %20 = load i32* %s1, align 4
  store i32 %20, i32* %s0, align 4
  %21 = load i32** %p2, align 8
  %bitcast96 = bitcast i32** %p2 to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast96, i8** %base.alloca97, i8** %bound.alloca98)
  %base.load99 = load i8** %base.alloca97
  %bound.load100 = load i8** %bound.alloca98
  %incdec.ptr23 = getelementptr inbounds i32* %21, i32 1
  store i32* %incdec.ptr23, i32** %p2, align 8
  %bitcast121 = bitcast i32** %p2 to i8*
  call void @__softboundcets_metadata_store(i8* %bitcast121, i8* %base.load99, i8* %bound.load100)
  %22 = load i32* %21, align 4
  store i32 %22, i32* %s1, align 4
  br label %for.cond7

for.end24:                                        ; preds = %for.cond7
  %23 = load i32* getelementptr inbounds ([625 x i32]* @state, i32 0, i64 0), align 4
  store i32 %23, i32* %s1, align 4
  %24 = load i32** %pM, align 8
  %bitcast86 = bitcast i32** %pM to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast86, i8** %base.alloca87, i8** %bound.alloca88)
  %base.load89 = load i8** %base.alloca87
  %bound.load90 = load i8** %bound.alloca88
  %25 = load i32* %24, align 4
  %26 = load i32* %s0, align 4
  %and25 = and i32 %26, -2147483648
  %27 = load i32* %s1, align 4
  %and26 = and i32 %27, 2147483647
  %or27 = or i32 %and25, %and26
  %shr28 = lshr i32 %or27, 1
  %xor29 = xor i32 %25, %shr28
  %28 = load i32* %s1, align 4
  %and30 = and i32 %28, 1
  %tobool31 = icmp ne i32 %and30, 0
  %cond32 = select i1 %tobool31, i32 -1727483681, i32 0
  %xor33 = xor i32 %xor29, %cond32
  %29 = load i32** %p0, align 8
  %bitcast91 = bitcast i32** %p0 to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast91, i8** %base.alloca92, i8** %bound.alloca93)
  %base.load94 = load i8** %base.alloca92
  %bound.load95 = load i8** %bound.alloca93
  store i32 %xor33, i32* %29, align 4
  %30 = load i32* %s1, align 4
  %shr34 = lshr i32 %30, 11
  %31 = load i32* %s1, align 4
  %xor35 = xor i32 %31, %shr34
  store i32 %xor35, i32* %s1, align 4
  %32 = load i32* %s1, align 4
  %shl = shl i32 %32, 7
  %and36 = and i32 %shl, -1658038656
  %33 = load i32* %s1, align 4
  %xor37 = xor i32 %33, %and36
  store i32 %xor37, i32* %s1, align 4
  %34 = load i32* %s1, align 4
  %shl38 = shl i32 %34, 15
  %and39 = and i32 %shl38, -272236544
  %35 = load i32* %s1, align 4
  %xor40 = xor i32 %35, %and39
  store i32 %xor40, i32* %s1, align 4
  %36 = load i32* %s1, align 4
  %37 = load i32* %s1, align 4
  %shr41 = lshr i32 %37, 18
  %xor42 = xor i32 %36, %shr41
  ret i32 %xor42
}

; Function Attrs: nounwind uwtable
define internal i32 @randomMT() #0 {
entry:
  %base.alloca = alloca i8*
  %bound.alloca = alloca i8*
  %retval = alloca i32, align 4
  %retval7 = bitcast i32* %retval to i32*
  %bitcast = bitcast i32* %retval to i8*
  %mtmp = getelementptr i32* %retval7, i32 1
  %bitcast8 = bitcast i32* %mtmp to i8*
  %y = alloca i32, align 4
  %y9 = bitcast i32* %y to i32*
  %bitcast10 = bitcast i32* %y to i8*
  %mtmp11 = getelementptr i32* %y9, i32 1
  %bitcast12 = bitcast i32* %mtmp11 to i8*
  %0 = load i32* @left, align 4
  %dec = add nsw i32 %0, -1
  store i32 %dec, i32* @left, align 4
  %cmp = icmp slt i32 %dec, 0
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %call = call i32 @reloadMT()
  store i32 %call, i32* %retval
  br label %return

if.end:                                           ; preds = %entry
  %1 = load i32** @next, align 8
  %bitcast13 = bitcast i32** @next to i8*
  call void @__softboundcets_metadata_load(i8* %bitcast13, i8** %base.alloca, i8** %bound.alloca)
  %base.load = load i8** %base.alloca
  %bound.load = load i8** %bound.alloca
  %incdec.ptr = getelementptr inbounds i32* %1, i32 1
  store i32* %incdec.ptr, i32** @next, align 8
  %bitcast14 = bitcast i32** @next to i8*
  call void @__softboundcets_metadata_store(i8* %bitcast14, i8* %base.load, i8* %bound.load)
  %2 = load i32* %1, align 4
  store i32 %2, i32* %y, align 4
  %3 = load i32* %y, align 4
  %shr = lshr i32 %3, 11
  %4 = load i32* %y, align 4
  %xor = xor i32 %4, %shr
  store i32 %xor, i32* %y, align 4
  %5 = load i32* %y, align 4
  %shl = shl i32 %5, 7
  %and = and i32 %shl, -1658038656
  %6 = load i32* %y, align 4
  %xor1 = xor i32 %6, %and
  store i32 %xor1, i32* %y, align 4
  %7 = load i32* %y, align 4
  %shl2 = shl i32 %7, 15
  %and3 = and i32 %shl2, -272236544
  %8 = load i32* %y, align 4
  %xor4 = xor i32 %8, %and3
  store i32 %xor4, i32* %y, align 4
  %9 = load i32* %y, align 4
  %10 = load i32* %y, align 4
  %shr5 = lshr i32 %10, 18
  %xor6 = xor i32 %9, %shr5
  store i32 %xor6, i32* %retval
  br label %return

return:                                           ; preds = %if.end, %if.then
  %11 = load i32* %retval
  ret i32 %11
}

attributes #0 = { nounwind uwtable "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind }
attributes #2 = { "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { noreturn nounwind }
attributes #5 = { nounwind readnone }
attributes #6 = { nounwind readonly }

!llvm.ident = !{!0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0}

!0 = metadata !{metadata !"clang version 3.5.0 (tags/RELEASE_350/final)"}
